

Microchip Technology PIC18 LITE Macro Assembler V1.36 build -262312587 
                                                                                               Sat Feb 27 22:40:59 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    52                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    53  0000                     
    54                           	psect	idataCOMRAM
    55  002ECF                     __pidataCOMRAM:
    56                           	opt stack 0
    57                           
    58                           ;initializer for _delay_quartz_frequency_value
    59  002ECF  14                 	db	20
    60                           
    61                           	psect	idataBANK0
    62  002ECC                     __pidataBANK0:
    63                           	opt stack 0
    64                           
    65                           ;initializer for _combinazioni
    66  002ECC  00                 	db	0
    67  002ECD  01                 	db	1
    68  002ECE  03                 	db	3
    69                           
    70                           	psect	smallconst
    71  000800                     __psmallconst:
    72                           	opt stack 0
    73  000800  00                 	db	0
    74  000801                     __npowers_:
    75                           	opt stack 0
    76  000801  0000               	dw	0
    77  000803  3F80               	dw	16256
    78  000805  CCCD               	dw	52429
    79  000807  3DCC               	dw	15820
    80  000809  D70A               	dw	55050
    81  00080B  3C23               	dw	15395
    82  00080D  126F               	dw	4719
    83  00080F  3A83               	dw	14979
    84  000811  B717               	dw	46871
    85  000813  38D1               	dw	14545
    86  000815  C5AC               	dw	50604
    87  000817  3727               	dw	14119
    88  000819  37BD               	dw	14269
    89  00081B  3586               	dw	13702
    90  00081D  BF95               	dw	49045
    91  00081F  33D6               	dw	13270
    92  000821  CC77               	dw	52343
    93  000823  322B               	dw	12843
    94  000825  705F               	dw	28767
    95  000827  3089               	dw	12425
    96  000829  E6FF               	dw	59135
    97  00082B  2EDB               	dw	11995
    98  00082D  E508               	dw	58632
    99  00082F  1E3C               	dw	7740
   100  000831  4260               	dw	16992
   101  000833  0DA2               	dw	3490
   102  000835                     __end_of__npowers_:
   103                           	opt stack 0
   104  000835                     __powers_:
   105                           	opt stack 0
   106  000835  0000               	dw	0
   107  000837  3F80               	dw	16256
   108  000839  0000               	dw	0
   109  00083B  4120               	dw	16672
   110  00083D  0000               	dw	0
   111  00083F  42C8               	dw	17096
   112  000841  0000               	dw	0
   113  000843  447A               	dw	17530
   114  000845  4000               	dw	16384
   115  000847  461C               	dw	17948
   116  000849  5000               	dw	20480
   117  00084B  47C3               	dw	18371
   118  00084D  2400               	dw	9216
   119  00084F  4974               	dw	18804
   120  000851  9680               	dw	38528
   121  000853  4B18               	dw	19224
   122  000855  BC20               	dw	48160
   123  000857  4CBE               	dw	19646
   124  000859  6B28               	dw	27432
   125  00085B  4E6E               	dw	20078
   126  00085D  02F9               	dw	761
   127  00085F  5015               	dw	20501
   128  000861  78EC               	dw	30956
   129  000863  60AD               	dw	24749
   130  000865  F2CA               	dw	62154
   131  000867  7149               	dw	29001
   132  000869                     __end_of__powers_:
   133                           	opt stack 0
   134  000869                     _dpowers:
   135                           	opt stack 0
   136  000869  0001               	dw	1
   137  00086B  0000               	dw	0
   138  00086D  000A               	dw	10
   139  00086F  0000               	dw	0
   140  000871  0064               	dw	100
   141  000873  0000               	dw	0
   142  000875  03E8               	dw	1000
   143  000877  0000               	dw	0
   144  000879  2710               	dw	10000
   145  00087B  0000               	dw	0
   146  00087D  86A0               	dw	34464
   147  00087F  0001               	dw	1
   148  000881  4240               	dw	16960
   149  000883  000F               	dw	15
   150  000885  9680               	dw	38528
   151  000887  0098               	dw	152
   152  000889  E100               	dw	57600
   153  00088B  05F5               	dw	1525
   154  00088D  CA00               	dw	51712
   155  00088F  3B9A               	dw	15258
   156  000891                     __end_of_dpowers:
   157                           	opt stack 0
   158  000891                     STR_1:
   159  000891  43                 	db	67	;'C'
   160  000892  69                 	db	105	;'i'
   161  000893  63                 	db	99	;'c'
   162  000894  6C                 	db	108	;'l'
   163  000895  6F                 	db	111	;'o'
   164  000896  20                 	db	32
   165  000897  72                 	db	114	;'r'
   166  000898  69                 	db	105	;'i'
   167  000899  63                 	db	99	;'c'
   168  00089A  61                 	db	97	;'a'
   169  00089B  72                 	db	114	;'r'
   170  00089C  69                 	db	105	;'i'
   171  00089D  63                 	db	99	;'c'
   172  00089E  61                 	db	97	;'a'
   173  00089F  2E                 	db	46
   174  0008A0  2E                 	db	46
   175  0008A1  00                 	db	0
   176  0008A2                     STR_3:
   177  0008A2  69                 	db	105	;'i'
   178  0008A3  6E                 	db	110	;'n'
   179  0008A4  69                 	db	105	;'i'
   180  0008A5  7A                 	db	122	;'z'
   181  0008A6  69                 	db	105	;'i'
   182  0008A7  61                 	db	97	;'a'
   183  0008A8  6C                 	db	108	;'l'
   184  0008A9  69                 	db	105	;'i'
   185  0008AA  7A                 	db	122	;'z'
   186  0008AB  7A                 	db	122	;'z'
   187  0008AC  61                 	db	97	;'a'
   188  0008AD  7A                 	db	122	;'z'
   189  0008AE  69                 	db	105	;'i'
   190  0008AF  6F                 	db	111	;'o'
   191  0008B0  6E                 	db	110	;'n'
   192  0008B1  65                 	db	101	;'e'
   193  0008B2  00                 	db	0
   194  0008B3                     STR_2:
   195  0008B3  56                 	db	86	;'V'
   196  0008B4  3A                 	db	58	;':'
   197  0008B5  20                 	db	32
   198  0008B6  25                 	db	37
   199  0008B7  2E                 	db	46
   200  0008B8  32                 	db	50	;'2'
   201  0008B9  66                 	db	102	;'f'
   202  0008BA  00                 	db	0
   203                           
   204                           ; #config settings
   205  0008BB  00                 	db	0	; dummy byte at the end
   206  0000                     
   207                           	psect	nvCOMRAM
   208  00005B                     __pnvCOMRAM:
   209                           	opt stack 0
   210  00005B                     _clock_counter_reference:
   211                           	opt stack 0
   212  00005B                     	ds	2
   213                           
   214                           	psect	nvBANK0
   215  00008F                     __pnvBANK0:
   216                           	opt stack 0
   217  00008F                     _rapporto:
   218                           	opt stack 0
   219  00008F                     	ds	4
   220  0000                     _ADCON0	set	4034
   221  0000                     _ADCON0bits	set	4034
   222  0000                     _ADCON1	set	4033
   223  0000                     _ADCON2	set	4032
   224  0000                     _ADRESH	set	4036
   225  0000                     _ADRESL	set	4035
   226  0000                     _LATA	set	3977
   227  0000                     _LATB	set	3978
   228  0000                     _LATBbits	set	3978
   229  0000                     _LATC	set	3979
   230  0000                     _LATCbits	set	3979
   231  0000                     _TRISA	set	3986
   232  0000                     _TRISB	set	3987
   233  0000                     _TRISC	set	3988
   234                           
   235                           	psect	cinit
   236  002C62                     __pcinit:
   237                           	opt stack 0
   238  002C62                     start_initialization:
   239                           	opt stack 0
   240  002C62                     __initialization:
   241                           	opt stack 0
   242                           
   243                           ; Clear objects allocated to BANK0 (22 bytes)
   244  002C62  EE00  F079         	lfsr	0,__pbssBANK0
   245  002C66  0E16               	movlw	22
   246  002C68                     clear_0:
   247  002C68  6AEE               	clrf	postinc0,c
   248  002C6A  06E8               	decf	wreg,f,c
   249  002C6C  E1FD               	bnz	clear_0
   250                           
   251                           ; Clear objects allocated to COMRAM (2 bytes)
   252  002C6E  6A5E               	clrf	(__pbssCOMRAM+1)& (0+255),c
   253  002C70  6A5D               	clrf	__pbssCOMRAM& (0+255),c
   254                           
   255                           ; Initialize objects allocated to BANK0 (3 bytes)
   256                           ; load TBLPTR registers with __pidataBANK0
   257  002C72  0ECC               	movlw	low __pidataBANK0
   258  002C74  6EF6               	movwf	tblptrl,c
   259  002C76  0E2E               	movlw	high __pidataBANK0
   260  002C78  6EF7               	movwf	tblptrh,c
   261  002C7A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   262  002C7C  6EF8               	movwf	tblptru,c
   263  002C7E  0009               	tblrd		*+	;fetch initializer
   264  002C80  CFF5 F093          	movff	tablat,__pdataBANK0
   265  002C84  0009               	tblrd		*+	;fetch initializer
   266  002C86  CFF5 F094          	movff	tablat,__pdataBANK0+1
   267  002C8A  0009               	tblrd		*+	;fetch initializer
   268  002C8C  CFF5 F095          	movff	tablat,__pdataBANK0+2
   269                           
   270                           ; Initialize objects allocated to COMRAM (1 bytes)
   271                           ; load TBLPTR registers with __pidataCOMRAM
   272  002C90  0ECF               	movlw	low __pidataCOMRAM
   273  002C92  6EF6               	movwf	tblptrl,c
   274  002C94  0E2E               	movlw	high __pidataCOMRAM
   275  002C96  6EF7               	movwf	tblptrh,c
   276  002C98  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   277  002C9A  6EF8               	movwf	tblptru,c
   278  002C9C  0009               	tblrd		*+	;fetch initializer
   279  002C9E  CFF5 F05F          	movff	tablat,__pdataCOMRAM
   280  002CA2                     end_of_initialization:
   281                           	opt stack 0
   282  002CA2                     __end_of__initialization:
   283                           	opt stack 0
   284  002CA2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   285  002CA4  6EF8               	movwf	tblptru,c
   286  002CA6  0100               	movlb	0
   287  002CA8  EFDE  F015         	goto	_main	;jump to C main() function
   288                           tblptru	equ	0xFF8
   289                           tblptrh	equ	0xFF7
   290                           tblptrl	equ	0xFF6
   291                           tablat	equ	0xFF5
   292                           postinc0	equ	0xFEE
   293                           wreg	equ	0xFE8
   294                           
   295                           	psect	bssCOMRAM
   296  00005D                     __pbssCOMRAM:
   297                           	opt stack 0
   298  00005D                     _lettura:
   299                           	opt stack 0
   300  00005D                     	ds	2
   301                           tblptru	equ	0xFF8
   302                           tblptrh	equ	0xFF7
   303                           tblptrl	equ	0xFF6
   304                           tablat	equ	0xFF5
   305                           postinc0	equ	0xFEE
   306                           wreg	equ	0xFE8
   307                           
   308                           	psect	dataCOMRAM
   309  00005F                     __pdataCOMRAM:
   310                           	opt stack 0
   311  00005F                     _delay_quartz_frequency_value:
   312                           	opt stack 0
   313  00005F                     	ds	1
   314                           tblptru	equ	0xFF8
   315                           tblptrh	equ	0xFF7
   316                           tblptrl	equ	0xFF6
   317                           tablat	equ	0xFF5
   318                           postinc0	equ	0xFEE
   319                           wreg	equ	0xFE8
   320                           
   321                           	psect	bssBANK0
   322  000079                     __pbssBANK0:
   323                           	opt stack 0
   324  000079                     LCD_write_integer@F3929:
   325                           	opt stack 0
   326  000079                     	ds	6
   327  00007F                     _current:
   328                           	opt stack 0
   329  00007F                     	ds	4
   330  000083                     _voltage:
   331                           	opt stack 0
   332  000083                     	ds	4
   333  000087                     _str:
   334                           	opt stack 0
   335  000087                     	ds	8
   336                           tblptru	equ	0xFF8
   337                           tblptrh	equ	0xFF7
   338                           tblptrl	equ	0xFF6
   339                           tablat	equ	0xFF5
   340                           postinc0	equ	0xFEE
   341                           wreg	equ	0xFE8
   342                           
   343                           	psect	dataBANK0
   344  000093                     __pdataBANK0:
   345                           	opt stack 0
   346  000093                     _combinazioni:
   347                           	opt stack 0
   348  000093                     	ds	3
   349                           tblptru	equ	0xFF8
   350                           tblptrh	equ	0xFF7
   351                           tblptrl	equ	0xFF6
   352                           tablat	equ	0xFF5
   353                           postinc0	equ	0xFEE
   354                           wreg	equ	0xFE8
   355                           
   356                           	psect	cstackBANK0
   357  000060                     __pcstackBANK0:
   358                           	opt stack 0
   359  000060                     _sprintf$1027:
   360                           	opt stack 0
   361                           
   362                           ; 4 bytes @ 0x0
   363  000060                     	ds	4
   364  000064                     sprintf@ap:
   365                           	opt stack 0
   366                           
   367                           ; 2 bytes @ 0x4
   368  000064                     	ds	2
   369  000066                     sprintf@flag:
   370                           	opt stack 0
   371                           
   372                           ; 2 bytes @ 0x6
   373  000066                     	ds	2
   374  000068                     sprintf@val:
   375                           	opt stack 0
   376                           
   377                           ; 4 bytes @ 0x8
   378  000068                     	ds	4
   379  00006C                     sprintf@exp:
   380                           	opt stack 0
   381                           
   382                           ; 2 bytes @ 0xC
   383  00006C                     	ds	2
   384  00006E                     sprintf@tmpval:
   385                           	opt stack 0
   386                           
   387                           ; 4 bytes @ 0xE
   388  00006E                     	ds	4
   389  000072                     sprintf@prec:
   390                           	opt stack 0
   391                           
   392                           ; 2 bytes @ 0x12
   393  000072                     	ds	2
   394  000074                     sprintf@fval:
   395                           	opt stack 0
   396                           
   397                           ; 4 bytes @ 0x14
   398  000074                     	ds	4
   399  000078                     sprintf@c:
   400                           	opt stack 0
   401                           
   402                           ; 1 bytes @ 0x18
   403  000078                     	ds	1
   404                           tblptru	equ	0xFF8
   405                           tblptrh	equ	0xFF7
   406                           tblptrl	equ	0xFF6
   407                           tablat	equ	0xFF5
   408                           postinc0	equ	0xFEE
   409                           wreg	equ	0xFE8
   410                           
   411                           	psect	cstackCOMRAM
   412  000001                     __pcstackCOMRAM:
   413                           	opt stack 0
   414  000001                     ??_isdigit:
   415  000001                     ?___wmul:
   416                           	opt stack 0
   417  000001                     ?___awmod:
   418                           	opt stack 0
   419  000001                     ?__tdiv_to_l_:
   420                           	opt stack 0
   421  000001                     ?__div_to_l_:
   422                           	opt stack 0
   423  000001                     ?___fldiv:
   424                           	opt stack 0
   425  000001                     ?___flneg:
   426                           	opt stack 0
   427  000001                     ?___lldiv:
   428                           	opt stack 0
   429  000001                     ?___llmod:
   430                           	opt stack 0
   431  000001                     delay_set_quartz@frequency:
   432                           	opt stack 0
   433  000001                     ___wmul@multiplier:
   434                           	opt stack 0
   435  000001                     ___awmod@dividend:
   436                           	opt stack 0
   437  000001                     __div_to_l_@f1:
   438                           	opt stack 0
   439  000001                     ___flge@ff1:
   440                           	opt stack 0
   441  000001                     ___flneg@f1:
   442                           	opt stack 0
   443  000001                     __tdiv_to_l_@f1:
   444                           	opt stack 0
   445  000001                     ___lldiv@dividend:
   446                           	opt stack 0
   447  000001                     ___llmod@dividend:
   448                           	opt stack 0
   449  000001                     ___fldiv@b:
   450                           	opt stack 0
   451                           
   452                           ; 4 bytes @ 0x0
   453  000001                     	ds	1
   454  000002                     _isdigit$651:
   455                           	opt stack 0
   456                           
   457                           ; 1 bytes @ 0x1
   458  000002                     	ds	1
   459  000003                     isdigit@c:
   460                           	opt stack 0
   461  000003                     ___wmul@multiplicand:
   462                           	opt stack 0
   463  000003                     ___awmod@divisor:
   464                           	opt stack 0
   465                           
   466                           ; 2 bytes @ 0x2
   467  000003                     	ds	2
   468  000005                     ___awmod@counter:
   469                           	opt stack 0
   470  000005                     ___wmul@product:
   471                           	opt stack 0
   472  000005                     __div_to_l_@f2:
   473                           	opt stack 0
   474  000005                     ___flge@ff2:
   475                           	opt stack 0
   476  000005                     __tdiv_to_l_@f2:
   477                           	opt stack 0
   478  000005                     ___lldiv@divisor:
   479                           	opt stack 0
   480  000005                     ___llmod@divisor:
   481                           	opt stack 0
   482  000005                     ___fldiv@a:
   483                           	opt stack 0
   484                           
   485                           ; 4 bytes @ 0x4
   486  000005                     	ds	1
   487  000006                     ___awmod@sign:
   488                           	opt stack 0
   489                           
   490                           ; 1 bytes @ 0x5
   491  000006                     	ds	1
   492  000007                     ?___awdiv:
   493                           	opt stack 0
   494  000007                     delay_ms@value_ms:
   495                           	opt stack 0
   496  000007                     ___awdiv@dividend:
   497                           	opt stack 0
   498                           
   499                           ; 2 bytes @ 0x6
   500  000007                     	ds	2
   501  000009                     ??__tdiv_to_l_:
   502  000009                     ??___fldiv:
   503  000009                     ??___flge:
   504  000009                     LCD_send_command@D2:
   505                           	opt stack 0
   506  000009                     ___llmod@counter:
   507                           	opt stack 0
   508  000009                     ___awdiv@divisor:
   509                           	opt stack 0
   510  000009                     __div_to_l_@quot:
   511                           	opt stack 0
   512  000009                     ___lldiv@quotient:
   513                           	opt stack 0
   514                           
   515                           ; 4 bytes @ 0x8
   516  000009                     	ds	1
   517  00000A                     LCD_send_command@D1:
   518                           	opt stack 0
   519                           
   520                           ; 1 bytes @ 0x9
   521  00000A                     	ds	1
   522  00000B                     LCD_send_command@D0:
   523                           	opt stack 0
   524  00000B                     ___awdiv@counter:
   525                           	opt stack 0
   526                           
   527                           ; 1 bytes @ 0xA
   528  00000B                     	ds	1
   529  00000C                     LCD_send_command@D3:
   530                           	opt stack 0
   531  00000C                     ___awdiv@sign:
   532                           	opt stack 0
   533  00000C                     __tdiv_to_l_@quot:
   534                           	opt stack 0
   535                           
   536                           ; 4 bytes @ 0xB
   537  00000C                     	ds	1
   538  00000D                     LCD_goto_line@line:
   539                           	opt stack 0
   540  00000D                     LCD_write_char@D3:
   541                           	opt stack 0
   542  00000D                     LCD_cursor@blinking:
   543                           	opt stack 0
   544  00000D                     __div_to_l_@cntr:
   545                           	opt stack 0
   546  00000D                     ___lldiv@counter:
   547                           	opt stack 0
   548  00000D                     ___fldiv@sign:
   549                           	opt stack 0
   550  00000D                     ___awdiv@quotient:
   551                           	opt stack 0
   552                           
   553                           ; 2 bytes @ 0xC
   554  00000D                     	ds	1
   555  00000E                     LCD_write_char@D2:
   556                           	opt stack 0
   557  00000E                     LCD_cursor@active:
   558                           	opt stack 0
   559  00000E                     __div_to_l_@exp1:
   560                           	opt stack 0
   561  00000E                     ___fldiv@rem:
   562                           	opt stack 0
   563                           
   564                           ; 4 bytes @ 0xD
   565  00000E                     	ds	1
   566  00000F                     ?___flmul:
   567                           	opt stack 0
   568  00000F                     ?___xxtofl:
   569                           	opt stack 0
   570  00000F                     LCD_write_char@D1:
   571                           	opt stack 0
   572  00000F                     LCD_initialize@quartz_frequency:
   573                           	opt stack 0
   574  00000F                     ___flmul@b:
   575                           	opt stack 0
   576  00000F                     ___xxtofl@val:
   577                           	opt stack 0
   578                           
   579                           ; 4 bytes @ 0xE
   580  00000F                     	ds	1
   581  000010                     LCD_write_char@D0:
   582                           	opt stack 0
   583  000010                     __tdiv_to_l_@cntr:
   584                           	opt stack 0
   585                           
   586                           ; 1 bytes @ 0xF
   587  000010                     	ds	1
   588  000011                     LCD_write_char@value:
   589                           	opt stack 0
   590  000011                     __tdiv_to_l_@exp1:
   591                           	opt stack 0
   592                           
   593                           ; 1 bytes @ 0x10
   594  000011                     	ds	1
   595  000012                     LCD_write_message@buffer:
   596                           	opt stack 0
   597  000012                     LCD_write_string@buffer:
   598                           	opt stack 0
   599  000012                     ___fldiv@new_exp:
   600                           	opt stack 0
   601                           
   602                           ; 2 bytes @ 0x11
   603  000012                     	ds	1
   604  000013                     ??___xxtofl:
   605  000013                     ___flmul@a:
   606                           	opt stack 0
   607                           
   608                           ; 4 bytes @ 0x12
   609  000013                     	ds	1
   610  000014                     ___fldiv@grs:
   611                           	opt stack 0
   612                           
   613                           ; 4 bytes @ 0x13
   614  000014                     	ds	3
   615  000017                     ??___flmul:
   616  000017                     ___xxtofl@sign:
   617                           	opt stack 0
   618                           
   619                           ; 1 bytes @ 0x16
   620  000017                     	ds	1
   621  000018                     ___fldiv@bexp:
   622                           	opt stack 0
   623  000018                     ___xxtofl@exp:
   624                           	opt stack 0
   625                           
   626                           ; 1 bytes @ 0x17
   627  000018                     	ds	1
   628  000019                     ___fldiv@aexp:
   629                           	opt stack 0
   630  000019                     ___xxtofl@arg:
   631                           	opt stack 0
   632                           
   633                           ; 4 bytes @ 0x18
   634  000019                     	ds	2
   635  00001B                     ___flmul@sign:
   636                           	opt stack 0
   637                           
   638                           ; 1 bytes @ 0x1A
   639  00001B                     	ds	1
   640  00001C                     ___flmul@grs:
   641                           	opt stack 0
   642                           
   643                           ; 4 bytes @ 0x1B
   644  00001C                     	ds	4
   645  000020                     ___flmul@aexp:
   646                           	opt stack 0
   647                           
   648                           ; 1 bytes @ 0x1F
   649  000020                     	ds	1
   650  000021                     ___flmul@bexp:
   651                           	opt stack 0
   652                           
   653                           ; 1 bytes @ 0x20
   654  000021                     	ds	1
   655  000022                     ___flmul@prod:
   656                           	opt stack 0
   657                           
   658                           ; 4 bytes @ 0x21
   659  000022                     	ds	4
   660  000026                     ___flmul@temp:
   661                           	opt stack 0
   662                           
   663                           ; 2 bytes @ 0x25
   664  000026                     	ds	2
   665  000028                     ??_read_adc:
   666  000028                     ?_fround:
   667                           	opt stack 0
   668  000028                     ?_scale:
   669                           	opt stack 0
   670                           
   671                           ; 4 bytes @ 0x27
   672  000028                     	ds	2
   673  00002A                     read_adc@i:
   674                           	opt stack 0
   675                           
   676                           ; 1 bytes @ 0x29
   677  00002A                     	ds	2
   678  00002C                     _fround$1025:
   679                           	opt stack 0
   680  00002C                     _scale$1026:
   681                           	opt stack 0
   682                           
   683                           ; 4 bytes @ 0x2B
   684  00002C                     	ds	4
   685  000030                     scale@scl:
   686                           	opt stack 0
   687  000030                     _fround$1024:
   688                           	opt stack 0
   689                           
   690                           ; 4 bytes @ 0x2F
   691  000030                     	ds	1
   692  000031                     ?___fltol:
   693                           	opt stack 0
   694  000031                     ___fltol@f1:
   695                           	opt stack 0
   696                           
   697                           ; 4 bytes @ 0x30
   698  000031                     	ds	3
   699  000034                     fround@prec:
   700                           	opt stack 0
   701                           
   702                           ; 1 bytes @ 0x33
   703  000034                     	ds	1
   704  000035                     ??___fltol:
   705  000035                     ?___fladd:
   706                           	opt stack 0
   707  000035                     ___fladd@b:
   708                           	opt stack 0
   709                           
   710                           ; 4 bytes @ 0x34
   711  000035                     	ds	4
   712  000039                     ___fltol@sign1:
   713                           	opt stack 0
   714  000039                     ___fladd@a:
   715                           	opt stack 0
   716                           
   717                           ; 4 bytes @ 0x38
   718  000039                     	ds	1
   719  00003A                     ___fltol@exp1:
   720                           	opt stack 0
   721                           
   722                           ; 1 bytes @ 0x39
   723  00003A                     	ds	3
   724  00003D                     ??___fladd:
   725                           
   726                           ; 1 bytes @ 0x3C
   727  00003D                     	ds	8
   728  000045                     ___fladd@signs:
   729                           	opt stack 0
   730                           
   731                           ; 1 bytes @ 0x44
   732  000045                     	ds	1
   733  000046                     ___fladd@aexp:
   734                           	opt stack 0
   735                           
   736                           ; 1 bytes @ 0x45
   737  000046                     	ds	1
   738  000047                     ___fladd@bexp:
   739                           	opt stack 0
   740                           
   741                           ; 1 bytes @ 0x46
   742  000047                     	ds	1
   743  000048                     ___fladd@grs:
   744                           	opt stack 0
   745                           
   746                           ; 1 bytes @ 0x47
   747  000048                     	ds	1
   748  000049                     ?___flsub:
   749                           	opt stack 0
   750  000049                     ___flsub@b:
   751                           	opt stack 0
   752                           
   753                           ; 4 bytes @ 0x48
   754  000049                     	ds	4
   755  00004D                     ___flsub@a:
   756                           	opt stack 0
   757                           
   758                           ; 4 bytes @ 0x4C
   759  00004D                     	ds	4
   760  000051                     ?_sprintf:
   761                           	opt stack 0
   762  000051                     sprintf@sp:
   763                           	opt stack 0
   764                           
   765                           ; 2 bytes @ 0x50
   766  000051                     	ds	2
   767  000053                     sprintf@f:
   768                           	opt stack 0
   769                           
   770                           ; 2 bytes @ 0x52
   771  000053                     	ds	6
   772  000059                     ??_sprintf:
   773                           
   774                           ; 1 bytes @ 0x58
   775  000059                     	ds	2
   776  00005B                     tblptru	equ	0xFF8
   777                           tblptrh	equ	0xFF7
   778                           tblptrl	equ	0xFF6
   779                           tablat	equ	0xFF5
   780                           postinc0	equ	0xFEE
   781                           wreg	equ	0xFE8
   782                           
   783                           ; 1 bytes @ 0x5A
   784 ;;
   785 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   786 ;;
   787 ;; *************** function _main *****************
   788 ;; Defined at:
   789 ;;		line 45 in file "tester.c"
   790 ;; Parameters:    Size  Location     Type
   791 ;;		None
   792 ;; Auto vars:     Size  Location     Type
   793 ;;		None
   794 ;; Return value:  Size  Location     Type
   795 ;;                  1    wreg      void 
   796 ;; Registers used:
   797 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   798 ;; Tracked objects:
   799 ;;		On entry : 0/0
   800 ;;		On exit  : 0/0
   801 ;;		Unchanged: 0/0
   802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   803 ;;      Params:         0       0       0       0       0       0       0       0       0
   804 ;;      Locals:         0       0       0       0       0       0       0       0       0
   805 ;;      Temps:          0       0       0       0       0       0       0       0       0
   806 ;;      Totals:         0       0       0       0       0       0       0       0       0
   807 ;;Total ram usage:        0 bytes
   808 ;; Hardware stack levels required when called:    7
   809 ;; This function calls:
   810 ;;		___fldiv
   811 ;;		_inizializzazione
   812 ;;		_read_adc
   813 ;;		_ricarica
   814 ;; This function is called by:
   815 ;;		Startup code after reset
   816 ;; This function uses a non-reentrant model
   817 ;;
   818                           
   819                           	psect	text0
   820  002BBC                     __ptext0:
   821                           	opt stack 0
   822  002BBC                     _main:
   823                           	opt stack 24
   824                           
   825                           ;tester.c: 46: rapporto = (15000+7500);
   826                           
   827                           ;incstack = 0
   828  002BBC  0E00               	movlw	0
   829  002BBE  0100               	movlb	0	; () banked
   830  002BC0  6F8F               	movwf	_rapporto& (0+255),b
   831  002BC2  0EC8               	movlw	200
   832  002BC4  6F90               	movwf	(_rapporto+1)& (0+255),b
   833  002BC6  0EAF               	movlw	175
   834  002BC8  6F91               	movwf	(_rapporto+2)& (0+255),b
   835  002BCA  0E46               	movlw	70
   836  002BCC  6F92               	movwf	(_rapporto+3)& (0+255),b
   837                           
   838                           ; BSR set to: 0
   839                           ;tester.c: 47: rapporto = 7500/rapporto;
   840  002BCE  0E00               	movlw	0
   841  002BD0  6E01               	movwf	___fldiv@b,c
   842  002BD2  0E60               	movlw	96
   843  002BD4  6E02               	movwf	___fldiv@b+1,c
   844  002BD6  0EEA               	movlw	234
   845  002BD8  6E03               	movwf	___fldiv@b+2,c
   846  002BDA  0E45               	movlw	69
   847  002BDC  6E04               	movwf	___fldiv@b+3,c
   848  002BDE  C08F  F005         	movff	_rapporto,___fldiv@a
   849  002BE2  C090  F006         	movff	_rapporto+1,___fldiv@a+1
   850  002BE6  C091  F007         	movff	_rapporto+2,___fldiv@a+2
   851  002BEA  C092  F008         	movff	_rapporto+3,___fldiv@a+3
   852  002BEE  ECB8  F00D         	call	___fldiv	;wreg free
   853  002BF2  C001  F08F         	movff	?___fldiv,_rapporto
   854  002BF6  C002  F090         	movff	?___fldiv+1,_rapporto+1
   855  002BFA  C003  F091         	movff	?___fldiv+2,_rapporto+2
   856  002BFE  C004  F092         	movff	?___fldiv+3,_rapporto+3
   857                           
   858                           ;tester.c: 48: inizializzazione();
   859  002C02  EC0A  F016         	call	_inizializzazione	;wreg free
   860                           
   861                           ;tester.c: 49: read_adc();
   862  002C06  EC4F  F010         	call	_read_adc	;wreg free
   863  002C0A                     l3650:
   864                           
   865                           ;tester.c: 51: ricarica();
   866  002C0A  EC79  F016         	call	_ricarica	;wreg free
   867                           
   868                           ;tester.c: 52: read_adc();
   869  002C0E  EC4F  F010         	call	_read_adc	;wreg free
   870  002C12  D7FB               	goto	l3650
   871  002C14                     __end_of_main:
   872                           	opt stack 0
   873                           tblptru	equ	0xFF8
   874                           tblptrh	equ	0xFF7
   875                           tblptrl	equ	0xFF6
   876                           tablat	equ	0xFF5
   877                           postinc0	equ	0xFEE
   878                           wreg	equ	0xFE8
   879                           
   880 ;; *************** function _ricarica *****************
   881 ;; Defined at:
   882 ;;		line 55 in file "tester.c"
   883 ;; Parameters:    Size  Location     Type
   884 ;;		None
   885 ;; Auto vars:     Size  Location     Type
   886 ;;		None
   887 ;; Return value:  Size  Location     Type
   888 ;;                  1    wreg      void 
   889 ;; Registers used:
   890 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   891 ;; Tracked objects:
   892 ;;		On entry : 0/0
   893 ;;		On exit  : 0/0
   894 ;;		Unchanged: 0/0
   895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   896 ;;      Params:         0       0       0       0       0       0       0       0       0
   897 ;;      Locals:         0       0       0       0       0       0       0       0       0
   898 ;;      Temps:          0       0       0       0       0       0       0       0       0
   899 ;;      Totals:         0       0       0       0       0       0       0       0       0
   900 ;;Total ram usage:        0 bytes
   901 ;; Hardware stack levels used:    1
   902 ;; Hardware stack levels required when called:    6
   903 ;; This function calls:
   904 ;;		_LCD_goto_line
   905 ;;		_LCD_write_message
   906 ;;		_LCD_write_string
   907 ;;		_sprintf
   908 ;; This function is called by:
   909 ;;		_main
   910 ;; This function uses a non-reentrant model
   911 ;;
   912                           
   913                           	psect	text1
   914  002CF2                     __ptext1:
   915                           	opt stack 0
   916  002CF2                     _ricarica:
   917                           	opt stack 24
   918                           
   919                           ;tester.c: 56: LCD_write_message("Ciclo ricarica..");
   920                           
   921                           ;incstack = 0
   922  002CF2  0E91               	movlw	low STR_1
   923  002CF4  6E12               	movwf	LCD_write_message@buffer,c
   924  002CF6  0E08               	movlw	high STR_1
   925  002CF8  6E13               	movwf	LCD_write_message@buffer+1,c
   926  002CFA  ECE3  F016         	call	_LCD_write_message	;wreg free
   927                           
   928                           ;tester.c: 57: LCD_goto_line(2);
   929  002CFE  0E02               	movlw	2
   930  002D00  EC5C  F014         	call	_LCD_goto_line
   931                           
   932                           ;tester.c: 58: sprintf(str, "V: %.2f", voltage);
   933  002D04  0E87               	movlw	low _str
   934  002D06  6E51               	movwf	sprintf@sp,c
   935  002D08  0E00               	movlw	high _str
   936  002D0A  6E52               	movwf	sprintf@sp+1,c
   937  002D0C  0EB3               	movlw	low STR_2
   938  002D0E  6E53               	movwf	sprintf@f,c
   939  002D10  0E08               	movlw	high STR_2
   940  002D12  6E54               	movwf	sprintf@f+1,c
   941  002D14  C083  F055         	movff	_voltage,?_sprintf+4
   942  002D18  C084  F056         	movff	_voltage+1,?_sprintf+5
   943  002D1C  C085  F057         	movff	_voltage+2,?_sprintf+6
   944  002D20  C086  F058         	movff	_voltage+3,?_sprintf+7
   945  002D24  EC5E  F004         	call	_sprintf	;wreg free
   946                           
   947                           ;tester.c: 59: LCD_write_string(str);
   948  002D28  0E87               	movlw	low _str
   949  002D2A  6E12               	movwf	LCD_write_string@buffer,c
   950  002D2C  0E00               	movlw	high _str
   951  002D2E  6E13               	movwf	LCD_write_string@buffer+1,c
   952  002D30  EC32  F017         	call	_LCD_write_string	;wreg free
   953  002D34  0012               	return		;funcret
   954  002D36                     __end_of_ricarica:
   955                           	opt stack 0
   956                           tblptru	equ	0xFF8
   957                           tblptrh	equ	0xFF7
   958                           tblptrl	equ	0xFF6
   959                           tablat	equ	0xFF5
   960                           postinc0	equ	0xFEE
   961                           wreg	equ	0xFE8
   962                           
   963 ;; *************** function _sprintf *****************
   964 ;; Defined at:
   965 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\doprnt.c"
   966 ;; Parameters:    Size  Location     Type
   967 ;;  sp              2   80[COMRAM] PTR unsigned char 
   968 ;;		 -> str(8), 
   969 ;;  f               2   82[COMRAM] PTR const unsigned char 
   970 ;;		 -> STR_2(8), 
   971 ;; Auto vars:     Size  Location     Type
   972 ;;  fval            4   20[BANK0 ] PTR const unsigned char 
   973 ;;  tmpval          4   14[BANK0 ] struct .
   974 ;;  val             4    8[BANK0 ] unsigned long 
   975 ;;  cp              3    0        PTR const unsigned char 
   976 ;;  prec            2   18[BANK0 ] int 
   977 ;;  exp             2   12[BANK0 ] int 
   978 ;;  flag            2    6[BANK0 ] unsigned short 
   979 ;;  ap              2    4[BANK0 ] PTR void [1]
   980 ;;		 -> ?_sprintf(2), 
   981 ;;  len             2    0        unsigned int 
   982 ;;  width           2    0        int 
   983 ;;  c               1   24[BANK0 ] char 
   984 ;;  d               1    0        unsigned char 
   985 ;; Return value:  Size  Location     Type
   986 ;;                  2   80[COMRAM] int 
   987 ;; Registers used:
   988 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   989 ;; Tracked objects:
   990 ;;		On entry : 0/0
   991 ;;		On exit  : 0/0
   992 ;;		Unchanged: 0/0
   993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   994 ;;      Params:         8       0       0       0       0       0       0       0       0
   995 ;;      Locals:         0      25       0       0       0       0       0       0       0
   996 ;;      Temps:          2       0       0       0       0       0       0       0       0
   997 ;;      Totals:        10      25       0       0       0       0       0       0       0
   998 ;;Total ram usage:       35 bytes
   999 ;; Hardware stack levels used:    1
  1000 ;; Hardware stack levels required when called:    2
  1001 ;; This function calls:
  1002 ;;		___awdiv
  1003 ;;		___fladd
  1004 ;;		___flge
  1005 ;;		___flmul
  1006 ;;		___flneg
  1007 ;;		___flsub
  1008 ;;		___fltol
  1009 ;;		___lldiv
  1010 ;;		___llmod
  1011 ;;		___wmul
  1012 ;;		___xxtofl
  1013 ;;		__div_to_l_
  1014 ;;		__tdiv_to_l_
  1015 ;;		_fround
  1016 ;;		_isdigit
  1017 ;;		_scale
  1018 ;; This function is called by:
  1019 ;;		_ricarica
  1020 ;; This function uses a non-reentrant model
  1021 ;;
  1022                           
  1023                           	psect	text2
  1024  0008BC                     __ptext2:
  1025                           	opt stack 0
  1026  0008BC                     _sprintf:
  1027                           	opt stack 27
  1028                           
  1029                           ;doprnt.c: 494: va_list ap;
  1030                           ;doprnt.c: 499: signed char c;
  1031                           ;doprnt.c: 501: int width;
  1032                           ;doprnt.c: 504: int prec;
  1033                           ;doprnt.c: 508: unsigned short flag;
  1034                           ;doprnt.c: 515: char d;
  1035                           ;doprnt.c: 516: double fval;
  1036                           ;doprnt.c: 517: int exp;
  1037                           ;doprnt.c: 523: union {
  1038                           ;doprnt.c: 524: unsigned long vd;
  1039                           ;doprnt.c: 525: double integ;
  1040                           ;doprnt.c: 526: } tmpval;
  1041                           ;doprnt.c: 528: unsigned long val;
  1042                           ;doprnt.c: 529: unsigned len;
  1043                           ;doprnt.c: 530: const char * cp;
  1044                           ;doprnt.c: 533: *ap = __va_start();
  1045                           
  1046                           ;incstack = 0
  1047  0008BC  0E55               	movlw	low (?_sprintf+4)
  1048  0008BE  0100               	movlb	0	; () banked
  1049  0008C0  6F64               	movwf	sprintf@ap& (0+255),b
  1050  0008C2  0E00               	movlw	high (?_sprintf+4)
  1051  0008C4  0100               	movlb	0	; () banked
  1052  0008C6  6F65               	movwf	(sprintf@ap+1)& (0+255),b
  1053                           
  1054                           ;doprnt.c: 536: while(c = *f++) {
  1055  0008C8  D3ED               	goto	l3374
  1056  0008CA                     l3176:
  1057                           
  1058                           ; BSR set to: 0
  1059                           ;doprnt.c: 538: if(c != '%')
  1060  0008CA  0E25               	movlw	37
  1061  0008CC  0100               	movlb	0	; () banked
  1062  0008CE  1978               	xorwf	sprintf@c& (0+255),w,b
  1063  0008D0  B4D8               	btfsc	status,2,c
  1064  0008D2  D007               	goto	l3182
  1065                           
  1066                           ; BSR set to: 0
  1067                           ;doprnt.c: 540: {
  1068                           ;doprnt.c: 541: ((*sp++ = (c)));
  1069  0008D4  C051  FFD9         	movff	sprintf@sp,fsr2l
  1070  0008D8  C052  FFDA         	movff	sprintf@sp+1,fsr2h
  1071  0008DC  C078  FFDF         	movff	sprintf@c,indf2
  1072  0008E0  D3DF               	goto	l3372
  1073  0008E2                     l3182:
  1074                           
  1075                           ; BSR set to: 0
  1076                           ;doprnt.c: 543: }
  1077                           ;doprnt.c: 548: flag = 0;
  1078  0008E2  0E00               	movlw	0
  1079  0008E4  0100               	movlb	0	; () banked
  1080  0008E6  6F67               	movwf	(sprintf@flag+1)& (0+255),b
  1081  0008E8  0E00               	movlw	0
  1082  0008EA  6F66               	movwf	sprintf@flag& (0+255),b
  1083                           
  1084                           ; BSR set to: 0
  1085                           ;doprnt.c: 611: if(*f == '.') {
  1086  0008EC  C053  FFF6         	movff	sprintf@f,tblptrl
  1087  0008F0  C054  FFF7         	movff	sprintf@f+1,tblptrh
  1088  0008F4                     	if	0	;tblptru may be non-zero
  1089  0008F4                     	endif
  1090  0008F4                     	if	0	;tblptru may be non-zero
  1091  0008F4                     	endif
  1092  0008F4  0008               	tblrd		*
  1093  0008F6  50F5               	movf	tablat,w,c
  1094  0008F8  0A2E               	xorlw	46
  1095  0008FA  A4D8               	btfss	status,2,c
  1096  0008FC  D032               	goto	l3196
  1097                           
  1098                           ; BSR set to: 0
  1099                           ;doprnt.c: 612: flag |= 0x4000;
  1100  0008FE  0100               	movlb	0	; () banked
  1101  000900  8D67               	bsf	(sprintf@flag+1)& (0+255),6,b
  1102                           
  1103                           ;doprnt.c: 613: f++;
  1104  000902  4A53               	infsnz	sprintf@f,f,c
  1105  000904  2A54               	incf	sprintf@f+1,f,c
  1106                           
  1107                           ; BSR set to: 0
  1108                           ;doprnt.c: 620: {
  1109                           ;doprnt.c: 621: prec = 0;
  1110  000906  0E00               	movlw	0
  1111  000908  0100               	movlb	0	; () banked
  1112  00090A  6F73               	movwf	(sprintf@prec+1)& (0+255),b
  1113  00090C  0E00               	movlw	0
  1114  00090E  6F72               	movwf	sprintf@prec& (0+255),b
  1115                           
  1116                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  1117  000910  D01D               	goto	l3194
  1118  000912                     l3190:
  1119                           
  1120                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  1121  000912  C072  F001         	movff	sprintf@prec,___wmul@multiplier
  1122  000916  C073  F002         	movff	sprintf@prec+1,___wmul@multiplier+1
  1123  00091A  0E00               	movlw	0
  1124  00091C  6E04               	movwf	___wmul@multiplicand+1,c
  1125  00091E  0E0A               	movlw	10
  1126  000920  6E03               	movwf	___wmul@multiplicand,c
  1127  000922  EC1F  F017         	call	___wmul	;wreg free
  1128  000926  C053  FFF6         	movff	sprintf@f,tblptrl
  1129  00092A  C054  FFF7         	movff	sprintf@f+1,tblptrh
  1130  00092E                     	if	0	;tblptru may be non-zero
  1131  00092E                     	endif
  1132  00092E                     	if	0	;tblptru may be non-zero
  1133  00092E                     	endif
  1134  00092E  0008               	tblrd		*
  1135  000930  50F5               	movf	tablat,w,c
  1136  000932  2601               	addwf	?___wmul,f,c
  1137  000934  0E00               	movlw	0
  1138  000936  2202               	addwfc	?___wmul+1,f,c
  1139  000938  0ED0               	movlw	208
  1140  00093A  2401               	addwf	?___wmul,w,c
  1141  00093C  0100               	movlb	0	; () banked
  1142  00093E  6F72               	movwf	sprintf@prec& (0+255),b
  1143  000940  0EFF               	movlw	255
  1144  000942  2002               	addwfc	?___wmul+1,w,c
  1145  000944  0100               	movlb	0	; () banked
  1146  000946  6F73               	movwf	(sprintf@prec+1)& (0+255),b
  1147                           
  1148                           ; BSR set to: 0
  1149  000948  4A53               	infsnz	sprintf@f,f,c
  1150  00094A  2A54               	incf	sprintf@f+1,f,c
  1151  00094C                     l3194:
  1152                           
  1153                           ; BSR set to: 0
  1154  00094C  C053  FFF6         	movff	sprintf@f,tblptrl
  1155  000950  C054  FFF7         	movff	sprintf@f+1,tblptrh
  1156  000954                     	if	0	;tblptru may be non-zero
  1157  000954                     	endif
  1158  000954                     	if	0	;tblptru may be non-zero
  1159  000954                     	endif
  1160  000954  0008               	tblrd		*
  1161  000956  50F5               	movf	tablat,w,c
  1162  000958  EC44  F017         	call	_isdigit
  1163  00095C  A0D8               	btfss	status,0,c
  1164  00095E  D00C               	goto	l3204
  1165  000960  D7D8               	goto	l3190
  1166  000962                     l3196:
  1167                           
  1168                           ;doprnt.c: 626: prec = 0;
  1169  000962  0E00               	movlw	0
  1170  000964  0100               	movlb	0	; () banked
  1171  000966  6F73               	movwf	(sprintf@prec+1)& (0+255),b
  1172  000968  0E00               	movlw	0
  1173  00096A  6F72               	movwf	sprintf@prec& (0+255),b
  1174                           
  1175                           ; BSR set to: 0
  1176                           ;doprnt.c: 628: flag |= 0x1000;
  1177  00096C  0100               	movlb	0	; () banked
  1178  00096E  8967               	bsf	(sprintf@flag+1)& (0+255),4,b
  1179                           
  1180                           ; BSR set to: 0
  1181                           ;doprnt.c: 630: }
  1182                           ;doprnt.c: 635: switch(c = *f++) {
  1183  000970  D003               	goto	l3204
  1184  000972                     l3200:
  1185                           
  1186                           ; BSR set to: 0
  1187                           ;doprnt.c: 663: flag |= 0x400;
  1188  000972  0100               	movlb	0	; () banked
  1189  000974  8567               	bsf	(sprintf@flag+1)& (0+255),2,b
  1190                           
  1191                           ;doprnt.c: 664: break;
  1192  000976  D012               	goto	l3206
  1193  000978                     l3204:
  1194  000978  C053  FFF6         	movff	sprintf@f,tblptrl
  1195  00097C  C054  FFF7         	movff	sprintf@f+1,tblptrh
  1196  000980  4A53               	infsnz	sprintf@f,f,c
  1197  000982  2A54               	incf	sprintf@f+1,f,c
  1198  000984                     	if	0	;tblptru may be non-zero
  1199  000984                     	endif
  1200  000984                     	if	0	;tblptru may be non-zero
  1201  000984                     	endif
  1202  000984  0008               	tblrd		*
  1203  000986  CFF5 F078          	movff	tablat,sprintf@c
  1204  00098A  0100               	movlb	0	; () banked
  1205  00098C  5178               	movf	sprintf@c& (0+255),w,b
  1206                           
  1207                           ; Switch size 1, requested type "space"
  1208                           ; Number of cases is 2, Range of values is 0 to 102
  1209                           ; switch strategies available:
  1210                           ; Name         Instructions Cycles
  1211                           ; simple_byte            7     4 (average)
  1212                           ;	Chosen strategy is simple_byte
  1213  00098E  0A00               	xorlw	0	; case 0
  1214  000990  B4D8               	btfsc	status,2,c
  1215  000992  D395               	goto	l3376
  1216  000994  0A66               	xorlw	102	; case 102
  1217  000996  B4D8               	btfsc	status,2,c
  1218  000998  D7EC               	goto	l3200
  1219  00099A  D384               	goto	l3374
  1220  00099C                     l3206:
  1221                           
  1222                           ; BSR set to: 0
  1223                           ;doprnt.c: 825: if(flag & (0x700)) {
  1224  00099C  0E07               	movlw	7
  1225  00099E  0100               	movlb	0	; () banked
  1226  0009A0  1567               	andwf	(sprintf@flag+1)& (0+255),w,b
  1227  0009A2  B4D8               	btfsc	status,2,c
  1228  0009A4  D330               	goto	l3354
  1229                           
  1230                           ; BSR set to: 0
  1231                           ;doprnt.c: 827: if(flag & 0x1000)
  1232  0009A6  0100               	movlb	0	; () banked
  1233  0009A8  A967               	btfss	(sprintf@flag+1)& (0+255),4,b
  1234  0009AA  D005               	goto	l3212
  1235                           
  1236                           ; BSR set to: 0
  1237                           ;doprnt.c: 829: prec = 6;
  1238  0009AC  0E00               	movlw	0
  1239  0009AE  0100               	movlb	0	; () banked
  1240  0009B0  6F73               	movwf	(sprintf@prec+1)& (0+255),b
  1241  0009B2  0E06               	movlw	6
  1242  0009B4  6F72               	movwf	sprintf@prec& (0+255),b
  1243  0009B6                     l3212:
  1244                           
  1245                           ; BSR set to: 0
  1246                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  1247  0009B6  C064  FFD9         	movff	sprintf@ap,fsr2l
  1248  0009BA  C065  FFDA         	movff	sprintf@ap+1,fsr2h
  1249  0009BE  CFDE F074          	movff	postinc2,sprintf@fval
  1250  0009C2  CFDE F075          	movff	postinc2,sprintf@fval+1
  1251  0009C6  CFDE F076          	movff	postinc2,sprintf@fval+2
  1252  0009CA  CFDE F077          	movff	postinc2,sprintf@fval+3
  1253                           
  1254                           ; BSR set to: 0
  1255  0009CE  0E04               	movlw	4
  1256  0009D0  0100               	movlb	0	; () banked
  1257  0009D2  2764               	addwf	sprintf@ap& (0+255),f,b
  1258  0009D4  0E00               	movlw	0
  1259  0009D6  2365               	addwfc	(sprintf@ap+1)& (0+255),f,b
  1260                           
  1261                           ; BSR set to: 0
  1262                           ;doprnt.c: 831: if(fval < 0.0) {
  1263  0009D8  0100               	movlb	0	; () banked
  1264  0009DA  AF77               	btfss	(sprintf@fval+3)& (0+255),7,b
  1265  0009DC  D015               	goto	l3222
  1266                           
  1267                           ; BSR set to: 0
  1268                           ;doprnt.c: 832: fval = -fval;
  1269  0009DE  C074  F001         	movff	sprintf@fval,___flneg@f1
  1270  0009E2  C075  F002         	movff	sprintf@fval+1,___flneg@f1+1
  1271  0009E6  C076  F003         	movff	sprintf@fval+2,___flneg@f1+2
  1272  0009EA  C077  F004         	movff	sprintf@fval+3,___flneg@f1+3
  1273  0009EE  ECCC  F016         	call	___flneg	;wreg free
  1274  0009F2  C001  F074         	movff	?___flneg,sprintf@fval
  1275  0009F6  C002  F075         	movff	?___flneg+1,sprintf@fval+1
  1276  0009FA  C003  F076         	movff	?___flneg+2,sprintf@fval+2
  1277  0009FE  C004  F077         	movff	?___flneg+3,sprintf@fval+3
  1278                           
  1279                           ;doprnt.c: 833: flag |= 0x03;
  1280  000A02  0E03               	movlw	3
  1281  000A04  0100               	movlb	0	; () banked
  1282  000A06  1366               	iorwf	sprintf@flag& (0+255),f,b
  1283  000A08                     l3222:
  1284                           
  1285                           ; BSR set to: 0
  1286                           ;doprnt.c: 834: }
  1287                           ;doprnt.c: 835: exp = 0;
  1288  000A08  0E00               	movlw	0
  1289  000A0A  0100               	movlb	0	; () banked
  1290  000A0C  6F6D               	movwf	(sprintf@exp+1)& (0+255),b
  1291  000A0E  0E00               	movlw	0
  1292  000A10  6F6C               	movwf	sprintf@exp& (0+255),b
  1293                           
  1294                           ; BSR set to: 0
  1295                           ;doprnt.c: 836: if( fval!=0) {
  1296  000A12  0100               	movlb	0	; () banked
  1297  000A14  5174               	movf	sprintf@fval& (0+255),w,b
  1298  000A16  0100               	movlb	0	; () banked
  1299  000A18  1175               	iorwf	(sprintf@fval+1)& (0+255),w,b
  1300  000A1A  0100               	movlb	0	; () banked
  1301  000A1C  1176               	iorwf	(sprintf@fval+2)& (0+255),w,b
  1302  000A1E  0100               	movlb	0	; () banked
  1303  000A20  1177               	iorwf	(sprintf@fval+3)& (0+255),w,b
  1304  000A22  B4D8               	btfsc	status,2,c
  1305  000A24  D088               	goto	l3250
  1306                           
  1307                           ; BSR set to: 0
  1308                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
  1309  000A26  0100               	movlb	0	; () banked
  1310  000A28  3576               	rlcf	(sprintf@fval+2)& (0+255),w,b
  1311  000A2A  3577               	rlcf	(sprintf@fval+3)& (0+255),w,b
  1312  000A2C  0F82               	addlw	130
  1313  000A2E  0100               	movlb	0	; () banked
  1314  000A30  6F6C               	movwf	sprintf@exp& (0+255),b
  1315  000A32  0100               	movlb	0	; () banked
  1316  000A34  6B6D               	clrf	(sprintf@exp+1)& (0+255),b
  1317  000A36  0EFF               	movlw	255
  1318  000A38  236D               	addwfc	(sprintf@exp+1)& (0+255),f,b
  1319                           
  1320                           ; BSR set to: 0
  1321                           ;doprnt.c: 838: exp--;
  1322  000A3A  0100               	movlb	0	; () banked
  1323  000A3C  076C               	decf	sprintf@exp& (0+255),f,b
  1324  000A3E  A0D8               	btfss	status,0,c
  1325  000A40  076D               	decf	(sprintf@exp+1)& (0+255),f,b
  1326                           
  1327                           ; BSR set to: 0
  1328                           ;doprnt.c: 839: exp *= 3;
  1329  000A42  C06C  F001         	movff	sprintf@exp,___wmul@multiplier
  1330  000A46  C06D  F002         	movff	sprintf@exp+1,___wmul@multiplier+1
  1331  000A4A  0E00               	movlw	0
  1332  000A4C  6E04               	movwf	___wmul@multiplicand+1,c
  1333  000A4E  0E03               	movlw	3
  1334  000A50  6E03               	movwf	___wmul@multiplicand,c
  1335  000A52  EC1F  F017         	call	___wmul	;wreg free
  1336  000A56  C001  F06C         	movff	?___wmul,sprintf@exp
  1337  000A5A  C002  F06D         	movff	?___wmul+1,sprintf@exp+1
  1338                           
  1339                           ;doprnt.c: 840: exp /= 10;
  1340  000A5E  C06C  F007         	movff	sprintf@exp,___awdiv@dividend
  1341  000A62  C06D  F008         	movff	sprintf@exp+1,___awdiv@dividend+1
  1342  000A66  0E00               	movlw	0
  1343  000A68  6E0A               	movwf	___awdiv@divisor+1,c
  1344  000A6A  0E0A               	movlw	10
  1345  000A6C  6E09               	movwf	___awdiv@divisor,c
  1346  000A6E  ECB8  F014         	call	___awdiv	;wreg free
  1347  000A72  C007  F06C         	movff	?___awdiv,sprintf@exp
  1348  000A76  C008  F06D         	movff	?___awdiv+1,sprintf@exp+1
  1349                           
  1350                           ;doprnt.c: 841: if(exp < 0)
  1351  000A7A  0100               	movlb	0	; () banked
  1352  000A7C  AF6D               	btfss	(sprintf@exp+1)& (0+255),7,b
  1353  000A7E  D004               	goto	l3238
  1354                           
  1355                           ; BSR set to: 0
  1356                           ;doprnt.c: 842: exp--;
  1357  000A80  0100               	movlb	0	; () banked
  1358  000A82  076C               	decf	sprintf@exp& (0+255),f,b
  1359  000A84  A0D8               	btfss	status,0,c
  1360  000A86  076D               	decf	(sprintf@exp+1)& (0+255),f,b
  1361  000A88                     l3238:
  1362                           
  1363                           ; BSR set to: 0
  1364                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  1365  000A88  0100               	movlb	0	; () banked
  1366  000A8A  516C               	movf	sprintf@exp& (0+255),w,b
  1367  000A8C  0800               	sublw	0
  1368  000A8E  EC66  F008         	call	_scale
  1369  000A92  C028  F06E         	movff	?_scale,sprintf@tmpval
  1370  000A96  C029  F06F         	movff	?_scale+1,sprintf@tmpval+1
  1371  000A9A  C02A  F070         	movff	?_scale+2,sprintf@tmpval+2
  1372  000A9E  C02B  F071         	movff	?_scale+3,sprintf@tmpval+3
  1373                           
  1374                           ;doprnt.c: 847: tmpval.integ *= fval;
  1375  000AA2  C06E  F00F         	movff	sprintf@tmpval,___flmul@b
  1376  000AA6  C06F  F010         	movff	sprintf@tmpval+1,___flmul@b+1
  1377  000AAA  C070  F011         	movff	sprintf@tmpval+2,___flmul@b+2
  1378  000AAE  C071  F012         	movff	sprintf@tmpval+3,___flmul@b+3
  1379  000AB2  C074  F013         	movff	sprintf@fval,___flmul@a
  1380  000AB6  C075  F014         	movff	sprintf@fval+1,___flmul@a+1
  1381  000ABA  C076  F015         	movff	sprintf@fval+2,___flmul@a+2
  1382  000ABE  C077  F016         	movff	sprintf@fval+3,___flmul@a+3
  1383  000AC2  EC72  F00A         	call	___flmul	;wreg free
  1384  000AC6  C00F  F06E         	movff	?___flmul,sprintf@tmpval
  1385  000ACA  C010  F06F         	movff	?___flmul+1,sprintf@tmpval+1
  1386  000ACE  C011  F070         	movff	?___flmul+2,sprintf@tmpval+2
  1387  000AD2  C012  F071         	movff	?___flmul+3,sprintf@tmpval+3
  1388                           
  1389                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  1390  000AD6  C06E  F001         	movff	sprintf@tmpval,___flge@ff1
  1391  000ADA  C06F  F002         	movff	sprintf@tmpval+1,___flge@ff1+1
  1392  000ADE  C070  F003         	movff	sprintf@tmpval+2,___flge@ff1+2
  1393  000AE2  C071  F004         	movff	sprintf@tmpval+3,___flge@ff1+3
  1394  000AE6  0E00               	movlw	0
  1395  000AE8  6E05               	movwf	___flge@ff2,c
  1396  000AEA  0E00               	movlw	0
  1397  000AEC  6E06               	movwf	___flge@ff2+1,c
  1398  000AEE  0E80               	movlw	128
  1399  000AF0  6E07               	movwf	___flge@ff2+2,c
  1400  000AF2  0E3F               	movlw	63
  1401  000AF4  6E08               	movwf	___flge@ff2+3,c
  1402  000AF6  ECD1  F012         	call	___flge	;wreg free
  1403  000AFA  B0D8               	btfsc	status,0,c
  1404  000AFC  D005               	goto	l3246
  1405                           
  1406                           ;doprnt.c: 849: exp--;
  1407  000AFE  0100               	movlb	0	; () banked
  1408  000B00  076C               	decf	sprintf@exp& (0+255),f,b
  1409  000B02  A0D8               	btfss	status,0,c
  1410  000B04  076D               	decf	(sprintf@exp+1)& (0+255),f,b
  1411  000B06  D017               	goto	l3250
  1412  000B08                     l3246:
  1413                           
  1414                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  1415  000B08  C06E  F001         	movff	sprintf@tmpval,___flge@ff1
  1416  000B0C  C06F  F002         	movff	sprintf@tmpval+1,___flge@ff1+1
  1417  000B10  C070  F003         	movff	sprintf@tmpval+2,___flge@ff1+2
  1418  000B14  C071  F004         	movff	sprintf@tmpval+3,___flge@ff1+3
  1419  000B18  0E00               	movlw	0
  1420  000B1A  6E05               	movwf	___flge@ff2,c
  1421  000B1C  0E00               	movlw	0
  1422  000B1E  6E06               	movwf	___flge@ff2+1,c
  1423  000B20  0E20               	movlw	32
  1424  000B22  6E07               	movwf	___flge@ff2+2,c
  1425  000B24  0E41               	movlw	65
  1426  000B26  6E08               	movwf	___flge@ff2+3,c
  1427  000B28  ECD1  F012         	call	___flge	;wreg free
  1428  000B2C  A0D8               	btfss	status,0,c
  1429  000B2E  D003               	goto	l3250
  1430                           
  1431                           ;doprnt.c: 851: exp++;
  1432  000B30  0100               	movlb	0	; () banked
  1433  000B32  4B6C               	infsnz	sprintf@exp& (0+255),f,b
  1434  000B34  2B6D               	incf	(sprintf@exp+1)& (0+255),f,b
  1435  000B36                     l3250:
  1436                           
  1437                           ;doprnt.c: 852: }
  1438                           ;doprnt.c: 1112: if(prec <= 12)
  1439  000B36  0100               	movlb	0	; () banked
  1440  000B38  BF73               	btfsc	(sprintf@prec+1)& (0+255),7,b
  1441  000B3A  D008               	goto	l3252
  1442  000B3C  0100               	movlb	0	; () banked
  1443  000B3E  5173               	movf	(sprintf@prec+1)& (0+255),w,b
  1444  000B40  E123               	bnz	l3254
  1445  000B42  0E0D               	movlw	13
  1446  000B44  0100               	movlb	0	; () banked
  1447  000B46  5D72               	subwf	sprintf@prec& (0+255),w,b
  1448  000B48  B0D8               	btfsc	status,0,c
  1449  000B4A  D01E               	goto	l3254
  1450  000B4C                     l3252:
  1451                           
  1452                           ; BSR set to: 0
  1453                           ;doprnt.c: 1113: fval += fround(prec);
  1454  000B4C  C074  F035         	movff	sprintf@fval,___fladd@b
  1455  000B50  C075  F036         	movff	sprintf@fval+1,___fladd@b+1
  1456  000B54  C076  F037         	movff	sprintf@fval+2,___fladd@b+2
  1457  000B58  C077  F038         	movff	sprintf@fval+3,___fladd@b+3
  1458  000B5C  0100               	movlb	0	; () banked
  1459  000B5E  5172               	movf	sprintf@prec& (0+255),w,b
  1460  000B60  EC12  F00F         	call	_fround
  1461  000B64  C028  F039         	movff	?_fround,___fladd@a
  1462  000B68  C029  F03A         	movff	?_fround+1,___fladd@a+1
  1463  000B6C  C02A  F03B         	movff	?_fround+2,___fladd@a+2
  1464  000B70  C02B  F03C         	movff	?_fround+3,___fladd@a+3
  1465  000B74  EC1A  F00C         	call	___fladd	;wreg free
  1466  000B78  C035  F074         	movff	?___fladd,sprintf@fval
  1467  000B7C  C036  F075         	movff	?___fladd+1,sprintf@fval+1
  1468  000B80  C037  F076         	movff	?___fladd+2,sprintf@fval+2
  1469  000B84  C038  F077         	movff	?___fladd+3,sprintf@fval+3
  1470  000B88                     l3254:
  1471                           
  1472                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  1473  000B88  0100               	movlb	0	; () banked
  1474  000B8A  BF6D               	btfsc	(sprintf@exp+1)& (0+255),7,b
  1475  000B8C  D008               	goto	l3256
  1476  000B8E  0100               	movlb	0	; () banked
  1477  000B90  516D               	movf	(sprintf@exp+1)& (0+255),w,b
  1478  000B92  E12A               	bnz	l3262
  1479  000B94  0E0A               	movlw	10
  1480  000B96  0100               	movlb	0	; () banked
  1481  000B98  5D6C               	subwf	sprintf@exp& (0+255),w,b
  1482  000B9A  B0D8               	btfsc	status,0,c
  1483  000B9C  D025               	goto	l3262
  1484  000B9E                     l3256:
  1485                           
  1486                           ; BSR set to: 0
  1487  000B9E  0100               	movlb	0	; () banked
  1488  000BA0  5174               	movf	sprintf@fval& (0+255),w,b
  1489  000BA2  0100               	movlb	0	; () banked
  1490  000BA4  1175               	iorwf	(sprintf@fval+1)& (0+255),w,b
  1491  000BA6  0100               	movlb	0	; () banked
  1492  000BA8  1176               	iorwf	(sprintf@fval+2)& (0+255),w,b
  1493  000BAA  0100               	movlb	0	; () banked
  1494  000BAC  1177               	iorwf	(sprintf@fval+3)& (0+255),w,b
  1495  000BAE  B4D8               	btfsc	status,2,c
  1496  000BB0  D067               	goto	l3276
  1497                           
  1498                           ; BSR set to: 0
  1499  000BB2  C074  F031         	movff	sprintf@fval,___fltol@f1
  1500  000BB6  C075  F032         	movff	sprintf@fval+1,___fltol@f1+1
  1501  000BBA  C076  F033         	movff	sprintf@fval+2,___fltol@f1+2
  1502  000BBE  C077  F034         	movff	sprintf@fval+3,___fltol@f1+3
  1503  000BC2  ECEE  F013         	call	___fltol	;wreg free
  1504  000BC6  5031               	movf	?___fltol,w,c
  1505  000BC8  1032               	iorwf	?___fltol+1,w,c
  1506  000BCA  1033               	iorwf	?___fltol+2,w,c
  1507  000BCC  1034               	iorwf	?___fltol+3,w,c
  1508  000BCE  A4D8               	btfss	status,2,c
  1509  000BD0  D057               	goto	l3276
  1510  000BD2  0100               	movlb	0	; () banked
  1511  000BD4  BF6D               	btfsc	(sprintf@exp+1)& (0+255),7,b
  1512  000BD6  D054               	goto	l3276
  1513  000BD8  0100               	movlb	0	; () banked
  1514  000BDA  516D               	movf	(sprintf@exp+1)& (0+255),w,b
  1515  000BDC  E105               	bnz	l3262
  1516  000BDE  0E02               	movlw	2
  1517  000BE0  0100               	movlb	0	; () banked
  1518  000BE2  5D6C               	subwf	sprintf@exp& (0+255),w,b
  1519  000BE4  A0D8               	btfss	status,0,c
  1520  000BE6  D04C               	goto	l3276
  1521  000BE8                     l3262:
  1522                           
  1523                           ; BSR set to: 0
  1524                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  1525  000BE8  C06E  F001         	movff	sprintf@tmpval,___flge@ff1
  1526  000BEC  C06F  F002         	movff	sprintf@tmpval+1,___flge@ff1+1
  1527  000BF0  C070  F003         	movff	sprintf@tmpval+2,___flge@ff1+2
  1528  000BF4  C071  F004         	movff	sprintf@tmpval+3,___flge@ff1+3
  1529  000BF8  0E5F               	movlw	95
  1530  000BFA  6E05               	movwf	___flge@ff2,c
  1531  000BFC  0E70               	movlw	112
  1532  000BFE  6E06               	movwf	___flge@ff2+1,c
  1533  000C00  0E89               	movlw	137
  1534  000C02  6E07               	movwf	___flge@ff2+2,c
  1535  000C04  0E40               	movlw	64
  1536  000C06  6E08               	movwf	___flge@ff2+3,c
  1537  000C08  ECD1  F012         	call	___flge	;wreg free
  1538  000C0C  B0D8               	btfsc	status,0,c
  1539  000C0E  D003               	goto	l3266
  1540                           
  1541                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  1542  000C10  0100               	movlb	0	; () banked
  1543  000C12  0EF7               	movlw	247
  1544  000C14  D002               	goto	L1
  1545  000C16                     l3266:
  1546                           
  1547                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  1548  000C16  0100               	movlb	0	; () banked
  1549  000C18  0EF8               	movlw	248
  1550  000C1A                     L1:
  1551  000C1A  276C               	addwf	sprintf@exp& (0+255),f,b
  1552  000C1C  0EFF               	movlw	255
  1553  000C1E  236D               	addwfc	(sprintf@exp+1)& (0+255),f,b
  1554                           
  1555                           ; BSR set to: 0
  1556                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  1557                           
  1558                           ; BSR set to: 0
  1559  000C20  0100               	movlb	0	; () banked
  1560  000C22  516C               	movf	sprintf@exp& (0+255),w,b
  1561  000C24  EC66  F008         	call	_scale
  1562  000C28  C028  F06E         	movff	?_scale,sprintf@tmpval
  1563  000C2C  C029  F06F         	movff	?_scale+1,sprintf@tmpval+1
  1564  000C30  C02A  F070         	movff	?_scale+2,sprintf@tmpval+2
  1565  000C34  C02B  F071         	movff	?_scale+3,sprintf@tmpval+3
  1566  000C38  C074  F001         	movff	sprintf@fval,__div_to_l_@f1
  1567  000C3C  C075  F002         	movff	sprintf@fval+1,__div_to_l_@f1+1
  1568  000C40  C076  F003         	movff	sprintf@fval+2,__div_to_l_@f1+2
  1569  000C44  C077  F004         	movff	sprintf@fval+3,__div_to_l_@f1+3
  1570  000C48  C06E  F005         	movff	sprintf@tmpval,__div_to_l_@f2
  1571  000C4C  C06F  F006         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
  1572  000C50  C070  F007         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
  1573  000C54  C071  F008         	movff	sprintf@tmpval+3,__div_to_l_@f2+3
  1574  000C58  EC3D  F012         	call	__div_to_l_	;wreg free
  1575  000C5C  C001  F068         	movff	?__div_to_l_,sprintf@val
  1576  000C60  C002  F069         	movff	?__div_to_l_+1,sprintf@val+1
  1577  000C64  C003  F06A         	movff	?__div_to_l_+2,sprintf@val+2
  1578  000C68  C004  F06B         	movff	?__div_to_l_+3,sprintf@val+3
  1579                           
  1580                           ;doprnt.c: 1129: fval = 0.0;
  1581  000C6C  0E00               	movlw	0
  1582  000C6E  0100               	movlb	0	; () banked
  1583  000C70  6F74               	movwf	sprintf@fval& (0+255),b
  1584  000C72  0E00               	movlw	0
  1585  000C74  6F75               	movwf	(sprintf@fval+1)& (0+255),b
  1586  000C76  0E00               	movlw	0
  1587  000C78  6F76               	movwf	(sprintf@fval+2)& (0+255),b
  1588  000C7A  0E00               	movlw	0
  1589  000C7C  6F77               	movwf	(sprintf@fval+3)& (0+255),b
  1590                           
  1591                           ;doprnt.c: 1130: } else {
  1592  000C7E  D03C               	goto	l3280
  1593  000C80                     l3276:
  1594                           
  1595                           ;doprnt.c: 1131: val = (unsigned long)fval;
  1596  000C80  C074  F031         	movff	sprintf@fval,___fltol@f1
  1597  000C84  C075  F032         	movff	sprintf@fval+1,___fltol@f1+1
  1598  000C88  C076  F033         	movff	sprintf@fval+2,___fltol@f1+2
  1599  000C8C  C077  F034         	movff	sprintf@fval+3,___fltol@f1+3
  1600  000C90  ECEE  F013         	call	___fltol	;wreg free
  1601  000C94  C031  F068         	movff	?___fltol,sprintf@val
  1602  000C98  C032  F069         	movff	?___fltol+1,sprintf@val+1
  1603  000C9C  C033  F06A         	movff	?___fltol+2,sprintf@val+2
  1604  000CA0  C034  F06B         	movff	?___fltol+3,sprintf@val+3
  1605                           
  1606                           ;doprnt.c: 1132: fval -= (double)val;
  1607  000CA4  C074  F049         	movff	sprintf@fval,___flsub@b
  1608  000CA8  C075  F04A         	movff	sprintf@fval+1,___flsub@b+1
  1609  000CAC  C076  F04B         	movff	sprintf@fval+2,___flsub@b+2
  1610  000CB0  C077  F04C         	movff	sprintf@fval+3,___flsub@b+3
  1611  000CB4  C068  F00F         	movff	sprintf@val,___xxtofl@val
  1612  000CB8  C069  F010         	movff	sprintf@val+1,___xxtofl@val+1
  1613  000CBC  C06A  F011         	movff	sprintf@val+2,___xxtofl@val+2
  1614  000CC0  C06B  F012         	movff	sprintf@val+3,___xxtofl@val+3
  1615  000CC4  0E00               	movlw	0
  1616  000CC6  ECFC  F010         	call	___xxtofl
  1617  000CCA  C00F  F04D         	movff	?___xxtofl,___flsub@a
  1618  000CCE  C010  F04E         	movff	?___xxtofl+1,___flsub@a+1
  1619  000CD2  C011  F04F         	movff	?___xxtofl+2,___flsub@a+2
  1620  000CD6  C012  F050         	movff	?___xxtofl+3,___flsub@a+3
  1621  000CDA  EC56  F016         	call	___flsub	;wreg free
  1622  000CDE  C049  F074         	movff	?___flsub,sprintf@fval
  1623  000CE2  C04A  F075         	movff	?___flsub+1,sprintf@fval+1
  1624  000CE6  C04B  F076         	movff	?___flsub+2,sprintf@fval+2
  1625  000CEA  C04C  F077         	movff	?___flsub+3,sprintf@fval+3
  1626                           
  1627                           ;doprnt.c: 1133: exp = 0;
  1628  000CEE  0E00               	movlw	0
  1629  000CF0  0100               	movlb	0	; () banked
  1630  000CF2  6F6D               	movwf	(sprintf@exp+1)& (0+255),b
  1631  000CF4  0E00               	movlw	0
  1632  000CF6  6F6C               	movwf	sprintf@exp& (0+255),b
  1633  000CF8                     l3280:
  1634                           
  1635                           ; BSR set to: 0
  1636                           ;doprnt.c: 1134: }
  1637                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  1638  000CF8  0E01               	movlw	1
  1639  000CFA  0100               	movlb	0	; () banked
  1640  000CFC  6F78               	movwf	sprintf@c& (0+255),b
  1641  000CFE                     l3282:
  1642                           
  1643                           ; BSR set to: 0
  1644  000CFE  0E0A               	movlw	10
  1645  000D00  0100               	movlb	0	; () banked
  1646  000D02  1978               	xorwf	sprintf@c& (0+255),w,b
  1647  000D04  B4D8               	btfsc	status,2,c
  1648  000D06  D01E               	goto	l3294
  1649                           
  1650                           ; BSR set to: 0
  1651                           ;doprnt.c: 1137: if(val < dpowers[c])
  1652                           
  1653                           ; BSR set to: 0
  1654                           
  1655                           ; BSR set to: 0
  1656  000D08  0100               	movlb	0	; () banked
  1657  000D0A  5178               	movf	sprintf@c& (0+255),w,b
  1658  000D0C  0D04               	mullw	4
  1659  000D0E  0E69               	movlw	low _dpowers
  1660  000D10  24F3               	addwf	prodl,w,c
  1661  000D12  6EF6               	movwf	tblptrl,c
  1662  000D14  0E08               	movlw	high _dpowers
  1663  000D16  20F4               	addwfc	prodh,w,c
  1664  000D18  6EF7               	movwf	tblptrh,c
  1665  000D1A                     	if	0	;There are less than 3 active tblptr bytes
  1666  000D1A                     	endif
  1667  000D1A  0009               	tblrd		*+
  1668  000D1C  50F5               	movf	tablat,w,c
  1669  000D1E  0100               	movlb	0	; () banked
  1670  000D20  5D68               	subwf	sprintf@val& (0+255),w,b
  1671  000D22  0009               	tblrd		*+
  1672  000D24  50F5               	movf	tablat,w,c
  1673  000D26  0100               	movlb	0	; () banked
  1674  000D28  5969               	subwfb	(sprintf@val+1)& (0+255),w,b
  1675  000D2A  0009               	tblrd		*+
  1676  000D2C  50F5               	movf	tablat,w,c
  1677  000D2E  0100               	movlb	0	; () banked
  1678  000D30  596A               	subwfb	(sprintf@val+2)& (0+255),w,b
  1679  000D32  0009               	tblrd		*+
  1680  000D34  50F5               	movf	tablat,w,c
  1681  000D36  0100               	movlb	0	; () banked
  1682  000D38  596B               	subwfb	(sprintf@val+3)& (0+255),w,b
  1683  000D3A  A0D8               	btfss	status,0,c
  1684  000D3C  D003               	goto	l3294
  1685                           
  1686                           ; BSR set to: 0
  1687                           
  1688                           ; BSR set to: 0
  1689                           
  1690                           ; BSR set to: 0
  1691                           ;doprnt.c: 1138: break;
  1692  000D3E  0100               	movlb	0	; () banked
  1693  000D40  2B78               	incf	sprintf@c& (0+255),f,b
  1694  000D42  D7DD               	goto	l3282
  1695  000D44                     l3294:
  1696                           
  1697                           ; BSR set to: 0
  1698                           ;doprnt.c: 1175: {
  1699                           ;doprnt.c: 1188: if(flag & 0x03)
  1700  000D44  0E03               	movlw	3
  1701  000D46  0100               	movlb	0	; () banked
  1702  000D48  1566               	andwf	sprintf@flag& (0+255),w,b
  1703  000D4A  6E59               	movwf	??_sprintf& (0+255),c
  1704  000D4C  0E00               	movlw	0
  1705  000D4E  0100               	movlb	0	; () banked
  1706  000D50  1567               	andwf	(sprintf@flag+1)& (0+255),w,b
  1707  000D52  6E5A               	movwf	(??_sprintf+1)& (0+255),c
  1708  000D54  5059               	movf	??_sprintf,w,c
  1709  000D56  105A               	iorwf	??_sprintf+1,w,c
  1710  000D58  B4D8               	btfsc	status,2,c
  1711  000D5A  D053               	goto	l3308
  1712                           
  1713                           ; BSR set to: 0
  1714                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  1715  000D5C  C051  FFD9         	movff	sprintf@sp,fsr2l
  1716  000D60  C052  FFDA         	movff	sprintf@sp+1,fsr2h
  1717  000D64  0E2D               	movlw	45
  1718  000D66  D04B               	goto	L2
  1719  000D68                     l3298:
  1720                           
  1721                           ; BSR set to: 0
  1722  000D68  4A51               	infsnz	sprintf@sp,f,c
  1723  000D6A  2A52               	incf	sprintf@sp+1,f,c
  1724                           
  1725                           ; BSR set to: 0
  1726                           ;doprnt.c: 1195: }
  1727                           ;doprnt.c: 1196: while(c--) {
  1728  000D6C  D04A               	goto	l3308
  1729  000D6E                     l3300:
  1730                           
  1731                           ; BSR set to: 0
  1732                           ;doprnt.c: 1200: {
  1733                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  1734  000D6E  C068  F001         	movff	sprintf@val,___lldiv@dividend
  1735  000D72  C069  F002         	movff	sprintf@val+1,___lldiv@dividend+1
  1736  000D76  C06A  F003         	movff	sprintf@val+2,___lldiv@dividend+2
  1737  000D7A  C06B  F004         	movff	sprintf@val+3,___lldiv@dividend+3
  1738  000D7E  0100               	movlb	0	; () banked
  1739  000D80  5178               	movf	sprintf@c& (0+255),w,b
  1740  000D82  0D04               	mullw	4
  1741  000D84  0E69               	movlw	low _dpowers
  1742  000D86  24F3               	addwf	prodl,w,c
  1743  000D88  6EF6               	movwf	tblptrl,c
  1744  000D8A  0E08               	movlw	high _dpowers
  1745  000D8C  20F4               	addwfc	prodh,w,c
  1746  000D8E  6EF7               	movwf	tblptrh,c
  1747  000D90                     	if	0	;There are less than 3 active tblptr bytes
  1748  000D90                     	endif
  1749  000D90  0009               	tblrd		*+
  1750  000D92  CFF5 F005          	movff	tablat,___lldiv@divisor
  1751  000D96  0009               	tblrd		*+
  1752  000D98  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  1753  000D9C  0009               	tblrd		*+
  1754  000D9E  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  1755  000DA2  000A               	tblrd		*-
  1756  000DA4  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  1757  000DA8  ECFA  F014         	call	___lldiv	;wreg free
  1758  000DAC  C001  F06E         	movff	?___lldiv,sprintf@tmpval
  1759  000DB0  C002  F06F         	movff	?___lldiv+1,sprintf@tmpval+1
  1760  000DB4  C003  F070         	movff	?___lldiv+2,sprintf@tmpval+2
  1761  000DB8  C004  F071         	movff	?___lldiv+3,sprintf@tmpval+3
  1762                           
  1763                           ;doprnt.c: 1202: tmpval.vd %= 10;
  1764  000DBC  C06E  F001         	movff	sprintf@tmpval,___llmod@dividend
  1765  000DC0  C06F  F002         	movff	sprintf@tmpval+1,___llmod@dividend+1
  1766  000DC4  C070  F003         	movff	sprintf@tmpval+2,___llmod@dividend+2
  1767  000DC8  C071  F004         	movff	sprintf@tmpval+3,___llmod@dividend+3
  1768  000DCC  0E0A               	movlw	10
  1769  000DCE  6E05               	movwf	___llmod@divisor,c
  1770  000DD0  0E00               	movlw	0
  1771  000DD2  6E06               	movwf	___llmod@divisor+1,c
  1772  000DD4  0E00               	movlw	0
  1773  000DD6  6E07               	movwf	___llmod@divisor+2,c
  1774  000DD8  0E00               	movlw	0
  1775  000DDA  6E08               	movwf	___llmod@divisor+3,c
  1776  000DDC  ECAB  F015         	call	___llmod	;wreg free
  1777  000DE0  C001  F06E         	movff	?___llmod,sprintf@tmpval
  1778  000DE4  C002  F06F         	movff	?___llmod+1,sprintf@tmpval+1
  1779  000DE8  C003  F070         	movff	?___llmod+2,sprintf@tmpval+2
  1780  000DEC  C004  F071         	movff	?___llmod+3,sprintf@tmpval+3
  1781                           
  1782                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  1783  000DF0  0100               	movlb	0	; () banked
  1784  000DF2  516E               	movf	sprintf@tmpval& (0+255),w,b
  1785  000DF4  0F30               	addlw	48
  1786  000DF6  C051  FFD9         	movff	sprintf@sp,fsr2l
  1787  000DFA  C052  FFDA         	movff	sprintf@sp+1,fsr2h
  1788  000DFE                     L2:
  1789  000DFE  6EDF               	movwf	indf2,c
  1790  000E00  D7B3               	goto	l3298
  1791  000E02                     l3308:
  1792                           
  1793                           ; BSR set to: 0
  1794  000E02  0100               	movlb	0	; () banked
  1795  000E04  0778               	decf	sprintf@c& (0+255),f,b
  1796  000E06  0100               	movlb	0	; () banked
  1797  000E08  2978               	incf	sprintf@c& (0+255),w,b
  1798  000E0A  B4D8               	btfsc	status,2,c
  1799  000E0C  D00D               	goto	l3316
  1800  000E0E  D7AF               	goto	l3300
  1801  000E10                     l3310:
  1802                           
  1803                           ; BSR set to: 0
  1804                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  1805  000E10  C051  FFD9         	movff	sprintf@sp,fsr2l
  1806  000E14  C052  FFDA         	movff	sprintf@sp+1,fsr2h
  1807  000E18  0E30               	movlw	48
  1808  000E1A  6EDF               	movwf	indf2,c
  1809                           
  1810                           ; BSR set to: 0
  1811  000E1C  4A51               	infsnz	sprintf@sp,f,c
  1812  000E1E  2A52               	incf	sprintf@sp+1,f,c
  1813                           
  1814                           ; BSR set to: 0
  1815                           ;doprnt.c: 1209: exp--;
  1816  000E20  0100               	movlb	0	; () banked
  1817  000E22  076C               	decf	sprintf@exp& (0+255),f,b
  1818  000E24  A0D8               	btfss	status,0,c
  1819  000E26  076D               	decf	(sprintf@exp+1)& (0+255),f,b
  1820  000E28                     l3316:
  1821                           
  1822                           ; BSR set to: 0
  1823  000E28  0100               	movlb	0	; () banked
  1824  000E2A  BF6D               	btfsc	(sprintf@exp+1)& (0+255),7,b
  1825  000E2C  D007               	goto	l3318
  1826  000E2E  0100               	movlb	0	; () banked
  1827  000E30  516D               	movf	(sprintf@exp+1)& (0+255),w,b
  1828  000E32  E1EE               	bnz	l3310
  1829  000E34  0100               	movlb	0	; () banked
  1830  000E36  056C               	decf	sprintf@exp& (0+255),w,b
  1831  000E38  B0D8               	btfsc	status,0,c
  1832  000E3A  D7EA               	goto	l3310
  1833  000E3C                     l3318:
  1834                           
  1835                           ; BSR set to: 0
  1836                           ;doprnt.c: 1210: }
  1837                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  1838  000E3C  0100               	movlb	0	; () banked
  1839  000E3E  BF73               	btfsc	(sprintf@prec+1)& (0+255),7,b
  1840  000E40  D00C               	goto	l246
  1841  000E42  0100               	movlb	0	; () banked
  1842  000E44  5173               	movf	(sprintf@prec+1)& (0+255),w,b
  1843  000E46  E105               	bnz	u3540
  1844  000E48  0E09               	movlw	9
  1845  000E4A  0100               	movlb	0	; () banked
  1846  000E4C  5D72               	subwf	sprintf@prec& (0+255),w,b
  1847  000E4E  A0D8               	btfss	status,0,c
  1848  000E50  D004               	goto	l246
  1849  000E52                     u3540:
  1850                           
  1851                           ; BSR set to: 0
  1852                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  1853  000E52  0E08               	movlw	8
  1854  000E54  0100               	movlb	0	; () banked
  1855  000E56  6F78               	movwf	sprintf@c& (0+255),b
  1856  000E58  D002               	goto	l3322
  1857  000E5A                     l246:
  1858                           
  1859                           ; BSR set to: 0
  1860                           ;doprnt.c: 1213: else
  1861                           ;doprnt.c: 1214: c = prec;
  1862  000E5A  C072  F078         	movff	sprintf@prec,sprintf@c
  1863  000E5E                     l3322:
  1864                           
  1865                           ; BSR set to: 0
  1866                           ;doprnt.c: 1215: prec -= c;
  1867  000E5E  0100               	movlb	0	; () banked
  1868  000E60  5178               	movf	sprintf@c& (0+255),w,b
  1869  000E62  0100               	movlb	0	; () banked
  1870  000E64  5F72               	subwf	sprintf@prec& (0+255),f,b
  1871  000E66  0E00               	movlw	0
  1872  000E68  0100               	movlb	0	; () banked
  1873  000E6A  BF78               	btfsc	sprintf@c& (0+255),7,b
  1874  000E6C  0EFF               	movlw	255
  1875  000E6E  0100               	movlb	0	; () banked
  1876  000E70  5B73               	subwfb	(sprintf@prec+1)& (0+255),f,b
  1877                           
  1878                           ; BSR set to: 0
  1879                           ;doprnt.c: 1219: if(c)
  1880  000E72  0100               	movlb	0	; () banked
  1881  000E74  5178               	movf	sprintf@c& (0+255),w,b
  1882  000E76  0100               	movlb	0	; () banked
  1883  000E78  B4D8               	btfsc	status,2,c
  1884  000E7A  D008               	goto	l3330
  1885                           
  1886                           ; BSR set to: 0
  1887                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  1888  000E7C  C051  FFD9         	movff	sprintf@sp,fsr2l
  1889  000E80  C052  FFDA         	movff	sprintf@sp+1,fsr2h
  1890  000E84  0E2E               	movlw	46
  1891  000E86  6EDF               	movwf	indf2,c
  1892                           
  1893                           ; BSR set to: 0
  1894  000E88  4A51               	infsnz	sprintf@sp,f,c
  1895  000E8A  2A52               	incf	sprintf@sp+1,f,c
  1896  000E8C                     l3330:
  1897                           
  1898                           ; BSR set to: 0
  1899                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  1900  000E8C  0100               	movlb	0	; () banked
  1901  000E8E  5178               	movf	sprintf@c& (0+255),w,b
  1902  000E90  EC66  F008         	call	_scale
  1903  000E94  C028  F060         	movff	?_scale,_sprintf$1027
  1904  000E98  C029  F061         	movff	?_scale+1,_sprintf$1027+1
  1905  000E9C  C02A  F062         	movff	?_scale+2,_sprintf$1027+2
  1906  000EA0  C02B  F063         	movff	?_scale+3,_sprintf$1027+3
  1907                           
  1908                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  1909  000EA4  C074  F013         	movff	sprintf@fval,___flmul@a
  1910  000EA8  C075  F014         	movff	sprintf@fval+1,___flmul@a+1
  1911  000EAC  C076  F015         	movff	sprintf@fval+2,___flmul@a+2
  1912  000EB0  C077  F016         	movff	sprintf@fval+3,___flmul@a+3
  1913  000EB4  C060  F00F         	movff	_sprintf$1027,___flmul@b
  1914  000EB8  C061  F010         	movff	_sprintf$1027+1,___flmul@b+1
  1915  000EBC  C062  F011         	movff	_sprintf$1027+2,___flmul@b+2
  1916  000EC0  C063  F012         	movff	_sprintf$1027+3,___flmul@b+3
  1917  000EC4  EC72  F00A         	call	___flmul	;wreg free
  1918  000EC8  C00F  F031         	movff	?___flmul,___fltol@f1
  1919  000ECC  C010  F032         	movff	?___flmul+1,___fltol@f1+1
  1920  000ED0  C011  F033         	movff	?___flmul+2,___fltol@f1+2
  1921  000ED4  C012  F034         	movff	?___flmul+3,___fltol@f1+3
  1922  000ED8  ECEE  F013         	call	___fltol	;wreg free
  1923  000EDC  C031  F068         	movff	?___fltol,sprintf@val
  1924  000EE0  C032  F069         	movff	?___fltol+1,sprintf@val+1
  1925  000EE4  C033  F06A         	movff	?___fltol+2,sprintf@val+2
  1926  000EE8  C034  F06B         	movff	?___fltol+3,sprintf@val+3
  1927                           
  1928                           ;doprnt.c: 1228: while(c--) {
  1929  000EEC  D072               	goto	l3344
  1930  000EEE                     l3334:
  1931                           
  1932                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  1933  000EEE  C068  F001         	movff	sprintf@val,___lldiv@dividend
  1934  000EF2  C069  F002         	movff	sprintf@val+1,___lldiv@dividend+1
  1935  000EF6  C06A  F003         	movff	sprintf@val+2,___lldiv@dividend+2
  1936  000EFA  C06B  F004         	movff	sprintf@val+3,___lldiv@dividend+3
  1937  000EFE  0100               	movlb	0	; () banked
  1938  000F00  5178               	movf	sprintf@c& (0+255),w,b
  1939  000F02  0D04               	mullw	4
  1940  000F04  0E69               	movlw	low _dpowers
  1941  000F06  24F3               	addwf	prodl,w,c
  1942  000F08  6EF6               	movwf	tblptrl,c
  1943  000F0A  0E08               	movlw	high _dpowers
  1944  000F0C  20F4               	addwfc	prodh,w,c
  1945  000F0E  6EF7               	movwf	tblptrh,c
  1946  000F10                     	if	0	;There are less than 3 active tblptr bytes
  1947  000F10                     	endif
  1948  000F10  0009               	tblrd		*+
  1949  000F12  CFF5 F005          	movff	tablat,___lldiv@divisor
  1950  000F16  0009               	tblrd		*+
  1951  000F18  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  1952  000F1C  0009               	tblrd		*+
  1953  000F1E  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  1954  000F22  000A               	tblrd		*-
  1955  000F24  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  1956  000F28  ECFA  F014         	call	___lldiv	;wreg free
  1957  000F2C  C001  F06E         	movff	?___lldiv,sprintf@tmpval
  1958  000F30  C002  F06F         	movff	?___lldiv+1,sprintf@tmpval+1
  1959  000F34  C003  F070         	movff	?___lldiv+2,sprintf@tmpval+2
  1960  000F38  C004  F071         	movff	?___lldiv+3,sprintf@tmpval+3
  1961                           
  1962                           ;doprnt.c: 1230: tmpval.vd %= 10;
  1963  000F3C  C06E  F001         	movff	sprintf@tmpval,___llmod@dividend
  1964  000F40  C06F  F002         	movff	sprintf@tmpval+1,___llmod@dividend+1
  1965  000F44  C070  F003         	movff	sprintf@tmpval+2,___llmod@dividend+2
  1966  000F48  C071  F004         	movff	sprintf@tmpval+3,___llmod@dividend+3
  1967  000F4C  0E0A               	movlw	10
  1968  000F4E  6E05               	movwf	___llmod@divisor,c
  1969  000F50  0E00               	movlw	0
  1970  000F52  6E06               	movwf	___llmod@divisor+1,c
  1971  000F54  0E00               	movlw	0
  1972  000F56  6E07               	movwf	___llmod@divisor+2,c
  1973  000F58  0E00               	movlw	0
  1974  000F5A  6E08               	movwf	___llmod@divisor+3,c
  1975  000F5C  ECAB  F015         	call	___llmod	;wreg free
  1976  000F60  C001  F06E         	movff	?___llmod,sprintf@tmpval
  1977  000F64  C002  F06F         	movff	?___llmod+1,sprintf@tmpval+1
  1978  000F68  C003  F070         	movff	?___llmod+2,sprintf@tmpval+2
  1979  000F6C  C004  F071         	movff	?___llmod+3,sprintf@tmpval+3
  1980                           
  1981                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  1982  000F70  0100               	movlb	0	; () banked
  1983  000F72  516E               	movf	sprintf@tmpval& (0+255),w,b
  1984  000F74  0F30               	addlw	48
  1985  000F76  C051  FFD9         	movff	sprintf@sp,fsr2l
  1986  000F7A  C052  FFDA         	movff	sprintf@sp+1,fsr2h
  1987  000F7E  6EDF               	movwf	indf2,c
  1988                           
  1989                           ; BSR set to: 0
  1990  000F80  4A51               	infsnz	sprintf@sp,f,c
  1991  000F82  2A52               	incf	sprintf@sp+1,f,c
  1992                           
  1993                           ; BSR set to: 0
  1994                           ;doprnt.c: 1232: val %= dpowers[c];
  1995  000F84  C068  F001         	movff	sprintf@val,___llmod@dividend
  1996  000F88  C069  F002         	movff	sprintf@val+1,___llmod@dividend+1
  1997  000F8C  C06A  F003         	movff	sprintf@val+2,___llmod@dividend+2
  1998  000F90  C06B  F004         	movff	sprintf@val+3,___llmod@dividend+3
  1999  000F94  0100               	movlb	0	; () banked
  2000  000F96  5178               	movf	sprintf@c& (0+255),w,b
  2001  000F98  0D04               	mullw	4
  2002  000F9A  0E69               	movlw	low _dpowers
  2003  000F9C  24F3               	addwf	prodl,w,c
  2004  000F9E  6EF6               	movwf	tblptrl,c
  2005  000FA0  0E08               	movlw	high _dpowers
  2006  000FA2  20F4               	addwfc	prodh,w,c
  2007  000FA4  6EF7               	movwf	tblptrh,c
  2008  000FA6                     	if	0	;There are less than 3 active tblptr bytes
  2009  000FA6                     	endif
  2010  000FA6  0009               	tblrd		*+
  2011  000FA8  CFF5 F005          	movff	tablat,___llmod@divisor
  2012  000FAC  0009               	tblrd		*+
  2013  000FAE  CFF5 F006          	movff	tablat,___llmod@divisor+1
  2014  000FB2  0009               	tblrd		*+
  2015  000FB4  CFF5 F007          	movff	tablat,___llmod@divisor+2
  2016  000FB8  000A               	tblrd		*-
  2017  000FBA  CFF5 F008          	movff	tablat,___llmod@divisor+3
  2018  000FBE  ECAB  F015         	call	___llmod	;wreg free
  2019  000FC2  C001  F068         	movff	?___llmod,sprintf@val
  2020  000FC6  C002  F069         	movff	?___llmod+1,sprintf@val+1
  2021  000FCA  C003  F06A         	movff	?___llmod+2,sprintf@val+2
  2022  000FCE  C004  F06B         	movff	?___llmod+3,sprintf@val+3
  2023  000FD2                     l3344:
  2024  000FD2  0100               	movlb	0	; () banked
  2025  000FD4  0778               	decf	sprintf@c& (0+255),f,b
  2026  000FD6  0100               	movlb	0	; () banked
  2027  000FD8  2978               	incf	sprintf@c& (0+255),w,b
  2028  000FDA  B4D8               	btfsc	status,2,c
  2029  000FDC  D00D               	goto	l3352
  2030  000FDE  D787               	goto	l3334
  2031  000FE0                     l3346:
  2032                           
  2033                           ; BSR set to: 0
  2034                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  2035  000FE0  C051  FFD9         	movff	sprintf@sp,fsr2l
  2036  000FE4  C052  FFDA         	movff	sprintf@sp+1,fsr2h
  2037  000FE8  0E30               	movlw	48
  2038  000FEA  6EDF               	movwf	indf2,c
  2039                           
  2040                           ; BSR set to: 0
  2041  000FEC  4A51               	infsnz	sprintf@sp,f,c
  2042  000FEE  2A52               	incf	sprintf@sp+1,f,c
  2043                           
  2044                           ; BSR set to: 0
  2045                           ;doprnt.c: 1237: prec--;
  2046  000FF0  0100               	movlb	0	; () banked
  2047  000FF2  0772               	decf	sprintf@prec& (0+255),f,b
  2048  000FF4  A0D8               	btfss	status,0,c
  2049  000FF6  0773               	decf	(sprintf@prec+1)& (0+255),f,b
  2050  000FF8                     l3352:
  2051                           
  2052                           ; BSR set to: 0
  2053  000FF8  0100               	movlb	0	; () banked
  2054  000FFA  5172               	movf	sprintf@prec& (0+255),w,b
  2055  000FFC  0100               	movlb	0	; () banked
  2056  000FFE  1173               	iorwf	(sprintf@prec+1)& (0+255),w,b
  2057  001000  B4D8               	btfsc	status,2,c
  2058  001002  D050               	goto	l3374
  2059  001004  D7ED               	goto	l3346
  2060  001006                     l3354:
  2061                           
  2062                           ; BSR set to: 0
  2063                           ;doprnt.c: 1246: }
  2064                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  2065  001006  0100               	movlb	0	; () banked
  2066  001008  5172               	movf	sprintf@prec& (0+255),w,b
  2067  00100A  0100               	movlb	0	; () banked
  2068  00100C  1173               	iorwf	(sprintf@prec+1)& (0+255),w,b
  2069  00100E  A4D8               	btfss	status,2,c
  2070  001010  D00D               	goto	l3360
  2071                           
  2072                           ; BSR set to: 0
  2073  001012  0100               	movlb	0	; () banked
  2074  001014  5168               	movf	sprintf@val& (0+255),w,b
  2075  001016  0100               	movlb	0	; () banked
  2076  001018  1169               	iorwf	(sprintf@val+1)& (0+255),w,b
  2077  00101A  0100               	movlb	0	; () banked
  2078  00101C  116A               	iorwf	(sprintf@val+2)& (0+255),w,b
  2079  00101E  0100               	movlb	0	; () banked
  2080  001020  116B               	iorwf	(sprintf@val+3)& (0+255),w,b
  2081  001022  A4D8               	btfss	status,2,c
  2082  001024  D003               	goto	l3360
  2083                           
  2084                           ; BSR set to: 0
  2085                           ;doprnt.c: 1291: prec++;
  2086  001026  0100               	movlb	0	; () banked
  2087  001028  4B72               	infsnz	sprintf@prec& (0+255),f,b
  2088  00102A  2B73               	incf	(sprintf@prec+1)& (0+255),f,b
  2089  00102C                     l3360:
  2090                           
  2091                           ; BSR set to: 0
  2092                           ;doprnt.c: 1339: if(c < prec)
  2093  00102C  0E80               	movlw	128
  2094  00102E  0100               	movlb	0	; () banked
  2095  001030  BF78               	btfsc	sprintf@c& (0+255),7,b
  2096  001032  0E7F               	movlw	127
  2097  001034  6E59               	movwf	??_sprintf& (0+255),c
  2098  001036  0100               	movlb	0	; () banked
  2099  001038  5172               	movf	sprintf@prec& (0+255),w,b
  2100  00103A  0100               	movlb	0	; () banked
  2101  00103C  5D78               	subwf	sprintf@c& (0+255),w,b
  2102  00103E  0100               	movlb	0	; () banked
  2103  001040  5173               	movf	(sprintf@prec+1)& (0+255),w,b
  2104  001042  0A80               	xorlw	128
  2105  001044  5859               	subwfb	??_sprintf& (0+255),w,c
  2106  001046  B0D8               	btfsc	status,0,c
  2107  001048  D003               	goto	l3364
  2108                           
  2109                           ; BSR set to: 0
  2110                           ;doprnt.c: 1340: c = prec;
  2111  00104A  C072  F078         	movff	sprintf@prec,sprintf@c
  2112  00104E  D016               	goto	l3368
  2113  001050                     l3364:
  2114                           
  2115                           ; BSR set to: 0
  2116                           ;doprnt.c: 1341: else if(prec < c)
  2117  001050  0100               	movlb	0	; () banked
  2118  001052  5173               	movf	(sprintf@prec+1)& (0+255),w,b
  2119  001054  0A80               	xorlw	128
  2120  001056  6E59               	movwf	??_sprintf& (0+255),c
  2121  001058  0100               	movlb	0	; () banked
  2122  00105A  5178               	movf	sprintf@c& (0+255),w,b
  2123  00105C  0100               	movlb	0	; () banked
  2124  00105E  5D72               	subwf	sprintf@prec& (0+255),w,b
  2125  001060  0E80               	movlw	128
  2126  001062  0100               	movlb	0	; () banked
  2127  001064  BF78               	btfsc	sprintf@c& (0+255),7,b
  2128  001066  0E7F               	movlw	127
  2129  001068  5859               	subwfb	??_sprintf& (0+255),w,c
  2130  00106A  B0D8               	btfsc	status,0,c
  2131  00106C  D007               	goto	l3368
  2132                           
  2133                           ; BSR set to: 0
  2134                           ;doprnt.c: 1342: prec = c;
  2135  00106E  0100               	movlb	0	; () banked
  2136  001070  5178               	movf	sprintf@c& (0+255),w,b
  2137  001072  0100               	movlb	0	; () banked
  2138  001074  6F72               	movwf	sprintf@prec& (0+255),b
  2139  001076  6B73               	clrf	(sprintf@prec+1)& (0+255),b
  2140  001078  BF72               	btfsc	sprintf@prec& (0+255),7,b
  2141  00107A  0773               	decf	(sprintf@prec+1)& (0+255),f,b
  2142  00107C                     l3368:
  2143                           
  2144                           ; BSR set to: 0
  2145                           ;doprnt.c: 1422: {
  2146                           ;doprnt.c: 1438: if(flag & 0x03)
  2147  00107C  0E03               	movlw	3
  2148  00107E  0100               	movlb	0	; () banked
  2149  001080  1566               	andwf	sprintf@flag& (0+255),w,b
  2150  001082  6E59               	movwf	??_sprintf& (0+255),c
  2151  001084  0E00               	movlw	0
  2152  001086  0100               	movlb	0	; () banked
  2153  001088  1567               	andwf	(sprintf@flag+1)& (0+255),w,b
  2154  00108A  6E5A               	movwf	(??_sprintf+1)& (0+255),c
  2155  00108C  5059               	movf	??_sprintf,w,c
  2156  00108E  105A               	iorwf	??_sprintf+1,w,c
  2157  001090  B4D8               	btfsc	status,2,c
  2158  001092  D008               	goto	l3374
  2159                           
  2160                           ; BSR set to: 0
  2161                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  2162  001094  C051  FFD9         	movff	sprintf@sp,fsr2l
  2163  001098  C052  FFDA         	movff	sprintf@sp+1,fsr2h
  2164  00109C  0E2D               	movlw	45
  2165  00109E  6EDF               	movwf	indf2,c
  2166  0010A0                     l3372:
  2167                           
  2168                           ; BSR set to: 0
  2169  0010A0  4A51               	infsnz	sprintf@sp,f,c
  2170  0010A2  2A52               	incf	sprintf@sp+1,f,c
  2171  0010A4                     l3374:
  2172                           
  2173                           ; BSR set to: 0
  2174  0010A4  C053  FFF6         	movff	sprintf@f,tblptrl
  2175  0010A8  C054  FFF7         	movff	sprintf@f+1,tblptrh
  2176  0010AC  4A53               	infsnz	sprintf@f,f,c
  2177  0010AE  2A54               	incf	sprintf@f+1,f,c
  2178  0010B0                     	if	0	;tblptru may be non-zero
  2179  0010B0                     	endif
  2180  0010B0                     	if	0	;tblptru may be non-zero
  2181  0010B0                     	endif
  2182  0010B0  0008               	tblrd		*
  2183  0010B2  CFF5 F078          	movff	tablat,sprintf@c
  2184  0010B6  0100               	movlb	0	; () banked
  2185  0010B8  5178               	movf	sprintf@c& (0+255),w,b
  2186  0010BA  A4D8               	btfss	status,2,c
  2187  0010BC  D406               	goto	l3176
  2188  0010BE                     l3376:
  2189                           
  2190                           ; BSR set to: 0
  2191                           ;doprnt.c: 1538: *sp = 0;
  2192  0010BE  C051  FFD9         	movff	sprintf@sp,fsr2l
  2193  0010C2  C052  FFDA         	movff	sprintf@sp+1,fsr2h
  2194  0010C6  0E00               	movlw	0
  2195  0010C8  6EDF               	movwf	indf2,c
  2196  0010CA  0012               	return	
  2197  0010CC                     __end_of_sprintf:
  2198                           	opt stack 0
  2199                           tblptru	equ	0xFF8
  2200                           tblptrh	equ	0xFF7
  2201                           tblptrl	equ	0xFF6
  2202                           tablat	equ	0xFF5
  2203                           prodh	equ	0xFF4
  2204                           prodl	equ	0xFF3
  2205                           postinc0	equ	0xFEE
  2206                           wreg	equ	0xFE8
  2207                           indf2	equ	0xFDF
  2208                           postinc2	equ	0xFDE
  2209                           fsr2h	equ	0xFDA
  2210                           fsr2l	equ	0xFD9
  2211                           status	equ	0xFD8
  2212                           
  2213 ;; *************** function _scale *****************
  2214 ;; Defined at:
  2215 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\doprnt.c"
  2216 ;; Parameters:    Size  Location     Type
  2217 ;;  scl             1    wreg     char 
  2218 ;; Auto vars:     Size  Location     Type
  2219 ;;  scl             1   47[COMRAM] char 
  2220 ;; Return value:  Size  Location     Type
  2221 ;;                  4   39[COMRAM] char 
  2222 ;; Registers used:
  2223 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2224 ;; Tracked objects:
  2225 ;;		On entry : 0/0
  2226 ;;		On exit  : 0/0
  2227 ;;		Unchanged: 0/0
  2228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2229 ;;      Params:         4       0       0       0       0       0       0       0       0
  2230 ;;      Locals:         5       0       0       0       0       0       0       0       0
  2231 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2232 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2233 ;;Total ram usage:        9 bytes
  2234 ;; Hardware stack levels used:    1
  2235 ;; Hardware stack levels required when called:    1
  2236 ;; This function calls:
  2237 ;;		___awdiv
  2238 ;;		___awmod
  2239 ;;		___flmul
  2240 ;; This function is called by:
  2241 ;;		_sprintf
  2242 ;; This function uses a non-reentrant model
  2243 ;;
  2244                           
  2245                           	psect	text3
  2246  0010CC                     __ptext3:
  2247                           	opt stack 0
  2248  0010CC                     _scale:
  2249                           	opt stack 27
  2250                           
  2251                           ; BSR set to: 0
  2252                           ;incstack = 0
  2253                           ;scale@scl stored from wreg
  2254  0010CC  6E30               	movwf	scale@scl,c
  2255                           
  2256                           ;doprnt.c: 428: if(scl < 0) {
  2257  0010CE  AE30               	btfss	scale@scl,7,c
  2258  0010D0  D105               	goto	l2798
  2259                           
  2260                           ;doprnt.c: 429: scl = -scl;
  2261  0010D2  6C30               	negf	scale@scl,c
  2262                           
  2263                           ;doprnt.c: 430: if(scl>=110)
  2264  0010D4  5030               	movf	scale@scl,w,c
  2265  0010D6  0A80               	xorlw	128
  2266  0010D8  0F12               	addlw	-238
  2267  0010DA  A0D8               	btfss	status,0,c
  2268  0010DC  D098               	goto	l2788
  2269                           
  2270                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  2271  0010DE  0E00               	movlw	0
  2272  0010E0  6E0A               	movwf	___awdiv@divisor+1,c
  2273  0010E2  0E0A               	movlw	10
  2274  0010E4  6E09               	movwf	___awdiv@divisor,c
  2275  0010E6  0E00               	movlw	0
  2276  0010E8  6E04               	movwf	___awmod@divisor+1,c
  2277  0010EA  0E64               	movlw	100
  2278  0010EC  6E03               	movwf	___awmod@divisor,c
  2279  0010EE  5030               	movf	scale@scl,w,c
  2280  0010F0  6E01               	movwf	___awmod@dividend,c
  2281  0010F2  6A02               	clrf	___awmod@dividend+1,c
  2282  0010F4  BE01               	btfsc	___awmod@dividend,7,c
  2283  0010F6  0602               	decf	___awmod@dividend+1,f,c
  2284  0010F8  EC3B  F015         	call	___awmod	;wreg free
  2285  0010FC  C001  F007         	movff	?___awmod,___awdiv@dividend
  2286  001100  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  2287  001104  ECB8  F014         	call	___awdiv	;wreg free
  2288  001108  90D8               	bcf	status,0,c
  2289  00110A  3607               	rlcf	?___awdiv,f,c
  2290  00110C  3608               	rlcf	?___awdiv+1,f,c
  2291  00110E  90D8               	bcf	status,0,c
  2292  001110  3607               	rlcf	?___awdiv,f,c
  2293  001112  3608               	rlcf	?___awdiv+1,f,c
  2294  001114  0E24               	movlw	36
  2295  001116  2607               	addwf	?___awdiv,f,c
  2296  001118  0E00               	movlw	0
  2297  00111A  2208               	addwfc	?___awdiv+1,f,c
  2298  00111C  0E01               	movlw	low __npowers_
  2299  00111E  2407               	addwf	?___awdiv,w,c
  2300  001120  6EF6               	movwf	tblptrl,c
  2301  001122  0E08               	movlw	high __npowers_
  2302  001124  2008               	addwfc	?___awdiv+1,w,c
  2303  001126  6EF7               	movwf	tblptrh,c
  2304  001128                     	if	0	;There are less than 3 active tblptr bytes
  2305  001128                     	endif
  2306  001128  0009               	tblrd		*+
  2307  00112A  CFF5 F013          	movff	tablat,___flmul@a
  2308  00112E  0009               	tblrd		*+
  2309  001130  CFF5 F014          	movff	tablat,___flmul@a+1
  2310  001134  0009               	tblrd		*+
  2311  001136  CFF5 F015          	movff	tablat,___flmul@a+2
  2312  00113A  000A               	tblrd		*-
  2313  00113C  CFF5 F016          	movff	tablat,___flmul@a+3
  2314  001140  0E00               	movlw	0
  2315  001142  6E0A               	movwf	___awdiv@divisor+1,c
  2316  001144  0E64               	movlw	100
  2317  001146  6E09               	movwf	___awdiv@divisor,c
  2318  001148  5030               	movf	scale@scl,w,c
  2319  00114A  6E07               	movwf	___awdiv@dividend,c
  2320  00114C  6A08               	clrf	___awdiv@dividend+1,c
  2321  00114E  BE07               	btfsc	___awdiv@dividend,7,c
  2322  001150  0608               	decf	___awdiv@dividend+1,f,c
  2323  001152  ECB8  F014         	call	___awdiv	;wreg free
  2324  001156  90D8               	bcf	status,0,c
  2325  001158  3607               	rlcf	?___awdiv,f,c
  2326  00115A  3608               	rlcf	?___awdiv+1,f,c
  2327  00115C  90D8               	bcf	status,0,c
  2328  00115E  3607               	rlcf	?___awdiv,f,c
  2329  001160  3608               	rlcf	?___awdiv+1,f,c
  2330  001162  0E48               	movlw	72
  2331  001164  2607               	addwf	?___awdiv,f,c
  2332  001166  0E00               	movlw	0
  2333  001168  2208               	addwfc	?___awdiv+1,f,c
  2334  00116A  0E01               	movlw	low __npowers_
  2335  00116C  2407               	addwf	?___awdiv,w,c
  2336  00116E  6EF6               	movwf	tblptrl,c
  2337  001170  0E08               	movlw	high __npowers_
  2338  001172  2008               	addwfc	?___awdiv+1,w,c
  2339  001174  6EF7               	movwf	tblptrh,c
  2340  001176                     	if	0	;There are less than 3 active tblptr bytes
  2341  001176                     	endif
  2342  001176  0009               	tblrd		*+
  2343  001178  CFF5 F00F          	movff	tablat,___flmul@b
  2344  00117C  0009               	tblrd		*+
  2345  00117E  CFF5 F010          	movff	tablat,___flmul@b+1
  2346  001182  0009               	tblrd		*+
  2347  001184  CFF5 F011          	movff	tablat,___flmul@b+2
  2348  001188  000A               	tblrd		*-
  2349  00118A  CFF5 F012          	movff	tablat,___flmul@b+3
  2350  00118E  EC72  F00A         	call	___flmul	;wreg free
  2351  001192  C00F  F02C         	movff	?___flmul,_scale$1026
  2352  001196  C010  F02D         	movff	?___flmul+1,_scale$1026+1
  2353  00119A  C011  F02E         	movff	?___flmul+2,_scale$1026+2
  2354  00119E  C012  F02F         	movff	?___flmul+3,_scale$1026+3
  2355                           
  2356                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  2357  0011A2  C02C  F00F         	movff	_scale$1026,___flmul@b
  2358  0011A6  C02D  F010         	movff	_scale$1026+1,___flmul@b+1
  2359  0011AA  C02E  F011         	movff	_scale$1026+2,___flmul@b+2
  2360  0011AE  C02F  F012         	movff	_scale$1026+3,___flmul@b+3
  2361  0011B2  0E00               	movlw	0
  2362  0011B4  6E04               	movwf	___awmod@divisor+1,c
  2363  0011B6  0E0A               	movlw	10
  2364  0011B8  6E03               	movwf	___awmod@divisor,c
  2365  0011BA  5030               	movf	scale@scl,w,c
  2366  0011BC  6E01               	movwf	___awmod@dividend,c
  2367  0011BE  6A02               	clrf	___awmod@dividend+1,c
  2368  0011C0  BE01               	btfsc	___awmod@dividend,7,c
  2369  0011C2  0602               	decf	___awmod@dividend+1,f,c
  2370  0011C4  EC3B  F015         	call	___awmod	;wreg free
  2371  0011C8  90D8               	bcf	status,0,c
  2372  0011CA  3601               	rlcf	?___awmod,f,c
  2373  0011CC  3602               	rlcf	?___awmod+1,f,c
  2374  0011CE  90D8               	bcf	status,0,c
  2375  0011D0  3601               	rlcf	?___awmod,f,c
  2376  0011D2  3602               	rlcf	?___awmod+1,f,c
  2377  0011D4  0E01               	movlw	low __npowers_
  2378  0011D6  2401               	addwf	?___awmod,w,c
  2379  0011D8  6EF6               	movwf	tblptrl,c
  2380  0011DA  0E08               	movlw	high __npowers_
  2381  0011DC  2002               	addwfc	?___awmod+1,w,c
  2382  0011DE  6EF7               	movwf	tblptrh,c
  2383  0011E0                     	if	0	;There are less than 3 active tblptr bytes
  2384  0011E0                     	endif
  2385  0011E0  0009               	tblrd		*+
  2386  0011E2  CFF5 F013          	movff	tablat,___flmul@a
  2387  0011E6  0009               	tblrd		*+
  2388  0011E8  CFF5 F014          	movff	tablat,___flmul@a+1
  2389  0011EC  0009               	tblrd		*+
  2390  0011EE  CFF5 F015          	movff	tablat,___flmul@a+2
  2391  0011F2  000A               	tblrd		*-
  2392  0011F4  CFF5 F016          	movff	tablat,___flmul@a+3
  2393  0011F8  EC72  F00A         	call	___flmul	;wreg free
  2394  0011FC  C00F  F028         	movff	?___flmul,?_scale
  2395  001200  C010  F029         	movff	?___flmul+1,?_scale+1
  2396  001204  C011  F02A         	movff	?___flmul+2,?_scale+2
  2397  001208  C012  F02B         	movff	?___flmul+3,?_scale+3
  2398  00120C  0012               	return	
  2399  00120E                     l2788:
  2400                           
  2401                           ;doprnt.c: 432: else if(scl > 10)
  2402  00120E  5030               	movf	scale@scl,w,c
  2403  001210  0A80               	xorlw	128
  2404  001212  0F75               	addlw	-139
  2405  001214  A0D8               	btfss	status,0,c
  2406  001216  D04D               	goto	l2794
  2407                           
  2408                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  2409  001218  0E00               	movlw	0
  2410  00121A  6E0A               	movwf	___awdiv@divisor+1,c
  2411  00121C  0E0A               	movlw	10
  2412  00121E  6E09               	movwf	___awdiv@divisor,c
  2413  001220  5030               	movf	scale@scl,w,c
  2414  001222  6E07               	movwf	___awdiv@dividend,c
  2415  001224  6A08               	clrf	___awdiv@dividend+1,c
  2416  001226  BE07               	btfsc	___awdiv@dividend,7,c
  2417  001228  0608               	decf	___awdiv@dividend+1,f,c
  2418  00122A  ECB8  F014         	call	___awdiv	;wreg free
  2419  00122E  90D8               	bcf	status,0,c
  2420  001230  3607               	rlcf	?___awdiv,f,c
  2421  001232  3608               	rlcf	?___awdiv+1,f,c
  2422  001234  90D8               	bcf	status,0,c
  2423  001236  3607               	rlcf	?___awdiv,f,c
  2424  001238  3608               	rlcf	?___awdiv+1,f,c
  2425  00123A  0E24               	movlw	36
  2426  00123C  2607               	addwf	?___awdiv,f,c
  2427  00123E  0E00               	movlw	0
  2428  001240  2208               	addwfc	?___awdiv+1,f,c
  2429  001242  0E01               	movlw	low __npowers_
  2430  001244  2407               	addwf	?___awdiv,w,c
  2431  001246  6EF6               	movwf	tblptrl,c
  2432  001248  0E08               	movlw	high __npowers_
  2433  00124A  2008               	addwfc	?___awdiv+1,w,c
  2434  00124C  6EF7               	movwf	tblptrh,c
  2435  00124E                     	if	0	;There are less than 3 active tblptr bytes
  2436  00124E                     	endif
  2437  00124E  0009               	tblrd		*+
  2438  001250  CFF5 F00F          	movff	tablat,___flmul@b
  2439  001254  0009               	tblrd		*+
  2440  001256  CFF5 F010          	movff	tablat,___flmul@b+1
  2441  00125A  0009               	tblrd		*+
  2442  00125C  CFF5 F011          	movff	tablat,___flmul@b+2
  2443  001260  000A               	tblrd		*-
  2444  001262  CFF5 F012          	movff	tablat,___flmul@b+3
  2445  001266  0E00               	movlw	0
  2446  001268  6E04               	movwf	___awmod@divisor+1,c
  2447  00126A  0E0A               	movlw	10
  2448  00126C  6E03               	movwf	___awmod@divisor,c
  2449  00126E  5030               	movf	scale@scl,w,c
  2450  001270  6E01               	movwf	___awmod@dividend,c
  2451  001272  6A02               	clrf	___awmod@dividend+1,c
  2452  001274  BE01               	btfsc	___awmod@dividend,7,c
  2453  001276  0602               	decf	___awmod@dividend+1,f,c
  2454  001278  EC3B  F015         	call	___awmod	;wreg free
  2455  00127C  90D8               	bcf	status,0,c
  2456  00127E  3601               	rlcf	?___awmod,f,c
  2457  001280  3602               	rlcf	?___awmod+1,f,c
  2458  001282  90D8               	bcf	status,0,c
  2459  001284  3601               	rlcf	?___awmod,f,c
  2460  001286  3602               	rlcf	?___awmod+1,f,c
  2461  001288  0E01               	movlw	low __npowers_
  2462  00128A  2401               	addwf	?___awmod,w,c
  2463  00128C  6EF6               	movwf	tblptrl,c
  2464  00128E  0E08               	movlw	high __npowers_
  2465  001290  2002               	addwfc	?___awmod+1,w,c
  2466  001292  6EF7               	movwf	tblptrh,c
  2467  001294                     	if	0	;There are less than 3 active tblptr bytes
  2468  001294                     	endif
  2469  001294  0009               	tblrd		*+
  2470  001296  CFF5 F013          	movff	tablat,___flmul@a
  2471  00129A  0009               	tblrd		*+
  2472  00129C  CFF5 F014          	movff	tablat,___flmul@a+1
  2473  0012A0  0009               	tblrd		*+
  2474  0012A2  CFF5 F015          	movff	tablat,___flmul@a+2
  2475  0012A6  000A               	tblrd		*-
  2476  0012A8  CFF5 F016          	movff	tablat,___flmul@a+3
  2477  0012AC  EC72  F00A         	call	___flmul	;wreg free
  2478  0012B0  D7A5               	goto	L3
  2479  0012B2                     l2794:
  2480                           
  2481                           ;doprnt.c: 434: return _npowers_[scl];
  2482  0012B2  5030               	movf	scale@scl,w,c
  2483  0012B4  0D04               	mullw	4
  2484  0012B6  0E01               	movlw	low __npowers_
  2485  0012B8  24F3               	addwf	prodl,w,c
  2486  0012BA  6EF6               	movwf	tblptrl,c
  2487  0012BC  0E08               	movlw	high __npowers_
  2488  0012BE  20F4               	addwfc	prodh,w,c
  2489  0012C0  6EF7               	movwf	tblptrh,c
  2490  0012C2                     	if	0	;There are less than 3 active tblptr bytes
  2491  0012C2                     	endif
  2492  0012C2  0009               	tblrd		*+
  2493  0012C4  CFF5 F028          	movff	tablat,?_scale
  2494  0012C8  0009               	tblrd		*+
  2495  0012CA  CFF5 F029          	movff	tablat,?_scale+1
  2496  0012CE  0009               	tblrd		*+
  2497  0012D0  CFF5 F02A          	movff	tablat,?_scale+2
  2498  0012D4  000A               	tblrd		*-
  2499  0012D6  CFF5 F02B          	movff	tablat,?_scale+3
  2500  0012DA  0012               	return	
  2501  0012DC                     l2798:
  2502                           
  2503                           ;doprnt.c: 435: }
  2504                           ;doprnt.c: 436: if(scl>=110)
  2505  0012DC  5030               	movf	scale@scl,w,c
  2506  0012DE  0A80               	xorlw	128
  2507  0012E0  0F12               	addlw	-238
  2508  0012E2  A0D8               	btfss	status,0,c
  2509  0012E4  D098               	goto	l2806
  2510                           
  2511                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  2512  0012E6  0E00               	movlw	0
  2513  0012E8  6E0A               	movwf	___awdiv@divisor+1,c
  2514  0012EA  0E0A               	movlw	10
  2515  0012EC  6E09               	movwf	___awdiv@divisor,c
  2516  0012EE  0E00               	movlw	0
  2517  0012F0  6E04               	movwf	___awmod@divisor+1,c
  2518  0012F2  0E64               	movlw	100
  2519  0012F4  6E03               	movwf	___awmod@divisor,c
  2520  0012F6  5030               	movf	scale@scl,w,c
  2521  0012F8  6E01               	movwf	___awmod@dividend,c
  2522  0012FA  6A02               	clrf	___awmod@dividend+1,c
  2523  0012FC  BE01               	btfsc	___awmod@dividend,7,c
  2524  0012FE  0602               	decf	___awmod@dividend+1,f,c
  2525  001300  EC3B  F015         	call	___awmod	;wreg free
  2526  001304  C001  F007         	movff	?___awmod,___awdiv@dividend
  2527  001308  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  2528  00130C  ECB8  F014         	call	___awdiv	;wreg free
  2529  001310  90D8               	bcf	status,0,c
  2530  001312  3607               	rlcf	?___awdiv,f,c
  2531  001314  3608               	rlcf	?___awdiv+1,f,c
  2532  001316  90D8               	bcf	status,0,c
  2533  001318  3607               	rlcf	?___awdiv,f,c
  2534  00131A  3608               	rlcf	?___awdiv+1,f,c
  2535  00131C  0E24               	movlw	36
  2536  00131E  2607               	addwf	?___awdiv,f,c
  2537  001320  0E00               	movlw	0
  2538  001322  2208               	addwfc	?___awdiv+1,f,c
  2539  001324  0E35               	movlw	low __powers_
  2540  001326  2407               	addwf	?___awdiv,w,c
  2541  001328  6EF6               	movwf	tblptrl,c
  2542  00132A  0E08               	movlw	high __powers_
  2543  00132C  2008               	addwfc	?___awdiv+1,w,c
  2544  00132E  6EF7               	movwf	tblptrh,c
  2545  001330                     	if	0	;There are less than 3 active tblptr bytes
  2546  001330                     	endif
  2547  001330  0009               	tblrd		*+
  2548  001332  CFF5 F013          	movff	tablat,___flmul@a
  2549  001336  0009               	tblrd		*+
  2550  001338  CFF5 F014          	movff	tablat,___flmul@a+1
  2551  00133C  0009               	tblrd		*+
  2552  00133E  CFF5 F015          	movff	tablat,___flmul@a+2
  2553  001342  000A               	tblrd		*-
  2554  001344  CFF5 F016          	movff	tablat,___flmul@a+3
  2555  001348  0E00               	movlw	0
  2556  00134A  6E0A               	movwf	___awdiv@divisor+1,c
  2557  00134C  0E64               	movlw	100
  2558  00134E  6E09               	movwf	___awdiv@divisor,c
  2559  001350  5030               	movf	scale@scl,w,c
  2560  001352  6E07               	movwf	___awdiv@dividend,c
  2561  001354  6A08               	clrf	___awdiv@dividend+1,c
  2562  001356  BE07               	btfsc	___awdiv@dividend,7,c
  2563  001358  0608               	decf	___awdiv@dividend+1,f,c
  2564  00135A  ECB8  F014         	call	___awdiv	;wreg free
  2565  00135E  90D8               	bcf	status,0,c
  2566  001360  3607               	rlcf	?___awdiv,f,c
  2567  001362  3608               	rlcf	?___awdiv+1,f,c
  2568  001364  90D8               	bcf	status,0,c
  2569  001366  3607               	rlcf	?___awdiv,f,c
  2570  001368  3608               	rlcf	?___awdiv+1,f,c
  2571  00136A  0E48               	movlw	72
  2572  00136C  2607               	addwf	?___awdiv,f,c
  2573  00136E  0E00               	movlw	0
  2574  001370  2208               	addwfc	?___awdiv+1,f,c
  2575  001372  0E35               	movlw	low __powers_
  2576  001374  2407               	addwf	?___awdiv,w,c
  2577  001376  6EF6               	movwf	tblptrl,c
  2578  001378  0E08               	movlw	high __powers_
  2579  00137A  2008               	addwfc	?___awdiv+1,w,c
  2580  00137C  6EF7               	movwf	tblptrh,c
  2581  00137E                     	if	0	;There are less than 3 active tblptr bytes
  2582  00137E                     	endif
  2583  00137E  0009               	tblrd		*+
  2584  001380  CFF5 F00F          	movff	tablat,___flmul@b
  2585  001384  0009               	tblrd		*+
  2586  001386  CFF5 F010          	movff	tablat,___flmul@b+1
  2587  00138A  0009               	tblrd		*+
  2588  00138C  CFF5 F011          	movff	tablat,___flmul@b+2
  2589  001390  000A               	tblrd		*-
  2590  001392  CFF5 F012          	movff	tablat,___flmul@b+3
  2591  001396  EC72  F00A         	call	___flmul	;wreg free
  2592  00139A  C00F  F02C         	movff	?___flmul,_scale$1026
  2593  00139E  C010  F02D         	movff	?___flmul+1,_scale$1026+1
  2594  0013A2  C011  F02E         	movff	?___flmul+2,_scale$1026+2
  2595  0013A6  C012  F02F         	movff	?___flmul+3,_scale$1026+3
  2596                           
  2597                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  2598  0013AA  C02C  F00F         	movff	_scale$1026,___flmul@b
  2599  0013AE  C02D  F010         	movff	_scale$1026+1,___flmul@b+1
  2600  0013B2  C02E  F011         	movff	_scale$1026+2,___flmul@b+2
  2601  0013B6  C02F  F012         	movff	_scale$1026+3,___flmul@b+3
  2602  0013BA  0E00               	movlw	0
  2603  0013BC  6E04               	movwf	___awmod@divisor+1,c
  2604  0013BE  0E0A               	movlw	10
  2605  0013C0  6E03               	movwf	___awmod@divisor,c
  2606  0013C2  5030               	movf	scale@scl,w,c
  2607  0013C4  6E01               	movwf	___awmod@dividend,c
  2608  0013C6  6A02               	clrf	___awmod@dividend+1,c
  2609  0013C8  BE01               	btfsc	___awmod@dividend,7,c
  2610  0013CA  0602               	decf	___awmod@dividend+1,f,c
  2611  0013CC  EC3B  F015         	call	___awmod	;wreg free
  2612  0013D0  90D8               	bcf	status,0,c
  2613  0013D2  3601               	rlcf	?___awmod,f,c
  2614  0013D4  3602               	rlcf	?___awmod+1,f,c
  2615  0013D6  90D8               	bcf	status,0,c
  2616  0013D8  3601               	rlcf	?___awmod,f,c
  2617  0013DA  3602               	rlcf	?___awmod+1,f,c
  2618  0013DC  0E35               	movlw	low __powers_
  2619  0013DE  2401               	addwf	?___awmod,w,c
  2620  0013E0  6EF6               	movwf	tblptrl,c
  2621  0013E2  0E08               	movlw	high __powers_
  2622  0013E4  2002               	addwfc	?___awmod+1,w,c
  2623  0013E6  6EF7               	movwf	tblptrh,c
  2624  0013E8                     	if	0	;There are less than 3 active tblptr bytes
  2625  0013E8                     	endif
  2626  0013E8  0009               	tblrd		*+
  2627  0013EA  CFF5 F013          	movff	tablat,___flmul@a
  2628  0013EE  0009               	tblrd		*+
  2629  0013F0  CFF5 F014          	movff	tablat,___flmul@a+1
  2630  0013F4  0009               	tblrd		*+
  2631  0013F6  CFF5 F015          	movff	tablat,___flmul@a+2
  2632  0013FA  000A               	tblrd		*-
  2633  0013FC  CFF5 F016          	movff	tablat,___flmul@a+3
  2634  001400  EC72  F00A         	call	___flmul	;wreg free
  2635  001404  C00F  F028         	movff	?___flmul,?_scale
  2636  001408  C010  F029         	movff	?___flmul+1,?_scale+1
  2637  00140C  C011  F02A         	movff	?___flmul+2,?_scale+2
  2638  001410  C012  F02B         	movff	?___flmul+3,?_scale+3
  2639  001414  0012               	return	
  2640  001416                     l2806:
  2641                           
  2642                           ;doprnt.c: 438: else if(scl > 10)
  2643  001416  5030               	movf	scale@scl,w,c
  2644  001418  0A80               	xorlw	128
  2645  00141A  0F75               	addlw	-139
  2646  00141C  A0D8               	btfss	status,0,c
  2647  00141E  D04D               	goto	l2812
  2648                           
  2649                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  2650  001420  0E00               	movlw	0
  2651  001422  6E0A               	movwf	___awdiv@divisor+1,c
  2652  001424  0E0A               	movlw	10
  2653  001426  6E09               	movwf	___awdiv@divisor,c
  2654  001428  5030               	movf	scale@scl,w,c
  2655  00142A  6E07               	movwf	___awdiv@dividend,c
  2656  00142C  6A08               	clrf	___awdiv@dividend+1,c
  2657  00142E  BE07               	btfsc	___awdiv@dividend,7,c
  2658  001430  0608               	decf	___awdiv@dividend+1,f,c
  2659  001432  ECB8  F014         	call	___awdiv	;wreg free
  2660  001436  90D8               	bcf	status,0,c
  2661  001438  3607               	rlcf	?___awdiv,f,c
  2662  00143A  3608               	rlcf	?___awdiv+1,f,c
  2663  00143C  90D8               	bcf	status,0,c
  2664  00143E  3607               	rlcf	?___awdiv,f,c
  2665  001440  3608               	rlcf	?___awdiv+1,f,c
  2666  001442  0E24               	movlw	36
  2667  001444  2607               	addwf	?___awdiv,f,c
  2668  001446  0E00               	movlw	0
  2669  001448  2208               	addwfc	?___awdiv+1,f,c
  2670  00144A  0E35               	movlw	low __powers_
  2671  00144C  2407               	addwf	?___awdiv,w,c
  2672  00144E  6EF6               	movwf	tblptrl,c
  2673  001450  0E08               	movlw	high __powers_
  2674  001452  2008               	addwfc	?___awdiv+1,w,c
  2675  001454  6EF7               	movwf	tblptrh,c
  2676  001456                     	if	0	;There are less than 3 active tblptr bytes
  2677  001456                     	endif
  2678  001456  0009               	tblrd		*+
  2679  001458  CFF5 F00F          	movff	tablat,___flmul@b
  2680  00145C  0009               	tblrd		*+
  2681  00145E  CFF5 F010          	movff	tablat,___flmul@b+1
  2682  001462  0009               	tblrd		*+
  2683  001464  CFF5 F011          	movff	tablat,___flmul@b+2
  2684  001468  000A               	tblrd		*-
  2685  00146A  CFF5 F012          	movff	tablat,___flmul@b+3
  2686  00146E  0E00               	movlw	0
  2687  001470  6E04               	movwf	___awmod@divisor+1,c
  2688  001472  0E0A               	movlw	10
  2689  001474  6E03               	movwf	___awmod@divisor,c
  2690  001476  5030               	movf	scale@scl,w,c
  2691  001478  6E01               	movwf	___awmod@dividend,c
  2692  00147A  6A02               	clrf	___awmod@dividend+1,c
  2693  00147C  BE01               	btfsc	___awmod@dividend,7,c
  2694  00147E  0602               	decf	___awmod@dividend+1,f,c
  2695  001480  EC3B  F015         	call	___awmod	;wreg free
  2696  001484  90D8               	bcf	status,0,c
  2697  001486  3601               	rlcf	?___awmod,f,c
  2698  001488  3602               	rlcf	?___awmod+1,f,c
  2699  00148A  90D8               	bcf	status,0,c
  2700  00148C  3601               	rlcf	?___awmod,f,c
  2701  00148E  3602               	rlcf	?___awmod+1,f,c
  2702  001490  0E35               	movlw	low __powers_
  2703  001492  2401               	addwf	?___awmod,w,c
  2704  001494  6EF6               	movwf	tblptrl,c
  2705  001496  0E08               	movlw	high __powers_
  2706  001498  2002               	addwfc	?___awmod+1,w,c
  2707  00149A  6EF7               	movwf	tblptrh,c
  2708  00149C                     	if	0	;There are less than 3 active tblptr bytes
  2709  00149C                     	endif
  2710  00149C  0009               	tblrd		*+
  2711  00149E  CFF5 F013          	movff	tablat,___flmul@a
  2712  0014A2  0009               	tblrd		*+
  2713  0014A4  CFF5 F014          	movff	tablat,___flmul@a+1
  2714  0014A8  0009               	tblrd		*+
  2715  0014AA  CFF5 F015          	movff	tablat,___flmul@a+2
  2716  0014AE  000A               	tblrd		*-
  2717  0014B0  CFF5 F016          	movff	tablat,___flmul@a+3
  2718  0014B4  EC72  F00A         	call	___flmul	;wreg free
  2719  0014B8  D7A5               	goto	L4
  2720  0014BA                     l2812:
  2721                           
  2722                           ;doprnt.c: 440: return _powers_[scl];
  2723  0014BA  5030               	movf	scale@scl,w,c
  2724  0014BC  0D04               	mullw	4
  2725  0014BE  0E35               	movlw	low __powers_
  2726  0014C0  24F3               	addwf	prodl,w,c
  2727  0014C2  6EF6               	movwf	tblptrl,c
  2728  0014C4  0E08               	movlw	high __powers_
  2729  0014C6  20F4               	addwfc	prodh,w,c
  2730  0014C8  6EF7               	movwf	tblptrh,c
  2731  0014CA                     	if	0	;There are less than 3 active tblptr bytes
  2732  0014CA                     	endif
  2733  0014CA  0009               	tblrd		*+
  2734  0014CC  CFF5 F028          	movff	tablat,?_scale
  2735  0014D0  0009               	tblrd		*+
  2736  0014D2  CFF5 F029          	movff	tablat,?_scale+1
  2737  0014D6  0009               	tblrd		*+
  2738  0014D8  CFF5 F02A          	movff	tablat,?_scale+2
  2739  0014DC  000A               	tblrd		*-
  2740  0014DE  CFF5 F02B          	movff	tablat,?_scale+3
  2741  0014E2  0012               	return	
  2742  0014E4                     __end_of_scale:
  2743                           	opt stack 0
  2744                           tblptru	equ	0xFF8
  2745                           tblptrh	equ	0xFF7
  2746                           tblptrl	equ	0xFF6
  2747                           tablat	equ	0xFF5
  2748                           prodh	equ	0xFF4
  2749                           prodl	equ	0xFF3
  2750                           postinc0	equ	0xFEE
  2751                           wreg	equ	0xFE8
  2752                           indf2	equ	0xFDF
  2753                           postinc2	equ	0xFDE
  2754                           fsr2h	equ	0xFDA
  2755                           fsr2l	equ	0xFD9
  2756                           status	equ	0xFD8
  2757                           
  2758 ;; *************** function _isdigit *****************
  2759 ;; Defined at:
  2760 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\isdigit.c"
  2761 ;; Parameters:    Size  Location     Type
  2762 ;;  c               1    wreg     unsigned char 
  2763 ;; Auto vars:     Size  Location     Type
  2764 ;;  c               1    2[COMRAM] unsigned char 
  2765 ;; Return value:  Size  Location     Type
  2766 ;;		None               void
  2767 ;; Registers used:
  2768 ;;		wreg, status,2, status,0
  2769 ;; Tracked objects:
  2770 ;;		On entry : 0/0
  2771 ;;		On exit  : 0/0
  2772 ;;		Unchanged: 0/0
  2773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2774 ;;      Params:         0       0       0       0       0       0       0       0       0
  2775 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2776 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2777 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2778 ;;Total ram usage:        3 bytes
  2779 ;; Hardware stack levels used:    1
  2780 ;; This function calls:
  2781 ;;		Nothing
  2782 ;; This function is called by:
  2783 ;;		_sprintf
  2784 ;; This function uses a non-reentrant model
  2785 ;;
  2786                           
  2787                           	psect	text4
  2788  002E88                     __ptext4:
  2789                           	opt stack 0
  2790  002E88                     _isdigit:
  2791                           	opt stack 28
  2792                           
  2793                           ;incstack = 0
  2794                           ;isdigit@c stored from wreg
  2795  002E88  6E03               	movwf	isdigit@c,c
  2796  002E8A  0E00               	movlw	0
  2797  002E8C  6E02               	movwf	_isdigit$651,c
  2798  002E8E  0E3A               	movlw	58
  2799  002E90  6003               	cpfslt	isdigit@c,c
  2800  002E92  D005               	goto	l2824
  2801  002E94  0E2F               	movlw	47
  2802  002E96  6403               	cpfsgt	isdigit@c,c
  2803  002E98  D002               	goto	l2824
  2804  002E9A  0E01               	movlw	1
  2805  002E9C  6E02               	movwf	_isdigit$651,c
  2806  002E9E                     l2824:
  2807  002E9E  C002  F001         	movff	_isdigit$651,??_isdigit
  2808  002EA2  3001               	rrcf	??_isdigit,w,c
  2809  002EA4  0012               	return	
  2810  002EA6                     __end_of_isdigit:
  2811                           	opt stack 0
  2812                           tblptru	equ	0xFF8
  2813                           tblptrh	equ	0xFF7
  2814                           tblptrl	equ	0xFF6
  2815                           tablat	equ	0xFF5
  2816                           prodh	equ	0xFF4
  2817                           prodl	equ	0xFF3
  2818                           postinc0	equ	0xFEE
  2819                           wreg	equ	0xFE8
  2820                           indf2	equ	0xFDF
  2821                           postinc2	equ	0xFDE
  2822                           fsr2h	equ	0xFDA
  2823                           fsr2l	equ	0xFD9
  2824                           status	equ	0xFD8
  2825                           
  2826 ;; *************** function _fround *****************
  2827 ;; Defined at:
  2828 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\doprnt.c"
  2829 ;; Parameters:    Size  Location     Type
  2830 ;;  prec            1    wreg     unsigned char 
  2831 ;; Auto vars:     Size  Location     Type
  2832 ;;  prec            1   51[COMRAM] unsigned char 
  2833 ;; Return value:  Size  Location     Type
  2834 ;;                  4   39[COMRAM] unsigned char 
  2835 ;; Registers used:
  2836 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2837 ;; Tracked objects:
  2838 ;;		On entry : 0/0
  2839 ;;		On exit  : 0/0
  2840 ;;		Unchanged: 0/0
  2841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2842 ;;      Params:         4       0       0       0       0       0       0       0       0
  2843 ;;      Locals:         9       0       0       0       0       0       0       0       0
  2844 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2845 ;;      Totals:        13       0       0       0       0       0       0       0       0
  2846 ;;Total ram usage:       13 bytes
  2847 ;; Hardware stack levels used:    1
  2848 ;; Hardware stack levels required when called:    1
  2849 ;; This function calls:
  2850 ;;		___awdiv
  2851 ;;		___awmod
  2852 ;;		___flmul
  2853 ;; This function is called by:
  2854 ;;		_sprintf
  2855 ;; This function uses a non-reentrant model
  2856 ;;
  2857                           
  2858                           	psect	text5
  2859  001E24                     __ptext5:
  2860                           	opt stack 0
  2861  001E24                     _fround:
  2862                           	opt stack 27
  2863                           
  2864                           ;incstack = 0
  2865                           ;fround@prec stored from wreg
  2866  001E24  6E34               	movwf	fround@prec,c
  2867                           
  2868                           ;doprnt.c: 413: if(prec>=110)
  2869  001E26  0E6D               	movlw	109
  2870  001E28  6434               	cpfsgt	fround@prec,c
  2871  001E2A  D0AC               	goto	l2766
  2872                           
  2873                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  2874  001E2C  0E00               	movlw	0
  2875  001E2E  6E0A               	movwf	___awdiv@divisor+1,c
  2876  001E30  0E0A               	movlw	10
  2877  001E32  6E09               	movwf	___awdiv@divisor,c
  2878  001E34  0E00               	movlw	0
  2879  001E36  6E04               	movwf	___awmod@divisor+1,c
  2880  001E38  0E64               	movlw	100
  2881  001E3A  6E03               	movwf	___awmod@divisor,c
  2882  001E3C  C034  F001         	movff	fround@prec,___awmod@dividend
  2883  001E40  6A02               	clrf	___awmod@dividend+1,c
  2884  001E42  EC3B  F015         	call	___awmod	;wreg free
  2885  001E46  C001  F007         	movff	?___awmod,___awdiv@dividend
  2886  001E4A  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  2887  001E4E  ECB8  F014         	call	___awdiv	;wreg free
  2888  001E52  90D8               	bcf	status,0,c
  2889  001E54  3607               	rlcf	?___awdiv,f,c
  2890  001E56  3608               	rlcf	?___awdiv+1,f,c
  2891  001E58  90D8               	bcf	status,0,c
  2892  001E5A  3607               	rlcf	?___awdiv,f,c
  2893  001E5C  3608               	rlcf	?___awdiv+1,f,c
  2894  001E5E  0E24               	movlw	36
  2895  001E60  2607               	addwf	?___awdiv,f,c
  2896  001E62  0E00               	movlw	0
  2897  001E64  2208               	addwfc	?___awdiv+1,f,c
  2898  001E66  0E01               	movlw	low __npowers_
  2899  001E68  2407               	addwf	?___awdiv,w,c
  2900  001E6A  6EF6               	movwf	tblptrl,c
  2901  001E6C  0E08               	movlw	high __npowers_
  2902  001E6E  2008               	addwfc	?___awdiv+1,w,c
  2903  001E70  6EF7               	movwf	tblptrh,c
  2904  001E72                     	if	0	;There are less than 3 active tblptr bytes
  2905  001E72                     	endif
  2906  001E72  0009               	tblrd		*+
  2907  001E74  CFF5 F013          	movff	tablat,___flmul@a
  2908  001E78  0009               	tblrd		*+
  2909  001E7A  CFF5 F014          	movff	tablat,___flmul@a+1
  2910  001E7E  0009               	tblrd		*+
  2911  001E80  CFF5 F015          	movff	tablat,___flmul@a+2
  2912  001E84  000A               	tblrd		*-
  2913  001E86  CFF5 F016          	movff	tablat,___flmul@a+3
  2914  001E8A  0E00               	movlw	0
  2915  001E8C  6E0A               	movwf	___awdiv@divisor+1,c
  2916  001E8E  0E64               	movlw	100
  2917  001E90  6E09               	movwf	___awdiv@divisor,c
  2918  001E92  C034  F007         	movff	fround@prec,___awdiv@dividend
  2919  001E96  6A08               	clrf	___awdiv@dividend+1,c
  2920  001E98  ECB8  F014         	call	___awdiv	;wreg free
  2921  001E9C  90D8               	bcf	status,0,c
  2922  001E9E  3607               	rlcf	?___awdiv,f,c
  2923  001EA0  3608               	rlcf	?___awdiv+1,f,c
  2924  001EA2  90D8               	bcf	status,0,c
  2925  001EA4  3607               	rlcf	?___awdiv,f,c
  2926  001EA6  3608               	rlcf	?___awdiv+1,f,c
  2927  001EA8  0E48               	movlw	72
  2928  001EAA  2607               	addwf	?___awdiv,f,c
  2929  001EAC  0E00               	movlw	0
  2930  001EAE  2208               	addwfc	?___awdiv+1,f,c
  2931  001EB0  0E01               	movlw	low __npowers_
  2932  001EB2  2407               	addwf	?___awdiv,w,c
  2933  001EB4  6EF6               	movwf	tblptrl,c
  2934  001EB6  0E08               	movlw	high __npowers_
  2935  001EB8  2008               	addwfc	?___awdiv+1,w,c
  2936  001EBA  6EF7               	movwf	tblptrh,c
  2937  001EBC                     	if	0	;There are less than 3 active tblptr bytes
  2938  001EBC                     	endif
  2939  001EBC  0009               	tblrd		*+
  2940  001EBE  CFF5 F00F          	movff	tablat,___flmul@b
  2941  001EC2  0009               	tblrd		*+
  2942  001EC4  CFF5 F010          	movff	tablat,___flmul@b+1
  2943  001EC8  0009               	tblrd		*+
  2944  001ECA  CFF5 F011          	movff	tablat,___flmul@b+2
  2945  001ECE  000A               	tblrd		*-
  2946  001ED0  CFF5 F012          	movff	tablat,___flmul@b+3
  2947  001ED4  EC72  F00A         	call	___flmul	;wreg free
  2948  001ED8  C00F  F030         	movff	?___flmul,_fround$1024
  2949  001EDC  C010  F031         	movff	?___flmul+1,_fround$1024+1
  2950  001EE0  C011  F032         	movff	?___flmul+2,_fround$1024+2
  2951  001EE4  C012  F033         	movff	?___flmul+3,_fround$1024+3
  2952                           
  2953                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  2954  001EE8  0E00               	movlw	0
  2955  001EEA  6E04               	movwf	___awmod@divisor+1,c
  2956  001EEC  0E0A               	movlw	10
  2957  001EEE  6E03               	movwf	___awmod@divisor,c
  2958  001EF0  C034  F001         	movff	fround@prec,___awmod@dividend
  2959  001EF4  6A02               	clrf	___awmod@dividend+1,c
  2960  001EF6  EC3B  F015         	call	___awmod	;wreg free
  2961  001EFA  90D8               	bcf	status,0,c
  2962  001EFC  3601               	rlcf	?___awmod,f,c
  2963  001EFE  3602               	rlcf	?___awmod+1,f,c
  2964  001F00  90D8               	bcf	status,0,c
  2965  001F02  3601               	rlcf	?___awmod,f,c
  2966  001F04  3602               	rlcf	?___awmod+1,f,c
  2967  001F06  0E01               	movlw	low __npowers_
  2968  001F08  2401               	addwf	?___awmod,w,c
  2969  001F0A  6EF6               	movwf	tblptrl,c
  2970  001F0C  0E08               	movlw	high __npowers_
  2971  001F0E  2002               	addwfc	?___awmod+1,w,c
  2972  001F10  6EF7               	movwf	tblptrh,c
  2973  001F12                     	if	0	;There are less than 3 active tblptr bytes
  2974  001F12                     	endif
  2975  001F12  0009               	tblrd		*+
  2976  001F14  CFF5 F013          	movff	tablat,___flmul@a
  2977  001F18  0009               	tblrd		*+
  2978  001F1A  CFF5 F014          	movff	tablat,___flmul@a+1
  2979  001F1E  0009               	tblrd		*+
  2980  001F20  CFF5 F015          	movff	tablat,___flmul@a+2
  2981  001F24  000A               	tblrd		*-
  2982  001F26  CFF5 F016          	movff	tablat,___flmul@a+3
  2983  001F2A  C030  F00F         	movff	_fround$1024,___flmul@b
  2984  001F2E  C031  F010         	movff	_fround$1024+1,___flmul@b+1
  2985  001F32  C032  F011         	movff	_fround$1024+2,___flmul@b+2
  2986  001F36  C033  F012         	movff	_fround$1024+3,___flmul@b+3
  2987  001F3A  EC72  F00A         	call	___flmul	;wreg free
  2988  001F3E  C00F  F02C         	movff	?___flmul,_fround$1025
  2989  001F42  C010  F02D         	movff	?___flmul+1,_fround$1025+1
  2990  001F46  C011  F02E         	movff	?___flmul+2,_fround$1025+2
  2991  001F4A  C012  F02F         	movff	?___flmul+3,_fround$1025+3
  2992                           
  2993                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  2994  001F4E  C02C  F00F         	movff	_fround$1025,___flmul@b
  2995  001F52  C02D  F010         	movff	_fround$1025+1,___flmul@b+1
  2996  001F56  C02E  F011         	movff	_fround$1025+2,___flmul@b+2
  2997  001F5A  C02F  F012         	movff	_fround$1025+3,___flmul@b+3
  2998  001F5E  0E00               	movlw	0
  2999  001F60  6E13               	movwf	___flmul@a,c
  3000  001F62  0E00               	movlw	0
  3001  001F64  6E14               	movwf	___flmul@a+1,c
  3002  001F66  0E00               	movlw	0
  3003  001F68  6E15               	movwf	___flmul@a+2,c
  3004  001F6A  0E3F               	movlw	63
  3005  001F6C  6E16               	movwf	___flmul@a+3,c
  3006  001F6E  EC72  F00A         	call	___flmul	;wreg free
  3007  001F72  C00F  F028         	movff	?___flmul,?_fround
  3008  001F76  C010  F029         	movff	?___flmul+1,?_fround+1
  3009  001F7A  C011  F02A         	movff	?___flmul+2,?_fround+2
  3010  001F7E  C012  F02B         	movff	?___flmul+3,?_fround+3
  3011  001F82  0012               	return	
  3012  001F84                     l2766:
  3013                           
  3014                           ;doprnt.c: 415: else if(prec > 10)
  3015  001F84  0E0A               	movlw	10
  3016  001F86  6434               	cpfsgt	fround@prec,c
  3017  001F88  D063               	goto	l2774
  3018                           
  3019                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  3020  001F8A  0E00               	movlw	0
  3021  001F8C  6E04               	movwf	___awmod@divisor+1,c
  3022  001F8E  0E0A               	movlw	10
  3023  001F90  6E03               	movwf	___awmod@divisor,c
  3024  001F92  C034  F001         	movff	fround@prec,___awmod@dividend
  3025  001F96  6A02               	clrf	___awmod@dividend+1,c
  3026  001F98  EC3B  F015         	call	___awmod	;wreg free
  3027  001F9C  90D8               	bcf	status,0,c
  3028  001F9E  3601               	rlcf	?___awmod,f,c
  3029  001FA0  3602               	rlcf	?___awmod+1,f,c
  3030  001FA2  90D8               	bcf	status,0,c
  3031  001FA4  3601               	rlcf	?___awmod,f,c
  3032  001FA6  3602               	rlcf	?___awmod+1,f,c
  3033  001FA8  0E01               	movlw	low __npowers_
  3034  001FAA  2401               	addwf	?___awmod,w,c
  3035  001FAC  6EF6               	movwf	tblptrl,c
  3036  001FAE  0E08               	movlw	high __npowers_
  3037  001FB0  2002               	addwfc	?___awmod+1,w,c
  3038  001FB2  6EF7               	movwf	tblptrh,c
  3039  001FB4                     	if	0	;There are less than 3 active tblptr bytes
  3040  001FB4                     	endif
  3041  001FB4  0009               	tblrd		*+
  3042  001FB6  CFF5 F013          	movff	tablat,___flmul@a
  3043  001FBA  0009               	tblrd		*+
  3044  001FBC  CFF5 F014          	movff	tablat,___flmul@a+1
  3045  001FC0  0009               	tblrd		*+
  3046  001FC2  CFF5 F015          	movff	tablat,___flmul@a+2
  3047  001FC6  000A               	tblrd		*-
  3048  001FC8  CFF5 F016          	movff	tablat,___flmul@a+3
  3049  001FCC  0E00               	movlw	0
  3050  001FCE  6E0A               	movwf	___awdiv@divisor+1,c
  3051  001FD0  0E0A               	movlw	10
  3052  001FD2  6E09               	movwf	___awdiv@divisor,c
  3053  001FD4  C034  F007         	movff	fround@prec,___awdiv@dividend
  3054  001FD8  6A08               	clrf	___awdiv@dividend+1,c
  3055  001FDA  ECB8  F014         	call	___awdiv	;wreg free
  3056  001FDE  90D8               	bcf	status,0,c
  3057  001FE0  3607               	rlcf	?___awdiv,f,c
  3058  001FE2  3608               	rlcf	?___awdiv+1,f,c
  3059  001FE4  90D8               	bcf	status,0,c
  3060  001FE6  3607               	rlcf	?___awdiv,f,c
  3061  001FE8  3608               	rlcf	?___awdiv+1,f,c
  3062  001FEA  0E24               	movlw	36
  3063  001FEC  2607               	addwf	?___awdiv,f,c
  3064  001FEE  0E00               	movlw	0
  3065  001FF0  2208               	addwfc	?___awdiv+1,f,c
  3066  001FF2  0E01               	movlw	low __npowers_
  3067  001FF4  2407               	addwf	?___awdiv,w,c
  3068  001FF6  6EF6               	movwf	tblptrl,c
  3069  001FF8  0E08               	movlw	high __npowers_
  3070  001FFA  2008               	addwfc	?___awdiv+1,w,c
  3071  001FFC  6EF7               	movwf	tblptrh,c
  3072  001FFE                     	if	0	;There are less than 3 active tblptr bytes
  3073  001FFE                     	endif
  3074  001FFE  0009               	tblrd		*+
  3075  002000  CFF5 F00F          	movff	tablat,___flmul@b
  3076  002004  0009               	tblrd		*+
  3077  002006  CFF5 F010          	movff	tablat,___flmul@b+1
  3078  00200A  0009               	tblrd		*+
  3079  00200C  CFF5 F011          	movff	tablat,___flmul@b+2
  3080  002010  000A               	tblrd		*-
  3081  002012  CFF5 F012          	movff	tablat,___flmul@b+3
  3082  002016  EC72  F00A         	call	___flmul	;wreg free
  3083  00201A  C00F  F030         	movff	?___flmul,_fround$1024
  3084  00201E  C010  F031         	movff	?___flmul+1,_fround$1024+1
  3085  002022  C011  F032         	movff	?___flmul+2,_fround$1024+2
  3086  002026  C012  F033         	movff	?___flmul+3,_fround$1024+3
  3087                           
  3088                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  3089  00202A  C030  F00F         	movff	_fround$1024,___flmul@b
  3090  00202E  C031  F010         	movff	_fround$1024+1,___flmul@b+1
  3091  002032  C032  F011         	movff	_fround$1024+2,___flmul@b+2
  3092  002036  C033  F012         	movff	_fround$1024+3,___flmul@b+3
  3093  00203A  0E00               	movlw	0
  3094  00203C  6E13               	movwf	___flmul@a,c
  3095  00203E  0E00               	movlw	0
  3096  002040  6E14               	movwf	___flmul@a+1,c
  3097  002042  0E00               	movlw	0
  3098  002044  6E15               	movwf	___flmul@a+2,c
  3099  002046  0E3F               	movlw	63
  3100  002048  6E16               	movwf	___flmul@a+3,c
  3101  00204A  EC72  F00A         	call	___flmul	;wreg free
  3102  00204E  D791               	goto	L5
  3103  002050                     l2774:
  3104                           
  3105                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  3106  002050  5034               	movf	fround@prec,w,c
  3107  002052  0D04               	mullw	4
  3108  002054  0E01               	movlw	low __npowers_
  3109  002056  24F3               	addwf	prodl,w,c
  3110  002058  6EF6               	movwf	tblptrl,c
  3111  00205A  0E08               	movlw	high __npowers_
  3112  00205C  20F4               	addwfc	prodh,w,c
  3113  00205E  6EF7               	movwf	tblptrh,c
  3114  002060                     	if	0	;There are less than 3 active tblptr bytes
  3115  002060                     	endif
  3116  002060  0009               	tblrd		*+
  3117  002062  CFF5 F00F          	movff	tablat,___flmul@b
  3118  002066  0009               	tblrd		*+
  3119  002068  CFF5 F010          	movff	tablat,___flmul@b+1
  3120  00206C  0009               	tblrd		*+
  3121  00206E  CFF5 F011          	movff	tablat,___flmul@b+2
  3122  002072  000A               	tblrd		*-
  3123  002074  CFF5 F012          	movff	tablat,___flmul@b+3
  3124  002078  0E00               	movlw	0
  3125  00207A  6E13               	movwf	___flmul@a,c
  3126  00207C  0E00               	movlw	0
  3127  00207E  6E14               	movwf	___flmul@a+1,c
  3128  002080  0E00               	movlw	0
  3129  002082  6E15               	movwf	___flmul@a+2,c
  3130  002084  0E3F               	movlw	63
  3131  002086  6E16               	movwf	___flmul@a+3,c
  3132  002088  EC72  F00A         	call	___flmul	;wreg free
  3133  00208C  C00F  F028         	movff	?___flmul,?_fround
  3134  002090  C010  F029         	movff	?___flmul+1,?_fround+1
  3135  002094  C011  F02A         	movff	?___flmul+2,?_fround+2
  3136  002098  C012  F02B         	movff	?___flmul+3,?_fround+3
  3137  00209C  0012               	return	
  3138  00209E                     __end_of_fround:
  3139                           	opt stack 0
  3140                           tblptru	equ	0xFF8
  3141                           tblptrh	equ	0xFF7
  3142                           tblptrl	equ	0xFF6
  3143                           tablat	equ	0xFF5
  3144                           prodh	equ	0xFF4
  3145                           prodl	equ	0xFF3
  3146                           postinc0	equ	0xFEE
  3147                           wreg	equ	0xFE8
  3148                           indf2	equ	0xFDF
  3149                           postinc2	equ	0xFDE
  3150                           fsr2h	equ	0xFDA
  3151                           fsr2l	equ	0xFD9
  3152                           status	equ	0xFD8
  3153                           
  3154 ;; *************** function ___awmod *****************
  3155 ;; Defined at:
  3156 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\awmod.c"
  3157 ;; Parameters:    Size  Location     Type
  3158 ;;  dividend        2    0[COMRAM] int 
  3159 ;;  divisor         2    2[COMRAM] int 
  3160 ;; Auto vars:     Size  Location     Type
  3161 ;;  sign            1    5[COMRAM] unsigned char 
  3162 ;;  counter         1    4[COMRAM] unsigned char 
  3163 ;; Return value:  Size  Location     Type
  3164 ;;                  2    0[COMRAM] int 
  3165 ;; Registers used:
  3166 ;;		wreg, status,2, status,0
  3167 ;; Tracked objects:
  3168 ;;		On entry : 0/0
  3169 ;;		On exit  : 0/0
  3170 ;;		Unchanged: 0/0
  3171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3172 ;;      Params:         4       0       0       0       0       0       0       0       0
  3173 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3174 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3175 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3176 ;;Total ram usage:        6 bytes
  3177 ;; Hardware stack levels used:    1
  3178 ;; This function calls:
  3179 ;;		Nothing
  3180 ;; This function is called by:
  3181 ;;		_fround
  3182 ;;		_scale
  3183 ;; This function uses a non-reentrant model
  3184 ;;
  3185                           
  3186                           	psect	text6
  3187  002A76                     __ptext6:
  3188                           	opt stack 0
  3189  002A76                     ___awmod:
  3190                           	opt stack 27
  3191                           
  3192                           ;incstack = 0
  3193  002A76  0E00               	movlw	0
  3194  002A78  6E06               	movwf	___awmod@sign,c
  3195  002A7A  AE02               	btfss	___awmod@dividend+1,7,c
  3196  002A7C  D006               	goto	l2704
  3197  002A7E  6C01               	negf	___awmod@dividend,c
  3198  002A80  1E02               	comf	___awmod@dividend+1,f,c
  3199  002A82  B0D8               	btfsc	status,0,c
  3200  002A84  2A02               	incf	___awmod@dividend+1,f,c
  3201  002A86  0E01               	movlw	1
  3202  002A88  6E06               	movwf	___awmod@sign,c
  3203  002A8A                     l2704:
  3204  002A8A  AE04               	btfss	___awmod@divisor+1,7,c
  3205  002A8C  D004               	goto	l2708
  3206  002A8E  6C03               	negf	___awmod@divisor,c
  3207  002A90  1E04               	comf	___awmod@divisor+1,f,c
  3208  002A92  B0D8               	btfsc	status,0,c
  3209  002A94  2A04               	incf	___awmod@divisor+1,f,c
  3210  002A96                     l2708:
  3211  002A96  5003               	movf	___awmod@divisor,w,c
  3212  002A98  1004               	iorwf	___awmod@divisor+1,w,c
  3213  002A9A  B4D8               	btfsc	status,2,c
  3214  002A9C  D018               	goto	l2724
  3215  002A9E  0E01               	movlw	1
  3216  002AA0  6E05               	movwf	___awmod@counter,c
  3217  002AA2  D004               	goto	l2714
  3218  002AA4                     l2712:
  3219  002AA4  90D8               	bcf	status,0,c
  3220  002AA6  3603               	rlcf	___awmod@divisor,f,c
  3221  002AA8  3604               	rlcf	___awmod@divisor+1,f,c
  3222  002AAA  2A05               	incf	___awmod@counter,f,c
  3223  002AAC                     l2714:
  3224  002AAC  AE04               	btfss	___awmod@divisor+1,7,c
  3225  002AAE  D7FA               	goto	l2712
  3226  002AB0                     l2716:
  3227  002AB0  5003               	movf	___awmod@divisor,w,c
  3228  002AB2  5C01               	subwf	___awmod@dividend,w,c
  3229  002AB4  5004               	movf	___awmod@divisor+1,w,c
  3230  002AB6  5802               	subwfb	___awmod@dividend+1,w,c
  3231  002AB8  A0D8               	btfss	status,0,c
  3232  002ABA  D004               	goto	l2720
  3233  002ABC  5003               	movf	___awmod@divisor,w,c
  3234  002ABE  5E01               	subwf	___awmod@dividend,f,c
  3235  002AC0  5004               	movf	___awmod@divisor+1,w,c
  3236  002AC2  5A02               	subwfb	___awmod@dividend+1,f,c
  3237  002AC4                     l2720:
  3238  002AC4  90D8               	bcf	status,0,c
  3239  002AC6  3204               	rrcf	___awmod@divisor+1,f,c
  3240  002AC8  3203               	rrcf	___awmod@divisor,f,c
  3241  002ACA  2E05               	decfsz	___awmod@counter,f,c
  3242  002ACC  D7F1               	goto	l2716
  3243  002ACE                     l2724:
  3244  002ACE  5006               	movf	___awmod@sign,w,c
  3245  002AD0  B4D8               	btfsc	status,2,c
  3246  002AD2  D004               	goto	l2728
  3247  002AD4  6C01               	negf	___awmod@dividend,c
  3248  002AD6  1E02               	comf	___awmod@dividend+1,f,c
  3249  002AD8  B0D8               	btfsc	status,0,c
  3250  002ADA  2A02               	incf	___awmod@dividend+1,f,c
  3251  002ADC                     l2728:
  3252  002ADC  C001  F001         	movff	___awmod@dividend,?___awmod
  3253  002AE0  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  3254  002AE4  0012               	return	
  3255  002AE6                     __end_of___awmod:
  3256                           	opt stack 0
  3257                           tblptru	equ	0xFF8
  3258                           tblptrh	equ	0xFF7
  3259                           tblptrl	equ	0xFF6
  3260                           tablat	equ	0xFF5
  3261                           prodh	equ	0xFF4
  3262                           prodl	equ	0xFF3
  3263                           postinc0	equ	0xFEE
  3264                           wreg	equ	0xFE8
  3265                           indf2	equ	0xFDF
  3266                           postinc2	equ	0xFDE
  3267                           fsr2h	equ	0xFDA
  3268                           fsr2l	equ	0xFD9
  3269                           status	equ	0xFD8
  3270                           
  3271 ;; *************** function __tdiv_to_l_ *****************
  3272 ;; Defined at:
  3273 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\ftdivl.c"
  3274 ;; Parameters:    Size  Location     Type
  3275 ;;  f1              4    0[COMRAM] float 
  3276 ;;  f2              4    4[COMRAM] float 
  3277 ;; Auto vars:     Size  Location     Type
  3278 ;;  quot            4   11[COMRAM] unsigned long 
  3279 ;;  exp1            1   16[COMRAM] unsigned char 
  3280 ;;  cntr            1   15[COMRAM] unsigned char 
  3281 ;; Return value:  Size  Location     Type
  3282 ;;                  4    0[COMRAM] unsigned long 
  3283 ;; Registers used:
  3284 ;;		wreg, status,2, status,0
  3285 ;; Tracked objects:
  3286 ;;		On entry : 0/0
  3287 ;;		On exit  : 0/0
  3288 ;;		Unchanged: 0/0
  3289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3290 ;;      Params:         8       0       0       0       0       0       0       0       0
  3291 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3292 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3293 ;;      Totals:        17       0       0       0       0       0       0       0       0
  3294 ;;Total ram usage:       17 bytes
  3295 ;; Hardware stack levels used:    1
  3296 ;; This function calls:
  3297 ;;		Nothing
  3298 ;; This function is called by:
  3299 ;;		_sprintf
  3300 ;; This function uses a non-reentrant model
  3301 ;;
  3302                           
  3303                           	psect	text7
  3304  002348                     __ptext7:
  3305                           	opt stack 0
  3306  002348                     __tdiv_to_l_:
  3307                           	opt stack 28
  3308                           
  3309                           ;incstack = 0
  3310  002348  C003  F009         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  3311  00234C  6A0A               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  3312  00234E  6A0B               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  3313  002350  3402               	rlcf	__tdiv_to_l_@f1+1,w,c
  3314  002352  3609               	rlcf	??__tdiv_to_l_& (0+255),f,c
  3315  002354  E301               	bnc	u2851
  3316  002356  800A               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  3317  002358                     u2851:
  3318  002358  5009               	movf	??__tdiv_to_l_,w,c
  3319  00235A  6E11               	movwf	__tdiv_to_l_@exp1,c
  3320  00235C  5011               	movf	__tdiv_to_l_@exp1,w,c
  3321  00235E  A4D8               	btfss	status,2,c
  3322  002360  D009               	goto	l2834
  3323  002362  0E00               	movlw	0
  3324  002364  6E01               	movwf	?__tdiv_to_l_,c
  3325  002366  0E00               	movlw	0
  3326  002368  6E02               	movwf	?__tdiv_to_l_+1,c
  3327  00236A  0E00               	movlw	0
  3328  00236C  6E03               	movwf	?__tdiv_to_l_+2,c
  3329  00236E  0E00               	movlw	0
  3330  002370  6E04               	movwf	?__tdiv_to_l_+3,c
  3331  002372  0012               	return	
  3332  002374                     l2834:
  3333  002374  C007  F009         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  3334  002378  6A0A               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  3335  00237A  6A0B               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  3336  00237C  3406               	rlcf	__tdiv_to_l_@f2+1,w,c
  3337  00237E  3609               	rlcf	??__tdiv_to_l_& (0+255),f,c
  3338  002380  E301               	bnc	u2871
  3339  002382  800A               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  3340  002384                     u2871:
  3341  002384  5009               	movf	??__tdiv_to_l_,w,c
  3342  002386  6E10               	movwf	__tdiv_to_l_@cntr,c
  3343  002388  5010               	movf	__tdiv_to_l_@cntr,w,c
  3344  00238A  A4D8               	btfss	status,2,c
  3345  00238C  D009               	goto	l2840
  3346  00238E  0E00               	movlw	0
  3347  002390  6E01               	movwf	?__tdiv_to_l_,c
  3348  002392  0E00               	movlw	0
  3349  002394  6E02               	movwf	?__tdiv_to_l_+1,c
  3350  002396  0E00               	movlw	0
  3351  002398  6E03               	movwf	?__tdiv_to_l_+2,c
  3352  00239A  0E00               	movlw	0
  3353  00239C  6E04               	movwf	?__tdiv_to_l_+3,c
  3354  00239E  0012               	return	
  3355  0023A0                     l2840:
  3356  0023A0  8E02               	bsf	__tdiv_to_l_@f1+1,7,c
  3357  0023A2  0EFF               	movlw	255
  3358  0023A4  1601               	andwf	__tdiv_to_l_@f1,f,c
  3359  0023A6  0EFF               	movlw	255
  3360  0023A8  1602               	andwf	__tdiv_to_l_@f1+1,f,c
  3361  0023AA  0E00               	movlw	0
  3362  0023AC  1603               	andwf	__tdiv_to_l_@f1+2,f,c
  3363  0023AE  8E06               	bsf	__tdiv_to_l_@f2+1,7,c
  3364  0023B0  0EFF               	movlw	255
  3365  0023B2  1605               	andwf	__tdiv_to_l_@f2,f,c
  3366  0023B4  0EFF               	movlw	255
  3367  0023B6  1606               	andwf	__tdiv_to_l_@f2+1,f,c
  3368  0023B8  0E00               	movlw	0
  3369  0023BA  1607               	andwf	__tdiv_to_l_@f2+2,f,c
  3370  0023BC  0E00               	movlw	0
  3371  0023BE  6E0C               	movwf	__tdiv_to_l_@quot,c
  3372  0023C0  0E00               	movlw	0
  3373  0023C2  6E0D               	movwf	__tdiv_to_l_@quot+1,c
  3374  0023C4  0E00               	movlw	0
  3375  0023C6  6E0E               	movwf	__tdiv_to_l_@quot+2,c
  3376  0023C8  0E00               	movlw	0
  3377  0023CA  6E0F               	movwf	__tdiv_to_l_@quot+3,c
  3378  0023CC  0E7F               	movlw	127
  3379  0023CE  5E11               	subwf	__tdiv_to_l_@exp1,f,c
  3380  0023D0  5010               	movf	__tdiv_to_l_@cntr,w,c
  3381  0023D2  0F98               	addlw	152
  3382  0023D4  5E11               	subwf	__tdiv_to_l_@exp1,f,c
  3383  0023D6  0E18               	movlw	24
  3384  0023D8  6E10               	movwf	__tdiv_to_l_@cntr,c
  3385  0023DA                     l568:
  3386  0023DA  90D8               	bcf	status,0,c
  3387  0023DC  360C               	rlcf	__tdiv_to_l_@quot,f,c
  3388  0023DE  360D               	rlcf	__tdiv_to_l_@quot+1,f,c
  3389  0023E0  360E               	rlcf	__tdiv_to_l_@quot+2,f,c
  3390  0023E2  360F               	rlcf	__tdiv_to_l_@quot+3,f,c
  3391  0023E4  5005               	movf	__tdiv_to_l_@f2,w,c
  3392  0023E6  5C01               	subwf	__tdiv_to_l_@f1,w,c
  3393  0023E8  5006               	movf	__tdiv_to_l_@f2+1,w,c
  3394  0023EA  5802               	subwfb	__tdiv_to_l_@f1+1,w,c
  3395  0023EC  5007               	movf	__tdiv_to_l_@f2+2,w,c
  3396  0023EE  5803               	subwfb	__tdiv_to_l_@f1+2,w,c
  3397  0023F0  A0D8               	btfss	status,0,c
  3398  0023F2  D007               	goto	l569
  3399  0023F4  5005               	movf	__tdiv_to_l_@f2,w,c
  3400  0023F6  5E01               	subwf	__tdiv_to_l_@f1,f,c
  3401  0023F8  5006               	movf	__tdiv_to_l_@f2+1,w,c
  3402  0023FA  5A02               	subwfb	__tdiv_to_l_@f1+1,f,c
  3403  0023FC  5007               	movf	__tdiv_to_l_@f2+2,w,c
  3404  0023FE  5A03               	subwfb	__tdiv_to_l_@f1+2,f,c
  3405  002400  800C               	bsf	__tdiv_to_l_@quot,0,c
  3406  002402                     l569:
  3407  002402  90D8               	bcf	status,0,c
  3408  002404  3601               	rlcf	__tdiv_to_l_@f1,f,c
  3409  002406  3602               	rlcf	__tdiv_to_l_@f1+1,f,c
  3410  002408  3603               	rlcf	__tdiv_to_l_@f1+2,f,c
  3411  00240A  2E10               	decfsz	__tdiv_to_l_@cntr,f,c
  3412  00240C  D7E6               	goto	l568
  3413  00240E  AE11               	btfss	__tdiv_to_l_@exp1,7,c
  3414  002410  D016               	goto	l2874
  3415  002412  5011               	movf	__tdiv_to_l_@exp1,w,c
  3416  002414  0A80               	xorlw	128
  3417  002416  0F97               	addlw	151
  3418  002418  B0D8               	btfsc	status,0,c
  3419  00241A  D009               	goto	l2870
  3420  00241C  0E00               	movlw	0
  3421  00241E  6E01               	movwf	?__tdiv_to_l_,c
  3422  002420  0E00               	movlw	0
  3423  002422  6E02               	movwf	?__tdiv_to_l_+1,c
  3424  002424  0E00               	movlw	0
  3425  002426  6E03               	movwf	?__tdiv_to_l_+2,c
  3426  002428  0E00               	movlw	0
  3427  00242A  6E04               	movwf	?__tdiv_to_l_+3,c
  3428  00242C  0012               	return	
  3429  00242E                     l2870:
  3430  00242E  90D8               	bcf	status,0,c
  3431  002430  320F               	rrcf	__tdiv_to_l_@quot+3,f,c
  3432  002432  320E               	rrcf	__tdiv_to_l_@quot+2,f,c
  3433  002434  320D               	rrcf	__tdiv_to_l_@quot+1,f,c
  3434  002436  320C               	rrcf	__tdiv_to_l_@quot,f,c
  3435  002438  3E11               	incfsz	__tdiv_to_l_@exp1,f,c
  3436  00243A  D7F9               	goto	l2870
  3437  00243C  D015               	goto	l575
  3438  00243E                     l2874:
  3439  00243E  0E17               	movlw	23
  3440  002440  6411               	cpfsgt	__tdiv_to_l_@exp1,c
  3441  002442  D00F               	goto	l2882
  3442  002444  0E00               	movlw	0
  3443  002446  6E01               	movwf	?__tdiv_to_l_,c
  3444  002448  0E00               	movlw	0
  3445  00244A  6E02               	movwf	?__tdiv_to_l_+1,c
  3446  00244C  0E00               	movlw	0
  3447  00244E  6E03               	movwf	?__tdiv_to_l_+2,c
  3448  002450  0E00               	movlw	0
  3449  002452  6E04               	movwf	?__tdiv_to_l_+3,c
  3450  002454  0012               	return	
  3451  002456                     l2880:
  3452  002456  90D8               	bcf	status,0,c
  3453  002458  360C               	rlcf	__tdiv_to_l_@quot,f,c
  3454  00245A  360D               	rlcf	__tdiv_to_l_@quot+1,f,c
  3455  00245C  360E               	rlcf	__tdiv_to_l_@quot+2,f,c
  3456  00245E  360F               	rlcf	__tdiv_to_l_@quot+3,f,c
  3457  002460  0611               	decf	__tdiv_to_l_@exp1,f,c
  3458  002462                     l2882:
  3459  002462  5011               	movf	__tdiv_to_l_@exp1,w,c
  3460  002464  A4D8               	btfss	status,2,c
  3461  002466  D7F7               	goto	l2880
  3462  002468                     l575:
  3463  002468  C00C  F001         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  3464  00246C  C00D  F002         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  3465  002470  C00E  F003         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  3466  002474  C00F  F004         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  3467  002478  0012               	return		;funcret
  3468  00247A                     __end_of__tdiv_to_l_:
  3469                           	opt stack 0
  3470                           tblptru	equ	0xFF8
  3471                           tblptrh	equ	0xFF7
  3472                           tblptrl	equ	0xFF6
  3473                           tablat	equ	0xFF5
  3474                           prodh	equ	0xFF4
  3475                           prodl	equ	0xFF3
  3476                           postinc0	equ	0xFEE
  3477                           wreg	equ	0xFE8
  3478                           indf2	equ	0xFDF
  3479                           postinc2	equ	0xFDE
  3480                           fsr2h	equ	0xFDA
  3481                           fsr2l	equ	0xFD9
  3482                           status	equ	0xFD8
  3483                           
  3484 ;; *************** function __div_to_l_ *****************
  3485 ;; Defined at:
  3486 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\fldivl.c"
  3487 ;; Parameters:    Size  Location     Type
  3488 ;;  f1              4    0[COMRAM] unsigned long 
  3489 ;;  f2              4    4[COMRAM] unsigned long 
  3490 ;; Auto vars:     Size  Location     Type
  3491 ;;  quot            4    8[COMRAM] unsigned long 
  3492 ;;  exp1            1   13[COMRAM] unsigned char 
  3493 ;;  cntr            1   12[COMRAM] unsigned char 
  3494 ;; Return value:  Size  Location     Type
  3495 ;;                  4    0[COMRAM] unsigned long 
  3496 ;; Registers used:
  3497 ;;		wreg, status,2, status,0
  3498 ;; Tracked objects:
  3499 ;;		On entry : 0/0
  3500 ;;		On exit  : 0/0
  3501 ;;		Unchanged: 0/0
  3502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3503 ;;      Params:         8       0       0       0       0       0       0       0       0
  3504 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3505 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3506 ;;      Totals:        14       0       0       0       0       0       0       0       0
  3507 ;;Total ram usage:       14 bytes
  3508 ;; Hardware stack levels used:    1
  3509 ;; This function calls:
  3510 ;;		Nothing
  3511 ;; This function is called by:
  3512 ;;		_sprintf
  3513 ;; This function uses a non-reentrant model
  3514 ;;
  3515                           
  3516                           	psect	text8
  3517  00247A                     __ptext8:
  3518                           	opt stack 0
  3519  00247A                     __div_to_l_:
  3520                           	opt stack 28
  3521                           
  3522                           ;incstack = 0
  3523  00247A  3403               	rlcf	__div_to_l_@f1+2,w,c
  3524  00247C  3404               	rlcf	__div_to_l_@f1+3,w,c
  3525  00247E  6E0E               	movwf	__div_to_l_@exp1,c
  3526  002480  500E               	movf	__div_to_l_@exp1,w,c
  3527  002482  A4D8               	btfss	status,2,c
  3528  002484  D009               	goto	l2890
  3529  002486  0E00               	movlw	0
  3530  002488  6E01               	movwf	?__div_to_l_,c
  3531  00248A  0E00               	movlw	0
  3532  00248C  6E02               	movwf	?__div_to_l_+1,c
  3533  00248E  0E00               	movlw	0
  3534  002490  6E03               	movwf	?__div_to_l_+2,c
  3535  002492  0E00               	movlw	0
  3536  002494  6E04               	movwf	?__div_to_l_+3,c
  3537  002496  0012               	return	
  3538  002498                     l2890:
  3539  002498  3407               	rlcf	__div_to_l_@f2+2,w,c
  3540  00249A  3408               	rlcf	__div_to_l_@f2+3,w,c
  3541  00249C  6E0D               	movwf	__div_to_l_@cntr,c
  3542  00249E  500D               	movf	__div_to_l_@cntr,w,c
  3543  0024A0  A4D8               	btfss	status,2,c
  3544  0024A2  D009               	goto	l2896
  3545  0024A4  0E00               	movlw	0
  3546  0024A6  6E01               	movwf	?__div_to_l_,c
  3547  0024A8  0E00               	movlw	0
  3548  0024AA  6E02               	movwf	?__div_to_l_+1,c
  3549  0024AC  0E00               	movlw	0
  3550  0024AE  6E03               	movwf	?__div_to_l_+2,c
  3551  0024B0  0E00               	movlw	0
  3552  0024B2  6E04               	movwf	?__div_to_l_+3,c
  3553  0024B4  0012               	return	
  3554  0024B6                     l2896:
  3555  0024B6  8E03               	bsf	__div_to_l_@f1+2,7,c
  3556  0024B8  0EFF               	movlw	255
  3557  0024BA  1601               	andwf	__div_to_l_@f1,f,c
  3558  0024BC  0EFF               	movlw	255
  3559  0024BE  1602               	andwf	__div_to_l_@f1+1,f,c
  3560  0024C0  0EFF               	movlw	255
  3561  0024C2  1603               	andwf	__div_to_l_@f1+2,f,c
  3562  0024C4  0E00               	movlw	0
  3563  0024C6  1604               	andwf	__div_to_l_@f1+3,f,c
  3564  0024C8  8E07               	bsf	__div_to_l_@f2+2,7,c
  3565  0024CA  0EFF               	movlw	255
  3566  0024CC  1605               	andwf	__div_to_l_@f2,f,c
  3567  0024CE  0EFF               	movlw	255
  3568  0024D0  1606               	andwf	__div_to_l_@f2+1,f,c
  3569  0024D2  0EFF               	movlw	255
  3570  0024D4  1607               	andwf	__div_to_l_@f2+2,f,c
  3571  0024D6  0E00               	movlw	0
  3572  0024D8  1608               	andwf	__div_to_l_@f2+3,f,c
  3573  0024DA  0E00               	movlw	0
  3574  0024DC  6E09               	movwf	__div_to_l_@quot,c
  3575  0024DE  0E00               	movlw	0
  3576  0024E0  6E0A               	movwf	__div_to_l_@quot+1,c
  3577  0024E2  0E00               	movlw	0
  3578  0024E4  6E0B               	movwf	__div_to_l_@quot+2,c
  3579  0024E6  0E00               	movlw	0
  3580  0024E8  6E0C               	movwf	__div_to_l_@quot+3,c
  3581  0024EA  0E7F               	movlw	127
  3582  0024EC  5E0E               	subwf	__div_to_l_@exp1,f,c
  3583  0024EE  500D               	movf	__div_to_l_@cntr,w,c
  3584  0024F0  0FA0               	addlw	160
  3585  0024F2  5E0E               	subwf	__div_to_l_@exp1,f,c
  3586  0024F4  0E20               	movlw	32
  3587  0024F6  6E0D               	movwf	__div_to_l_@cntr,c
  3588  0024F8                     l2910:
  3589  0024F8  90D8               	bcf	status,0,c
  3590  0024FA  3609               	rlcf	__div_to_l_@quot,f,c
  3591  0024FC  360A               	rlcf	__div_to_l_@quot+1,f,c
  3592  0024FE  360B               	rlcf	__div_to_l_@quot+2,f,c
  3593  002500  360C               	rlcf	__div_to_l_@quot+3,f,c
  3594  002502  5005               	movf	__div_to_l_@f2,w,c
  3595  002504  5C01               	subwf	__div_to_l_@f1,w,c
  3596  002506  5006               	movf	__div_to_l_@f2+1,w,c
  3597  002508  5802               	subwfb	__div_to_l_@f1+1,w,c
  3598  00250A  5007               	movf	__div_to_l_@f2+2,w,c
  3599  00250C  5803               	subwfb	__div_to_l_@f1+2,w,c
  3600  00250E  5008               	movf	__div_to_l_@f2+3,w,c
  3601  002510  5804               	subwfb	__div_to_l_@f1+3,w,c
  3602  002512  A0D8               	btfss	status,0,c
  3603  002514  D009               	goto	l2918
  3604  002516  5005               	movf	__div_to_l_@f2,w,c
  3605  002518  5E01               	subwf	__div_to_l_@f1,f,c
  3606  00251A  5006               	movf	__div_to_l_@f2+1,w,c
  3607  00251C  5A02               	subwfb	__div_to_l_@f1+1,f,c
  3608  00251E  5007               	movf	__div_to_l_@f2+2,w,c
  3609  002520  5A03               	subwfb	__div_to_l_@f1+2,f,c
  3610  002522  5008               	movf	__div_to_l_@f2+3,w,c
  3611  002524  5A04               	subwfb	__div_to_l_@f1+3,f,c
  3612  002526  8009               	bsf	__div_to_l_@quot,0,c
  3613  002528                     l2918:
  3614  002528  90D8               	bcf	status,0,c
  3615  00252A  3601               	rlcf	__div_to_l_@f1,f,c
  3616  00252C  3602               	rlcf	__div_to_l_@f1+1,f,c
  3617  00252E  3603               	rlcf	__div_to_l_@f1+2,f,c
  3618  002530  3604               	rlcf	__div_to_l_@f1+3,f,c
  3619  002532  2E0D               	decfsz	__div_to_l_@cntr,f,c
  3620  002534  D7E1               	goto	l2910
  3621  002536  AE0E               	btfss	__div_to_l_@exp1,7,c
  3622  002538  D016               	goto	l2934
  3623  00253A  500E               	movf	__div_to_l_@exp1,w,c
  3624  00253C  0A80               	xorlw	128
  3625  00253E  0F9F               	addlw	159
  3626  002540  B0D8               	btfsc	status,0,c
  3627  002542  D009               	goto	l2930
  3628  002544  0E00               	movlw	0
  3629  002546  6E01               	movwf	?__div_to_l_,c
  3630  002548  0E00               	movlw	0
  3631  00254A  6E02               	movwf	?__div_to_l_+1,c
  3632  00254C  0E00               	movlw	0
  3633  00254E  6E03               	movwf	?__div_to_l_+2,c
  3634  002550  0E00               	movlw	0
  3635  002552  6E04               	movwf	?__div_to_l_+3,c
  3636  002554  0012               	return	
  3637  002556                     l2930:
  3638  002556  90D8               	bcf	status,0,c
  3639  002558  320C               	rrcf	__div_to_l_@quot+3,f,c
  3640  00255A  320B               	rrcf	__div_to_l_@quot+2,f,c
  3641  00255C  320A               	rrcf	__div_to_l_@quot+1,f,c
  3642  00255E  3209               	rrcf	__div_to_l_@quot,f,c
  3643  002560  3E0E               	incfsz	__div_to_l_@exp1,f,c
  3644  002562  D7F9               	goto	l2930
  3645  002564  D015               	goto	l471
  3646  002566                     l2934:
  3647  002566  0E1F               	movlw	31
  3648  002568  640E               	cpfsgt	__div_to_l_@exp1,c
  3649  00256A  D00F               	goto	l2942
  3650  00256C  0E00               	movlw	0
  3651  00256E  6E01               	movwf	?__div_to_l_,c
  3652  002570  0E00               	movlw	0
  3653  002572  6E02               	movwf	?__div_to_l_+1,c
  3654  002574  0E00               	movlw	0
  3655  002576  6E03               	movwf	?__div_to_l_+2,c
  3656  002578  0E00               	movlw	0
  3657  00257A  6E04               	movwf	?__div_to_l_+3,c
  3658  00257C  0012               	return	
  3659  00257E                     l2940:
  3660  00257E  90D8               	bcf	status,0,c
  3661  002580  3609               	rlcf	__div_to_l_@quot,f,c
  3662  002582  360A               	rlcf	__div_to_l_@quot+1,f,c
  3663  002584  360B               	rlcf	__div_to_l_@quot+2,f,c
  3664  002586  360C               	rlcf	__div_to_l_@quot+3,f,c
  3665  002588  060E               	decf	__div_to_l_@exp1,f,c
  3666  00258A                     l2942:
  3667  00258A  500E               	movf	__div_to_l_@exp1,w,c
  3668  00258C  A4D8               	btfss	status,2,c
  3669  00258E  D7F7               	goto	l2940
  3670  002590                     l471:
  3671  002590  C009  F001         	movff	__div_to_l_@quot,?__div_to_l_
  3672  002594  C00A  F002         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  3673  002598  C00B  F003         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  3674  00259C  C00C  F004         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  3675  0025A0  0012               	return		;funcret
  3676  0025A2                     __end_of__div_to_l_:
  3677                           	opt stack 0
  3678                           tblptru	equ	0xFF8
  3679                           tblptrh	equ	0xFF7
  3680                           tblptrl	equ	0xFF6
  3681                           tablat	equ	0xFF5
  3682                           prodh	equ	0xFF4
  3683                           prodl	equ	0xFF3
  3684                           postinc0	equ	0xFEE
  3685                           wreg	equ	0xFE8
  3686                           indf2	equ	0xFDF
  3687                           postinc2	equ	0xFDE
  3688                           fsr2h	equ	0xFDA
  3689                           fsr2l	equ	0xFD9
  3690                           status	equ	0xFD8
  3691                           
  3692 ;; *************** function ___llmod *****************
  3693 ;; Defined at:
  3694 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\llmod.c"
  3695 ;; Parameters:    Size  Location     Type
  3696 ;;  dividend        4    0[COMRAM] unsigned long 
  3697 ;;  divisor         4    4[COMRAM] unsigned long 
  3698 ;; Auto vars:     Size  Location     Type
  3699 ;;  counter         1    8[COMRAM] unsigned char 
  3700 ;; Return value:  Size  Location     Type
  3701 ;;                  4    0[COMRAM] unsigned long 
  3702 ;; Registers used:
  3703 ;;		wreg, status,2, status,0
  3704 ;; Tracked objects:
  3705 ;;		On entry : 0/0
  3706 ;;		On exit  : 0/0
  3707 ;;		Unchanged: 0/0
  3708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3709 ;;      Params:         8       0       0       0       0       0       0       0       0
  3710 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3711 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3712 ;;      Totals:         9       0       0       0       0       0       0       0       0
  3713 ;;Total ram usage:        9 bytes
  3714 ;; Hardware stack levels used:    1
  3715 ;; This function calls:
  3716 ;;		Nothing
  3717 ;; This function is called by:
  3718 ;;		_sprintf
  3719 ;; This function uses a non-reentrant model
  3720 ;;
  3721                           
  3722                           	psect	text9
  3723  002B56                     __ptext9:
  3724                           	opt stack 0
  3725  002B56                     ___llmod:
  3726                           	opt stack 28
  3727                           
  3728                           ;incstack = 0
  3729  002B56  5005               	movf	___llmod@divisor,w,c
  3730  002B58  1006               	iorwf	___llmod@divisor+1,w,c
  3731  002B5A  1007               	iorwf	___llmod@divisor+2,w,c
  3732  002B5C  1008               	iorwf	___llmod@divisor+3,w,c
  3733  002B5E  B4D8               	btfsc	status,2,c
  3734  002B60  D024               	goto	l674
  3735  002B62  0E01               	movlw	1
  3736  002B64  6E09               	movwf	___llmod@counter,c
  3737  002B66  D006               	goto	l3052
  3738  002B68                     l3050:
  3739  002B68  90D8               	bcf	status,0,c
  3740  002B6A  3605               	rlcf	___llmod@divisor,f,c
  3741  002B6C  3606               	rlcf	___llmod@divisor+1,f,c
  3742  002B6E  3607               	rlcf	___llmod@divisor+2,f,c
  3743  002B70  3608               	rlcf	___llmod@divisor+3,f,c
  3744  002B72  2A09               	incf	___llmod@counter,f,c
  3745  002B74                     l3052:
  3746  002B74  AE08               	btfss	___llmod@divisor+3,7,c
  3747  002B76  D7F8               	goto	l3050
  3748  002B78                     l3054:
  3749  002B78  5005               	movf	___llmod@divisor,w,c
  3750  002B7A  5C01               	subwf	___llmod@dividend,w,c
  3751  002B7C  5006               	movf	___llmod@divisor+1,w,c
  3752  002B7E  5802               	subwfb	___llmod@dividend+1,w,c
  3753  002B80  5007               	movf	___llmod@divisor+2,w,c
  3754  002B82  5803               	subwfb	___llmod@dividend+2,w,c
  3755  002B84  5008               	movf	___llmod@divisor+3,w,c
  3756  002B86  5804               	subwfb	___llmod@dividend+3,w,c
  3757  002B88  A0D8               	btfss	status,0,c
  3758  002B8A  D008               	goto	l3058
  3759  002B8C  5005               	movf	___llmod@divisor,w,c
  3760  002B8E  5E01               	subwf	___llmod@dividend,f,c
  3761  002B90  5006               	movf	___llmod@divisor+1,w,c
  3762  002B92  5A02               	subwfb	___llmod@dividend+1,f,c
  3763  002B94  5007               	movf	___llmod@divisor+2,w,c
  3764  002B96  5A03               	subwfb	___llmod@dividend+2,f,c
  3765  002B98  5008               	movf	___llmod@divisor+3,w,c
  3766  002B9A  5A04               	subwfb	___llmod@dividend+3,f,c
  3767  002B9C                     l3058:
  3768  002B9C  90D8               	bcf	status,0,c
  3769  002B9E  3208               	rrcf	___llmod@divisor+3,f,c
  3770  002BA0  3207               	rrcf	___llmod@divisor+2,f,c
  3771  002BA2  3206               	rrcf	___llmod@divisor+1,f,c
  3772  002BA4  3205               	rrcf	___llmod@divisor,f,c
  3773  002BA6  2E09               	decfsz	___llmod@counter,f,c
  3774  002BA8  D7E7               	goto	l3054
  3775  002BAA                     l674:
  3776  002BAA  C001  F001         	movff	___llmod@dividend,?___llmod
  3777  002BAE  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
  3778  002BB2  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
  3779  002BB6  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
  3780  002BBA  0012               	return		;funcret
  3781  002BBC                     __end_of___llmod:
  3782                           	opt stack 0
  3783                           tblptru	equ	0xFF8
  3784                           tblptrh	equ	0xFF7
  3785                           tblptrl	equ	0xFF6
  3786                           tablat	equ	0xFF5
  3787                           prodh	equ	0xFF4
  3788                           prodl	equ	0xFF3
  3789                           postinc0	equ	0xFEE
  3790                           wreg	equ	0xFE8
  3791                           indf2	equ	0xFDF
  3792                           postinc2	equ	0xFDE
  3793                           fsr2h	equ	0xFDA
  3794                           fsr2l	equ	0xFD9
  3795                           status	equ	0xFD8
  3796                           
  3797 ;; *************** function ___lldiv *****************
  3798 ;; Defined at:
  3799 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\lldiv.c"
  3800 ;; Parameters:    Size  Location     Type
  3801 ;;  dividend        4    0[COMRAM] unsigned long 
  3802 ;;  divisor         4    4[COMRAM] unsigned long 
  3803 ;; Auto vars:     Size  Location     Type
  3804 ;;  quotient        4    8[COMRAM] unsigned long 
  3805 ;;  counter         1   12[COMRAM] unsigned char 
  3806 ;; Return value:  Size  Location     Type
  3807 ;;                  4    0[COMRAM] unsigned long 
  3808 ;; Registers used:
  3809 ;;		wreg, status,2, status,0
  3810 ;; Tracked objects:
  3811 ;;		On entry : 0/0
  3812 ;;		On exit  : 0/0
  3813 ;;		Unchanged: 0/0
  3814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3815 ;;      Params:         8       0       0       0       0       0       0       0       0
  3816 ;;      Locals:         5       0       0       0       0       0       0       0       0
  3817 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3818 ;;      Totals:        13       0       0       0       0       0       0       0       0
  3819 ;;Total ram usage:       13 bytes
  3820 ;; Hardware stack levels used:    1
  3821 ;; This function calls:
  3822 ;;		Nothing
  3823 ;; This function is called by:
  3824 ;;		_sprintf
  3825 ;; This function uses a non-reentrant model
  3826 ;;
  3827                           
  3828                           	psect	text10
  3829  0029F4                     __ptext10:
  3830                           	opt stack 0
  3831  0029F4                     ___lldiv:
  3832                           	opt stack 28
  3833                           
  3834                           ;incstack = 0
  3835  0029F4  0E00               	movlw	0
  3836  0029F6  6E09               	movwf	___lldiv@quotient,c
  3837  0029F8  0E00               	movlw	0
  3838  0029FA  6E0A               	movwf	___lldiv@quotient+1,c
  3839  0029FC  0E00               	movlw	0
  3840  0029FE  6E0B               	movwf	___lldiv@quotient+2,c
  3841  002A00  0E00               	movlw	0
  3842  002A02  6E0C               	movwf	___lldiv@quotient+3,c
  3843  002A04  5005               	movf	___lldiv@divisor,w,c
  3844  002A06  1006               	iorwf	___lldiv@divisor+1,w,c
  3845  002A08  1007               	iorwf	___lldiv@divisor+2,w,c
  3846  002A0A  1008               	iorwf	___lldiv@divisor+3,w,c
  3847  002A0C  B4D8               	btfsc	status,2,c
  3848  002A0E  D02A               	goto	l664
  3849  002A10  0E01               	movlw	1
  3850  002A12  6E0D               	movwf	___lldiv@counter,c
  3851  002A14  D006               	goto	l3032
  3852  002A16                     l3030:
  3853  002A16  90D8               	bcf	status,0,c
  3854  002A18  3605               	rlcf	___lldiv@divisor,f,c
  3855  002A1A  3606               	rlcf	___lldiv@divisor+1,f,c
  3856  002A1C  3607               	rlcf	___lldiv@divisor+2,f,c
  3857  002A1E  3608               	rlcf	___lldiv@divisor+3,f,c
  3858  002A20  2A0D               	incf	___lldiv@counter,f,c
  3859  002A22                     l3032:
  3860  002A22  AE08               	btfss	___lldiv@divisor+3,7,c
  3861  002A24  D7F8               	goto	l3030
  3862  002A26                     l3034:
  3863  002A26  90D8               	bcf	status,0,c
  3864  002A28  3609               	rlcf	___lldiv@quotient,f,c
  3865  002A2A  360A               	rlcf	___lldiv@quotient+1,f,c
  3866  002A2C  360B               	rlcf	___lldiv@quotient+2,f,c
  3867  002A2E  360C               	rlcf	___lldiv@quotient+3,f,c
  3868  002A30  5005               	movf	___lldiv@divisor,w,c
  3869  002A32  5C01               	subwf	___lldiv@dividend,w,c
  3870  002A34  5006               	movf	___lldiv@divisor+1,w,c
  3871  002A36  5802               	subwfb	___lldiv@dividend+1,w,c
  3872  002A38  5007               	movf	___lldiv@divisor+2,w,c
  3873  002A3A  5803               	subwfb	___lldiv@dividend+2,w,c
  3874  002A3C  5008               	movf	___lldiv@divisor+3,w,c
  3875  002A3E  5804               	subwfb	___lldiv@dividend+3,w,c
  3876  002A40  A0D8               	btfss	status,0,c
  3877  002A42  D009               	goto	l3042
  3878  002A44  5005               	movf	___lldiv@divisor,w,c
  3879  002A46  5E01               	subwf	___lldiv@dividend,f,c
  3880  002A48  5006               	movf	___lldiv@divisor+1,w,c
  3881  002A4A  5A02               	subwfb	___lldiv@dividend+1,f,c
  3882  002A4C  5007               	movf	___lldiv@divisor+2,w,c
  3883  002A4E  5A03               	subwfb	___lldiv@dividend+2,f,c
  3884  002A50  5008               	movf	___lldiv@divisor+3,w,c
  3885  002A52  5A04               	subwfb	___lldiv@dividend+3,f,c
  3886  002A54  8009               	bsf	___lldiv@quotient,0,c
  3887  002A56                     l3042:
  3888  002A56  90D8               	bcf	status,0,c
  3889  002A58  3208               	rrcf	___lldiv@divisor+3,f,c
  3890  002A5A  3207               	rrcf	___lldiv@divisor+2,f,c
  3891  002A5C  3206               	rrcf	___lldiv@divisor+1,f,c
  3892  002A5E  3205               	rrcf	___lldiv@divisor,f,c
  3893  002A60  2E0D               	decfsz	___lldiv@counter,f,c
  3894  002A62  D7E1               	goto	l3034
  3895  002A64                     l664:
  3896  002A64  C009  F001         	movff	___lldiv@quotient,?___lldiv
  3897  002A68  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  3898  002A6C  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  3899  002A70  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  3900  002A74  0012               	return		;funcret
  3901  002A76                     __end_of___lldiv:
  3902                           	opt stack 0
  3903                           tblptru	equ	0xFF8
  3904                           tblptrh	equ	0xFF7
  3905                           tblptrl	equ	0xFF6
  3906                           tablat	equ	0xFF5
  3907                           prodh	equ	0xFF4
  3908                           prodl	equ	0xFF3
  3909                           postinc0	equ	0xFEE
  3910                           wreg	equ	0xFE8
  3911                           indf2	equ	0xFDF
  3912                           postinc2	equ	0xFDE
  3913                           fsr2h	equ	0xFDA
  3914                           fsr2l	equ	0xFD9
  3915                           status	equ	0xFD8
  3916                           
  3917 ;; *************** function ___fltol *****************
  3918 ;; Defined at:
  3919 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\fltol.c"
  3920 ;; Parameters:    Size  Location     Type
  3921 ;;  f1              4   48[COMRAM] unsigned long 
  3922 ;; Auto vars:     Size  Location     Type
  3923 ;;  exp1            1   57[COMRAM] unsigned char 
  3924 ;;  sign1           1   56[COMRAM] unsigned char 
  3925 ;; Return value:  Size  Location     Type
  3926 ;;                  4   48[COMRAM] long 
  3927 ;; Registers used:
  3928 ;;		wreg, status,2, status,0
  3929 ;; Tracked objects:
  3930 ;;		On entry : 0/0
  3931 ;;		On exit  : 0/0
  3932 ;;		Unchanged: 0/0
  3933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3934 ;;      Params:         4       0       0       0       0       0       0       0       0
  3935 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3936 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3937 ;;      Totals:        10       0       0       0       0       0       0       0       0
  3938 ;;Total ram usage:       10 bytes
  3939 ;; Hardware stack levels used:    1
  3940 ;; This function calls:
  3941 ;;		Nothing
  3942 ;; This function is called by:
  3943 ;;		_sprintf
  3944 ;; This function uses a non-reentrant model
  3945 ;;
  3946                           
  3947                           	psect	text11
  3948  0027DC                     __ptext11:
  3949                           	opt stack 0
  3950  0027DC                     ___fltol:
  3951                           	opt stack 28
  3952                           
  3953                           ;incstack = 0
  3954  0027DC  3433               	rlcf	___fltol@f1+2,w,c
  3955  0027DE  3434               	rlcf	___fltol@f1+3,w,c
  3956  0027E0  6E3A               	movwf	___fltol@exp1,c
  3957  0027E2  503A               	movf	___fltol@exp1,w,c
  3958  0027E4  A4D8               	btfss	status,2,c
  3959  0027E6  D009               	goto	l2986
  3960  0027E8  0E00               	movlw	0
  3961  0027EA  6E31               	movwf	?___fltol,c
  3962  0027EC  0E00               	movlw	0
  3963  0027EE  6E32               	movwf	?___fltol+1,c
  3964  0027F0  0E00               	movlw	0
  3965  0027F2  6E33               	movwf	?___fltol+2,c
  3966  0027F4  0E00               	movlw	0
  3967  0027F6  6E34               	movwf	?___fltol+3,c
  3968  0027F8  0012               	return	
  3969  0027FA                     l2986:
  3970  0027FA  C031  F035         	movff	___fltol@f1,??___fltol
  3971  0027FE  C032  F036         	movff	___fltol@f1+1,??___fltol+1
  3972  002802  C033  F037         	movff	___fltol@f1+2,??___fltol+2
  3973  002806  C034  F038         	movff	___fltol@f1+3,??___fltol+3
  3974  00280A  0E20               	movlw	32
  3975  00280C  D005               	goto	u3080
  3976  00280E                     u3085:
  3977  00280E  90D8               	bcf	status,0,c
  3978  002810  3238               	rrcf	??___fltol+3,f,c
  3979  002812  3237               	rrcf	??___fltol+2,f,c
  3980  002814  3236               	rrcf	??___fltol+1,f,c
  3981  002816  3235               	rrcf	??___fltol,f,c
  3982  002818                     u3080:
  3983  002818  2EE8               	decfsz	wreg,f,c
  3984  00281A  D7F9               	goto	u3085
  3985  00281C  5035               	movf	??___fltol,w,c
  3986  00281E  6E39               	movwf	___fltol@sign1,c
  3987  002820  8E33               	bsf	___fltol@f1+2,7,c
  3988  002822  0EFF               	movlw	255
  3989  002824  1631               	andwf	___fltol@f1,f,c
  3990  002826  0EFF               	movlw	255
  3991  002828  1632               	andwf	___fltol@f1+1,f,c
  3992  00282A  0EFF               	movlw	255
  3993  00282C  1633               	andwf	___fltol@f1+2,f,c
  3994  00282E  0E00               	movlw	0
  3995  002830  1634               	andwf	___fltol@f1+3,f,c
  3996  002832  0E96               	movlw	150
  3997  002834  5E3A               	subwf	___fltol@exp1,f,c
  3998  002836  AE3A               	btfss	___fltol@exp1,7,c
  3999  002838  D016               	goto	l3006
  4000  00283A  503A               	movf	___fltol@exp1,w,c
  4001  00283C  0A80               	xorlw	128
  4002  00283E  0F97               	addlw	151
  4003  002840  B0D8               	btfsc	status,0,c
  4004  002842  D009               	goto	l3002
  4005  002844  0E00               	movlw	0
  4006  002846  6E31               	movwf	?___fltol,c
  4007  002848  0E00               	movlw	0
  4008  00284A  6E32               	movwf	?___fltol+1,c
  4009  00284C  0E00               	movlw	0
  4010  00284E  6E33               	movwf	?___fltol+2,c
  4011  002850  0E00               	movlw	0
  4012  002852  6E34               	movwf	?___fltol+3,c
  4013  002854  0012               	return	
  4014  002856                     l3002:
  4015  002856  90D8               	bcf	status,0,c
  4016  002858  3234               	rrcf	___fltol@f1+3,f,c
  4017  00285A  3233               	rrcf	___fltol@f1+2,f,c
  4018  00285C  3232               	rrcf	___fltol@f1+1,f,c
  4019  00285E  3231               	rrcf	___fltol@f1,f,c
  4020  002860  3E3A               	incfsz	___fltol@exp1,f,c
  4021  002862  D7F9               	goto	l3002
  4022  002864  D015               	goto	l3016
  4023  002866                     l3006:
  4024  002866  0E1F               	movlw	31
  4025  002868  643A               	cpfsgt	___fltol@exp1,c
  4026  00286A  D00F               	goto	l3014
  4027  00286C  0E00               	movlw	0
  4028  00286E  6E31               	movwf	?___fltol,c
  4029  002870  0E00               	movlw	0
  4030  002872  6E32               	movwf	?___fltol+1,c
  4031  002874  0E00               	movlw	0
  4032  002876  6E33               	movwf	?___fltol+2,c
  4033  002878  0E00               	movlw	0
  4034  00287A  6E34               	movwf	?___fltol+3,c
  4035  00287C  0012               	return	
  4036  00287E                     l3012:
  4037  00287E  90D8               	bcf	status,0,c
  4038  002880  3631               	rlcf	___fltol@f1,f,c
  4039  002882  3632               	rlcf	___fltol@f1+1,f,c
  4040  002884  3633               	rlcf	___fltol@f1+2,f,c
  4041  002886  3634               	rlcf	___fltol@f1+3,f,c
  4042  002888  063A               	decf	___fltol@exp1,f,c
  4043  00288A                     l3014:
  4044  00288A  503A               	movf	___fltol@exp1,w,c
  4045  00288C  A4D8               	btfss	status,2,c
  4046  00288E  D7F7               	goto	l3012
  4047  002890                     l3016:
  4048  002890  5039               	movf	___fltol@sign1,w,c
  4049  002892  B4D8               	btfsc	status,2,c
  4050  002894  D008               	goto	l3020
  4051  002896  1E34               	comf	___fltol@f1+3,f,c
  4052  002898  1E33               	comf	___fltol@f1+2,f,c
  4053  00289A  1E32               	comf	___fltol@f1+1,f,c
  4054  00289C  6C31               	negf	___fltol@f1,c
  4055  00289E  0E00               	movlw	0
  4056  0028A0  2232               	addwfc	___fltol@f1+1,f,c
  4057  0028A2  2233               	addwfc	___fltol@f1+2,f,c
  4058  0028A4  2234               	addwfc	___fltol@f1+3,f,c
  4059  0028A6                     l3020:
  4060  0028A6  C031  F031         	movff	___fltol@f1,?___fltol
  4061  0028AA  C032  F032         	movff	___fltol@f1+1,?___fltol+1
  4062  0028AE  C033  F033         	movff	___fltol@f1+2,?___fltol+2
  4063  0028B2  C034  F034         	movff	___fltol@f1+3,?___fltol+3
  4064  0028B6  0012               	return	
  4065  0028B8                     __end_of___fltol:
  4066                           	opt stack 0
  4067                           tblptru	equ	0xFF8
  4068                           tblptrh	equ	0xFF7
  4069                           tblptrl	equ	0xFF6
  4070                           tablat	equ	0xFF5
  4071                           prodh	equ	0xFF4
  4072                           prodl	equ	0xFF3
  4073                           postinc0	equ	0xFEE
  4074                           wreg	equ	0xFE8
  4075                           indf2	equ	0xFDF
  4076                           postinc2	equ	0xFDE
  4077                           fsr2h	equ	0xFDA
  4078                           fsr2l	equ	0xFD9
  4079                           status	equ	0xFD8
  4080                           
  4081 ;; *************** function ___flsub *****************
  4082 ;; Defined at:
  4083 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\sprcadd.c"
  4084 ;; Parameters:    Size  Location     Type
  4085 ;;  b               4   72[COMRAM] long 
  4086 ;;  a               4   76[COMRAM] long 
  4087 ;; Auto vars:     Size  Location     Type
  4088 ;;		None
  4089 ;; Return value:  Size  Location     Type
  4090 ;;                  4   72[COMRAM] long 
  4091 ;; Registers used:
  4092 ;;		wreg, status,2, status,0, cstack
  4093 ;; Tracked objects:
  4094 ;;		On entry : 0/0
  4095 ;;		On exit  : 0/0
  4096 ;;		Unchanged: 0/0
  4097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4098 ;;      Params:         8       0       0       0       0       0       0       0       0
  4099 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4100 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4101 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4102 ;;Total ram usage:        8 bytes
  4103 ;; Hardware stack levels used:    1
  4104 ;; Hardware stack levels required when called:    1
  4105 ;; This function calls:
  4106 ;;		___fladd
  4107 ;; This function is called by:
  4108 ;;		_sprintf
  4109 ;; This function uses a non-reentrant model
  4110 ;;
  4111                           
  4112                           	psect	text12
  4113  002CAC                     __ptext12:
  4114                           	opt stack 0
  4115  002CAC                     ___flsub:
  4116                           	opt stack 27
  4117                           
  4118                           ;incstack = 0
  4119  002CAC  0E00               	movlw	0
  4120  002CAE  1A4D               	xorwf	___flsub@a,f,c
  4121  002CB0  0E00               	movlw	0
  4122  002CB2  1A4E               	xorwf	___flsub@a+1,f,c
  4123  002CB4  0E00               	movlw	0
  4124  002CB6  1A4F               	xorwf	___flsub@a+2,f,c
  4125  002CB8  0E80               	movlw	128
  4126  002CBA  1A50               	xorwf	___flsub@a+3,f,c
  4127  002CBC  C049  F035         	movff	___flsub@b,___fladd@b
  4128  002CC0  C04A  F036         	movff	___flsub@b+1,___fladd@b+1
  4129  002CC4  C04B  F037         	movff	___flsub@b+2,___fladd@b+2
  4130  002CC8  C04C  F038         	movff	___flsub@b+3,___fladd@b+3
  4131  002CCC  C04D  F039         	movff	___flsub@a,___fladd@a
  4132  002CD0  C04E  F03A         	movff	___flsub@a+1,___fladd@a+1
  4133  002CD4  C04F  F03B         	movff	___flsub@a+2,___fladd@a+2
  4134  002CD8  C050  F03C         	movff	___flsub@a+3,___fladd@a+3
  4135  002CDC  EC1A  F00C         	call	___fladd	;wreg free
  4136  002CE0  C035  F049         	movff	?___fladd,?___flsub
  4137  002CE4  C036  F04A         	movff	?___fladd+1,?___flsub+1
  4138  002CE8  C037  F04B         	movff	?___fladd+2,?___flsub+2
  4139  002CEC  C038  F04C         	movff	?___fladd+3,?___flsub+3
  4140  002CF0  0012               	return	
  4141  002CF2                     __end_of___flsub:
  4142                           	opt stack 0
  4143                           tblptru	equ	0xFF8
  4144                           tblptrh	equ	0xFF7
  4145                           tblptrl	equ	0xFF6
  4146                           tablat	equ	0xFF5
  4147                           prodh	equ	0xFF4
  4148                           prodl	equ	0xFF3
  4149                           postinc0	equ	0xFEE
  4150                           wreg	equ	0xFE8
  4151                           indf2	equ	0xFDF
  4152                           postinc2	equ	0xFDE
  4153                           fsr2h	equ	0xFDA
  4154                           fsr2l	equ	0xFD9
  4155                           status	equ	0xFD8
  4156                           
  4157 ;; *************** function ___fladd *****************
  4158 ;; Defined at:
  4159 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\sprcadd.c"
  4160 ;; Parameters:    Size  Location     Type
  4161 ;;  b               4   52[COMRAM] long 
  4162 ;;  a               4   56[COMRAM] long 
  4163 ;; Auto vars:     Size  Location     Type
  4164 ;;  grs             1   71[COMRAM] unsigned char 
  4165 ;;  bexp            1   70[COMRAM] unsigned char 
  4166 ;;  aexp            1   69[COMRAM] unsigned char 
  4167 ;;  signs           1   68[COMRAM] unsigned char 
  4168 ;; Return value:  Size  Location     Type
  4169 ;;                  4   52[COMRAM] unsigned char 
  4170 ;; Registers used:
  4171 ;;		wreg, status,2, status,0
  4172 ;; Tracked objects:
  4173 ;;		On entry : 0/0
  4174 ;;		On exit  : 0/0
  4175 ;;		Unchanged: 0/0
  4176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4177 ;;      Params:         8       0       0       0       0       0       0       0       0
  4178 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4179 ;;      Temps:          8       0       0       0       0       0       0       0       0
  4180 ;;      Totals:        20       0       0       0       0       0       0       0       0
  4181 ;;Total ram usage:       20 bytes
  4182 ;; Hardware stack levels used:    1
  4183 ;; This function calls:
  4184 ;;		Nothing
  4185 ;; This function is called by:
  4186 ;;		_sprintf
  4187 ;;		___flsub
  4188 ;; This function uses a non-reentrant model
  4189 ;;
  4190                           
  4191                           	psect	text13
  4192  001834                     __ptext13:
  4193                           	opt stack 0
  4194  001834                     ___fladd:
  4195                           	opt stack 27
  4196                           
  4197                           ;incstack = 0
  4198  001834  5038               	movf	___fladd@b+3,w,c
  4199  001836  0B80               	andlw	128
  4200  001838  6E45               	movwf	___fladd@signs,c
  4201  00183A  5038               	movf	___fladd@b+3,w,c
  4202  00183C  2438               	addwf	___fladd@b+3,w,c
  4203  00183E  6E47               	movwf	___fladd@bexp,c
  4204  001840  BE37               	btfsc	___fladd@b+2,7,c
  4205  001842  8047               	bsf	___fladd@bexp,0,c
  4206  001844  5047               	movf	___fladd@bexp,w,c
  4207  001846  B4D8               	btfsc	status,2,c
  4208  001848  D00D               	goto	l2336
  4209  00184A  2847               	incf	___fladd@bexp,w,c
  4210  00184C  A4D8               	btfss	status,2,c
  4211  00184E  D008               	goto	l2332
  4212  001850  0E00               	movlw	0
  4213  001852  6E35               	movwf	___fladd@b,c
  4214  001854  0E00               	movlw	0
  4215  001856  6E36               	movwf	___fladd@b+1,c
  4216  001858  0E00               	movlw	0
  4217  00185A  6E37               	movwf	___fladd@b+2,c
  4218  00185C  0E00               	movlw	0
  4219  00185E  6E38               	movwf	___fladd@b+3,c
  4220  001860                     l2332:
  4221  001860  8E37               	bsf	___fladd@b+2,7,c
  4222  001862  D006               	goto	L6
  4223  001864                     l2336:
  4224  001864  0E00               	movlw	0
  4225  001866  6E35               	movwf	___fladd@b,c
  4226  001868  0E00               	movlw	0
  4227  00186A  6E36               	movwf	___fladd@b+1,c
  4228  00186C  0E00               	movlw	0
  4229  00186E  6E37               	movwf	___fladd@b+2,c
  4230  001870                     L6:
  4231  001870  0E00               	movlw	0
  4232  001872  6E38               	movwf	___fladd@b+3,c
  4233  001874  503C               	movf	___fladd@a+3,w,c
  4234  001876  0B80               	andlw	128
  4235  001878  6E46               	movwf	___fladd@aexp,c
  4236  00187A  5045               	movf	___fladd@signs,w,c
  4237  00187C  1846               	xorwf	___fladd@aexp,w,c
  4238  00187E  A4D8               	btfss	status,2,c
  4239  001880  8C45               	bsf	___fladd@signs,6,c
  4240  001882  503C               	movf	___fladd@a+3,w,c
  4241  001884  243C               	addwf	___fladd@a+3,w,c
  4242  001886  6E46               	movwf	___fladd@aexp,c
  4243  001888  BE3B               	btfsc	___fladd@a+2,7,c
  4244  00188A  8046               	bsf	___fladd@aexp,0,c
  4245  00188C  5046               	movf	___fladd@aexp,w,c
  4246  00188E  B4D8               	btfsc	status,2,c
  4247  001890  D00D               	goto	l2360
  4248  001892  2846               	incf	___fladd@aexp,w,c
  4249  001894  A4D8               	btfss	status,2,c
  4250  001896  D008               	goto	l2356
  4251  001898  0E00               	movlw	0
  4252  00189A  6E39               	movwf	___fladd@a,c
  4253  00189C  0E00               	movlw	0
  4254  00189E  6E3A               	movwf	___fladd@a+1,c
  4255  0018A0  0E00               	movlw	0
  4256  0018A2  6E3B               	movwf	___fladd@a+2,c
  4257  0018A4  0E00               	movlw	0
  4258  0018A6  6E3C               	movwf	___fladd@a+3,c
  4259  0018A8                     l2356:
  4260  0018A8  8E3B               	bsf	___fladd@a+2,7,c
  4261  0018AA  D006               	goto	L7
  4262  0018AC                     l2360:
  4263  0018AC  0E00               	movlw	0
  4264  0018AE  6E39               	movwf	___fladd@a,c
  4265  0018B0  0E00               	movlw	0
  4266  0018B2  6E3A               	movwf	___fladd@a+1,c
  4267  0018B4  0E00               	movlw	0
  4268  0018B6  6E3B               	movwf	___fladd@a+2,c
  4269  0018B8                     L7:
  4270  0018B8  0E00               	movlw	0
  4271  0018BA  6E3C               	movwf	___fladd@a+3,c
  4272  0018BC  5047               	movf	___fladd@bexp,w,c
  4273  0018BE  5C46               	subwf	___fladd@aexp,w,c
  4274  0018C0  B0D8               	btfsc	status,0,c
  4275  0018C2  D022               	goto	l2398
  4276  0018C4  AC45               	btfss	___fladd@signs,6,c
  4277  0018C6  D002               	goto	l2368
  4278  0018C8  0E80               	movlw	128
  4279  0018CA  1A45               	xorwf	___fladd@signs,f,c
  4280  0018CC                     l2368:
  4281  0018CC  C047  F048         	movff	___fladd@bexp,___fladd@grs
  4282  0018D0  C046  F047         	movff	___fladd@aexp,___fladd@bexp
  4283  0018D4  C048  F046         	movff	___fladd@grs,___fladd@aexp
  4284  0018D8  C035  F048         	movff	___fladd@b,___fladd@grs
  4285  0018DC  C039  F035         	movff	___fladd@a,___fladd@b
  4286  0018E0  C048  F039         	movff	___fladd@grs,___fladd@a
  4287  0018E4  C036  F048         	movff	___fladd@b+1,___fladd@grs
  4288  0018E8  C03A  F036         	movff	___fladd@a+1,___fladd@b+1
  4289  0018EC  C048  F03A         	movff	___fladd@grs,___fladd@a+1
  4290  0018F0  C037  F048         	movff	___fladd@b+2,___fladd@grs
  4291  0018F4  C03B  F037         	movff	___fladd@a+2,___fladd@b+2
  4292  0018F8  C048  F03B         	movff	___fladd@grs,___fladd@a+2
  4293  0018FC  C038  F048         	movff	___fladd@b+3,___fladd@grs
  4294  001900  C03C  F038         	movff	___fladd@a+3,___fladd@b+3
  4295  001904  C048  F03C         	movff	___fladd@grs,___fladd@a+3
  4296  001908                     l2398:
  4297  001908  0E00               	movlw	0
  4298  00190A  6E48               	movwf	___fladd@grs,c
  4299  00190C  5047               	movf	___fladd@bexp,w,c
  4300  00190E  6E3D               	movwf	??___fladd& (0+255),c
  4301  001910  6A3E               	clrf	(??___fladd+1)& (0+255),c
  4302  001912  1E3D               	comf	??___fladd,f,c
  4303  001914  1E3E               	comf	??___fladd+1,f,c
  4304  001916  4A3D               	infsnz	??___fladd,f,c
  4305  001918  2A3E               	incf	??___fladd+1,f,c
  4306  00191A  5046               	movf	___fladd@aexp,w,c
  4307  00191C  6E3F               	movwf	(??___fladd+2)& (0+255),c
  4308  00191E  6A40               	clrf	(??___fladd+3)& (0+255),c
  4309  001920  503D               	movf	??___fladd,w,c
  4310  001922  263F               	addwf	??___fladd+2,f,c
  4311  001924  503E               	movf	??___fladd+1,w,c
  4312  001926  2240               	addwfc	??___fladd+3,f,c
  4313  001928  BE40               	btfsc	??___fladd+3,7,c
  4314  00192A  D02C               	goto	l759
  4315  00192C  5040               	movf	??___fladd+3,w,c
  4316  00192E  E104               	bnz	u2150
  4317  001930  0E1A               	movlw	26
  4318  001932  5C3F               	subwf	??___fladd+2,w,c
  4319  001934  A0D8               	btfss	status,0,c
  4320  001936  D026               	goto	l759
  4321  001938                     u2150:
  4322  001938  5035               	movf	___fladd@b,w,c
  4323  00193A  1036               	iorwf	___fladd@b+1,w,c
  4324  00193C  1037               	iorwf	___fladd@b+2,w,c
  4325  00193E  1038               	iorwf	___fladd@b+3,w,c
  4326  001940  B4D8               	btfsc	status,2,c
  4327  001942  D002               	goto	u2160
  4328  001944  0E01               	movlw	1
  4329  001946  D001               	goto	u2170
  4330  001948                     u2160:
  4331  001948  0E00               	movlw	0
  4332  00194A                     u2170:
  4333  00194A  6E48               	movwf	___fladd@grs,c
  4334  00194C  0E00               	movlw	0
  4335  00194E  6E35               	movwf	___fladd@b,c
  4336  001950  0E00               	movlw	0
  4337  001952  6E36               	movwf	___fladd@b+1,c
  4338  001954  0E00               	movlw	0
  4339  001956  6E37               	movwf	___fladd@b+2,c
  4340  001958  0E00               	movlw	0
  4341  00195A  6E38               	movwf	___fladd@b+3,c
  4342  00195C  C046  F047         	movff	___fladd@aexp,___fladd@bexp
  4343  001960  D015               	goto	l758
  4344  001962                     l760:
  4345  001962  A048               	btfss	___fladd@grs,0,c
  4346  001964  D005               	goto	l2410
  4347  001966  90D8               	bcf	status,0,c
  4348  001968  3048               	rrcf	___fladd@grs,w,c
  4349  00196A  0901               	iorlw	1
  4350  00196C  6E48               	movwf	___fladd@grs,c
  4351  00196E  D002               	goto	l2412
  4352  001970                     l2410:
  4353  001970  90D8               	bcf	status,0,c
  4354  001972  3248               	rrcf	___fladd@grs,f,c
  4355  001974                     l2412:
  4356  001974  B035               	btfsc	___fladd@b,0,c
  4357  001976  8E48               	bsf	___fladd@grs,7,c
  4358  001978  3438               	rlcf	___fladd@b+3,w,c
  4359  00197A  3238               	rrcf	___fladd@b+3,f,c
  4360  00197C  3237               	rrcf	___fladd@b+2,f,c
  4361  00197E  3236               	rrcf	___fladd@b+1,f,c
  4362  001980  3235               	rrcf	___fladd@b,f,c
  4363  001982  2A47               	incf	___fladd@bexp,f,c
  4364  001984                     l759:
  4365  001984  5046               	movf	___fladd@aexp,w,c
  4366  001986  5C47               	subwf	___fladd@bexp,w,c
  4367  001988  A0D8               	btfss	status,0,c
  4368  00198A  D7EB               	goto	l760
  4369  00198C                     l758:
  4370  00198C  BC45               	btfsc	___fladd@signs,6,c
  4371  00198E  D029               	goto	l2444
  4372  001990  5047               	movf	___fladd@bexp,w,c
  4373  001992  A4D8               	btfss	status,2,c
  4374  001994  D009               	goto	l2426
  4375  001996  0E00               	movlw	0
  4376  001998  6E35               	movwf	?___fladd,c
  4377  00199A  0E00               	movlw	0
  4378  00199C  6E36               	movwf	?___fladd+1,c
  4379  00199E  0E00               	movlw	0
  4380  0019A0  6E37               	movwf	?___fladd+2,c
  4381  0019A2  0E00               	movlw	0
  4382  0019A4  6E38               	movwf	?___fladd+3,c
  4383  0019A6  0012               	return	
  4384  0019A8                     l2426:
  4385  0019A8  5039               	movf	___fladd@a,w,c
  4386  0019AA  2635               	addwf	___fladd@b,f,c
  4387  0019AC  503A               	movf	___fladd@a+1,w,c
  4388  0019AE  2236               	addwfc	___fladd@b+1,f,c
  4389  0019B0  503B               	movf	___fladd@a+2,w,c
  4390  0019B2  2237               	addwfc	___fladd@b+2,f,c
  4391  0019B4  503C               	movf	___fladd@a+3,w,c
  4392  0019B6  2238               	addwfc	___fladd@b+3,f,c
  4393  0019B8  A038               	btfss	___fladd@b+3,0,c
  4394  0019BA  D083               	goto	l2480
  4395  0019BC  A048               	btfss	___fladd@grs,0,c
  4396  0019BE  D006               	goto	l2434
  4397  0019C0  90D8               	bcf	status,0,c
  4398  0019C2  3248               	rrcf	___fladd@grs,f,c
  4399  0019C4  5048               	movf	___fladd@grs,w,c
  4400  0019C6  0901               	iorlw	1
  4401  0019C8  6E48               	movwf	___fladd@grs,c
  4402  0019CA  D002               	goto	l2436
  4403  0019CC                     l2434:
  4404  0019CC  90D8               	bcf	status,0,c
  4405  0019CE  3248               	rrcf	___fladd@grs,f,c
  4406  0019D0                     l2436:
  4407  0019D0  B035               	btfsc	___fladd@b,0,c
  4408  0019D2  8E48               	bsf	___fladd@grs,7,c
  4409  0019D4  3438               	rlcf	___fladd@b+3,w,c
  4410  0019D6  3238               	rrcf	___fladd@b+3,f,c
  4411  0019D8  3237               	rrcf	___fladd@b+2,f,c
  4412  0019DA  3236               	rrcf	___fladd@b+1,f,c
  4413  0019DC  3235               	rrcf	___fladd@b,f,c
  4414  0019DE  2A47               	incf	___fladd@bexp,f,c
  4415  0019E0  D070               	goto	l2480
  4416  0019E2                     l2444:
  4417  0019E2  5039               	movf	___fladd@a,w,c
  4418  0019E4  5C35               	subwf	___fladd@b,w,c
  4419  0019E6  503A               	movf	___fladd@a+1,w,c
  4420  0019E8  5836               	subwfb	___fladd@b+1,w,c
  4421  0019EA  503B               	movf	___fladd@a+2,w,c
  4422  0019EC  5837               	subwfb	___fladd@b+2,w,c
  4423  0019EE  5038               	movf	___fladd@b+3,w,c
  4424  0019F0  0A80               	xorlw	128
  4425  0019F2  6E3D               	movwf	??___fladd& (0+255),c
  4426  0019F4  503C               	movf	___fladd@a+3,w,c
  4427  0019F6  0A80               	xorlw	128
  4428  0019F8  583D               	subwfb	??___fladd& (0+255),w,c
  4429  0019FA  B0D8               	btfsc	status,0,c
  4430  0019FC  D036               	goto	l2454
  4431  0019FE  C035  F03D         	movff	___fladd@b,??___fladd
  4432  001A02  C036  F03E         	movff	___fladd@b+1,??___fladd+1
  4433  001A06  C037  F03F         	movff	___fladd@b+2,??___fladd+2
  4434  001A0A  C038  F040         	movff	___fladd@b+3,??___fladd+3
  4435  001A0E  1E3D               	comf	??___fladd,f,c
  4436  001A10  1E3E               	comf	??___fladd+1,f,c
  4437  001A12  1E3F               	comf	??___fladd+2,f,c
  4438  001A14  1E40               	comf	??___fladd+3,f,c
  4439  001A16  2A3D               	incf	??___fladd,f,c
  4440  001A18  0E00               	movlw	0
  4441  001A1A  223E               	addwfc	??___fladd+1,f,c
  4442  001A1C  223F               	addwfc	??___fladd+2,f,c
  4443  001A1E  2240               	addwfc	??___fladd+3,f,c
  4444  001A20  5039               	movf	___fladd@a,w,c
  4445  001A22  243D               	addwf	??___fladd,w,c
  4446  001A24  6E41               	movwf	(??___fladd+4)& (0+255),c
  4447  001A26  503A               	movf	___fladd@a+1,w,c
  4448  001A28  203E               	addwfc	??___fladd+1,w,c
  4449  001A2A  6E42               	movwf	(??___fladd+5)& (0+255),c
  4450  001A2C  503B               	movf	___fladd@a+2,w,c
  4451  001A2E  203F               	addwfc	??___fladd+2,w,c
  4452  001A30  6E43               	movwf	(??___fladd+6)& (0+255),c
  4453  001A32  503C               	movf	___fladd@a+3,w,c
  4454  001A34  2040               	addwfc	??___fladd+3,w,c
  4455  001A36  6E44               	movwf	(??___fladd+7)& (0+255),c
  4456  001A38  0EFF               	movlw	255
  4457  001A3A  2441               	addwf	??___fladd+4,w,c
  4458  001A3C  6E35               	movwf	___fladd@b,c
  4459  001A3E  0EFF               	movlw	255
  4460  001A40  2042               	addwfc	??___fladd+5,w,c
  4461  001A42  6E36               	movwf	___fladd@b+1,c
  4462  001A44  0EFF               	movlw	255
  4463  001A46  2043               	addwfc	??___fladd+6,w,c
  4464  001A48  6E37               	movwf	___fladd@b+2,c
  4465  001A4A  0EFF               	movlw	255
  4466  001A4C  2044               	addwfc	??___fladd+7,w,c
  4467  001A4E  6E38               	movwf	___fladd@b+3,c
  4468  001A50  0E80               	movlw	128
  4469  001A52  1A45               	xorwf	___fladd@signs,f,c
  4470  001A54  6C48               	negf	___fladd@grs,c
  4471  001A56  5048               	movf	___fladd@grs,w,c
  4472  001A58  A4D8               	btfss	status,2,c
  4473  001A5A  D00F               	goto	l775
  4474  001A5C  0E01               	movlw	1
  4475  001A5E  2635               	addwf	___fladd@b,f,c
  4476  001A60  0E00               	movlw	0
  4477  001A62  2236               	addwfc	___fladd@b+1,f,c
  4478  001A64  2237               	addwfc	___fladd@b+2,f,c
  4479  001A66  2238               	addwfc	___fladd@b+3,f,c
  4480  001A68  D008               	goto	l775
  4481  001A6A                     l2454:
  4482  001A6A  5039               	movf	___fladd@a,w,c
  4483  001A6C  5E35               	subwf	___fladd@b,f,c
  4484  001A6E  503A               	movf	___fladd@a+1,w,c
  4485  001A70  5A36               	subwfb	___fladd@b+1,f,c
  4486  001A72  503B               	movf	___fladd@a+2,w,c
  4487  001A74  5A37               	subwfb	___fladd@b+2,f,c
  4488  001A76  503C               	movf	___fladd@a+3,w,c
  4489  001A78  5A38               	subwfb	___fladd@b+3,f,c
  4490  001A7A                     l775:
  4491  001A7A  5035               	movf	___fladd@b,w,c
  4492  001A7C  1036               	iorwf	___fladd@b+1,w,c
  4493  001A7E  1037               	iorwf	___fladd@b+2,w,c
  4494  001A80  1038               	iorwf	___fladd@b+3,w,c
  4495  001A82  A4D8               	btfss	status,2,c
  4496  001A84  D01C               	goto	l2478
  4497  001A86  5048               	movf	___fladd@grs,w,c
  4498  001A88  A4D8               	btfss	status,2,c
  4499  001A8A  D019               	goto	l2478
  4500  001A8C  0E00               	movlw	0
  4501  001A8E  6E35               	movwf	?___fladd,c
  4502  001A90  0E00               	movlw	0
  4503  001A92  6E36               	movwf	?___fladd+1,c
  4504  001A94  0E00               	movlw	0
  4505  001A96  6E37               	movwf	?___fladd+2,c
  4506  001A98  0E00               	movlw	0
  4507  001A9A  6E38               	movwf	?___fladd+3,c
  4508  001A9C  0012               	return	
  4509  001A9E                     l2462:
  4510  001A9E  90D8               	bcf	status,0,c
  4511  001AA0  3635               	rlcf	___fladd@b,f,c
  4512  001AA2  3636               	rlcf	___fladd@b+1,f,c
  4513  001AA4  3637               	rlcf	___fladd@b+2,f,c
  4514  001AA6  3638               	rlcf	___fladd@b+3,f,c
  4515  001AA8  BE48               	btfsc	___fladd@grs,7,c
  4516  001AAA  8035               	bsf	___fladd@b,0,c
  4517  001AAC  A048               	btfss	___fladd@grs,0,c
  4518  001AAE  D002               	goto	l2472
  4519  001AB0  80D8               	bsf	status,0,c
  4520  001AB2  D001               	goto	L8
  4521  001AB4                     l2472:
  4522  001AB4  90D8               	bcf	status,0,c
  4523  001AB6                     L8:
  4524  001AB6  3648               	rlcf	___fladd@grs,f,c
  4525  001AB8  5047               	movf	___fladd@bexp,w,c
  4526  001ABA  A4D8               	btfss	status,2,c
  4527  001ABC  0647               	decf	___fladd@bexp,f,c
  4528  001ABE                     l2478:
  4529  001ABE  AE37               	btfss	___fladd@b+2,7,c
  4530  001AC0  D7EE               	goto	l2462
  4531  001AC2                     l2480:
  4532  001AC2  0E00               	movlw	0
  4533  001AC4  6E46               	movwf	___fladd@aexp,c
  4534  001AC6  AE48               	btfss	___fladd@grs,7,c
  4535  001AC8  D00A               	goto	l784
  4536  001ACA  C048  F03D         	movff	___fladd@grs,??___fladd
  4537  001ACE  0E7F               	movlw	127
  4538  001AD0  163D               	andwf	??___fladd,f,c
  4539  001AD2  A4D8               	btfss	status,2,c
  4540  001AD4  D002               	goto	l2488
  4541  001AD6  A035               	btfss	___fladd@b,0,c
  4542  001AD8  D002               	goto	l784
  4543  001ADA                     l2488:
  4544  001ADA  0E01               	movlw	1
  4545  001ADC  6E46               	movwf	___fladd@aexp,c
  4546  001ADE                     l784:
  4547  001ADE  5046               	movf	___fladd@aexp,w,c
  4548  001AE0  B4D8               	btfsc	status,2,c
  4549  001AE2  D020               	goto	l2498
  4550  001AE4  0E01               	movlw	1
  4551  001AE6  2635               	addwf	___fladd@b,f,c
  4552  001AE8  0E00               	movlw	0
  4553  001AEA  2236               	addwfc	___fladd@b+1,f,c
  4554  001AEC  2237               	addwfc	___fladd@b+2,f,c
  4555  001AEE  2238               	addwfc	___fladd@b+3,f,c
  4556  001AF0  A038               	btfss	___fladd@b+3,0,c
  4557  001AF2  D018               	goto	l2498
  4558  001AF4  C035  F03D         	movff	___fladd@b,??___fladd
  4559  001AF8  C036  F03E         	movff	___fladd@b+1,??___fladd+1
  4560  001AFC  C037  F03F         	movff	___fladd@b+2,??___fladd+2
  4561  001B00  C038  F040         	movff	___fladd@b+3,??___fladd+3
  4562  001B04  3440               	rlcf	??___fladd+3,w,c
  4563  001B06  3240               	rrcf	??___fladd+3,f,c
  4564  001B08  323F               	rrcf	??___fladd+2,f,c
  4565  001B0A  323E               	rrcf	??___fladd+1,f,c
  4566  001B0C  323D               	rrcf	??___fladd,f,c
  4567  001B0E  C03D  F035         	movff	??___fladd,___fladd@b
  4568  001B12  C03E  F036         	movff	??___fladd+1,___fladd@b+1
  4569  001B16  C03F  F037         	movff	??___fladd+2,___fladd@b+2
  4570  001B1A  C040  F038         	movff	??___fladd+3,___fladd@b+3
  4571  001B1E  2847               	incf	___fladd@bexp,w,c
  4572  001B20  A4D8               	btfss	status,2,c
  4573  001B22  2A47               	incf	___fladd@bexp,f,c
  4574  001B24                     l2498:
  4575  001B24  2847               	incf	___fladd@bexp,w,c
  4576  001B26  B4D8               	btfsc	status,2,c
  4577  001B28  D003               	goto	l2502
  4578  001B2A  5047               	movf	___fladd@bexp,w,c
  4579  001B2C  A4D8               	btfss	status,2,c
  4580  001B2E  D00D               	goto	l2506
  4581  001B30                     l2502:
  4582  001B30  0E00               	movlw	0
  4583  001B32  6E35               	movwf	___fladd@b,c
  4584  001B34  0E00               	movlw	0
  4585  001B36  6E36               	movwf	___fladd@b+1,c
  4586  001B38  0E00               	movlw	0
  4587  001B3A  6E37               	movwf	___fladd@b+2,c
  4588  001B3C  0E00               	movlw	0
  4589  001B3E  6E38               	movwf	___fladd@b+3,c
  4590  001B40  5047               	movf	___fladd@bexp,w,c
  4591  001B42  A4D8               	btfss	status,2,c
  4592  001B44  D002               	goto	l2506
  4593  001B46  0E00               	movlw	0
  4594  001B48  6E45               	movwf	___fladd@signs,c
  4595  001B4A                     l2506:
  4596  001B4A  A047               	btfss	___fladd@bexp,0,c
  4597  001B4C  D002               	goto	l2510
  4598  001B4E  8E37               	bsf	___fladd@b+2,7,c
  4599  001B50  D001               	goto	l2512
  4600  001B52                     l2510:
  4601  001B52  9E37               	bcf	___fladd@b+2,7,c
  4602  001B54                     l2512:
  4603  001B54  90D8               	bcf	status,0,c
  4604  001B56  3047               	rrcf	___fladd@bexp,w,c
  4605  001B58  6E38               	movwf	___fladd@b+3,c
  4606  001B5A  BE45               	btfsc	___fladd@signs,7,c
  4607  001B5C  8E38               	bsf	___fladd@b+3,7,c
  4608  001B5E  C035  F035         	movff	___fladd@b,?___fladd
  4609  001B62  C036  F036         	movff	___fladd@b+1,?___fladd+1
  4610  001B66  C037  F037         	movff	___fladd@b+2,?___fladd+2
  4611  001B6A  C038  F038         	movff	___fladd@b+3,?___fladd+3
  4612  001B6E  0012               	return	
  4613  001B70                     __end_of___fladd:
  4614                           	opt stack 0
  4615                           tblptru	equ	0xFF8
  4616                           tblptrh	equ	0xFF7
  4617                           tblptrl	equ	0xFF6
  4618                           tablat	equ	0xFF5
  4619                           prodh	equ	0xFF4
  4620                           prodl	equ	0xFF3
  4621                           postinc0	equ	0xFEE
  4622                           wreg	equ	0xFE8
  4623                           indf2	equ	0xFDF
  4624                           postinc2	equ	0xFDE
  4625                           fsr2h	equ	0xFDA
  4626                           fsr2l	equ	0xFD9
  4627                           status	equ	0xFD8
  4628                           
  4629 ;; *************** function ___flneg *****************
  4630 ;; Defined at:
  4631 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\flneg.c"
  4632 ;; Parameters:    Size  Location     Type
  4633 ;;  f1              4    0[COMRAM] unsigned char 
  4634 ;; Auto vars:     Size  Location     Type
  4635 ;;		None
  4636 ;; Return value:  Size  Location     Type
  4637 ;;                  4    0[COMRAM] unsigned char 
  4638 ;; Registers used:
  4639 ;;		wreg, status,2, status,0
  4640 ;; Tracked objects:
  4641 ;;		On entry : 0/0
  4642 ;;		On exit  : 0/0
  4643 ;;		Unchanged: 0/0
  4644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4645 ;;      Params:         4       0       0       0       0       0       0       0       0
  4646 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4647 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4648 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4649 ;;Total ram usage:        4 bytes
  4650 ;; Hardware stack levels used:    1
  4651 ;; This function calls:
  4652 ;;		Nothing
  4653 ;; This function is called by:
  4654 ;;		_sprintf
  4655 ;; This function uses a non-reentrant model
  4656 ;;
  4657                           
  4658                           	psect	text14
  4659  002D98                     __ptext14:
  4660                           	opt stack 0
  4661  002D98                     ___flneg:
  4662                           	opt stack 28
  4663                           
  4664                           ;incstack = 0
  4665  002D98  5001               	movf	___flneg@f1,w,c
  4666  002D9A  1002               	iorwf	___flneg@f1+1,w,c
  4667  002D9C  1003               	iorwf	___flneg@f1+2,w,c
  4668  002D9E  1004               	iorwf	___flneg@f1+3,w,c
  4669  002DA0  B4D8               	btfsc	status,2,c
  4670  002DA2  D008               	goto	l2976
  4671  002DA4  0E00               	movlw	0
  4672  002DA6  1A01               	xorwf	___flneg@f1,f,c
  4673  002DA8  0E00               	movlw	0
  4674  002DAA  1A02               	xorwf	___flneg@f1+1,f,c
  4675  002DAC  0E00               	movlw	0
  4676  002DAE  1A03               	xorwf	___flneg@f1+2,f,c
  4677  002DB0  0E80               	movlw	128
  4678  002DB2  1A04               	xorwf	___flneg@f1+3,f,c
  4679  002DB4                     l2976:
  4680  002DB4  C001  F001         	movff	___flneg@f1,?___flneg
  4681  002DB8  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  4682  002DBC  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  4683  002DC0  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  4684  002DC4  0012               	return	
  4685  002DC6                     __end_of___flneg:
  4686                           	opt stack 0
  4687                           tblptru	equ	0xFF8
  4688                           tblptrh	equ	0xFF7
  4689                           tblptrl	equ	0xFF6
  4690                           tablat	equ	0xFF5
  4691                           prodh	equ	0xFF4
  4692                           prodl	equ	0xFF3
  4693                           postinc0	equ	0xFEE
  4694                           wreg	equ	0xFE8
  4695                           indf2	equ	0xFDF
  4696                           postinc2	equ	0xFDE
  4697                           fsr2h	equ	0xFDA
  4698                           fsr2l	equ	0xFD9
  4699                           status	equ	0xFD8
  4700                           
  4701 ;; *************** function ___flge *****************
  4702 ;; Defined at:
  4703 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\flge.c"
  4704 ;; Parameters:    Size  Location     Type
  4705 ;;  ff1             4    0[COMRAM] unsigned char 
  4706 ;;  ff2             4    4[COMRAM] unsigned char 
  4707 ;; Auto vars:     Size  Location     Type
  4708 ;;		None
  4709 ;; Return value:  Size  Location     Type
  4710 ;;		None               void
  4711 ;; Registers used:
  4712 ;;		wreg, status,2, status,0
  4713 ;; Tracked objects:
  4714 ;;		On entry : 0/0
  4715 ;;		On exit  : 0/0
  4716 ;;		Unchanged: 0/0
  4717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4718 ;;      Params:         8       0       0       0       0       0       0       0       0
  4719 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4720 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4721 ;;      Totals:        12       0       0       0       0       0       0       0       0
  4722 ;;Total ram usage:       12 bytes
  4723 ;; Hardware stack levels used:    1
  4724 ;; This function calls:
  4725 ;;		Nothing
  4726 ;; This function is called by:
  4727 ;;		_sprintf
  4728 ;; This function uses a non-reentrant model
  4729 ;;
  4730                           
  4731                           	psect	text15
  4732  0025A2                     __ptext15:
  4733                           	opt stack 0
  4734  0025A2                     ___flge:
  4735                           	opt stack 28
  4736                           
  4737                           ;incstack = 0
  4738  0025A2  0E00               	movlw	0
  4739  0025A4  1401               	andwf	___flge@ff1,w,c
  4740  0025A6  6E09               	movwf	??___flge& (0+255),c
  4741  0025A8  0E00               	movlw	0
  4742  0025AA  1402               	andwf	___flge@ff1+1,w,c
  4743  0025AC  6E0A               	movwf	(??___flge+1)& (0+255),c
  4744  0025AE  0E80               	movlw	128
  4745  0025B0  1403               	andwf	___flge@ff1+2,w,c
  4746  0025B2  6E0B               	movwf	(??___flge+2)& (0+255),c
  4747  0025B4  0E7F               	movlw	127
  4748  0025B6  1404               	andwf	___flge@ff1+3,w,c
  4749  0025B8  6E0C               	movwf	(??___flge+3)& (0+255),c
  4750  0025BA  5009               	movf	??___flge,w,c
  4751  0025BC  100A               	iorwf	??___flge+1,w,c
  4752  0025BE  100B               	iorwf	??___flge+2,w,c
  4753  0025C0  100C               	iorwf	??___flge+3,w,c
  4754  0025C2  A4D8               	btfss	status,2,c
  4755  0025C4  D008               	goto	l2954
  4756  0025C6  0E00               	movlw	0
  4757  0025C8  6E01               	movwf	___flge@ff1,c
  4758  0025CA  0E00               	movlw	0
  4759  0025CC  6E02               	movwf	___flge@ff1+1,c
  4760  0025CE  0E00               	movlw	0
  4761  0025D0  6E03               	movwf	___flge@ff1+2,c
  4762  0025D2  0E00               	movlw	0
  4763  0025D4  6E04               	movwf	___flge@ff1+3,c
  4764  0025D6                     l2954:
  4765  0025D6  0E00               	movlw	0
  4766  0025D8  1405               	andwf	___flge@ff2,w,c
  4767  0025DA  6E09               	movwf	??___flge& (0+255),c
  4768  0025DC  0E00               	movlw	0
  4769  0025DE  1406               	andwf	___flge@ff2+1,w,c
  4770  0025E0  6E0A               	movwf	(??___flge+1)& (0+255),c
  4771  0025E2  0E80               	movlw	128
  4772  0025E4  1407               	andwf	___flge@ff2+2,w,c
  4773  0025E6  6E0B               	movwf	(??___flge+2)& (0+255),c
  4774  0025E8  0E7F               	movlw	127
  4775  0025EA  1408               	andwf	___flge@ff2+3,w,c
  4776  0025EC  6E0C               	movwf	(??___flge+3)& (0+255),c
  4777  0025EE  5009               	movf	??___flge,w,c
  4778  0025F0  100A               	iorwf	??___flge+1,w,c
  4779  0025F2  100B               	iorwf	??___flge+2,w,c
  4780  0025F4  100C               	iorwf	??___flge+3,w,c
  4781  0025F6  A4D8               	btfss	status,2,c
  4782  0025F8  D008               	goto	l2958
  4783  0025FA  0E00               	movlw	0
  4784  0025FC  6E05               	movwf	___flge@ff2,c
  4785  0025FE  0E00               	movlw	0
  4786  002600  6E06               	movwf	___flge@ff2+1,c
  4787  002602  0E00               	movlw	0
  4788  002604  6E07               	movwf	___flge@ff2+2,c
  4789  002606  0E00               	movlw	0
  4790  002608  6E08               	movwf	___flge@ff2+3,c
  4791  00260A                     l2958:
  4792  00260A  AE04               	btfss	___flge@ff1+3,7,c
  4793  00260C  D01D               	goto	l2962
  4794  00260E  C001  F009         	movff	___flge@ff1,??___flge
  4795  002612  C002  F00A         	movff	___flge@ff1+1,??___flge+1
  4796  002616  C003  F00B         	movff	___flge@ff1+2,??___flge+2
  4797  00261A  C004  F00C         	movff	___flge@ff1+3,??___flge+3
  4798  00261E  1E09               	comf	??___flge,f,c
  4799  002620  1E0A               	comf	??___flge+1,f,c
  4800  002622  1E0B               	comf	??___flge+2,f,c
  4801  002624  1E0C               	comf	??___flge+3,f,c
  4802  002626  2A09               	incf	??___flge,f,c
  4803  002628  0E00               	movlw	0
  4804  00262A  220A               	addwfc	??___flge+1,f,c
  4805  00262C  220B               	addwfc	??___flge+2,f,c
  4806  00262E  220C               	addwfc	??___flge+3,f,c
  4807  002630  0E00               	movlw	0
  4808  002632  2409               	addwf	??___flge,w,c
  4809  002634  6E01               	movwf	___flge@ff1,c
  4810  002636  0E00               	movlw	0
  4811  002638  200A               	addwfc	??___flge+1,w,c
  4812  00263A  6E02               	movwf	___flge@ff1+1,c
  4813  00263C  0E00               	movlw	0
  4814  00263E  200B               	addwfc	??___flge+2,w,c
  4815  002640  6E03               	movwf	___flge@ff1+2,c
  4816  002642  0E80               	movlw	128
  4817  002644  200C               	addwfc	??___flge+3,w,c
  4818  002646  6E04               	movwf	___flge@ff1+3,c
  4819  002648                     l2962:
  4820  002648  AE08               	btfss	___flge@ff2+3,7,c
  4821  00264A  D01D               	goto	l481
  4822  00264C  C005  F009         	movff	___flge@ff2,??___flge
  4823  002650  C006  F00A         	movff	___flge@ff2+1,??___flge+1
  4824  002654  C007  F00B         	movff	___flge@ff2+2,??___flge+2
  4825  002658  C008  F00C         	movff	___flge@ff2+3,??___flge+3
  4826  00265C  1E09               	comf	??___flge,f,c
  4827  00265E  1E0A               	comf	??___flge+1,f,c
  4828  002660  1E0B               	comf	??___flge+2,f,c
  4829  002662  1E0C               	comf	??___flge+3,f,c
  4830  002664  2A09               	incf	??___flge,f,c
  4831  002666  0E00               	movlw	0
  4832  002668  220A               	addwfc	??___flge+1,f,c
  4833  00266A  220B               	addwfc	??___flge+2,f,c
  4834  00266C  220C               	addwfc	??___flge+3,f,c
  4835  00266E  0E00               	movlw	0
  4836  002670  2409               	addwf	??___flge,w,c
  4837  002672  6E05               	movwf	___flge@ff2,c
  4838  002674  0E00               	movlw	0
  4839  002676  200A               	addwfc	??___flge+1,w,c
  4840  002678  6E06               	movwf	___flge@ff2+1,c
  4841  00267A  0E00               	movlw	0
  4842  00267C  200B               	addwfc	??___flge+2,w,c
  4843  00267E  6E07               	movwf	___flge@ff2+2,c
  4844  002680  0E80               	movlw	128
  4845  002682  200C               	addwfc	??___flge+3,w,c
  4846  002684  6E08               	movwf	___flge@ff2+3,c
  4847  002686                     l481:
  4848  002686  0E00               	movlw	0
  4849  002688  1A01               	xorwf	___flge@ff1,f,c
  4850  00268A  0E00               	movlw	0
  4851  00268C  1A02               	xorwf	___flge@ff1+1,f,c
  4852  00268E  0E00               	movlw	0
  4853  002690  1A03               	xorwf	___flge@ff1+2,f,c
  4854  002692  0E80               	movlw	128
  4855  002694  1A04               	xorwf	___flge@ff1+3,f,c
  4856  002696  0E00               	movlw	0
  4857  002698  1A05               	xorwf	___flge@ff2,f,c
  4858  00269A  0E00               	movlw	0
  4859  00269C  1A06               	xorwf	___flge@ff2+1,f,c
  4860  00269E  0E00               	movlw	0
  4861  0026A0  1A07               	xorwf	___flge@ff2+2,f,c
  4862  0026A2  0E80               	movlw	128
  4863  0026A4  1A08               	xorwf	___flge@ff2+3,f,c
  4864  0026A6  5005               	movf	___flge@ff2,w,c
  4865  0026A8  5C01               	subwf	___flge@ff1,w,c
  4866  0026AA  5006               	movf	___flge@ff2+1,w,c
  4867  0026AC  5802               	subwfb	___flge@ff1+1,w,c
  4868  0026AE  5007               	movf	___flge@ff2+2,w,c
  4869  0026B0  5803               	subwfb	___flge@ff1+2,w,c
  4870  0026B2  5008               	movf	___flge@ff2+3,w,c
  4871  0026B4  5804               	subwfb	___flge@ff1+3,w,c
  4872  0026B6  B0D8               	btfsc	status,0,c
  4873  0026B8  D002               	goto	l2968
  4874  0026BA  90D8               	bcf	status,0,c
  4875  0026BC  0012               	return	
  4876  0026BE                     l2968:
  4877  0026BE  80D8               	bsf	status,0,c
  4878  0026C0  0012               	return	
  4879  0026C2                     __end_of___flge:
  4880                           	opt stack 0
  4881                           tblptru	equ	0xFF8
  4882                           tblptrh	equ	0xFF7
  4883                           tblptrl	equ	0xFF6
  4884                           tablat	equ	0xFF5
  4885                           prodh	equ	0xFF4
  4886                           prodl	equ	0xFF3
  4887                           postinc0	equ	0xFEE
  4888                           wreg	equ	0xFE8
  4889                           indf2	equ	0xFDF
  4890                           postinc2	equ	0xFDE
  4891                           fsr2h	equ	0xFDA
  4892                           fsr2l	equ	0xFD9
  4893                           status	equ	0xFD8
  4894                           
  4895 ;; *************** function _LCD_write_string *****************
  4896 ;; Defined at:
  4897 ;;		line 194 in file "../../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  4898 ;; Parameters:    Size  Location     Type
  4899 ;;  buffer          2   17[COMRAM] PTR unsigned char 
  4900 ;;		 -> str(8), LCD_write_integer@convertedInt(6), 
  4901 ;; Auto vars:     Size  Location     Type
  4902 ;;		None
  4903 ;; Return value:  Size  Location     Type
  4904 ;;                  1    wreg      void 
  4905 ;; Registers used:
  4906 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4907 ;; Tracked objects:
  4908 ;;		On entry : 0/0
  4909 ;;		On exit  : 0/0
  4910 ;;		Unchanged: 0/0
  4911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4912 ;;      Params:         2       0       0       0       0       0       0       0       0
  4913 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4914 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4915 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4916 ;;Total ram usage:        2 bytes
  4917 ;; Hardware stack levels used:    1
  4918 ;; Hardware stack levels required when called:    5
  4919 ;; This function calls:
  4920 ;;		_LCD_write_char
  4921 ;; This function is called by:
  4922 ;;		_ricarica
  4923 ;;		_LCD_write_integer
  4924 ;; This function uses a non-reentrant model
  4925 ;;
  4926                           
  4927                           	psect	text16
  4928  002E64                     __ptext16:
  4929                           	opt stack 0
  4930  002E64                     _LCD_write_string:
  4931                           	opt stack 24
  4932                           
  4933                           ;src\LCD_44780.c: 197: while(*buffer){
  4934                           
  4935                           ;incstack = 0
  4936  002E64  D009               	goto	l3130
  4937  002E66                     l3126:
  4938                           
  4939                           ;src\LCD_44780.c: 200: LCD_write_char(*buffer);
  4940  002E66  C012  FFD9         	movff	LCD_write_string@buffer,fsr2l
  4941  002E6A  C013  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
  4942  002E6E  50DF               	movf	indf2,w,c
  4943  002E70  EC73  F015         	call	_LCD_write_char
  4944                           
  4945                           ;src\LCD_44780.c: 202: buffer++;
  4946  002E74  4A12               	infsnz	LCD_write_string@buffer,f,c
  4947  002E76  2A13               	incf	LCD_write_string@buffer+1,f,c
  4948  002E78                     l3130:
  4949  002E78  C012  FFD9         	movff	LCD_write_string@buffer,fsr2l
  4950  002E7C  C013  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
  4951  002E80  50DF               	movf	indf2,w,c
  4952  002E82  B4D8               	btfsc	status,2,c
  4953  002E84  0012               	return	
  4954  002E86  D7EF               	goto	l3126
  4955  002E88                     __end_of_LCD_write_string:
  4956                           	opt stack 0
  4957                           tblptru	equ	0xFF8
  4958                           tblptrh	equ	0xFF7
  4959                           tblptrl	equ	0xFF6
  4960                           tablat	equ	0xFF5
  4961                           prodh	equ	0xFF4
  4962                           prodl	equ	0xFF3
  4963                           postinc0	equ	0xFEE
  4964                           wreg	equ	0xFE8
  4965                           indf2	equ	0xFDF
  4966                           postinc2	equ	0xFDE
  4967                           fsr2h	equ	0xFDA
  4968                           fsr2l	equ	0xFD9
  4969                           status	equ	0xFD8
  4970                           
  4971 ;; *************** function _LCD_goto_line *****************
  4972 ;; Defined at:
  4973 ;;		line 111 in file "../../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  4974 ;; Parameters:    Size  Location     Type
  4975 ;;  line            1    wreg     unsigned char 
  4976 ;; Auto vars:     Size  Location     Type
  4977 ;;  line            1   12[COMRAM] unsigned char 
  4978 ;; Return value:  Size  Location     Type
  4979 ;;                  1    wreg      void 
  4980 ;; Registers used:
  4981 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4982 ;; Tracked objects:
  4983 ;;		On entry : 0/0
  4984 ;;		On exit  : 0/0
  4985 ;;		Unchanged: 0/0
  4986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4987 ;;      Params:         0       0       0       0       0       0       0       0       0
  4988 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4989 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4990 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4991 ;;Total ram usage:        1 bytes
  4992 ;; Hardware stack levels used:    1
  4993 ;; Hardware stack levels required when called:    4
  4994 ;; This function calls:
  4995 ;;		_LCD_send_command
  4996 ;; This function is called by:
  4997 ;;		_ricarica
  4998 ;;		_LCD_goto_xy
  4999 ;; This function uses a non-reentrant model
  5000 ;;
  5001                           
  5002                           	psect	text17
  5003  0028B8                     __ptext17:
  5004                           	opt stack 0
  5005  0028B8                     _LCD_goto_line:
  5006                           	opt stack 25
  5007                           
  5008                           ;incstack = 0
  5009                           ;LCD_goto_line@line stored from wreg
  5010  0028B8  6E0D               	movwf	LCD_goto_line@line,c
  5011                           
  5012                           ;src\LCD_44780.c: 113: switch(line) {
  5013  0028BA  D04C               	goto	l3114
  5014  0028BC                     l3106:
  5015  0028BC  0E00               	movlw	0
  5016  0028BE  6E09               	movwf	LCD_send_command@D2,c
  5017  0028C0  0E00               	movlw	0
  5018  0028C2  6E0A               	movwf	LCD_send_command@D1,c
  5019  0028C4  0E00               	movlw	0
  5020  0028C6  6E0B               	movwf	LCD_send_command@D0,c
  5021  0028C8  0E01               	movlw	1
  5022  0028CA  ECB4  F016         	call	_LCD_send_command
  5023                           
  5024                           ;src\LCD_44780.c: 116: LCD_send_command(0,0,0,0);
  5025  0028CE  0E00               	movlw	0
  5026  0028D0  6E09               	movwf	LCD_send_command@D2,c
  5027  0028D2  0E00               	movlw	0
  5028  0028D4  6E0A               	movwf	LCD_send_command@D1,c
  5029  0028D6  0E00               	movlw	0
  5030  0028D8  6E0B               	movwf	LCD_send_command@D0,c
  5031  0028DA  0E00               	movlw	0
  5032  0028DC  ECB4  F016         	call	_LCD_send_command
  5033                           
  5034                           ;src\LCD_44780.c: 117: break;
  5035  0028E0  0012               	return	
  5036  0028E2                     l3108:
  5037  0028E2  0E01               	movlw	1
  5038  0028E4  6E09               	movwf	LCD_send_command@D2,c
  5039  0028E6  0E00               	movlw	0
  5040  0028E8  6E0A               	movwf	LCD_send_command@D1,c
  5041  0028EA  0E00               	movlw	0
  5042  0028EC  6E0B               	movwf	LCD_send_command@D0,c
  5043  0028EE  0E01               	movlw	1
  5044  0028F0  ECB4  F016         	call	_LCD_send_command
  5045                           
  5046                           ;src\LCD_44780.c: 120: LCD_send_command(0,0,0,0);
  5047  0028F4  0E00               	movlw	0
  5048  0028F6  6E09               	movwf	LCD_send_command@D2,c
  5049  0028F8  0E00               	movlw	0
  5050  0028FA  6E0A               	movwf	LCD_send_command@D1,c
  5051  0028FC  0E00               	movlw	0
  5052  0028FE  6E0B               	movwf	LCD_send_command@D0,c
  5053  002900  0E00               	movlw	0
  5054  002902  ECB4  F016         	call	_LCD_send_command
  5055                           
  5056                           ;src\LCD_44780.c: 121: break;
  5057  002906  0012               	return	
  5058  002908                     l3110:
  5059  002908  0E00               	movlw	0
  5060  00290A  6E09               	movwf	LCD_send_command@D2,c
  5061  00290C  0E00               	movlw	0
  5062  00290E  6E0A               	movwf	LCD_send_command@D1,c
  5063  002910  0E01               	movlw	1
  5064  002912  6E0B               	movwf	LCD_send_command@D0,c
  5065  002914  0E01               	movlw	1
  5066  002916  ECB4  F016         	call	_LCD_send_command
  5067                           
  5068                           ;src\LCD_44780.c: 124: LCD_send_command(0,1,0,0);
  5069  00291A  0E01               	movlw	1
  5070  00291C  6E09               	movwf	LCD_send_command@D2,c
  5071  00291E  0E00               	movlw	0
  5072  002920  6E0A               	movwf	LCD_send_command@D1,c
  5073  002922  0E00               	movlw	0
  5074  002924  6E0B               	movwf	LCD_send_command@D0,c
  5075  002926  0E00               	movlw	0
  5076  002928  ECB4  F016         	call	_LCD_send_command
  5077                           
  5078                           ;src\LCD_44780.c: 125: break;
  5079  00292C  0012               	return	
  5080  00292E                     l3112:
  5081  00292E  0E01               	movlw	1
  5082  002930  6E09               	movwf	LCD_send_command@D2,c
  5083  002932  0E00               	movlw	0
  5084  002934  6E0A               	movwf	LCD_send_command@D1,c
  5085  002936  0E01               	movlw	1
  5086  002938  6E0B               	movwf	LCD_send_command@D0,c
  5087  00293A  0E01               	movlw	1
  5088  00293C  ECB4  F016         	call	_LCD_send_command
  5089                           
  5090                           ;src\LCD_44780.c: 128: LCD_send_command(0,1,0,0);
  5091  002940  0E01               	movlw	1
  5092  002942  6E09               	movwf	LCD_send_command@D2,c
  5093  002944  0E00               	movlw	0
  5094  002946  6E0A               	movwf	LCD_send_command@D1,c
  5095  002948  0E00               	movlw	0
  5096  00294A  6E0B               	movwf	LCD_send_command@D0,c
  5097  00294C  0E00               	movlw	0
  5098  00294E  ECB4  F016         	call	_LCD_send_command
  5099                           
  5100                           ;src\LCD_44780.c: 129: }
  5101  002952  0012               	return	
  5102  002954                     l3114:
  5103  002954  500D               	movf	LCD_goto_line@line,w,c
  5104                           
  5105                           ; Switch size 1, requested type "space"
  5106                           ; Number of cases is 4, Range of values is 1 to 4
  5107                           ; switch strategies available:
  5108                           ; Name         Instructions Cycles
  5109                           ; simple_byte           13     7 (average)
  5110                           ;	Chosen strategy is simple_byte
  5111  002956  0A01               	xorlw	1	; case 1
  5112  002958  B4D8               	btfsc	status,2,c
  5113  00295A  D7B0               	goto	l3106
  5114  00295C  0A03               	xorlw	3	; case 2
  5115  00295E  B4D8               	btfsc	status,2,c
  5116  002960  D7C0               	goto	l3108
  5117  002962  0A01               	xorlw	1	; case 3
  5118  002964  B4D8               	btfsc	status,2,c
  5119  002966  D7D0               	goto	l3110
  5120  002968  0A07               	xorlw	7	; case 4
  5121  00296A  A4D8               	btfss	status,2,c
  5122  00296C  0012               	return	
  5123  00296E  D7DF               	goto	l3112
  5124  002970                     __end_of_LCD_goto_line:
  5125                           	opt stack 0
  5126                           tblptru	equ	0xFF8
  5127                           tblptrh	equ	0xFF7
  5128                           tblptrl	equ	0xFF6
  5129                           tablat	equ	0xFF5
  5130                           prodh	equ	0xFF4
  5131                           prodl	equ	0xFF3
  5132                           postinc0	equ	0xFEE
  5133                           wreg	equ	0xFE8
  5134                           indf2	equ	0xFDF
  5135                           postinc2	equ	0xFDE
  5136                           fsr2h	equ	0xFDA
  5137                           fsr2l	equ	0xFD9
  5138                           status	equ	0xFD8
  5139                           
  5140 ;; *************** function _read_adc *****************
  5141 ;; Defined at:
  5142 ;;		line 61 in file "tester.c"
  5143 ;; Parameters:    Size  Location     Type
  5144 ;;		None
  5145 ;; Auto vars:     Size  Location     Type
  5146 ;;  i               1   41[COMRAM] unsigned char 
  5147 ;; Return value:  Size  Location     Type
  5148 ;;                  1    wreg      void 
  5149 ;; Registers used:
  5150 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5151 ;; Tracked objects:
  5152 ;;		On entry : 0/0
  5153 ;;		On exit  : 0/0
  5154 ;;		Unchanged: 0/0
  5155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5156 ;;      Params:         0       0       0       0       0       0       0       0       0
  5157 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5158 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5159 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5160 ;;Total ram usage:        3 bytes
  5161 ;; Hardware stack levels used:    1
  5162 ;; Hardware stack levels required when called:    2
  5163 ;; This function calls:
  5164 ;;		___awdiv
  5165 ;;		___flmul
  5166 ;;		___wmul
  5167 ;;		___xxtofl
  5168 ;;		_delay_ms
  5169 ;; This function is called by:
  5170 ;;		_main
  5171 ;; This function uses a non-reentrant model
  5172 ;;
  5173                           
  5174                           	psect	text18
  5175  00209E                     __ptext18:
  5176                           	opt stack 0
  5177  00209E                     _read_adc:
  5178                           	opt stack 28
  5179                           
  5180                           ;tester.c: 62: for (char i = 0; i < 3; i++) {
  5181                           
  5182                           ;incstack = 0
  5183  00209E  0E00               	movlw	0
  5184  0020A0  6E2A               	movwf	read_adc@i,c
  5185  0020A2                     l3412:
  5186  0020A2  0E02               	movlw	2
  5187  0020A4  642A               	cpfsgt	read_adc@i,c
  5188  0020A6  D001               	goto	l3416
  5189  0020A8  D044               	goto	l3430
  5190  0020AA                     l3416:
  5191                           
  5192                           ;tester.c: 63: ADCON0 = combinazioni[i];
  5193  0020AA  502A               	movf	read_adc@i,w,c
  5194  0020AC  0D01               	mullw	1
  5195  0020AE  0E93               	movlw	low _combinazioni
  5196  0020B0  24F3               	addwf	prodl,w,c
  5197  0020B2  6ED9               	movwf	fsr2l,c
  5198  0020B4  0E00               	movlw	high _combinazioni
  5199  0020B6  20F4               	addwfc	prodh,w,c
  5200  0020B8  6EDA               	movwf	fsr2h,c
  5201  0020BA  50DF               	movf	indf2,w,c
  5202  0020BC  6EC2               	movwf	4034,c	;volatile
  5203                           
  5204                           ;tester.c: 64: ADCON0bits.ADON = 1;
  5205  0020BE  80C2               	bsf	4034,0,c	;volatile
  5206                           
  5207                           ;tester.c: 65: ADCON0bits.GO = 1;
  5208  0020C0  82C2               	bsf	4034,1,c	;volatile
  5209  0020C2                     l162:
  5210  0020C2  B2C2               	btfsc	4034,1,c	;volatile
  5211  0020C4  D7FE               	goto	l162
  5212                           
  5213                           ;tester.c: 67: lettura [i] = ADRESH;
  5214  0020C6  50C4               	movf	4036,w,c	;volatile
  5215  0020C8  6E28               	movwf	??_read_adc& (0+255),c
  5216  0020CA  6A29               	clrf	(??_read_adc+1)& (0+255),c
  5217  0020CC  502A               	movf	read_adc@i,w,c
  5218  0020CE  0D02               	mullw	2
  5219  0020D0  0E5D               	movlw	low _lettura
  5220  0020D2  24F3               	addwf	prodl,w,c
  5221  0020D4  6ED9               	movwf	fsr2l,c
  5222  0020D6  0E00               	movlw	high _lettura
  5223  0020D8  20F4               	addwfc	prodh,w,c
  5224  0020DA  6EDA               	movwf	fsr2h,c
  5225  0020DC  C028  FFDE         	movff	??_read_adc,postinc2
  5226  0020E0  C029  FFDD         	movff	??_read_adc+1,postdec2
  5227                           
  5228                           ;tester.c: 68: lettura [i] = ((lettura[i] << 8) | ADRESL);
  5229  0020E4  502A               	movf	read_adc@i,w,c
  5230  0020E6  0D02               	mullw	2
  5231  0020E8  0E5D               	movlw	low _lettura
  5232  0020EA  24F3               	addwf	prodl,w,c
  5233  0020EC  6ED9               	movwf	fsr2l,c
  5234  0020EE  0E00               	movlw	high _lettura
  5235  0020F0  20F4               	addwfc	prodh,w,c
  5236  0020F2  6EDA               	movwf	fsr2h,c
  5237  0020F4  CFDE F028          	movff	postinc2,??_read_adc
  5238  0020F8  CFDD F029          	movff	postdec2,??_read_adc+1
  5239  0020FC  C028  F029         	movff	??_read_adc,??_read_adc+1
  5240  002100  6A28               	clrf	??_read_adc,c
  5241  002102  50C3               	movf	4035,w,c	;volatile
  5242  002104  1228               	iorwf	??_read_adc,f,c
  5243  002106  0E00               	movlw	0
  5244  002108  1229               	iorwf	??_read_adc+1,f,c
  5245  00210A  502A               	movf	read_adc@i,w,c
  5246  00210C  0D02               	mullw	2
  5247  00210E  0E5D               	movlw	low _lettura
  5248  002110  24F3               	addwf	prodl,w,c
  5249  002112  6ED9               	movwf	fsr2l,c
  5250  002114  0E00               	movlw	high _lettura
  5251  002116  20F4               	addwfc	prodh,w,c
  5252  002118  6EDA               	movwf	fsr2h,c
  5253  00211A  C028  FFDE         	movff	??_read_adc,postinc2
  5254  00211E  C029  FFDD         	movff	??_read_adc+1,postdec2
  5255                           
  5256                           ;tester.c: 69: delay_ms(5);
  5257  002122  0E00               	movlw	0
  5258  002124  6E08               	movwf	delay_ms@value_ms+1,c
  5259  002126  0E05               	movlw	5
  5260  002128  6E07               	movwf	delay_ms@value_ms,c
  5261  00212A  EC9B  F016         	call	_delay_ms	;wreg free
  5262  00212E  2A2A               	incf	read_adc@i,f,c
  5263  002130  D7B8               	goto	l3412
  5264  002132                     l3430:
  5265                           
  5266                           ;tester.c: 70: }
  5267                           ;tester.c: 71: current = (lettura[1]-lettura[0]);
  5268  002132  C05D  F028         	movff	_lettura,??_read_adc
  5269  002136  C05E  F029         	movff	_lettura+1,??_read_adc+1
  5270  00213A  1E28               	comf	??_read_adc,f,c
  5271  00213C  1E29               	comf	??_read_adc+1,f,c
  5272  00213E  4A28               	infsnz	??_read_adc,f,c
  5273  002140  2A29               	incf	??_read_adc+1,f,c
  5274  002142  505F               	movf	_lettura+2,w,c
  5275  002144  2628               	addwf	??_read_adc,f,c
  5276  002146  5060               	movf	_lettura+3,w,c
  5277  002148  2229               	addwfc	??_read_adc+1,f,c
  5278  00214A  C028  F00F         	movff	??_read_adc,___xxtofl@val
  5279  00214E  C029  F010         	movff	??_read_adc+1,___xxtofl@val+1
  5280  002152  0E00               	movlw	0
  5281  002154  BE10               	btfsc	___xxtofl@val+1,7,c
  5282  002156  0EFF               	movlw	-1
  5283  002158  6E11               	movwf	___xxtofl@val+2,c
  5284  00215A  6E12               	movwf	___xxtofl@val+3,c
  5285  00215C  0E01               	movlw	1
  5286  00215E  ECFC  F010         	call	___xxtofl
  5287  002162  C00F  F07F         	movff	?___xxtofl,_current
  5288  002166  C010  F080         	movff	?___xxtofl+1,_current+1
  5289  00216A  C011  F081         	movff	?___xxtofl+2,_current+2
  5290  00216E  C012  F082         	movff	?___xxtofl+3,_current+3
  5291                           
  5292                           ;tester.c: 72: voltage = (lettura[2]*5)/1024;
  5293  002172  0E04               	movlw	4
  5294  002174  6E0A               	movwf	___awdiv@divisor+1,c
  5295  002176  0E00               	movlw	0
  5296  002178  6E09               	movwf	___awdiv@divisor,c
  5297  00217A  C061  F001         	movff	_lettura+4,___wmul@multiplier
  5298  00217E  C062  F002         	movff	_lettura+5,___wmul@multiplier+1
  5299  002182  0E00               	movlw	0
  5300  002184  6E04               	movwf	___wmul@multiplicand+1,c
  5301  002186  0E05               	movlw	5
  5302  002188  6E03               	movwf	___wmul@multiplicand,c
  5303  00218A  EC1F  F017         	call	___wmul	;wreg free
  5304  00218E  C001  F007         	movff	?___wmul,___awdiv@dividend
  5305  002192  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
  5306  002196  ECB8  F014         	call	___awdiv	;wreg free
  5307  00219A  C007  F00F         	movff	?___awdiv,___xxtofl@val
  5308  00219E  C008  F010         	movff	?___awdiv+1,___xxtofl@val+1
  5309  0021A2  0E00               	movlw	0
  5310  0021A4  BE10               	btfsc	___xxtofl@val+1,7,c
  5311  0021A6  0EFF               	movlw	-1
  5312  0021A8  6E11               	movwf	___xxtofl@val+2,c
  5313  0021AA  6E12               	movwf	___xxtofl@val+3,c
  5314  0021AC  0E01               	movlw	1
  5315  0021AE  ECFC  F010         	call	___xxtofl
  5316  0021B2  C00F  F083         	movff	?___xxtofl,_voltage
  5317  0021B6  C010  F084         	movff	?___xxtofl+1,_voltage+1
  5318  0021BA  C011  F085         	movff	?___xxtofl+2,_voltage+2
  5319  0021BE  C012  F086         	movff	?___xxtofl+3,_voltage+3
  5320                           
  5321                           ;tester.c: 73: voltage = voltage * rapporto;
  5322  0021C2  C083  F00F         	movff	_voltage,___flmul@b
  5323  0021C6  C084  F010         	movff	_voltage+1,___flmul@b+1
  5324  0021CA  C085  F011         	movff	_voltage+2,___flmul@b+2
  5325  0021CE  C086  F012         	movff	_voltage+3,___flmul@b+3
  5326  0021D2  C08F  F013         	movff	_rapporto,___flmul@a
  5327  0021D6  C090  F014         	movff	_rapporto+1,___flmul@a+1
  5328  0021DA  C091  F015         	movff	_rapporto+2,___flmul@a+2
  5329  0021DE  C092  F016         	movff	_rapporto+3,___flmul@a+3
  5330  0021E2  EC72  F00A         	call	___flmul	;wreg free
  5331  0021E6  C00F  F083         	movff	?___flmul,_voltage
  5332  0021EA  C010  F084         	movff	?___flmul+1,_voltage+1
  5333  0021EE  C011  F085         	movff	?___flmul+2,_voltage+2
  5334  0021F2  C012  F086         	movff	?___flmul+3,_voltage+3
  5335  0021F6  0012               	return		;funcret
  5336  0021F8                     __end_of_read_adc:
  5337                           	opt stack 0
  5338                           tblptru	equ	0xFF8
  5339                           tblptrh	equ	0xFF7
  5340                           tblptrl	equ	0xFF6
  5341                           tablat	equ	0xFF5
  5342                           prodh	equ	0xFF4
  5343                           prodl	equ	0xFF3
  5344                           postinc0	equ	0xFEE
  5345                           wreg	equ	0xFE8
  5346                           indf2	equ	0xFDF
  5347                           postinc2	equ	0xFDE
  5348                           postdec2	equ	0xFDD
  5349                           fsr2h	equ	0xFDA
  5350                           fsr2l	equ	0xFD9
  5351                           status	equ	0xFD8
  5352                           
  5353 ;; *************** function ___xxtofl *****************
  5354 ;; Defined at:
  5355 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\xxtofl.c"
  5356 ;; Parameters:    Size  Location     Type
  5357 ;;  sign            1    wreg     unsigned char 
  5358 ;;  val             4   14[COMRAM] long 
  5359 ;; Auto vars:     Size  Location     Type
  5360 ;;  sign            1   22[COMRAM] unsigned char 
  5361 ;;  arg             4   24[COMRAM] unsigned long 
  5362 ;;  exp             1   23[COMRAM] unsigned char 
  5363 ;; Return value:  Size  Location     Type
  5364 ;;                  4   14[COMRAM] unsigned char 
  5365 ;; Registers used:
  5366 ;;		wreg, status,2, status,0
  5367 ;; Tracked objects:
  5368 ;;		On entry : 0/0
  5369 ;;		On exit  : 0/0
  5370 ;;		Unchanged: 0/0
  5371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5372 ;;      Params:         4       0       0       0       0       0       0       0       0
  5373 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5374 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5375 ;;      Totals:        14       0       0       0       0       0       0       0       0
  5376 ;;Total ram usage:       14 bytes
  5377 ;; Hardware stack levels used:    1
  5378 ;; This function calls:
  5379 ;;		Nothing
  5380 ;; This function is called by:
  5381 ;;		_read_adc
  5382 ;;		_sprintf
  5383 ;; This function uses a non-reentrant model
  5384 ;;
  5385                           
  5386                           	psect	text19
  5387  0021F8                     __ptext19:
  5388                           	opt stack 0
  5389  0021F8                     ___xxtofl:
  5390                           	opt stack 28
  5391                           
  5392                           ;incstack = 0
  5393                           ;___xxtofl@sign stored from wreg
  5394  0021F8  6E17               	movwf	___xxtofl@sign,c
  5395  0021FA  5017               	movf	___xxtofl@sign,w,c
  5396  0021FC  A4D8               	btfss	status,2,c
  5397  0021FE  AE12               	btfss	___xxtofl@val+3,7,c
  5398  002200  D01A               	goto	l866
  5399  002202  C00F  F013         	movff	___xxtofl@val,??___xxtofl
  5400  002206  C010  F014         	movff	___xxtofl@val+1,??___xxtofl+1
  5401  00220A  C011  F015         	movff	___xxtofl@val+2,??___xxtofl+2
  5402  00220E  C012  F016         	movff	___xxtofl@val+3,??___xxtofl+3
  5403  002212  1E13               	comf	??___xxtofl,f,c
  5404  002214  1E14               	comf	??___xxtofl+1,f,c
  5405  002216  1E15               	comf	??___xxtofl+2,f,c
  5406  002218  1E16               	comf	??___xxtofl+3,f,c
  5407  00221A  2A13               	incf	??___xxtofl,f,c
  5408  00221C  0E00               	movlw	0
  5409  00221E  2214               	addwfc	??___xxtofl+1,f,c
  5410  002220  2215               	addwfc	??___xxtofl+2,f,c
  5411  002222  2216               	addwfc	??___xxtofl+3,f,c
  5412  002224  C013  F019         	movff	??___xxtofl,___xxtofl@arg
  5413  002228  C014  F01A         	movff	??___xxtofl+1,___xxtofl@arg+1
  5414  00222C  C015  F01B         	movff	??___xxtofl+2,___xxtofl@arg+2
  5415  002230  C016  F01C         	movff	??___xxtofl+3,___xxtofl@arg+3
  5416  002234  D008               	goto	l3068
  5417  002236                     l866:
  5418  002236  C00F  F019         	movff	___xxtofl@val,___xxtofl@arg
  5419  00223A  C010  F01A         	movff	___xxtofl@val+1,___xxtofl@arg+1
  5420  00223E  C011  F01B         	movff	___xxtofl@val+2,___xxtofl@arg+2
  5421  002242  C012  F01C         	movff	___xxtofl@val+3,___xxtofl@arg+3
  5422  002246                     l3068:
  5423  002246  500F               	movf	___xxtofl@val,w,c
  5424  002248  1010               	iorwf	___xxtofl@val+1,w,c
  5425  00224A  1011               	iorwf	___xxtofl@val+2,w,c
  5426  00224C  1012               	iorwf	___xxtofl@val+3,w,c
  5427  00224E  A4D8               	btfss	status,2,c
  5428  002250  D009               	goto	l3074
  5429  002252  0E00               	movlw	0
  5430  002254  6E0F               	movwf	?___xxtofl,c
  5431  002256  0E00               	movlw	0
  5432  002258  6E10               	movwf	?___xxtofl+1,c
  5433  00225A  0E00               	movlw	0
  5434  00225C  6E11               	movwf	?___xxtofl+2,c
  5435  00225E  0E00               	movlw	0
  5436  002260  6E12               	movwf	?___xxtofl+3,c
  5437  002262  0012               	return	
  5438  002264                     l3074:
  5439  002264  0E96               	movlw	150
  5440  002266  6E18               	movwf	___xxtofl@exp,c
  5441  002268  D006               	goto	l3078
  5442  00226A                     l3076:
  5443  00226A  2A18               	incf	___xxtofl@exp,f,c
  5444  00226C  90D8               	bcf	status,0,c
  5445  00226E  321C               	rrcf	___xxtofl@arg+3,f,c
  5446  002270  321B               	rrcf	___xxtofl@arg+2,f,c
  5447  002272  321A               	rrcf	___xxtofl@arg+1,f,c
  5448  002274  3219               	rrcf	___xxtofl@arg,f,c
  5449  002276                     l3078:
  5450  002276  0E00               	movlw	0
  5451  002278  1419               	andwf	___xxtofl@arg,w,c
  5452  00227A  6E13               	movwf	??___xxtofl& (0+255),c
  5453  00227C  0E00               	movlw	0
  5454  00227E  141A               	andwf	___xxtofl@arg+1,w,c
  5455  002280  6E14               	movwf	(??___xxtofl+1)& (0+255),c
  5456  002282  0E00               	movlw	0
  5457  002284  141B               	andwf	___xxtofl@arg+2,w,c
  5458  002286  6E15               	movwf	(??___xxtofl+2)& (0+255),c
  5459  002288  0EFE               	movlw	254
  5460  00228A  141C               	andwf	___xxtofl@arg+3,w,c
  5461  00228C  6E16               	movwf	(??___xxtofl+3)& (0+255),c
  5462  00228E  5013               	movf	??___xxtofl,w,c
  5463  002290  1014               	iorwf	??___xxtofl+1,w,c
  5464  002292  1015               	iorwf	??___xxtofl+2,w,c
  5465  002294  1016               	iorwf	??___xxtofl+3,w,c
  5466  002296  B4D8               	btfsc	status,2,c
  5467  002298  D00D               	goto	l873
  5468  00229A  D7E7               	goto	l3076
  5469  00229C                     l3080:
  5470  00229C  2A18               	incf	___xxtofl@exp,f,c
  5471  00229E  0E01               	movlw	1
  5472  0022A0  2619               	addwf	___xxtofl@arg,f,c
  5473  0022A2  0E00               	movlw	0
  5474  0022A4  221A               	addwfc	___xxtofl@arg+1,f,c
  5475  0022A6  221B               	addwfc	___xxtofl@arg+2,f,c
  5476  0022A8  221C               	addwfc	___xxtofl@arg+3,f,c
  5477  0022AA  90D8               	bcf	status,0,c
  5478  0022AC  321C               	rrcf	___xxtofl@arg+3,f,c
  5479  0022AE  321B               	rrcf	___xxtofl@arg+2,f,c
  5480  0022B0  321A               	rrcf	___xxtofl@arg+1,f,c
  5481  0022B2  3219               	rrcf	___xxtofl@arg,f,c
  5482  0022B4                     l873:
  5483  0022B4  0E00               	movlw	0
  5484  0022B6  1419               	andwf	___xxtofl@arg,w,c
  5485  0022B8  6E13               	movwf	??___xxtofl& (0+255),c
  5486  0022BA  0E00               	movlw	0
  5487  0022BC  141A               	andwf	___xxtofl@arg+1,w,c
  5488  0022BE  6E14               	movwf	(??___xxtofl+1)& (0+255),c
  5489  0022C0  0E00               	movlw	0
  5490  0022C2  141B               	andwf	___xxtofl@arg+2,w,c
  5491  0022C4  6E15               	movwf	(??___xxtofl+2)& (0+255),c
  5492  0022C6  0EFF               	movlw	255
  5493  0022C8  141C               	andwf	___xxtofl@arg+3,w,c
  5494  0022CA  6E16               	movwf	(??___xxtofl+3)& (0+255),c
  5495  0022CC  5013               	movf	??___xxtofl,w,c
  5496  0022CE  1014               	iorwf	??___xxtofl+1,w,c
  5497  0022D0  1015               	iorwf	??___xxtofl+2,w,c
  5498  0022D2  1016               	iorwf	??___xxtofl+3,w,c
  5499  0022D4  B4D8               	btfsc	status,2,c
  5500  0022D6  D007               	goto	l3088
  5501  0022D8  D7E1               	goto	l3080
  5502  0022DA                     l3086:
  5503  0022DA  0618               	decf	___xxtofl@exp,f,c
  5504  0022DC  90D8               	bcf	status,0,c
  5505  0022DE  3619               	rlcf	___xxtofl@arg,f,c
  5506  0022E0  361A               	rlcf	___xxtofl@arg+1,f,c
  5507  0022E2  361B               	rlcf	___xxtofl@arg+2,f,c
  5508  0022E4  361C               	rlcf	___xxtofl@arg+3,f,c
  5509  0022E6                     l3088:
  5510  0022E6  BE1B               	btfsc	___xxtofl@arg+2,7,c
  5511  0022E8  D003               	goto	l880
  5512  0022EA  0E02               	movlw	2
  5513  0022EC  6018               	cpfslt	___xxtofl@exp,c
  5514  0022EE  D7F5               	goto	l3086
  5515  0022F0                     l880:
  5516  0022F0  B018               	btfsc	___xxtofl@exp,0,c
  5517  0022F2  D008               	goto	l881
  5518  0022F4  0EFF               	movlw	255
  5519  0022F6  1619               	andwf	___xxtofl@arg,f,c
  5520  0022F8  0EFF               	movlw	255
  5521  0022FA  161A               	andwf	___xxtofl@arg+1,f,c
  5522  0022FC  0E7F               	movlw	127
  5523  0022FE  161B               	andwf	___xxtofl@arg+2,f,c
  5524  002300  0EFF               	movlw	255
  5525  002302  161C               	andwf	___xxtofl@arg+3,f,c
  5526  002304                     l881:
  5527  002304  90D8               	bcf	status,0,c
  5528  002306  3218               	rrcf	___xxtofl@exp,f,c
  5529  002308  C018  F013         	movff	___xxtofl@exp,??___xxtofl
  5530  00230C  6A14               	clrf	(??___xxtofl+1)& (0+255),c
  5531  00230E  6A15               	clrf	(??___xxtofl+2)& (0+255),c
  5532  002310  6A16               	clrf	(??___xxtofl+3)& (0+255),c
  5533  002312  C013  F016         	movff	??___xxtofl,??___xxtofl+3
  5534  002316  6A15               	clrf	??___xxtofl+2,c
  5535  002318  6A14               	clrf	??___xxtofl+1,c
  5536  00231A  6A13               	clrf	??___xxtofl,c
  5537  00231C  5013               	movf	??___xxtofl,w,c
  5538  00231E  1219               	iorwf	___xxtofl@arg,f,c
  5539  002320  5014               	movf	??___xxtofl+1,w,c
  5540  002322  121A               	iorwf	___xxtofl@arg+1,f,c
  5541  002324  5015               	movf	??___xxtofl+2,w,c
  5542  002326  121B               	iorwf	___xxtofl@arg+2,f,c
  5543  002328  5016               	movf	??___xxtofl+3,w,c
  5544  00232A  121C               	iorwf	___xxtofl@arg+3,f,c
  5545  00232C  5017               	movf	___xxtofl@sign,w,c
  5546  00232E  A4D8               	btfss	status,2,c
  5547  002330  AE12               	btfss	___xxtofl@val+3,7,c
  5548  002332  D001               	goto	l3100
  5549  002334  8E1C               	bsf	___xxtofl@arg+3,7,c
  5550  002336                     l3100:
  5551  002336  C019  F00F         	movff	___xxtofl@arg,?___xxtofl
  5552  00233A  C01A  F010         	movff	___xxtofl@arg+1,?___xxtofl+1
  5553  00233E  C01B  F011         	movff	___xxtofl@arg+2,?___xxtofl+2
  5554  002342  C01C  F012         	movff	___xxtofl@arg+3,?___xxtofl+3
  5555  002346  0012               	return	
  5556  002348                     __end_of___xxtofl:
  5557                           	opt stack 0
  5558                           tblptru	equ	0xFF8
  5559                           tblptrh	equ	0xFF7
  5560                           tblptrl	equ	0xFF6
  5561                           tablat	equ	0xFF5
  5562                           prodh	equ	0xFF4
  5563                           prodl	equ	0xFF3
  5564                           postinc0	equ	0xFEE
  5565                           wreg	equ	0xFE8
  5566                           indf2	equ	0xFDF
  5567                           postinc2	equ	0xFDE
  5568                           postdec2	equ	0xFDD
  5569                           fsr2h	equ	0xFDA
  5570                           fsr2l	equ	0xFD9
  5571                           status	equ	0xFD8
  5572                           
  5573 ;; *************** function ___flmul *****************
  5574 ;; Defined at:
  5575 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\sprcmul.c"
  5576 ;; Parameters:    Size  Location     Type
  5577 ;;  b               4   14[COMRAM] unsigned char 
  5578 ;;  a               4   18[COMRAM] unsigned char 
  5579 ;; Auto vars:     Size  Location     Type
  5580 ;;  prod            4   33[COMRAM] struct .
  5581 ;;  grs             4   27[COMRAM] unsigned long 
  5582 ;;  temp            2   37[COMRAM] struct .
  5583 ;;  bexp            1   32[COMRAM] unsigned char 
  5584 ;;  aexp            1   31[COMRAM] unsigned char 
  5585 ;;  sign            1   26[COMRAM] unsigned char 
  5586 ;; Return value:  Size  Location     Type
  5587 ;;                  4   14[COMRAM] unsigned char 
  5588 ;; Registers used:
  5589 ;;		wreg, status,2, status,0, prodl, prodh
  5590 ;; Tracked objects:
  5591 ;;		On entry : 0/0
  5592 ;;		On exit  : 0/0
  5593 ;;		Unchanged: 0/0
  5594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5595 ;;      Params:         8       0       0       0       0       0       0       0       0
  5596 ;;      Locals:        13       0       0       0       0       0       0       0       0
  5597 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5598 ;;      Totals:        25       0       0       0       0       0       0       0       0
  5599 ;;Total ram usage:       25 bytes
  5600 ;; Hardware stack levels used:    1
  5601 ;; This function calls:
  5602 ;;		Nothing
  5603 ;; This function is called by:
  5604 ;;		_read_adc
  5605 ;;		_fround
  5606 ;;		_scale
  5607 ;;		_sprintf
  5608 ;; This function uses a non-reentrant model
  5609 ;;
  5610                           
  5611                           	psect	text20
  5612  0014E4                     __ptext20:
  5613                           	opt stack 0
  5614  0014E4                     ___flmul:
  5615                           	opt stack 27
  5616                           
  5617                           ;incstack = 0
  5618  0014E4  5012               	movf	___flmul@b+3,w,c
  5619  0014E6  0B80               	andlw	128
  5620  0014E8  6E1B               	movwf	___flmul@sign,c
  5621  0014EA  5012               	movf	___flmul@b+3,w,c
  5622  0014EC  2412               	addwf	___flmul@b+3,w,c
  5623  0014EE  6E21               	movwf	___flmul@bexp,c
  5624  0014F0  BE11               	btfsc	___flmul@b+2,7,c
  5625  0014F2  8021               	bsf	___flmul@bexp,0,c
  5626  0014F4  5021               	movf	___flmul@bexp,w,c
  5627  0014F6  B4D8               	btfsc	status,2,c
  5628  0014F8  D00D               	goto	l2536
  5629  0014FA  2821               	incf	___flmul@bexp,w,c
  5630  0014FC  A4D8               	btfss	status,2,c
  5631  0014FE  D008               	goto	l2534
  5632  001500  0E00               	movlw	0
  5633  001502  6E0F               	movwf	___flmul@b,c
  5634  001504  0E00               	movlw	0
  5635  001506  6E10               	movwf	___flmul@b+1,c
  5636  001508  0E00               	movlw	0
  5637  00150A  6E11               	movwf	___flmul@b+2,c
  5638  00150C  0E00               	movlw	0
  5639  00150E  6E12               	movwf	___flmul@b+3,c
  5640  001510                     l2534:
  5641  001510  8E11               	bsf	___flmul@b+2,7,c
  5642  001512  D008               	goto	l2538
  5643  001514                     l2536:
  5644  001514  0E00               	movlw	0
  5645  001516  6E0F               	movwf	___flmul@b,c
  5646  001518  0E00               	movlw	0
  5647  00151A  6E10               	movwf	___flmul@b+1,c
  5648  00151C  0E00               	movlw	0
  5649  00151E  6E11               	movwf	___flmul@b+2,c
  5650  001520  0E00               	movlw	0
  5651  001522  6E12               	movwf	___flmul@b+3,c
  5652  001524                     l2538:
  5653  001524  5016               	movf	___flmul@a+3,w,c
  5654  001526  0B80               	andlw	128
  5655  001528  1A1B               	xorwf	___flmul@sign,f,c
  5656  00152A  5016               	movf	___flmul@a+3,w,c
  5657  00152C  2416               	addwf	___flmul@a+3,w,c
  5658  00152E  6E20               	movwf	___flmul@aexp,c
  5659  001530  BE15               	btfsc	___flmul@a+2,7,c
  5660  001532  8020               	bsf	___flmul@aexp,0,c
  5661  001534  5020               	movf	___flmul@aexp,w,c
  5662  001536  B4D8               	btfsc	status,2,c
  5663  001538  D00D               	goto	l2554
  5664  00153A  2820               	incf	___flmul@aexp,w,c
  5665  00153C  A4D8               	btfss	status,2,c
  5666  00153E  D008               	goto	l2552
  5667  001540  0E00               	movlw	0
  5668  001542  6E13               	movwf	___flmul@a,c
  5669  001544  0E00               	movlw	0
  5670  001546  6E14               	movwf	___flmul@a+1,c
  5671  001548  0E00               	movlw	0
  5672  00154A  6E15               	movwf	___flmul@a+2,c
  5673  00154C  0E00               	movlw	0
  5674  00154E  6E16               	movwf	___flmul@a+3,c
  5675  001550                     l2552:
  5676  001550  8E15               	bsf	___flmul@a+2,7,c
  5677  001552  D008               	goto	l844
  5678  001554                     l2554:
  5679  001554  0E00               	movlw	0
  5680  001556  6E13               	movwf	___flmul@a,c
  5681  001558  0E00               	movlw	0
  5682  00155A  6E14               	movwf	___flmul@a+1,c
  5683  00155C  0E00               	movlw	0
  5684  00155E  6E15               	movwf	___flmul@a+2,c
  5685  001560  0E00               	movlw	0
  5686  001562  6E16               	movwf	___flmul@a+3,c
  5687  001564                     l844:
  5688  001564  5020               	movf	___flmul@aexp,w,c
  5689  001566  B4D8               	btfsc	status,2,c
  5690  001568  D003               	goto	l2558
  5691  00156A  5021               	movf	___flmul@bexp,w,c
  5692  00156C  A4D8               	btfss	status,2,c
  5693  00156E  D009               	goto	l2562
  5694  001570                     l2558:
  5695  001570  0E00               	movlw	0
  5696  001572  6E0F               	movwf	?___flmul,c
  5697  001574  0E00               	movlw	0
  5698  001576  6E10               	movwf	?___flmul+1,c
  5699  001578  0E00               	movlw	0
  5700  00157A  6E11               	movwf	?___flmul+2,c
  5701  00157C  0E00               	movlw	0
  5702  00157E  6E12               	movwf	?___flmul+3,c
  5703  001580  0012               	return	
  5704  001582                     l2562:
  5705  001582  5015               	movf	___flmul@a+2,w,c
  5706  001584  020F               	mulwf	___flmul@b,c
  5707  001586  CFF3 F026          	movff	prodl,___flmul@temp
  5708  00158A  CFF4 F027          	movff	prodh,___flmul@temp+1
  5709  00158E  5026               	movf	___flmul@temp,w,c
  5710  001590  6E1C               	movwf	___flmul@grs,c
  5711  001592  6A1D               	clrf	___flmul@grs+1,c
  5712  001594  6A1E               	clrf	___flmul@grs+2,c
  5713  001596  6A1F               	clrf	___flmul@grs+3,c
  5714  001598  5027               	movf	___flmul@temp+1,w,c
  5715  00159A  6E22               	movwf	___flmul@prod,c
  5716  00159C  6A23               	clrf	___flmul@prod+1,c
  5717  00159E  6A24               	clrf	___flmul@prod+2,c
  5718  0015A0  6A25               	clrf	___flmul@prod+3,c
  5719  0015A2  5014               	movf	___flmul@a+1,w,c
  5720  0015A4  0210               	mulwf	___flmul@b+1,c
  5721  0015A6  CFF3 F026          	movff	prodl,___flmul@temp
  5722  0015AA  CFF4 F027          	movff	prodh,___flmul@temp+1
  5723  0015AE  5026               	movf	___flmul@temp,w,c
  5724  0015B0  261C               	addwf	___flmul@grs,f,c
  5725  0015B2  0E00               	movlw	0
  5726  0015B4  221D               	addwfc	___flmul@grs+1,f,c
  5727  0015B6  221E               	addwfc	___flmul@grs+2,f,c
  5728  0015B8  221F               	addwfc	___flmul@grs+3,f,c
  5729  0015BA  5027               	movf	___flmul@temp+1,w,c
  5730  0015BC  2622               	addwf	___flmul@prod,f,c
  5731  0015BE  0E00               	movlw	0
  5732  0015C0  2223               	addwfc	___flmul@prod+1,f,c
  5733  0015C2  2224               	addwfc	___flmul@prod+2,f,c
  5734  0015C4  2225               	addwfc	___flmul@prod+3,f,c
  5735  0015C6  5013               	movf	___flmul@a,w,c
  5736  0015C8  0211               	mulwf	___flmul@b+2,c
  5737  0015CA  CFF3 F026          	movff	prodl,___flmul@temp
  5738  0015CE  CFF4 F027          	movff	prodh,___flmul@temp+1
  5739  0015D2  5026               	movf	___flmul@temp,w,c
  5740  0015D4  261C               	addwf	___flmul@grs,f,c
  5741  0015D6  0E00               	movlw	0
  5742  0015D8  221D               	addwfc	___flmul@grs+1,f,c
  5743  0015DA  221E               	addwfc	___flmul@grs+2,f,c
  5744  0015DC  221F               	addwfc	___flmul@grs+3,f,c
  5745  0015DE  5027               	movf	___flmul@temp+1,w,c
  5746  0015E0  2622               	addwf	___flmul@prod,f,c
  5747  0015E2  0E00               	movlw	0
  5748  0015E4  2223               	addwfc	___flmul@prod+1,f,c
  5749  0015E6  2224               	addwfc	___flmul@prod+2,f,c
  5750  0015E8  2225               	addwfc	___flmul@prod+3,f,c
  5751  0015EA  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5752  0015EE  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5753  0015F2  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5754  0015F6  6A1C               	clrf	___flmul@grs,c
  5755  0015F8  5013               	movf	___flmul@a,w,c
  5756  0015FA  0210               	mulwf	___flmul@b+1,c
  5757  0015FC  CFF3 F026          	movff	prodl,___flmul@temp
  5758  001600  CFF4 F027          	movff	prodh,___flmul@temp+1
  5759  001604  5026               	movf	___flmul@temp,w,c
  5760  001606  261C               	addwf	___flmul@grs,f,c
  5761  001608  5027               	movf	___flmul@temp+1,w,c
  5762  00160A  221D               	addwfc	___flmul@grs+1,f,c
  5763  00160C  0E00               	movlw	0
  5764  00160E  221E               	addwfc	___flmul@grs+2,f,c
  5765  001610  0E00               	movlw	0
  5766  001612  221F               	addwfc	___flmul@grs+3,f,c
  5767  001614  5014               	movf	___flmul@a+1,w,c
  5768  001616  020F               	mulwf	___flmul@b,c
  5769  001618  CFF3 F026          	movff	prodl,___flmul@temp
  5770  00161C  CFF4 F027          	movff	prodh,___flmul@temp+1
  5771  001620  5026               	movf	___flmul@temp,w,c
  5772  001622  261C               	addwf	___flmul@grs,f,c
  5773  001624  5027               	movf	___flmul@temp+1,w,c
  5774  001626  221D               	addwfc	___flmul@grs+1,f,c
  5775  001628  0E00               	movlw	0
  5776  00162A  221E               	addwfc	___flmul@grs+2,f,c
  5777  00162C  0E00               	movlw	0
  5778  00162E  221F               	addwfc	___flmul@grs+3,f,c
  5779  001630  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5780  001634  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5781  001638  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5782  00163C  6A1C               	clrf	___flmul@grs,c
  5783  00163E  5013               	movf	___flmul@a,w,c
  5784  001640  020F               	mulwf	___flmul@b,c
  5785  001642  CFF3 F026          	movff	prodl,___flmul@temp
  5786  001646  CFF4 F027          	movff	prodh,___flmul@temp+1
  5787  00164A  5026               	movf	___flmul@temp,w,c
  5788  00164C  261C               	addwf	___flmul@grs,f,c
  5789  00164E  5027               	movf	___flmul@temp+1,w,c
  5790  001650  221D               	addwfc	___flmul@grs+1,f,c
  5791  001652  0E00               	movlw	0
  5792  001654  221E               	addwfc	___flmul@grs+2,f,c
  5793  001656  0E00               	movlw	0
  5794  001658  221F               	addwfc	___flmul@grs+3,f,c
  5795  00165A  5015               	movf	___flmul@a+2,w,c
  5796  00165C  0210               	mulwf	___flmul@b+1,c
  5797  00165E  CFF3 F026          	movff	prodl,___flmul@temp
  5798  001662  CFF4 F027          	movff	prodh,___flmul@temp+1
  5799  001666  5026               	movf	___flmul@temp,w,c
  5800  001668  2622               	addwf	___flmul@prod,f,c
  5801  00166A  5027               	movf	___flmul@temp+1,w,c
  5802  00166C  2223               	addwfc	___flmul@prod+1,f,c
  5803  00166E  0E00               	movlw	0
  5804  001670  2224               	addwfc	___flmul@prod+2,f,c
  5805  001672  0E00               	movlw	0
  5806  001674  2225               	addwfc	___flmul@prod+3,f,c
  5807  001676  5014               	movf	___flmul@a+1,w,c
  5808  001678  0211               	mulwf	___flmul@b+2,c
  5809  00167A  CFF3 F026          	movff	prodl,___flmul@temp
  5810  00167E  CFF4 F027          	movff	prodh,___flmul@temp+1
  5811  001682  5026               	movf	___flmul@temp,w,c
  5812  001684  2622               	addwf	___flmul@prod,f,c
  5813  001686  5027               	movf	___flmul@temp+1,w,c
  5814  001688  2223               	addwfc	___flmul@prod+1,f,c
  5815  00168A  0E00               	movlw	0
  5816  00168C  2224               	addwfc	___flmul@prod+2,f,c
  5817  00168E  0E00               	movlw	0
  5818  001690  2225               	addwfc	___flmul@prod+3,f,c
  5819  001692  5015               	movf	___flmul@a+2,w,c
  5820  001694  0211               	mulwf	___flmul@b+2,c
  5821  001696  CFF3 F026          	movff	prodl,___flmul@temp
  5822  00169A  CFF4 F027          	movff	prodh,___flmul@temp+1
  5823  00169E  5026               	movf	___flmul@temp,w,c
  5824  0016A0  6E17               	movwf	??___flmul& (0+255),c
  5825  0016A2  5027               	movf	___flmul@temp+1,w,c
  5826  0016A4  6E18               	movwf	(??___flmul+1)& (0+255),c
  5827  0016A6  6A19               	clrf	(??___flmul+2)& (0+255),c
  5828  0016A8  6A1A               	clrf	(??___flmul+3)& (0+255),c
  5829  0016AA  C019  F01A         	movff	??___flmul+2,??___flmul+3
  5830  0016AE  C018  F019         	movff	??___flmul+1,??___flmul+2
  5831  0016B2  C017  F018         	movff	??___flmul,??___flmul+1
  5832  0016B6  6A17               	clrf	??___flmul,c
  5833  0016B8  5017               	movf	??___flmul,w,c
  5834  0016BA  2622               	addwf	___flmul@prod,f,c
  5835  0016BC  5018               	movf	??___flmul+1,w,c
  5836  0016BE  2223               	addwfc	___flmul@prod+1,f,c
  5837  0016C0  5019               	movf	??___flmul+2,w,c
  5838  0016C2  2224               	addwfc	___flmul@prod+2,f,c
  5839  0016C4  501A               	movf	??___flmul+3,w,c
  5840  0016C6  2225               	addwfc	___flmul@prod+3,f,c
  5841  0016C8  C01C  F017         	movff	___flmul@grs,??___flmul
  5842  0016CC  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  5843  0016D0  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  5844  0016D4  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  5845  0016D8  0E19               	movlw	25
  5846  0016DA  D005               	goto	u2530
  5847  0016DC                     u2535:
  5848  0016DC  90D8               	bcf	status,0,c
  5849  0016DE  321A               	rrcf	??___flmul+3,f,c
  5850  0016E0  3219               	rrcf	??___flmul+2,f,c
  5851  0016E2  3218               	rrcf	??___flmul+1,f,c
  5852  0016E4  3217               	rrcf	??___flmul,f,c
  5853  0016E6                     u2530:
  5854  0016E6  2EE8               	decfsz	wreg,f,c
  5855  0016E8  D7F9               	goto	u2535
  5856  0016EA  5017               	movf	??___flmul,w,c
  5857  0016EC  2622               	addwf	___flmul@prod,f,c
  5858  0016EE  5018               	movf	??___flmul+1,w,c
  5859  0016F0  2223               	addwfc	___flmul@prod+1,f,c
  5860  0016F2  5019               	movf	??___flmul+2,w,c
  5861  0016F4  2224               	addwfc	___flmul@prod+2,f,c
  5862  0016F6  501A               	movf	??___flmul+3,w,c
  5863  0016F8  2225               	addwfc	___flmul@prod+3,f,c
  5864  0016FA  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5865  0016FE  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5866  001702  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5867  001706  6A1C               	clrf	___flmul@grs,c
  5868  001708  5020               	movf	___flmul@aexp,w,c
  5869  00170A  C021  F017         	movff	___flmul@bexp,??___flmul
  5870  00170E  6A18               	clrf	(??___flmul+1)& (0+255),c
  5871  001710  2617               	addwf	??___flmul,f,c
  5872  001712  0E00               	movlw	0
  5873  001714  2218               	addwfc	??___flmul+1,f,c
  5874  001716  0E82               	movlw	130
  5875  001718  2417               	addwf	??___flmul,w,c
  5876  00171A  6E26               	movwf	___flmul@temp,c
  5877  00171C  0EFF               	movlw	255
  5878  00171E  2018               	addwfc	??___flmul+1,w,c
  5879  001720  6E27               	movwf	___flmul@temp+1,c
  5880  001722  D00F               	goto	l2610
  5881  001724                     l2604:
  5882  001724  90D8               	bcf	status,0,c
  5883  001726  3622               	rlcf	___flmul@prod,f,c
  5884  001728  3623               	rlcf	___flmul@prod+1,f,c
  5885  00172A  3624               	rlcf	___flmul@prod+2,f,c
  5886  00172C  3625               	rlcf	___flmul@prod+3,f,c
  5887  00172E  BE1F               	btfsc	___flmul@grs+3,7,c
  5888  001730  8022               	bsf	___flmul@prod,0,c
  5889  001732  90D8               	bcf	status,0,c
  5890  001734  361C               	rlcf	___flmul@grs,f,c
  5891  001736  361D               	rlcf	___flmul@grs+1,f,c
  5892  001738  361E               	rlcf	___flmul@grs+2,f,c
  5893  00173A  361F               	rlcf	___flmul@grs+3,f,c
  5894  00173C  0626               	decf	___flmul@temp,f,c
  5895  00173E  A0D8               	btfss	status,0,c
  5896  001740  0627               	decf	___flmul@temp+1,f,c
  5897  001742                     l2610:
  5898  001742  AE24               	btfss	___flmul@prod+2,7,c
  5899  001744  D7EF               	goto	l2604
  5900  001746  0E00               	movlw	0
  5901  001748  6E20               	movwf	___flmul@aexp,c
  5902  00174A  AE1F               	btfss	___flmul@grs+3,7,c
  5903  00174C  D016               	goto	l853
  5904  00174E  0EFF               	movlw	255
  5905  001750  141C               	andwf	___flmul@grs,w,c
  5906  001752  6E17               	movwf	??___flmul& (0+255),c
  5907  001754  0EFF               	movlw	255
  5908  001756  141D               	andwf	___flmul@grs+1,w,c
  5909  001758  6E18               	movwf	(??___flmul+1)& (0+255),c
  5910  00175A  0EFF               	movlw	255
  5911  00175C  141E               	andwf	___flmul@grs+2,w,c
  5912  00175E  6E19               	movwf	(??___flmul+2)& (0+255),c
  5913  001760  0E7F               	movlw	127
  5914  001762  141F               	andwf	___flmul@grs+3,w,c
  5915  001764  6E1A               	movwf	(??___flmul+3)& (0+255),c
  5916  001766  5017               	movf	??___flmul,w,c
  5917  001768  1018               	iorwf	??___flmul+1,w,c
  5918  00176A  1019               	iorwf	??___flmul+2,w,c
  5919  00176C  101A               	iorwf	??___flmul+3,w,c
  5920  00176E  A4D8               	btfss	status,2,c
  5921  001770  D002               	goto	l2620
  5922  001772  A022               	btfss	___flmul@prod,0,c
  5923  001774  D002               	goto	l853
  5924  001776                     l2620:
  5925  001776  0E01               	movlw	1
  5926  001778  6E20               	movwf	___flmul@aexp,c
  5927  00177A                     l853:
  5928  00177A  5020               	movf	___flmul@aexp,w,c
  5929  00177C  B4D8               	btfsc	status,2,c
  5930  00177E  D01F               	goto	l2630
  5931  001780  0E01               	movlw	1
  5932  001782  2622               	addwf	___flmul@prod,f,c
  5933  001784  0E00               	movlw	0
  5934  001786  2223               	addwfc	___flmul@prod+1,f,c
  5935  001788  2224               	addwfc	___flmul@prod+2,f,c
  5936  00178A  2225               	addwfc	___flmul@prod+3,f,c
  5937  00178C  A025               	btfss	___flmul@prod+3,0,c
  5938  00178E  D017               	goto	l2630
  5939  001790  C022  F017         	movff	___flmul@prod,??___flmul
  5940  001794  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  5941  001798  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  5942  00179C  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  5943  0017A0  341A               	rlcf	??___flmul+3,w,c
  5944  0017A2  321A               	rrcf	??___flmul+3,f,c
  5945  0017A4  3219               	rrcf	??___flmul+2,f,c
  5946  0017A6  3218               	rrcf	??___flmul+1,f,c
  5947  0017A8  3217               	rrcf	??___flmul,f,c
  5948  0017AA  C017  F022         	movff	??___flmul,___flmul@prod
  5949  0017AE  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  5950  0017B2  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  5951  0017B6  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  5952  0017BA  4A26               	infsnz	___flmul@temp,f,c
  5953  0017BC  2A27               	incf	___flmul@temp+1,f,c
  5954  0017BE                     l2630:
  5955  0017BE  BE27               	btfsc	___flmul@temp+1,7,c
  5956  0017C0  D00D               	goto	l2634
  5957  0017C2  5027               	movf	___flmul@temp+1,w,c
  5958  0017C4  E103               	bnz	u2610
  5959  0017C6  2826               	incf	___flmul@temp,w,c
  5960  0017C8  A0D8               	btfss	status,0,c
  5961  0017CA  D008               	goto	l2634
  5962  0017CC                     u2610:
  5963  0017CC  0E00               	movlw	0
  5964  0017CE  6E22               	movwf	___flmul@prod,c
  5965  0017D0  0E00               	movlw	0
  5966  0017D2  6E23               	movwf	___flmul@prod+1,c
  5967  0017D4  0E80               	movlw	128
  5968  0017D6  6E24               	movwf	___flmul@prod+2,c
  5969  0017D8  0E7F               	movlw	127
  5970  0017DA  D020               	goto	L9
  5971  0017DC                     l2634:
  5972  0017DC  BE27               	btfsc	___flmul@temp+1,7,c
  5973  0017DE  D005               	goto	l2636
  5974  0017E0  5027               	movf	___flmul@temp+1,w,c
  5975  0017E2  E10E               	bnz	l861
  5976  0017E4  0426               	decf	___flmul@temp,w,c
  5977  0017E6  B0D8               	btfsc	status,0,c
  5978  0017E8  D00B               	goto	l861
  5979  0017EA                     l2636:
  5980  0017EA  0E00               	movlw	0
  5981  0017EC  6E22               	movwf	___flmul@prod,c
  5982  0017EE  0E00               	movlw	0
  5983  0017F0  6E23               	movwf	___flmul@prod+1,c
  5984  0017F2  0E00               	movlw	0
  5985  0017F4  6E24               	movwf	___flmul@prod+2,c
  5986  0017F6  0E00               	movlw	0
  5987  0017F8  6E25               	movwf	___flmul@prod+3,c
  5988  0017FA  0E00               	movlw	0
  5989  0017FC  6E1B               	movwf	___flmul@sign,c
  5990  0017FE  D00F               	goto	l2646
  5991  001800                     l861:
  5992  001800  C026  F021         	movff	___flmul@temp,___flmul@bexp
  5993  001804  0EFF               	movlw	255
  5994  001806  1622               	andwf	___flmul@prod,f,c
  5995  001808  0EFF               	movlw	255
  5996  00180A  1623               	andwf	___flmul@prod+1,f,c
  5997  00180C  0E7F               	movlw	127
  5998  00180E  1624               	andwf	___flmul@prod+2,f,c
  5999  001810  0E00               	movlw	0
  6000  001812  1625               	andwf	___flmul@prod+3,f,c
  6001  001814  B021               	btfsc	___flmul@bexp,0,c
  6002  001816  8E24               	bsf	___flmul@prod+2,7,c
  6003  001818  90D8               	bcf	status,0,c
  6004  00181A  3021               	rrcf	___flmul@bexp,w,c
  6005  00181C                     L9:
  6006  00181C  6E25               	movwf	___flmul@prod+3,c
  6007  00181E                     l2646:
  6008  00181E  501B               	movf	___flmul@sign,w,c
  6009  001820  1225               	iorwf	___flmul@prod+3,f,c
  6010  001822  C022  F00F         	movff	___flmul@prod,?___flmul
  6011  001826  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  6012  00182A  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  6013  00182E  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  6014  001832  0012               	return	
  6015  001834                     __end_of___flmul:
  6016                           	opt stack 0
  6017                           tblptru	equ	0xFF8
  6018                           tblptrh	equ	0xFF7
  6019                           tblptrl	equ	0xFF6
  6020                           tablat	equ	0xFF5
  6021                           prodh	equ	0xFF4
  6022                           prodl	equ	0xFF3
  6023                           postinc0	equ	0xFEE
  6024                           wreg	equ	0xFE8
  6025                           indf2	equ	0xFDF
  6026                           postinc2	equ	0xFDE
  6027                           postdec2	equ	0xFDD
  6028                           fsr2h	equ	0xFDA
  6029                           fsr2l	equ	0xFD9
  6030                           status	equ	0xFD8
  6031                           
  6032 ;; *************** function ___awdiv *****************
  6033 ;; Defined at:
  6034 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\awdiv.c"
  6035 ;; Parameters:    Size  Location     Type
  6036 ;;  dividend        2    6[COMRAM] int 
  6037 ;;  divisor         2    8[COMRAM] int 
  6038 ;; Auto vars:     Size  Location     Type
  6039 ;;  quotient        2   12[COMRAM] int 
  6040 ;;  sign            1   11[COMRAM] unsigned char 
  6041 ;;  counter         1   10[COMRAM] unsigned char 
  6042 ;; Return value:  Size  Location     Type
  6043 ;;                  2    6[COMRAM] int 
  6044 ;; Registers used:
  6045 ;;		wreg, status,2, status,0
  6046 ;; Tracked objects:
  6047 ;;		On entry : 0/0
  6048 ;;		On exit  : 0/0
  6049 ;;		Unchanged: 0/0
  6050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6051 ;;      Params:         4       0       0       0       0       0       0       0       0
  6052 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6053 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6054 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6055 ;;Total ram usage:        8 bytes
  6056 ;; Hardware stack levels used:    1
  6057 ;; This function calls:
  6058 ;;		Nothing
  6059 ;; This function is called by:
  6060 ;;		_read_adc
  6061 ;;		_fround
  6062 ;;		_scale
  6063 ;;		_sprintf
  6064 ;; This function uses a non-reentrant model
  6065 ;;
  6066                           
  6067                           	psect	text21
  6068  002970                     __ptext21:
  6069                           	opt stack 0
  6070  002970                     ___awdiv:
  6071                           	opt stack 27
  6072                           
  6073                           ;incstack = 0
  6074  002970  0E00               	movlw	0
  6075  002972  6E0C               	movwf	___awdiv@sign,c
  6076  002974  AE0A               	btfss	___awdiv@divisor+1,7,c
  6077  002976  D006               	goto	l2660
  6078  002978  6C09               	negf	___awdiv@divisor,c
  6079  00297A  1E0A               	comf	___awdiv@divisor+1,f,c
  6080  00297C  B0D8               	btfsc	status,0,c
  6081  00297E  2A0A               	incf	___awdiv@divisor+1,f,c
  6082  002980  0E01               	movlw	1
  6083  002982  6E0C               	movwf	___awdiv@sign,c
  6084  002984                     l2660:
  6085  002984  AE08               	btfss	___awdiv@dividend+1,7,c
  6086  002986  D006               	goto	l2666
  6087  002988  6C07               	negf	___awdiv@dividend,c
  6088  00298A  1E08               	comf	___awdiv@dividend+1,f,c
  6089  00298C  B0D8               	btfsc	status,0,c
  6090  00298E  2A08               	incf	___awdiv@dividend+1,f,c
  6091  002990  0E01               	movlw	1
  6092  002992  1A0C               	xorwf	___awdiv@sign,f,c
  6093  002994                     l2666:
  6094  002994  0E00               	movlw	0
  6095  002996  6E0E               	movwf	___awdiv@quotient+1,c
  6096  002998  0E00               	movlw	0
  6097  00299A  6E0D               	movwf	___awdiv@quotient,c
  6098  00299C  5009               	movf	___awdiv@divisor,w,c
  6099  00299E  100A               	iorwf	___awdiv@divisor+1,w,c
  6100  0029A0  B4D8               	btfsc	status,2,c
  6101  0029A2  D01C               	goto	l2688
  6102  0029A4  0E01               	movlw	1
  6103  0029A6  6E0B               	movwf	___awdiv@counter,c
  6104  0029A8  D004               	goto	l2674
  6105  0029AA                     l2672:
  6106  0029AA  90D8               	bcf	status,0,c
  6107  0029AC  3609               	rlcf	___awdiv@divisor,f,c
  6108  0029AE  360A               	rlcf	___awdiv@divisor+1,f,c
  6109  0029B0  2A0B               	incf	___awdiv@counter,f,c
  6110  0029B2                     l2674:
  6111  0029B2  AE0A               	btfss	___awdiv@divisor+1,7,c
  6112  0029B4  D7FA               	goto	l2672
  6113  0029B6                     l2676:
  6114  0029B6  90D8               	bcf	status,0,c
  6115  0029B8  360D               	rlcf	___awdiv@quotient,f,c
  6116  0029BA  360E               	rlcf	___awdiv@quotient+1,f,c
  6117  0029BC  5009               	movf	___awdiv@divisor,w,c
  6118  0029BE  5C07               	subwf	___awdiv@dividend,w,c
  6119  0029C0  500A               	movf	___awdiv@divisor+1,w,c
  6120  0029C2  5808               	subwfb	___awdiv@dividend+1,w,c
  6121  0029C4  A0D8               	btfss	status,0,c
  6122  0029C6  D005               	goto	l2684
  6123  0029C8  5009               	movf	___awdiv@divisor,w,c
  6124  0029CA  5E07               	subwf	___awdiv@dividend,f,c
  6125  0029CC  500A               	movf	___awdiv@divisor+1,w,c
  6126  0029CE  5A08               	subwfb	___awdiv@dividend+1,f,c
  6127  0029D0  800D               	bsf	___awdiv@quotient,0,c
  6128  0029D2                     l2684:
  6129  0029D2  90D8               	bcf	status,0,c
  6130  0029D4  320A               	rrcf	___awdiv@divisor+1,f,c
  6131  0029D6  3209               	rrcf	___awdiv@divisor,f,c
  6132  0029D8  2E0B               	decfsz	___awdiv@counter,f,c
  6133  0029DA  D7ED               	goto	l2676
  6134  0029DC                     l2688:
  6135  0029DC  500C               	movf	___awdiv@sign,w,c
  6136  0029DE  B4D8               	btfsc	status,2,c
  6137  0029E0  D004               	goto	l2692
  6138  0029E2  6C0D               	negf	___awdiv@quotient,c
  6139  0029E4  1E0E               	comf	___awdiv@quotient+1,f,c
  6140  0029E6  B0D8               	btfsc	status,0,c
  6141  0029E8  2A0E               	incf	___awdiv@quotient+1,f,c
  6142  0029EA                     l2692:
  6143  0029EA  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  6144  0029EE  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  6145  0029F2  0012               	return	
  6146  0029F4                     __end_of___awdiv:
  6147                           	opt stack 0
  6148                           tblptru	equ	0xFF8
  6149                           tblptrh	equ	0xFF7
  6150                           tblptrl	equ	0xFF6
  6151                           tablat	equ	0xFF5
  6152                           prodh	equ	0xFF4
  6153                           prodl	equ	0xFF3
  6154                           postinc0	equ	0xFEE
  6155                           wreg	equ	0xFE8
  6156                           indf2	equ	0xFDF
  6157                           postinc2	equ	0xFDE
  6158                           postdec2	equ	0xFDD
  6159                           fsr2h	equ	0xFDA
  6160                           fsr2l	equ	0xFD9
  6161                           status	equ	0xFD8
  6162                           
  6163 ;; *************** function _inizializzazione *****************
  6164 ;; Defined at:
  6165 ;;		line 76 in file "tester.c"
  6166 ;; Parameters:    Size  Location     Type
  6167 ;;		None
  6168 ;; Auto vars:     Size  Location     Type
  6169 ;;		None
  6170 ;; Return value:  Size  Location     Type
  6171 ;;                  1    wreg      void 
  6172 ;; Registers used:
  6173 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6174 ;; Tracked objects:
  6175 ;;		On entry : 0/0
  6176 ;;		On exit  : 0/0
  6177 ;;		Unchanged: 0/0
  6178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6179 ;;      Params:         0       0       0       0       0       0       0       0       0
  6180 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6181 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6182 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6183 ;;Total ram usage:        0 bytes
  6184 ;; Hardware stack levels used:    1
  6185 ;; Hardware stack levels required when called:    6
  6186 ;; This function calls:
  6187 ;;		_LCD_clear
  6188 ;;		_LCD_initialize
  6189 ;;		_LCD_write_message
  6190 ;;		_delay_ms
  6191 ;; This function is called by:
  6192 ;;		_main
  6193 ;; This function uses a non-reentrant model
  6194 ;;
  6195                           
  6196                           	psect	text22
  6197  002C14                     __ptext22:
  6198                           	opt stack 0
  6199  002C14                     _inizializzazione:
  6200                           	opt stack 24
  6201                           
  6202                           ;tester.c: 77: LATA = 0x00;
  6203                           
  6204                           ;incstack = 0
  6205  002C14  0E00               	movlw	0
  6206  002C16  6E89               	movwf	3977,c	;volatile
  6207                           
  6208                           ;tester.c: 78: TRISA = 0b11111011;
  6209  002C18  0EFB               	movlw	251
  6210  002C1A  6E92               	movwf	3986,c	;volatile
  6211                           
  6212                           ;tester.c: 80: LATB = 0x00;
  6213  002C1C  0E00               	movlw	0
  6214  002C1E  6E8A               	movwf	3978,c	;volatile
  6215                           
  6216                           ;tester.c: 81: TRISB = 0b00;
  6217  002C20  0E00               	movlw	0
  6218  002C22  6E93               	movwf	3987,c	;volatile
  6219                           
  6220                           ;tester.c: 83: LATC = 0x00;
  6221  002C24  0E00               	movlw	0
  6222  002C26  6E8B               	movwf	3979,c	;volatile
  6223                           
  6224                           ;tester.c: 84: TRISC = 0b11011111;
  6225  002C28  0EDF               	movlw	223
  6226  002C2A  6E94               	movwf	3988,c	;volatile
  6227                           
  6228                           ;tester.c: 86: LCD_initialize(16);
  6229  002C2C  0E10               	movlw	16
  6230  002C2E  EC61  F013         	call	_LCD_initialize
  6231                           
  6232                           ;tester.c: 87: LCD_write_message("inizializzazione");
  6233  002C32  0EA2               	movlw	low STR_3
  6234  002C34  6E12               	movwf	LCD_write_message@buffer,c
  6235  002C36  0E08               	movlw	high STR_3
  6236  002C38  6E13               	movwf	LCD_write_message@buffer+1,c
  6237  002C3A  ECE3  F016         	call	_LCD_write_message	;wreg free
  6238                           
  6239                           ;tester.c: 88: delay_ms(1000);
  6240  002C3E  0E03               	movlw	3
  6241  002C40  6E08               	movwf	delay_ms@value_ms+1,c
  6242  002C42  0EE8               	movlw	232
  6243  002C44  6E07               	movwf	delay_ms@value_ms,c
  6244  002C46  EC9B  F016         	call	_delay_ms	;wreg free
  6245                           
  6246                           ;tester.c: 89: LCD_clear();
  6247  002C4A  EC0C  F017         	call	_LCD_clear	;wreg free
  6248                           
  6249                           ;tester.c: 91: ADCON0 = 0b00000000;
  6250  002C4E  0E00               	movlw	0
  6251  002C50  6EC2               	movwf	4034,c	;volatile
  6252                           
  6253                           ;tester.c: 92: ADCON1 = 0b00001011;
  6254  002C52  0E0B               	movlw	11
  6255  002C54  6EC1               	movwf	4033,c	;volatile
  6256                           
  6257                           ;tester.c: 93: ADCON2 = 0b10110010;
  6258  002C56  0EB2               	movlw	178
  6259  002C58  6EC0               	movwf	4032,c	;volatile
  6260                           
  6261                           ;tester.c: 94: ADCON0bits.CHS3 = 0;
  6262  002C5A  9AC2               	bcf	4034,5,c	;volatile
  6263                           
  6264                           ;tester.c: 95: ADCON0bits.CHS2 = 0;
  6265  002C5C  98C2               	bcf	4034,4,c	;volatile
  6266                           
  6267                           ;tester.c: 96: ADCON0bits.CHS1 = 0;
  6268  002C5E  96C2               	bcf	4034,3,c	;volatile
  6269  002C60  0012               	return		;funcret
  6270  002C62                     __end_of_inizializzazione:
  6271                           	opt stack 0
  6272                           tblptru	equ	0xFF8
  6273                           tblptrh	equ	0xFF7
  6274                           tblptrl	equ	0xFF6
  6275                           tablat	equ	0xFF5
  6276                           prodh	equ	0xFF4
  6277                           prodl	equ	0xFF3
  6278                           postinc0	equ	0xFEE
  6279                           wreg	equ	0xFE8
  6280                           indf2	equ	0xFDF
  6281                           postinc2	equ	0xFDE
  6282                           postdec2	equ	0xFDD
  6283                           fsr2h	equ	0xFDA
  6284                           fsr2l	equ	0xFD9
  6285                           status	equ	0xFD8
  6286                           
  6287 ;; *************** function _LCD_write_message *****************
  6288 ;; Defined at:
  6289 ;;		line 178 in file "../../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  6290 ;; Parameters:    Size  Location     Type
  6291 ;;  buffer          2   17[COMRAM] PTR const unsigned char 
  6292 ;;		 -> STR_3(17), STR_1(17), 
  6293 ;; Auto vars:     Size  Location     Type
  6294 ;;		None
  6295 ;; Return value:  Size  Location     Type
  6296 ;;                  1    wreg      void 
  6297 ;; Registers used:
  6298 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6299 ;; Tracked objects:
  6300 ;;		On entry : 0/0
  6301 ;;		On exit  : 0/0
  6302 ;;		Unchanged: 0/0
  6303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6304 ;;      Params:         2       0       0       0       0       0       0       0       0
  6305 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6306 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6307 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6308 ;;Total ram usage:        2 bytes
  6309 ;; Hardware stack levels used:    1
  6310 ;; Hardware stack levels required when called:    5
  6311 ;; This function calls:
  6312 ;;		_LCD_write_char
  6313 ;; This function is called by:
  6314 ;;		_ricarica
  6315 ;;		_inizializzazione
  6316 ;; This function uses a non-reentrant model
  6317 ;;
  6318                           
  6319                           	psect	text23
  6320  002DC6                     __ptext23:
  6321                           	opt stack 0
  6322  002DC6                     _LCD_write_message:
  6323                           	opt stack 24
  6324                           
  6325                           ;src\LCD_44780.c: 181: while(*buffer) {
  6326                           
  6327                           ;incstack = 0
  6328  002DC6  D00A               	goto	l3122
  6329  002DC8                     l3118:
  6330                           
  6331                           ;src\LCD_44780.c: 184: LCD_write_char(*buffer);
  6332  002DC8  C012  FFF6         	movff	LCD_write_message@buffer,tblptrl
  6333  002DCC  C013  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
  6334  002DD0                     	if	0	;tblptru may be non-zero
  6335  002DD0                     	endif
  6336  002DD0                     	if	0	;tblptru may be non-zero
  6337  002DD0                     	endif
  6338  002DD0  0008               	tblrd		*
  6339  002DD2  50F5               	movf	tablat,w,c
  6340  002DD4  EC73  F015         	call	_LCD_write_char
  6341                           
  6342                           ;src\LCD_44780.c: 186: buffer++;
  6343  002DD8  4A12               	infsnz	LCD_write_message@buffer,f,c
  6344  002DDA  2A13               	incf	LCD_write_message@buffer+1,f,c
  6345  002DDC                     l3122:
  6346  002DDC  C012  FFF6         	movff	LCD_write_message@buffer,tblptrl
  6347  002DE0  C013  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
  6348  002DE4                     	if	0	;tblptru may be non-zero
  6349  002DE4                     	endif
  6350  002DE4                     	if	0	;tblptru may be non-zero
  6351  002DE4                     	endif
  6352  002DE4  0008               	tblrd		*
  6353  002DE6  50F5               	movf	tablat,w,c
  6354  002DE8  0900               	iorlw	0
  6355  002DEA  B4D8               	btfsc	status,2,c
  6356  002DEC  0012               	return	
  6357  002DEE  D7EC               	goto	l3118
  6358  002DF0                     __end_of_LCD_write_message:
  6359                           	opt stack 0
  6360                           tblptru	equ	0xFF8
  6361                           tblptrh	equ	0xFF7
  6362                           tblptrl	equ	0xFF6
  6363                           tablat	equ	0xFF5
  6364                           prodh	equ	0xFF4
  6365                           prodl	equ	0xFF3
  6366                           postinc0	equ	0xFEE
  6367                           wreg	equ	0xFE8
  6368                           indf2	equ	0xFDF
  6369                           postinc2	equ	0xFDE
  6370                           postdec2	equ	0xFDD
  6371                           fsr2h	equ	0xFDA
  6372                           fsr2l	equ	0xFD9
  6373                           status	equ	0xFD8
  6374                           
  6375 ;; *************** function _LCD_write_char *****************
  6376 ;; Defined at:
  6377 ;;		line 145 in file "../../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  6378 ;; Parameters:    Size  Location     Type
  6379 ;;  value           1    wreg     unsigned char 
  6380 ;; Auto vars:     Size  Location     Type
  6381 ;;  value           1   16[COMRAM] unsigned char 
  6382 ;;  D0              1   15[COMRAM] unsigned char 
  6383 ;;  D1              1   14[COMRAM] unsigned char 
  6384 ;;  D2              1   13[COMRAM] unsigned char 
  6385 ;;  D3              1   12[COMRAM] unsigned char 
  6386 ;; Return value:  Size  Location     Type
  6387 ;;                  1    wreg      void 
  6388 ;; Registers used:
  6389 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6390 ;; Tracked objects:
  6391 ;;		On entry : 0/0
  6392 ;;		On exit  : 0/0
  6393 ;;		Unchanged: 0/0
  6394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6395 ;;      Params:         0       0       0       0       0       0       0       0       0
  6396 ;;      Locals:         5       0       0       0       0       0       0       0       0
  6397 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6398 ;;      Totals:         5       0       0       0       0       0       0       0       0
  6399 ;;Total ram usage:        5 bytes
  6400 ;; Hardware stack levels used:    1
  6401 ;; Hardware stack levels required when called:    4
  6402 ;; This function calls:
  6403 ;;		_LCD_send_command
  6404 ;; This function is called by:
  6405 ;;		_LCD_write_message
  6406 ;;		_LCD_write_string
  6407 ;; This function uses a non-reentrant model
  6408 ;;
  6409                           
  6410                           	psect	text24
  6411  002AE6                     __ptext24:
  6412                           	opt stack 0
  6413  002AE6                     _LCD_write_char:
  6414                           	opt stack 24
  6415                           
  6416                           ;incstack = 0
  6417                           ;LCD_write_char@value stored from wreg
  6418  002AE6  6E11               	movwf	LCD_write_char@value,c
  6419                           
  6420                           ;src\LCD_44780.c: 147: unsigned char D3,D2,D1,D0;
  6421                           ;src\LCD_44780.c: 149: LATBbits.LATB2 = 1;
  6422  002AE8  848A               	bsf	3978,2,c	;volatile
  6423                           
  6424                           ;src\LCD_44780.c: 152: D3 = (value & 0b10000000) >> 7;
  6425  002AEA  4411               	rlncf	LCD_write_char@value,w,c
  6426  002AEC  0B01               	andlw	1
  6427  002AEE  6E0D               	movwf	LCD_write_char@D3,c
  6428                           
  6429                           ;src\LCD_44780.c: 153: D2 = (value & 0b01000000) >> 6;
  6430  002AF0  4411               	rlncf	LCD_write_char@value,w,c
  6431  002AF2  46E8               	rlncf	wreg,f,c
  6432  002AF4  0B03               	andlw	3
  6433  002AF6  0B01               	andlw	1
  6434  002AF8  6E0E               	movwf	LCD_write_char@D2,c
  6435                           
  6436                           ;src\LCD_44780.c: 154: D1 = (value & 0b00100000) >> 5;
  6437  002AFA  3811               	swapf	LCD_write_char@value,w,c
  6438  002AFC  42E8               	rrncf	wreg,f,c
  6439  002AFE  0B07               	andlw	7
  6440  002B00  0B01               	andlw	1
  6441  002B02  6E0F               	movwf	LCD_write_char@D1,c
  6442                           
  6443                           ;src\LCD_44780.c: 155: D0 = (value & 0b00010000) >> 4;
  6444  002B04  3811               	swapf	LCD_write_char@value,w,c
  6445  002B06  0B0F               	andlw	15
  6446  002B08  0B01               	andlw	1
  6447  002B0A  6E10               	movwf	LCD_write_char@D0,c
  6448                           
  6449                           ;src\LCD_44780.c: 157: LCD_send_command (D3,D2,D1,D0);
  6450  002B0C  C00E  F009         	movff	LCD_write_char@D2,LCD_send_command@D2
  6451  002B10  C00F  F00A         	movff	LCD_write_char@D1,LCD_send_command@D1
  6452  002B14  C010  F00B         	movff	LCD_write_char@D0,LCD_send_command@D0
  6453  002B18  500D               	movf	LCD_write_char@D3,w,c
  6454  002B1A  ECB4  F016         	call	_LCD_send_command
  6455                           
  6456                           ;src\LCD_44780.c: 160: D3 = (value & 0b00001000) >> 3;
  6457  002B1E  3811               	swapf	LCD_write_char@value,w,c
  6458  002B20  46E8               	rlncf	wreg,f,c
  6459  002B22  0B1F               	andlw	31
  6460  002B24  0B01               	andlw	1
  6461  002B26  6E0D               	movwf	LCD_write_char@D3,c
  6462                           
  6463                           ;src\LCD_44780.c: 161: D2 = (value & 0b00000100) >> 2;
  6464  002B28  4011               	rrncf	LCD_write_char@value,w,c
  6465  002B2A  42E8               	rrncf	wreg,f,c
  6466  002B2C  0B3F               	andlw	63
  6467  002B2E  0B01               	andlw	1
  6468  002B30  6E0E               	movwf	LCD_write_char@D2,c
  6469                           
  6470                           ;src\LCD_44780.c: 162: D1 = (value & 0b00000010) >> 1;
  6471  002B32  90D8               	bcf	status,0,c
  6472  002B34  3011               	rrcf	LCD_write_char@value,w,c
  6473  002B36  0B01               	andlw	1
  6474  002B38  6E0F               	movwf	LCD_write_char@D1,c
  6475                           
  6476                           ;src\LCD_44780.c: 163: D0 = (value & 0b00000001);
  6477  002B3A  5011               	movf	LCD_write_char@value,w,c
  6478  002B3C  0B01               	andlw	1
  6479  002B3E  6E10               	movwf	LCD_write_char@D0,c
  6480                           
  6481                           ;src\LCD_44780.c: 165: LCD_send_command (D3,D2,D1,D0);
  6482  002B40  C00E  F009         	movff	LCD_write_char@D2,LCD_send_command@D2
  6483  002B44  C00F  F00A         	movff	LCD_write_char@D1,LCD_send_command@D1
  6484  002B48  C010  F00B         	movff	LCD_write_char@D0,LCD_send_command@D0
  6485  002B4C  500D               	movf	LCD_write_char@D3,w,c
  6486  002B4E  ECB4  F016         	call	_LCD_send_command
  6487                           
  6488                           ;src\LCD_44780.c: 167: LATBbits.LATB2 = 0;
  6489  002B52  948A               	bcf	3978,2,c	;volatile
  6490  002B54  0012               	return		;funcret
  6491  002B56                     __end_of_LCD_write_char:
  6492                           	opt stack 0
  6493                           tblptru	equ	0xFF8
  6494                           tblptrh	equ	0xFF7
  6495                           tblptrl	equ	0xFF6
  6496                           tablat	equ	0xFF5
  6497                           prodh	equ	0xFF4
  6498                           prodl	equ	0xFF3
  6499                           postinc0	equ	0xFEE
  6500                           wreg	equ	0xFE8
  6501                           indf2	equ	0xFDF
  6502                           postinc2	equ	0xFDE
  6503                           postdec2	equ	0xFDD
  6504                           fsr2h	equ	0xFDA
  6505                           fsr2l	equ	0xFD9
  6506                           status	equ	0xFD8
  6507                           
  6508 ;; *************** function _LCD_initialize *****************
  6509 ;; Defined at:
  6510 ;;		line 283 in file "../../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  6511 ;; Parameters:    Size  Location     Type
  6512 ;;  quartz_frequ    1    wreg     unsigned char 
  6513 ;; Auto vars:     Size  Location     Type
  6514 ;;  quartz_frequ    1   14[COMRAM] unsigned char 
  6515 ;; Return value:  Size  Location     Type
  6516 ;;                  1    wreg      void 
  6517 ;; Registers used:
  6518 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6519 ;; Tracked objects:
  6520 ;;		On entry : 0/0
  6521 ;;		On exit  : 0/0
  6522 ;;		Unchanged: 0/0
  6523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6524 ;;      Params:         0       0       0       0       0       0       0       0       0
  6525 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6526 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6527 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6528 ;;Total ram usage:        1 bytes
  6529 ;; Hardware stack levels used:    1
  6530 ;; Hardware stack levels required when called:    5
  6531 ;; This function calls:
  6532 ;;		_LCD_clear
  6533 ;;		_LCD_cursor
  6534 ;;		_LCD_send_command
  6535 ;;		_delay_ms
  6536 ;;		_delay_set_quartz
  6537 ;; This function is called by:
  6538 ;;		_inizializzazione
  6539 ;; This function uses a non-reentrant model
  6540 ;;
  6541                           
  6542                           	psect	text25
  6543  0026C2                     __ptext25:
  6544                           	opt stack 0
  6545  0026C2                     _LCD_initialize:
  6546                           	opt stack 24
  6547                           
  6548                           ;incstack = 0
  6549                           ;LCD_initialize@quartz_frequency stored from wreg
  6550  0026C2  6E0F               	movwf	LCD_initialize@quartz_frequency,c
  6551                           
  6552                           ;src\LCD_44780.c: 285: delay_set_quartz (quartz_frequency);
  6553  0026C4  500F               	movf	LCD_initialize@quartz_frequency,w,c
  6554  0026C6  EC62  F017         	call	_delay_set_quartz
  6555                           
  6556                           ;src\LCD_44780.c: 287: LATBbits.LATB2 = 0x00;
  6557  0026CA  948A               	bcf	3978,2,c	;volatile
  6558                           
  6559                           ;src\LCD_44780.c: 288: LATBbits.LATB3 = 0x00;
  6560  0026CC  968A               	bcf	3978,3,c	;volatile
  6561                           
  6562                           ;src\LCD_44780.c: 289: LATBbits.LATB1 = 0x00;
  6563  0026CE  928A               	bcf	3978,1,c	;volatile
  6564                           
  6565                           ;src\LCD_44780.c: 291: delay_ms (100);
  6566  0026D0  0E00               	movlw	0
  6567  0026D2  6E08               	movwf	delay_ms@value_ms+1,c
  6568  0026D4  0E64               	movlw	100
  6569  0026D6  6E07               	movwf	delay_ms@value_ms,c
  6570  0026D8  EC9B  F016         	call	_delay_ms	;wreg free
  6571                           
  6572                           ;src\LCD_44780.c: 292: LCD_send_command (0,0,1,1);
  6573  0026DC  0E00               	movlw	0
  6574  0026DE  6E09               	movwf	LCD_send_command@D2,c
  6575  0026E0  0E01               	movlw	1
  6576  0026E2  6E0A               	movwf	LCD_send_command@D1,c
  6577  0026E4  0E01               	movlw	1
  6578  0026E6  6E0B               	movwf	LCD_send_command@D0,c
  6579  0026E8  0E00               	movlw	0
  6580  0026EA  ECB4  F016         	call	_LCD_send_command
  6581                           
  6582                           ;src\LCD_44780.c: 293: delay_ms (100);
  6583  0026EE  0E00               	movlw	0
  6584  0026F0  6E08               	movwf	delay_ms@value_ms+1,c
  6585  0026F2  0E64               	movlw	100
  6586  0026F4  6E07               	movwf	delay_ms@value_ms,c
  6587  0026F6  EC9B  F016         	call	_delay_ms	;wreg free
  6588                           
  6589                           ;src\LCD_44780.c: 294: LCD_send_command (0,0,1,1);
  6590  0026FA  0E00               	movlw	0
  6591  0026FC  6E09               	movwf	LCD_send_command@D2,c
  6592  0026FE  0E01               	movlw	1
  6593  002700  6E0A               	movwf	LCD_send_command@D1,c
  6594  002702  0E01               	movlw	1
  6595  002704  6E0B               	movwf	LCD_send_command@D0,c
  6596  002706  0E00               	movlw	0
  6597  002708  ECB4  F016         	call	_LCD_send_command
  6598                           
  6599                           ;src\LCD_44780.c: 295: delay_ms (10);
  6600  00270C  0E00               	movlw	0
  6601  00270E  6E08               	movwf	delay_ms@value_ms+1,c
  6602  002710  0E0A               	movlw	10
  6603  002712  6E07               	movwf	delay_ms@value_ms,c
  6604  002714  EC9B  F016         	call	_delay_ms	;wreg free
  6605                           
  6606                           ;src\LCD_44780.c: 296: LCD_send_command (0,0,1,1);
  6607  002718  0E00               	movlw	0
  6608  00271A  6E09               	movwf	LCD_send_command@D2,c
  6609  00271C  0E01               	movlw	1
  6610  00271E  6E0A               	movwf	LCD_send_command@D1,c
  6611  002720  0E01               	movlw	1
  6612  002722  6E0B               	movwf	LCD_send_command@D0,c
  6613  002724  0E00               	movlw	0
  6614  002726  ECB4  F016         	call	_LCD_send_command
  6615                           
  6616                           ;src\LCD_44780.c: 298: LCD_send_command (0,0,1,0);
  6617  00272A  0E00               	movlw	0
  6618  00272C  6E09               	movwf	LCD_send_command@D2,c
  6619  00272E  0E01               	movlw	1
  6620  002730  6E0A               	movwf	LCD_send_command@D1,c
  6621  002732  0E00               	movlw	0
  6622  002734  6E0B               	movwf	LCD_send_command@D0,c
  6623  002736  0E00               	movlw	0
  6624  002738  ECB4  F016         	call	_LCD_send_command
  6625                           
  6626                           ;src\LCD_44780.c: 300: LCD_send_command (0,0,1,0);
  6627  00273C  0E00               	movlw	0
  6628  00273E  6E09               	movwf	LCD_send_command@D2,c
  6629  002740  0E01               	movlw	1
  6630  002742  6E0A               	movwf	LCD_send_command@D1,c
  6631  002744  0E00               	movlw	0
  6632  002746  6E0B               	movwf	LCD_send_command@D0,c
  6633  002748  0E00               	movlw	0
  6634  00274A  ECB4  F016         	call	_LCD_send_command
  6635                           
  6636                           ;src\LCD_44780.c: 301: LCD_send_command (1,0,0,0);
  6637  00274E  0E00               	movlw	0
  6638  002750  6E09               	movwf	LCD_send_command@D2,c
  6639  002752  0E00               	movlw	0
  6640  002754  6E0A               	movwf	LCD_send_command@D1,c
  6641  002756  0E00               	movlw	0
  6642  002758  6E0B               	movwf	LCD_send_command@D0,c
  6643  00275A  0E01               	movlw	1
  6644  00275C  ECB4  F016         	call	_LCD_send_command
  6645                           
  6646                           ;src\LCD_44780.c: 303: LCD_send_command (0,0,0,0);
  6647  002760  0E00               	movlw	0
  6648  002762  6E09               	movwf	LCD_send_command@D2,c
  6649  002764  0E00               	movlw	0
  6650  002766  6E0A               	movwf	LCD_send_command@D1,c
  6651  002768  0E00               	movlw	0
  6652  00276A  6E0B               	movwf	LCD_send_command@D0,c
  6653  00276C  0E00               	movlw	0
  6654  00276E  ECB4  F016         	call	_LCD_send_command
  6655                           
  6656                           ;src\LCD_44780.c: 304: LCD_send_command (1,0,0,0);
  6657  002772  0E00               	movlw	0
  6658  002774  6E09               	movwf	LCD_send_command@D2,c
  6659  002776  0E00               	movlw	0
  6660  002778  6E0A               	movwf	LCD_send_command@D1,c
  6661  00277A  0E00               	movlw	0
  6662  00277C  6E0B               	movwf	LCD_send_command@D0,c
  6663  00277E  0E01               	movlw	1
  6664  002780  ECB4  F016         	call	_LCD_send_command
  6665                           
  6666                           ;src\LCD_44780.c: 306: LCD_send_command (0,0,0,0);
  6667  002784  0E00               	movlw	0
  6668  002786  6E09               	movwf	LCD_send_command@D2,c
  6669  002788  0E00               	movlw	0
  6670  00278A  6E0A               	movwf	LCD_send_command@D1,c
  6671  00278C  0E00               	movlw	0
  6672  00278E  6E0B               	movwf	LCD_send_command@D0,c
  6673  002790  0E00               	movlw	0
  6674  002792  ECB4  F016         	call	_LCD_send_command
  6675                           
  6676                           ;src\LCD_44780.c: 307: LCD_send_command (0,0,0,1);
  6677  002796  0E00               	movlw	0
  6678  002798  6E09               	movwf	LCD_send_command@D2,c
  6679  00279A  0E00               	movlw	0
  6680  00279C  6E0A               	movwf	LCD_send_command@D1,c
  6681  00279E  0E01               	movlw	1
  6682  0027A0  6E0B               	movwf	LCD_send_command@D0,c
  6683  0027A2  0E00               	movlw	0
  6684  0027A4  ECB4  F016         	call	_LCD_send_command
  6685                           
  6686                           ;src\LCD_44780.c: 309: LCD_send_command (0,0,0,0);
  6687  0027A8  0E00               	movlw	0
  6688  0027AA  6E09               	movwf	LCD_send_command@D2,c
  6689  0027AC  0E00               	movlw	0
  6690  0027AE  6E0A               	movwf	LCD_send_command@D1,c
  6691  0027B0  0E00               	movlw	0
  6692  0027B2  6E0B               	movwf	LCD_send_command@D0,c
  6693  0027B4  0E00               	movlw	0
  6694  0027B6  ECB4  F016         	call	_LCD_send_command
  6695                           
  6696                           ;src\LCD_44780.c: 310: LCD_send_command (0,1,1,0);
  6697  0027BA  0E01               	movlw	1
  6698  0027BC  6E09               	movwf	LCD_send_command@D2,c
  6699  0027BE  0E01               	movlw	1
  6700  0027C0  6E0A               	movwf	LCD_send_command@D1,c
  6701  0027C2  0E00               	movlw	0
  6702  0027C4  6E0B               	movwf	LCD_send_command@D0,c
  6703  0027C6  0E00               	movlw	0
  6704  0027C8  ECB4  F016         	call	_LCD_send_command
  6705                           
  6706                           ;src\LCD_44780.c: 312: LCD_clear ();
  6707  0027CC  EC0C  F017         	call	_LCD_clear	;wreg free
  6708                           
  6709                           ;src\LCD_44780.c: 314: LCD_cursor (0,0);
  6710  0027D0  0E00               	movlw	0
  6711  0027D2  6E0D               	movwf	LCD_cursor@blinking,c
  6712  0027D4  0E00               	movlw	0
  6713  0027D6  ECF8  F016         	call	_LCD_cursor
  6714  0027DA  0012               	return		;funcret
  6715  0027DC                     __end_of_LCD_initialize:
  6716                           	opt stack 0
  6717                           tblptru	equ	0xFF8
  6718                           tblptrh	equ	0xFF7
  6719                           tblptrl	equ	0xFF6
  6720                           tablat	equ	0xFF5
  6721                           prodh	equ	0xFF4
  6722                           prodl	equ	0xFF3
  6723                           postinc0	equ	0xFEE
  6724                           wreg	equ	0xFE8
  6725                           indf2	equ	0xFDF
  6726                           postinc2	equ	0xFDE
  6727                           postdec2	equ	0xFDD
  6728                           fsr2h	equ	0xFDA
  6729                           fsr2l	equ	0xFD9
  6730                           status	equ	0xFD8
  6731                           
  6732 ;; *************** function _delay_set_quartz *****************
  6733 ;; Defined at:
  6734 ;;		line 115 in file "../../LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
  6735 ;; Parameters:    Size  Location     Type
  6736 ;;  frequency       1    wreg     unsigned char 
  6737 ;; Auto vars:     Size  Location     Type
  6738 ;;  frequency       1    0[COMRAM] unsigned char 
  6739 ;; Return value:  Size  Location     Type
  6740 ;;                  1    wreg      void 
  6741 ;; Registers used:
  6742 ;;		wreg
  6743 ;; Tracked objects:
  6744 ;;		On entry : 0/0
  6745 ;;		On exit  : 0/0
  6746 ;;		Unchanged: 0/0
  6747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6748 ;;      Params:         0       0       0       0       0       0       0       0       0
  6749 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6750 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6751 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6752 ;;Total ram usage:        1 bytes
  6753 ;; Hardware stack levels used:    1
  6754 ;; This function calls:
  6755 ;;		Nothing
  6756 ;; This function is called by:
  6757 ;;		_LCD_initialize
  6758 ;; This function uses a non-reentrant model
  6759 ;;
  6760                           
  6761                           	psect	text26
  6762  002EC4                     __ptext26:
  6763                           	opt stack 0
  6764  002EC4                     _delay_set_quartz:
  6765                           	opt stack 28
  6766                           
  6767                           ;incstack = 0
  6768                           ;delay_set_quartz@frequency stored from wreg
  6769  002EC4  6E01               	movwf	delay_set_quartz@frequency,c
  6770                           
  6771                           ;src\delay.c: 117: delay_quartz_frequency_value = frequency;
  6772  002EC6  C001  F05F         	movff	delay_set_quartz@frequency,_delay_quartz_frequency_value	;volatile
  6773  002ECA  0012               	return		;funcret
  6774  002ECC                     __end_of_delay_set_quartz:
  6775                           	opt stack 0
  6776                           tblptru	equ	0xFF8
  6777                           tblptrh	equ	0xFF7
  6778                           tblptrl	equ	0xFF6
  6779                           tablat	equ	0xFF5
  6780                           prodh	equ	0xFF4
  6781                           prodl	equ	0xFF3
  6782                           postinc0	equ	0xFEE
  6783                           wreg	equ	0xFE8
  6784                           indf2	equ	0xFDF
  6785                           postinc2	equ	0xFDE
  6786                           postdec2	equ	0xFDD
  6787                           fsr2h	equ	0xFDA
  6788                           fsr2l	equ	0xFD9
  6789                           status	equ	0xFD8
  6790                           
  6791 ;; *************** function _LCD_cursor *****************
  6792 ;; Defined at:
  6793 ;;		line 266 in file "../../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  6794 ;; Parameters:    Size  Location     Type
  6795 ;;  active          1    wreg     unsigned char 
  6796 ;;  blinking        1   12[COMRAM] unsigned char 
  6797 ;; Auto vars:     Size  Location     Type
  6798 ;;  active          1   13[COMRAM] unsigned char 
  6799 ;; Return value:  Size  Location     Type
  6800 ;;                  1    wreg      void 
  6801 ;; Registers used:
  6802 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6803 ;; Tracked objects:
  6804 ;;		On entry : 0/0
  6805 ;;		On exit  : 0/0
  6806 ;;		Unchanged: 0/0
  6807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6808 ;;      Params:         1       0       0       0       0       0       0       0       0
  6809 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6810 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6811 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6812 ;;Total ram usage:        2 bytes
  6813 ;; Hardware stack levels used:    1
  6814 ;; Hardware stack levels required when called:    4
  6815 ;; This function calls:
  6816 ;;		_LCD_send_command
  6817 ;; This function is called by:
  6818 ;;		_LCD_initialize
  6819 ;; This function uses a non-reentrant model
  6820 ;;
  6821                           
  6822                           	psect	text27
  6823  002DF0                     __ptext27:
  6824                           	opt stack 0
  6825  002DF0                     _LCD_cursor:
  6826                           	opt stack 24
  6827                           
  6828                           ;incstack = 0
  6829                           ;LCD_cursor@active stored from wreg
  6830  002DF0  6E0E               	movwf	LCD_cursor@active,c
  6831                           
  6832                           ;src\LCD_44780.c: 268: LCD_send_command (0,0,0,0);
  6833  002DF2  0E00               	movlw	0
  6834  002DF4  6E09               	movwf	LCD_send_command@D2,c
  6835  002DF6  0E00               	movlw	0
  6836  002DF8  6E0A               	movwf	LCD_send_command@D1,c
  6837  002DFA  0E00               	movlw	0
  6838  002DFC  6E0B               	movwf	LCD_send_command@D0,c
  6839  002DFE  0E00               	movlw	0
  6840  002E00  ECB4  F016         	call	_LCD_send_command
  6841                           
  6842                           ;src\LCD_44780.c: 269: LCD_send_command (1,1,active,blinking);
  6843  002E04  0E01               	movlw	1
  6844  002E06  6E09               	movwf	LCD_send_command@D2,c
  6845  002E08  C00E  F00A         	movff	LCD_cursor@active,LCD_send_command@D1
  6846  002E0C  C00D  F00B         	movff	LCD_cursor@blinking,LCD_send_command@D0
  6847  002E10  0E01               	movlw	1
  6848  002E12  ECB4  F016         	call	_LCD_send_command
  6849  002E16  0012               	return		;funcret
  6850  002E18                     __end_of_LCD_cursor:
  6851                           	opt stack 0
  6852                           tblptru	equ	0xFF8
  6853                           tblptrh	equ	0xFF7
  6854                           tblptrl	equ	0xFF6
  6855                           tablat	equ	0xFF5
  6856                           prodh	equ	0xFF4
  6857                           prodl	equ	0xFF3
  6858                           postinc0	equ	0xFEE
  6859                           wreg	equ	0xFE8
  6860                           indf2	equ	0xFDF
  6861                           postinc2	equ	0xFDE
  6862                           postdec2	equ	0xFDD
  6863                           fsr2h	equ	0xFDA
  6864                           fsr2l	equ	0xFD9
  6865                           status	equ	0xFD8
  6866                           
  6867 ;; *************** function _LCD_clear *****************
  6868 ;; Defined at:
  6869 ;;		line 257 in file "../../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  6870 ;; Parameters:    Size  Location     Type
  6871 ;;		None
  6872 ;; Auto vars:     Size  Location     Type
  6873 ;;		None
  6874 ;; Return value:  Size  Location     Type
  6875 ;;                  1    wreg      void 
  6876 ;; Registers used:
  6877 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6878 ;; Tracked objects:
  6879 ;;		On entry : 0/0
  6880 ;;		On exit  : 0/0
  6881 ;;		Unchanged: 0/0
  6882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6883 ;;      Params:         0       0       0       0       0       0       0       0       0
  6884 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6885 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6886 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6887 ;;Total ram usage:        0 bytes
  6888 ;; Hardware stack levels used:    1
  6889 ;; Hardware stack levels required when called:    4
  6890 ;; This function calls:
  6891 ;;		_LCD_send_command
  6892 ;; This function is called by:
  6893 ;;		_LCD_initialize
  6894 ;;		_inizializzazione
  6895 ;; This function uses a non-reentrant model
  6896 ;;
  6897                           
  6898                           	psect	text28
  6899  002E18                     __ptext28:
  6900                           	opt stack 0
  6901  002E18                     _LCD_clear:
  6902                           	opt stack 24
  6903                           
  6904                           ;src\LCD_44780.c: 259: LCD_send_command (0,0,0,0);
  6905                           
  6906                           ;incstack = 0
  6907  002E18  0E00               	movlw	0
  6908  002E1A  6E09               	movwf	LCD_send_command@D2,c
  6909  002E1C  0E00               	movlw	0
  6910  002E1E  6E0A               	movwf	LCD_send_command@D1,c
  6911  002E20  0E00               	movlw	0
  6912  002E22  6E0B               	movwf	LCD_send_command@D0,c
  6913  002E24  0E00               	movlw	0
  6914  002E26  ECB4  F016         	call	_LCD_send_command
  6915                           
  6916                           ;src\LCD_44780.c: 260: LCD_send_command (0,0,0,1);
  6917  002E2A  0E00               	movlw	0
  6918  002E2C  6E09               	movwf	LCD_send_command@D2,c
  6919  002E2E  0E00               	movlw	0
  6920  002E30  6E0A               	movwf	LCD_send_command@D1,c
  6921  002E32  0E01               	movlw	1
  6922  002E34  6E0B               	movwf	LCD_send_command@D0,c
  6923  002E36  0E00               	movlw	0
  6924  002E38  ECB4  F016         	call	_LCD_send_command
  6925  002E3C  0012               	return		;funcret
  6926  002E3E                     __end_of_LCD_clear:
  6927                           	opt stack 0
  6928                           tblptru	equ	0xFF8
  6929                           tblptrh	equ	0xFF7
  6930                           tblptrl	equ	0xFF6
  6931                           tablat	equ	0xFF5
  6932                           prodh	equ	0xFF4
  6933                           prodl	equ	0xFF3
  6934                           postinc0	equ	0xFEE
  6935                           wreg	equ	0xFE8
  6936                           indf2	equ	0xFDF
  6937                           postinc2	equ	0xFDE
  6938                           postdec2	equ	0xFDD
  6939                           fsr2h	equ	0xFDA
  6940                           fsr2l	equ	0xFD9
  6941                           status	equ	0xFD8
  6942                           
  6943 ;; *************** function _LCD_send_command *****************
  6944 ;; Defined at:
  6945 ;;		line 61 in file "../../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  6946 ;; Parameters:    Size  Location     Type
  6947 ;;  D3              1    wreg     unsigned char 
  6948 ;;  D2              1    8[COMRAM] unsigned char 
  6949 ;;  D1              1    9[COMRAM] unsigned char 
  6950 ;;  D0              1   10[COMRAM] unsigned char 
  6951 ;; Auto vars:     Size  Location     Type
  6952 ;;  D3              1   11[COMRAM] unsigned char 
  6953 ;; Return value:  Size  Location     Type
  6954 ;;                  1    wreg      void 
  6955 ;; Registers used:
  6956 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6957 ;; Tracked objects:
  6958 ;;		On entry : 0/0
  6959 ;;		On exit  : 0/0
  6960 ;;		Unchanged: 0/0
  6961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6962 ;;      Params:         3       0       0       0       0       0       0       0       0
  6963 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6964 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6965 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6966 ;;Total ram usage:        4 bytes
  6967 ;; Hardware stack levels used:    1
  6968 ;; Hardware stack levels required when called:    3
  6969 ;; This function calls:
  6970 ;;		_LCD_enable_pulse
  6971 ;; This function is called by:
  6972 ;;		_LCD_goto_line
  6973 ;;		_LCD_write_char
  6974 ;;		_LCD_clear
  6975 ;;		_LCD_cursor
  6976 ;;		_LCD_initialize
  6977 ;;		_LCD_home
  6978 ;;		_LCD_shift
  6979 ;;		_LCD_shift_cursor
  6980 ;; This function uses a non-reentrant model
  6981 ;;
  6982                           
  6983                           	psect	text29
  6984  002D68                     __ptext29:
  6985                           	opt stack 0
  6986  002D68                     _LCD_send_command:
  6987                           	opt stack 24
  6988                           
  6989                           ;incstack = 0
  6990                           ;LCD_send_command@D3 stored from wreg
  6991  002D68  6E0C               	movwf	LCD_send_command@D3,c
  6992                           
  6993                           ;src\LCD_44780.c: 63: LATBbits.LATB4 = D0;
  6994  002D6A  B00B               	btfsc	LCD_send_command@D0,0,c
  6995  002D6C  D002               	bra	u2025
  6996  002D6E  988A               	bcf	3978,4,c	;volatile
  6997  002D70  D001               	bra	u2026
  6998  002D72                     u2025:
  6999  002D72  888A               	bsf	3978,4,c	;volatile
  7000  002D74                     u2026:
  7001                           
  7002                           ;src\LCD_44780.c: 64: LATBbits.LATB5 = D1;
  7003  002D74  B00A               	btfsc	LCD_send_command@D1,0,c
  7004  002D76  D002               	bra	u2035
  7005  002D78  9A8A               	bcf	3978,5,c	;volatile
  7006  002D7A  D001               	bra	u2036
  7007  002D7C                     u2035:
  7008  002D7C  8A8A               	bsf	3978,5,c	;volatile
  7009  002D7E                     u2036:
  7010                           
  7011                           ;src\LCD_44780.c: 65: LATBbits.LATB6 = D2;
  7012  002D7E  B009               	btfsc	LCD_send_command@D2,0,c
  7013  002D80  D002               	bra	u2045
  7014  002D82  9C8A               	bcf	3978,6,c	;volatile
  7015  002D84  D001               	bra	u2046
  7016  002D86                     u2045:
  7017  002D86  8C8A               	bsf	3978,6,c	;volatile
  7018  002D88                     u2046:
  7019                           
  7020                           ;src\LCD_44780.c: 66: LATBbits.LATB7 = D3;
  7021  002D88  B00C               	btfsc	LCD_send_command@D3,0,c
  7022  002D8A  D002               	bra	u2055
  7023  002D8C  9E8A               	bcf	3978,7,c	;volatile
  7024  002D8E  D001               	bra	u2056
  7025  002D90                     u2055:
  7026  002D90  8E8A               	bsf	3978,7,c	;volatile
  7027  002D92                     u2056:
  7028                           
  7029                           ;src\LCD_44780.c: 67: LCD_enable_pulse ();
  7030  002D92  EC53  F017         	call	_LCD_enable_pulse	;wreg free
  7031  002D96  0012               	return		;funcret
  7032  002D98                     __end_of_LCD_send_command:
  7033                           	opt stack 0
  7034                           tblptru	equ	0xFF8
  7035                           tblptrh	equ	0xFF7
  7036                           tblptrl	equ	0xFF6
  7037                           tablat	equ	0xFF5
  7038                           prodh	equ	0xFF4
  7039                           prodl	equ	0xFF3
  7040                           postinc0	equ	0xFEE
  7041                           wreg	equ	0xFE8
  7042                           indf2	equ	0xFDF
  7043                           postinc2	equ	0xFDE
  7044                           postdec2	equ	0xFDD
  7045                           fsr2h	equ	0xFDA
  7046                           fsr2l	equ	0xFD9
  7047                           status	equ	0xFD8
  7048                           
  7049 ;; *************** function _LCD_enable_pulse *****************
  7050 ;; Defined at:
  7051 ;;		line 49 in file "../../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  7052 ;; Parameters:    Size  Location     Type
  7053 ;;		None
  7054 ;; Auto vars:     Size  Location     Type
  7055 ;;		None
  7056 ;; Return value:  Size  Location     Type
  7057 ;;                  1    wreg      void 
  7058 ;; Registers used:
  7059 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7060 ;; Tracked objects:
  7061 ;;		On entry : 0/0
  7062 ;;		On exit  : 0/0
  7063 ;;		Unchanged: 0/0
  7064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7065 ;;      Params:         0       0       0       0       0       0       0       0       0
  7066 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7067 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7068 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7069 ;;Total ram usage:        0 bytes
  7070 ;; Hardware stack levels used:    1
  7071 ;; Hardware stack levels required when called:    2
  7072 ;; This function calls:
  7073 ;;		_delay_ms
  7074 ;; This function is called by:
  7075 ;;		_LCD_send_command
  7076 ;; This function uses a non-reentrant model
  7077 ;;
  7078                           
  7079                           	psect	text30
  7080  002EA6                     __ptext30:
  7081                           	opt stack 0
  7082  002EA6                     _LCD_enable_pulse:
  7083                           	opt stack 24
  7084                           
  7085                           ;src\LCD_44780.c: 51: LATBbits.LATB3 = 1;
  7086                           
  7087                           ;incstack = 0
  7088  002EA6  868A               	bsf	3978,3,c	;volatile
  7089                           
  7090                           ;src\LCD_44780.c: 52: delay_ms (1);
  7091  002EA8  0E00               	movlw	0
  7092  002EAA  6E08               	movwf	delay_ms@value_ms+1,c
  7093  002EAC  0E01               	movlw	1
  7094  002EAE  6E07               	movwf	delay_ms@value_ms,c
  7095  002EB0  EC9B  F016         	call	_delay_ms	;wreg free
  7096                           
  7097                           ;src\LCD_44780.c: 53: LATBbits.LATB3 = 0;
  7098  002EB4  968A               	bcf	3978,3,c	;volatile
  7099                           
  7100                           ;src\LCD_44780.c: 54: delay_ms (1);
  7101  002EB6  0E00               	movlw	0
  7102  002EB8  6E08               	movwf	delay_ms@value_ms+1,c
  7103  002EBA  0E01               	movlw	1
  7104  002EBC  6E07               	movwf	delay_ms@value_ms,c
  7105  002EBE  EC9B  F016         	call	_delay_ms	;wreg free
  7106  002EC2  0012               	return		;funcret
  7107  002EC4                     __end_of_LCD_enable_pulse:
  7108                           	opt stack 0
  7109                           tblptru	equ	0xFF8
  7110                           tblptrh	equ	0xFF7
  7111                           tblptrl	equ	0xFF6
  7112                           tablat	equ	0xFF5
  7113                           prodh	equ	0xFF4
  7114                           prodl	equ	0xFF3
  7115                           postinc0	equ	0xFEE
  7116                           wreg	equ	0xFE8
  7117                           indf2	equ	0xFDF
  7118                           postinc2	equ	0xFDE
  7119                           postdec2	equ	0xFDD
  7120                           fsr2h	equ	0xFDA
  7121                           fsr2l	equ	0xFD9
  7122                           status	equ	0xFD8
  7123                           
  7124 ;; *************** function _delay_ms *****************
  7125 ;; Defined at:
  7126 ;;		line 61 in file "../../LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
  7127 ;; Parameters:    Size  Location     Type
  7128 ;;  value_ms        2    6[COMRAM] unsigned int 
  7129 ;; Auto vars:     Size  Location     Type
  7130 ;;		None
  7131 ;; Return value:  Size  Location     Type
  7132 ;;                  1    wreg      void 
  7133 ;; Registers used:
  7134 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7135 ;; Tracked objects:
  7136 ;;		On entry : 0/0
  7137 ;;		On exit  : 0/0
  7138 ;;		Unchanged: 0/0
  7139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7140 ;;      Params:         2       0       0       0       0       0       0       0       0
  7141 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7142 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7143 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7144 ;;Total ram usage:        2 bytes
  7145 ;; Hardware stack levels used:    1
  7146 ;; Hardware stack levels required when called:    1
  7147 ;; This function calls:
  7148 ;;		___wmul
  7149 ;; This function is called by:
  7150 ;;		_LCD_enable_pulse
  7151 ;;		_LCD_initialize
  7152 ;;		_read_adc
  7153 ;;		_inizializzazione
  7154 ;;		_delay_s
  7155 ;; This function uses a non-reentrant model
  7156 ;;
  7157                           
  7158                           	psect	text31
  7159  002D36                     __ptext31:
  7160                           	opt stack 0
  7161  002D36                     _delay_ms:
  7162                           	opt stack 24
  7163                           
  7164                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
  7165                           
  7166                           ;incstack = 0
  7167  002D36  C05F  F001         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
  7168  002D3A  6A02               	clrf	___wmul@multiplier+1,c
  7169  002D3C  C007  F003         	movff	delay_ms@value_ms,___wmul@multiplicand
  7170  002D40  C008  F004         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
  7171  002D44  EC1F  F017         	call	___wmul	;wreg free
  7172  002D48  C001  F05B         	movff	?___wmul,_clock_counter_reference	;volatile
  7173  002D4C  C002  F05C         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
  7174                           
  7175                           ;src\delay.c: 75: while (clock_counter_reference) {
  7176  002D50  D006               	goto	l124
  7177  002D52                     l2304:
  7178                           
  7179                           ;src\delay.c: 85: _delay(240);
  7180  002D52  0E50               	movlw	80
  7181  002D54                     u4107:
  7182  002D54  2EE8               	decfsz	wreg,f,c
  7183  002D56  D7FE               	goto	u4107
  7184                           
  7185                           ;src\delay.c: 88: clock_counter_reference--;
  7186  002D58  065B               	decf	_clock_counter_reference,f,c	;volatile
  7187  002D5A  A0D8               	btfss	status,0,c
  7188  002D5C  065C               	decf	_clock_counter_reference+1,f,c	;volatile
  7189  002D5E                     l124:
  7190  002D5E  505B               	movf	_clock_counter_reference,w,c	;volatile
  7191  002D60  105C               	iorwf	_clock_counter_reference+1,w,c	;volatile
  7192  002D62  B4D8               	btfsc	status,2,c
  7193  002D64  0012               	return	
  7194  002D66  D7F5               	goto	l2304
  7195  002D68                     __end_of_delay_ms:
  7196                           	opt stack 0
  7197                           tblptru	equ	0xFF8
  7198                           tblptrh	equ	0xFF7
  7199                           tblptrl	equ	0xFF6
  7200                           tablat	equ	0xFF5
  7201                           prodh	equ	0xFF4
  7202                           prodl	equ	0xFF3
  7203                           postinc0	equ	0xFEE
  7204                           wreg	equ	0xFE8
  7205                           indf2	equ	0xFDF
  7206                           postinc2	equ	0xFDE
  7207                           postdec2	equ	0xFDD
  7208                           fsr2h	equ	0xFDA
  7209                           fsr2l	equ	0xFD9
  7210                           status	equ	0xFD8
  7211                           
  7212 ;; *************** function ___wmul *****************
  7213 ;; Defined at:
  7214 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\Umul16.c"
  7215 ;; Parameters:    Size  Location     Type
  7216 ;;  multiplier      2    0[COMRAM] unsigned int 
  7217 ;;  multiplicand    2    2[COMRAM] unsigned int 
  7218 ;; Auto vars:     Size  Location     Type
  7219 ;;  product         2    4[COMRAM] unsigned int 
  7220 ;; Return value:  Size  Location     Type
  7221 ;;                  2    0[COMRAM] unsigned int 
  7222 ;; Registers used:
  7223 ;;		wreg, status,2, status,0, prodl, prodh
  7224 ;; Tracked objects:
  7225 ;;		On entry : 0/0
  7226 ;;		On exit  : 0/0
  7227 ;;		Unchanged: 0/0
  7228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7229 ;;      Params:         4       0       0       0       0       0       0       0       0
  7230 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7231 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7232 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7233 ;;Total ram usage:        6 bytes
  7234 ;; Hardware stack levels used:    1
  7235 ;; This function calls:
  7236 ;;		Nothing
  7237 ;; This function is called by:
  7238 ;;		_delay_ms
  7239 ;;		_read_adc
  7240 ;;		_sprintf
  7241 ;; This function uses a non-reentrant model
  7242 ;;
  7243                           
  7244                           	psect	text32
  7245  002E3E                     __ptext32:
  7246                           	opt stack 0
  7247  002E3E                     ___wmul:
  7248                           	opt stack 28
  7249                           
  7250                           ;incstack = 0
  7251  002E3E  5001               	movf	___wmul@multiplier,w,c
  7252  002E40  0203               	mulwf	___wmul@multiplicand,c
  7253  002E42  CFF3 F005          	movff	prodl,___wmul@product
  7254  002E46  CFF4 F006          	movff	prodh,___wmul@product+1
  7255  002E4A  5001               	movf	___wmul@multiplier,w,c
  7256  002E4C  0204               	mulwf	___wmul@multiplicand+1,c
  7257  002E4E  50F3               	movf	prodl,w,c
  7258  002E50  2606               	addwf	___wmul@product+1,f,c
  7259  002E52  5002               	movf	___wmul@multiplier+1,w,c
  7260  002E54  0203               	mulwf	___wmul@multiplicand,c
  7261  002E56  50F3               	movf	prodl,w,c
  7262  002E58  2606               	addwf	___wmul@product+1,f,c
  7263  002E5A  C005  F001         	movff	___wmul@product,?___wmul
  7264  002E5E  C006  F002         	movff	___wmul@product+1,?___wmul+1
  7265  002E62  0012               	return	
  7266  002E64                     __end_of___wmul:
  7267                           	opt stack 0
  7268                           tblptru	equ	0xFF8
  7269                           tblptrh	equ	0xFF7
  7270                           tblptrl	equ	0xFF6
  7271                           tablat	equ	0xFF5
  7272                           prodh	equ	0xFF4
  7273                           prodl	equ	0xFF3
  7274                           postinc0	equ	0xFEE
  7275                           wreg	equ	0xFE8
  7276                           indf2	equ	0xFDF
  7277                           postinc2	equ	0xFDE
  7278                           postdec2	equ	0xFDD
  7279                           fsr2h	equ	0xFDA
  7280                           fsr2l	equ	0xFD9
  7281                           status	equ	0xFD8
  7282                           
  7283 ;; *************** function ___fldiv *****************
  7284 ;; Defined at:
  7285 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\sprcdiv.c"
  7286 ;; Parameters:    Size  Location     Type
  7287 ;;  b               4    0[COMRAM] unsigned int 
  7288 ;;  a               4    4[COMRAM] unsigned int 
  7289 ;; Auto vars:     Size  Location     Type
  7290 ;;  grs             4   19[COMRAM] unsigned long 
  7291 ;;  rem             4   13[COMRAM] unsigned long 
  7292 ;;  new_exp         2   17[COMRAM] int 
  7293 ;;  aexp            1   24[COMRAM] unsigned char 
  7294 ;;  bexp            1   23[COMRAM] unsigned char 
  7295 ;;  sign            1   12[COMRAM] unsigned char 
  7296 ;; Return value:  Size  Location     Type
  7297 ;;                  4    0[COMRAM] unsigned char 
  7298 ;; Registers used:
  7299 ;;		wreg, status,2, status,0
  7300 ;; Tracked objects:
  7301 ;;		On entry : 0/0
  7302 ;;		On exit  : 0/0
  7303 ;;		Unchanged: 0/0
  7304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7305 ;;      Params:         8       0       0       0       0       0       0       0       0
  7306 ;;      Locals:        13       0       0       0       0       0       0       0       0
  7307 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7308 ;;      Totals:        25       0       0       0       0       0       0       0       0
  7309 ;;Total ram usage:       25 bytes
  7310 ;; Hardware stack levels used:    1
  7311 ;; This function calls:
  7312 ;;		Nothing
  7313 ;; This function is called by:
  7314 ;;		_main
  7315 ;; This function uses a non-reentrant model
  7316 ;;
  7317                           
  7318                           	psect	text33
  7319  001B70                     __ptext33:
  7320                           	opt stack 0
  7321  001B70                     ___fldiv:
  7322                           	opt stack 30
  7323                           
  7324                           ;incstack = 0
  7325  001B70  5004               	movf	___fldiv@b+3,w,c
  7326  001B72  0B80               	andlw	128
  7327  001B74  6E0D               	movwf	___fldiv@sign,c
  7328  001B76  5004               	movf	___fldiv@b+3,w,c
  7329  001B78  2404               	addwf	___fldiv@b+3,w,c
  7330  001B7A  6E18               	movwf	___fldiv@bexp,c
  7331  001B7C  BE03               	btfsc	___fldiv@b+2,7,c
  7332  001B7E  8018               	bsf	___fldiv@bexp,0,c
  7333  001B80  5018               	movf	___fldiv@bexp,w,c
  7334  001B82  B4D8               	btfsc	status,2,c
  7335  001B84  D00D               	goto	l3458
  7336  001B86  2818               	incf	___fldiv@bexp,w,c
  7337  001B88  A4D8               	btfss	status,2,c
  7338  001B8A  D008               	goto	l3454
  7339  001B8C  0E00               	movlw	0
  7340  001B8E  6E01               	movwf	___fldiv@b,c
  7341  001B90  0E00               	movlw	0
  7342  001B92  6E02               	movwf	___fldiv@b+1,c
  7343  001B94  0E00               	movlw	0
  7344  001B96  6E03               	movwf	___fldiv@b+2,c
  7345  001B98  0E00               	movlw	0
  7346  001B9A  6E04               	movwf	___fldiv@b+3,c
  7347  001B9C                     l3454:
  7348  001B9C  8E03               	bsf	___fldiv@b+2,7,c
  7349  001B9E  D006               	goto	L10
  7350  001BA0                     l3458:
  7351  001BA0  0E00               	movlw	0
  7352  001BA2  6E01               	movwf	___fldiv@b,c
  7353  001BA4  0E00               	movlw	0
  7354  001BA6  6E02               	movwf	___fldiv@b+1,c
  7355  001BA8  0E00               	movlw	0
  7356  001BAA  6E03               	movwf	___fldiv@b+2,c
  7357  001BAC                     L10:
  7358  001BAC  0E00               	movlw	0
  7359  001BAE  6E04               	movwf	___fldiv@b+3,c
  7360  001BB0  5008               	movf	___fldiv@a+3,w,c
  7361  001BB2  0B80               	andlw	128
  7362  001BB4  1A0D               	xorwf	___fldiv@sign,f,c
  7363  001BB6  5008               	movf	___fldiv@a+3,w,c
  7364  001BB8  2408               	addwf	___fldiv@a+3,w,c
  7365  001BBA  6E19               	movwf	___fldiv@aexp,c
  7366  001BBC  BE07               	btfsc	___fldiv@a+2,7,c
  7367  001BBE  8019               	bsf	___fldiv@aexp,0,c
  7368  001BC0  5019               	movf	___fldiv@aexp,w,c
  7369  001BC2  B4D8               	btfsc	status,2,c
  7370  001BC4  D00D               	goto	l3478
  7371  001BC6  2819               	incf	___fldiv@aexp,w,c
  7372  001BC8  A4D8               	btfss	status,2,c
  7373  001BCA  D008               	goto	l3474
  7374  001BCC  0E00               	movlw	0
  7375  001BCE  6E05               	movwf	___fldiv@a,c
  7376  001BD0  0E00               	movlw	0
  7377  001BD2  6E06               	movwf	___fldiv@a+1,c
  7378  001BD4  0E00               	movlw	0
  7379  001BD6  6E07               	movwf	___fldiv@a+2,c
  7380  001BD8  0E00               	movlw	0
  7381  001BDA  6E08               	movwf	___fldiv@a+3,c
  7382  001BDC                     l3474:
  7383  001BDC  8E07               	bsf	___fldiv@a+2,7,c
  7384  001BDE  D006               	goto	L11
  7385  001BE0                     l3478:
  7386  001BE0  0E00               	movlw	0
  7387  001BE2  6E05               	movwf	___fldiv@a,c
  7388  001BE4  0E00               	movlw	0
  7389  001BE6  6E06               	movwf	___fldiv@a+1,c
  7390  001BE8  0E00               	movlw	0
  7391  001BEA  6E07               	movwf	___fldiv@a+2,c
  7392  001BEC                     L11:
  7393  001BEC  0E00               	movlw	0
  7394  001BEE  6E08               	movwf	___fldiv@a+3,c
  7395  001BF0  5005               	movf	___fldiv@a,w,c
  7396  001BF2  1006               	iorwf	___fldiv@a+1,w,c
  7397  001BF4  1007               	iorwf	___fldiv@a+2,w,c
  7398  001BF6  1008               	iorwf	___fldiv@a+3,w,c
  7399  001BF8  A4D8               	btfss	status,2,c
  7400  001BFA  D015               	goto	l3490
  7401  001BFC  0E00               	movlw	0
  7402  001BFE  6E01               	movwf	___fldiv@b,c
  7403  001C00  0E00               	movlw	0
  7404  001C02  6E02               	movwf	___fldiv@b+1,c
  7405  001C04  0E00               	movlw	0
  7406  001C06  6E03               	movwf	___fldiv@b+2,c
  7407  001C08  0E00               	movlw	0
  7408  001C0A  6E04               	movwf	___fldiv@b+3,c
  7409  001C0C  0E80               	movlw	128
  7410  001C0E  1203               	iorwf	___fldiv@b+2,f,c
  7411  001C10  0E7F               	movlw	127
  7412  001C12  1204               	iorwf	___fldiv@b+3,f,c
  7413  001C14  C001  F001         	movff	___fldiv@b,?___fldiv
  7414  001C18  C002  F002         	movff	___fldiv@b+1,?___fldiv+1
  7415  001C1C  C003  F003         	movff	___fldiv@b+2,?___fldiv+2
  7416  001C20  C004  F004         	movff	___fldiv@b+3,?___fldiv+3
  7417  001C24  0012               	return	
  7418  001C26                     l3490:
  7419  001C26  5018               	movf	___fldiv@bexp,w,c
  7420  001C28  A4D8               	btfss	status,2,c
  7421  001C2A  D011               	goto	l3498
  7422  001C2C  0E00               	movlw	0
  7423  001C2E  6E01               	movwf	___fldiv@b,c
  7424  001C30  0E00               	movlw	0
  7425  001C32  6E02               	movwf	___fldiv@b+1,c
  7426  001C34  0E00               	movlw	0
  7427  001C36  6E03               	movwf	___fldiv@b+2,c
  7428  001C38  0E00               	movlw	0
  7429  001C3A  6E04               	movwf	___fldiv@b+3,c
  7430  001C3C  C001  F001         	movff	___fldiv@b,?___fldiv
  7431  001C40  C002  F002         	movff	___fldiv@b+1,?___fldiv+1
  7432  001C44  C003  F003         	movff	___fldiv@b+2,?___fldiv+2
  7433  001C48  C004  F004         	movff	___fldiv@b+3,?___fldiv+3
  7434  001C4C  0012               	return	
  7435  001C4E                     l3498:
  7436  001C4E  5019               	movf	___fldiv@aexp,w,c
  7437  001C50  6E09               	movwf	??___fldiv& (0+255),c
  7438  001C52  6A0A               	clrf	(??___fldiv+1)& (0+255),c
  7439  001C54  1E09               	comf	??___fldiv,f,c
  7440  001C56  1E0A               	comf	??___fldiv+1,f,c
  7441  001C58  4A09               	infsnz	??___fldiv,f,c
  7442  001C5A  2A0A               	incf	??___fldiv+1,f,c
  7443  001C5C  5018               	movf	___fldiv@bexp,w,c
  7444  001C5E  6E0B               	movwf	(??___fldiv+2)& (0+255),c
  7445  001C60  6A0C               	clrf	(??___fldiv+3)& (0+255),c
  7446  001C62  5009               	movf	??___fldiv,w,c
  7447  001C64  260B               	addwf	??___fldiv+2,f,c
  7448  001C66  500A               	movf	??___fldiv+1,w,c
  7449  001C68  220C               	addwfc	??___fldiv+3,f,c
  7450  001C6A  0E7F               	movlw	127
  7451  001C6C  240B               	addwf	??___fldiv+2,w,c
  7452  001C6E  6E12               	movwf	___fldiv@new_exp,c
  7453  001C70  0E00               	movlw	0
  7454  001C72  200C               	addwfc	??___fldiv+3,w,c
  7455  001C74  6E13               	movwf	___fldiv@new_exp+1,c
  7456  001C76  C001  F00E         	movff	___fldiv@b,___fldiv@rem
  7457  001C7A  C002  F00F         	movff	___fldiv@b+1,___fldiv@rem+1
  7458  001C7E  C003  F010         	movff	___fldiv@b+2,___fldiv@rem+2
  7459  001C82  C004  F011         	movff	___fldiv@b+3,___fldiv@rem+3
  7460  001C86  0E00               	movlw	0
  7461  001C88  6E01               	movwf	___fldiv@b,c
  7462  001C8A  0E00               	movlw	0
  7463  001C8C  6E02               	movwf	___fldiv@b+1,c
  7464  001C8E  0E00               	movlw	0
  7465  001C90  6E03               	movwf	___fldiv@b+2,c
  7466  001C92  0E00               	movlw	0
  7467  001C94  6E04               	movwf	___fldiv@b+3,c
  7468  001C96  0E00               	movlw	0
  7469  001C98  6E14               	movwf	___fldiv@grs,c
  7470  001C9A  0E00               	movlw	0
  7471  001C9C  6E15               	movwf	___fldiv@grs+1,c
  7472  001C9E  0E00               	movlw	0
  7473  001CA0  6E16               	movwf	___fldiv@grs+2,c
  7474  001CA2  0E00               	movlw	0
  7475  001CA4  6E17               	movwf	___fldiv@grs+3,c
  7476  001CA6  0E00               	movlw	0
  7477  001CA8  6E19               	movwf	___fldiv@aexp,c
  7478  001CAA  D028               	goto	l814
  7479  001CAC                     l3508:
  7480  001CAC  5019               	movf	___fldiv@aexp,w,c
  7481  001CAE  B4D8               	btfsc	status,2,c
  7482  001CB0  D011               	goto	l3516
  7483  001CB2  90D8               	bcf	status,0,c
  7484  001CB4  360E               	rlcf	___fldiv@rem,f,c
  7485  001CB6  360F               	rlcf	___fldiv@rem+1,f,c
  7486  001CB8  3610               	rlcf	___fldiv@rem+2,f,c
  7487  001CBA  3611               	rlcf	___fldiv@rem+3,f,c
  7488  001CBC  90D8               	bcf	status,0,c
  7489  001CBE  3601               	rlcf	___fldiv@b,f,c
  7490  001CC0  3602               	rlcf	___fldiv@b+1,f,c
  7491  001CC2  3603               	rlcf	___fldiv@b+2,f,c
  7492  001CC4  3604               	rlcf	___fldiv@b+3,f,c
  7493  001CC6  BE17               	btfsc	___fldiv@grs+3,7,c
  7494  001CC8  8001               	bsf	___fldiv@b,0,c
  7495  001CCA  90D8               	bcf	status,0,c
  7496  001CCC  3614               	rlcf	___fldiv@grs,f,c
  7497  001CCE  3615               	rlcf	___fldiv@grs+1,f,c
  7498  001CD0  3616               	rlcf	___fldiv@grs+2,f,c
  7499  001CD2  3617               	rlcf	___fldiv@grs+3,f,c
  7500  001CD4                     l3516:
  7501  001CD4  5005               	movf	___fldiv@a,w,c
  7502  001CD6  5C0E               	subwf	___fldiv@rem,w,c
  7503  001CD8  5006               	movf	___fldiv@a+1,w,c
  7504  001CDA  580F               	subwfb	___fldiv@rem+1,w,c
  7505  001CDC  5007               	movf	___fldiv@a+2,w,c
  7506  001CDE  5810               	subwfb	___fldiv@rem+2,w,c
  7507  001CE0  5008               	movf	___fldiv@a+3,w,c
  7508  001CE2  5811               	subwfb	___fldiv@rem+3,w,c
  7509  001CE4  A0D8               	btfss	status,0,c
  7510  001CE6  D009               	goto	l3522
  7511  001CE8  8C17               	bsf	___fldiv@grs+3,6,c
  7512  001CEA  5005               	movf	___fldiv@a,w,c
  7513  001CEC  5E0E               	subwf	___fldiv@rem,f,c
  7514  001CEE  5006               	movf	___fldiv@a+1,w,c
  7515  001CF0  5A0F               	subwfb	___fldiv@rem+1,f,c
  7516  001CF2  5007               	movf	___fldiv@a+2,w,c
  7517  001CF4  5A10               	subwfb	___fldiv@rem+2,f,c
  7518  001CF6  5008               	movf	___fldiv@a+3,w,c
  7519  001CF8  5A11               	subwfb	___fldiv@rem+3,f,c
  7520  001CFA                     l3522:
  7521  001CFA  2A19               	incf	___fldiv@aexp,f,c
  7522  001CFC                     l814:
  7523  001CFC  0E19               	movlw	25
  7524  001CFE  6419               	cpfsgt	___fldiv@aexp,c
  7525  001D00  D7D5               	goto	l3508
  7526  001D02  500E               	movf	___fldiv@rem,w,c
  7527  001D04  100F               	iorwf	___fldiv@rem+1,w,c
  7528  001D06  1010               	iorwf	___fldiv@rem+2,w,c
  7529  001D08  1011               	iorwf	___fldiv@rem+3,w,c
  7530  001D0A  B4D8               	btfsc	status,2,c
  7531  001D0C  D011               	goto	l3534
  7532  001D0E  8014               	bsf	___fldiv@grs,0,c
  7533  001D10  D00F               	goto	l3534
  7534  001D12                     l3528:
  7535  001D12  90D8               	bcf	status,0,c
  7536  001D14  3601               	rlcf	___fldiv@b,f,c
  7537  001D16  3602               	rlcf	___fldiv@b+1,f,c
  7538  001D18  3603               	rlcf	___fldiv@b+2,f,c
  7539  001D1A  3604               	rlcf	___fldiv@b+3,f,c
  7540  001D1C  BE17               	btfsc	___fldiv@grs+3,7,c
  7541  001D1E  8001               	bsf	___fldiv@b,0,c
  7542  001D20  90D8               	bcf	status,0,c
  7543  001D22  3614               	rlcf	___fldiv@grs,f,c
  7544  001D24  3615               	rlcf	___fldiv@grs+1,f,c
  7545  001D26  3616               	rlcf	___fldiv@grs+2,f,c
  7546  001D28  3617               	rlcf	___fldiv@grs+3,f,c
  7547  001D2A  0612               	decf	___fldiv@new_exp,f,c
  7548  001D2C  A0D8               	btfss	status,0,c
  7549  001D2E  0613               	decf	___fldiv@new_exp+1,f,c
  7550  001D30                     l3534:
  7551  001D30  AE03               	btfss	___fldiv@b+2,7,c
  7552  001D32  D7EF               	goto	l3528
  7553  001D34  0E00               	movlw	0
  7554  001D36  6E19               	movwf	___fldiv@aexp,c
  7555  001D38  AE17               	btfss	___fldiv@grs+3,7,c
  7556  001D3A  D016               	goto	l825
  7557  001D3C  0EFF               	movlw	255
  7558  001D3E  1414               	andwf	___fldiv@grs,w,c
  7559  001D40  6E09               	movwf	??___fldiv& (0+255),c
  7560  001D42  0EFF               	movlw	255
  7561  001D44  1415               	andwf	___fldiv@grs+1,w,c
  7562  001D46  6E0A               	movwf	(??___fldiv+1)& (0+255),c
  7563  001D48  0EFF               	movlw	255
  7564  001D4A  1416               	andwf	___fldiv@grs+2,w,c
  7565  001D4C  6E0B               	movwf	(??___fldiv+2)& (0+255),c
  7566  001D4E  0E7F               	movlw	127
  7567  001D50  1417               	andwf	___fldiv@grs+3,w,c
  7568  001D52  6E0C               	movwf	(??___fldiv+3)& (0+255),c
  7569  001D54  5009               	movf	??___fldiv,w,c
  7570  001D56  100A               	iorwf	??___fldiv+1,w,c
  7571  001D58  100B               	iorwf	??___fldiv+2,w,c
  7572  001D5A  100C               	iorwf	??___fldiv+3,w,c
  7573  001D5C  A4D8               	btfss	status,2,c
  7574  001D5E  D002               	goto	l3544
  7575  001D60  A001               	btfss	___fldiv@b,0,c
  7576  001D62  D002               	goto	l825
  7577  001D64                     l3544:
  7578  001D64  0E01               	movlw	1
  7579  001D66  6E19               	movwf	___fldiv@aexp,c
  7580  001D68                     l825:
  7581  001D68  5019               	movf	___fldiv@aexp,w,c
  7582  001D6A  B4D8               	btfsc	status,2,c
  7583  001D6C  D01F               	goto	l3554
  7584  001D6E  0E01               	movlw	1
  7585  001D70  2601               	addwf	___fldiv@b,f,c
  7586  001D72  0E00               	movlw	0
  7587  001D74  2202               	addwfc	___fldiv@b+1,f,c
  7588  001D76  2203               	addwfc	___fldiv@b+2,f,c
  7589  001D78  2204               	addwfc	___fldiv@b+3,f,c
  7590  001D7A  A004               	btfss	___fldiv@b+3,0,c
  7591  001D7C  D017               	goto	l3554
  7592  001D7E  C001  F009         	movff	___fldiv@b,??___fldiv
  7593  001D82  C002  F00A         	movff	___fldiv@b+1,??___fldiv+1
  7594  001D86  C003  F00B         	movff	___fldiv@b+2,??___fldiv+2
  7595  001D8A  C004  F00C         	movff	___fldiv@b+3,??___fldiv+3
  7596  001D8E  340C               	rlcf	??___fldiv+3,w,c
  7597  001D90  320C               	rrcf	??___fldiv+3,f,c
  7598  001D92  320B               	rrcf	??___fldiv+2,f,c
  7599  001D94  320A               	rrcf	??___fldiv+1,f,c
  7600  001D96  3209               	rrcf	??___fldiv,f,c
  7601  001D98  C009  F001         	movff	??___fldiv,___fldiv@b
  7602  001D9C  C00A  F002         	movff	??___fldiv+1,___fldiv@b+1
  7603  001DA0  C00B  F003         	movff	??___fldiv+2,___fldiv@b+2
  7604  001DA4  C00C  F004         	movff	??___fldiv+3,___fldiv@b+3
  7605  001DA8  4A12               	infsnz	___fldiv@new_exp,f,c
  7606  001DAA  2A13               	incf	___fldiv@new_exp+1,f,c
  7607  001DAC                     l3554:
  7608  001DAC  BE13               	btfsc	___fldiv@new_exp+1,7,c
  7609  001DAE  D010               	goto	l3558
  7610  001DB0  5013               	movf	___fldiv@new_exp+1,w,c
  7611  001DB2  E103               	bnz	u3880
  7612  001DB4  2812               	incf	___fldiv@new_exp,w,c
  7613  001DB6  A0D8               	btfss	status,0,c
  7614  001DB8  D00B               	goto	l3558
  7615  001DBA                     u3880:
  7616  001DBA  0E00               	movlw	0
  7617  001DBC  6E13               	movwf	___fldiv@new_exp+1,c
  7618  001DBE  6812               	setf	___fldiv@new_exp,c
  7619  001DC0  0E00               	movlw	0
  7620  001DC2  6E01               	movwf	___fldiv@b,c
  7621  001DC4  0E00               	movlw	0
  7622  001DC6  6E02               	movwf	___fldiv@b+1,c
  7623  001DC8  0E00               	movlw	0
  7624  001DCA  6E03               	movwf	___fldiv@b+2,c
  7625  001DCC  0E00               	movlw	0
  7626  001DCE  6E04               	movwf	___fldiv@b+3,c
  7627  001DD0                     l3558:
  7628  001DD0  BE13               	btfsc	___fldiv@new_exp+1,7,c
  7629  001DD2  D005               	goto	l3560
  7630  001DD4  5013               	movf	___fldiv@new_exp+1,w,c
  7631  001DD6  E111               	bnz	l3562
  7632  001DD8  0412               	decf	___fldiv@new_exp,w,c
  7633  001DDA  B0D8               	btfsc	status,0,c
  7634  001DDC  D00E               	goto	l3562
  7635  001DDE                     l3560:
  7636  001DDE  0E00               	movlw	0
  7637  001DE0  6E13               	movwf	___fldiv@new_exp+1,c
  7638  001DE2  0E00               	movlw	0
  7639  001DE4  6E12               	movwf	___fldiv@new_exp,c
  7640  001DE6  0E00               	movlw	0
  7641  001DE8  6E01               	movwf	___fldiv@b,c
  7642  001DEA  0E00               	movlw	0
  7643  001DEC  6E02               	movwf	___fldiv@b+1,c
  7644  001DEE  0E00               	movlw	0
  7645  001DF0  6E03               	movwf	___fldiv@b+2,c
  7646  001DF2  0E00               	movlw	0
  7647  001DF4  6E04               	movwf	___fldiv@b+3,c
  7648  001DF6  0E00               	movlw	0
  7649  001DF8  6E0D               	movwf	___fldiv@sign,c
  7650  001DFA                     l3562:
  7651  001DFA  C012  F018         	movff	___fldiv@new_exp,___fldiv@bexp
  7652  001DFE  A018               	btfss	___fldiv@bexp,0,c
  7653  001E00  D002               	goto	l3568
  7654  001E02  8E03               	bsf	___fldiv@b+2,7,c
  7655  001E04  D001               	goto	l3570
  7656  001E06                     l3568:
  7657  001E06  9E03               	bcf	___fldiv@b+2,7,c
  7658  001E08                     l3570:
  7659  001E08  90D8               	bcf	status,0,c
  7660  001E0A  3018               	rrcf	___fldiv@bexp,w,c
  7661  001E0C  6E04               	movwf	___fldiv@b+3,c
  7662  001E0E  500D               	movf	___fldiv@sign,w,c
  7663  001E10  1204               	iorwf	___fldiv@b+3,f,c
  7664  001E12  C001  F001         	movff	___fldiv@b,?___fldiv
  7665  001E16  C002  F002         	movff	___fldiv@b+1,?___fldiv+1
  7666  001E1A  C003  F003         	movff	___fldiv@b+2,?___fldiv+2
  7667  001E1E  C004  F004         	movff	___fldiv@b+3,?___fldiv+3
  7668  001E22  0012               	return	
  7669  001E24                     __end_of___fldiv:
  7670                           	opt stack 0
  7671                           tblptru	equ	0xFF8
  7672                           tblptrh	equ	0xFF7
  7673                           tblptrl	equ	0xFF6
  7674                           tablat	equ	0xFF5
  7675                           prodh	equ	0xFF4
  7676                           prodl	equ	0xFF3
  7677                           postinc0	equ	0xFEE
  7678                           wreg	equ	0xFE8
  7679                           indf2	equ	0xFDF
  7680                           postinc2	equ	0xFDE
  7681                           postdec2	equ	0xFDD
  7682                           fsr2h	equ	0xFDA
  7683                           fsr2l	equ	0xFD9
  7684                           status	equ	0xFD8
  7685                           tblptru	equ	0xFF8
  7686                           tblptrh	equ	0xFF7
  7687                           tblptrl	equ	0xFF6
  7688                           tablat	equ	0xFF5
  7689                           prodh	equ	0xFF4
  7690                           prodl	equ	0xFF3
  7691                           postinc0	equ	0xFEE
  7692                           wreg	equ	0xFE8
  7693                           indf2	equ	0xFDF
  7694                           postinc2	equ	0xFDE
  7695                           postdec2	equ	0xFDD
  7696                           fsr2h	equ	0xFDA
  7697                           fsr2l	equ	0xFD9
  7698                           status	equ	0xFD8
  7699                           
  7700                           	psect	rparam
  7701  0000                     tblptru	equ	0xFF8
  7702                           tblptrh	equ	0xFF7
  7703                           tblptrl	equ	0xFF6
  7704                           tablat	equ	0xFF5
  7705                           prodh	equ	0xFF4
  7706                           prodl	equ	0xFF3
  7707                           postinc0	equ	0xFEE
  7708                           wreg	equ	0xFE8
  7709                           indf2	equ	0xFDF
  7710                           postinc2	equ	0xFDE
  7711                           postdec2	equ	0xFDD
  7712                           fsr2h	equ	0xFDA
  7713                           fsr2l	equ	0xFD9
  7714                           status	equ	0xFD8


Data Sizes:
    Strings     42
    Constant    144
    Data        4
    BSS         24
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     90      95
    BANK0           160     25      54
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    sp__utoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(COMRAM[6]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_2(CODE[8]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 8
		 -> str(BANK0[8]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(COMRAM[6]), 

    LCD_write_string@buffer	PTR unsigned char  size(2) Largest target is 8
		 -> str(BANK0[8]), LCD_write_integer@convertedInt(COMRAM[6]), 

    LCD_write_message@buffer	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_3(CODE[17]), STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    _ricarica->_sprintf
    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _LCD_write_string->_LCD_write_char
    _LCD_goto_line->_LCD_send_command
    _read_adc->___flmul
    ___xxtofl->___awdiv
    ___flmul->___awdiv
    ___awdiv->___awmod
    ___awdiv->___wmul
    _inizializzazione->_LCD_write_message
    _LCD_write_message->_LCD_write_char
    _LCD_write_char->_LCD_send_command
    _LCD_initialize->_LCD_cursor
    _LCD_cursor->_LCD_send_command
    _LCD_clear->_LCD_send_command
    _LCD_enable_pulse->_delay_ms
    _delay_ms->___wmul

Critical Paths under _main in BANK0

    _ricarica->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  103115
                            ___fldiv
                   _inizializzazione
                           _read_adc
                           _ricarica
 ---------------------------------------------------------------------------------
 (1) _ricarica                                             0     0      0   53810
                      _LCD_goto_line
                  _LCD_write_message
                   _LCD_write_string
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             43    35      8   30411
                                             80 COMRAM    10     2      8
                                              0 BANK0     25    25      0
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               13     9      4    7133
                                             39 COMRAM     9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              17    13      4    6935
                                             39 COMRAM    13     9      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         17     9      8     431
                                              0 COMRAM    17     9      8
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          14     6      8     431
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     543
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     418
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     421
                                             48 COMRAM    10     6      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    2617
                                             72 COMRAM     8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    2342
                                             52 COMRAM    20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     109
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     566
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) _LCD_write_string                                     2     0      2    7970
                                             17 COMRAM     2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (2) _LCD_goto_line                                        1     1      0    7459
                                             12 COMRAM     1     1      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (1) _read_adc                                             3     3      0    7720
                                             39 COMRAM     3     3      0
                            ___awdiv
                            ___flmul
                             ___wmul
                           ___xxtofl
                           _delay_ms
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     514
                                             14 COMRAM    14    10      4
                            ___awdiv (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    3488
                                             14 COMRAM    25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1708
                                              6 COMRAM     8     4      4
                            ___awmod (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _inizializzazione                                     0     0      0   40280
                          _LCD_clear
                     _LCD_initialize
                  _LCD_write_message
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _LCD_write_message                                    2     0      2    7970
                                             17 COMRAM     2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (3) _LCD_write_char                                       5     5      0    7797
                                             12 COMRAM     5     5      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_initialize                                       1     1      0   23668
                                             14 COMRAM     1     1      0
                          _LCD_clear
                         _LCD_cursor
                   _LCD_send_command
                           _delay_ms
                   _delay_set_quartz
 ---------------------------------------------------------------------------------
 (3) _delay_set_quartz                                     1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _LCD_cursor                                           2     1      1    7545
                                             12 COMRAM     2     1      1
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (3) _LCD_clear                                            0     0      0    7437
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (4) _LCD_send_command                                     4     1      3    7437
                                              8 COMRAM     4     1      3
                   _LCD_enable_pulse
 ---------------------------------------------------------------------------------
 (5) _LCD_enable_pulse                                     0     0      0    1205
                           _delay_ms
 ---------------------------------------------------------------------------------
 (6) _delay_ms                                             2     0      2    1205
                                              6 COMRAM     2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     671
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             25    17      8    1305
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___fldiv
   _inizializzazione
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _delay_ms
       ___wmul
   _read_adc
     ___awdiv
       ___awmod (ARG)
       ___wmul (ARG)
     ___flmul
       ___awdiv (ARG)
         ___awmod (ARG)
         ___wmul (ARG)
       ___awmod (ARG)
     ___wmul
     ___xxtofl
       ___awdiv (ARG)
         ___awmod (ARG)
         ___wmul (ARG)
       ___wmul (ARG)
     _delay_ms
       ___wmul
   _ricarica
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _LCD_write_string
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _sprintf
       ___awdiv
         ___awmod (ARG)
         ___wmul (ARG)
       ___fladd
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
             ___wmul (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
               ___wmul (ARG)
             ___awmod (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
         ___awmod (ARG)
       ___flneg
       ___flsub
         ___fladd
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
               ___wmul (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
                 ___wmul (ARG)
               ___awmod (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
       ___fltol
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
             ___wmul (ARG)
           ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
             ___wmul (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
               ___wmul (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
       ___wmul
       ___xxtofl
         ___awdiv (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
           ___wmul (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
             ___wmul (ARG)
           ___awmod (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
           ___wmul (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
             ___wmul (ARG)
           ___awmod (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     19      36       5       33.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5A      5F       1      100.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      95      20        0.0%
DATA                 0      0      95       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Sat Feb 27 22:40:59 2016

                  ___fldiv@aexp 0019                    ___fldiv@bexp 0018       __size_of_delay_set_quartz 0008  
                  ___fldiv@sign 000D                    ___awdiv@sign 000C                     __CFG_BOR$ON 000000  
           ___wmul@multiplicand 0003                     __CFG_BORV$3 000000                    __CFG_CP0$OFF 000000  
                  __CFG_CP1$OFF 000000                    __CFG_CP2$OFF 000000                    __CFG_CP3$OFF 000000  
                           l124 2D5E                             l162 20C2                             l246 0E5A  
                           l471 2590                             l481 2686                             l814 1CFC  
                           l575 2468                             l760 1962                             l664 2A64  
                           l568 23DA                             l825 1D68                             l569 2402  
                           l674 2BAA                             l844 1564                             l861 1800  
                           l853 177A                             l758 198C                             l775 1A7A  
                           l759 1984                             l880 22F0                             l784 1ADE  
                           l881 2304                             l873 22B4                             l866 2236  
                  __CFG_CPB$OFF 000000                    __CFG_CPD$OFF 000000                     ?_LCD_cursor 000D  
                           _str 0087                    ___awmod@sign 0006                             prod 000FF3  
                           wreg 000FE8                    __CFG_FOSC$HS 000000                    ___flmul@aexp 0020  
                  ___flmul@bexp 0021                    ___flmul@sign 001B                    ___flmul@temp 0026  
                  ___flmul@prod 0022                    __CFG_LVP$OFF 000000          __size_of_LCD_goto_line 00B8  
                  ___fltol@exp1 003A                    __CFG_WDT$OFF 000000                            l3002 2856  
                          l3100 2336                            l3020 28A6                            l3012 287E  
                          l3110 2908                            l3014 288A                            l3006 2866  
                          l3030 2A16                            l2304 2D52                            l3112 292E  
                          l3016 2890                            l3032 2A22                            l3200 0972  
                          l3122 2DDC                            l3106 28BC                            l3114 2954  
                          l3130 2E78                            l2410 1970                            l3042 2A56  
                          l3034 2A26                            l3050 2B68                            l3108 28E2  
                          l2412 1974                            l2332 1860                            l3052 2B74  
                          l3300 0D6E                            l3212 09B6                            l3204 0978  
                          l3118 2DC8                            l3126 2E66                            l2510 1B52  
                          l2502 1B30                            l3054 2B78                            l3310 0E10  
                          l3222 0A08                            l3206 099C                            l3080 229C  
                          l2512 1B54                            l2360 18AC                            l2336 1864  
                          l2610 1742                            l3074 2264                            l2506 1B4A  
                          l2434 19CC                            l2426 19A8                            l3058 2B9C  
                          l3330 0E8C                            l3322 0E5E                            l3250 0B36  
                          l2620 1776                            l2604 1724                            l3076 226A  
                          l3068 2246                            l3412 20A2                            l2436 19D0  
                          l2444 19E2                            l2356 18A8                            l3316 0E28  
                          l3308 0E02                            l3252 0B4C                            l2630 17BE  
                          l2534 1510                            l3086 22DA                            l3078 2276  
                          l3430 2132                            l2462 1A9E                            l2454 1A6A  
                          l3334 0EEE                            l3318 0E3C                            l3262 0BE8  
                          l3254 0B88                            l3246 0B08                            l3238 0A88  
                          l3190 0912                            l3182 08E2                            l2552 1550  
                          l2536 1514                            l3088 22E6                            l3416 20AA  
                          l2472 1AB4                            l2480 1AC2                            l2368 18CC  
                          l2720 2AC4                            l2712 2AA4                            l2704 2A8A  
                          l3360 102C                            l3352 0FF8                            l3344 0FD2  
                          l3280 0CF8                            l3256 0B9E                            l3176 08CA  
                          l3522 1CFA                            l2634 17DC                            l2562 1582  
                          l2554 1554                            l2538 1524                            l2714 2AAC  
                          l3346 0FE0                            l3282 0CFE                            l3266 0C16  
                          l3354 1006                            l3194 094C                            l3516 1CD4  
                          l3508 1CAC                            l2660 2984                            l2636 17EA  
                          l2716 2AB0                            l2724 2ACE                            l2708 2A96  
                          l2812 14BA                            l3372 10A0                            l3364 1050  
                          l3276 0C80                            l3196 0962                            l3534 1D30  
                          l3454 1B9C                            l2646 181E                            l2558 1570  
                          l2478 1ABE                            l2398 1908                            l2910 24F8  
                          l2806 1416                            l3294 0D44                            l3374 10A4  
                          l3560 1DDE                            l3544 1D64                            l3528 1D12  
                          l2672 29AA                            l2488 1ADA                            l2840 23A0  
                          l2728 2ADC                            l2824 2E9E                            l3368 107C  
                          l3376 10BE                            l3570 1E08                            l3562 1DFA  
                          l3554 1DAC                            l3490 1C26                            l3474 1BDC  
                          l3458 1BA0                            l2674 29B2                            l2666 2994  
                          l2498 1B24                            l2930 2556                            l2834 2374  
                          l3298 0D68                            l3650 2C0A                            l2692 29EA  
                          l2684 29D2                            l2676 29B6                            l2940 257E  
                          l3558 1DD0                            l3478 1BE0                            l2942 258A  
                          l2934 2566                            l2918 2528                            l2870 242E  
                          l2774 2050                            l2766 1F84                            l3568 1E06  
                          l2688 29DC                            l2880 2456                            l3498 1C4E  
                          l2962 2648                            l2954 25D6                            l2890 2498  
                          l2882 2462                            l2874 243E                            l2794 12B2  
                          l2788 120E                            l2958 260A                            l2798 12DC  
                          l2968 26BE                            l2976 2DB4                            l2896 24B6  
                          l2986 27FA                            STR_1 0891                            STR_2 08B3  
                          STR_3 08A2                            u2025 2D72                            u2026 2D74  
                          u2035 2D7C                            u2036 2D7E                            u2045 2D86  
                          _LATA 000F89                            u2046 2D88                            u2150 1938  
                          _LATB 000F8A                            u2055 2D90                            _LATC 000F8B  
                          u2056 2D92                            u2160 1948                            u2170 194A  
                          u3080 2818                            u2610 17CC                            u2530 16E6  
                          u4107 2D54                            u3085 280E                            u2535 16DC  
                          u3540 0E52                            u2851 2358                            u2871 2384  
                          u3880 1DBA                            _main 2BBC       __size_of_LCD_send_command 0030  
                          fsr2h 000FDA                            indf2 000FDF                            fsr2l 000FD9  
                          prodh 000FF4                            prodl 000FF3                            start 0000  
                 __CFG_IESO$OFF 000000                 ___fldiv@new_exp 0012              __size_of_LCD_clear 0026  
                  _sprintf$1027 0060                   __CFG_MCLRE$ON 000000                    ___param_bank 000010  
      __end_of_LCD_enable_pulse 2EC4         __size_of_LCD_initialize 011A                   __CFG_PLLDIV$1 000000  
                __CFG_CCP2MX$ON 000000                   ___fltol@sign1 0039                 __end_of___fladd 1B70  
                         ?_main 0001                 __end_of___fldiv 1E24                 __end_of___awdiv 29F4  
               __end_of___flneg 2DC6                 __end_of___awmod 2AE6                 __end_of___flmul 1834  
               __end_of___flsub 2CF2                 __end_of___fltol 28B8                 __end_of___lldiv 2A76  
               ___awdiv@divisor 0009                 __end_of___llmod 2BBC                 ___awdiv@counter 000B  
                 __CFG_USBDIV$1 000000                           _TRISA 000F92                           _TRISB 000F93  
                         _TRISC 000F94                   __CFG_PWRT$OFF 000000                   __CFG_WRT0$OFF 000000  
                 __CFG_WRT1$OFF 000000                   __CFG_WRT2$OFF 000000                   __CFG_WRT3$OFF 000000  
                __CFG_EBTR0$OFF 000000                  __CFG_FCMEN$OFF 000000                  __CFG_EBTR1$OFF 000000  
                __CFG_EBTR2$OFF 000000                  __CFG_EBTR3$OFF 000000                   __CFG_WRTB$OFF 000000  
                 __CFG_WRTC$OFF 000000                   __CFG_WRTD$OFF 000000                  __CFG_EBTRB$OFF 000000  
               __end_of_dpowers 0891                           _scale 10CC                 __end_of_isdigit 2EA6  
                         tablat 000FF5                           status 000FD8                 __end_of_sprintf 10CC  
              _inizializzazione 2C14                  __CFG_PBADEN$ON 000000             __size_of_LCD_cursor 0028  
               __initialization 2C62                    __end_of_main 2C14                   _LCD_goto_line 28B8  
             ?_LCD_write_string 0012                          ??_main 005B                   __activetblptr 000002  
            ??_LCD_write_string 0014            __size_of__tdiv_to_l_ 0132               __end_of_LCD_clear 2E3E  
        LCD_write_string@buffer 0012                          _ADCON0 000FC2                          _ADCON1 000FC1  
                        _ADCON2 000FC0                ___llmod@dividend 0001                          ?_scale 0028  
                        _ADRESH 000FC4                          _ADRESL 000FC3                ___awdiv@dividend 0007  
              __end_of___xxtofl 2348                __end_of_delay_ms 2D68                  __CFG_XINST$OFF 000000  
              __end_of__powers_ 0869                  ?_LCD_goto_line 0001                          ___flge 25A2  
                     ??___fladd 003D                _delay_set_quartz 2EC4                          ___wmul 2E3E  
                     ??___fldiv 0009                       ??___awdiv 000B                       ??___flneg 0005  
                __CFG_STVREN$ON 000000                       ??___awmod 0005                       ??___flmul 0017  
                     ??___flsub 0051                       ??___fltol 0035                       ??___lldiv 0009  
                     ??___llmod 0009         __size_of_LCD_write_char 0070                __end_of_read_adc 21F8  
                        _fround 1E24  LCD_initialize@quartz_frequency 000F                          clear_0 2C68  
              ___awdiv@quotient 000D                 ___awmod@divisor 0003                 ___awmod@counter 0005  
              __end_of_ricarica 2D36                    __pdataCOMRAM 005F                       ??_isdigit 0001  
                  __mediumconst 0000                          tblptrh 000FF7                          tblptrl 000FF6  
                        tblptru 000FF8                       ??_sprintf 0059                      ___flge@ff1 0001  
                    ___flge@ff2 0005                    ___xxtofl@arg 0019                    ___xxtofl@exp 0018  
                  ___xxtofl@val 000F                      __accesstop 0060         __end_of__initialization 2CA2  
                    ___flneg@f1 0001                _LCD_send_command 2D68                   ___rparam_used 000001  
                    ___fltol@f1 0031          LCD_write_integer@F3929 0079                  __pcstackCOMRAM 0001  
                  __pidataBANK0 2ECC                   __end_of_scale 14E4                  _LCD_initialize 26C2  
             _LCD_write_message 2DC6              ?_LCD_write_message 0012                      __div_to_l_ 247A  
                  ??_LCD_cursor 000E                 __div_to_l_@exp1 000E             ??_LCD_write_message 0014  
               __div_to_l_@cntr 000D                         ??_scale 002C                 __div_to_l_@quot 0009  
                    __pbssBANK0 0079                      __pnvCOMRAM 005B                   __div_to_l_@f1 0001  
                 __div_to_l_@f2 0005                 ??_LCD_goto_line 000D              __end_of_LCD_cursor 2E18  
        __end_of_LCD_initialize 27DC                         ?___flge 0001                         ?___wmul 0001  
     __end_of_LCD_write_message 2DF0               ?_LCD_enable_pulse 0001                         ?_fround 0028  
            ??_LCD_enable_pulse 0009        __end_of_inizializzazione 2C62                       ?___xxtofl 000F  
              LCD_cursor@active 000E                       ?_delay_ms 0007                 __CFG_VREGEN$OFF 000000  
                     ?_read_adc 0001                       ?_ricarica 0001               __end_of__npowers_ 0835  
                       __Hparam 0000                      _scale$1026 002C                         __Lparam 0000  
              delay_ms@value_ms 0007                 ?_LCD_initialize 0001                 __size_of___flge 0120  
                       ___fladd 1834                         ___fldiv 1B70                         ___awdiv 2970  
                       ___flneg 2D98                         ___awmod 2A76                         ___flmul 14E4  
                       ___flsub 2CAC                         ___fltol 27DC                         ___lldiv 29F4  
               __size_of___wmul 0026                  _LCD_write_char 2AE6                         ___llmod 2B56  
                  __psmallconst 0800                         __pcinit 2C62                 __size_of_fround 027A  
                       __ramtop 0800             LCD_write_char@value 0011                         __ptext0 2BBC  
                       __ptext1 2CF2                         __ptext2 08BC                         __ptext3 10CC  
                       __ptext4 2E88                         __ptext5 1E24                         __ptext6 2A76  
                       __ptext7 2348                         __ptext8 247A                         __ptext9 2B56  
                   ?__div_to_l_ 0001                LCD_write_char@D0 0010                LCD_write_char@D1 000F  
              LCD_write_char@D2 000E                LCD_write_char@D3 000D                         _dpowers 0869  
                       _current 007F                         _isdigit 2E88                      ??___xxtofl 0013  
              ___awmod@dividend 0001                         _lettura 005D                      ??_delay_ms 0009  
      __end_of_delay_set_quartz 2ECC                         _sprintf 08BC                         _voltage 0083  
                     _LCD_clear 2E18            end_of_initialization 2CA2       __size_of_LCD_write_string 0024  
                  _combinazioni 0093                   __Lmediumconst 0000                      ??_read_adc 0028  
                    ??_ricarica 005B                 ___lldiv@divisor 0005              LCD_cursor@blinking 000D  
               ___lldiv@counter 000D          __end_of_LCD_write_char 2B56                         postdec2 000FDD  
                       postinc0 000FEE                         postinc2 000FDE      __size_of_LCD_write_message 002A  
                __tdiv_to_l_@f1 0001                  __tdiv_to_l_@f2 0005                   ??__tdiv_to_l_ 0009  
      __end_of_LCD_send_command 2D98                     ___fladd@grs 0048                   ___xxtofl@sign 0017  
                   ___fldiv@grs 0014                     ___fldiv@rem 000E                      ?_LCD_clear 0001  
       _clock_counter_reference 005B                     ___flmul@grs 001C             __size_of__div_to_l_ 0128  
               ?_LCD_write_char 0001                  __end_of___flge 26C2                  __end_of___wmul 2E64  
                 __pidataCOMRAM 2ECF                  __end_of_fround 209E             start_initialization 2C62  
           __end_of__tdiv_to_l_ 247A                 ___llmod@divisor 0005                 ___llmod@counter 0009  
                      ??___flge 0009                        ??___wmul 0005                     __pdataBANK0 0093  
              __CFG_LPT1OSC$OFF 000000                        ??_fround 002C                   sprintf@tmpval 006E  
                     ___fladd@a 0039                       ___fladd@b 0035                      fround@prec 0034  
                     ___fldiv@a 0005                       ___fldiv@b 0001               ?_inizializzazione 0001  
                     ___flmul@a 0013                       ___flmul@b 000F                     __pbssCOMRAM 005D  
                     ___flsub@a 004D                       ___flsub@b 0049                   __pcstackBANK0 0060  
            ??_inizializzazione 0014               __size_of___xxtofl 0150       __size_of_LCD_enable_pulse 001E  
             __size_of_delay_ms 0032                     ??_LCD_clear 000D         LCD_write_message@buffer 0012  
              _LCD_write_string 2E64                     sprintf@flag 0066                     sprintf@fval 0074  
                   sprintf@prec 0072                ??_LCD_initialize 000F                       __pnvBANK0 008F  
     delay_set_quartz@frequency 0001               __size_of_read_adc 015A              LCD_send_command@D0 000B  
            LCD_send_command@D1 000A              LCD_send_command@D2 0009              LCD_send_command@D3 000C  
         __end_of_LCD_goto_line 2970               __size_of_ricarica 0044                        ?___fladd 0035  
                      ?___fldiv 0001                        ?___awdiv 0007                        ?___flneg 0001  
                      ?___awmod 0001                        ?___flmul 000F                        ?___flsub 0049  
                      ?___fltol 0031                        ?___lldiv 0001                        ?___llmod 0001  
                     __npowers_ 0801                     __tdiv_to_l_ 2348                    ??__div_to_l_ 0009  
                   __smallconst 0800                        ?_isdigit 0001                        ?_sprintf 0051  
                __size_of_scale 0418               ?_delay_set_quartz 0001              ??_delay_set_quartz 0001  
                ___wmul@product 0005                        _LATBbits 000F8A                        _LATCbits 000F8B  
  _delay_quartz_frequency_value 005F              __end_of__div_to_l_ 25A2                __CFG_WDTPS$32768 000000  
                    _ADCON0bits 000FC2               ___wmul@multiplier 0001               ?_LCD_send_command 0009  
            ??_LCD_send_command 000C                ??_LCD_write_char 000D               LCD_goto_line@line 000D  
                      __Hrparam 0000                        __Lrparam 0000                       read_adc@i 002A  
              __size_of___fladd 033C                __size_of___fldiv 02B4                __size_of___awdiv 0084  
              __size_of___flneg 002E                __size_of___awmod 0070                __size_of___flmul 0350  
              __size_of___flsub 0046                __size_of___fltol 00DC                __size_of___lldiv 0082  
              __size_of___llmod 0066                     _fround$1024 0030                     _fround$1025 002C  
                   _isdigit$651 0002                      sprintf@exp 006C                      sprintf@val 0068  
                      ___xxtofl 21F8                __size_of_isdigit 001E                        _delay_ms 2D36  
              _LCD_enable_pulse 2EA6                        __ptext10 29F4                        __ptext11 27DC  
                      __ptext20 14E4                        __ptext12 2CAC                        __ptext21 2970  
                      __ptext13 1834                        __ptext30 2EA6                        __ptext22 2C14  
                      __ptext14 2D98                        __ptext31 2D36                        __ptext23 2DC6  
                      __ptext15 25A2                        __ptext32 2E3E                        __ptext24 2AE6  
                      __ptext16 2E64                        __ptext33 1B70                        __ptext25 26C2  
                      __ptext17 28B8                        __ptext26 2EC4                        __ptext18 209E  
                      __ptext27 2DF0                        __ptext19 21F8                        __ptext28 2E18  
                      __ptext29 2D68                        __powers_ 0835                __size_of_sprintf 0810  
                      _read_adc 209E                   __size_of_main 0058                        _ricarica 2CF2  
                      _rapporto 008F        __end_of_LCD_write_string 2E88           __CFG_CPUDIV$OSC1_PLL2 000000  
                    _LCD_cursor 2DF0                        isdigit@c 0003                        scale@scl 0030  
                     sprintf@ap 0064                __tdiv_to_l_@exp1 0011                       sprintf@sp 0051  
              __tdiv_to_l_@cntr 0010                __tdiv_to_l_@quot 000C                ___lldiv@dividend 0001  
     __size_of_inizializzazione 004E                    ?__tdiv_to_l_ 0001                        sprintf@c 0078  
                      sprintf@f 0053                ___lldiv@quotient 0009                   ___fladd@signs 0045  
                  ___fladd@aexp 0046                    ___fladd@bexp 0047  
