

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sun Feb 28 14:29:20 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    51                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    52  0000                     
    53                           	psect	idataCOMRAM
    54  0030E3                     __pidataCOMRAM:
    55                           	opt stack 0
    56                           
    57                           ;initializer for _delay_quartz_frequency_value
    58  0030E3  14                 	db	20
    59                           
    60                           	psect	idataBANK0
    61  0030E0                     __pidataBANK0:
    62                           	opt stack 0
    63                           
    64                           ;initializer for _combinazioni
    65  0030E0  01                 	db	1
    66  0030E1  05                 	db	5
    67  0030E2  0D                 	db	13
    68                           
    69                           	psect	smallconst
    70  000800                     __psmallconst:
    71                           	opt stack 0
    72  000800  00                 	db	0
    73  000801                     __npowers_:
    74                           	opt stack 0
    75  000801  0000               	dw	0
    76  000803  3F80               	dw	16256
    77  000805  CCCD               	dw	52429
    78  000807  3DCC               	dw	15820
    79  000809  D70A               	dw	55050
    80  00080B  3C23               	dw	15395
    81  00080D  126F               	dw	4719
    82  00080F  3A83               	dw	14979
    83  000811  B717               	dw	46871
    84  000813  38D1               	dw	14545
    85  000815  C5AC               	dw	50604
    86  000817  3727               	dw	14119
    87  000819  37BD               	dw	14269
    88  00081B  3586               	dw	13702
    89  00081D  BF95               	dw	49045
    90  00081F  33D6               	dw	13270
    91  000821  CC77               	dw	52343
    92  000823  322B               	dw	12843
    93  000825  705F               	dw	28767
    94  000827  3089               	dw	12425
    95  000829  E6FF               	dw	59135
    96  00082B  2EDB               	dw	11995
    97  00082D  E508               	dw	58632
    98  00082F  1E3C               	dw	7740
    99  000831  4260               	dw	16992
   100  000833  0DA2               	dw	3490
   101  000835                     __end_of__npowers_:
   102                           	opt stack 0
   103  000835                     __powers_:
   104                           	opt stack 0
   105  000835  0000               	dw	0
   106  000837  3F80               	dw	16256
   107  000839  0000               	dw	0
   108  00083B  4120               	dw	16672
   109  00083D  0000               	dw	0
   110  00083F  42C8               	dw	17096
   111  000841  0000               	dw	0
   112  000843  447A               	dw	17530
   113  000845  4000               	dw	16384
   114  000847  461C               	dw	17948
   115  000849  5000               	dw	20480
   116  00084B  47C3               	dw	18371
   117  00084D  2400               	dw	9216
   118  00084F  4974               	dw	18804
   119  000851  9680               	dw	38528
   120  000853  4B18               	dw	19224
   121  000855  BC20               	dw	48160
   122  000857  4CBE               	dw	19646
   123  000859  6B28               	dw	27432
   124  00085B  4E6E               	dw	20078
   125  00085D  02F9               	dw	761
   126  00085F  5015               	dw	20501
   127  000861  78EC               	dw	30956
   128  000863  60AD               	dw	24749
   129  000865  F2CA               	dw	62154
   130  000867  7149               	dw	29001
   131  000869                     __end_of__powers_:
   132                           	opt stack 0
   133  000869                     _dpowers:
   134                           	opt stack 0
   135  000869  0001               	dw	1
   136  00086B  0000               	dw	0
   137  00086D  000A               	dw	10
   138  00086F  0000               	dw	0
   139  000871  0064               	dw	100
   140  000873  0000               	dw	0
   141  000875  03E8               	dw	1000
   142  000877  0000               	dw	0
   143  000879  2710               	dw	10000
   144  00087B  0000               	dw	0
   145  00087D  86A0               	dw	34464
   146  00087F  0001               	dw	1
   147  000881  4240               	dw	16960
   148  000883  000F               	dw	15
   149  000885  9680               	dw	38528
   150  000887  0098               	dw	152
   151  000889  E100               	dw	57600
   152  00088B  05F5               	dw	1525
   153  00088D  CA00               	dw	51712
   154  00088F  3B9A               	dw	15258
   155  000891                     __end_of_dpowers:
   156                           	opt stack 0
   157  000891                     STR_1:
   158  000891  43                 	db	67	;'C'
   159  000892  69                 	db	105	;'i'
   160  000893  63                 	db	99	;'c'
   161  000894  6C                 	db	108	;'l'
   162  000895  6F                 	db	111	;'o'
   163  000896  20                 	db	32
   164  000897  72                 	db	114	;'r'
   165  000898  69                 	db	105	;'i'
   166  000899  63                 	db	99	;'c'
   167  00089A  61                 	db	97	;'a'
   168  00089B  72                 	db	114	;'r'
   169  00089C  69                 	db	105	;'i'
   170  00089D  63                 	db	99	;'c'
   171  00089E  61                 	db	97	;'a'
   172  00089F  2E                 	db	46
   173  0008A0  2E                 	db	46
   174  0008A1  00                 	db	0
   175  0008A2                     STR_4:
   176  0008A2  43                 	db	67	;'C'
   177  0008A3  61                 	db	97	;'a'
   178  0008A4  72                 	db	114	;'r'
   179  0008A5  69                 	db	105	;'i'
   180  0008A6  63                 	db	99	;'c'
   181  0008A7  61                 	db	97	;'a'
   182  0008A8  20                 	db	32
   183  0008A9  74                 	db	116	;'t'
   184  0008AA  65                 	db	101	;'e'
   185  0008AB  72                 	db	114	;'r'
   186  0008AC  6D                 	db	109	;'m'
   187  0008AD  69                 	db	105	;'i'
   188  0008AE  6E                 	db	110	;'n'
   189  0008AF  61                 	db	97	;'a'
   190  0008B0  74                 	db	116	;'t'
   191  0008B1  61                 	db	97	;'a'
   192  0008B2  00                 	db	0
   193  0008B3                     STR_3:
   194  0008B3  20                 	db	32
   195  0008B4  49                 	db	73	;'I'
   196  0008B5  3A                 	db	58	;':'
   197  0008B6  25                 	db	37
   198  0008B7  2E                 	db	46
   199  0008B8  33                 	db	51	;'3'
   200  0008B9  66                 	db	102	;'f'
   201  0008BA  00                 	db	0
   202  0008BB                     STR_5:
   203  0008BB  63                 	db	99	;'c'
   204  0008BC  69                 	db	105	;'i'
   205  0008BD  61                 	db	97	;'a'
   206  0008BE  6F                 	db	111	;'o'
   207  0008BF  6E                 	db	110	;'n'
   208  0008C0  65                 	db	101	;'e'
   209  0008C1  00                 	db	0
   210  0008C2                     STR_2:
   211  0008C2  56                 	db	86	;'V'
   212  0008C3  3A                 	db	58	;':'
   213  0008C4  25                 	db	37
   214  0008C5  2E                 	db	46
   215  0008C6  33                 	db	51	;'3'
   216  0008C7  66                 	db	102	;'f'
   217  0008C8  00                 	db	0
   218                           
   219                           ; #config settings
   220  0008C9  00                 	db	0	; dummy byte at the end
   221  0000                     
   222                           	psect	nvBANK0
   223  000091                     __pnvBANK0:
   224                           	opt stack 0
   225  000091                     _clock_counter_reference:
   226                           	opt stack 0
   227  000091                     	ds	2
   228  000093                     _rapporto:
   229                           	opt stack 0
   230  000093                     	ds	4
   231  0000                     _ADCON0	set	4034
   232  0000                     _ADCON0bits	set	4034
   233  0000                     _ADCON1	set	4033
   234  0000                     _ADCON2	set	4032
   235  0000                     _ADRESH	set	4036
   236  0000                     _ADRESL	set	4035
   237  0000                     _LATA	set	3977
   238  0000                     _LATB	set	3978
   239  0000                     _LATBbits	set	3978
   240  0000                     _LATC	set	3979
   241  0000                     _LATCbits	set	3979
   242  0000                     _PORTCbits	set	3970
   243  0000                     _TRISA	set	3986
   244  0000                     _TRISB	set	3987
   245  0000                     _TRISC	set	3988
   246                           
   247                           	psect	cinit
   248  002E66                     __pcinit:
   249                           	opt stack 0
   250  002E66                     start_initialization:
   251                           	opt stack 0
   252  002E66                     __initialization:
   253                           	opt stack 0
   254                           
   255                           ; Clear objects allocated to BANK0 (24 bytes)
   256  002E66  EE00  F079         	lfsr	0,__pbssBANK0
   257  002E6A  0E18               	movlw	24
   258  002E6C                     clear_0:
   259  002E6C  6AEE               	clrf	postinc0,c
   260  002E6E  06E8               	decf	wreg,f,c
   261  002E70  E1FD               	bnz	clear_0
   262                           
   263                           ; Clear objects allocated to COMRAM (4 bytes)
   264  002E72  6A5E               	clrf	(__pbssCOMRAM+3)& (0+255),c
   265  002E74  6A5D               	clrf	(__pbssCOMRAM+2)& (0+255),c
   266  002E76  6A5C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   267  002E78  6A5B               	clrf	__pbssCOMRAM& (0+255),c
   268                           
   269                           ; Initialize objects allocated to BANK0 (3 bytes)
   270                           ; load TBLPTR registers with __pidataBANK0
   271  002E7A  0EE0               	movlw	low __pidataBANK0
   272  002E7C  6EF6               	movwf	tblptrl,c
   273  002E7E  0E30               	movlw	high __pidataBANK0
   274  002E80  6EF7               	movwf	tblptrh,c
   275  002E82  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   276  002E84  6EF8               	movwf	tblptru,c
   277  002E86  0009               	tblrd		*+	;fetch initializer
   278  002E88  CFF5 F097          	movff	tablat,__pdataBANK0
   279  002E8C  0009               	tblrd		*+	;fetch initializer
   280  002E8E  CFF5 F098          	movff	tablat,__pdataBANK0+1
   281  002E92  0009               	tblrd		*+	;fetch initializer
   282  002E94  CFF5 F099          	movff	tablat,__pdataBANK0+2
   283                           
   284                           ; Initialize objects allocated to COMRAM (1 bytes)
   285                           ; load TBLPTR registers with __pidataCOMRAM
   286  002E98  0EE3               	movlw	low __pidataCOMRAM
   287  002E9A  6EF6               	movwf	tblptrl,c
   288  002E9C  0E30               	movlw	high __pidataCOMRAM
   289  002E9E  6EF7               	movwf	tblptrh,c
   290  002EA0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   291  002EA2  6EF8               	movwf	tblptru,c
   292  002EA4  0009               	tblrd		*+	;fetch initializer
   293  002EA6  CFF5 F05F          	movff	tablat,__pdataCOMRAM
   294  002EAA                     end_of_initialization:
   295                           	opt stack 0
   296  002EAA                     __end_of__initialization:
   297                           	opt stack 0
   298  002EAA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   299  002EAC  6EF8               	movwf	tblptru,c
   300  002EAE  0100               	movlb	0
   301  002EB0  EF04  F017         	goto	_main	;jump to C main() function
   302                           tblptru	equ	0xFF8
   303                           tblptrh	equ	0xFF7
   304                           tblptrl	equ	0xFF6
   305                           tablat	equ	0xFF5
   306                           postinc0	equ	0xFEE
   307                           wreg	equ	0xFE8
   308                           
   309                           	psect	bssCOMRAM
   310  00005B                     __pbssCOMRAM:
   311                           	opt stack 0
   312  00005B                     _current:
   313                           	opt stack 0
   314  00005B                     	ds	4
   315                           tblptru	equ	0xFF8
   316                           tblptrh	equ	0xFF7
   317                           tblptrl	equ	0xFF6
   318                           tablat	equ	0xFF5
   319                           postinc0	equ	0xFEE
   320                           wreg	equ	0xFE8
   321                           
   322                           	psect	dataCOMRAM
   323  00005F                     __pdataCOMRAM:
   324                           	opt stack 0
   325  00005F                     _delay_quartz_frequency_value:
   326                           	opt stack 0
   327  00005F                     	ds	1
   328                           tblptru	equ	0xFF8
   329                           tblptrh	equ	0xFF7
   330                           tblptrl	equ	0xFF6
   331                           tablat	equ	0xFF5
   332                           postinc0	equ	0xFEE
   333                           wreg	equ	0xFE8
   334                           
   335                           	psect	bssBANK0
   336  000079                     __pbssBANK0:
   337                           	opt stack 0
   338  000079                     LCD_write_integer@F4919:
   339                           	opt stack 0
   340  000079                     	ds	6
   341  00007F                     _lettura:
   342                           	opt stack 0
   343  00007F                     	ds	6
   344  000085                     _voltage:
   345                           	opt stack 0
   346  000085                     	ds	4
   347  000089                     _str:
   348                           	opt stack 0
   349  000089                     	ds	8
   350                           tblptru	equ	0xFF8
   351                           tblptrh	equ	0xFF7
   352                           tblptrl	equ	0xFF6
   353                           tablat	equ	0xFF5
   354                           postinc0	equ	0xFEE
   355                           wreg	equ	0xFE8
   356                           
   357                           	psect	dataBANK0
   358  000097                     __pdataBANK0:
   359                           	opt stack 0
   360  000097                     _combinazioni:
   361                           	opt stack 0
   362  000097                     	ds	3
   363                           tblptru	equ	0xFF8
   364                           tblptrh	equ	0xFF7
   365                           tblptrl	equ	0xFF6
   366                           tablat	equ	0xFF5
   367                           postinc0	equ	0xFEE
   368                           wreg	equ	0xFE8
   369                           
   370                           	psect	cstackBANK0
   371  000060                     __pcstackBANK0:
   372                           	opt stack 0
   373  000060                     _sprintf$1144:
   374                           	opt stack 0
   375                           
   376                           ; 4 bytes @ 0x0
   377  000060                     	ds	4
   378  000064                     sprintf@ap:
   379                           	opt stack 0
   380                           
   381                           ; 2 bytes @ 0x4
   382  000064                     	ds	2
   383  000066                     sprintf@flag:
   384                           	opt stack 0
   385                           
   386                           ; 2 bytes @ 0x6
   387  000066                     	ds	2
   388  000068                     sprintf@val:
   389                           	opt stack 0
   390                           
   391                           ; 4 bytes @ 0x8
   392  000068                     	ds	4
   393  00006C                     sprintf@exp:
   394                           	opt stack 0
   395                           
   396                           ; 2 bytes @ 0xC
   397  00006C                     	ds	2
   398  00006E                     sprintf@tmpval:
   399                           	opt stack 0
   400                           
   401                           ; 4 bytes @ 0xE
   402  00006E                     	ds	4
   403  000072                     sprintf@prec:
   404                           	opt stack 0
   405                           
   406                           ; 2 bytes @ 0x12
   407  000072                     	ds	2
   408  000074                     sprintf@fval:
   409                           	opt stack 0
   410                           
   411                           ; 4 bytes @ 0x14
   412  000074                     	ds	4
   413  000078                     sprintf@c:
   414                           	opt stack 0
   415                           
   416                           ; 1 bytes @ 0x18
   417  000078                     	ds	1
   418                           tblptru	equ	0xFF8
   419                           tblptrh	equ	0xFF7
   420                           tblptrl	equ	0xFF6
   421                           tablat	equ	0xFF5
   422                           postinc0	equ	0xFEE
   423                           wreg	equ	0xFE8
   424                           
   425                           	psect	cstackCOMRAM
   426  000001                     __pcstackCOMRAM:
   427                           	opt stack 0
   428  000001                     ??_isdigit:
   429  000001                     ?___wmul:
   430                           	opt stack 0
   431  000001                     ?___awmod:
   432                           	opt stack 0
   433  000001                     ?__tdiv_to_l_:
   434                           	opt stack 0
   435  000001                     ?__div_to_l_:
   436                           	opt stack 0
   437  000001                     ?___flneg:
   438                           	opt stack 0
   439  000001                     ?___lldiv:
   440                           	opt stack 0
   441  000001                     ?___llmod:
   442                           	opt stack 0
   443  000001                     ?___xxtofl:
   444                           	opt stack 0
   445  000001                     delay_set_quartz@frequency:
   446                           	opt stack 0
   447  000001                     ___wmul@multiplier:
   448                           	opt stack 0
   449  000001                     ___awmod@dividend:
   450                           	opt stack 0
   451  000001                     __div_to_l_@f1:
   452                           	opt stack 0
   453  000001                     ___flge@ff1:
   454                           	opt stack 0
   455  000001                     ___flneg@f1:
   456                           	opt stack 0
   457  000001                     __tdiv_to_l_@f1:
   458                           	opt stack 0
   459  000001                     ___lldiv@dividend:
   460                           	opt stack 0
   461  000001                     ___llmod@dividend:
   462                           	opt stack 0
   463  000001                     ___xxtofl@val:
   464                           	opt stack 0
   465                           
   466                           ; 4 bytes @ 0x0
   467  000001                     	ds	1
   468  000002                     _isdigit$768:
   469                           	opt stack 0
   470                           
   471                           ; 1 bytes @ 0x1
   472  000002                     	ds	1
   473  000003                     isdigit@c:
   474                           	opt stack 0
   475  000003                     ___wmul@multiplicand:
   476                           	opt stack 0
   477  000003                     ___awmod@divisor:
   478                           	opt stack 0
   479                           
   480                           ; 2 bytes @ 0x2
   481  000003                     	ds	2
   482  000005                     ??___xxtofl:
   483  000005                     ___awmod@counter:
   484                           	opt stack 0
   485  000005                     ___wmul@product:
   486                           	opt stack 0
   487  000005                     __div_to_l_@f2:
   488                           	opt stack 0
   489  000005                     ___flge@ff2:
   490                           	opt stack 0
   491  000005                     __tdiv_to_l_@f2:
   492                           	opt stack 0
   493  000005                     ___lldiv@divisor:
   494                           	opt stack 0
   495  000005                     ___llmod@divisor:
   496                           	opt stack 0
   497                           
   498                           ; 4 bytes @ 0x4
   499  000005                     	ds	1
   500  000006                     ___awmod@sign:
   501                           	opt stack 0
   502                           
   503                           ; 1 bytes @ 0x5
   504  000006                     	ds	1
   505  000007                     ?___awdiv:
   506                           	opt stack 0
   507  000007                     delay_ms@value_ms:
   508                           	opt stack 0
   509  000007                     ___awdiv@dividend:
   510                           	opt stack 0
   511                           
   512                           ; 2 bytes @ 0x6
   513  000007                     	ds	2
   514  000009                     ??__tdiv_to_l_:
   515  000009                     ??___flge:
   516  000009                     LCD_send_command@D2:
   517                           	opt stack 0
   518  000009                     ___llmod@counter:
   519                           	opt stack 0
   520  000009                     ___xxtofl@sign:
   521                           	opt stack 0
   522  000009                     ___awdiv@divisor:
   523                           	opt stack 0
   524  000009                     __div_to_l_@quot:
   525                           	opt stack 0
   526  000009                     ___lldiv@quotient:
   527                           	opt stack 0
   528                           
   529                           ; 4 bytes @ 0x8
   530  000009                     	ds	1
   531  00000A                     LCD_send_command@D1:
   532                           	opt stack 0
   533  00000A                     ___xxtofl@exp:
   534                           	opt stack 0
   535                           
   536                           ; 1 bytes @ 0x9
   537  00000A                     	ds	1
   538  00000B                     LCD_send_command@D0:
   539                           	opt stack 0
   540  00000B                     ___awdiv@counter:
   541                           	opt stack 0
   542  00000B                     ___xxtofl@arg:
   543                           	opt stack 0
   544                           
   545                           ; 4 bytes @ 0xA
   546  00000B                     	ds	1
   547  00000C                     LCD_send_command@D3:
   548                           	opt stack 0
   549  00000C                     ___awdiv@sign:
   550                           	opt stack 0
   551  00000C                     __tdiv_to_l_@quot:
   552                           	opt stack 0
   553                           
   554                           ; 4 bytes @ 0xB
   555  00000C                     	ds	1
   556  00000D                     LCD_goto_line@line:
   557                           	opt stack 0
   558  00000D                     LCD_write_char@D3:
   559                           	opt stack 0
   560  00000D                     LCD_cursor@blinking:
   561                           	opt stack 0
   562  00000D                     __div_to_l_@cntr:
   563                           	opt stack 0
   564  00000D                     ___lldiv@counter:
   565                           	opt stack 0
   566  00000D                     ___awdiv@quotient:
   567                           	opt stack 0
   568                           
   569                           ; 2 bytes @ 0xC
   570  00000D                     	ds	1
   571  00000E                     LCD_write_char@D2:
   572                           	opt stack 0
   573  00000E                     LCD_cursor@active:
   574                           	opt stack 0
   575  00000E                     __div_to_l_@exp1:
   576                           	opt stack 0
   577                           
   578                           ; 1 bytes @ 0xD
   579  00000E                     	ds	1
   580  00000F                     ?___flmul:
   581                           	opt stack 0
   582  00000F                     LCD_write_char@D1:
   583                           	opt stack 0
   584  00000F                     LCD_initialize@quartz_frequency:
   585                           	opt stack 0
   586  00000F                     ___flmul@b:
   587                           	opt stack 0
   588                           
   589                           ; 4 bytes @ 0xE
   590  00000F                     	ds	1
   591  000010                     LCD_write_char@D0:
   592                           	opt stack 0
   593  000010                     __tdiv_to_l_@cntr:
   594                           	opt stack 0
   595                           
   596                           ; 1 bytes @ 0xF
   597  000010                     	ds	1
   598  000011                     LCD_write_char@value:
   599                           	opt stack 0
   600  000011                     __tdiv_to_l_@exp1:
   601                           	opt stack 0
   602                           
   603                           ; 1 bytes @ 0x10
   604  000011                     	ds	1
   605  000012                     LCD_write_message@buffer:
   606                           	opt stack 0
   607  000012                     LCD_write_string@buffer:
   608                           	opt stack 0
   609                           
   610                           ; 2 bytes @ 0x11
   611  000012                     	ds	1
   612  000013                     ___flmul@a:
   613                           	opt stack 0
   614                           
   615                           ; 4 bytes @ 0x12
   616  000013                     	ds	1
   617  000014                     
   618                           ; 0 bytes @ 0x13
   619  000014                     	ds	3
   620  000017                     ??___flmul:
   621                           
   622                           ; 0 bytes @ 0x16
   623  000017                     	ds	4
   624  00001B                     ___flmul@sign:
   625                           	opt stack 0
   626                           
   627                           ; 1 bytes @ 0x1A
   628  00001B                     	ds	1
   629  00001C                     ___flmul@grs:
   630                           	opt stack 0
   631                           
   632                           ; 4 bytes @ 0x1B
   633  00001C                     	ds	4
   634  000020                     ___flmul@aexp:
   635                           	opt stack 0
   636                           
   637                           ; 1 bytes @ 0x1F
   638  000020                     	ds	1
   639  000021                     ___flmul@bexp:
   640                           	opt stack 0
   641                           
   642                           ; 1 bytes @ 0x20
   643  000021                     	ds	1
   644  000022                     ___flmul@prod:
   645                           	opt stack 0
   646                           
   647                           ; 4 bytes @ 0x21
   648  000022                     	ds	4
   649  000026                     ___flmul@temp:
   650                           	opt stack 0
   651                           
   652                           ; 2 bytes @ 0x25
   653  000026                     	ds	2
   654  000028                     ?___fldiv:
   655                           	opt stack 0
   656  000028                     ?_fround:
   657                           	opt stack 0
   658  000028                     ?_scale:
   659                           	opt stack 0
   660  000028                     ___fldiv@b:
   661                           	opt stack 0
   662                           
   663                           ; 4 bytes @ 0x27
   664  000028                     	ds	4
   665  00002C                     ___fldiv@a:
   666                           	opt stack 0
   667  00002C                     _fround$1142:
   668                           	opt stack 0
   669  00002C                     _scale$1143:
   670                           	opt stack 0
   671                           
   672                           ; 4 bytes @ 0x2B
   673  00002C                     	ds	4
   674  000030                     ??___fldiv:
   675  000030                     scale@scl:
   676                           	opt stack 0
   677  000030                     _fround$1141:
   678                           	opt stack 0
   679                           
   680                           ; 4 bytes @ 0x2F
   681  000030                     	ds	1
   682  000031                     ?___fltol:
   683                           	opt stack 0
   684  000031                     ___fltol@f1:
   685                           	opt stack 0
   686                           
   687                           ; 4 bytes @ 0x30
   688  000031                     	ds	3
   689  000034                     fround@prec:
   690                           	opt stack 0
   691  000034                     ___fldiv@sign:
   692                           	opt stack 0
   693                           
   694                           ; 1 bytes @ 0x33
   695  000034                     	ds	1
   696  000035                     ??___fltol:
   697  000035                     ?___fladd:
   698                           	opt stack 0
   699  000035                     ___fladd@b:
   700                           	opt stack 0
   701  000035                     ___fldiv@rem:
   702                           	opt stack 0
   703                           
   704                           ; 4 bytes @ 0x34
   705  000035                     	ds	4
   706  000039                     ___fltol@sign1:
   707                           	opt stack 0
   708  000039                     ___fldiv@new_exp:
   709                           	opt stack 0
   710  000039                     ___fladd@a:
   711                           	opt stack 0
   712                           
   713                           ; 4 bytes @ 0x38
   714  000039                     	ds	1
   715  00003A                     ___fltol@exp1:
   716                           	opt stack 0
   717                           
   718                           ; 1 bytes @ 0x39
   719  00003A                     	ds	1
   720  00003B                     ___fldiv@grs:
   721                           	opt stack 0
   722                           
   723                           ; 4 bytes @ 0x3A
   724  00003B                     	ds	2
   725  00003D                     ??___fladd:
   726                           
   727                           ; 0 bytes @ 0x3C
   728  00003D                     	ds	2
   729  00003F                     ___fldiv@bexp:
   730                           	opt stack 0
   731                           
   732                           ; 1 bytes @ 0x3E
   733  00003F                     	ds	1
   734  000040                     ___fldiv@aexp:
   735                           	opt stack 0
   736                           
   737                           ; 1 bytes @ 0x3F
   738  000040                     	ds	1
   739  000041                     ??_read_adc:
   740                           
   741                           ; 0 bytes @ 0x40
   742  000041                     	ds	2
   743  000043                     read_adc@i:
   744                           	opt stack 0
   745                           
   746                           ; 1 bytes @ 0x42
   747  000043                     	ds	2
   748  000045                     ___fladd@signs:
   749                           	opt stack 0
   750                           
   751                           ; 1 bytes @ 0x44
   752  000045                     	ds	1
   753  000046                     ___fladd@aexp:
   754                           	opt stack 0
   755                           
   756                           ; 1 bytes @ 0x45
   757  000046                     	ds	1
   758  000047                     ___fladd@bexp:
   759                           	opt stack 0
   760                           
   761                           ; 1 bytes @ 0x46
   762  000047                     	ds	1
   763  000048                     ___fladd@grs:
   764                           	opt stack 0
   765                           
   766                           ; 1 bytes @ 0x47
   767  000048                     	ds	1
   768  000049                     ?___flsub:
   769                           	opt stack 0
   770  000049                     ___flsub@b:
   771                           	opt stack 0
   772                           
   773                           ; 4 bytes @ 0x48
   774  000049                     	ds	4
   775  00004D                     ___flsub@a:
   776                           	opt stack 0
   777                           
   778                           ; 4 bytes @ 0x4C
   779  00004D                     	ds	4
   780  000051                     ?_sprintf:
   781                           	opt stack 0
   782  000051                     sprintf@sp:
   783                           	opt stack 0
   784                           
   785                           ; 2 bytes @ 0x50
   786  000051                     	ds	2
   787  000053                     sprintf@f:
   788                           	opt stack 0
   789                           
   790                           ; 2 bytes @ 0x52
   791  000053                     	ds	6
   792  000059                     ??_sprintf:
   793                           
   794                           ; 0 bytes @ 0x58
   795  000059                     	ds	2
   796  00005B                     tblptru	equ	0xFF8
   797                           tblptrh	equ	0xFF7
   798                           tblptrl	equ	0xFF6
   799                           tablat	equ	0xFF5
   800                           postinc0	equ	0xFEE
   801                           wreg	equ	0xFE8
   802                           
   803                           ; 0 bytes @ 0x5A
   804 ;;
   805 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   806 ;;
   807 ;; *************** function _main *****************
   808 ;; Defined at:
   809 ;;		line 47 in file "tester.c"
   810 ;; Parameters:    Size  Location     Type
   811 ;;		None
   812 ;; Auto vars:     Size  Location     Type
   813 ;;		None
   814 ;; Return value:  Size  Location     Type
   815 ;;		None               void
   816 ;; Registers used:
   817 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   818 ;; Tracked objects:
   819 ;;		On entry : 0/0
   820 ;;		On exit  : 0/0
   821 ;;		Unchanged: 0/0
   822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   823 ;;      Params:         0       0       0       0       0       0       0       0       0
   824 ;;      Locals:         0       0       0       0       0       0       0       0       0
   825 ;;      Temps:          0       0       0       0       0       0       0       0       0
   826 ;;      Totals:         0       0       0       0       0       0       0       0       0
   827 ;;Total ram usage:        0 bytes
   828 ;; Hardware stack levels required when called:    7
   829 ;; This function calls:
   830 ;;		___fldiv
   831 ;;		_delay_set_quartz
   832 ;;		_inizializzazione
   833 ;;		_read_adc
   834 ;;		_ricarica
   835 ;; This function is called by:
   836 ;;		Startup code after reset
   837 ;; This function uses a non-reentrant model
   838 ;;
   839                           
   840                           	psect	text0
   841  002E08                     __ptext0:
   842                           	opt stack 0
   843  002E08                     _main:
   844                           	opt stack 24
   845                           
   846                           ;tester.c: 48: delay_set_quartz(16);
   847                           
   848                           ;incstack = 0
   849  002E08  0E10               	movlw	16
   850  002E0A  EC6C  F018         	call	_delay_set_quartz
   851                           
   852                           ;tester.c: 49: rapporto = (17825 + 8111);
   853  002E0E  0E00               	movlw	0
   854  002E10  0100               	movlb	0	; () banked
   855  002E12  6F93               	movwf	_rapporto& (0+255),b
   856  002E14  0EA0               	movlw	160
   857  002E16  6F94               	movwf	(_rapporto+1)& (0+255),b
   858  002E18  0ECA               	movlw	202
   859  002E1A  6F95               	movwf	(_rapporto+2)& (0+255),b
   860  002E1C  0E46               	movlw	70
   861  002E1E  6F96               	movwf	(_rapporto+3)& (0+255),b
   862                           
   863                           ; BSR set to: 0
   864                           ;tester.c: 50: rapporto= 8111/rapporto;
   865  002E20  0E00               	movlw	0
   866  002E22  6E28               	movwf	___fldiv@b,c
   867  002E24  0E78               	movlw	120
   868  002E26  6E29               	movwf	___fldiv@b+1,c
   869  002E28  0EFD               	movlw	253
   870  002E2A  6E2A               	movwf	___fldiv@b+2,c
   871  002E2C  0E45               	movlw	69
   872  002E2E  6E2B               	movwf	___fldiv@b+3,c
   873  002E30  C093  F02C         	movff	_rapporto,___fldiv@a
   874  002E34  C094  F02D         	movff	_rapporto+1,___fldiv@a+1
   875  002E38  C095  F02E         	movff	_rapporto+2,___fldiv@a+2
   876  002E3C  C096  F02F         	movff	_rapporto+3,___fldiv@a+3
   877  002E40  ECBF  F00D         	call	___fldiv	;wreg free
   878  002E44  C028  F093         	movff	?___fldiv,_rapporto
   879  002E48  C029  F094         	movff	?___fldiv+1,_rapporto+1
   880  002E4C  C02A  F095         	movff	?___fldiv+2,_rapporto+2
   881  002E50  C02B  F096         	movff	?___fldiv+3,_rapporto+3
   882                           
   883                           ;tester.c: 51: inizializzazione();
   884  002E54  EC5A  F017         	call	_inizializzazione	;wreg free
   885                           
   886                           ;tester.c: 52: read_adc();
   887  002E58  EC56  F010         	call	_read_adc	;wreg free
   888  002E5C                     l3748:
   889                           
   890                           ;tester.c: 54: ricarica();
   891  002E5C  EC6F  F011         	call	_ricarica	;wreg free
   892                           
   893                           ;tester.c: 55: read_adc();
   894  002E60  EC56  F010         	call	_read_adc	;wreg free
   895  002E64  D7FB               	goto	l3748
   896  002E66                     __end_of_main:
   897                           	opt stack 0
   898                           tblptru	equ	0xFF8
   899                           tblptrh	equ	0xFF7
   900                           tblptrl	equ	0xFF6
   901                           tablat	equ	0xFF5
   902                           postinc0	equ	0xFEE
   903                           wreg	equ	0xFE8
   904                           
   905 ;; *************** function _ricarica *****************
   906 ;; Defined at:
   907 ;;		line 59 in file "tester.c"
   908 ;; Parameters:    Size  Location     Type
   909 ;;		None
   910 ;; Auto vars:     Size  Location     Type
   911 ;;		None
   912 ;; Return value:  Size  Location     Type
   913 ;;		None               void
   914 ;; Registers used:
   915 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   916 ;; Tracked objects:
   917 ;;		On entry : 0/0
   918 ;;		On exit  : 0/0
   919 ;;		Unchanged: 0/0
   920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   921 ;;      Params:         0       0       0       0       0       0       0       0       0
   922 ;;      Locals:         0       0       0       0       0       0       0       0       0
   923 ;;      Temps:          0       0       0       0       0       0       0       0       0
   924 ;;      Totals:         0       0       0       0       0       0       0       0       0
   925 ;;Total ram usage:        0 bytes
   926 ;; Hardware stack levels used:    1
   927 ;; Hardware stack levels required when called:    6
   928 ;; This function calls:
   929 ;;		_LCD_clear
   930 ;;		_LCD_goto_line
   931 ;;		_LCD_write_message
   932 ;;		_LCD_write_string
   933 ;;		___flge
   934 ;;		_delay_ms
   935 ;;		_read_adc
   936 ;;		_sprintf
   937 ;; This function is called by:
   938 ;;		_main
   939 ;; This function uses a non-reentrant model
   940 ;;
   941                           
   942                           	psect	text1
   943  0022DE                     __ptext1:
   944                           	opt stack 0
   945  0022DE                     _ricarica:
   946                           	opt stack 24
   947                           
   948                           ;tester.c: 60: read_adc();
   949                           
   950                           ;incstack = 0
   951  0022DE  EC56  F010         	call	_read_adc	;wreg free
   952                           
   953                           ;tester.c: 61: while ((current < -1)||(voltage < 14.5)) {
   954  0022E2  D053               	goto	l3662
   955  0022E4                     l160:
   956                           
   957                           ;tester.c: 62: PORTCbits.RC6 = 1;
   958  0022E4  8C82               	bsf	3970,6,c	;volatile
   959                           
   960                           ;tester.c: 63: LCD_goto_line(1);
   961  0022E6  0E01               	movlw	1
   962  0022E8  EC82  F015         	call	_LCD_goto_line
   963                           
   964                           ;tester.c: 64: LCD_write_message("Ciclo ricarica..");
   965  0022EC  0E91               	movlw	low STR_1
   966  0022EE  6E12               	movwf	LCD_write_message@buffer,c
   967  0022F0  0E08               	movlw	high STR_1
   968  0022F2  6E13               	movwf	LCD_write_message@buffer+1,c
   969  0022F4  ECED  F017         	call	_LCD_write_message	;wreg free
   970                           
   971                           ;tester.c: 65: LCD_goto_line(2);
   972  0022F8  0E02               	movlw	2
   973  0022FA  EC82  F015         	call	_LCD_goto_line
   974                           
   975                           ;tester.c: 66: sprintf(str, "V:%.3f", voltage);
   976  0022FE  0E89               	movlw	low _str
   977  002300  6E51               	movwf	sprintf@sp,c
   978  002302  0E00               	movlw	high _str
   979  002304  6E52               	movwf	sprintf@sp+1,c
   980  002306  0EC2               	movlw	low STR_2
   981  002308  6E53               	movwf	sprintf@f,c
   982  00230A  0E08               	movlw	high STR_2
   983  00230C  6E54               	movwf	sprintf@f+1,c
   984  00230E  C085  F055         	movff	_voltage,?_sprintf+4
   985  002312  C086  F056         	movff	_voltage+1,?_sprintf+5
   986  002316  C087  F057         	movff	_voltage+2,?_sprintf+6
   987  00231A  C088  F058         	movff	_voltage+3,?_sprintf+7
   988  00231E  EC65  F004         	call	_sprintf	;wreg free
   989                           
   990                           ;tester.c: 67: str[7] = '\0';
   991  002322  0E00               	movlw	0
   992  002324  0100               	movlb	0	; () banked
   993  002326  6F90               	movwf	(_str+7)& (0+255),b
   994                           
   995                           ; BSR set to: 0
   996                           ;tester.c: 68: LCD_write_string(str);
   997  002328  0E89               	movlw	low _str
   998  00232A  6E12               	movwf	LCD_write_string@buffer,c
   999  00232C  0E00               	movlw	high _str
  1000  00232E  6E13               	movwf	LCD_write_string@buffer+1,c
  1001  002330  EC3C  F018         	call	_LCD_write_string	;wreg free
  1002                           
  1003                           ;tester.c: 69: sprintf(str, " I:%.3f", current);
  1004  002334  0E89               	movlw	low _str
  1005  002336  6E51               	movwf	sprintf@sp,c
  1006  002338  0E00               	movlw	high _str
  1007  00233A  6E52               	movwf	sprintf@sp+1,c
  1008  00233C  0EB3               	movlw	low STR_3
  1009  00233E  6E53               	movwf	sprintf@f,c
  1010  002340  0E08               	movlw	high STR_3
  1011  002342  6E54               	movwf	sprintf@f+1,c
  1012  002344  C05B  F055         	movff	_current,?_sprintf+4
  1013  002348  C05C  F056         	movff	_current+1,?_sprintf+5
  1014  00234C  C05D  F057         	movff	_current+2,?_sprintf+6
  1015  002350  C05E  F058         	movff	_current+3,?_sprintf+7
  1016  002354  EC65  F004         	call	_sprintf	;wreg free
  1017                           
  1018                           ;tester.c: 70: str[7] = '\0';
  1019  002358  0E00               	movlw	0
  1020  00235A  0100               	movlb	0	; () banked
  1021  00235C  6F90               	movwf	(_str+7)& (0+255),b
  1022                           
  1023                           ; BSR set to: 0
  1024                           ;tester.c: 71: LCD_write_string(str);
  1025  00235E  0E89               	movlw	low _str
  1026  002360  6E12               	movwf	LCD_write_string@buffer,c
  1027  002362  0E00               	movlw	high _str
  1028  002364  6E13               	movwf	LCD_write_string@buffer+1,c
  1029  002366  EC3C  F018         	call	_LCD_write_string	;wreg free
  1030                           
  1031                           ;tester.c: 72: read_adc();
  1032  00236A  EC56  F010         	call	_read_adc	;wreg free
  1033                           
  1034                           ;tester.c: 73: delay_ms(1000);
  1035  00236E  0E03               	movlw	3
  1036  002370  6E08               	movwf	delay_ms@value_ms+1,c
  1037  002372  0EE8               	movlw	232
  1038  002374  6E07               	movwf	delay_ms@value_ms,c
  1039  002376  ECA2  F017         	call	_delay_ms	;wreg free
  1040                           
  1041                           ;tester.c: 74: LCD_clear();
  1042  00237A  EC16  F018         	call	_LCD_clear	;wreg free
  1043                           
  1044                           ;tester.c: 75: delay_ms(10);
  1045  00237E  0E00               	movlw	0
  1046  002380  6E08               	movwf	delay_ms@value_ms+1,c
  1047  002382  0E0A               	movlw	10
  1048  002384  6E07               	movwf	delay_ms@value_ms,c
  1049  002386  ECA2  F017         	call	_delay_ms	;wreg free
  1050  00238A                     l3662:
  1051  00238A  C05B  F001         	movff	_current,___flge@ff1
  1052  00238E  C05C  F002         	movff	_current+1,___flge@ff1+1
  1053  002392  C05D  F003         	movff	_current+2,___flge@ff1+2
  1054  002396  C05E  F004         	movff	_current+3,___flge@ff1+3
  1055  00239A  0E00               	movlw	0
  1056  00239C  6E05               	movwf	___flge@ff2,c
  1057  00239E  0E00               	movlw	0
  1058  0023A0  6E06               	movwf	___flge@ff2+1,c
  1059  0023A2  0E80               	movlw	128
  1060  0023A4  6E07               	movwf	___flge@ff2+2,c
  1061  0023A6  0EBF               	movlw	191
  1062  0023A8  6E08               	movwf	___flge@ff2+3,c
  1063  0023AA  ECF7  F013         	call	___flge	;wreg free
  1064  0023AE  A0D8               	btfss	status,0,c
  1065  0023B0  D799               	goto	l160
  1066  0023B2  C085  F001         	movff	_voltage,___flge@ff1
  1067  0023B6  C086  F002         	movff	_voltage+1,___flge@ff1+1
  1068  0023BA  C087  F003         	movff	_voltage+2,___flge@ff1+2
  1069  0023BE  C088  F004         	movff	_voltage+3,___flge@ff1+3
  1070  0023C2  0E00               	movlw	0
  1071  0023C4  6E05               	movwf	___flge@ff2,c
  1072  0023C6  0E00               	movlw	0
  1073  0023C8  6E06               	movwf	___flge@ff2+1,c
  1074  0023CA  0E68               	movlw	104
  1075  0023CC  6E07               	movwf	___flge@ff2+2,c
  1076  0023CE  0E41               	movlw	65
  1077  0023D0  6E08               	movwf	___flge@ff2+3,c
  1078  0023D2  ECF7  F013         	call	___flge	;wreg free
  1079  0023D6  A0D8               	btfss	status,0,c
  1080  0023D8  D785               	goto	l160
  1081                           
  1082                           ;tester.c: 76: }
  1083                           ;tester.c: 77: if ((current > -1)&&(voltage > 14.5)) {
  1084  0023DA  0E00               	movlw	0
  1085  0023DC  6E01               	movwf	___flge@ff1,c
  1086  0023DE  0E00               	movlw	0
  1087  0023E0  6E02               	movwf	___flge@ff1+1,c
  1088  0023E2  0E80               	movlw	128
  1089  0023E4  6E03               	movwf	___flge@ff1+2,c
  1090  0023E6  0EBF               	movlw	191
  1091  0023E8  6E04               	movwf	___flge@ff1+3,c
  1092  0023EA  C05B  F005         	movff	_current,___flge@ff2
  1093  0023EE  C05C  F006         	movff	_current+1,___flge@ff2+1
  1094  0023F2  C05D  F007         	movff	_current+2,___flge@ff2+2
  1095  0023F6  C05E  F008         	movff	_current+3,___flge@ff2+3
  1096  0023FA  ECF7  F013         	call	___flge	;wreg free
  1097  0023FE  B0D8               	btfsc	status,0,c
  1098  002400  0012               	return	
  1099  002402  0E00               	movlw	0
  1100  002404  6E01               	movwf	___flge@ff1,c
  1101  002406  0E00               	movlw	0
  1102  002408  6E02               	movwf	___flge@ff1+1,c
  1103  00240A  0E68               	movlw	104
  1104  00240C  6E03               	movwf	___flge@ff1+2,c
  1105  00240E  0E41               	movlw	65
  1106  002410  6E04               	movwf	___flge@ff1+3,c
  1107  002412  C085  F005         	movff	_voltage,___flge@ff2
  1108  002416  C086  F006         	movff	_voltage+1,___flge@ff2+1
  1109  00241A  C087  F007         	movff	_voltage+2,___flge@ff2+2
  1110  00241E  C088  F008         	movff	_voltage+3,___flge@ff2+3
  1111  002422  ECF7  F013         	call	___flge	;wreg free
  1112  002426  B0D8               	btfsc	status,0,c
  1113  002428  0012               	return	
  1114                           
  1115                           ;tester.c: 78: LCD_write_message("Carica terminata");
  1116  00242A  0EA2               	movlw	low STR_4
  1117  00242C  6E12               	movwf	LCD_write_message@buffer,c
  1118  00242E  0E08               	movlw	high STR_4
  1119  002430  6E13               	movwf	LCD_write_message@buffer+1,c
  1120  002432  ECED  F017         	call	_LCD_write_message	;wreg free
  1121                           
  1122                           ;tester.c: 79: delay_ms(5000);
  1123  002436  0E13               	movlw	19
  1124  002438  6E08               	movwf	delay_ms@value_ms+1,c
  1125  00243A  0E88               	movlw	136
  1126  00243C  6E07               	movwf	delay_ms@value_ms,c
  1127  00243E  ECA2  F017         	call	_delay_ms	;wreg free
  1128  002442  0012               	return	
  1129  002444                     __end_of_ricarica:
  1130                           	opt stack 0
  1131                           tblptru	equ	0xFF8
  1132                           tblptrh	equ	0xFF7
  1133                           tblptrl	equ	0xFF6
  1134                           tablat	equ	0xFF5
  1135                           postinc0	equ	0xFEE
  1136                           wreg	equ	0xFE8
  1137                           status	equ	0xFD8
  1138                           
  1139 ;; *************** function _sprintf *****************
  1140 ;; Defined at:
  1141 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  1142 ;; Parameters:    Size  Location     Type
  1143 ;;  sp              2   80[COMRAM] PTR unsigned char 
  1144 ;;		 -> str(8), 
  1145 ;;  f               2   82[COMRAM] PTR const unsigned char 
  1146 ;;		 -> STR_3(8), STR_2(7), 
  1147 ;; Auto vars:     Size  Location     Type
  1148 ;;  fval            4   20[BANK0 ] PTR const unsigned char 
  1149 ;;  tmpval          4   14[BANK0 ] struct .
  1150 ;;  val             4    8[BANK0 ] unsigned long 
  1151 ;;  cp              3    0        PTR const unsigned char 
  1152 ;;  prec            2   18[BANK0 ] int 
  1153 ;;  exp             2   12[BANK0 ] int 
  1154 ;;  flag            2    6[BANK0 ] unsigned short 
  1155 ;;  ap              2    4[BANK0 ] PTR void [1]
  1156 ;;		 -> ?_sprintf(2), 
  1157 ;;  len             2    0        unsigned int 
  1158 ;;  width           2    0        int 
  1159 ;;  c               1   24[BANK0 ] char 
  1160 ;;  d               1    0        unsigned char 
  1161 ;; Return value:  Size  Location     Type
  1162 ;;                  2   80[COMRAM] int 
  1163 ;; Registers used:
  1164 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1165 ;; Tracked objects:
  1166 ;;		On entry : 0/0
  1167 ;;		On exit  : 0/0
  1168 ;;		Unchanged: 0/0
  1169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1170 ;;      Params:         8       0       0       0       0       0       0       0       0
  1171 ;;      Locals:         0      25       0       0       0       0       0       0       0
  1172 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1173 ;;      Totals:        10      25       0       0       0       0       0       0       0
  1174 ;;Total ram usage:       35 bytes
  1175 ;; Hardware stack levels used:    1
  1176 ;; Hardware stack levels required when called:    2
  1177 ;; This function calls:
  1178 ;;		___awdiv
  1179 ;;		___fladd
  1180 ;;		___flge
  1181 ;;		___flmul
  1182 ;;		___flneg
  1183 ;;		___flsub
  1184 ;;		___fltol
  1185 ;;		___lldiv
  1186 ;;		___llmod
  1187 ;;		___wmul
  1188 ;;		___xxtofl
  1189 ;;		__div_to_l_
  1190 ;;		__tdiv_to_l_
  1191 ;;		_fround
  1192 ;;		_isdigit
  1193 ;;		_scale
  1194 ;; This function is called by:
  1195 ;;		_ricarica
  1196 ;; This function uses a non-reentrant model
  1197 ;;
  1198                           
  1199                           	psect	text2
  1200  0008CA                     __ptext2:
  1201                           	opt stack 0
  1202  0008CA                     _sprintf:
  1203                           	opt stack 27
  1204                           
  1205                           ;doprnt.c: 494: va_list ap;
  1206                           ;doprnt.c: 499: signed char c;
  1207                           ;doprnt.c: 501: int width;
  1208                           ;doprnt.c: 504: int prec;
  1209                           ;doprnt.c: 508: unsigned short flag;
  1210                           ;doprnt.c: 515: char d;
  1211                           ;doprnt.c: 516: double fval;
  1212                           ;doprnt.c: 517: int exp;
  1213                           ;doprnt.c: 523: union {
  1214                           ;doprnt.c: 524: unsigned long vd;
  1215                           ;doprnt.c: 525: double integ;
  1216                           ;doprnt.c: 526: } tmpval;
  1217                           ;doprnt.c: 528: unsigned long val;
  1218                           ;doprnt.c: 529: unsigned len;
  1219                           ;doprnt.c: 530: const char * cp;
  1220                           ;doprnt.c: 533: *ap = __va_start();
  1221                           
  1222                           ;incstack = 0
  1223  0008CA  0E55               	movlw	low (?_sprintf+4)
  1224  0008CC  0100               	movlb	0	; () banked
  1225  0008CE  6F64               	movwf	sprintf@ap& (0+255),b
  1226  0008D0  0E00               	movlw	high (?_sprintf+4)
  1227  0008D2  0100               	movlb	0	; () banked
  1228  0008D4  6F65               	movwf	(sprintf@ap+1)& (0+255),b
  1229                           
  1230                           ;doprnt.c: 536: while(c = *f++) {
  1231  0008D6  D3ED               	goto	l3594
  1232  0008D8                     l3396:
  1233                           
  1234                           ; BSR set to: 0
  1235                           ;doprnt.c: 538: if(c != '%')
  1236  0008D8  0E25               	movlw	37
  1237  0008DA  0100               	movlb	0	; () banked
  1238  0008DC  1978               	xorwf	sprintf@c& (0+255),w,b
  1239  0008DE  B4D8               	btfsc	status,2,c
  1240  0008E0  D007               	goto	l3402
  1241                           
  1242                           ; BSR set to: 0
  1243                           ;doprnt.c: 540: {
  1244                           ;doprnt.c: 541: ((*sp++ = (c)));
  1245  0008E2  C051  FFD9         	movff	sprintf@sp,fsr2l
  1246  0008E6  C052  FFDA         	movff	sprintf@sp+1,fsr2h
  1247  0008EA  C078  FFDF         	movff	sprintf@c,indf2
  1248  0008EE  D3DF               	goto	l3592
  1249  0008F0                     l3402:
  1250                           
  1251                           ; BSR set to: 0
  1252                           ;doprnt.c: 543: }
  1253                           ;doprnt.c: 548: flag = 0;
  1254  0008F0  0E00               	movlw	0
  1255  0008F2  0100               	movlb	0	; () banked
  1256  0008F4  6F67               	movwf	(sprintf@flag+1)& (0+255),b
  1257  0008F6  0E00               	movlw	0
  1258  0008F8  6F66               	movwf	sprintf@flag& (0+255),b
  1259                           
  1260                           ; BSR set to: 0
  1261                           ;doprnt.c: 611: if(*f == '.') {
  1262  0008FA  C053  FFF6         	movff	sprintf@f,tblptrl
  1263  0008FE  C054  FFF7         	movff	sprintf@f+1,tblptrh
  1264  000902                     	if	0	;tblptru may be non-zero
  1265  000902                     	endif
  1266  000902                     	if	0	;tblptru may be non-zero
  1267  000902                     	endif
  1268  000902  0008               	tblrd		*
  1269  000904  50F5               	movf	tablat,w,c
  1270  000906  0A2E               	xorlw	46
  1271  000908  A4D8               	btfss	status,2,c
  1272  00090A  D032               	goto	l3416
  1273                           
  1274                           ; BSR set to: 0
  1275                           ;doprnt.c: 612: flag |= 0x4000;
  1276  00090C  0100               	movlb	0	; () banked
  1277  00090E  8D67               	bsf	(sprintf@flag+1)& (0+255),6,b
  1278                           
  1279                           ;doprnt.c: 613: f++;
  1280  000910  4A53               	infsnz	sprintf@f,f,c
  1281  000912  2A54               	incf	sprintf@f+1,f,c
  1282                           
  1283                           ; BSR set to: 0
  1284                           ;doprnt.c: 620: {
  1285                           ;doprnt.c: 621: prec = 0;
  1286  000914  0E00               	movlw	0
  1287  000916  0100               	movlb	0	; () banked
  1288  000918  6F73               	movwf	(sprintf@prec+1)& (0+255),b
  1289  00091A  0E00               	movlw	0
  1290  00091C  6F72               	movwf	sprintf@prec& (0+255),b
  1291                           
  1292                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  1293  00091E  D01D               	goto	l3414
  1294  000920                     l3410:
  1295                           
  1296                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  1297  000920  C072  F001         	movff	sprintf@prec,___wmul@multiplier
  1298  000924  C073  F002         	movff	sprintf@prec+1,___wmul@multiplier+1
  1299  000928  0E00               	movlw	0
  1300  00092A  6E04               	movwf	___wmul@multiplicand+1,c
  1301  00092C  0E0A               	movlw	10
  1302  00092E  6E03               	movwf	___wmul@multiplicand,c
  1303  000930  EC29  F018         	call	___wmul	;wreg free
  1304  000934  C053  FFF6         	movff	sprintf@f,tblptrl
  1305  000938  C054  FFF7         	movff	sprintf@f+1,tblptrh
  1306  00093C                     	if	0	;tblptru may be non-zero
  1307  00093C                     	endif
  1308  00093C                     	if	0	;tblptru may be non-zero
  1309  00093C                     	endif
  1310  00093C  0008               	tblrd		*
  1311  00093E  50F5               	movf	tablat,w,c
  1312  000940  2601               	addwf	?___wmul,f,c
  1313  000942  0E00               	movlw	0
  1314  000944  2202               	addwfc	?___wmul+1,f,c
  1315  000946  0ED0               	movlw	208
  1316  000948  2401               	addwf	?___wmul,w,c
  1317  00094A  0100               	movlb	0	; () banked
  1318  00094C  6F72               	movwf	sprintf@prec& (0+255),b
  1319  00094E  0EFF               	movlw	255
  1320  000950  2002               	addwfc	?___wmul+1,w,c
  1321  000952  0100               	movlb	0	; () banked
  1322  000954  6F73               	movwf	(sprintf@prec+1)& (0+255),b
  1323                           
  1324                           ; BSR set to: 0
  1325  000956  4A53               	infsnz	sprintf@f,f,c
  1326  000958  2A54               	incf	sprintf@f+1,f,c
  1327  00095A                     l3414:
  1328                           
  1329                           ; BSR set to: 0
  1330  00095A  C053  FFF6         	movff	sprintf@f,tblptrl
  1331  00095E  C054  FFF7         	movff	sprintf@f+1,tblptrh
  1332  000962                     	if	0	;tblptru may be non-zero
  1333  000962                     	endif
  1334  000962                     	if	0	;tblptru may be non-zero
  1335  000962                     	endif
  1336  000962  0008               	tblrd		*
  1337  000964  50F5               	movf	tablat,w,c
  1338  000966  EC4E  F018         	call	_isdigit
  1339  00096A  A0D8               	btfss	status,0,c
  1340  00096C  D00C               	goto	l3424
  1341  00096E  D7D8               	goto	l3410
  1342  000970                     l3416:
  1343                           
  1344                           ;doprnt.c: 626: prec = 0;
  1345  000970  0E00               	movlw	0
  1346  000972  0100               	movlb	0	; () banked
  1347  000974  6F73               	movwf	(sprintf@prec+1)& (0+255),b
  1348  000976  0E00               	movlw	0
  1349  000978  6F72               	movwf	sprintf@prec& (0+255),b
  1350                           
  1351                           ; BSR set to: 0
  1352                           ;doprnt.c: 628: flag |= 0x1000;
  1353  00097A  0100               	movlb	0	; () banked
  1354  00097C  8967               	bsf	(sprintf@flag+1)& (0+255),4,b
  1355                           
  1356                           ; BSR set to: 0
  1357                           ;doprnt.c: 630: }
  1358                           ;doprnt.c: 635: switch(c = *f++) {
  1359  00097E  D003               	goto	l3424
  1360  000980                     l3420:
  1361                           
  1362                           ; BSR set to: 0
  1363                           ;doprnt.c: 663: flag |= 0x400;
  1364  000980  0100               	movlb	0	; () banked
  1365  000982  8567               	bsf	(sprintf@flag+1)& (0+255),2,b
  1366                           
  1367                           ;doprnt.c: 664: break;
  1368  000984  D012               	goto	l3426
  1369  000986                     l3424:
  1370  000986  C053  FFF6         	movff	sprintf@f,tblptrl
  1371  00098A  C054  FFF7         	movff	sprintf@f+1,tblptrh
  1372  00098E  4A53               	infsnz	sprintf@f,f,c
  1373  000990  2A54               	incf	sprintf@f+1,f,c
  1374  000992                     	if	0	;tblptru may be non-zero
  1375  000992                     	endif
  1376  000992                     	if	0	;tblptru may be non-zero
  1377  000992                     	endif
  1378  000992  0008               	tblrd		*
  1379  000994  CFF5 F078          	movff	tablat,sprintf@c
  1380  000998  0100               	movlb	0	; () banked
  1381  00099A  5178               	movf	sprintf@c& (0+255),w,b
  1382                           
  1383                           ; Switch size 1, requested type "space"
  1384                           ; Number of cases is 2, Range of values is 0 to 102
  1385                           ; switch strategies available:
  1386                           ; Name         Instructions Cycles
  1387                           ; simple_byte            7     4 (average)
  1388                           ;	Chosen strategy is simple_byte
  1389  00099C  0A00               	xorlw	0	; case 0
  1390  00099E  B4D8               	btfsc	status,2,c
  1391  0009A0  D395               	goto	l3596
  1392  0009A2  0A66               	xorlw	102	; case 102
  1393  0009A4  B4D8               	btfsc	status,2,c
  1394  0009A6  D7EC               	goto	l3420
  1395  0009A8  D384               	goto	l3594
  1396  0009AA                     l3426:
  1397                           
  1398                           ; BSR set to: 0
  1399                           ;doprnt.c: 825: if(flag & (0x700)) {
  1400  0009AA  0E07               	movlw	7
  1401  0009AC  0100               	movlb	0	; () banked
  1402  0009AE  1567               	andwf	(sprintf@flag+1)& (0+255),w,b
  1403  0009B0  B4D8               	btfsc	status,2,c
  1404  0009B2  D330               	goto	l3574
  1405                           
  1406                           ; BSR set to: 0
  1407                           ;doprnt.c: 827: if(flag & 0x1000)
  1408  0009B4  0100               	movlb	0	; () banked
  1409  0009B6  A967               	btfss	(sprintf@flag+1)& (0+255),4,b
  1410  0009B8  D005               	goto	l3432
  1411                           
  1412                           ; BSR set to: 0
  1413                           ;doprnt.c: 829: prec = 6;
  1414  0009BA  0E00               	movlw	0
  1415  0009BC  0100               	movlb	0	; () banked
  1416  0009BE  6F73               	movwf	(sprintf@prec+1)& (0+255),b
  1417  0009C0  0E06               	movlw	6
  1418  0009C2  6F72               	movwf	sprintf@prec& (0+255),b
  1419  0009C4                     l3432:
  1420                           
  1421                           ; BSR set to: 0
  1422                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  1423  0009C4  C064  FFD9         	movff	sprintf@ap,fsr2l
  1424  0009C8  C065  FFDA         	movff	sprintf@ap+1,fsr2h
  1425  0009CC  CFDE F074          	movff	postinc2,sprintf@fval
  1426  0009D0  CFDE F075          	movff	postinc2,sprintf@fval+1
  1427  0009D4  CFDE F076          	movff	postinc2,sprintf@fval+2
  1428  0009D8  CFDE F077          	movff	postinc2,sprintf@fval+3
  1429                           
  1430                           ; BSR set to: 0
  1431  0009DC  0E04               	movlw	4
  1432  0009DE  0100               	movlb	0	; () banked
  1433  0009E0  2764               	addwf	sprintf@ap& (0+255),f,b
  1434  0009E2  0E00               	movlw	0
  1435  0009E4  2365               	addwfc	(sprintf@ap+1)& (0+255),f,b
  1436                           
  1437                           ; BSR set to: 0
  1438                           ;doprnt.c: 831: if(fval < 0.0) {
  1439  0009E6  0100               	movlb	0	; () banked
  1440  0009E8  AF77               	btfss	(sprintf@fval+3)& (0+255),7,b
  1441  0009EA  D015               	goto	l3442
  1442                           
  1443                           ; BSR set to: 0
  1444                           ;doprnt.c: 832: fval = -fval;
  1445  0009EC  C074  F001         	movff	sprintf@fval,___flneg@f1
  1446  0009F0  C075  F002         	movff	sprintf@fval+1,___flneg@f1+1
  1447  0009F4  C076  F003         	movff	sprintf@fval+2,___flneg@f1+2
  1448  0009F8  C077  F004         	movff	sprintf@fval+3,___flneg@f1+3
  1449  0009FC  ECD6  F017         	call	___flneg	;wreg free
  1450  000A00  C001  F074         	movff	?___flneg,sprintf@fval
  1451  000A04  C002  F075         	movff	?___flneg+1,sprintf@fval+1
  1452  000A08  C003  F076         	movff	?___flneg+2,sprintf@fval+2
  1453  000A0C  C004  F077         	movff	?___flneg+3,sprintf@fval+3
  1454                           
  1455                           ;doprnt.c: 833: flag |= 0x03;
  1456  000A10  0E03               	movlw	3
  1457  000A12  0100               	movlb	0	; () banked
  1458  000A14  1366               	iorwf	sprintf@flag& (0+255),f,b
  1459  000A16                     l3442:
  1460                           
  1461                           ; BSR set to: 0
  1462                           ;doprnt.c: 834: }
  1463                           ;doprnt.c: 835: exp = 0;
  1464  000A16  0E00               	movlw	0
  1465  000A18  0100               	movlb	0	; () banked
  1466  000A1A  6F6D               	movwf	(sprintf@exp+1)& (0+255),b
  1467  000A1C  0E00               	movlw	0
  1468  000A1E  6F6C               	movwf	sprintf@exp& (0+255),b
  1469                           
  1470                           ; BSR set to: 0
  1471                           ;doprnt.c: 836: if( fval!=0) {
  1472  000A20  0100               	movlb	0	; () banked
  1473  000A22  5174               	movf	sprintf@fval& (0+255),w,b
  1474  000A24  0100               	movlb	0	; () banked
  1475  000A26  1175               	iorwf	(sprintf@fval+1)& (0+255),w,b
  1476  000A28  0100               	movlb	0	; () banked
  1477  000A2A  1176               	iorwf	(sprintf@fval+2)& (0+255),w,b
  1478  000A2C  0100               	movlb	0	; () banked
  1479  000A2E  1177               	iorwf	(sprintf@fval+3)& (0+255),w,b
  1480  000A30  B4D8               	btfsc	status,2,c
  1481  000A32  D088               	goto	l3470
  1482                           
  1483                           ; BSR set to: 0
  1484                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
  1485  000A34  0100               	movlb	0	; () banked
  1486  000A36  3576               	rlcf	(sprintf@fval+2)& (0+255),w,b
  1487  000A38  3577               	rlcf	(sprintf@fval+3)& (0+255),w,b
  1488  000A3A  0F82               	addlw	130
  1489  000A3C  0100               	movlb	0	; () banked
  1490  000A3E  6F6C               	movwf	sprintf@exp& (0+255),b
  1491  000A40  0100               	movlb	0	; () banked
  1492  000A42  6B6D               	clrf	(sprintf@exp+1)& (0+255),b
  1493  000A44  0EFF               	movlw	255
  1494  000A46  236D               	addwfc	(sprintf@exp+1)& (0+255),f,b
  1495                           
  1496                           ; BSR set to: 0
  1497                           ;doprnt.c: 838: exp--;
  1498  000A48  0100               	movlb	0	; () banked
  1499  000A4A  076C               	decf	sprintf@exp& (0+255),f,b
  1500  000A4C  A0D8               	btfss	status,0,c
  1501  000A4E  076D               	decf	(sprintf@exp+1)& (0+255),f,b
  1502                           
  1503                           ; BSR set to: 0
  1504                           ;doprnt.c: 839: exp *= 3;
  1505  000A50  C06C  F001         	movff	sprintf@exp,___wmul@multiplier
  1506  000A54  C06D  F002         	movff	sprintf@exp+1,___wmul@multiplier+1
  1507  000A58  0E00               	movlw	0
  1508  000A5A  6E04               	movwf	___wmul@multiplicand+1,c
  1509  000A5C  0E03               	movlw	3
  1510  000A5E  6E03               	movwf	___wmul@multiplicand,c
  1511  000A60  EC29  F018         	call	___wmul	;wreg free
  1512  000A64  C001  F06C         	movff	?___wmul,sprintf@exp
  1513  000A68  C002  F06D         	movff	?___wmul+1,sprintf@exp+1
  1514                           
  1515                           ;doprnt.c: 840: exp /= 10;
  1516  000A6C  C06C  F007         	movff	sprintf@exp,___awdiv@dividend
  1517  000A70  C06D  F008         	movff	sprintf@exp+1,___awdiv@dividend+1
  1518  000A74  0E00               	movlw	0
  1519  000A76  6E0A               	movwf	___awdiv@divisor+1,c
  1520  000A78  0E0A               	movlw	10
  1521  000A7A  6E09               	movwf	___awdiv@divisor,c
  1522  000A7C  ECDE  F015         	call	___awdiv	;wreg free
  1523  000A80  C007  F06C         	movff	?___awdiv,sprintf@exp
  1524  000A84  C008  F06D         	movff	?___awdiv+1,sprintf@exp+1
  1525                           
  1526                           ;doprnt.c: 841: if(exp < 0)
  1527  000A88  0100               	movlb	0	; () banked
  1528  000A8A  AF6D               	btfss	(sprintf@exp+1)& (0+255),7,b
  1529  000A8C  D004               	goto	l3458
  1530                           
  1531                           ; BSR set to: 0
  1532                           ;doprnt.c: 842: exp--;
  1533  000A8E  0100               	movlb	0	; () banked
  1534  000A90  076C               	decf	sprintf@exp& (0+255),f,b
  1535  000A92  A0D8               	btfss	status,0,c
  1536  000A94  076D               	decf	(sprintf@exp+1)& (0+255),f,b
  1537  000A96                     l3458:
  1538                           
  1539                           ; BSR set to: 0
  1540                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  1541  000A96  0100               	movlb	0	; () banked
  1542  000A98  516C               	movf	sprintf@exp& (0+255),w,b
  1543  000A9A  0800               	sublw	0
  1544  000A9C  EC6D  F008         	call	_scale
  1545  000AA0  C028  F06E         	movff	?_scale,sprintf@tmpval
  1546  000AA4  C029  F06F         	movff	?_scale+1,sprintf@tmpval+1
  1547  000AA8  C02A  F070         	movff	?_scale+2,sprintf@tmpval+2
  1548  000AAC  C02B  F071         	movff	?_scale+3,sprintf@tmpval+3
  1549                           
  1550                           ;doprnt.c: 847: tmpval.integ *= fval;
  1551  000AB0  C06E  F00F         	movff	sprintf@tmpval,___flmul@b
  1552  000AB4  C06F  F010         	movff	sprintf@tmpval+1,___flmul@b+1
  1553  000AB8  C070  F011         	movff	sprintf@tmpval+2,___flmul@b+2
  1554  000ABC  C071  F012         	movff	sprintf@tmpval+3,___flmul@b+3
  1555  000AC0  C074  F013         	movff	sprintf@fval,___flmul@a
  1556  000AC4  C075  F014         	movff	sprintf@fval+1,___flmul@a+1
  1557  000AC8  C076  F015         	movff	sprintf@fval+2,___flmul@a+2
  1558  000ACC  C077  F016         	movff	sprintf@fval+3,___flmul@a+3
  1559  000AD0  EC79  F00A         	call	___flmul	;wreg free
  1560  000AD4  C00F  F06E         	movff	?___flmul,sprintf@tmpval
  1561  000AD8  C010  F06F         	movff	?___flmul+1,sprintf@tmpval+1
  1562  000ADC  C011  F070         	movff	?___flmul+2,sprintf@tmpval+2
  1563  000AE0  C012  F071         	movff	?___flmul+3,sprintf@tmpval+3
  1564                           
  1565                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  1566  000AE4  C06E  F001         	movff	sprintf@tmpval,___flge@ff1
  1567  000AE8  C06F  F002         	movff	sprintf@tmpval+1,___flge@ff1+1
  1568  000AEC  C070  F003         	movff	sprintf@tmpval+2,___flge@ff1+2
  1569  000AF0  C071  F004         	movff	sprintf@tmpval+3,___flge@ff1+3
  1570  000AF4  0E00               	movlw	0
  1571  000AF6  6E05               	movwf	___flge@ff2,c
  1572  000AF8  0E00               	movlw	0
  1573  000AFA  6E06               	movwf	___flge@ff2+1,c
  1574  000AFC  0E80               	movlw	128
  1575  000AFE  6E07               	movwf	___flge@ff2+2,c
  1576  000B00  0E3F               	movlw	63
  1577  000B02  6E08               	movwf	___flge@ff2+3,c
  1578  000B04  ECF7  F013         	call	___flge	;wreg free
  1579  000B08  B0D8               	btfsc	status,0,c
  1580  000B0A  D005               	goto	l3466
  1581                           
  1582                           ;doprnt.c: 849: exp--;
  1583  000B0C  0100               	movlb	0	; () banked
  1584  000B0E  076C               	decf	sprintf@exp& (0+255),f,b
  1585  000B10  A0D8               	btfss	status,0,c
  1586  000B12  076D               	decf	(sprintf@exp+1)& (0+255),f,b
  1587  000B14  D017               	goto	l3470
  1588  000B16                     l3466:
  1589                           
  1590                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  1591  000B16  C06E  F001         	movff	sprintf@tmpval,___flge@ff1
  1592  000B1A  C06F  F002         	movff	sprintf@tmpval+1,___flge@ff1+1
  1593  000B1E  C070  F003         	movff	sprintf@tmpval+2,___flge@ff1+2
  1594  000B22  C071  F004         	movff	sprintf@tmpval+3,___flge@ff1+3
  1595  000B26  0E00               	movlw	0
  1596  000B28  6E05               	movwf	___flge@ff2,c
  1597  000B2A  0E00               	movlw	0
  1598  000B2C  6E06               	movwf	___flge@ff2+1,c
  1599  000B2E  0E20               	movlw	32
  1600  000B30  6E07               	movwf	___flge@ff2+2,c
  1601  000B32  0E41               	movlw	65
  1602  000B34  6E08               	movwf	___flge@ff2+3,c
  1603  000B36  ECF7  F013         	call	___flge	;wreg free
  1604  000B3A  A0D8               	btfss	status,0,c
  1605  000B3C  D003               	goto	l3470
  1606                           
  1607                           ;doprnt.c: 851: exp++;
  1608  000B3E  0100               	movlb	0	; () banked
  1609  000B40  4B6C               	infsnz	sprintf@exp& (0+255),f,b
  1610  000B42  2B6D               	incf	(sprintf@exp+1)& (0+255),f,b
  1611  000B44                     l3470:
  1612                           
  1613                           ;doprnt.c: 852: }
  1614                           ;doprnt.c: 1112: if(prec <= 12)
  1615  000B44  0100               	movlb	0	; () banked
  1616  000B46  BF73               	btfsc	(sprintf@prec+1)& (0+255),7,b
  1617  000B48  D008               	goto	l3472
  1618  000B4A  0100               	movlb	0	; () banked
  1619  000B4C  5173               	movf	(sprintf@prec+1)& (0+255),w,b
  1620  000B4E  E123               	bnz	l3474
  1621  000B50  0E0D               	movlw	13
  1622  000B52  0100               	movlb	0	; () banked
  1623  000B54  5D72               	subwf	sprintf@prec& (0+255),w,b
  1624  000B56  B0D8               	btfsc	status,0,c
  1625  000B58  D01E               	goto	l3474
  1626  000B5A                     l3472:
  1627                           
  1628                           ; BSR set to: 0
  1629                           ;doprnt.c: 1113: fval += fround(prec);
  1630  000B5A  C074  F035         	movff	sprintf@fval,___fladd@b
  1631  000B5E  C075  F036         	movff	sprintf@fval+1,___fladd@b+1
  1632  000B62  C076  F037         	movff	sprintf@fval+2,___fladd@b+2
  1633  000B66  C077  F038         	movff	sprintf@fval+3,___fladd@b+3
  1634  000B6A  0100               	movlb	0	; () banked
  1635  000B6C  5172               	movf	sprintf@prec& (0+255),w,b
  1636  000B6E  EC19  F00F         	call	_fround
  1637  000B72  C028  F039         	movff	?_fround,___fladd@a
  1638  000B76  C029  F03A         	movff	?_fround+1,___fladd@a+1
  1639  000B7A  C02A  F03B         	movff	?_fround+2,___fladd@a+2
  1640  000B7E  C02B  F03C         	movff	?_fround+3,___fladd@a+3
  1641  000B82  EC21  F00C         	call	___fladd	;wreg free
  1642  000B86  C035  F074         	movff	?___fladd,sprintf@fval
  1643  000B8A  C036  F075         	movff	?___fladd+1,sprintf@fval+1
  1644  000B8E  C037  F076         	movff	?___fladd+2,sprintf@fval+2
  1645  000B92  C038  F077         	movff	?___fladd+3,sprintf@fval+3
  1646  000B96                     l3474:
  1647                           
  1648                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  1649  000B96  0100               	movlb	0	; () banked
  1650  000B98  BF6D               	btfsc	(sprintf@exp+1)& (0+255),7,b
  1651  000B9A  D008               	goto	l3476
  1652  000B9C  0100               	movlb	0	; () banked
  1653  000B9E  516D               	movf	(sprintf@exp+1)& (0+255),w,b
  1654  000BA0  E12A               	bnz	l3482
  1655  000BA2  0E0A               	movlw	10
  1656  000BA4  0100               	movlb	0	; () banked
  1657  000BA6  5D6C               	subwf	sprintf@exp& (0+255),w,b
  1658  000BA8  B0D8               	btfsc	status,0,c
  1659  000BAA  D025               	goto	l3482
  1660  000BAC                     l3476:
  1661                           
  1662                           ; BSR set to: 0
  1663  000BAC  0100               	movlb	0	; () banked
  1664  000BAE  5174               	movf	sprintf@fval& (0+255),w,b
  1665  000BB0  0100               	movlb	0	; () banked
  1666  000BB2  1175               	iorwf	(sprintf@fval+1)& (0+255),w,b
  1667  000BB4  0100               	movlb	0	; () banked
  1668  000BB6  1176               	iorwf	(sprintf@fval+2)& (0+255),w,b
  1669  000BB8  0100               	movlb	0	; () banked
  1670  000BBA  1177               	iorwf	(sprintf@fval+3)& (0+255),w,b
  1671  000BBC  B4D8               	btfsc	status,2,c
  1672  000BBE  D067               	goto	l3496
  1673                           
  1674                           ; BSR set to: 0
  1675  000BC0  C074  F031         	movff	sprintf@fval,___fltol@f1
  1676  000BC4  C075  F032         	movff	sprintf@fval+1,___fltol@f1+1
  1677  000BC8  C076  F033         	movff	sprintf@fval+2,___fltol@f1+2
  1678  000BCC  C077  F034         	movff	sprintf@fval+3,___fltol@f1+3
  1679  000BD0  EC14  F015         	call	___fltol	;wreg free
  1680  000BD4  5031               	movf	?___fltol,w,c
  1681  000BD6  1032               	iorwf	?___fltol+1,w,c
  1682  000BD8  1033               	iorwf	?___fltol+2,w,c
  1683  000BDA  1034               	iorwf	?___fltol+3,w,c
  1684  000BDC  A4D8               	btfss	status,2,c
  1685  000BDE  D057               	goto	l3496
  1686  000BE0  0100               	movlb	0	; () banked
  1687  000BE2  BF6D               	btfsc	(sprintf@exp+1)& (0+255),7,b
  1688  000BE4  D054               	goto	l3496
  1689  000BE6  0100               	movlb	0	; () banked
  1690  000BE8  516D               	movf	(sprintf@exp+1)& (0+255),w,b
  1691  000BEA  E105               	bnz	l3482
  1692  000BEC  0E02               	movlw	2
  1693  000BEE  0100               	movlb	0	; () banked
  1694  000BF0  5D6C               	subwf	sprintf@exp& (0+255),w,b
  1695  000BF2  A0D8               	btfss	status,0,c
  1696  000BF4  D04C               	goto	l3496
  1697  000BF6                     l3482:
  1698                           
  1699                           ; BSR set to: 0
  1700                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  1701  000BF6  C06E  F001         	movff	sprintf@tmpval,___flge@ff1
  1702  000BFA  C06F  F002         	movff	sprintf@tmpval+1,___flge@ff1+1
  1703  000BFE  C070  F003         	movff	sprintf@tmpval+2,___flge@ff1+2
  1704  000C02  C071  F004         	movff	sprintf@tmpval+3,___flge@ff1+3
  1705  000C06  0E5F               	movlw	95
  1706  000C08  6E05               	movwf	___flge@ff2,c
  1707  000C0A  0E70               	movlw	112
  1708  000C0C  6E06               	movwf	___flge@ff2+1,c
  1709  000C0E  0E89               	movlw	137
  1710  000C10  6E07               	movwf	___flge@ff2+2,c
  1711  000C12  0E40               	movlw	64
  1712  000C14  6E08               	movwf	___flge@ff2+3,c
  1713  000C16  ECF7  F013         	call	___flge	;wreg free
  1714  000C1A  B0D8               	btfsc	status,0,c
  1715  000C1C  D003               	goto	l3486
  1716                           
  1717                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  1718  000C1E  0100               	movlb	0	; () banked
  1719  000C20  0EF7               	movlw	247
  1720  000C22  D002               	goto	L1
  1721  000C24                     l3486:
  1722                           
  1723                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  1724  000C24  0100               	movlb	0	; () banked
  1725  000C26  0EF8               	movlw	248
  1726  000C28                     L1:
  1727  000C28  276C               	addwf	sprintf@exp& (0+255),f,b
  1728  000C2A  0EFF               	movlw	255
  1729  000C2C  236D               	addwfc	(sprintf@exp+1)& (0+255),f,b
  1730                           
  1731                           ; BSR set to: 0
  1732                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  1733                           
  1734                           ; BSR set to: 0
  1735  000C2E  0100               	movlb	0	; () banked
  1736  000C30  516C               	movf	sprintf@exp& (0+255),w,b
  1737  000C32  EC6D  F008         	call	_scale
  1738  000C36  C028  F06E         	movff	?_scale,sprintf@tmpval
  1739  000C3A  C029  F06F         	movff	?_scale+1,sprintf@tmpval+1
  1740  000C3E  C02A  F070         	movff	?_scale+2,sprintf@tmpval+2
  1741  000C42  C02B  F071         	movff	?_scale+3,sprintf@tmpval+3
  1742  000C46  C074  F001         	movff	sprintf@fval,__div_to_l_@f1
  1743  000C4A  C075  F002         	movff	sprintf@fval+1,__div_to_l_@f1+1
  1744  000C4E  C076  F003         	movff	sprintf@fval+2,__div_to_l_@f1+2
  1745  000C52  C077  F004         	movff	sprintf@fval+3,__div_to_l_@f1+3
  1746  000C56  C06E  F005         	movff	sprintf@tmpval,__div_to_l_@f2
  1747  000C5A  C06F  F006         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
  1748  000C5E  C070  F007         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
  1749  000C62  C071  F008         	movff	sprintf@tmpval+3,__div_to_l_@f2+3
  1750  000C66  EC63  F013         	call	__div_to_l_	;wreg free
  1751  000C6A  C001  F068         	movff	?__div_to_l_,sprintf@val
  1752  000C6E  C002  F069         	movff	?__div_to_l_+1,sprintf@val+1
  1753  000C72  C003  F06A         	movff	?__div_to_l_+2,sprintf@val+2
  1754  000C76  C004  F06B         	movff	?__div_to_l_+3,sprintf@val+3
  1755                           
  1756                           ;doprnt.c: 1129: fval = 0.0;
  1757  000C7A  0E00               	movlw	0
  1758  000C7C  0100               	movlb	0	; () banked
  1759  000C7E  6F74               	movwf	sprintf@fval& (0+255),b
  1760  000C80  0E00               	movlw	0
  1761  000C82  6F75               	movwf	(sprintf@fval+1)& (0+255),b
  1762  000C84  0E00               	movlw	0
  1763  000C86  6F76               	movwf	(sprintf@fval+2)& (0+255),b
  1764  000C88  0E00               	movlw	0
  1765  000C8A  6F77               	movwf	(sprintf@fval+3)& (0+255),b
  1766                           
  1767                           ;doprnt.c: 1130: } else {
  1768  000C8C  D03C               	goto	l3500
  1769  000C8E                     l3496:
  1770                           
  1771                           ;doprnt.c: 1131: val = (unsigned long)fval;
  1772  000C8E  C074  F031         	movff	sprintf@fval,___fltol@f1
  1773  000C92  C075  F032         	movff	sprintf@fval+1,___fltol@f1+1
  1774  000C96  C076  F033         	movff	sprintf@fval+2,___fltol@f1+2
  1775  000C9A  C077  F034         	movff	sprintf@fval+3,___fltol@f1+3
  1776  000C9E  EC14  F015         	call	___fltol	;wreg free
  1777  000CA2  C031  F068         	movff	?___fltol,sprintf@val
  1778  000CA6  C032  F069         	movff	?___fltol+1,sprintf@val+1
  1779  000CAA  C033  F06A         	movff	?___fltol+2,sprintf@val+2
  1780  000CAE  C034  F06B         	movff	?___fltol+3,sprintf@val+3
  1781                           
  1782                           ;doprnt.c: 1132: fval -= (double)val;
  1783  000CB2  C074  F049         	movff	sprintf@fval,___flsub@b
  1784  000CB6  C075  F04A         	movff	sprintf@fval+1,___flsub@b+1
  1785  000CBA  C076  F04B         	movff	sprintf@fval+2,___flsub@b+2
  1786  000CBE  C077  F04C         	movff	sprintf@fval+3,___flsub@b+3
  1787  000CC2  C068  F001         	movff	sprintf@val,___xxtofl@val
  1788  000CC6  C069  F002         	movff	sprintf@val+1,___xxtofl@val+1
  1789  000CCA  C06A  F003         	movff	sprintf@val+2,___xxtofl@val+2
  1790  000CCE  C06B  F004         	movff	sprintf@val+3,___xxtofl@val+3
  1791  000CD2  0E00               	movlw	0
  1792  000CD4  EC22  F012         	call	___xxtofl
  1793  000CD8  C001  F04D         	movff	?___xxtofl,___flsub@a
  1794  000CDC  C002  F04E         	movff	?___xxtofl+1,___flsub@a+1
  1795  000CE0  C003  F04F         	movff	?___xxtofl+2,___flsub@a+2
  1796  000CE4  C004  F050         	movff	?___xxtofl+3,___flsub@a+3
  1797  000CE8  EC7F  F017         	call	___flsub	;wreg free
  1798  000CEC  C049  F074         	movff	?___flsub,sprintf@fval
  1799  000CF0  C04A  F075         	movff	?___flsub+1,sprintf@fval+1
  1800  000CF4  C04B  F076         	movff	?___flsub+2,sprintf@fval+2
  1801  000CF8  C04C  F077         	movff	?___flsub+3,sprintf@fval+3
  1802                           
  1803                           ;doprnt.c: 1133: exp = 0;
  1804  000CFC  0E00               	movlw	0
  1805  000CFE  0100               	movlb	0	; () banked
  1806  000D00  6F6D               	movwf	(sprintf@exp+1)& (0+255),b
  1807  000D02  0E00               	movlw	0
  1808  000D04  6F6C               	movwf	sprintf@exp& (0+255),b
  1809  000D06                     l3500:
  1810                           
  1811                           ; BSR set to: 0
  1812                           ;doprnt.c: 1134: }
  1813                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  1814  000D06  0E01               	movlw	1
  1815  000D08  0100               	movlb	0	; () banked
  1816  000D0A  6F78               	movwf	sprintf@c& (0+255),b
  1817  000D0C                     l3502:
  1818                           
  1819                           ; BSR set to: 0
  1820  000D0C  0E0A               	movlw	10
  1821  000D0E  0100               	movlb	0	; () banked
  1822  000D10  1978               	xorwf	sprintf@c& (0+255),w,b
  1823  000D12  B4D8               	btfsc	status,2,c
  1824  000D14  D01E               	goto	l3514
  1825                           
  1826                           ; BSR set to: 0
  1827                           ;doprnt.c: 1137: if(val < dpowers[c])
  1828                           
  1829                           ; BSR set to: 0
  1830                           
  1831                           ; BSR set to: 0
  1832  000D16  0100               	movlb	0	; () banked
  1833  000D18  5178               	movf	sprintf@c& (0+255),w,b
  1834  000D1A  0D04               	mullw	4
  1835  000D1C  0E69               	movlw	low _dpowers
  1836  000D1E  24F3               	addwf	prodl,w,c
  1837  000D20  6EF6               	movwf	tblptrl,c
  1838  000D22  0E08               	movlw	high _dpowers
  1839  000D24  20F4               	addwfc	prodh,w,c
  1840  000D26  6EF7               	movwf	tblptrh,c
  1841  000D28                     	if	0	;There are less than 3 active tblptr bytes
  1842  000D28                     	endif
  1843  000D28  0009               	tblrd		*+
  1844  000D2A  50F5               	movf	tablat,w,c
  1845  000D2C  0100               	movlb	0	; () banked
  1846  000D2E  5D68               	subwf	sprintf@val& (0+255),w,b
  1847  000D30  0009               	tblrd		*+
  1848  000D32  50F5               	movf	tablat,w,c
  1849  000D34  0100               	movlb	0	; () banked
  1850  000D36  5969               	subwfb	(sprintf@val+1)& (0+255),w,b
  1851  000D38  0009               	tblrd		*+
  1852  000D3A  50F5               	movf	tablat,w,c
  1853  000D3C  0100               	movlb	0	; () banked
  1854  000D3E  596A               	subwfb	(sprintf@val+2)& (0+255),w,b
  1855  000D40  0009               	tblrd		*+
  1856  000D42  50F5               	movf	tablat,w,c
  1857  000D44  0100               	movlb	0	; () banked
  1858  000D46  596B               	subwfb	(sprintf@val+3)& (0+255),w,b
  1859  000D48  A0D8               	btfss	status,0,c
  1860  000D4A  D003               	goto	l3514
  1861                           
  1862                           ; BSR set to: 0
  1863                           
  1864                           ; BSR set to: 0
  1865                           
  1866                           ; BSR set to: 0
  1867                           ;doprnt.c: 1138: break;
  1868  000D4C  0100               	movlb	0	; () banked
  1869  000D4E  2B78               	incf	sprintf@c& (0+255),f,b
  1870  000D50  D7DD               	goto	l3502
  1871  000D52                     l3514:
  1872                           
  1873                           ; BSR set to: 0
  1874                           ;doprnt.c: 1175: {
  1875                           ;doprnt.c: 1188: if(flag & 0x03)
  1876  000D52  0E03               	movlw	3
  1877  000D54  0100               	movlb	0	; () banked
  1878  000D56  1566               	andwf	sprintf@flag& (0+255),w,b
  1879  000D58  6E59               	movwf	??_sprintf& (0+255),c
  1880  000D5A  0E00               	movlw	0
  1881  000D5C  0100               	movlb	0	; () banked
  1882  000D5E  1567               	andwf	(sprintf@flag+1)& (0+255),w,b
  1883  000D60  6E5A               	movwf	(??_sprintf+1)& (0+255),c
  1884  000D62  5059               	movf	??_sprintf,w,c
  1885  000D64  105A               	iorwf	??_sprintf+1,w,c
  1886  000D66  B4D8               	btfsc	status,2,c
  1887  000D68  D053               	goto	l3528
  1888                           
  1889                           ; BSR set to: 0
  1890                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  1891  000D6A  C051  FFD9         	movff	sprintf@sp,fsr2l
  1892  000D6E  C052  FFDA         	movff	sprintf@sp+1,fsr2h
  1893  000D72  0E2D               	movlw	45
  1894  000D74  D04B               	goto	L2
  1895  000D76                     l3518:
  1896                           
  1897                           ; BSR set to: 0
  1898  000D76  4A51               	infsnz	sprintf@sp,f,c
  1899  000D78  2A52               	incf	sprintf@sp+1,f,c
  1900                           
  1901                           ; BSR set to: 0
  1902                           ;doprnt.c: 1195: }
  1903                           ;doprnt.c: 1196: while(c--) {
  1904  000D7A  D04A               	goto	l3528
  1905  000D7C                     l3520:
  1906                           
  1907                           ; BSR set to: 0
  1908                           ;doprnt.c: 1200: {
  1909                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  1910  000D7C  C068  F001         	movff	sprintf@val,___lldiv@dividend
  1911  000D80  C069  F002         	movff	sprintf@val+1,___lldiv@dividend+1
  1912  000D84  C06A  F003         	movff	sprintf@val+2,___lldiv@dividend+2
  1913  000D88  C06B  F004         	movff	sprintf@val+3,___lldiv@dividend+3
  1914  000D8C  0100               	movlb	0	; () banked
  1915  000D8E  5178               	movf	sprintf@c& (0+255),w,b
  1916  000D90  0D04               	mullw	4
  1917  000D92  0E69               	movlw	low _dpowers
  1918  000D94  24F3               	addwf	prodl,w,c
  1919  000D96  6EF6               	movwf	tblptrl,c
  1920  000D98  0E08               	movlw	high _dpowers
  1921  000D9A  20F4               	addwfc	prodh,w,c
  1922  000D9C  6EF7               	movwf	tblptrh,c
  1923  000D9E                     	if	0	;There are less than 3 active tblptr bytes
  1924  000D9E                     	endif
  1925  000D9E  0009               	tblrd		*+
  1926  000DA0  CFF5 F005          	movff	tablat,___lldiv@divisor
  1927  000DA4  0009               	tblrd		*+
  1928  000DA6  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  1929  000DAA  0009               	tblrd		*+
  1930  000DAC  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  1931  000DB0  000A               	tblrd		*-
  1932  000DB2  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  1933  000DB6  EC20  F016         	call	___lldiv	;wreg free
  1934  000DBA  C001  F06E         	movff	?___lldiv,sprintf@tmpval
  1935  000DBE  C002  F06F         	movff	?___lldiv+1,sprintf@tmpval+1
  1936  000DC2  C003  F070         	movff	?___lldiv+2,sprintf@tmpval+2
  1937  000DC6  C004  F071         	movff	?___lldiv+3,sprintf@tmpval+3
  1938                           
  1939                           ;doprnt.c: 1202: tmpval.vd %= 10;
  1940  000DCA  C06E  F001         	movff	sprintf@tmpval,___llmod@dividend
  1941  000DCE  C06F  F002         	movff	sprintf@tmpval+1,___llmod@dividend+1
  1942  000DD2  C070  F003         	movff	sprintf@tmpval+2,___llmod@dividend+2
  1943  000DD6  C071  F004         	movff	sprintf@tmpval+3,___llmod@dividend+3
  1944  000DDA  0E0A               	movlw	10
  1945  000DDC  6E05               	movwf	___llmod@divisor,c
  1946  000DDE  0E00               	movlw	0
  1947  000DE0  6E06               	movwf	___llmod@divisor+1,c
  1948  000DE2  0E00               	movlw	0
  1949  000DE4  6E07               	movwf	___llmod@divisor+2,c
  1950  000DE6  0E00               	movlw	0
  1951  000DE8  6E08               	movwf	___llmod@divisor+3,c
  1952  000DEA  ECD1  F016         	call	___llmod	;wreg free
  1953  000DEE  C001  F06E         	movff	?___llmod,sprintf@tmpval
  1954  000DF2  C002  F06F         	movff	?___llmod+1,sprintf@tmpval+1
  1955  000DF6  C003  F070         	movff	?___llmod+2,sprintf@tmpval+2
  1956  000DFA  C004  F071         	movff	?___llmod+3,sprintf@tmpval+3
  1957                           
  1958                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  1959  000DFE  0100               	movlb	0	; () banked
  1960  000E00  516E               	movf	sprintf@tmpval& (0+255),w,b
  1961  000E02  0F30               	addlw	48
  1962  000E04  C051  FFD9         	movff	sprintf@sp,fsr2l
  1963  000E08  C052  FFDA         	movff	sprintf@sp+1,fsr2h
  1964  000E0C                     L2:
  1965  000E0C  6EDF               	movwf	indf2,c
  1966  000E0E  D7B3               	goto	l3518
  1967  000E10                     l3528:
  1968                           
  1969                           ; BSR set to: 0
  1970  000E10  0100               	movlb	0	; () banked
  1971  000E12  0778               	decf	sprintf@c& (0+255),f,b
  1972  000E14  0100               	movlb	0	; () banked
  1973  000E16  2978               	incf	sprintf@c& (0+255),w,b
  1974  000E18  B4D8               	btfsc	status,2,c
  1975  000E1A  D00D               	goto	l3536
  1976  000E1C  D7AF               	goto	l3520
  1977  000E1E                     l3530:
  1978                           
  1979                           ; BSR set to: 0
  1980                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  1981  000E1E  C051  FFD9         	movff	sprintf@sp,fsr2l
  1982  000E22  C052  FFDA         	movff	sprintf@sp+1,fsr2h
  1983  000E26  0E30               	movlw	48
  1984  000E28  6EDF               	movwf	indf2,c
  1985                           
  1986                           ; BSR set to: 0
  1987  000E2A  4A51               	infsnz	sprintf@sp,f,c
  1988  000E2C  2A52               	incf	sprintf@sp+1,f,c
  1989                           
  1990                           ; BSR set to: 0
  1991                           ;doprnt.c: 1209: exp--;
  1992  000E2E  0100               	movlb	0	; () banked
  1993  000E30  076C               	decf	sprintf@exp& (0+255),f,b
  1994  000E32  A0D8               	btfss	status,0,c
  1995  000E34  076D               	decf	(sprintf@exp+1)& (0+255),f,b
  1996  000E36                     l3536:
  1997                           
  1998                           ; BSR set to: 0
  1999  000E36  0100               	movlb	0	; () banked
  2000  000E38  BF6D               	btfsc	(sprintf@exp+1)& (0+255),7,b
  2001  000E3A  D007               	goto	l3538
  2002  000E3C  0100               	movlb	0	; () banked
  2003  000E3E  516D               	movf	(sprintf@exp+1)& (0+255),w,b
  2004  000E40  E1EE               	bnz	l3530
  2005  000E42  0100               	movlb	0	; () banked
  2006  000E44  056C               	decf	sprintf@exp& (0+255),w,b
  2007  000E46  B0D8               	btfsc	status,0,c
  2008  000E48  D7EA               	goto	l3530
  2009  000E4A                     l3538:
  2010                           
  2011                           ; BSR set to: 0
  2012                           ;doprnt.c: 1210: }
  2013                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  2014  000E4A  0100               	movlb	0	; () banked
  2015  000E4C  BF73               	btfsc	(sprintf@prec+1)& (0+255),7,b
  2016  000E4E  D00C               	goto	l252
  2017  000E50  0100               	movlb	0	; () banked
  2018  000E52  5173               	movf	(sprintf@prec+1)& (0+255),w,b
  2019  000E54  E105               	bnz	u3840
  2020  000E56  0E09               	movlw	9
  2021  000E58  0100               	movlb	0	; () banked
  2022  000E5A  5D72               	subwf	sprintf@prec& (0+255),w,b
  2023  000E5C  A0D8               	btfss	status,0,c
  2024  000E5E  D004               	goto	l252
  2025  000E60                     u3840:
  2026                           
  2027                           ; BSR set to: 0
  2028                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  2029  000E60  0E08               	movlw	8
  2030  000E62  0100               	movlb	0	; () banked
  2031  000E64  6F78               	movwf	sprintf@c& (0+255),b
  2032  000E66  D002               	goto	l3542
  2033  000E68                     l252:
  2034                           
  2035                           ; BSR set to: 0
  2036                           ;doprnt.c: 1213: else
  2037                           ;doprnt.c: 1214: c = prec;
  2038  000E68  C072  F078         	movff	sprintf@prec,sprintf@c
  2039  000E6C                     l3542:
  2040                           
  2041                           ; BSR set to: 0
  2042                           ;doprnt.c: 1215: prec -= c;
  2043  000E6C  0100               	movlb	0	; () banked
  2044  000E6E  5178               	movf	sprintf@c& (0+255),w,b
  2045  000E70  0100               	movlb	0	; () banked
  2046  000E72  5F72               	subwf	sprintf@prec& (0+255),f,b
  2047  000E74  0E00               	movlw	0
  2048  000E76  0100               	movlb	0	; () banked
  2049  000E78  BF78               	btfsc	sprintf@c& (0+255),7,b
  2050  000E7A  0EFF               	movlw	255
  2051  000E7C  0100               	movlb	0	; () banked
  2052  000E7E  5B73               	subwfb	(sprintf@prec+1)& (0+255),f,b
  2053                           
  2054                           ; BSR set to: 0
  2055                           ;doprnt.c: 1219: if(c)
  2056  000E80  0100               	movlb	0	; () banked
  2057  000E82  5178               	movf	sprintf@c& (0+255),w,b
  2058  000E84  0100               	movlb	0	; () banked
  2059  000E86  B4D8               	btfsc	status,2,c
  2060  000E88  D008               	goto	l3550
  2061                           
  2062                           ; BSR set to: 0
  2063                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  2064  000E8A  C051  FFD9         	movff	sprintf@sp,fsr2l
  2065  000E8E  C052  FFDA         	movff	sprintf@sp+1,fsr2h
  2066  000E92  0E2E               	movlw	46
  2067  000E94  6EDF               	movwf	indf2,c
  2068                           
  2069                           ; BSR set to: 0
  2070  000E96  4A51               	infsnz	sprintf@sp,f,c
  2071  000E98  2A52               	incf	sprintf@sp+1,f,c
  2072  000E9A                     l3550:
  2073                           
  2074                           ; BSR set to: 0
  2075                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  2076  000E9A  0100               	movlb	0	; () banked
  2077  000E9C  5178               	movf	sprintf@c& (0+255),w,b
  2078  000E9E  EC6D  F008         	call	_scale
  2079  000EA2  C028  F060         	movff	?_scale,_sprintf$1144
  2080  000EA6  C029  F061         	movff	?_scale+1,_sprintf$1144+1
  2081  000EAA  C02A  F062         	movff	?_scale+2,_sprintf$1144+2
  2082  000EAE  C02B  F063         	movff	?_scale+3,_sprintf$1144+3
  2083                           
  2084                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  2085  000EB2  C074  F013         	movff	sprintf@fval,___flmul@a
  2086  000EB6  C075  F014         	movff	sprintf@fval+1,___flmul@a+1
  2087  000EBA  C076  F015         	movff	sprintf@fval+2,___flmul@a+2
  2088  000EBE  C077  F016         	movff	sprintf@fval+3,___flmul@a+3
  2089  000EC2  C060  F00F         	movff	_sprintf$1144,___flmul@b
  2090  000EC6  C061  F010         	movff	_sprintf$1144+1,___flmul@b+1
  2091  000ECA  C062  F011         	movff	_sprintf$1144+2,___flmul@b+2
  2092  000ECE  C063  F012         	movff	_sprintf$1144+3,___flmul@b+3
  2093  000ED2  EC79  F00A         	call	___flmul	;wreg free
  2094  000ED6  C00F  F031         	movff	?___flmul,___fltol@f1
  2095  000EDA  C010  F032         	movff	?___flmul+1,___fltol@f1+1
  2096  000EDE  C011  F033         	movff	?___flmul+2,___fltol@f1+2
  2097  000EE2  C012  F034         	movff	?___flmul+3,___fltol@f1+3
  2098  000EE6  EC14  F015         	call	___fltol	;wreg free
  2099  000EEA  C031  F068         	movff	?___fltol,sprintf@val
  2100  000EEE  C032  F069         	movff	?___fltol+1,sprintf@val+1
  2101  000EF2  C033  F06A         	movff	?___fltol+2,sprintf@val+2
  2102  000EF6  C034  F06B         	movff	?___fltol+3,sprintf@val+3
  2103                           
  2104                           ;doprnt.c: 1228: while(c--) {
  2105  000EFA  D072               	goto	l3564
  2106  000EFC                     l3554:
  2107                           
  2108                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  2109  000EFC  C068  F001         	movff	sprintf@val,___lldiv@dividend
  2110  000F00  C069  F002         	movff	sprintf@val+1,___lldiv@dividend+1
  2111  000F04  C06A  F003         	movff	sprintf@val+2,___lldiv@dividend+2
  2112  000F08  C06B  F004         	movff	sprintf@val+3,___lldiv@dividend+3
  2113  000F0C  0100               	movlb	0	; () banked
  2114  000F0E  5178               	movf	sprintf@c& (0+255),w,b
  2115  000F10  0D04               	mullw	4
  2116  000F12  0E69               	movlw	low _dpowers
  2117  000F14  24F3               	addwf	prodl,w,c
  2118  000F16  6EF6               	movwf	tblptrl,c
  2119  000F18  0E08               	movlw	high _dpowers
  2120  000F1A  20F4               	addwfc	prodh,w,c
  2121  000F1C  6EF7               	movwf	tblptrh,c
  2122  000F1E                     	if	0	;There are less than 3 active tblptr bytes
  2123  000F1E                     	endif
  2124  000F1E  0009               	tblrd		*+
  2125  000F20  CFF5 F005          	movff	tablat,___lldiv@divisor
  2126  000F24  0009               	tblrd		*+
  2127  000F26  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  2128  000F2A  0009               	tblrd		*+
  2129  000F2C  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  2130  000F30  000A               	tblrd		*-
  2131  000F32  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  2132  000F36  EC20  F016         	call	___lldiv	;wreg free
  2133  000F3A  C001  F06E         	movff	?___lldiv,sprintf@tmpval
  2134  000F3E  C002  F06F         	movff	?___lldiv+1,sprintf@tmpval+1
  2135  000F42  C003  F070         	movff	?___lldiv+2,sprintf@tmpval+2
  2136  000F46  C004  F071         	movff	?___lldiv+3,sprintf@tmpval+3
  2137                           
  2138                           ;doprnt.c: 1230: tmpval.vd %= 10;
  2139  000F4A  C06E  F001         	movff	sprintf@tmpval,___llmod@dividend
  2140  000F4E  C06F  F002         	movff	sprintf@tmpval+1,___llmod@dividend+1
  2141  000F52  C070  F003         	movff	sprintf@tmpval+2,___llmod@dividend+2
  2142  000F56  C071  F004         	movff	sprintf@tmpval+3,___llmod@dividend+3
  2143  000F5A  0E0A               	movlw	10
  2144  000F5C  6E05               	movwf	___llmod@divisor,c
  2145  000F5E  0E00               	movlw	0
  2146  000F60  6E06               	movwf	___llmod@divisor+1,c
  2147  000F62  0E00               	movlw	0
  2148  000F64  6E07               	movwf	___llmod@divisor+2,c
  2149  000F66  0E00               	movlw	0
  2150  000F68  6E08               	movwf	___llmod@divisor+3,c
  2151  000F6A  ECD1  F016         	call	___llmod	;wreg free
  2152  000F6E  C001  F06E         	movff	?___llmod,sprintf@tmpval
  2153  000F72  C002  F06F         	movff	?___llmod+1,sprintf@tmpval+1
  2154  000F76  C003  F070         	movff	?___llmod+2,sprintf@tmpval+2
  2155  000F7A  C004  F071         	movff	?___llmod+3,sprintf@tmpval+3
  2156                           
  2157                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  2158  000F7E  0100               	movlb	0	; () banked
  2159  000F80  516E               	movf	sprintf@tmpval& (0+255),w,b
  2160  000F82  0F30               	addlw	48
  2161  000F84  C051  FFD9         	movff	sprintf@sp,fsr2l
  2162  000F88  C052  FFDA         	movff	sprintf@sp+1,fsr2h
  2163  000F8C  6EDF               	movwf	indf2,c
  2164                           
  2165                           ; BSR set to: 0
  2166  000F8E  4A51               	infsnz	sprintf@sp,f,c
  2167  000F90  2A52               	incf	sprintf@sp+1,f,c
  2168                           
  2169                           ; BSR set to: 0
  2170                           ;doprnt.c: 1232: val %= dpowers[c];
  2171  000F92  C068  F001         	movff	sprintf@val,___llmod@dividend
  2172  000F96  C069  F002         	movff	sprintf@val+1,___llmod@dividend+1
  2173  000F9A  C06A  F003         	movff	sprintf@val+2,___llmod@dividend+2
  2174  000F9E  C06B  F004         	movff	sprintf@val+3,___llmod@dividend+3
  2175  000FA2  0100               	movlb	0	; () banked
  2176  000FA4  5178               	movf	sprintf@c& (0+255),w,b
  2177  000FA6  0D04               	mullw	4
  2178  000FA8  0E69               	movlw	low _dpowers
  2179  000FAA  24F3               	addwf	prodl,w,c
  2180  000FAC  6EF6               	movwf	tblptrl,c
  2181  000FAE  0E08               	movlw	high _dpowers
  2182  000FB0  20F4               	addwfc	prodh,w,c
  2183  000FB2  6EF7               	movwf	tblptrh,c
  2184  000FB4                     	if	0	;There are less than 3 active tblptr bytes
  2185  000FB4                     	endif
  2186  000FB4  0009               	tblrd		*+
  2187  000FB6  CFF5 F005          	movff	tablat,___llmod@divisor
  2188  000FBA  0009               	tblrd		*+
  2189  000FBC  CFF5 F006          	movff	tablat,___llmod@divisor+1
  2190  000FC0  0009               	tblrd		*+
  2191  000FC2  CFF5 F007          	movff	tablat,___llmod@divisor+2
  2192  000FC6  000A               	tblrd		*-
  2193  000FC8  CFF5 F008          	movff	tablat,___llmod@divisor+3
  2194  000FCC  ECD1  F016         	call	___llmod	;wreg free
  2195  000FD0  C001  F068         	movff	?___llmod,sprintf@val
  2196  000FD4  C002  F069         	movff	?___llmod+1,sprintf@val+1
  2197  000FD8  C003  F06A         	movff	?___llmod+2,sprintf@val+2
  2198  000FDC  C004  F06B         	movff	?___llmod+3,sprintf@val+3
  2199  000FE0                     l3564:
  2200  000FE0  0100               	movlb	0	; () banked
  2201  000FE2  0778               	decf	sprintf@c& (0+255),f,b
  2202  000FE4  0100               	movlb	0	; () banked
  2203  000FE6  2978               	incf	sprintf@c& (0+255),w,b
  2204  000FE8  B4D8               	btfsc	status,2,c
  2205  000FEA  D00D               	goto	l3572
  2206  000FEC  D787               	goto	l3554
  2207  000FEE                     l3566:
  2208                           
  2209                           ; BSR set to: 0
  2210                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  2211  000FEE  C051  FFD9         	movff	sprintf@sp,fsr2l
  2212  000FF2  C052  FFDA         	movff	sprintf@sp+1,fsr2h
  2213  000FF6  0E30               	movlw	48
  2214  000FF8  6EDF               	movwf	indf2,c
  2215                           
  2216                           ; BSR set to: 0
  2217  000FFA  4A51               	infsnz	sprintf@sp,f,c
  2218  000FFC  2A52               	incf	sprintf@sp+1,f,c
  2219                           
  2220                           ; BSR set to: 0
  2221                           ;doprnt.c: 1237: prec--;
  2222  000FFE  0100               	movlb	0	; () banked
  2223  001000  0772               	decf	sprintf@prec& (0+255),f,b
  2224  001002  A0D8               	btfss	status,0,c
  2225  001004  0773               	decf	(sprintf@prec+1)& (0+255),f,b
  2226  001006                     l3572:
  2227                           
  2228                           ; BSR set to: 0
  2229  001006  0100               	movlb	0	; () banked
  2230  001008  5172               	movf	sprintf@prec& (0+255),w,b
  2231  00100A  0100               	movlb	0	; () banked
  2232  00100C  1173               	iorwf	(sprintf@prec+1)& (0+255),w,b
  2233  00100E  B4D8               	btfsc	status,2,c
  2234  001010  D050               	goto	l3594
  2235  001012  D7ED               	goto	l3566
  2236  001014                     l3574:
  2237                           
  2238                           ; BSR set to: 0
  2239                           ;doprnt.c: 1246: }
  2240                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  2241  001014  0100               	movlb	0	; () banked
  2242  001016  5172               	movf	sprintf@prec& (0+255),w,b
  2243  001018  0100               	movlb	0	; () banked
  2244  00101A  1173               	iorwf	(sprintf@prec+1)& (0+255),w,b
  2245  00101C  A4D8               	btfss	status,2,c
  2246  00101E  D00D               	goto	l3580
  2247                           
  2248                           ; BSR set to: 0
  2249  001020  0100               	movlb	0	; () banked
  2250  001022  5168               	movf	sprintf@val& (0+255),w,b
  2251  001024  0100               	movlb	0	; () banked
  2252  001026  1169               	iorwf	(sprintf@val+1)& (0+255),w,b
  2253  001028  0100               	movlb	0	; () banked
  2254  00102A  116A               	iorwf	(sprintf@val+2)& (0+255),w,b
  2255  00102C  0100               	movlb	0	; () banked
  2256  00102E  116B               	iorwf	(sprintf@val+3)& (0+255),w,b
  2257  001030  A4D8               	btfss	status,2,c
  2258  001032  D003               	goto	l3580
  2259                           
  2260                           ; BSR set to: 0
  2261                           ;doprnt.c: 1291: prec++;
  2262  001034  0100               	movlb	0	; () banked
  2263  001036  4B72               	infsnz	sprintf@prec& (0+255),f,b
  2264  001038  2B73               	incf	(sprintf@prec+1)& (0+255),f,b
  2265  00103A                     l3580:
  2266                           
  2267                           ; BSR set to: 0
  2268                           ;doprnt.c: 1339: if(c < prec)
  2269  00103A  0E80               	movlw	128
  2270  00103C  0100               	movlb	0	; () banked
  2271  00103E  BF78               	btfsc	sprintf@c& (0+255),7,b
  2272  001040  0E7F               	movlw	127
  2273  001042  6E59               	movwf	??_sprintf& (0+255),c
  2274  001044  0100               	movlb	0	; () banked
  2275  001046  5172               	movf	sprintf@prec& (0+255),w,b
  2276  001048  0100               	movlb	0	; () banked
  2277  00104A  5D78               	subwf	sprintf@c& (0+255),w,b
  2278  00104C  0100               	movlb	0	; () banked
  2279  00104E  5173               	movf	(sprintf@prec+1)& (0+255),w,b
  2280  001050  0A80               	xorlw	128
  2281  001052  5859               	subwfb	??_sprintf& (0+255),w,c
  2282  001054  B0D8               	btfsc	status,0,c
  2283  001056  D003               	goto	l3584
  2284                           
  2285                           ; BSR set to: 0
  2286                           ;doprnt.c: 1340: c = prec;
  2287  001058  C072  F078         	movff	sprintf@prec,sprintf@c
  2288  00105C  D016               	goto	l3588
  2289  00105E                     l3584:
  2290                           
  2291                           ; BSR set to: 0
  2292                           ;doprnt.c: 1341: else if(prec < c)
  2293  00105E  0100               	movlb	0	; () banked
  2294  001060  5173               	movf	(sprintf@prec+1)& (0+255),w,b
  2295  001062  0A80               	xorlw	128
  2296  001064  6E59               	movwf	??_sprintf& (0+255),c
  2297  001066  0100               	movlb	0	; () banked
  2298  001068  5178               	movf	sprintf@c& (0+255),w,b
  2299  00106A  0100               	movlb	0	; () banked
  2300  00106C  5D72               	subwf	sprintf@prec& (0+255),w,b
  2301  00106E  0E80               	movlw	128
  2302  001070  0100               	movlb	0	; () banked
  2303  001072  BF78               	btfsc	sprintf@c& (0+255),7,b
  2304  001074  0E7F               	movlw	127
  2305  001076  5859               	subwfb	??_sprintf& (0+255),w,c
  2306  001078  B0D8               	btfsc	status,0,c
  2307  00107A  D007               	goto	l3588
  2308                           
  2309                           ; BSR set to: 0
  2310                           ;doprnt.c: 1342: prec = c;
  2311  00107C  0100               	movlb	0	; () banked
  2312  00107E  5178               	movf	sprintf@c& (0+255),w,b
  2313  001080  0100               	movlb	0	; () banked
  2314  001082  6F72               	movwf	sprintf@prec& (0+255),b
  2315  001084  6B73               	clrf	(sprintf@prec+1)& (0+255),b
  2316  001086  BF72               	btfsc	sprintf@prec& (0+255),7,b
  2317  001088  0773               	decf	(sprintf@prec+1)& (0+255),f,b
  2318  00108A                     l3588:
  2319                           
  2320                           ; BSR set to: 0
  2321                           ;doprnt.c: 1422: {
  2322                           ;doprnt.c: 1438: if(flag & 0x03)
  2323  00108A  0E03               	movlw	3
  2324  00108C  0100               	movlb	0	; () banked
  2325  00108E  1566               	andwf	sprintf@flag& (0+255),w,b
  2326  001090  6E59               	movwf	??_sprintf& (0+255),c
  2327  001092  0E00               	movlw	0
  2328  001094  0100               	movlb	0	; () banked
  2329  001096  1567               	andwf	(sprintf@flag+1)& (0+255),w,b
  2330  001098  6E5A               	movwf	(??_sprintf+1)& (0+255),c
  2331  00109A  5059               	movf	??_sprintf,w,c
  2332  00109C  105A               	iorwf	??_sprintf+1,w,c
  2333  00109E  B4D8               	btfsc	status,2,c
  2334  0010A0  D008               	goto	l3594
  2335                           
  2336                           ; BSR set to: 0
  2337                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  2338  0010A2  C051  FFD9         	movff	sprintf@sp,fsr2l
  2339  0010A6  C052  FFDA         	movff	sprintf@sp+1,fsr2h
  2340  0010AA  0E2D               	movlw	45
  2341  0010AC  6EDF               	movwf	indf2,c
  2342  0010AE                     l3592:
  2343                           
  2344                           ; BSR set to: 0
  2345  0010AE  4A51               	infsnz	sprintf@sp,f,c
  2346  0010B0  2A52               	incf	sprintf@sp+1,f,c
  2347  0010B2                     l3594:
  2348                           
  2349                           ; BSR set to: 0
  2350  0010B2  C053  FFF6         	movff	sprintf@f,tblptrl
  2351  0010B6  C054  FFF7         	movff	sprintf@f+1,tblptrh
  2352  0010BA  4A53               	infsnz	sprintf@f,f,c
  2353  0010BC  2A54               	incf	sprintf@f+1,f,c
  2354  0010BE                     	if	0	;tblptru may be non-zero
  2355  0010BE                     	endif
  2356  0010BE                     	if	0	;tblptru may be non-zero
  2357  0010BE                     	endif
  2358  0010BE  0008               	tblrd		*
  2359  0010C0  CFF5 F078          	movff	tablat,sprintf@c
  2360  0010C4  0100               	movlb	0	; () banked
  2361  0010C6  5178               	movf	sprintf@c& (0+255),w,b
  2362  0010C8  A4D8               	btfss	status,2,c
  2363  0010CA  D406               	goto	l3396
  2364  0010CC                     l3596:
  2365                           
  2366                           ; BSR set to: 0
  2367                           ;doprnt.c: 1538: *sp = 0;
  2368  0010CC  C051  FFD9         	movff	sprintf@sp,fsr2l
  2369  0010D0  C052  FFDA         	movff	sprintf@sp+1,fsr2h
  2370  0010D4  0E00               	movlw	0
  2371  0010D6  6EDF               	movwf	indf2,c
  2372  0010D8  0012               	return	
  2373  0010DA                     __end_of_sprintf:
  2374                           	opt stack 0
  2375                           tblptru	equ	0xFF8
  2376                           tblptrh	equ	0xFF7
  2377                           tblptrl	equ	0xFF6
  2378                           tablat	equ	0xFF5
  2379                           prodh	equ	0xFF4
  2380                           prodl	equ	0xFF3
  2381                           postinc0	equ	0xFEE
  2382                           wreg	equ	0xFE8
  2383                           indf2	equ	0xFDF
  2384                           postinc2	equ	0xFDE
  2385                           fsr2h	equ	0xFDA
  2386                           fsr2l	equ	0xFD9
  2387                           status	equ	0xFD8
  2388                           
  2389 ;; *************** function _scale *****************
  2390 ;; Defined at:
  2391 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  2392 ;; Parameters:    Size  Location     Type
  2393 ;;  scl             1    wreg     char 
  2394 ;; Auto vars:     Size  Location     Type
  2395 ;;  scl             1   47[COMRAM] char 
  2396 ;; Return value:  Size  Location     Type
  2397 ;;                  4   39[COMRAM] char 
  2398 ;; Registers used:
  2399 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2400 ;; Tracked objects:
  2401 ;;		On entry : 0/0
  2402 ;;		On exit  : 0/0
  2403 ;;		Unchanged: 0/0
  2404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2405 ;;      Params:         4       0       0       0       0       0       0       0       0
  2406 ;;      Locals:         5       0       0       0       0       0       0       0       0
  2407 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2408 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2409 ;;Total ram usage:        9 bytes
  2410 ;; Hardware stack levels used:    1
  2411 ;; Hardware stack levels required when called:    1
  2412 ;; This function calls:
  2413 ;;		___awdiv
  2414 ;;		___awmod
  2415 ;;		___flmul
  2416 ;; This function is called by:
  2417 ;;		_sprintf
  2418 ;; This function uses a non-reentrant model
  2419 ;;
  2420                           
  2421                           	psect	text3
  2422  0010DA                     __ptext3:
  2423                           	opt stack 0
  2424  0010DA                     _scale:
  2425                           	opt stack 27
  2426                           
  2427                           ; BSR set to: 0
  2428                           ;incstack = 0
  2429                           ;scale@scl stored from wreg
  2430  0010DA  6E30               	movwf	scale@scl,c
  2431                           
  2432                           ;doprnt.c: 428: if(scl < 0) {
  2433  0010DC  AE30               	btfss	scale@scl,7,c
  2434  0010DE  D105               	goto	l2850
  2435                           
  2436                           ;doprnt.c: 429: scl = -scl;
  2437  0010E0  6C30               	negf	scale@scl,c
  2438                           
  2439                           ;doprnt.c: 430: if(scl>=110)
  2440  0010E2  5030               	movf	scale@scl,w,c
  2441  0010E4  0A80               	xorlw	128
  2442  0010E6  0F12               	addlw	-238
  2443  0010E8  A0D8               	btfss	status,0,c
  2444  0010EA  D098               	goto	l2840
  2445                           
  2446                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  2447  0010EC  0E00               	movlw	0
  2448  0010EE  6E0A               	movwf	___awdiv@divisor+1,c
  2449  0010F0  0E0A               	movlw	10
  2450  0010F2  6E09               	movwf	___awdiv@divisor,c
  2451  0010F4  0E00               	movlw	0
  2452  0010F6  6E04               	movwf	___awmod@divisor+1,c
  2453  0010F8  0E64               	movlw	100
  2454  0010FA  6E03               	movwf	___awmod@divisor,c
  2455  0010FC  5030               	movf	scale@scl,w,c
  2456  0010FE  6E01               	movwf	___awmod@dividend,c
  2457  001100  6A02               	clrf	___awmod@dividend+1,c
  2458  001102  BE01               	btfsc	___awmod@dividend,7,c
  2459  001104  0602               	decf	___awmod@dividend+1,f,c
  2460  001106  EC61  F016         	call	___awmod	;wreg free
  2461  00110A  C001  F007         	movff	?___awmod,___awdiv@dividend
  2462  00110E  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  2463  001112  ECDE  F015         	call	___awdiv	;wreg free
  2464  001116  90D8               	bcf	status,0,c
  2465  001118  3607               	rlcf	?___awdiv,f,c
  2466  00111A  3608               	rlcf	?___awdiv+1,f,c
  2467  00111C  90D8               	bcf	status,0,c
  2468  00111E  3607               	rlcf	?___awdiv,f,c
  2469  001120  3608               	rlcf	?___awdiv+1,f,c
  2470  001122  0E24               	movlw	36
  2471  001124  2607               	addwf	?___awdiv,f,c
  2472  001126  0E00               	movlw	0
  2473  001128  2208               	addwfc	?___awdiv+1,f,c
  2474  00112A  0E01               	movlw	low __npowers_
  2475  00112C  2407               	addwf	?___awdiv,w,c
  2476  00112E  6EF6               	movwf	tblptrl,c
  2477  001130  0E08               	movlw	high __npowers_
  2478  001132  2008               	addwfc	?___awdiv+1,w,c
  2479  001134  6EF7               	movwf	tblptrh,c
  2480  001136                     	if	0	;There are less than 3 active tblptr bytes
  2481  001136                     	endif
  2482  001136  0009               	tblrd		*+
  2483  001138  CFF5 F013          	movff	tablat,___flmul@a
  2484  00113C  0009               	tblrd		*+
  2485  00113E  CFF5 F014          	movff	tablat,___flmul@a+1
  2486  001142  0009               	tblrd		*+
  2487  001144  CFF5 F015          	movff	tablat,___flmul@a+2
  2488  001148  000A               	tblrd		*-
  2489  00114A  CFF5 F016          	movff	tablat,___flmul@a+3
  2490  00114E  0E00               	movlw	0
  2491  001150  6E0A               	movwf	___awdiv@divisor+1,c
  2492  001152  0E64               	movlw	100
  2493  001154  6E09               	movwf	___awdiv@divisor,c
  2494  001156  5030               	movf	scale@scl,w,c
  2495  001158  6E07               	movwf	___awdiv@dividend,c
  2496  00115A  6A08               	clrf	___awdiv@dividend+1,c
  2497  00115C  BE07               	btfsc	___awdiv@dividend,7,c
  2498  00115E  0608               	decf	___awdiv@dividend+1,f,c
  2499  001160  ECDE  F015         	call	___awdiv	;wreg free
  2500  001164  90D8               	bcf	status,0,c
  2501  001166  3607               	rlcf	?___awdiv,f,c
  2502  001168  3608               	rlcf	?___awdiv+1,f,c
  2503  00116A  90D8               	bcf	status,0,c
  2504  00116C  3607               	rlcf	?___awdiv,f,c
  2505  00116E  3608               	rlcf	?___awdiv+1,f,c
  2506  001170  0E48               	movlw	72
  2507  001172  2607               	addwf	?___awdiv,f,c
  2508  001174  0E00               	movlw	0
  2509  001176  2208               	addwfc	?___awdiv+1,f,c
  2510  001178  0E01               	movlw	low __npowers_
  2511  00117A  2407               	addwf	?___awdiv,w,c
  2512  00117C  6EF6               	movwf	tblptrl,c
  2513  00117E  0E08               	movlw	high __npowers_
  2514  001180  2008               	addwfc	?___awdiv+1,w,c
  2515  001182  6EF7               	movwf	tblptrh,c
  2516  001184                     	if	0	;There are less than 3 active tblptr bytes
  2517  001184                     	endif
  2518  001184  0009               	tblrd		*+
  2519  001186  CFF5 F00F          	movff	tablat,___flmul@b
  2520  00118A  0009               	tblrd		*+
  2521  00118C  CFF5 F010          	movff	tablat,___flmul@b+1
  2522  001190  0009               	tblrd		*+
  2523  001192  CFF5 F011          	movff	tablat,___flmul@b+2
  2524  001196  000A               	tblrd		*-
  2525  001198  CFF5 F012          	movff	tablat,___flmul@b+3
  2526  00119C  EC79  F00A         	call	___flmul	;wreg free
  2527  0011A0  C00F  F02C         	movff	?___flmul,_scale$1143
  2528  0011A4  C010  F02D         	movff	?___flmul+1,_scale$1143+1
  2529  0011A8  C011  F02E         	movff	?___flmul+2,_scale$1143+2
  2530  0011AC  C012  F02F         	movff	?___flmul+3,_scale$1143+3
  2531                           
  2532                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  2533  0011B0  C02C  F00F         	movff	_scale$1143,___flmul@b
  2534  0011B4  C02D  F010         	movff	_scale$1143+1,___flmul@b+1
  2535  0011B8  C02E  F011         	movff	_scale$1143+2,___flmul@b+2
  2536  0011BC  C02F  F012         	movff	_scale$1143+3,___flmul@b+3
  2537  0011C0  0E00               	movlw	0
  2538  0011C2  6E04               	movwf	___awmod@divisor+1,c
  2539  0011C4  0E0A               	movlw	10
  2540  0011C6  6E03               	movwf	___awmod@divisor,c
  2541  0011C8  5030               	movf	scale@scl,w,c
  2542  0011CA  6E01               	movwf	___awmod@dividend,c
  2543  0011CC  6A02               	clrf	___awmod@dividend+1,c
  2544  0011CE  BE01               	btfsc	___awmod@dividend,7,c
  2545  0011D0  0602               	decf	___awmod@dividend+1,f,c
  2546  0011D2  EC61  F016         	call	___awmod	;wreg free
  2547  0011D6  90D8               	bcf	status,0,c
  2548  0011D8  3601               	rlcf	?___awmod,f,c
  2549  0011DA  3602               	rlcf	?___awmod+1,f,c
  2550  0011DC  90D8               	bcf	status,0,c
  2551  0011DE  3601               	rlcf	?___awmod,f,c
  2552  0011E0  3602               	rlcf	?___awmod+1,f,c
  2553  0011E2  0E01               	movlw	low __npowers_
  2554  0011E4  2401               	addwf	?___awmod,w,c
  2555  0011E6  6EF6               	movwf	tblptrl,c
  2556  0011E8  0E08               	movlw	high __npowers_
  2557  0011EA  2002               	addwfc	?___awmod+1,w,c
  2558  0011EC  6EF7               	movwf	tblptrh,c
  2559  0011EE                     	if	0	;There are less than 3 active tblptr bytes
  2560  0011EE                     	endif
  2561  0011EE  0009               	tblrd		*+
  2562  0011F0  CFF5 F013          	movff	tablat,___flmul@a
  2563  0011F4  0009               	tblrd		*+
  2564  0011F6  CFF5 F014          	movff	tablat,___flmul@a+1
  2565  0011FA  0009               	tblrd		*+
  2566  0011FC  CFF5 F015          	movff	tablat,___flmul@a+2
  2567  001200  000A               	tblrd		*-
  2568  001202  CFF5 F016          	movff	tablat,___flmul@a+3
  2569  001206  EC79  F00A         	call	___flmul	;wreg free
  2570  00120A  C00F  F028         	movff	?___flmul,?_scale
  2571  00120E  C010  F029         	movff	?___flmul+1,?_scale+1
  2572  001212  C011  F02A         	movff	?___flmul+2,?_scale+2
  2573  001216  C012  F02B         	movff	?___flmul+3,?_scale+3
  2574  00121A  0012               	return	
  2575  00121C                     l2840:
  2576                           
  2577                           ;doprnt.c: 432: else if(scl > 10)
  2578  00121C  5030               	movf	scale@scl,w,c
  2579  00121E  0A80               	xorlw	128
  2580  001220  0F75               	addlw	-139
  2581  001222  A0D8               	btfss	status,0,c
  2582  001224  D04D               	goto	l2846
  2583                           
  2584                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  2585  001226  0E00               	movlw	0
  2586  001228  6E0A               	movwf	___awdiv@divisor+1,c
  2587  00122A  0E0A               	movlw	10
  2588  00122C  6E09               	movwf	___awdiv@divisor,c
  2589  00122E  5030               	movf	scale@scl,w,c
  2590  001230  6E07               	movwf	___awdiv@dividend,c
  2591  001232  6A08               	clrf	___awdiv@dividend+1,c
  2592  001234  BE07               	btfsc	___awdiv@dividend,7,c
  2593  001236  0608               	decf	___awdiv@dividend+1,f,c
  2594  001238  ECDE  F015         	call	___awdiv	;wreg free
  2595  00123C  90D8               	bcf	status,0,c
  2596  00123E  3607               	rlcf	?___awdiv,f,c
  2597  001240  3608               	rlcf	?___awdiv+1,f,c
  2598  001242  90D8               	bcf	status,0,c
  2599  001244  3607               	rlcf	?___awdiv,f,c
  2600  001246  3608               	rlcf	?___awdiv+1,f,c
  2601  001248  0E24               	movlw	36
  2602  00124A  2607               	addwf	?___awdiv,f,c
  2603  00124C  0E00               	movlw	0
  2604  00124E  2208               	addwfc	?___awdiv+1,f,c
  2605  001250  0E01               	movlw	low __npowers_
  2606  001252  2407               	addwf	?___awdiv,w,c
  2607  001254  6EF6               	movwf	tblptrl,c
  2608  001256  0E08               	movlw	high __npowers_
  2609  001258  2008               	addwfc	?___awdiv+1,w,c
  2610  00125A  6EF7               	movwf	tblptrh,c
  2611  00125C                     	if	0	;There are less than 3 active tblptr bytes
  2612  00125C                     	endif
  2613  00125C  0009               	tblrd		*+
  2614  00125E  CFF5 F00F          	movff	tablat,___flmul@b
  2615  001262  0009               	tblrd		*+
  2616  001264  CFF5 F010          	movff	tablat,___flmul@b+1
  2617  001268  0009               	tblrd		*+
  2618  00126A  CFF5 F011          	movff	tablat,___flmul@b+2
  2619  00126E  000A               	tblrd		*-
  2620  001270  CFF5 F012          	movff	tablat,___flmul@b+3
  2621  001274  0E00               	movlw	0
  2622  001276  6E04               	movwf	___awmod@divisor+1,c
  2623  001278  0E0A               	movlw	10
  2624  00127A  6E03               	movwf	___awmod@divisor,c
  2625  00127C  5030               	movf	scale@scl,w,c
  2626  00127E  6E01               	movwf	___awmod@dividend,c
  2627  001280  6A02               	clrf	___awmod@dividend+1,c
  2628  001282  BE01               	btfsc	___awmod@dividend,7,c
  2629  001284  0602               	decf	___awmod@dividend+1,f,c
  2630  001286  EC61  F016         	call	___awmod	;wreg free
  2631  00128A  90D8               	bcf	status,0,c
  2632  00128C  3601               	rlcf	?___awmod,f,c
  2633  00128E  3602               	rlcf	?___awmod+1,f,c
  2634  001290  90D8               	bcf	status,0,c
  2635  001292  3601               	rlcf	?___awmod,f,c
  2636  001294  3602               	rlcf	?___awmod+1,f,c
  2637  001296  0E01               	movlw	low __npowers_
  2638  001298  2401               	addwf	?___awmod,w,c
  2639  00129A  6EF6               	movwf	tblptrl,c
  2640  00129C  0E08               	movlw	high __npowers_
  2641  00129E  2002               	addwfc	?___awmod+1,w,c
  2642  0012A0  6EF7               	movwf	tblptrh,c
  2643  0012A2                     	if	0	;There are less than 3 active tblptr bytes
  2644  0012A2                     	endif
  2645  0012A2  0009               	tblrd		*+
  2646  0012A4  CFF5 F013          	movff	tablat,___flmul@a
  2647  0012A8  0009               	tblrd		*+
  2648  0012AA  CFF5 F014          	movff	tablat,___flmul@a+1
  2649  0012AE  0009               	tblrd		*+
  2650  0012B0  CFF5 F015          	movff	tablat,___flmul@a+2
  2651  0012B4  000A               	tblrd		*-
  2652  0012B6  CFF5 F016          	movff	tablat,___flmul@a+3
  2653  0012BA  EC79  F00A         	call	___flmul	;wreg free
  2654  0012BE  D7A5               	goto	L3
  2655  0012C0                     l2846:
  2656                           
  2657                           ;doprnt.c: 434: return _npowers_[scl];
  2658  0012C0  5030               	movf	scale@scl,w,c
  2659  0012C2  0D04               	mullw	4
  2660  0012C4  0E01               	movlw	low __npowers_
  2661  0012C6  24F3               	addwf	prodl,w,c
  2662  0012C8  6EF6               	movwf	tblptrl,c
  2663  0012CA  0E08               	movlw	high __npowers_
  2664  0012CC  20F4               	addwfc	prodh,w,c
  2665  0012CE  6EF7               	movwf	tblptrh,c
  2666  0012D0                     	if	0	;There are less than 3 active tblptr bytes
  2667  0012D0                     	endif
  2668  0012D0  0009               	tblrd		*+
  2669  0012D2  CFF5 F028          	movff	tablat,?_scale
  2670  0012D6  0009               	tblrd		*+
  2671  0012D8  CFF5 F029          	movff	tablat,?_scale+1
  2672  0012DC  0009               	tblrd		*+
  2673  0012DE  CFF5 F02A          	movff	tablat,?_scale+2
  2674  0012E2  000A               	tblrd		*-
  2675  0012E4  CFF5 F02B          	movff	tablat,?_scale+3
  2676  0012E8  0012               	return	
  2677  0012EA                     l2850:
  2678                           
  2679                           ;doprnt.c: 435: }
  2680                           ;doprnt.c: 436: if(scl>=110)
  2681  0012EA  5030               	movf	scale@scl,w,c
  2682  0012EC  0A80               	xorlw	128
  2683  0012EE  0F12               	addlw	-238
  2684  0012F0  A0D8               	btfss	status,0,c
  2685  0012F2  D098               	goto	l2858
  2686                           
  2687                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  2688  0012F4  0E00               	movlw	0
  2689  0012F6  6E0A               	movwf	___awdiv@divisor+1,c
  2690  0012F8  0E0A               	movlw	10
  2691  0012FA  6E09               	movwf	___awdiv@divisor,c
  2692  0012FC  0E00               	movlw	0
  2693  0012FE  6E04               	movwf	___awmod@divisor+1,c
  2694  001300  0E64               	movlw	100
  2695  001302  6E03               	movwf	___awmod@divisor,c
  2696  001304  5030               	movf	scale@scl,w,c
  2697  001306  6E01               	movwf	___awmod@dividend,c
  2698  001308  6A02               	clrf	___awmod@dividend+1,c
  2699  00130A  BE01               	btfsc	___awmod@dividend,7,c
  2700  00130C  0602               	decf	___awmod@dividend+1,f,c
  2701  00130E  EC61  F016         	call	___awmod	;wreg free
  2702  001312  C001  F007         	movff	?___awmod,___awdiv@dividend
  2703  001316  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  2704  00131A  ECDE  F015         	call	___awdiv	;wreg free
  2705  00131E  90D8               	bcf	status,0,c
  2706  001320  3607               	rlcf	?___awdiv,f,c
  2707  001322  3608               	rlcf	?___awdiv+1,f,c
  2708  001324  90D8               	bcf	status,0,c
  2709  001326  3607               	rlcf	?___awdiv,f,c
  2710  001328  3608               	rlcf	?___awdiv+1,f,c
  2711  00132A  0E24               	movlw	36
  2712  00132C  2607               	addwf	?___awdiv,f,c
  2713  00132E  0E00               	movlw	0
  2714  001330  2208               	addwfc	?___awdiv+1,f,c
  2715  001332  0E35               	movlw	low __powers_
  2716  001334  2407               	addwf	?___awdiv,w,c
  2717  001336  6EF6               	movwf	tblptrl,c
  2718  001338  0E08               	movlw	high __powers_
  2719  00133A  2008               	addwfc	?___awdiv+1,w,c
  2720  00133C  6EF7               	movwf	tblptrh,c
  2721  00133E                     	if	0	;There are less than 3 active tblptr bytes
  2722  00133E                     	endif
  2723  00133E  0009               	tblrd		*+
  2724  001340  CFF5 F013          	movff	tablat,___flmul@a
  2725  001344  0009               	tblrd		*+
  2726  001346  CFF5 F014          	movff	tablat,___flmul@a+1
  2727  00134A  0009               	tblrd		*+
  2728  00134C  CFF5 F015          	movff	tablat,___flmul@a+2
  2729  001350  000A               	tblrd		*-
  2730  001352  CFF5 F016          	movff	tablat,___flmul@a+3
  2731  001356  0E00               	movlw	0
  2732  001358  6E0A               	movwf	___awdiv@divisor+1,c
  2733  00135A  0E64               	movlw	100
  2734  00135C  6E09               	movwf	___awdiv@divisor,c
  2735  00135E  5030               	movf	scale@scl,w,c
  2736  001360  6E07               	movwf	___awdiv@dividend,c
  2737  001362  6A08               	clrf	___awdiv@dividend+1,c
  2738  001364  BE07               	btfsc	___awdiv@dividend,7,c
  2739  001366  0608               	decf	___awdiv@dividend+1,f,c
  2740  001368  ECDE  F015         	call	___awdiv	;wreg free
  2741  00136C  90D8               	bcf	status,0,c
  2742  00136E  3607               	rlcf	?___awdiv,f,c
  2743  001370  3608               	rlcf	?___awdiv+1,f,c
  2744  001372  90D8               	bcf	status,0,c
  2745  001374  3607               	rlcf	?___awdiv,f,c
  2746  001376  3608               	rlcf	?___awdiv+1,f,c
  2747  001378  0E48               	movlw	72
  2748  00137A  2607               	addwf	?___awdiv,f,c
  2749  00137C  0E00               	movlw	0
  2750  00137E  2208               	addwfc	?___awdiv+1,f,c
  2751  001380  0E35               	movlw	low __powers_
  2752  001382  2407               	addwf	?___awdiv,w,c
  2753  001384  6EF6               	movwf	tblptrl,c
  2754  001386  0E08               	movlw	high __powers_
  2755  001388  2008               	addwfc	?___awdiv+1,w,c
  2756  00138A  6EF7               	movwf	tblptrh,c
  2757  00138C                     	if	0	;There are less than 3 active tblptr bytes
  2758  00138C                     	endif
  2759  00138C  0009               	tblrd		*+
  2760  00138E  CFF5 F00F          	movff	tablat,___flmul@b
  2761  001392  0009               	tblrd		*+
  2762  001394  CFF5 F010          	movff	tablat,___flmul@b+1
  2763  001398  0009               	tblrd		*+
  2764  00139A  CFF5 F011          	movff	tablat,___flmul@b+2
  2765  00139E  000A               	tblrd		*-
  2766  0013A0  CFF5 F012          	movff	tablat,___flmul@b+3
  2767  0013A4  EC79  F00A         	call	___flmul	;wreg free
  2768  0013A8  C00F  F02C         	movff	?___flmul,_scale$1143
  2769  0013AC  C010  F02D         	movff	?___flmul+1,_scale$1143+1
  2770  0013B0  C011  F02E         	movff	?___flmul+2,_scale$1143+2
  2771  0013B4  C012  F02F         	movff	?___flmul+3,_scale$1143+3
  2772                           
  2773                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  2774  0013B8  C02C  F00F         	movff	_scale$1143,___flmul@b
  2775  0013BC  C02D  F010         	movff	_scale$1143+1,___flmul@b+1
  2776  0013C0  C02E  F011         	movff	_scale$1143+2,___flmul@b+2
  2777  0013C4  C02F  F012         	movff	_scale$1143+3,___flmul@b+3
  2778  0013C8  0E00               	movlw	0
  2779  0013CA  6E04               	movwf	___awmod@divisor+1,c
  2780  0013CC  0E0A               	movlw	10
  2781  0013CE  6E03               	movwf	___awmod@divisor,c
  2782  0013D0  5030               	movf	scale@scl,w,c
  2783  0013D2  6E01               	movwf	___awmod@dividend,c
  2784  0013D4  6A02               	clrf	___awmod@dividend+1,c
  2785  0013D6  BE01               	btfsc	___awmod@dividend,7,c
  2786  0013D8  0602               	decf	___awmod@dividend+1,f,c
  2787  0013DA  EC61  F016         	call	___awmod	;wreg free
  2788  0013DE  90D8               	bcf	status,0,c
  2789  0013E0  3601               	rlcf	?___awmod,f,c
  2790  0013E2  3602               	rlcf	?___awmod+1,f,c
  2791  0013E4  90D8               	bcf	status,0,c
  2792  0013E6  3601               	rlcf	?___awmod,f,c
  2793  0013E8  3602               	rlcf	?___awmod+1,f,c
  2794  0013EA  0E35               	movlw	low __powers_
  2795  0013EC  2401               	addwf	?___awmod,w,c
  2796  0013EE  6EF6               	movwf	tblptrl,c
  2797  0013F0  0E08               	movlw	high __powers_
  2798  0013F2  2002               	addwfc	?___awmod+1,w,c
  2799  0013F4  6EF7               	movwf	tblptrh,c
  2800  0013F6                     	if	0	;There are less than 3 active tblptr bytes
  2801  0013F6                     	endif
  2802  0013F6  0009               	tblrd		*+
  2803  0013F8  CFF5 F013          	movff	tablat,___flmul@a
  2804  0013FC  0009               	tblrd		*+
  2805  0013FE  CFF5 F014          	movff	tablat,___flmul@a+1
  2806  001402  0009               	tblrd		*+
  2807  001404  CFF5 F015          	movff	tablat,___flmul@a+2
  2808  001408  000A               	tblrd		*-
  2809  00140A  CFF5 F016          	movff	tablat,___flmul@a+3
  2810  00140E  EC79  F00A         	call	___flmul	;wreg free
  2811  001412  C00F  F028         	movff	?___flmul,?_scale
  2812  001416  C010  F029         	movff	?___flmul+1,?_scale+1
  2813  00141A  C011  F02A         	movff	?___flmul+2,?_scale+2
  2814  00141E  C012  F02B         	movff	?___flmul+3,?_scale+3
  2815  001422  0012               	return	
  2816  001424                     l2858:
  2817                           
  2818                           ;doprnt.c: 438: else if(scl > 10)
  2819  001424  5030               	movf	scale@scl,w,c
  2820  001426  0A80               	xorlw	128
  2821  001428  0F75               	addlw	-139
  2822  00142A  A0D8               	btfss	status,0,c
  2823  00142C  D04D               	goto	l2864
  2824                           
  2825                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  2826  00142E  0E00               	movlw	0
  2827  001430  6E0A               	movwf	___awdiv@divisor+1,c
  2828  001432  0E0A               	movlw	10
  2829  001434  6E09               	movwf	___awdiv@divisor,c
  2830  001436  5030               	movf	scale@scl,w,c
  2831  001438  6E07               	movwf	___awdiv@dividend,c
  2832  00143A  6A08               	clrf	___awdiv@dividend+1,c
  2833  00143C  BE07               	btfsc	___awdiv@dividend,7,c
  2834  00143E  0608               	decf	___awdiv@dividend+1,f,c
  2835  001440  ECDE  F015         	call	___awdiv	;wreg free
  2836  001444  90D8               	bcf	status,0,c
  2837  001446  3607               	rlcf	?___awdiv,f,c
  2838  001448  3608               	rlcf	?___awdiv+1,f,c
  2839  00144A  90D8               	bcf	status,0,c
  2840  00144C  3607               	rlcf	?___awdiv,f,c
  2841  00144E  3608               	rlcf	?___awdiv+1,f,c
  2842  001450  0E24               	movlw	36
  2843  001452  2607               	addwf	?___awdiv,f,c
  2844  001454  0E00               	movlw	0
  2845  001456  2208               	addwfc	?___awdiv+1,f,c
  2846  001458  0E35               	movlw	low __powers_
  2847  00145A  2407               	addwf	?___awdiv,w,c
  2848  00145C  6EF6               	movwf	tblptrl,c
  2849  00145E  0E08               	movlw	high __powers_
  2850  001460  2008               	addwfc	?___awdiv+1,w,c
  2851  001462  6EF7               	movwf	tblptrh,c
  2852  001464                     	if	0	;There are less than 3 active tblptr bytes
  2853  001464                     	endif
  2854  001464  0009               	tblrd		*+
  2855  001466  CFF5 F00F          	movff	tablat,___flmul@b
  2856  00146A  0009               	tblrd		*+
  2857  00146C  CFF5 F010          	movff	tablat,___flmul@b+1
  2858  001470  0009               	tblrd		*+
  2859  001472  CFF5 F011          	movff	tablat,___flmul@b+2
  2860  001476  000A               	tblrd		*-
  2861  001478  CFF5 F012          	movff	tablat,___flmul@b+3
  2862  00147C  0E00               	movlw	0
  2863  00147E  6E04               	movwf	___awmod@divisor+1,c
  2864  001480  0E0A               	movlw	10
  2865  001482  6E03               	movwf	___awmod@divisor,c
  2866  001484  5030               	movf	scale@scl,w,c
  2867  001486  6E01               	movwf	___awmod@dividend,c
  2868  001488  6A02               	clrf	___awmod@dividend+1,c
  2869  00148A  BE01               	btfsc	___awmod@dividend,7,c
  2870  00148C  0602               	decf	___awmod@dividend+1,f,c
  2871  00148E  EC61  F016         	call	___awmod	;wreg free
  2872  001492  90D8               	bcf	status,0,c
  2873  001494  3601               	rlcf	?___awmod,f,c
  2874  001496  3602               	rlcf	?___awmod+1,f,c
  2875  001498  90D8               	bcf	status,0,c
  2876  00149A  3601               	rlcf	?___awmod,f,c
  2877  00149C  3602               	rlcf	?___awmod+1,f,c
  2878  00149E  0E35               	movlw	low __powers_
  2879  0014A0  2401               	addwf	?___awmod,w,c
  2880  0014A2  6EF6               	movwf	tblptrl,c
  2881  0014A4  0E08               	movlw	high __powers_
  2882  0014A6  2002               	addwfc	?___awmod+1,w,c
  2883  0014A8  6EF7               	movwf	tblptrh,c
  2884  0014AA                     	if	0	;There are less than 3 active tblptr bytes
  2885  0014AA                     	endif
  2886  0014AA  0009               	tblrd		*+
  2887  0014AC  CFF5 F013          	movff	tablat,___flmul@a
  2888  0014B0  0009               	tblrd		*+
  2889  0014B2  CFF5 F014          	movff	tablat,___flmul@a+1
  2890  0014B6  0009               	tblrd		*+
  2891  0014B8  CFF5 F015          	movff	tablat,___flmul@a+2
  2892  0014BC  000A               	tblrd		*-
  2893  0014BE  CFF5 F016          	movff	tablat,___flmul@a+3
  2894  0014C2  EC79  F00A         	call	___flmul	;wreg free
  2895  0014C6  D7A5               	goto	L4
  2896  0014C8                     l2864:
  2897                           
  2898                           ;doprnt.c: 440: return _powers_[scl];
  2899  0014C8  5030               	movf	scale@scl,w,c
  2900  0014CA  0D04               	mullw	4
  2901  0014CC  0E35               	movlw	low __powers_
  2902  0014CE  24F3               	addwf	prodl,w,c
  2903  0014D0  6EF6               	movwf	tblptrl,c
  2904  0014D2  0E08               	movlw	high __powers_
  2905  0014D4  20F4               	addwfc	prodh,w,c
  2906  0014D6  6EF7               	movwf	tblptrh,c
  2907  0014D8                     	if	0	;There are less than 3 active tblptr bytes
  2908  0014D8                     	endif
  2909  0014D8  0009               	tblrd		*+
  2910  0014DA  CFF5 F028          	movff	tablat,?_scale
  2911  0014DE  0009               	tblrd		*+
  2912  0014E0  CFF5 F029          	movff	tablat,?_scale+1
  2913  0014E4  0009               	tblrd		*+
  2914  0014E6  CFF5 F02A          	movff	tablat,?_scale+2
  2915  0014EA  000A               	tblrd		*-
  2916  0014EC  CFF5 F02B          	movff	tablat,?_scale+3
  2917  0014F0  0012               	return	
  2918  0014F2                     __end_of_scale:
  2919                           	opt stack 0
  2920                           tblptru	equ	0xFF8
  2921                           tblptrh	equ	0xFF7
  2922                           tblptrl	equ	0xFF6
  2923                           tablat	equ	0xFF5
  2924                           prodh	equ	0xFF4
  2925                           prodl	equ	0xFF3
  2926                           postinc0	equ	0xFEE
  2927                           wreg	equ	0xFE8
  2928                           indf2	equ	0xFDF
  2929                           postinc2	equ	0xFDE
  2930                           fsr2h	equ	0xFDA
  2931                           fsr2l	equ	0xFD9
  2932                           status	equ	0xFD8
  2933                           
  2934 ;; *************** function _isdigit *****************
  2935 ;; Defined at:
  2936 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
  2937 ;; Parameters:    Size  Location     Type
  2938 ;;  c               1    wreg     unsigned char 
  2939 ;; Auto vars:     Size  Location     Type
  2940 ;;  c               1    2[COMRAM] unsigned char 
  2941 ;; Return value:  Size  Location     Type
  2942 ;;		None               void
  2943 ;; Registers used:
  2944 ;;		wreg, status,2, status,0
  2945 ;; Tracked objects:
  2946 ;;		On entry : 0/0
  2947 ;;		On exit  : 0/0
  2948 ;;		Unchanged: 0/0
  2949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2950 ;;      Params:         0       0       0       0       0       0       0       0       0
  2951 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2952 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2953 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2954 ;;Total ram usage:        3 bytes
  2955 ;; Hardware stack levels used:    1
  2956 ;; This function calls:
  2957 ;;		Nothing
  2958 ;; This function is called by:
  2959 ;;		_sprintf
  2960 ;; This function uses a non-reentrant model
  2961 ;;
  2962                           
  2963                           	psect	text4
  2964  00309C                     __ptext4:
  2965                           	opt stack 0
  2966  00309C                     _isdigit:
  2967                           	opt stack 28
  2968                           
  2969                           ;incstack = 0
  2970                           ;isdigit@c stored from wreg
  2971  00309C  6E03               	movwf	isdigit@c,c
  2972  00309E  0E00               	movlw	0
  2973  0030A0  6E02               	movwf	_isdigit$768,c
  2974  0030A2  0E3A               	movlw	58
  2975  0030A4  6003               	cpfslt	isdigit@c,c
  2976  0030A6  D005               	goto	l2876
  2977  0030A8  0E2F               	movlw	47
  2978  0030AA  6403               	cpfsgt	isdigit@c,c
  2979  0030AC  D002               	goto	l2876
  2980  0030AE  0E01               	movlw	1
  2981  0030B0  6E02               	movwf	_isdigit$768,c
  2982  0030B2                     l2876:
  2983  0030B2  C002  F001         	movff	_isdigit$768,??_isdigit
  2984  0030B6  3001               	rrcf	??_isdigit,w,c
  2985  0030B8  0012               	return	
  2986  0030BA                     __end_of_isdigit:
  2987                           	opt stack 0
  2988                           tblptru	equ	0xFF8
  2989                           tblptrh	equ	0xFF7
  2990                           tblptrl	equ	0xFF6
  2991                           tablat	equ	0xFF5
  2992                           prodh	equ	0xFF4
  2993                           prodl	equ	0xFF3
  2994                           postinc0	equ	0xFEE
  2995                           wreg	equ	0xFE8
  2996                           indf2	equ	0xFDF
  2997                           postinc2	equ	0xFDE
  2998                           fsr2h	equ	0xFDA
  2999                           fsr2l	equ	0xFD9
  3000                           status	equ	0xFD8
  3001                           
  3002 ;; *************** function _fround *****************
  3003 ;; Defined at:
  3004 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  3005 ;; Parameters:    Size  Location     Type
  3006 ;;  prec            1    wreg     unsigned char 
  3007 ;; Auto vars:     Size  Location     Type
  3008 ;;  prec            1   51[COMRAM] unsigned char 
  3009 ;; Return value:  Size  Location     Type
  3010 ;;                  4   39[COMRAM] unsigned char 
  3011 ;; Registers used:
  3012 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3013 ;; Tracked objects:
  3014 ;;		On entry : 0/0
  3015 ;;		On exit  : 0/0
  3016 ;;		Unchanged: 0/0
  3017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3018 ;;      Params:         4       0       0       0       0       0       0       0       0
  3019 ;;      Locals:         9       0       0       0       0       0       0       0       0
  3020 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3021 ;;      Totals:        13       0       0       0       0       0       0       0       0
  3022 ;;Total ram usage:       13 bytes
  3023 ;; Hardware stack levels used:    1
  3024 ;; Hardware stack levels required when called:    1
  3025 ;; This function calls:
  3026 ;;		___awdiv
  3027 ;;		___awmod
  3028 ;;		___flmul
  3029 ;; This function is called by:
  3030 ;;		_sprintf
  3031 ;; This function uses a non-reentrant model
  3032 ;;
  3033                           
  3034                           	psect	text5
  3035  001E32                     __ptext5:
  3036                           	opt stack 0
  3037  001E32                     _fround:
  3038                           	opt stack 27
  3039                           
  3040                           ;incstack = 0
  3041                           ;fround@prec stored from wreg
  3042  001E32  6E34               	movwf	fround@prec,c
  3043                           
  3044                           ;doprnt.c: 413: if(prec>=110)
  3045  001E34  0E6D               	movlw	109
  3046  001E36  6434               	cpfsgt	fround@prec,c
  3047  001E38  D0AC               	goto	l2818
  3048                           
  3049                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  3050  001E3A  0E00               	movlw	0
  3051  001E3C  6E0A               	movwf	___awdiv@divisor+1,c
  3052  001E3E  0E0A               	movlw	10
  3053  001E40  6E09               	movwf	___awdiv@divisor,c
  3054  001E42  0E00               	movlw	0
  3055  001E44  6E04               	movwf	___awmod@divisor+1,c
  3056  001E46  0E64               	movlw	100
  3057  001E48  6E03               	movwf	___awmod@divisor,c
  3058  001E4A  C034  F001         	movff	fround@prec,___awmod@dividend
  3059  001E4E  6A02               	clrf	___awmod@dividend+1,c
  3060  001E50  EC61  F016         	call	___awmod	;wreg free
  3061  001E54  C001  F007         	movff	?___awmod,___awdiv@dividend
  3062  001E58  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  3063  001E5C  ECDE  F015         	call	___awdiv	;wreg free
  3064  001E60  90D8               	bcf	status,0,c
  3065  001E62  3607               	rlcf	?___awdiv,f,c
  3066  001E64  3608               	rlcf	?___awdiv+1,f,c
  3067  001E66  90D8               	bcf	status,0,c
  3068  001E68  3607               	rlcf	?___awdiv,f,c
  3069  001E6A  3608               	rlcf	?___awdiv+1,f,c
  3070  001E6C  0E24               	movlw	36
  3071  001E6E  2607               	addwf	?___awdiv,f,c
  3072  001E70  0E00               	movlw	0
  3073  001E72  2208               	addwfc	?___awdiv+1,f,c
  3074  001E74  0E01               	movlw	low __npowers_
  3075  001E76  2407               	addwf	?___awdiv,w,c
  3076  001E78  6EF6               	movwf	tblptrl,c
  3077  001E7A  0E08               	movlw	high __npowers_
  3078  001E7C  2008               	addwfc	?___awdiv+1,w,c
  3079  001E7E  6EF7               	movwf	tblptrh,c
  3080  001E80                     	if	0	;There are less than 3 active tblptr bytes
  3081  001E80                     	endif
  3082  001E80  0009               	tblrd		*+
  3083  001E82  CFF5 F013          	movff	tablat,___flmul@a
  3084  001E86  0009               	tblrd		*+
  3085  001E88  CFF5 F014          	movff	tablat,___flmul@a+1
  3086  001E8C  0009               	tblrd		*+
  3087  001E8E  CFF5 F015          	movff	tablat,___flmul@a+2
  3088  001E92  000A               	tblrd		*-
  3089  001E94  CFF5 F016          	movff	tablat,___flmul@a+3
  3090  001E98  0E00               	movlw	0
  3091  001E9A  6E0A               	movwf	___awdiv@divisor+1,c
  3092  001E9C  0E64               	movlw	100
  3093  001E9E  6E09               	movwf	___awdiv@divisor,c
  3094  001EA0  C034  F007         	movff	fround@prec,___awdiv@dividend
  3095  001EA4  6A08               	clrf	___awdiv@dividend+1,c
  3096  001EA6  ECDE  F015         	call	___awdiv	;wreg free
  3097  001EAA  90D8               	bcf	status,0,c
  3098  001EAC  3607               	rlcf	?___awdiv,f,c
  3099  001EAE  3608               	rlcf	?___awdiv+1,f,c
  3100  001EB0  90D8               	bcf	status,0,c
  3101  001EB2  3607               	rlcf	?___awdiv,f,c
  3102  001EB4  3608               	rlcf	?___awdiv+1,f,c
  3103  001EB6  0E48               	movlw	72
  3104  001EB8  2607               	addwf	?___awdiv,f,c
  3105  001EBA  0E00               	movlw	0
  3106  001EBC  2208               	addwfc	?___awdiv+1,f,c
  3107  001EBE  0E01               	movlw	low __npowers_
  3108  001EC0  2407               	addwf	?___awdiv,w,c
  3109  001EC2  6EF6               	movwf	tblptrl,c
  3110  001EC4  0E08               	movlw	high __npowers_
  3111  001EC6  2008               	addwfc	?___awdiv+1,w,c
  3112  001EC8  6EF7               	movwf	tblptrh,c
  3113  001ECA                     	if	0	;There are less than 3 active tblptr bytes
  3114  001ECA                     	endif
  3115  001ECA  0009               	tblrd		*+
  3116  001ECC  CFF5 F00F          	movff	tablat,___flmul@b
  3117  001ED0  0009               	tblrd		*+
  3118  001ED2  CFF5 F010          	movff	tablat,___flmul@b+1
  3119  001ED6  0009               	tblrd		*+
  3120  001ED8  CFF5 F011          	movff	tablat,___flmul@b+2
  3121  001EDC  000A               	tblrd		*-
  3122  001EDE  CFF5 F012          	movff	tablat,___flmul@b+3
  3123  001EE2  EC79  F00A         	call	___flmul	;wreg free
  3124  001EE6  C00F  F030         	movff	?___flmul,_fround$1141
  3125  001EEA  C010  F031         	movff	?___flmul+1,_fround$1141+1
  3126  001EEE  C011  F032         	movff	?___flmul+2,_fround$1141+2
  3127  001EF2  C012  F033         	movff	?___flmul+3,_fround$1141+3
  3128                           
  3129                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  3130  001EF6  0E00               	movlw	0
  3131  001EF8  6E04               	movwf	___awmod@divisor+1,c
  3132  001EFA  0E0A               	movlw	10
  3133  001EFC  6E03               	movwf	___awmod@divisor,c
  3134  001EFE  C034  F001         	movff	fround@prec,___awmod@dividend
  3135  001F02  6A02               	clrf	___awmod@dividend+1,c
  3136  001F04  EC61  F016         	call	___awmod	;wreg free
  3137  001F08  90D8               	bcf	status,0,c
  3138  001F0A  3601               	rlcf	?___awmod,f,c
  3139  001F0C  3602               	rlcf	?___awmod+1,f,c
  3140  001F0E  90D8               	bcf	status,0,c
  3141  001F10  3601               	rlcf	?___awmod,f,c
  3142  001F12  3602               	rlcf	?___awmod+1,f,c
  3143  001F14  0E01               	movlw	low __npowers_
  3144  001F16  2401               	addwf	?___awmod,w,c
  3145  001F18  6EF6               	movwf	tblptrl,c
  3146  001F1A  0E08               	movlw	high __npowers_
  3147  001F1C  2002               	addwfc	?___awmod+1,w,c
  3148  001F1E  6EF7               	movwf	tblptrh,c
  3149  001F20                     	if	0	;There are less than 3 active tblptr bytes
  3150  001F20                     	endif
  3151  001F20  0009               	tblrd		*+
  3152  001F22  CFF5 F013          	movff	tablat,___flmul@a
  3153  001F26  0009               	tblrd		*+
  3154  001F28  CFF5 F014          	movff	tablat,___flmul@a+1
  3155  001F2C  0009               	tblrd		*+
  3156  001F2E  CFF5 F015          	movff	tablat,___flmul@a+2
  3157  001F32  000A               	tblrd		*-
  3158  001F34  CFF5 F016          	movff	tablat,___flmul@a+3
  3159  001F38  C030  F00F         	movff	_fround$1141,___flmul@b
  3160  001F3C  C031  F010         	movff	_fround$1141+1,___flmul@b+1
  3161  001F40  C032  F011         	movff	_fround$1141+2,___flmul@b+2
  3162  001F44  C033  F012         	movff	_fround$1141+3,___flmul@b+3
  3163  001F48  EC79  F00A         	call	___flmul	;wreg free
  3164  001F4C  C00F  F02C         	movff	?___flmul,_fround$1142
  3165  001F50  C010  F02D         	movff	?___flmul+1,_fround$1142+1
  3166  001F54  C011  F02E         	movff	?___flmul+2,_fround$1142+2
  3167  001F58  C012  F02F         	movff	?___flmul+3,_fround$1142+3
  3168                           
  3169                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  3170  001F5C  C02C  F00F         	movff	_fround$1142,___flmul@b
  3171  001F60  C02D  F010         	movff	_fround$1142+1,___flmul@b+1
  3172  001F64  C02E  F011         	movff	_fround$1142+2,___flmul@b+2
  3173  001F68  C02F  F012         	movff	_fround$1142+3,___flmul@b+3
  3174  001F6C  0E00               	movlw	0
  3175  001F6E  6E13               	movwf	___flmul@a,c
  3176  001F70  0E00               	movlw	0
  3177  001F72  6E14               	movwf	___flmul@a+1,c
  3178  001F74  0E00               	movlw	0
  3179  001F76  6E15               	movwf	___flmul@a+2,c
  3180  001F78  0E3F               	movlw	63
  3181  001F7A  6E16               	movwf	___flmul@a+3,c
  3182  001F7C  EC79  F00A         	call	___flmul	;wreg free
  3183  001F80  C00F  F028         	movff	?___flmul,?_fround
  3184  001F84  C010  F029         	movff	?___flmul+1,?_fround+1
  3185  001F88  C011  F02A         	movff	?___flmul+2,?_fround+2
  3186  001F8C  C012  F02B         	movff	?___flmul+3,?_fround+3
  3187  001F90  0012               	return	
  3188  001F92                     l2818:
  3189                           
  3190                           ;doprnt.c: 415: else if(prec > 10)
  3191  001F92  0E0A               	movlw	10
  3192  001F94  6434               	cpfsgt	fround@prec,c
  3193  001F96  D063               	goto	l2826
  3194                           
  3195                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  3196  001F98  0E00               	movlw	0
  3197  001F9A  6E04               	movwf	___awmod@divisor+1,c
  3198  001F9C  0E0A               	movlw	10
  3199  001F9E  6E03               	movwf	___awmod@divisor,c
  3200  001FA0  C034  F001         	movff	fround@prec,___awmod@dividend
  3201  001FA4  6A02               	clrf	___awmod@dividend+1,c
  3202  001FA6  EC61  F016         	call	___awmod	;wreg free
  3203  001FAA  90D8               	bcf	status,0,c
  3204  001FAC  3601               	rlcf	?___awmod,f,c
  3205  001FAE  3602               	rlcf	?___awmod+1,f,c
  3206  001FB0  90D8               	bcf	status,0,c
  3207  001FB2  3601               	rlcf	?___awmod,f,c
  3208  001FB4  3602               	rlcf	?___awmod+1,f,c
  3209  001FB6  0E01               	movlw	low __npowers_
  3210  001FB8  2401               	addwf	?___awmod,w,c
  3211  001FBA  6EF6               	movwf	tblptrl,c
  3212  001FBC  0E08               	movlw	high __npowers_
  3213  001FBE  2002               	addwfc	?___awmod+1,w,c
  3214  001FC0  6EF7               	movwf	tblptrh,c
  3215  001FC2                     	if	0	;There are less than 3 active tblptr bytes
  3216  001FC2                     	endif
  3217  001FC2  0009               	tblrd		*+
  3218  001FC4  CFF5 F013          	movff	tablat,___flmul@a
  3219  001FC8  0009               	tblrd		*+
  3220  001FCA  CFF5 F014          	movff	tablat,___flmul@a+1
  3221  001FCE  0009               	tblrd		*+
  3222  001FD0  CFF5 F015          	movff	tablat,___flmul@a+2
  3223  001FD4  000A               	tblrd		*-
  3224  001FD6  CFF5 F016          	movff	tablat,___flmul@a+3
  3225  001FDA  0E00               	movlw	0
  3226  001FDC  6E0A               	movwf	___awdiv@divisor+1,c
  3227  001FDE  0E0A               	movlw	10
  3228  001FE0  6E09               	movwf	___awdiv@divisor,c
  3229  001FE2  C034  F007         	movff	fround@prec,___awdiv@dividend
  3230  001FE6  6A08               	clrf	___awdiv@dividend+1,c
  3231  001FE8  ECDE  F015         	call	___awdiv	;wreg free
  3232  001FEC  90D8               	bcf	status,0,c
  3233  001FEE  3607               	rlcf	?___awdiv,f,c
  3234  001FF0  3608               	rlcf	?___awdiv+1,f,c
  3235  001FF2  90D8               	bcf	status,0,c
  3236  001FF4  3607               	rlcf	?___awdiv,f,c
  3237  001FF6  3608               	rlcf	?___awdiv+1,f,c
  3238  001FF8  0E24               	movlw	36
  3239  001FFA  2607               	addwf	?___awdiv,f,c
  3240  001FFC  0E00               	movlw	0
  3241  001FFE  2208               	addwfc	?___awdiv+1,f,c
  3242  002000  0E01               	movlw	low __npowers_
  3243  002002  2407               	addwf	?___awdiv,w,c
  3244  002004  6EF6               	movwf	tblptrl,c
  3245  002006  0E08               	movlw	high __npowers_
  3246  002008  2008               	addwfc	?___awdiv+1,w,c
  3247  00200A  6EF7               	movwf	tblptrh,c
  3248  00200C                     	if	0	;There are less than 3 active tblptr bytes
  3249  00200C                     	endif
  3250  00200C  0009               	tblrd		*+
  3251  00200E  CFF5 F00F          	movff	tablat,___flmul@b
  3252  002012  0009               	tblrd		*+
  3253  002014  CFF5 F010          	movff	tablat,___flmul@b+1
  3254  002018  0009               	tblrd		*+
  3255  00201A  CFF5 F011          	movff	tablat,___flmul@b+2
  3256  00201E  000A               	tblrd		*-
  3257  002020  CFF5 F012          	movff	tablat,___flmul@b+3
  3258  002024  EC79  F00A         	call	___flmul	;wreg free
  3259  002028  C00F  F030         	movff	?___flmul,_fround$1141
  3260  00202C  C010  F031         	movff	?___flmul+1,_fround$1141+1
  3261  002030  C011  F032         	movff	?___flmul+2,_fround$1141+2
  3262  002034  C012  F033         	movff	?___flmul+3,_fround$1141+3
  3263                           
  3264                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  3265  002038  C030  F00F         	movff	_fround$1141,___flmul@b
  3266  00203C  C031  F010         	movff	_fround$1141+1,___flmul@b+1
  3267  002040  C032  F011         	movff	_fround$1141+2,___flmul@b+2
  3268  002044  C033  F012         	movff	_fround$1141+3,___flmul@b+3
  3269  002048  0E00               	movlw	0
  3270  00204A  6E13               	movwf	___flmul@a,c
  3271  00204C  0E00               	movlw	0
  3272  00204E  6E14               	movwf	___flmul@a+1,c
  3273  002050  0E00               	movlw	0
  3274  002052  6E15               	movwf	___flmul@a+2,c
  3275  002054  0E3F               	movlw	63
  3276  002056  6E16               	movwf	___flmul@a+3,c
  3277  002058  EC79  F00A         	call	___flmul	;wreg free
  3278  00205C  D791               	goto	L5
  3279  00205E                     l2826:
  3280                           
  3281                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  3282  00205E  5034               	movf	fround@prec,w,c
  3283  002060  0D04               	mullw	4
  3284  002062  0E01               	movlw	low __npowers_
  3285  002064  24F3               	addwf	prodl,w,c
  3286  002066  6EF6               	movwf	tblptrl,c
  3287  002068  0E08               	movlw	high __npowers_
  3288  00206A  20F4               	addwfc	prodh,w,c
  3289  00206C  6EF7               	movwf	tblptrh,c
  3290  00206E                     	if	0	;There are less than 3 active tblptr bytes
  3291  00206E                     	endif
  3292  00206E  0009               	tblrd		*+
  3293  002070  CFF5 F00F          	movff	tablat,___flmul@b
  3294  002074  0009               	tblrd		*+
  3295  002076  CFF5 F010          	movff	tablat,___flmul@b+1
  3296  00207A  0009               	tblrd		*+
  3297  00207C  CFF5 F011          	movff	tablat,___flmul@b+2
  3298  002080  000A               	tblrd		*-
  3299  002082  CFF5 F012          	movff	tablat,___flmul@b+3
  3300  002086  0E00               	movlw	0
  3301  002088  6E13               	movwf	___flmul@a,c
  3302  00208A  0E00               	movlw	0
  3303  00208C  6E14               	movwf	___flmul@a+1,c
  3304  00208E  0E00               	movlw	0
  3305  002090  6E15               	movwf	___flmul@a+2,c
  3306  002092  0E3F               	movlw	63
  3307  002094  6E16               	movwf	___flmul@a+3,c
  3308  002096  EC79  F00A         	call	___flmul	;wreg free
  3309  00209A  C00F  F028         	movff	?___flmul,?_fround
  3310  00209E  C010  F029         	movff	?___flmul+1,?_fround+1
  3311  0020A2  C011  F02A         	movff	?___flmul+2,?_fround+2
  3312  0020A6  C012  F02B         	movff	?___flmul+3,?_fround+3
  3313  0020AA  0012               	return	
  3314  0020AC                     __end_of_fround:
  3315                           	opt stack 0
  3316                           tblptru	equ	0xFF8
  3317                           tblptrh	equ	0xFF7
  3318                           tblptrl	equ	0xFF6
  3319                           tablat	equ	0xFF5
  3320                           prodh	equ	0xFF4
  3321                           prodl	equ	0xFF3
  3322                           postinc0	equ	0xFEE
  3323                           wreg	equ	0xFE8
  3324                           indf2	equ	0xFDF
  3325                           postinc2	equ	0xFDE
  3326                           fsr2h	equ	0xFDA
  3327                           fsr2l	equ	0xFD9
  3328                           status	equ	0xFD8
  3329                           
  3330 ;; *************** function ___awmod *****************
  3331 ;; Defined at:
  3332 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
  3333 ;; Parameters:    Size  Location     Type
  3334 ;;  dividend        2    0[COMRAM] int 
  3335 ;;  divisor         2    2[COMRAM] int 
  3336 ;; Auto vars:     Size  Location     Type
  3337 ;;  sign            1    5[COMRAM] unsigned char 
  3338 ;;  counter         1    4[COMRAM] unsigned char 
  3339 ;; Return value:  Size  Location     Type
  3340 ;;                  2    0[COMRAM] int 
  3341 ;; Registers used:
  3342 ;;		wreg, status,2, status,0
  3343 ;; Tracked objects:
  3344 ;;		On entry : 0/0
  3345 ;;		On exit  : 0/0
  3346 ;;		Unchanged: 0/0
  3347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3348 ;;      Params:         4       0       0       0       0       0       0       0       0
  3349 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3350 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3351 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3352 ;;Total ram usage:        6 bytes
  3353 ;; Hardware stack levels used:    1
  3354 ;; This function calls:
  3355 ;;		Nothing
  3356 ;; This function is called by:
  3357 ;;		_fround
  3358 ;;		_scale
  3359 ;; This function uses a non-reentrant model
  3360 ;;
  3361                           
  3362                           	psect	text6
  3363  002CC2                     __ptext6:
  3364                           	opt stack 0
  3365  002CC2                     ___awmod:
  3366                           	opt stack 27
  3367                           
  3368                           ;incstack = 0
  3369  002CC2  0E00               	movlw	0
  3370  002CC4  6E06               	movwf	___awmod@sign,c
  3371  002CC6  AE02               	btfss	___awmod@dividend+1,7,c
  3372  002CC8  D006               	goto	l2756
  3373  002CCA  6C01               	negf	___awmod@dividend,c
  3374  002CCC  1E02               	comf	___awmod@dividend+1,f,c
  3375  002CCE  B0D8               	btfsc	status,0,c
  3376  002CD0  2A02               	incf	___awmod@dividend+1,f,c
  3377  002CD2  0E01               	movlw	1
  3378  002CD4  6E06               	movwf	___awmod@sign,c
  3379  002CD6                     l2756:
  3380  002CD6  AE04               	btfss	___awmod@divisor+1,7,c
  3381  002CD8  D004               	goto	l2760
  3382  002CDA  6C03               	negf	___awmod@divisor,c
  3383  002CDC  1E04               	comf	___awmod@divisor+1,f,c
  3384  002CDE  B0D8               	btfsc	status,0,c
  3385  002CE0  2A04               	incf	___awmod@divisor+1,f,c
  3386  002CE2                     l2760:
  3387  002CE2  5003               	movf	___awmod@divisor,w,c
  3388  002CE4  1004               	iorwf	___awmod@divisor+1,w,c
  3389  002CE6  B4D8               	btfsc	status,2,c
  3390  002CE8  D018               	goto	l2776
  3391  002CEA  0E01               	movlw	1
  3392  002CEC  6E05               	movwf	___awmod@counter,c
  3393  002CEE  D004               	goto	l2766
  3394  002CF0                     l2764:
  3395  002CF0  90D8               	bcf	status,0,c
  3396  002CF2  3603               	rlcf	___awmod@divisor,f,c
  3397  002CF4  3604               	rlcf	___awmod@divisor+1,f,c
  3398  002CF6  2A05               	incf	___awmod@counter,f,c
  3399  002CF8                     l2766:
  3400  002CF8  AE04               	btfss	___awmod@divisor+1,7,c
  3401  002CFA  D7FA               	goto	l2764
  3402  002CFC                     l2768:
  3403  002CFC  5003               	movf	___awmod@divisor,w,c
  3404  002CFE  5C01               	subwf	___awmod@dividend,w,c
  3405  002D00  5004               	movf	___awmod@divisor+1,w,c
  3406  002D02  5802               	subwfb	___awmod@dividend+1,w,c
  3407  002D04  A0D8               	btfss	status,0,c
  3408  002D06  D004               	goto	l2772
  3409  002D08  5003               	movf	___awmod@divisor,w,c
  3410  002D0A  5E01               	subwf	___awmod@dividend,f,c
  3411  002D0C  5004               	movf	___awmod@divisor+1,w,c
  3412  002D0E  5A02               	subwfb	___awmod@dividend+1,f,c
  3413  002D10                     l2772:
  3414  002D10  90D8               	bcf	status,0,c
  3415  002D12  3204               	rrcf	___awmod@divisor+1,f,c
  3416  002D14  3203               	rrcf	___awmod@divisor,f,c
  3417  002D16  2E05               	decfsz	___awmod@counter,f,c
  3418  002D18  D7F1               	goto	l2768
  3419  002D1A                     l2776:
  3420  002D1A  5006               	movf	___awmod@sign,w,c
  3421  002D1C  B4D8               	btfsc	status,2,c
  3422  002D1E  D004               	goto	l2780
  3423  002D20  6C01               	negf	___awmod@dividend,c
  3424  002D22  1E02               	comf	___awmod@dividend+1,f,c
  3425  002D24  B0D8               	btfsc	status,0,c
  3426  002D26  2A02               	incf	___awmod@dividend+1,f,c
  3427  002D28                     l2780:
  3428  002D28  C001  F001         	movff	___awmod@dividend,?___awmod
  3429  002D2C  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  3430  002D30  0012               	return	
  3431  002D32                     __end_of___awmod:
  3432                           	opt stack 0
  3433                           tblptru	equ	0xFF8
  3434                           tblptrh	equ	0xFF7
  3435                           tblptrl	equ	0xFF6
  3436                           tablat	equ	0xFF5
  3437                           prodh	equ	0xFF4
  3438                           prodl	equ	0xFF3
  3439                           postinc0	equ	0xFEE
  3440                           wreg	equ	0xFE8
  3441                           indf2	equ	0xFDF
  3442                           postinc2	equ	0xFDE
  3443                           fsr2h	equ	0xFDA
  3444                           fsr2l	equ	0xFD9
  3445                           status	equ	0xFD8
  3446                           
  3447 ;; *************** function ___awdiv *****************
  3448 ;; Defined at:
  3449 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  3450 ;; Parameters:    Size  Location     Type
  3451 ;;  dividend        2    6[COMRAM] int 
  3452 ;;  divisor         2    8[COMRAM] int 
  3453 ;; Auto vars:     Size  Location     Type
  3454 ;;  quotient        2   12[COMRAM] int 
  3455 ;;  sign            1   11[COMRAM] unsigned char 
  3456 ;;  counter         1   10[COMRAM] unsigned char 
  3457 ;; Return value:  Size  Location     Type
  3458 ;;                  2    6[COMRAM] int 
  3459 ;; Registers used:
  3460 ;;		wreg, status,2, status,0
  3461 ;; Tracked objects:
  3462 ;;		On entry : 0/0
  3463 ;;		On exit  : 0/0
  3464 ;;		Unchanged: 0/0
  3465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3466 ;;      Params:         4       0       0       0       0       0       0       0       0
  3467 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3468 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3469 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3470 ;;Total ram usage:        8 bytes
  3471 ;; Hardware stack levels used:    1
  3472 ;; This function calls:
  3473 ;;		Nothing
  3474 ;; This function is called by:
  3475 ;;		_fround
  3476 ;;		_scale
  3477 ;;		_sprintf
  3478 ;; This function uses a non-reentrant model
  3479 ;;
  3480                           
  3481                           	psect	text7
  3482  002BBC                     __ptext7:
  3483                           	opt stack 0
  3484  002BBC                     ___awdiv:
  3485                           	opt stack 27
  3486                           
  3487                           ;incstack = 0
  3488  002BBC  0E00               	movlw	0
  3489  002BBE  6E0C               	movwf	___awdiv@sign,c
  3490  002BC0  AE0A               	btfss	___awdiv@divisor+1,7,c
  3491  002BC2  D006               	goto	l2712
  3492  002BC4  6C09               	negf	___awdiv@divisor,c
  3493  002BC6  1E0A               	comf	___awdiv@divisor+1,f,c
  3494  002BC8  B0D8               	btfsc	status,0,c
  3495  002BCA  2A0A               	incf	___awdiv@divisor+1,f,c
  3496  002BCC  0E01               	movlw	1
  3497  002BCE  6E0C               	movwf	___awdiv@sign,c
  3498  002BD0                     l2712:
  3499  002BD0  AE08               	btfss	___awdiv@dividend+1,7,c
  3500  002BD2  D006               	goto	l2718
  3501  002BD4  6C07               	negf	___awdiv@dividend,c
  3502  002BD6  1E08               	comf	___awdiv@dividend+1,f,c
  3503  002BD8  B0D8               	btfsc	status,0,c
  3504  002BDA  2A08               	incf	___awdiv@dividend+1,f,c
  3505  002BDC  0E01               	movlw	1
  3506  002BDE  1A0C               	xorwf	___awdiv@sign,f,c
  3507  002BE0                     l2718:
  3508  002BE0  0E00               	movlw	0
  3509  002BE2  6E0E               	movwf	___awdiv@quotient+1,c
  3510  002BE4  0E00               	movlw	0
  3511  002BE6  6E0D               	movwf	___awdiv@quotient,c
  3512  002BE8  5009               	movf	___awdiv@divisor,w,c
  3513  002BEA  100A               	iorwf	___awdiv@divisor+1,w,c
  3514  002BEC  B4D8               	btfsc	status,2,c
  3515  002BEE  D01C               	goto	l2740
  3516  002BF0  0E01               	movlw	1
  3517  002BF2  6E0B               	movwf	___awdiv@counter,c
  3518  002BF4  D004               	goto	l2726
  3519  002BF6                     l2724:
  3520  002BF6  90D8               	bcf	status,0,c
  3521  002BF8  3609               	rlcf	___awdiv@divisor,f,c
  3522  002BFA  360A               	rlcf	___awdiv@divisor+1,f,c
  3523  002BFC  2A0B               	incf	___awdiv@counter,f,c
  3524  002BFE                     l2726:
  3525  002BFE  AE0A               	btfss	___awdiv@divisor+1,7,c
  3526  002C00  D7FA               	goto	l2724
  3527  002C02                     l2728:
  3528  002C02  90D8               	bcf	status,0,c
  3529  002C04  360D               	rlcf	___awdiv@quotient,f,c
  3530  002C06  360E               	rlcf	___awdiv@quotient+1,f,c
  3531  002C08  5009               	movf	___awdiv@divisor,w,c
  3532  002C0A  5C07               	subwf	___awdiv@dividend,w,c
  3533  002C0C  500A               	movf	___awdiv@divisor+1,w,c
  3534  002C0E  5808               	subwfb	___awdiv@dividend+1,w,c
  3535  002C10  A0D8               	btfss	status,0,c
  3536  002C12  D005               	goto	l2736
  3537  002C14  5009               	movf	___awdiv@divisor,w,c
  3538  002C16  5E07               	subwf	___awdiv@dividend,f,c
  3539  002C18  500A               	movf	___awdiv@divisor+1,w,c
  3540  002C1A  5A08               	subwfb	___awdiv@dividend+1,f,c
  3541  002C1C  800D               	bsf	___awdiv@quotient,0,c
  3542  002C1E                     l2736:
  3543  002C1E  90D8               	bcf	status,0,c
  3544  002C20  320A               	rrcf	___awdiv@divisor+1,f,c
  3545  002C22  3209               	rrcf	___awdiv@divisor,f,c
  3546  002C24  2E0B               	decfsz	___awdiv@counter,f,c
  3547  002C26  D7ED               	goto	l2728
  3548  002C28                     l2740:
  3549  002C28  500C               	movf	___awdiv@sign,w,c
  3550  002C2A  B4D8               	btfsc	status,2,c
  3551  002C2C  D004               	goto	l2744
  3552  002C2E  6C0D               	negf	___awdiv@quotient,c
  3553  002C30  1E0E               	comf	___awdiv@quotient+1,f,c
  3554  002C32  B0D8               	btfsc	status,0,c
  3555  002C34  2A0E               	incf	___awdiv@quotient+1,f,c
  3556  002C36                     l2744:
  3557  002C36  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  3558  002C3A  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  3559  002C3E  0012               	return	
  3560  002C40                     __end_of___awdiv:
  3561                           	opt stack 0
  3562                           tblptru	equ	0xFF8
  3563                           tblptrh	equ	0xFF7
  3564                           tblptrl	equ	0xFF6
  3565                           tablat	equ	0xFF5
  3566                           prodh	equ	0xFF4
  3567                           prodl	equ	0xFF3
  3568                           postinc0	equ	0xFEE
  3569                           wreg	equ	0xFE8
  3570                           indf2	equ	0xFDF
  3571                           postinc2	equ	0xFDE
  3572                           fsr2h	equ	0xFDA
  3573                           fsr2l	equ	0xFD9
  3574                           status	equ	0xFD8
  3575                           
  3576 ;; *************** function __tdiv_to_l_ *****************
  3577 ;; Defined at:
  3578 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftdivl.c"
  3579 ;; Parameters:    Size  Location     Type
  3580 ;;  f1              4    0[COMRAM] float 
  3581 ;;  f2              4    4[COMRAM] float 
  3582 ;; Auto vars:     Size  Location     Type
  3583 ;;  quot            4   11[COMRAM] unsigned long 
  3584 ;;  exp1            1   16[COMRAM] unsigned char 
  3585 ;;  cntr            1   15[COMRAM] unsigned char 
  3586 ;; Return value:  Size  Location     Type
  3587 ;;                  4    0[COMRAM] unsigned long 
  3588 ;; Registers used:
  3589 ;;		wreg, status,2, status,0
  3590 ;; Tracked objects:
  3591 ;;		On entry : 0/0
  3592 ;;		On exit  : 0/0
  3593 ;;		Unchanged: 0/0
  3594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3595 ;;      Params:         8       0       0       0       0       0       0       0       0
  3596 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3597 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3598 ;;      Totals:        17       0       0       0       0       0       0       0       0
  3599 ;;Total ram usage:       17 bytes
  3600 ;; Hardware stack levels used:    1
  3601 ;; This function calls:
  3602 ;;		Nothing
  3603 ;; This function is called by:
  3604 ;;		_sprintf
  3605 ;; This function uses a non-reentrant model
  3606 ;;
  3607                           
  3608                           	psect	text8
  3609  002594                     __ptext8:
  3610                           	opt stack 0
  3611  002594                     __tdiv_to_l_:
  3612                           	opt stack 28
  3613                           
  3614                           ;incstack = 0
  3615  002594  C003  F009         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  3616  002598  6A0A               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  3617  00259A  6A0B               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  3618  00259C  3402               	rlcf	__tdiv_to_l_@f1+1,w,c
  3619  00259E  3609               	rlcf	??__tdiv_to_l_& (0+255),f,c
  3620  0025A0  E301               	bnc	u2891
  3621  0025A2  800A               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  3622  0025A4                     u2891:
  3623  0025A4  5009               	movf	??__tdiv_to_l_,w,c
  3624  0025A6  6E11               	movwf	__tdiv_to_l_@exp1,c
  3625  0025A8  5011               	movf	__tdiv_to_l_@exp1,w,c
  3626  0025AA  A4D8               	btfss	status,2,c
  3627  0025AC  D009               	goto	l2886
  3628  0025AE  0E00               	movlw	0
  3629  0025B0  6E01               	movwf	?__tdiv_to_l_,c
  3630  0025B2  0E00               	movlw	0
  3631  0025B4  6E02               	movwf	?__tdiv_to_l_+1,c
  3632  0025B6  0E00               	movlw	0
  3633  0025B8  6E03               	movwf	?__tdiv_to_l_+2,c
  3634  0025BA  0E00               	movlw	0
  3635  0025BC  6E04               	movwf	?__tdiv_to_l_+3,c
  3636  0025BE  0012               	return	
  3637  0025C0                     l2886:
  3638  0025C0  C007  F009         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  3639  0025C4  6A0A               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  3640  0025C6  6A0B               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  3641  0025C8  3406               	rlcf	__tdiv_to_l_@f2+1,w,c
  3642  0025CA  3609               	rlcf	??__tdiv_to_l_& (0+255),f,c
  3643  0025CC  E301               	bnc	u2911
  3644  0025CE  800A               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  3645  0025D0                     u2911:
  3646  0025D0  5009               	movf	??__tdiv_to_l_,w,c
  3647  0025D2  6E10               	movwf	__tdiv_to_l_@cntr,c
  3648  0025D4  5010               	movf	__tdiv_to_l_@cntr,w,c
  3649  0025D6  A4D8               	btfss	status,2,c
  3650  0025D8  D009               	goto	l2892
  3651  0025DA  0E00               	movlw	0
  3652  0025DC  6E01               	movwf	?__tdiv_to_l_,c
  3653  0025DE  0E00               	movlw	0
  3654  0025E0  6E02               	movwf	?__tdiv_to_l_+1,c
  3655  0025E2  0E00               	movlw	0
  3656  0025E4  6E03               	movwf	?__tdiv_to_l_+2,c
  3657  0025E6  0E00               	movlw	0
  3658  0025E8  6E04               	movwf	?__tdiv_to_l_+3,c
  3659  0025EA  0012               	return	
  3660  0025EC                     l2892:
  3661  0025EC  8E02               	bsf	__tdiv_to_l_@f1+1,7,c
  3662  0025EE  0EFF               	movlw	255
  3663  0025F0  1601               	andwf	__tdiv_to_l_@f1,f,c
  3664  0025F2  0EFF               	movlw	255
  3665  0025F4  1602               	andwf	__tdiv_to_l_@f1+1,f,c
  3666  0025F6  0E00               	movlw	0
  3667  0025F8  1603               	andwf	__tdiv_to_l_@f1+2,f,c
  3668  0025FA  8E06               	bsf	__tdiv_to_l_@f2+1,7,c
  3669  0025FC  0EFF               	movlw	255
  3670  0025FE  1605               	andwf	__tdiv_to_l_@f2,f,c
  3671  002600  0EFF               	movlw	255
  3672  002602  1606               	andwf	__tdiv_to_l_@f2+1,f,c
  3673  002604  0E00               	movlw	0
  3674  002606  1607               	andwf	__tdiv_to_l_@f2+2,f,c
  3675  002608  0E00               	movlw	0
  3676  00260A  6E0C               	movwf	__tdiv_to_l_@quot,c
  3677  00260C  0E00               	movlw	0
  3678  00260E  6E0D               	movwf	__tdiv_to_l_@quot+1,c
  3679  002610  0E00               	movlw	0
  3680  002612  6E0E               	movwf	__tdiv_to_l_@quot+2,c
  3681  002614  0E00               	movlw	0
  3682  002616  6E0F               	movwf	__tdiv_to_l_@quot+3,c
  3683  002618  0E7F               	movlw	127
  3684  00261A  5E11               	subwf	__tdiv_to_l_@exp1,f,c
  3685  00261C  5010               	movf	__tdiv_to_l_@cntr,w,c
  3686  00261E  0F98               	addlw	152
  3687  002620  5E11               	subwf	__tdiv_to_l_@exp1,f,c
  3688  002622  0E18               	movlw	24
  3689  002624  6E10               	movwf	__tdiv_to_l_@cntr,c
  3690  002626                     l574:
  3691  002626  90D8               	bcf	status,0,c
  3692  002628  360C               	rlcf	__tdiv_to_l_@quot,f,c
  3693  00262A  360D               	rlcf	__tdiv_to_l_@quot+1,f,c
  3694  00262C  360E               	rlcf	__tdiv_to_l_@quot+2,f,c
  3695  00262E  360F               	rlcf	__tdiv_to_l_@quot+3,f,c
  3696  002630  5005               	movf	__tdiv_to_l_@f2,w,c
  3697  002632  5C01               	subwf	__tdiv_to_l_@f1,w,c
  3698  002634  5006               	movf	__tdiv_to_l_@f2+1,w,c
  3699  002636  5802               	subwfb	__tdiv_to_l_@f1+1,w,c
  3700  002638  5007               	movf	__tdiv_to_l_@f2+2,w,c
  3701  00263A  5803               	subwfb	__tdiv_to_l_@f1+2,w,c
  3702  00263C  A0D8               	btfss	status,0,c
  3703  00263E  D007               	goto	l575
  3704  002640  5005               	movf	__tdiv_to_l_@f2,w,c
  3705  002642  5E01               	subwf	__tdiv_to_l_@f1,f,c
  3706  002644  5006               	movf	__tdiv_to_l_@f2+1,w,c
  3707  002646  5A02               	subwfb	__tdiv_to_l_@f1+1,f,c
  3708  002648  5007               	movf	__tdiv_to_l_@f2+2,w,c
  3709  00264A  5A03               	subwfb	__tdiv_to_l_@f1+2,f,c
  3710  00264C  800C               	bsf	__tdiv_to_l_@quot,0,c
  3711  00264E                     l575:
  3712  00264E  90D8               	bcf	status,0,c
  3713  002650  3601               	rlcf	__tdiv_to_l_@f1,f,c
  3714  002652  3602               	rlcf	__tdiv_to_l_@f1+1,f,c
  3715  002654  3603               	rlcf	__tdiv_to_l_@f1+2,f,c
  3716  002656  2E10               	decfsz	__tdiv_to_l_@cntr,f,c
  3717  002658  D7E6               	goto	l574
  3718  00265A  AE11               	btfss	__tdiv_to_l_@exp1,7,c
  3719  00265C  D016               	goto	l2926
  3720  00265E  5011               	movf	__tdiv_to_l_@exp1,w,c
  3721  002660  0A80               	xorlw	128
  3722  002662  0F97               	addlw	151
  3723  002664  B0D8               	btfsc	status,0,c
  3724  002666  D009               	goto	l2922
  3725  002668  0E00               	movlw	0
  3726  00266A  6E01               	movwf	?__tdiv_to_l_,c
  3727  00266C  0E00               	movlw	0
  3728  00266E  6E02               	movwf	?__tdiv_to_l_+1,c
  3729  002670  0E00               	movlw	0
  3730  002672  6E03               	movwf	?__tdiv_to_l_+2,c
  3731  002674  0E00               	movlw	0
  3732  002676  6E04               	movwf	?__tdiv_to_l_+3,c
  3733  002678  0012               	return	
  3734  00267A                     l2922:
  3735  00267A  90D8               	bcf	status,0,c
  3736  00267C  320F               	rrcf	__tdiv_to_l_@quot+3,f,c
  3737  00267E  320E               	rrcf	__tdiv_to_l_@quot+2,f,c
  3738  002680  320D               	rrcf	__tdiv_to_l_@quot+1,f,c
  3739  002682  320C               	rrcf	__tdiv_to_l_@quot,f,c
  3740  002684  3E11               	incfsz	__tdiv_to_l_@exp1,f,c
  3741  002686  D7F9               	goto	l2922
  3742  002688  D015               	goto	l581
  3743  00268A                     l2926:
  3744  00268A  0E17               	movlw	23
  3745  00268C  6411               	cpfsgt	__tdiv_to_l_@exp1,c
  3746  00268E  D00F               	goto	l2934
  3747  002690  0E00               	movlw	0
  3748  002692  6E01               	movwf	?__tdiv_to_l_,c
  3749  002694  0E00               	movlw	0
  3750  002696  6E02               	movwf	?__tdiv_to_l_+1,c
  3751  002698  0E00               	movlw	0
  3752  00269A  6E03               	movwf	?__tdiv_to_l_+2,c
  3753  00269C  0E00               	movlw	0
  3754  00269E  6E04               	movwf	?__tdiv_to_l_+3,c
  3755  0026A0  0012               	return	
  3756  0026A2                     l2932:
  3757  0026A2  90D8               	bcf	status,0,c
  3758  0026A4  360C               	rlcf	__tdiv_to_l_@quot,f,c
  3759  0026A6  360D               	rlcf	__tdiv_to_l_@quot+1,f,c
  3760  0026A8  360E               	rlcf	__tdiv_to_l_@quot+2,f,c
  3761  0026AA  360F               	rlcf	__tdiv_to_l_@quot+3,f,c
  3762  0026AC  0611               	decf	__tdiv_to_l_@exp1,f,c
  3763  0026AE                     l2934:
  3764  0026AE  5011               	movf	__tdiv_to_l_@exp1,w,c
  3765  0026B0  A4D8               	btfss	status,2,c
  3766  0026B2  D7F7               	goto	l2932
  3767  0026B4                     l581:
  3768  0026B4  C00C  F001         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  3769  0026B8  C00D  F002         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  3770  0026BC  C00E  F003         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  3771  0026C0  C00F  F004         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  3772  0026C4  0012               	return		;funcret
  3773  0026C6                     __end_of__tdiv_to_l_:
  3774                           	opt stack 0
  3775                           tblptru	equ	0xFF8
  3776                           tblptrh	equ	0xFF7
  3777                           tblptrl	equ	0xFF6
  3778                           tablat	equ	0xFF5
  3779                           prodh	equ	0xFF4
  3780                           prodl	equ	0xFF3
  3781                           postinc0	equ	0xFEE
  3782                           wreg	equ	0xFE8
  3783                           indf2	equ	0xFDF
  3784                           postinc2	equ	0xFDE
  3785                           fsr2h	equ	0xFDA
  3786                           fsr2l	equ	0xFD9
  3787                           status	equ	0xFD8
  3788                           
  3789 ;; *************** function __div_to_l_ *****************
  3790 ;; Defined at:
  3791 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fldivl.c"
  3792 ;; Parameters:    Size  Location     Type
  3793 ;;  f1              4    0[COMRAM] unsigned long 
  3794 ;;  f2              4    4[COMRAM] unsigned long 
  3795 ;; Auto vars:     Size  Location     Type
  3796 ;;  quot            4    8[COMRAM] unsigned long 
  3797 ;;  exp1            1   13[COMRAM] unsigned char 
  3798 ;;  cntr            1   12[COMRAM] unsigned char 
  3799 ;; Return value:  Size  Location     Type
  3800 ;;                  4    0[COMRAM] unsigned long 
  3801 ;; Registers used:
  3802 ;;		wreg, status,2, status,0
  3803 ;; Tracked objects:
  3804 ;;		On entry : 0/0
  3805 ;;		On exit  : 0/0
  3806 ;;		Unchanged: 0/0
  3807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3808 ;;      Params:         8       0       0       0       0       0       0       0       0
  3809 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3810 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3811 ;;      Totals:        14       0       0       0       0       0       0       0       0
  3812 ;;Total ram usage:       14 bytes
  3813 ;; Hardware stack levels used:    1
  3814 ;; This function calls:
  3815 ;;		Nothing
  3816 ;; This function is called by:
  3817 ;;		_sprintf
  3818 ;; This function uses a non-reentrant model
  3819 ;;
  3820                           
  3821                           	psect	text9
  3822  0026C6                     __ptext9:
  3823                           	opt stack 0
  3824  0026C6                     __div_to_l_:
  3825                           	opt stack 28
  3826                           
  3827                           ;incstack = 0
  3828  0026C6  3403               	rlcf	__div_to_l_@f1+2,w,c
  3829  0026C8  3404               	rlcf	__div_to_l_@f1+3,w,c
  3830  0026CA  6E0E               	movwf	__div_to_l_@exp1,c
  3831  0026CC  500E               	movf	__div_to_l_@exp1,w,c
  3832  0026CE  A4D8               	btfss	status,2,c
  3833  0026D0  D009               	goto	l2942
  3834  0026D2  0E00               	movlw	0
  3835  0026D4  6E01               	movwf	?__div_to_l_,c
  3836  0026D6  0E00               	movlw	0
  3837  0026D8  6E02               	movwf	?__div_to_l_+1,c
  3838  0026DA  0E00               	movlw	0
  3839  0026DC  6E03               	movwf	?__div_to_l_+2,c
  3840  0026DE  0E00               	movlw	0
  3841  0026E0  6E04               	movwf	?__div_to_l_+3,c
  3842  0026E2  0012               	return	
  3843  0026E4                     l2942:
  3844  0026E4  3407               	rlcf	__div_to_l_@f2+2,w,c
  3845  0026E6  3408               	rlcf	__div_to_l_@f2+3,w,c
  3846  0026E8  6E0D               	movwf	__div_to_l_@cntr,c
  3847  0026EA  500D               	movf	__div_to_l_@cntr,w,c
  3848  0026EC  A4D8               	btfss	status,2,c
  3849  0026EE  D009               	goto	l2948
  3850  0026F0  0E00               	movlw	0
  3851  0026F2  6E01               	movwf	?__div_to_l_,c
  3852  0026F4  0E00               	movlw	0
  3853  0026F6  6E02               	movwf	?__div_to_l_+1,c
  3854  0026F8  0E00               	movlw	0
  3855  0026FA  6E03               	movwf	?__div_to_l_+2,c
  3856  0026FC  0E00               	movlw	0
  3857  0026FE  6E04               	movwf	?__div_to_l_+3,c
  3858  002700  0012               	return	
  3859  002702                     l2948:
  3860  002702  8E03               	bsf	__div_to_l_@f1+2,7,c
  3861  002704  0EFF               	movlw	255
  3862  002706  1601               	andwf	__div_to_l_@f1,f,c
  3863  002708  0EFF               	movlw	255
  3864  00270A  1602               	andwf	__div_to_l_@f1+1,f,c
  3865  00270C  0EFF               	movlw	255
  3866  00270E  1603               	andwf	__div_to_l_@f1+2,f,c
  3867  002710  0E00               	movlw	0
  3868  002712  1604               	andwf	__div_to_l_@f1+3,f,c
  3869  002714  8E07               	bsf	__div_to_l_@f2+2,7,c
  3870  002716  0EFF               	movlw	255
  3871  002718  1605               	andwf	__div_to_l_@f2,f,c
  3872  00271A  0EFF               	movlw	255
  3873  00271C  1606               	andwf	__div_to_l_@f2+1,f,c
  3874  00271E  0EFF               	movlw	255
  3875  002720  1607               	andwf	__div_to_l_@f2+2,f,c
  3876  002722  0E00               	movlw	0
  3877  002724  1608               	andwf	__div_to_l_@f2+3,f,c
  3878  002726  0E00               	movlw	0
  3879  002728  6E09               	movwf	__div_to_l_@quot,c
  3880  00272A  0E00               	movlw	0
  3881  00272C  6E0A               	movwf	__div_to_l_@quot+1,c
  3882  00272E  0E00               	movlw	0
  3883  002730  6E0B               	movwf	__div_to_l_@quot+2,c
  3884  002732  0E00               	movlw	0
  3885  002734  6E0C               	movwf	__div_to_l_@quot+3,c
  3886  002736  0E7F               	movlw	127
  3887  002738  5E0E               	subwf	__div_to_l_@exp1,f,c
  3888  00273A  500D               	movf	__div_to_l_@cntr,w,c
  3889  00273C  0FA0               	addlw	160
  3890  00273E  5E0E               	subwf	__div_to_l_@exp1,f,c
  3891  002740  0E20               	movlw	32
  3892  002742  6E0D               	movwf	__div_to_l_@cntr,c
  3893  002744                     l2962:
  3894  002744  90D8               	bcf	status,0,c
  3895  002746  3609               	rlcf	__div_to_l_@quot,f,c
  3896  002748  360A               	rlcf	__div_to_l_@quot+1,f,c
  3897  00274A  360B               	rlcf	__div_to_l_@quot+2,f,c
  3898  00274C  360C               	rlcf	__div_to_l_@quot+3,f,c
  3899  00274E  5005               	movf	__div_to_l_@f2,w,c
  3900  002750  5C01               	subwf	__div_to_l_@f1,w,c
  3901  002752  5006               	movf	__div_to_l_@f2+1,w,c
  3902  002754  5802               	subwfb	__div_to_l_@f1+1,w,c
  3903  002756  5007               	movf	__div_to_l_@f2+2,w,c
  3904  002758  5803               	subwfb	__div_to_l_@f1+2,w,c
  3905  00275A  5008               	movf	__div_to_l_@f2+3,w,c
  3906  00275C  5804               	subwfb	__div_to_l_@f1+3,w,c
  3907  00275E  A0D8               	btfss	status,0,c
  3908  002760  D009               	goto	l2970
  3909  002762  5005               	movf	__div_to_l_@f2,w,c
  3910  002764  5E01               	subwf	__div_to_l_@f1,f,c
  3911  002766  5006               	movf	__div_to_l_@f2+1,w,c
  3912  002768  5A02               	subwfb	__div_to_l_@f1+1,f,c
  3913  00276A  5007               	movf	__div_to_l_@f2+2,w,c
  3914  00276C  5A03               	subwfb	__div_to_l_@f1+2,f,c
  3915  00276E  5008               	movf	__div_to_l_@f2+3,w,c
  3916  002770  5A04               	subwfb	__div_to_l_@f1+3,f,c
  3917  002772  8009               	bsf	__div_to_l_@quot,0,c
  3918  002774                     l2970:
  3919  002774  90D8               	bcf	status,0,c
  3920  002776  3601               	rlcf	__div_to_l_@f1,f,c
  3921  002778  3602               	rlcf	__div_to_l_@f1+1,f,c
  3922  00277A  3603               	rlcf	__div_to_l_@f1+2,f,c
  3923  00277C  3604               	rlcf	__div_to_l_@f1+3,f,c
  3924  00277E  2E0D               	decfsz	__div_to_l_@cntr,f,c
  3925  002780  D7E1               	goto	l2962
  3926  002782  AE0E               	btfss	__div_to_l_@exp1,7,c
  3927  002784  D016               	goto	l2986
  3928  002786  500E               	movf	__div_to_l_@exp1,w,c
  3929  002788  0A80               	xorlw	128
  3930  00278A  0F9F               	addlw	159
  3931  00278C  B0D8               	btfsc	status,0,c
  3932  00278E  D009               	goto	l2982
  3933  002790  0E00               	movlw	0
  3934  002792  6E01               	movwf	?__div_to_l_,c
  3935  002794  0E00               	movlw	0
  3936  002796  6E02               	movwf	?__div_to_l_+1,c
  3937  002798  0E00               	movlw	0
  3938  00279A  6E03               	movwf	?__div_to_l_+2,c
  3939  00279C  0E00               	movlw	0
  3940  00279E  6E04               	movwf	?__div_to_l_+3,c
  3941  0027A0  0012               	return	
  3942  0027A2                     l2982:
  3943  0027A2  90D8               	bcf	status,0,c
  3944  0027A4  320C               	rrcf	__div_to_l_@quot+3,f,c
  3945  0027A6  320B               	rrcf	__div_to_l_@quot+2,f,c
  3946  0027A8  320A               	rrcf	__div_to_l_@quot+1,f,c
  3947  0027AA  3209               	rrcf	__div_to_l_@quot,f,c
  3948  0027AC  3E0E               	incfsz	__div_to_l_@exp1,f,c
  3949  0027AE  D7F9               	goto	l2982
  3950  0027B0  D015               	goto	l477
  3951  0027B2                     l2986:
  3952  0027B2  0E1F               	movlw	31
  3953  0027B4  640E               	cpfsgt	__div_to_l_@exp1,c
  3954  0027B6  D00F               	goto	l2994
  3955  0027B8  0E00               	movlw	0
  3956  0027BA  6E01               	movwf	?__div_to_l_,c
  3957  0027BC  0E00               	movlw	0
  3958  0027BE  6E02               	movwf	?__div_to_l_+1,c
  3959  0027C0  0E00               	movlw	0
  3960  0027C2  6E03               	movwf	?__div_to_l_+2,c
  3961  0027C4  0E00               	movlw	0
  3962  0027C6  6E04               	movwf	?__div_to_l_+3,c
  3963  0027C8  0012               	return	
  3964  0027CA                     l2992:
  3965  0027CA  90D8               	bcf	status,0,c
  3966  0027CC  3609               	rlcf	__div_to_l_@quot,f,c
  3967  0027CE  360A               	rlcf	__div_to_l_@quot+1,f,c
  3968  0027D0  360B               	rlcf	__div_to_l_@quot+2,f,c
  3969  0027D2  360C               	rlcf	__div_to_l_@quot+3,f,c
  3970  0027D4  060E               	decf	__div_to_l_@exp1,f,c
  3971  0027D6                     l2994:
  3972  0027D6  500E               	movf	__div_to_l_@exp1,w,c
  3973  0027D8  A4D8               	btfss	status,2,c
  3974  0027DA  D7F7               	goto	l2992
  3975  0027DC                     l477:
  3976  0027DC  C009  F001         	movff	__div_to_l_@quot,?__div_to_l_
  3977  0027E0  C00A  F002         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  3978  0027E4  C00B  F003         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  3979  0027E8  C00C  F004         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  3980  0027EC  0012               	return		;funcret
  3981  0027EE                     __end_of__div_to_l_:
  3982                           	opt stack 0
  3983                           tblptru	equ	0xFF8
  3984                           tblptrh	equ	0xFF7
  3985                           tblptrl	equ	0xFF6
  3986                           tablat	equ	0xFF5
  3987                           prodh	equ	0xFF4
  3988                           prodl	equ	0xFF3
  3989                           postinc0	equ	0xFEE
  3990                           wreg	equ	0xFE8
  3991                           indf2	equ	0xFDF
  3992                           postinc2	equ	0xFDE
  3993                           fsr2h	equ	0xFDA
  3994                           fsr2l	equ	0xFD9
  3995                           status	equ	0xFD8
  3996                           
  3997 ;; *************** function ___llmod *****************
  3998 ;; Defined at:
  3999 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\llmod.c"
  4000 ;; Parameters:    Size  Location     Type
  4001 ;;  dividend        4    0[COMRAM] unsigned long 
  4002 ;;  divisor         4    4[COMRAM] unsigned long 
  4003 ;; Auto vars:     Size  Location     Type
  4004 ;;  counter         1    8[COMRAM] unsigned char 
  4005 ;; Return value:  Size  Location     Type
  4006 ;;                  4    0[COMRAM] unsigned long 
  4007 ;; Registers used:
  4008 ;;		wreg, status,2, status,0
  4009 ;; Tracked objects:
  4010 ;;		On entry : 0/0
  4011 ;;		On exit  : 0/0
  4012 ;;		Unchanged: 0/0
  4013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4014 ;;      Params:         8       0       0       0       0       0       0       0       0
  4015 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4016 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4017 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4018 ;;Total ram usage:        9 bytes
  4019 ;; Hardware stack levels used:    1
  4020 ;; This function calls:
  4021 ;;		Nothing
  4022 ;; This function is called by:
  4023 ;;		_sprintf
  4024 ;; This function uses a non-reentrant model
  4025 ;;
  4026                           
  4027                           	psect	text10
  4028  002DA2                     __ptext10:
  4029                           	opt stack 0
  4030  002DA2                     ___llmod:
  4031                           	opt stack 28
  4032                           
  4033                           ;incstack = 0
  4034  002DA2  5005               	movf	___llmod@divisor,w,c
  4035  002DA4  1006               	iorwf	___llmod@divisor+1,w,c
  4036  002DA6  1007               	iorwf	___llmod@divisor+2,w,c
  4037  002DA8  1008               	iorwf	___llmod@divisor+3,w,c
  4038  002DAA  B4D8               	btfsc	status,2,c
  4039  002DAC  D024               	goto	l680
  4040  002DAE  0E01               	movlw	1
  4041  002DB0  6E09               	movwf	___llmod@counter,c
  4042  002DB2  D006               	goto	l3240
  4043  002DB4                     l3238:
  4044  002DB4  90D8               	bcf	status,0,c
  4045  002DB6  3605               	rlcf	___llmod@divisor,f,c
  4046  002DB8  3606               	rlcf	___llmod@divisor+1,f,c
  4047  002DBA  3607               	rlcf	___llmod@divisor+2,f,c
  4048  002DBC  3608               	rlcf	___llmod@divisor+3,f,c
  4049  002DBE  2A09               	incf	___llmod@counter,f,c
  4050  002DC0                     l3240:
  4051  002DC0  AE08               	btfss	___llmod@divisor+3,7,c
  4052  002DC2  D7F8               	goto	l3238
  4053  002DC4                     l3242:
  4054  002DC4  5005               	movf	___llmod@divisor,w,c
  4055  002DC6  5C01               	subwf	___llmod@dividend,w,c
  4056  002DC8  5006               	movf	___llmod@divisor+1,w,c
  4057  002DCA  5802               	subwfb	___llmod@dividend+1,w,c
  4058  002DCC  5007               	movf	___llmod@divisor+2,w,c
  4059  002DCE  5803               	subwfb	___llmod@dividend+2,w,c
  4060  002DD0  5008               	movf	___llmod@divisor+3,w,c
  4061  002DD2  5804               	subwfb	___llmod@dividend+3,w,c
  4062  002DD4  A0D8               	btfss	status,0,c
  4063  002DD6  D008               	goto	l3246
  4064  002DD8  5005               	movf	___llmod@divisor,w,c
  4065  002DDA  5E01               	subwf	___llmod@dividend,f,c
  4066  002DDC  5006               	movf	___llmod@divisor+1,w,c
  4067  002DDE  5A02               	subwfb	___llmod@dividend+1,f,c
  4068  002DE0  5007               	movf	___llmod@divisor+2,w,c
  4069  002DE2  5A03               	subwfb	___llmod@dividend+2,f,c
  4070  002DE4  5008               	movf	___llmod@divisor+3,w,c
  4071  002DE6  5A04               	subwfb	___llmod@dividend+3,f,c
  4072  002DE8                     l3246:
  4073  002DE8  90D8               	bcf	status,0,c
  4074  002DEA  3208               	rrcf	___llmod@divisor+3,f,c
  4075  002DEC  3207               	rrcf	___llmod@divisor+2,f,c
  4076  002DEE  3206               	rrcf	___llmod@divisor+1,f,c
  4077  002DF0  3205               	rrcf	___llmod@divisor,f,c
  4078  002DF2  2E09               	decfsz	___llmod@counter,f,c
  4079  002DF4  D7E7               	goto	l3242
  4080  002DF6                     l680:
  4081  002DF6  C001  F001         	movff	___llmod@dividend,?___llmod
  4082  002DFA  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
  4083  002DFE  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
  4084  002E02  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
  4085  002E06  0012               	return		;funcret
  4086  002E08                     __end_of___llmod:
  4087                           	opt stack 0
  4088                           tblptru	equ	0xFF8
  4089                           tblptrh	equ	0xFF7
  4090                           tblptrl	equ	0xFF6
  4091                           tablat	equ	0xFF5
  4092                           prodh	equ	0xFF4
  4093                           prodl	equ	0xFF3
  4094                           postinc0	equ	0xFEE
  4095                           wreg	equ	0xFE8
  4096                           indf2	equ	0xFDF
  4097                           postinc2	equ	0xFDE
  4098                           fsr2h	equ	0xFDA
  4099                           fsr2l	equ	0xFD9
  4100                           status	equ	0xFD8
  4101                           
  4102 ;; *************** function ___lldiv *****************
  4103 ;; Defined at:
  4104 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
  4105 ;; Parameters:    Size  Location     Type
  4106 ;;  dividend        4    0[COMRAM] unsigned long 
  4107 ;;  divisor         4    4[COMRAM] unsigned long 
  4108 ;; Auto vars:     Size  Location     Type
  4109 ;;  quotient        4    8[COMRAM] unsigned long 
  4110 ;;  counter         1   12[COMRAM] unsigned char 
  4111 ;; Return value:  Size  Location     Type
  4112 ;;                  4    0[COMRAM] unsigned long 
  4113 ;; Registers used:
  4114 ;;		wreg, status,2, status,0
  4115 ;; Tracked objects:
  4116 ;;		On entry : 0/0
  4117 ;;		On exit  : 0/0
  4118 ;;		Unchanged: 0/0
  4119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4120 ;;      Params:         8       0       0       0       0       0       0       0       0
  4121 ;;      Locals:         5       0       0       0       0       0       0       0       0
  4122 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4123 ;;      Totals:        13       0       0       0       0       0       0       0       0
  4124 ;;Total ram usage:       13 bytes
  4125 ;; Hardware stack levels used:    1
  4126 ;; This function calls:
  4127 ;;		Nothing
  4128 ;; This function is called by:
  4129 ;;		_sprintf
  4130 ;; This function uses a non-reentrant model
  4131 ;;
  4132                           
  4133                           	psect	text11
  4134  002C40                     __ptext11:
  4135                           	opt stack 0
  4136  002C40                     ___lldiv:
  4137                           	opt stack 28
  4138                           
  4139                           ;incstack = 0
  4140  002C40  0E00               	movlw	0
  4141  002C42  6E09               	movwf	___lldiv@quotient,c
  4142  002C44  0E00               	movlw	0
  4143  002C46  6E0A               	movwf	___lldiv@quotient+1,c
  4144  002C48  0E00               	movlw	0
  4145  002C4A  6E0B               	movwf	___lldiv@quotient+2,c
  4146  002C4C  0E00               	movlw	0
  4147  002C4E  6E0C               	movwf	___lldiv@quotient+3,c
  4148  002C50  5005               	movf	___lldiv@divisor,w,c
  4149  002C52  1006               	iorwf	___lldiv@divisor+1,w,c
  4150  002C54  1007               	iorwf	___lldiv@divisor+2,w,c
  4151  002C56  1008               	iorwf	___lldiv@divisor+3,w,c
  4152  002C58  B4D8               	btfsc	status,2,c
  4153  002C5A  D02A               	goto	l670
  4154  002C5C  0E01               	movlw	1
  4155  002C5E  6E0D               	movwf	___lldiv@counter,c
  4156  002C60  D006               	goto	l3220
  4157  002C62                     l3218:
  4158  002C62  90D8               	bcf	status,0,c
  4159  002C64  3605               	rlcf	___lldiv@divisor,f,c
  4160  002C66  3606               	rlcf	___lldiv@divisor+1,f,c
  4161  002C68  3607               	rlcf	___lldiv@divisor+2,f,c
  4162  002C6A  3608               	rlcf	___lldiv@divisor+3,f,c
  4163  002C6C  2A0D               	incf	___lldiv@counter,f,c
  4164  002C6E                     l3220:
  4165  002C6E  AE08               	btfss	___lldiv@divisor+3,7,c
  4166  002C70  D7F8               	goto	l3218
  4167  002C72                     l3222:
  4168  002C72  90D8               	bcf	status,0,c
  4169  002C74  3609               	rlcf	___lldiv@quotient,f,c
  4170  002C76  360A               	rlcf	___lldiv@quotient+1,f,c
  4171  002C78  360B               	rlcf	___lldiv@quotient+2,f,c
  4172  002C7A  360C               	rlcf	___lldiv@quotient+3,f,c
  4173  002C7C  5005               	movf	___lldiv@divisor,w,c
  4174  002C7E  5C01               	subwf	___lldiv@dividend,w,c
  4175  002C80  5006               	movf	___lldiv@divisor+1,w,c
  4176  002C82  5802               	subwfb	___lldiv@dividend+1,w,c
  4177  002C84  5007               	movf	___lldiv@divisor+2,w,c
  4178  002C86  5803               	subwfb	___lldiv@dividend+2,w,c
  4179  002C88  5008               	movf	___lldiv@divisor+3,w,c
  4180  002C8A  5804               	subwfb	___lldiv@dividend+3,w,c
  4181  002C8C  A0D8               	btfss	status,0,c
  4182  002C8E  D009               	goto	l3230
  4183  002C90  5005               	movf	___lldiv@divisor,w,c
  4184  002C92  5E01               	subwf	___lldiv@dividend,f,c
  4185  002C94  5006               	movf	___lldiv@divisor+1,w,c
  4186  002C96  5A02               	subwfb	___lldiv@dividend+1,f,c
  4187  002C98  5007               	movf	___lldiv@divisor+2,w,c
  4188  002C9A  5A03               	subwfb	___lldiv@dividend+2,f,c
  4189  002C9C  5008               	movf	___lldiv@divisor+3,w,c
  4190  002C9E  5A04               	subwfb	___lldiv@dividend+3,f,c
  4191  002CA0  8009               	bsf	___lldiv@quotient,0,c
  4192  002CA2                     l3230:
  4193  002CA2  90D8               	bcf	status,0,c
  4194  002CA4  3208               	rrcf	___lldiv@divisor+3,f,c
  4195  002CA6  3207               	rrcf	___lldiv@divisor+2,f,c
  4196  002CA8  3206               	rrcf	___lldiv@divisor+1,f,c
  4197  002CAA  3205               	rrcf	___lldiv@divisor,f,c
  4198  002CAC  2E0D               	decfsz	___lldiv@counter,f,c
  4199  002CAE  D7E1               	goto	l3222
  4200  002CB0                     l670:
  4201  002CB0  C009  F001         	movff	___lldiv@quotient,?___lldiv
  4202  002CB4  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  4203  002CB8  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  4204  002CBC  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  4205  002CC0  0012               	return		;funcret
  4206  002CC2                     __end_of___lldiv:
  4207                           	opt stack 0
  4208                           tblptru	equ	0xFF8
  4209                           tblptrh	equ	0xFF7
  4210                           tblptrl	equ	0xFF6
  4211                           tablat	equ	0xFF5
  4212                           prodh	equ	0xFF4
  4213                           prodl	equ	0xFF3
  4214                           postinc0	equ	0xFEE
  4215                           wreg	equ	0xFE8
  4216                           indf2	equ	0xFDF
  4217                           postinc2	equ	0xFDE
  4218                           fsr2h	equ	0xFDA
  4219                           fsr2l	equ	0xFD9
  4220                           status	equ	0xFD8
  4221                           
  4222 ;; *************** function ___fltol *****************
  4223 ;; Defined at:
  4224 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fltol.c"
  4225 ;; Parameters:    Size  Location     Type
  4226 ;;  f1              4   48[COMRAM] unsigned long 
  4227 ;; Auto vars:     Size  Location     Type
  4228 ;;  exp1            1   57[COMRAM] unsigned char 
  4229 ;;  sign1           1   56[COMRAM] unsigned char 
  4230 ;; Return value:  Size  Location     Type
  4231 ;;                  4   48[COMRAM] long 
  4232 ;; Registers used:
  4233 ;;		wreg, status,2, status,0
  4234 ;; Tracked objects:
  4235 ;;		On entry : 0/0
  4236 ;;		On exit  : 0/0
  4237 ;;		Unchanged: 0/0
  4238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4239 ;;      Params:         4       0       0       0       0       0       0       0       0
  4240 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4241 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4242 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4243 ;;Total ram usage:       10 bytes
  4244 ;; Hardware stack levels used:    1
  4245 ;; This function calls:
  4246 ;;		Nothing
  4247 ;; This function is called by:
  4248 ;;		_sprintf
  4249 ;; This function uses a non-reentrant model
  4250 ;;
  4251                           
  4252                           	psect	text12
  4253  002A28                     __ptext12:
  4254                           	opt stack 0
  4255  002A28                     ___fltol:
  4256                           	opt stack 28
  4257                           
  4258                           ;incstack = 0
  4259  002A28  3433               	rlcf	___fltol@f1+2,w,c
  4260  002A2A  3434               	rlcf	___fltol@f1+3,w,c
  4261  002A2C  6E3A               	movwf	___fltol@exp1,c
  4262  002A2E  503A               	movf	___fltol@exp1,w,c
  4263  002A30  A4D8               	btfss	status,2,c
  4264  002A32  D009               	goto	l3174
  4265  002A34  0E00               	movlw	0
  4266  002A36  6E31               	movwf	?___fltol,c
  4267  002A38  0E00               	movlw	0
  4268  002A3A  6E32               	movwf	?___fltol+1,c
  4269  002A3C  0E00               	movlw	0
  4270  002A3E  6E33               	movwf	?___fltol+2,c
  4271  002A40  0E00               	movlw	0
  4272  002A42  6E34               	movwf	?___fltol+3,c
  4273  002A44  0012               	return	
  4274  002A46                     l3174:
  4275  002A46  C031  F035         	movff	___fltol@f1,??___fltol
  4276  002A4A  C032  F036         	movff	___fltol@f1+1,??___fltol+1
  4277  002A4E  C033  F037         	movff	___fltol@f1+2,??___fltol+2
  4278  002A52  C034  F038         	movff	___fltol@f1+3,??___fltol+3
  4279  002A56  0E20               	movlw	32
  4280  002A58  D005               	goto	u3350
  4281  002A5A                     u3355:
  4282  002A5A  90D8               	bcf	status,0,c
  4283  002A5C  3238               	rrcf	??___fltol+3,f,c
  4284  002A5E  3237               	rrcf	??___fltol+2,f,c
  4285  002A60  3236               	rrcf	??___fltol+1,f,c
  4286  002A62  3235               	rrcf	??___fltol,f,c
  4287  002A64                     u3350:
  4288  002A64  2EE8               	decfsz	wreg,f,c
  4289  002A66  D7F9               	goto	u3355
  4290  002A68  5035               	movf	??___fltol,w,c
  4291  002A6A  6E39               	movwf	___fltol@sign1,c
  4292  002A6C  8E33               	bsf	___fltol@f1+2,7,c
  4293  002A6E  0EFF               	movlw	255
  4294  002A70  1631               	andwf	___fltol@f1,f,c
  4295  002A72  0EFF               	movlw	255
  4296  002A74  1632               	andwf	___fltol@f1+1,f,c
  4297  002A76  0EFF               	movlw	255
  4298  002A78  1633               	andwf	___fltol@f1+2,f,c
  4299  002A7A  0E00               	movlw	0
  4300  002A7C  1634               	andwf	___fltol@f1+3,f,c
  4301  002A7E  0E96               	movlw	150
  4302  002A80  5E3A               	subwf	___fltol@exp1,f,c
  4303  002A82  AE3A               	btfss	___fltol@exp1,7,c
  4304  002A84  D016               	goto	l3194
  4305  002A86  503A               	movf	___fltol@exp1,w,c
  4306  002A88  0A80               	xorlw	128
  4307  002A8A  0F97               	addlw	151
  4308  002A8C  B0D8               	btfsc	status,0,c
  4309  002A8E  D009               	goto	l3190
  4310  002A90  0E00               	movlw	0
  4311  002A92  6E31               	movwf	?___fltol,c
  4312  002A94  0E00               	movlw	0
  4313  002A96  6E32               	movwf	?___fltol+1,c
  4314  002A98  0E00               	movlw	0
  4315  002A9A  6E33               	movwf	?___fltol+2,c
  4316  002A9C  0E00               	movlw	0
  4317  002A9E  6E34               	movwf	?___fltol+3,c
  4318  002AA0  0012               	return	
  4319  002AA2                     l3190:
  4320  002AA2  90D8               	bcf	status,0,c
  4321  002AA4  3234               	rrcf	___fltol@f1+3,f,c
  4322  002AA6  3233               	rrcf	___fltol@f1+2,f,c
  4323  002AA8  3232               	rrcf	___fltol@f1+1,f,c
  4324  002AAA  3231               	rrcf	___fltol@f1,f,c
  4325  002AAC  3E3A               	incfsz	___fltol@exp1,f,c
  4326  002AAE  D7F9               	goto	l3190
  4327  002AB0  D015               	goto	l3204
  4328  002AB2                     l3194:
  4329  002AB2  0E1F               	movlw	31
  4330  002AB4  643A               	cpfsgt	___fltol@exp1,c
  4331  002AB6  D00F               	goto	l3202
  4332  002AB8  0E00               	movlw	0
  4333  002ABA  6E31               	movwf	?___fltol,c
  4334  002ABC  0E00               	movlw	0
  4335  002ABE  6E32               	movwf	?___fltol+1,c
  4336  002AC0  0E00               	movlw	0
  4337  002AC2  6E33               	movwf	?___fltol+2,c
  4338  002AC4  0E00               	movlw	0
  4339  002AC6  6E34               	movwf	?___fltol+3,c
  4340  002AC8  0012               	return	
  4341  002ACA                     l3200:
  4342  002ACA  90D8               	bcf	status,0,c
  4343  002ACC  3631               	rlcf	___fltol@f1,f,c
  4344  002ACE  3632               	rlcf	___fltol@f1+1,f,c
  4345  002AD0  3633               	rlcf	___fltol@f1+2,f,c
  4346  002AD2  3634               	rlcf	___fltol@f1+3,f,c
  4347  002AD4  063A               	decf	___fltol@exp1,f,c
  4348  002AD6                     l3202:
  4349  002AD6  503A               	movf	___fltol@exp1,w,c
  4350  002AD8  A4D8               	btfss	status,2,c
  4351  002ADA  D7F7               	goto	l3200
  4352  002ADC                     l3204:
  4353  002ADC  5039               	movf	___fltol@sign1,w,c
  4354  002ADE  B4D8               	btfsc	status,2,c
  4355  002AE0  D008               	goto	l3208
  4356  002AE2  1E34               	comf	___fltol@f1+3,f,c
  4357  002AE4  1E33               	comf	___fltol@f1+2,f,c
  4358  002AE6  1E32               	comf	___fltol@f1+1,f,c
  4359  002AE8  6C31               	negf	___fltol@f1,c
  4360  002AEA  0E00               	movlw	0
  4361  002AEC  2232               	addwfc	___fltol@f1+1,f,c
  4362  002AEE  2233               	addwfc	___fltol@f1+2,f,c
  4363  002AF0  2234               	addwfc	___fltol@f1+3,f,c
  4364  002AF2                     l3208:
  4365  002AF2  C031  F031         	movff	___fltol@f1,?___fltol
  4366  002AF6  C032  F032         	movff	___fltol@f1+1,?___fltol+1
  4367  002AFA  C033  F033         	movff	___fltol@f1+2,?___fltol+2
  4368  002AFE  C034  F034         	movff	___fltol@f1+3,?___fltol+3
  4369  002B02  0012               	return	
  4370  002B04                     __end_of___fltol:
  4371                           	opt stack 0
  4372                           tblptru	equ	0xFF8
  4373                           tblptrh	equ	0xFF7
  4374                           tblptrl	equ	0xFF6
  4375                           tablat	equ	0xFF5
  4376                           prodh	equ	0xFF4
  4377                           prodl	equ	0xFF3
  4378                           postinc0	equ	0xFEE
  4379                           wreg	equ	0xFE8
  4380                           indf2	equ	0xFDF
  4381                           postinc2	equ	0xFDE
  4382                           fsr2h	equ	0xFDA
  4383                           fsr2l	equ	0xFD9
  4384                           status	equ	0xFD8
  4385                           
  4386 ;; *************** function ___flsub *****************
  4387 ;; Defined at:
  4388 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
  4389 ;; Parameters:    Size  Location     Type
  4390 ;;  b               4   72[COMRAM] long 
  4391 ;;  a               4   76[COMRAM] long 
  4392 ;; Auto vars:     Size  Location     Type
  4393 ;;		None
  4394 ;; Return value:  Size  Location     Type
  4395 ;;                  4   72[COMRAM] long 
  4396 ;; Registers used:
  4397 ;;		wreg, status,2, status,0, cstack
  4398 ;; Tracked objects:
  4399 ;;		On entry : 0/0
  4400 ;;		On exit  : 0/0
  4401 ;;		Unchanged: 0/0
  4402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4403 ;;      Params:         8       0       0       0       0       0       0       0       0
  4404 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4405 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4406 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4407 ;;Total ram usage:        8 bytes
  4408 ;; Hardware stack levels used:    1
  4409 ;; Hardware stack levels required when called:    1
  4410 ;; This function calls:
  4411 ;;		___fladd
  4412 ;; This function is called by:
  4413 ;;		_sprintf
  4414 ;; This function uses a non-reentrant model
  4415 ;;
  4416                           
  4417                           	psect	text13
  4418  002EFE                     __ptext13:
  4419                           	opt stack 0
  4420  002EFE                     ___flsub:
  4421                           	opt stack 27
  4422                           
  4423                           ;incstack = 0
  4424  002EFE  0E00               	movlw	0
  4425  002F00  1A4D               	xorwf	___flsub@a,f,c
  4426  002F02  0E00               	movlw	0
  4427  002F04  1A4E               	xorwf	___flsub@a+1,f,c
  4428  002F06  0E00               	movlw	0
  4429  002F08  1A4F               	xorwf	___flsub@a+2,f,c
  4430  002F0A  0E80               	movlw	128
  4431  002F0C  1A50               	xorwf	___flsub@a+3,f,c
  4432  002F0E  C049  F035         	movff	___flsub@b,___fladd@b
  4433  002F12  C04A  F036         	movff	___flsub@b+1,___fladd@b+1
  4434  002F16  C04B  F037         	movff	___flsub@b+2,___fladd@b+2
  4435  002F1A  C04C  F038         	movff	___flsub@b+3,___fladd@b+3
  4436  002F1E  C04D  F039         	movff	___flsub@a,___fladd@a
  4437  002F22  C04E  F03A         	movff	___flsub@a+1,___fladd@a+1
  4438  002F26  C04F  F03B         	movff	___flsub@a+2,___fladd@a+2
  4439  002F2A  C050  F03C         	movff	___flsub@a+3,___fladd@a+3
  4440  002F2E  EC21  F00C         	call	___fladd	;wreg free
  4441  002F32  C035  F049         	movff	?___fladd,?___flsub
  4442  002F36  C036  F04A         	movff	?___fladd+1,?___flsub+1
  4443  002F3A  C037  F04B         	movff	?___fladd+2,?___flsub+2
  4444  002F3E  C038  F04C         	movff	?___fladd+3,?___flsub+3
  4445  002F42  0012               	return	
  4446  002F44                     __end_of___flsub:
  4447                           	opt stack 0
  4448                           tblptru	equ	0xFF8
  4449                           tblptrh	equ	0xFF7
  4450                           tblptrl	equ	0xFF6
  4451                           tablat	equ	0xFF5
  4452                           prodh	equ	0xFF4
  4453                           prodl	equ	0xFF3
  4454                           postinc0	equ	0xFEE
  4455                           wreg	equ	0xFE8
  4456                           indf2	equ	0xFDF
  4457                           postinc2	equ	0xFDE
  4458                           fsr2h	equ	0xFDA
  4459                           fsr2l	equ	0xFD9
  4460                           status	equ	0xFD8
  4461                           
  4462 ;; *************** function ___fladd *****************
  4463 ;; Defined at:
  4464 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
  4465 ;; Parameters:    Size  Location     Type
  4466 ;;  b               4   52[COMRAM] long 
  4467 ;;  a               4   56[COMRAM] long 
  4468 ;; Auto vars:     Size  Location     Type
  4469 ;;  grs             1   71[COMRAM] unsigned char 
  4470 ;;  bexp            1   70[COMRAM] unsigned char 
  4471 ;;  aexp            1   69[COMRAM] unsigned char 
  4472 ;;  signs           1   68[COMRAM] unsigned char 
  4473 ;; Return value:  Size  Location     Type
  4474 ;;                  4   52[COMRAM] unsigned char 
  4475 ;; Registers used:
  4476 ;;		wreg, status,2, status,0
  4477 ;; Tracked objects:
  4478 ;;		On entry : 0/0
  4479 ;;		On exit  : 0/0
  4480 ;;		Unchanged: 0/0
  4481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4482 ;;      Params:         8       0       0       0       0       0       0       0       0
  4483 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4484 ;;      Temps:          8       0       0       0       0       0       0       0       0
  4485 ;;      Totals:        20       0       0       0       0       0       0       0       0
  4486 ;;Total ram usage:       20 bytes
  4487 ;; Hardware stack levels used:    1
  4488 ;; This function calls:
  4489 ;;		Nothing
  4490 ;; This function is called by:
  4491 ;;		_sprintf
  4492 ;;		___flsub
  4493 ;; This function uses a non-reentrant model
  4494 ;;
  4495                           
  4496                           	psect	text14
  4497  001842                     __ptext14:
  4498                           	opt stack 0
  4499  001842                     ___fladd:
  4500                           	opt stack 27
  4501                           
  4502                           ;incstack = 0
  4503  001842  5038               	movf	___fladd@b+3,w,c
  4504  001844  0B80               	andlw	128
  4505  001846  6E45               	movwf	___fladd@signs,c
  4506  001848  5038               	movf	___fladd@b+3,w,c
  4507  00184A  2438               	addwf	___fladd@b+3,w,c
  4508  00184C  6E47               	movwf	___fladd@bexp,c
  4509  00184E  BE37               	btfsc	___fladd@b+2,7,c
  4510  001850  8047               	bsf	___fladd@bexp,0,c
  4511  001852  5047               	movf	___fladd@bexp,w,c
  4512  001854  B4D8               	btfsc	status,2,c
  4513  001856  D00D               	goto	l2388
  4514  001858  2847               	incf	___fladd@bexp,w,c
  4515  00185A  A4D8               	btfss	status,2,c
  4516  00185C  D008               	goto	l2384
  4517  00185E  0E00               	movlw	0
  4518  001860  6E35               	movwf	___fladd@b,c
  4519  001862  0E00               	movlw	0
  4520  001864  6E36               	movwf	___fladd@b+1,c
  4521  001866  0E00               	movlw	0
  4522  001868  6E37               	movwf	___fladd@b+2,c
  4523  00186A  0E00               	movlw	0
  4524  00186C  6E38               	movwf	___fladd@b+3,c
  4525  00186E                     l2384:
  4526  00186E  8E37               	bsf	___fladd@b+2,7,c
  4527  001870  D006               	goto	L6
  4528  001872                     l2388:
  4529  001872  0E00               	movlw	0
  4530  001874  6E35               	movwf	___fladd@b,c
  4531  001876  0E00               	movlw	0
  4532  001878  6E36               	movwf	___fladd@b+1,c
  4533  00187A  0E00               	movlw	0
  4534  00187C  6E37               	movwf	___fladd@b+2,c
  4535  00187E                     L6:
  4536  00187E  0E00               	movlw	0
  4537  001880  6E38               	movwf	___fladd@b+3,c
  4538  001882  503C               	movf	___fladd@a+3,w,c
  4539  001884  0B80               	andlw	128
  4540  001886  6E46               	movwf	___fladd@aexp,c
  4541  001888  5045               	movf	___fladd@signs,w,c
  4542  00188A  1846               	xorwf	___fladd@aexp,w,c
  4543  00188C  A4D8               	btfss	status,2,c
  4544  00188E  8C45               	bsf	___fladd@signs,6,c
  4545  001890  503C               	movf	___fladd@a+3,w,c
  4546  001892  243C               	addwf	___fladd@a+3,w,c
  4547  001894  6E46               	movwf	___fladd@aexp,c
  4548  001896  BE3B               	btfsc	___fladd@a+2,7,c
  4549  001898  8046               	bsf	___fladd@aexp,0,c
  4550  00189A  5046               	movf	___fladd@aexp,w,c
  4551  00189C  B4D8               	btfsc	status,2,c
  4552  00189E  D00D               	goto	l2412
  4553  0018A0  2846               	incf	___fladd@aexp,w,c
  4554  0018A2  A4D8               	btfss	status,2,c
  4555  0018A4  D008               	goto	l2408
  4556  0018A6  0E00               	movlw	0
  4557  0018A8  6E39               	movwf	___fladd@a,c
  4558  0018AA  0E00               	movlw	0
  4559  0018AC  6E3A               	movwf	___fladd@a+1,c
  4560  0018AE  0E00               	movlw	0
  4561  0018B0  6E3B               	movwf	___fladd@a+2,c
  4562  0018B2  0E00               	movlw	0
  4563  0018B4  6E3C               	movwf	___fladd@a+3,c
  4564  0018B6                     l2408:
  4565  0018B6  8E3B               	bsf	___fladd@a+2,7,c
  4566  0018B8  D006               	goto	L7
  4567  0018BA                     l2412:
  4568  0018BA  0E00               	movlw	0
  4569  0018BC  6E39               	movwf	___fladd@a,c
  4570  0018BE  0E00               	movlw	0
  4571  0018C0  6E3A               	movwf	___fladd@a+1,c
  4572  0018C2  0E00               	movlw	0
  4573  0018C4  6E3B               	movwf	___fladd@a+2,c
  4574  0018C6                     L7:
  4575  0018C6  0E00               	movlw	0
  4576  0018C8  6E3C               	movwf	___fladd@a+3,c
  4577  0018CA  5047               	movf	___fladd@bexp,w,c
  4578  0018CC  5C46               	subwf	___fladd@aexp,w,c
  4579  0018CE  B0D8               	btfsc	status,0,c
  4580  0018D0  D022               	goto	l2450
  4581  0018D2  AC45               	btfss	___fladd@signs,6,c
  4582  0018D4  D002               	goto	l2420
  4583  0018D6  0E80               	movlw	128
  4584  0018D8  1A45               	xorwf	___fladd@signs,f,c
  4585  0018DA                     l2420:
  4586  0018DA  C047  F048         	movff	___fladd@bexp,___fladd@grs
  4587  0018DE  C046  F047         	movff	___fladd@aexp,___fladd@bexp
  4588  0018E2  C048  F046         	movff	___fladd@grs,___fladd@aexp
  4589  0018E6  C035  F048         	movff	___fladd@b,___fladd@grs
  4590  0018EA  C039  F035         	movff	___fladd@a,___fladd@b
  4591  0018EE  C048  F039         	movff	___fladd@grs,___fladd@a
  4592  0018F2  C036  F048         	movff	___fladd@b+1,___fladd@grs
  4593  0018F6  C03A  F036         	movff	___fladd@a+1,___fladd@b+1
  4594  0018FA  C048  F03A         	movff	___fladd@grs,___fladd@a+1
  4595  0018FE  C037  F048         	movff	___fladd@b+2,___fladd@grs
  4596  001902  C03B  F037         	movff	___fladd@a+2,___fladd@b+2
  4597  001906  C048  F03B         	movff	___fladd@grs,___fladd@a+2
  4598  00190A  C038  F048         	movff	___fladd@b+3,___fladd@grs
  4599  00190E  C03C  F038         	movff	___fladd@a+3,___fladd@b+3
  4600  001912  C048  F03C         	movff	___fladd@grs,___fladd@a+3
  4601  001916                     l2450:
  4602  001916  0E00               	movlw	0
  4603  001918  6E48               	movwf	___fladd@grs,c
  4604  00191A  5047               	movf	___fladd@bexp,w,c
  4605  00191C  6E3D               	movwf	??___fladd& (0+255),c
  4606  00191E  6A3E               	clrf	(??___fladd+1)& (0+255),c
  4607  001920  1E3D               	comf	??___fladd,f,c
  4608  001922  1E3E               	comf	??___fladd+1,f,c
  4609  001924  4A3D               	infsnz	??___fladd,f,c
  4610  001926  2A3E               	incf	??___fladd+1,f,c
  4611  001928  5046               	movf	___fladd@aexp,w,c
  4612  00192A  6E3F               	movwf	(??___fladd+2)& (0+255),c
  4613  00192C  6A40               	clrf	(??___fladd+3)& (0+255),c
  4614  00192E  503D               	movf	??___fladd,w,c
  4615  001930  263F               	addwf	??___fladd+2,f,c
  4616  001932  503E               	movf	??___fladd+1,w,c
  4617  001934  2240               	addwfc	??___fladd+3,f,c
  4618  001936  BE40               	btfsc	??___fladd+3,7,c
  4619  001938  D02C               	goto	l765
  4620  00193A  5040               	movf	??___fladd+3,w,c
  4621  00193C  E104               	bnz	u2190
  4622  00193E  0E1A               	movlw	26
  4623  001940  5C3F               	subwf	??___fladd+2,w,c
  4624  001942  A0D8               	btfss	status,0,c
  4625  001944  D026               	goto	l765
  4626  001946                     u2190:
  4627  001946  5035               	movf	___fladd@b,w,c
  4628  001948  1036               	iorwf	___fladd@b+1,w,c
  4629  00194A  1037               	iorwf	___fladd@b+2,w,c
  4630  00194C  1038               	iorwf	___fladd@b+3,w,c
  4631  00194E  B4D8               	btfsc	status,2,c
  4632  001950  D002               	goto	u2200
  4633  001952  0E01               	movlw	1
  4634  001954  D001               	goto	u2210
  4635  001956                     u2200:
  4636  001956  0E00               	movlw	0
  4637  001958                     u2210:
  4638  001958  6E48               	movwf	___fladd@grs,c
  4639  00195A  0E00               	movlw	0
  4640  00195C  6E35               	movwf	___fladd@b,c
  4641  00195E  0E00               	movlw	0
  4642  001960  6E36               	movwf	___fladd@b+1,c
  4643  001962  0E00               	movlw	0
  4644  001964  6E37               	movwf	___fladd@b+2,c
  4645  001966  0E00               	movlw	0
  4646  001968  6E38               	movwf	___fladd@b+3,c
  4647  00196A  C046  F047         	movff	___fladd@aexp,___fladd@bexp
  4648  00196E  D015               	goto	l764
  4649  001970                     l766:
  4650  001970  A048               	btfss	___fladd@grs,0,c
  4651  001972  D005               	goto	l2462
  4652  001974  90D8               	bcf	status,0,c
  4653  001976  3048               	rrcf	___fladd@grs,w,c
  4654  001978  0901               	iorlw	1
  4655  00197A  6E48               	movwf	___fladd@grs,c
  4656  00197C  D002               	goto	l2464
  4657  00197E                     l2462:
  4658  00197E  90D8               	bcf	status,0,c
  4659  001980  3248               	rrcf	___fladd@grs,f,c
  4660  001982                     l2464:
  4661  001982  B035               	btfsc	___fladd@b,0,c
  4662  001984  8E48               	bsf	___fladd@grs,7,c
  4663  001986  3438               	rlcf	___fladd@b+3,w,c
  4664  001988  3238               	rrcf	___fladd@b+3,f,c
  4665  00198A  3237               	rrcf	___fladd@b+2,f,c
  4666  00198C  3236               	rrcf	___fladd@b+1,f,c
  4667  00198E  3235               	rrcf	___fladd@b,f,c
  4668  001990  2A47               	incf	___fladd@bexp,f,c
  4669  001992                     l765:
  4670  001992  5046               	movf	___fladd@aexp,w,c
  4671  001994  5C47               	subwf	___fladd@bexp,w,c
  4672  001996  A0D8               	btfss	status,0,c
  4673  001998  D7EB               	goto	l766
  4674  00199A                     l764:
  4675  00199A  BC45               	btfsc	___fladd@signs,6,c
  4676  00199C  D029               	goto	l2496
  4677  00199E  5047               	movf	___fladd@bexp,w,c
  4678  0019A0  A4D8               	btfss	status,2,c
  4679  0019A2  D009               	goto	l2478
  4680  0019A4  0E00               	movlw	0
  4681  0019A6  6E35               	movwf	?___fladd,c
  4682  0019A8  0E00               	movlw	0
  4683  0019AA  6E36               	movwf	?___fladd+1,c
  4684  0019AC  0E00               	movlw	0
  4685  0019AE  6E37               	movwf	?___fladd+2,c
  4686  0019B0  0E00               	movlw	0
  4687  0019B2  6E38               	movwf	?___fladd+3,c
  4688  0019B4  0012               	return	
  4689  0019B6                     l2478:
  4690  0019B6  5039               	movf	___fladd@a,w,c
  4691  0019B8  2635               	addwf	___fladd@b,f,c
  4692  0019BA  503A               	movf	___fladd@a+1,w,c
  4693  0019BC  2236               	addwfc	___fladd@b+1,f,c
  4694  0019BE  503B               	movf	___fladd@a+2,w,c
  4695  0019C0  2237               	addwfc	___fladd@b+2,f,c
  4696  0019C2  503C               	movf	___fladd@a+3,w,c
  4697  0019C4  2238               	addwfc	___fladd@b+3,f,c
  4698  0019C6  A038               	btfss	___fladd@b+3,0,c
  4699  0019C8  D083               	goto	l2532
  4700  0019CA  A048               	btfss	___fladd@grs,0,c
  4701  0019CC  D006               	goto	l2486
  4702  0019CE  90D8               	bcf	status,0,c
  4703  0019D0  3248               	rrcf	___fladd@grs,f,c
  4704  0019D2  5048               	movf	___fladd@grs,w,c
  4705  0019D4  0901               	iorlw	1
  4706  0019D6  6E48               	movwf	___fladd@grs,c
  4707  0019D8  D002               	goto	l2488
  4708  0019DA                     l2486:
  4709  0019DA  90D8               	bcf	status,0,c
  4710  0019DC  3248               	rrcf	___fladd@grs,f,c
  4711  0019DE                     l2488:
  4712  0019DE  B035               	btfsc	___fladd@b,0,c
  4713  0019E0  8E48               	bsf	___fladd@grs,7,c
  4714  0019E2  3438               	rlcf	___fladd@b+3,w,c
  4715  0019E4  3238               	rrcf	___fladd@b+3,f,c
  4716  0019E6  3237               	rrcf	___fladd@b+2,f,c
  4717  0019E8  3236               	rrcf	___fladd@b+1,f,c
  4718  0019EA  3235               	rrcf	___fladd@b,f,c
  4719  0019EC  2A47               	incf	___fladd@bexp,f,c
  4720  0019EE  D070               	goto	l2532
  4721  0019F0                     l2496:
  4722  0019F0  5039               	movf	___fladd@a,w,c
  4723  0019F2  5C35               	subwf	___fladd@b,w,c
  4724  0019F4  503A               	movf	___fladd@a+1,w,c
  4725  0019F6  5836               	subwfb	___fladd@b+1,w,c
  4726  0019F8  503B               	movf	___fladd@a+2,w,c
  4727  0019FA  5837               	subwfb	___fladd@b+2,w,c
  4728  0019FC  5038               	movf	___fladd@b+3,w,c
  4729  0019FE  0A80               	xorlw	128
  4730  001A00  6E3D               	movwf	??___fladd& (0+255),c
  4731  001A02  503C               	movf	___fladd@a+3,w,c
  4732  001A04  0A80               	xorlw	128
  4733  001A06  583D               	subwfb	??___fladd& (0+255),w,c
  4734  001A08  B0D8               	btfsc	status,0,c
  4735  001A0A  D036               	goto	l2506
  4736  001A0C  C035  F03D         	movff	___fladd@b,??___fladd
  4737  001A10  C036  F03E         	movff	___fladd@b+1,??___fladd+1
  4738  001A14  C037  F03F         	movff	___fladd@b+2,??___fladd+2
  4739  001A18  C038  F040         	movff	___fladd@b+3,??___fladd+3
  4740  001A1C  1E3D               	comf	??___fladd,f,c
  4741  001A1E  1E3E               	comf	??___fladd+1,f,c
  4742  001A20  1E3F               	comf	??___fladd+2,f,c
  4743  001A22  1E40               	comf	??___fladd+3,f,c
  4744  001A24  2A3D               	incf	??___fladd,f,c
  4745  001A26  0E00               	movlw	0
  4746  001A28  223E               	addwfc	??___fladd+1,f,c
  4747  001A2A  223F               	addwfc	??___fladd+2,f,c
  4748  001A2C  2240               	addwfc	??___fladd+3,f,c
  4749  001A2E  5039               	movf	___fladd@a,w,c
  4750  001A30  243D               	addwf	??___fladd,w,c
  4751  001A32  6E41               	movwf	(??___fladd+4)& (0+255),c
  4752  001A34  503A               	movf	___fladd@a+1,w,c
  4753  001A36  203E               	addwfc	??___fladd+1,w,c
  4754  001A38  6E42               	movwf	(??___fladd+5)& (0+255),c
  4755  001A3A  503B               	movf	___fladd@a+2,w,c
  4756  001A3C  203F               	addwfc	??___fladd+2,w,c
  4757  001A3E  6E43               	movwf	(??___fladd+6)& (0+255),c
  4758  001A40  503C               	movf	___fladd@a+3,w,c
  4759  001A42  2040               	addwfc	??___fladd+3,w,c
  4760  001A44  6E44               	movwf	(??___fladd+7)& (0+255),c
  4761  001A46  0EFF               	movlw	255
  4762  001A48  2441               	addwf	??___fladd+4,w,c
  4763  001A4A  6E35               	movwf	___fladd@b,c
  4764  001A4C  0EFF               	movlw	255
  4765  001A4E  2042               	addwfc	??___fladd+5,w,c
  4766  001A50  6E36               	movwf	___fladd@b+1,c
  4767  001A52  0EFF               	movlw	255
  4768  001A54  2043               	addwfc	??___fladd+6,w,c
  4769  001A56  6E37               	movwf	___fladd@b+2,c
  4770  001A58  0EFF               	movlw	255
  4771  001A5A  2044               	addwfc	??___fladd+7,w,c
  4772  001A5C  6E38               	movwf	___fladd@b+3,c
  4773  001A5E  0E80               	movlw	128
  4774  001A60  1A45               	xorwf	___fladd@signs,f,c
  4775  001A62  6C48               	negf	___fladd@grs,c
  4776  001A64  5048               	movf	___fladd@grs,w,c
  4777  001A66  A4D8               	btfss	status,2,c
  4778  001A68  D00F               	goto	l781
  4779  001A6A  0E01               	movlw	1
  4780  001A6C  2635               	addwf	___fladd@b,f,c
  4781  001A6E  0E00               	movlw	0
  4782  001A70  2236               	addwfc	___fladd@b+1,f,c
  4783  001A72  2237               	addwfc	___fladd@b+2,f,c
  4784  001A74  2238               	addwfc	___fladd@b+3,f,c
  4785  001A76  D008               	goto	l781
  4786  001A78                     l2506:
  4787  001A78  5039               	movf	___fladd@a,w,c
  4788  001A7A  5E35               	subwf	___fladd@b,f,c
  4789  001A7C  503A               	movf	___fladd@a+1,w,c
  4790  001A7E  5A36               	subwfb	___fladd@b+1,f,c
  4791  001A80  503B               	movf	___fladd@a+2,w,c
  4792  001A82  5A37               	subwfb	___fladd@b+2,f,c
  4793  001A84  503C               	movf	___fladd@a+3,w,c
  4794  001A86  5A38               	subwfb	___fladd@b+3,f,c
  4795  001A88                     l781:
  4796  001A88  5035               	movf	___fladd@b,w,c
  4797  001A8A  1036               	iorwf	___fladd@b+1,w,c
  4798  001A8C  1037               	iorwf	___fladd@b+2,w,c
  4799  001A8E  1038               	iorwf	___fladd@b+3,w,c
  4800  001A90  A4D8               	btfss	status,2,c
  4801  001A92  D01C               	goto	l2530
  4802  001A94  5048               	movf	___fladd@grs,w,c
  4803  001A96  A4D8               	btfss	status,2,c
  4804  001A98  D019               	goto	l2530
  4805  001A9A  0E00               	movlw	0
  4806  001A9C  6E35               	movwf	?___fladd,c
  4807  001A9E  0E00               	movlw	0
  4808  001AA0  6E36               	movwf	?___fladd+1,c
  4809  001AA2  0E00               	movlw	0
  4810  001AA4  6E37               	movwf	?___fladd+2,c
  4811  001AA6  0E00               	movlw	0
  4812  001AA8  6E38               	movwf	?___fladd+3,c
  4813  001AAA  0012               	return	
  4814  001AAC                     l2514:
  4815  001AAC  90D8               	bcf	status,0,c
  4816  001AAE  3635               	rlcf	___fladd@b,f,c
  4817  001AB0  3636               	rlcf	___fladd@b+1,f,c
  4818  001AB2  3637               	rlcf	___fladd@b+2,f,c
  4819  001AB4  3638               	rlcf	___fladd@b+3,f,c
  4820  001AB6  BE48               	btfsc	___fladd@grs,7,c
  4821  001AB8  8035               	bsf	___fladd@b,0,c
  4822  001ABA  A048               	btfss	___fladd@grs,0,c
  4823  001ABC  D002               	goto	l2524
  4824  001ABE  80D8               	bsf	status,0,c
  4825  001AC0  D001               	goto	L8
  4826  001AC2                     l2524:
  4827  001AC2  90D8               	bcf	status,0,c
  4828  001AC4                     L8:
  4829  001AC4  3648               	rlcf	___fladd@grs,f,c
  4830  001AC6  5047               	movf	___fladd@bexp,w,c
  4831  001AC8  A4D8               	btfss	status,2,c
  4832  001ACA  0647               	decf	___fladd@bexp,f,c
  4833  001ACC                     l2530:
  4834  001ACC  AE37               	btfss	___fladd@b+2,7,c
  4835  001ACE  D7EE               	goto	l2514
  4836  001AD0                     l2532:
  4837  001AD0  0E00               	movlw	0
  4838  001AD2  6E46               	movwf	___fladd@aexp,c
  4839  001AD4  AE48               	btfss	___fladd@grs,7,c
  4840  001AD6  D00A               	goto	l790
  4841  001AD8  C048  F03D         	movff	___fladd@grs,??___fladd
  4842  001ADC  0E7F               	movlw	127
  4843  001ADE  163D               	andwf	??___fladd,f,c
  4844  001AE0  A4D8               	btfss	status,2,c
  4845  001AE2  D002               	goto	l2540
  4846  001AE4  A035               	btfss	___fladd@b,0,c
  4847  001AE6  D002               	goto	l790
  4848  001AE8                     l2540:
  4849  001AE8  0E01               	movlw	1
  4850  001AEA  6E46               	movwf	___fladd@aexp,c
  4851  001AEC                     l790:
  4852  001AEC  5046               	movf	___fladd@aexp,w,c
  4853  001AEE  B4D8               	btfsc	status,2,c
  4854  001AF0  D020               	goto	l2550
  4855  001AF2  0E01               	movlw	1
  4856  001AF4  2635               	addwf	___fladd@b,f,c
  4857  001AF6  0E00               	movlw	0
  4858  001AF8  2236               	addwfc	___fladd@b+1,f,c
  4859  001AFA  2237               	addwfc	___fladd@b+2,f,c
  4860  001AFC  2238               	addwfc	___fladd@b+3,f,c
  4861  001AFE  A038               	btfss	___fladd@b+3,0,c
  4862  001B00  D018               	goto	l2550
  4863  001B02  C035  F03D         	movff	___fladd@b,??___fladd
  4864  001B06  C036  F03E         	movff	___fladd@b+1,??___fladd+1
  4865  001B0A  C037  F03F         	movff	___fladd@b+2,??___fladd+2
  4866  001B0E  C038  F040         	movff	___fladd@b+3,??___fladd+3
  4867  001B12  3440               	rlcf	??___fladd+3,w,c
  4868  001B14  3240               	rrcf	??___fladd+3,f,c
  4869  001B16  323F               	rrcf	??___fladd+2,f,c
  4870  001B18  323E               	rrcf	??___fladd+1,f,c
  4871  001B1A  323D               	rrcf	??___fladd,f,c
  4872  001B1C  C03D  F035         	movff	??___fladd,___fladd@b
  4873  001B20  C03E  F036         	movff	??___fladd+1,___fladd@b+1
  4874  001B24  C03F  F037         	movff	??___fladd+2,___fladd@b+2
  4875  001B28  C040  F038         	movff	??___fladd+3,___fladd@b+3
  4876  001B2C  2847               	incf	___fladd@bexp,w,c
  4877  001B2E  A4D8               	btfss	status,2,c
  4878  001B30  2A47               	incf	___fladd@bexp,f,c
  4879  001B32                     l2550:
  4880  001B32  2847               	incf	___fladd@bexp,w,c
  4881  001B34  B4D8               	btfsc	status,2,c
  4882  001B36  D003               	goto	l2554
  4883  001B38  5047               	movf	___fladd@bexp,w,c
  4884  001B3A  A4D8               	btfss	status,2,c
  4885  001B3C  D00D               	goto	l2558
  4886  001B3E                     l2554:
  4887  001B3E  0E00               	movlw	0
  4888  001B40  6E35               	movwf	___fladd@b,c
  4889  001B42  0E00               	movlw	0
  4890  001B44  6E36               	movwf	___fladd@b+1,c
  4891  001B46  0E00               	movlw	0
  4892  001B48  6E37               	movwf	___fladd@b+2,c
  4893  001B4A  0E00               	movlw	0
  4894  001B4C  6E38               	movwf	___fladd@b+3,c
  4895  001B4E  5047               	movf	___fladd@bexp,w,c
  4896  001B50  A4D8               	btfss	status,2,c
  4897  001B52  D002               	goto	l2558
  4898  001B54  0E00               	movlw	0
  4899  001B56  6E45               	movwf	___fladd@signs,c
  4900  001B58                     l2558:
  4901  001B58  A047               	btfss	___fladd@bexp,0,c
  4902  001B5A  D002               	goto	l2562
  4903  001B5C  8E37               	bsf	___fladd@b+2,7,c
  4904  001B5E  D001               	goto	l2564
  4905  001B60                     l2562:
  4906  001B60  9E37               	bcf	___fladd@b+2,7,c
  4907  001B62                     l2564:
  4908  001B62  90D8               	bcf	status,0,c
  4909  001B64  3047               	rrcf	___fladd@bexp,w,c
  4910  001B66  6E38               	movwf	___fladd@b+3,c
  4911  001B68  BE45               	btfsc	___fladd@signs,7,c
  4912  001B6A  8E38               	bsf	___fladd@b+3,7,c
  4913  001B6C  C035  F035         	movff	___fladd@b,?___fladd
  4914  001B70  C036  F036         	movff	___fladd@b+1,?___fladd+1
  4915  001B74  C037  F037         	movff	___fladd@b+2,?___fladd+2
  4916  001B78  C038  F038         	movff	___fladd@b+3,?___fladd+3
  4917  001B7C  0012               	return	
  4918  001B7E                     __end_of___fladd:
  4919                           	opt stack 0
  4920                           tblptru	equ	0xFF8
  4921                           tblptrh	equ	0xFF7
  4922                           tblptrl	equ	0xFF6
  4923                           tablat	equ	0xFF5
  4924                           prodh	equ	0xFF4
  4925                           prodl	equ	0xFF3
  4926                           postinc0	equ	0xFEE
  4927                           wreg	equ	0xFE8
  4928                           indf2	equ	0xFDF
  4929                           postinc2	equ	0xFDE
  4930                           fsr2h	equ	0xFDA
  4931                           fsr2l	equ	0xFD9
  4932                           status	equ	0xFD8
  4933                           
  4934 ;; *************** function ___flneg *****************
  4935 ;; Defined at:
  4936 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flneg.c"
  4937 ;; Parameters:    Size  Location     Type
  4938 ;;  f1              4    0[COMRAM] unsigned char 
  4939 ;; Auto vars:     Size  Location     Type
  4940 ;;		None
  4941 ;; Return value:  Size  Location     Type
  4942 ;;                  4    0[COMRAM] unsigned char 
  4943 ;; Registers used:
  4944 ;;		wreg, status,2, status,0
  4945 ;; Tracked objects:
  4946 ;;		On entry : 0/0
  4947 ;;		On exit  : 0/0
  4948 ;;		Unchanged: 0/0
  4949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4950 ;;      Params:         4       0       0       0       0       0       0       0       0
  4951 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4952 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4953 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4954 ;;Total ram usage:        4 bytes
  4955 ;; Hardware stack levels used:    1
  4956 ;; This function calls:
  4957 ;;		Nothing
  4958 ;; This function is called by:
  4959 ;;		_sprintf
  4960 ;; This function uses a non-reentrant model
  4961 ;;
  4962                           
  4963                           	psect	text15
  4964  002FAC                     __ptext15:
  4965                           	opt stack 0
  4966  002FAC                     ___flneg:
  4967                           	opt stack 28
  4968                           
  4969                           ;incstack = 0
  4970  002FAC  5001               	movf	___flneg@f1,w,c
  4971  002FAE  1002               	iorwf	___flneg@f1+1,w,c
  4972  002FB0  1003               	iorwf	___flneg@f1+2,w,c
  4973  002FB2  1004               	iorwf	___flneg@f1+3,w,c
  4974  002FB4  B4D8               	btfsc	status,2,c
  4975  002FB6  D008               	goto	l3164
  4976  002FB8  0E00               	movlw	0
  4977  002FBA  1A01               	xorwf	___flneg@f1,f,c
  4978  002FBC  0E00               	movlw	0
  4979  002FBE  1A02               	xorwf	___flneg@f1+1,f,c
  4980  002FC0  0E00               	movlw	0
  4981  002FC2  1A03               	xorwf	___flneg@f1+2,f,c
  4982  002FC4  0E80               	movlw	128
  4983  002FC6  1A04               	xorwf	___flneg@f1+3,f,c
  4984  002FC8                     l3164:
  4985  002FC8  C001  F001         	movff	___flneg@f1,?___flneg
  4986  002FCC  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  4987  002FD0  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  4988  002FD4  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  4989  002FD8  0012               	return	
  4990  002FDA                     __end_of___flneg:
  4991                           	opt stack 0
  4992                           tblptru	equ	0xFF8
  4993                           tblptrh	equ	0xFF7
  4994                           tblptrl	equ	0xFF6
  4995                           tablat	equ	0xFF5
  4996                           prodh	equ	0xFF4
  4997                           prodl	equ	0xFF3
  4998                           postinc0	equ	0xFEE
  4999                           wreg	equ	0xFE8
  5000                           indf2	equ	0xFDF
  5001                           postinc2	equ	0xFDE
  5002                           fsr2h	equ	0xFDA
  5003                           fsr2l	equ	0xFD9
  5004                           status	equ	0xFD8
  5005                           
  5006 ;; *************** function ___flge *****************
  5007 ;; Defined at:
  5008 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flge.c"
  5009 ;; Parameters:    Size  Location     Type
  5010 ;;  ff1             4    0[COMRAM] unsigned char 
  5011 ;;  ff2             4    4[COMRAM] unsigned char 
  5012 ;; Auto vars:     Size  Location     Type
  5013 ;;		None
  5014 ;; Return value:  Size  Location     Type
  5015 ;;		None               void
  5016 ;; Registers used:
  5017 ;;		wreg, status,2, status,0
  5018 ;; Tracked objects:
  5019 ;;		On entry : 0/0
  5020 ;;		On exit  : 0/0
  5021 ;;		Unchanged: 0/0
  5022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5023 ;;      Params:         8       0       0       0       0       0       0       0       0
  5024 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5025 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5026 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5027 ;;Total ram usage:       12 bytes
  5028 ;; Hardware stack levels used:    1
  5029 ;; This function calls:
  5030 ;;		Nothing
  5031 ;; This function is called by:
  5032 ;;		_ricarica
  5033 ;;		_sprintf
  5034 ;; This function uses a non-reentrant model
  5035 ;;
  5036                           
  5037                           	psect	text16
  5038  0027EE                     __ptext16:
  5039                           	opt stack 0
  5040  0027EE                     ___flge:
  5041                           	opt stack 28
  5042                           
  5043                           ;incstack = 0
  5044  0027EE  0E00               	movlw	0
  5045  0027F0  1401               	andwf	___flge@ff1,w,c
  5046  0027F2  6E09               	movwf	??___flge& (0+255),c
  5047  0027F4  0E00               	movlw	0
  5048  0027F6  1402               	andwf	___flge@ff1+1,w,c
  5049  0027F8  6E0A               	movwf	(??___flge+1)& (0+255),c
  5050  0027FA  0E80               	movlw	128
  5051  0027FC  1403               	andwf	___flge@ff1+2,w,c
  5052  0027FE  6E0B               	movwf	(??___flge+2)& (0+255),c
  5053  002800  0E7F               	movlw	127
  5054  002802  1404               	andwf	___flge@ff1+3,w,c
  5055  002804  6E0C               	movwf	(??___flge+3)& (0+255),c
  5056  002806  5009               	movf	??___flge,w,c
  5057  002808  100A               	iorwf	??___flge+1,w,c
  5058  00280A  100B               	iorwf	??___flge+2,w,c
  5059  00280C  100C               	iorwf	??___flge+3,w,c
  5060  00280E  A4D8               	btfss	status,2,c
  5061  002810  D008               	goto	l3142
  5062  002812  0E00               	movlw	0
  5063  002814  6E01               	movwf	___flge@ff1,c
  5064  002816  0E00               	movlw	0
  5065  002818  6E02               	movwf	___flge@ff1+1,c
  5066  00281A  0E00               	movlw	0
  5067  00281C  6E03               	movwf	___flge@ff1+2,c
  5068  00281E  0E00               	movlw	0
  5069  002820  6E04               	movwf	___flge@ff1+3,c
  5070  002822                     l3142:
  5071  002822  0E00               	movlw	0
  5072  002824  1405               	andwf	___flge@ff2,w,c
  5073  002826  6E09               	movwf	??___flge& (0+255),c
  5074  002828  0E00               	movlw	0
  5075  00282A  1406               	andwf	___flge@ff2+1,w,c
  5076  00282C  6E0A               	movwf	(??___flge+1)& (0+255),c
  5077  00282E  0E80               	movlw	128
  5078  002830  1407               	andwf	___flge@ff2+2,w,c
  5079  002832  6E0B               	movwf	(??___flge+2)& (0+255),c
  5080  002834  0E7F               	movlw	127
  5081  002836  1408               	andwf	___flge@ff2+3,w,c
  5082  002838  6E0C               	movwf	(??___flge+3)& (0+255),c
  5083  00283A  5009               	movf	??___flge,w,c
  5084  00283C  100A               	iorwf	??___flge+1,w,c
  5085  00283E  100B               	iorwf	??___flge+2,w,c
  5086  002840  100C               	iorwf	??___flge+3,w,c
  5087  002842  A4D8               	btfss	status,2,c
  5088  002844  D008               	goto	l3146
  5089  002846  0E00               	movlw	0
  5090  002848  6E05               	movwf	___flge@ff2,c
  5091  00284A  0E00               	movlw	0
  5092  00284C  6E06               	movwf	___flge@ff2+1,c
  5093  00284E  0E00               	movlw	0
  5094  002850  6E07               	movwf	___flge@ff2+2,c
  5095  002852  0E00               	movlw	0
  5096  002854  6E08               	movwf	___flge@ff2+3,c
  5097  002856                     l3146:
  5098  002856  AE04               	btfss	___flge@ff1+3,7,c
  5099  002858  D01D               	goto	l3150
  5100  00285A  C001  F009         	movff	___flge@ff1,??___flge
  5101  00285E  C002  F00A         	movff	___flge@ff1+1,??___flge+1
  5102  002862  C003  F00B         	movff	___flge@ff1+2,??___flge+2
  5103  002866  C004  F00C         	movff	___flge@ff1+3,??___flge+3
  5104  00286A  1E09               	comf	??___flge,f,c
  5105  00286C  1E0A               	comf	??___flge+1,f,c
  5106  00286E  1E0B               	comf	??___flge+2,f,c
  5107  002870  1E0C               	comf	??___flge+3,f,c
  5108  002872  2A09               	incf	??___flge,f,c
  5109  002874  0E00               	movlw	0
  5110  002876  220A               	addwfc	??___flge+1,f,c
  5111  002878  220B               	addwfc	??___flge+2,f,c
  5112  00287A  220C               	addwfc	??___flge+3,f,c
  5113  00287C  0E00               	movlw	0
  5114  00287E  2409               	addwf	??___flge,w,c
  5115  002880  6E01               	movwf	___flge@ff1,c
  5116  002882  0E00               	movlw	0
  5117  002884  200A               	addwfc	??___flge+1,w,c
  5118  002886  6E02               	movwf	___flge@ff1+1,c
  5119  002888  0E00               	movlw	0
  5120  00288A  200B               	addwfc	??___flge+2,w,c
  5121  00288C  6E03               	movwf	___flge@ff1+2,c
  5122  00288E  0E80               	movlw	128
  5123  002890  200C               	addwfc	??___flge+3,w,c
  5124  002892  6E04               	movwf	___flge@ff1+3,c
  5125  002894                     l3150:
  5126  002894  AE08               	btfss	___flge@ff2+3,7,c
  5127  002896  D01D               	goto	l487
  5128  002898  C005  F009         	movff	___flge@ff2,??___flge
  5129  00289C  C006  F00A         	movff	___flge@ff2+1,??___flge+1
  5130  0028A0  C007  F00B         	movff	___flge@ff2+2,??___flge+2
  5131  0028A4  C008  F00C         	movff	___flge@ff2+3,??___flge+3
  5132  0028A8  1E09               	comf	??___flge,f,c
  5133  0028AA  1E0A               	comf	??___flge+1,f,c
  5134  0028AC  1E0B               	comf	??___flge+2,f,c
  5135  0028AE  1E0C               	comf	??___flge+3,f,c
  5136  0028B0  2A09               	incf	??___flge,f,c
  5137  0028B2  0E00               	movlw	0
  5138  0028B4  220A               	addwfc	??___flge+1,f,c
  5139  0028B6  220B               	addwfc	??___flge+2,f,c
  5140  0028B8  220C               	addwfc	??___flge+3,f,c
  5141  0028BA  0E00               	movlw	0
  5142  0028BC  2409               	addwf	??___flge,w,c
  5143  0028BE  6E05               	movwf	___flge@ff2,c
  5144  0028C0  0E00               	movlw	0
  5145  0028C2  200A               	addwfc	??___flge+1,w,c
  5146  0028C4  6E06               	movwf	___flge@ff2+1,c
  5147  0028C6  0E00               	movlw	0
  5148  0028C8  200B               	addwfc	??___flge+2,w,c
  5149  0028CA  6E07               	movwf	___flge@ff2+2,c
  5150  0028CC  0E80               	movlw	128
  5151  0028CE  200C               	addwfc	??___flge+3,w,c
  5152  0028D0  6E08               	movwf	___flge@ff2+3,c
  5153  0028D2                     l487:
  5154  0028D2  0E00               	movlw	0
  5155  0028D4  1A01               	xorwf	___flge@ff1,f,c
  5156  0028D6  0E00               	movlw	0
  5157  0028D8  1A02               	xorwf	___flge@ff1+1,f,c
  5158  0028DA  0E00               	movlw	0
  5159  0028DC  1A03               	xorwf	___flge@ff1+2,f,c
  5160  0028DE  0E80               	movlw	128
  5161  0028E0  1A04               	xorwf	___flge@ff1+3,f,c
  5162  0028E2  0E00               	movlw	0
  5163  0028E4  1A05               	xorwf	___flge@ff2,f,c
  5164  0028E6  0E00               	movlw	0
  5165  0028E8  1A06               	xorwf	___flge@ff2+1,f,c
  5166  0028EA  0E00               	movlw	0
  5167  0028EC  1A07               	xorwf	___flge@ff2+2,f,c
  5168  0028EE  0E80               	movlw	128
  5169  0028F0  1A08               	xorwf	___flge@ff2+3,f,c
  5170  0028F2  5005               	movf	___flge@ff2,w,c
  5171  0028F4  5C01               	subwf	___flge@ff1,w,c
  5172  0028F6  5006               	movf	___flge@ff2+1,w,c
  5173  0028F8  5802               	subwfb	___flge@ff1+1,w,c
  5174  0028FA  5007               	movf	___flge@ff2+2,w,c
  5175  0028FC  5803               	subwfb	___flge@ff1+2,w,c
  5176  0028FE  5008               	movf	___flge@ff2+3,w,c
  5177  002900  5804               	subwfb	___flge@ff1+3,w,c
  5178  002902  B0D8               	btfsc	status,0,c
  5179  002904  D002               	goto	l3156
  5180  002906  90D8               	bcf	status,0,c
  5181  002908  0012               	return	
  5182  00290A                     l3156:
  5183  00290A  80D8               	bsf	status,0,c
  5184  00290C  0012               	return	
  5185  00290E                     __end_of___flge:
  5186                           	opt stack 0
  5187                           tblptru	equ	0xFF8
  5188                           tblptrh	equ	0xFF7
  5189                           tblptrl	equ	0xFF6
  5190                           tablat	equ	0xFF5
  5191                           prodh	equ	0xFF4
  5192                           prodl	equ	0xFF3
  5193                           postinc0	equ	0xFEE
  5194                           wreg	equ	0xFE8
  5195                           indf2	equ	0xFDF
  5196                           postinc2	equ	0xFDE
  5197                           fsr2h	equ	0xFDA
  5198                           fsr2l	equ	0xFD9
  5199                           status	equ	0xFD8
  5200                           
  5201 ;; *************** function _read_adc *****************
  5202 ;; Defined at:
  5203 ;;		line 83 in file "tester.c"
  5204 ;; Parameters:    Size  Location     Type
  5205 ;;		None
  5206 ;; Auto vars:     Size  Location     Type
  5207 ;;  i               1   66[COMRAM] unsigned char 
  5208 ;; Return value:  Size  Location     Type
  5209 ;;		None               void
  5210 ;; Registers used:
  5211 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5212 ;; Tracked objects:
  5213 ;;		On entry : 0/0
  5214 ;;		On exit  : 0/0
  5215 ;;		Unchanged: 0/0
  5216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5217 ;;      Params:         0       0       0       0       0       0       0       0       0
  5218 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5219 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5220 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5221 ;;Total ram usage:        3 bytes
  5222 ;; Hardware stack levels used:    1
  5223 ;; Hardware stack levels required when called:    2
  5224 ;; This function calls:
  5225 ;;		___fldiv
  5226 ;;		___flmul
  5227 ;;		___xxtofl
  5228 ;;		_delay_ms
  5229 ;; This function is called by:
  5230 ;;		_main
  5231 ;;		_ricarica
  5232 ;; This function uses a non-reentrant model
  5233 ;;
  5234                           
  5235                           	psect	text17
  5236  0020AC                     __ptext17:
  5237                           	opt stack 0
  5238  0020AC                     _read_adc:
  5239                           	opt stack 27
  5240                           
  5241                           ;tester.c: 84: for (char i = 0; i < 3; i++) {
  5242                           
  5243                           ;incstack = 0
  5244  0020AC  0E00               	movlw	0
  5245  0020AE  6E43               	movwf	read_adc@i,c
  5246  0020B0                     l3364:
  5247  0020B0  0E02               	movlw	2
  5248  0020B2  6443               	cpfsgt	read_adc@i,c
  5249  0020B4  D001               	goto	l3368
  5250  0020B6  D044               	goto	l3382
  5251  0020B8                     l3368:
  5252                           
  5253                           ;tester.c: 85: ADCON0 = combinazioni[i];
  5254  0020B8  5043               	movf	read_adc@i,w,c
  5255  0020BA  0D01               	mullw	1
  5256  0020BC  0E97               	movlw	low _combinazioni
  5257  0020BE  24F3               	addwf	prodl,w,c
  5258  0020C0  6ED9               	movwf	fsr2l,c
  5259  0020C2  0E00               	movlw	high _combinazioni
  5260  0020C4  20F4               	addwfc	prodh,w,c
  5261  0020C6  6EDA               	movwf	fsr2h,c
  5262  0020C8  50DF               	movf	indf2,w,c
  5263  0020CA  6EC2               	movwf	4034,c	;volatile
  5264                           
  5265                           ;tester.c: 86: ADCON0bits.ADON = 1;
  5266  0020CC  80C2               	bsf	4034,0,c	;volatile
  5267                           
  5268                           ;tester.c: 87: ADCON0bits.GO = 1;
  5269  0020CE  82C2               	bsf	4034,1,c	;volatile
  5270  0020D0                     l168:
  5271  0020D0  B2C2               	btfsc	4034,1,c	;volatile
  5272  0020D2  D7FE               	goto	l168
  5273                           
  5274                           ;tester.c: 89: lettura [i] = ADRESH;
  5275  0020D4  50C4               	movf	4036,w,c	;volatile
  5276  0020D6  6E41               	movwf	??_read_adc& (0+255),c
  5277  0020D8  6A42               	clrf	(??_read_adc+1)& (0+255),c
  5278  0020DA  5043               	movf	read_adc@i,w,c
  5279  0020DC  0D02               	mullw	2
  5280  0020DE  0E7F               	movlw	low _lettura
  5281  0020E0  24F3               	addwf	prodl,w,c
  5282  0020E2  6ED9               	movwf	fsr2l,c
  5283  0020E4  0E00               	movlw	high _lettura
  5284  0020E6  20F4               	addwfc	prodh,w,c
  5285  0020E8  6EDA               	movwf	fsr2h,c
  5286  0020EA  C041  FFDE         	movff	??_read_adc,postinc2
  5287  0020EE  C042  FFDD         	movff	??_read_adc+1,postdec2
  5288                           
  5289                           ;tester.c: 90: lettura [i] = ((lettura[i] << 8) | ADRESL);
  5290  0020F2  5043               	movf	read_adc@i,w,c
  5291  0020F4  0D02               	mullw	2
  5292  0020F6  0E7F               	movlw	low _lettura
  5293  0020F8  24F3               	addwf	prodl,w,c
  5294  0020FA  6ED9               	movwf	fsr2l,c
  5295  0020FC  0E00               	movlw	high _lettura
  5296  0020FE  20F4               	addwfc	prodh,w,c
  5297  002100  6EDA               	movwf	fsr2h,c
  5298  002102  CFDE F041          	movff	postinc2,??_read_adc
  5299  002106  CFDD F042          	movff	postdec2,??_read_adc+1
  5300  00210A  C041  F042         	movff	??_read_adc,??_read_adc+1
  5301  00210E  6A41               	clrf	??_read_adc,c
  5302  002110  50C3               	movf	4035,w,c	;volatile
  5303  002112  1241               	iorwf	??_read_adc,f,c
  5304  002114  0E00               	movlw	0
  5305  002116  1242               	iorwf	??_read_adc+1,f,c
  5306  002118  5043               	movf	read_adc@i,w,c
  5307  00211A  0D02               	mullw	2
  5308  00211C  0E7F               	movlw	low _lettura
  5309  00211E  24F3               	addwf	prodl,w,c
  5310  002120  6ED9               	movwf	fsr2l,c
  5311  002122  0E00               	movlw	high _lettura
  5312  002124  20F4               	addwfc	prodh,w,c
  5313  002126  6EDA               	movwf	fsr2h,c
  5314  002128  C041  FFDE         	movff	??_read_adc,postinc2
  5315  00212C  C042  FFDD         	movff	??_read_adc+1,postdec2
  5316                           
  5317                           ;tester.c: 91: delay_ms(5);
  5318  002130  0E00               	movlw	0
  5319  002132  6E08               	movwf	delay_ms@value_ms+1,c
  5320  002134  0E05               	movlw	5
  5321  002136  6E07               	movwf	delay_ms@value_ms,c
  5322  002138  ECA2  F017         	call	_delay_ms	;wreg free
  5323  00213C  2A43               	incf	read_adc@i,f,c
  5324  00213E  D7B8               	goto	l3364
  5325  002140                     l3382:
  5326                           
  5327                           ;tester.c: 92: }
  5328                           ;tester.c: 93: current = (lettura[0] - lettura[1]);
  5329  002140  EE20  F081         	lfsr	2,_lettura+2
  5330  002144  CFDE F041          	movff	postinc2,??_read_adc
  5331  002148  CFDD F042          	movff	postdec2,??_read_adc+1
  5332  00214C  1E41               	comf	??_read_adc,f,c
  5333  00214E  1E42               	comf	??_read_adc+1,f,c
  5334  002150  4A41               	infsnz	??_read_adc,f,c
  5335  002152  2A42               	incf	??_read_adc+1,f,c
  5336  002154  0100               	movlb	0	; () banked
  5337  002156  517F               	movf	_lettura& (0+255),w,b
  5338  002158  2641               	addwf	??_read_adc,f,c
  5339  00215A  0100               	movlb	0	; () banked
  5340  00215C  5180               	movf	(_lettura+1)& (0+255),w,b
  5341  00215E  2242               	addwfc	??_read_adc+1,f,c
  5342  002160  C041  F001         	movff	??_read_adc,___xxtofl@val
  5343  002164  C042  F002         	movff	??_read_adc+1,___xxtofl@val+1
  5344  002168  0E00               	movlw	0
  5345  00216A  BE02               	btfsc	___xxtofl@val+1,7,c
  5346  00216C  0EFF               	movlw	-1
  5347  00216E  6E03               	movwf	___xxtofl@val+2,c
  5348  002170  6E04               	movwf	___xxtofl@val+3,c
  5349  002172  0E01               	movlw	1
  5350  002174  EC22  F012         	call	___xxtofl
  5351  002178  C001  F05B         	movff	?___xxtofl,_current
  5352  00217C  C002  F05C         	movff	?___xxtofl+1,_current+1
  5353  002180  C003  F05D         	movff	?___xxtofl+2,_current+2
  5354  002184  C004  F05E         	movff	?___xxtofl+3,_current+3
  5355                           
  5356                           ;tester.c: 94: current = (current * 5);
  5357  002188  C05B  F00F         	movff	_current,___flmul@b
  5358  00218C  C05C  F010         	movff	_current+1,___flmul@b+1
  5359  002190  C05D  F011         	movff	_current+2,___flmul@b+2
  5360  002194  C05E  F012         	movff	_current+3,___flmul@b+3
  5361  002198  0E00               	movlw	0
  5362  00219A  6E13               	movwf	___flmul@a,c
  5363  00219C  0E00               	movlw	0
  5364  00219E  6E14               	movwf	___flmul@a+1,c
  5365  0021A0  0EA0               	movlw	160
  5366  0021A2  6E15               	movwf	___flmul@a+2,c
  5367  0021A4  0E40               	movlw	64
  5368  0021A6  6E16               	movwf	___flmul@a+3,c
  5369  0021A8  EC79  F00A         	call	___flmul	;wreg free
  5370  0021AC  C00F  F05B         	movff	?___flmul,_current
  5371  0021B0  C010  F05C         	movff	?___flmul+1,_current+1
  5372  0021B4  C011  F05D         	movff	?___flmul+2,_current+2
  5373  0021B8  C012  F05E         	movff	?___flmul+3,_current+3
  5374                           
  5375                           ;tester.c: 95: current = current / 1024;
  5376  0021BC  C05B  F028         	movff	_current,___fldiv@b
  5377  0021C0  C05C  F029         	movff	_current+1,___fldiv@b+1
  5378  0021C4  C05D  F02A         	movff	_current+2,___fldiv@b+2
  5379  0021C8  C05E  F02B         	movff	_current+3,___fldiv@b+3
  5380  0021CC  0E00               	movlw	0
  5381  0021CE  6E2C               	movwf	___fldiv@a,c
  5382  0021D0  0E00               	movlw	0
  5383  0021D2  6E2D               	movwf	___fldiv@a+1,c
  5384  0021D4  0E80               	movlw	128
  5385  0021D6  6E2E               	movwf	___fldiv@a+2,c
  5386  0021D8  0E44               	movlw	68
  5387  0021DA  6E2F               	movwf	___fldiv@a+3,c
  5388  0021DC  ECBF  F00D         	call	___fldiv	;wreg free
  5389  0021E0  C028  F05B         	movff	?___fldiv,_current
  5390  0021E4  C029  F05C         	movff	?___fldiv+1,_current+1
  5391  0021E8  C02A  F05D         	movff	?___fldiv+2,_current+2
  5392  0021EC  C02B  F05E         	movff	?___fldiv+3,_current+3
  5393                           
  5394                           ;tester.c: 96: current = current / 0.200;
  5395  0021F0  C05B  F028         	movff	_current,___fldiv@b
  5396  0021F4  C05C  F029         	movff	_current+1,___fldiv@b+1
  5397  0021F8  C05D  F02A         	movff	_current+2,___fldiv@b+2
  5398  0021FC  C05E  F02B         	movff	_current+3,___fldiv@b+3
  5399  002200  0ECD               	movlw	205
  5400  002202  6E2C               	movwf	___fldiv@a,c
  5401  002204  0ECC               	movlw	204
  5402  002206  6E2D               	movwf	___fldiv@a+1,c
  5403  002208  0E4C               	movlw	76
  5404  00220A  6E2E               	movwf	___fldiv@a+2,c
  5405  00220C  0E3E               	movlw	62
  5406  00220E  6E2F               	movwf	___fldiv@a+3,c
  5407  002210  ECBF  F00D         	call	___fldiv	;wreg free
  5408  002214  C028  F05B         	movff	?___fldiv,_current
  5409  002218  C029  F05C         	movff	?___fldiv+1,_current+1
  5410  00221C  C02A  F05D         	movff	?___fldiv+2,_current+2
  5411  002220  C02B  F05E         	movff	?___fldiv+3,_current+3
  5412                           
  5413                           ;tester.c: 97: voltage = (lettura[2]);
  5414  002224  EE20  F083         	lfsr	2,_lettura+4
  5415  002228  CFDE F001          	movff	postinc2,___xxtofl@val
  5416  00222C  CFDD F002          	movff	postdec2,___xxtofl@val+1
  5417  002230  0E00               	movlw	0
  5418  002232  BE02               	btfsc	___xxtofl@val+1,7,c
  5419  002234  0EFF               	movlw	-1
  5420  002236  6E03               	movwf	___xxtofl@val+2,c
  5421  002238  6E04               	movwf	___xxtofl@val+3,c
  5422  00223A  0E01               	movlw	1
  5423  00223C  EC22  F012         	call	___xxtofl
  5424  002240  C001  F085         	movff	?___xxtofl,_voltage
  5425  002244  C002  F086         	movff	?___xxtofl+1,_voltage+1
  5426  002248  C003  F087         	movff	?___xxtofl+2,_voltage+2
  5427  00224C  C004  F088         	movff	?___xxtofl+3,_voltage+3
  5428                           
  5429                           ;tester.c: 98: voltage = (voltage * 5) / 1024;
  5430  002250  0E00               	movlw	0
  5431  002252  6E13               	movwf	___flmul@a,c
  5432  002254  0E00               	movlw	0
  5433  002256  6E14               	movwf	___flmul@a+1,c
  5434  002258  0EA0               	movlw	160
  5435  00225A  6E15               	movwf	___flmul@a+2,c
  5436  00225C  0E40               	movlw	64
  5437  00225E  6E16               	movwf	___flmul@a+3,c
  5438  002260  C085  F00F         	movff	_voltage,___flmul@b
  5439  002264  C086  F010         	movff	_voltage+1,___flmul@b+1
  5440  002268  C087  F011         	movff	_voltage+2,___flmul@b+2
  5441  00226C  C088  F012         	movff	_voltage+3,___flmul@b+3
  5442  002270  EC79  F00A         	call	___flmul	;wreg free
  5443  002274  C00F  F028         	movff	?___flmul,___fldiv@b
  5444  002278  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  5445  00227C  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  5446  002280  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  5447  002284  0E00               	movlw	0
  5448  002286  6E2C               	movwf	___fldiv@a,c
  5449  002288  0E00               	movlw	0
  5450  00228A  6E2D               	movwf	___fldiv@a+1,c
  5451  00228C  0E80               	movlw	128
  5452  00228E  6E2E               	movwf	___fldiv@a+2,c
  5453  002290  0E44               	movlw	68
  5454  002292  6E2F               	movwf	___fldiv@a+3,c
  5455  002294  ECBF  F00D         	call	___fldiv	;wreg free
  5456  002298  C028  F085         	movff	?___fldiv,_voltage
  5457  00229C  C029  F086         	movff	?___fldiv+1,_voltage+1
  5458  0022A0  C02A  F087         	movff	?___fldiv+2,_voltage+2
  5459  0022A4  C02B  F088         	movff	?___fldiv+3,_voltage+3
  5460                           
  5461                           ;tester.c: 99: voltage = voltage / rapporto;
  5462  0022A8  C085  F028         	movff	_voltage,___fldiv@b
  5463  0022AC  C086  F029         	movff	_voltage+1,___fldiv@b+1
  5464  0022B0  C087  F02A         	movff	_voltage+2,___fldiv@b+2
  5465  0022B4  C088  F02B         	movff	_voltage+3,___fldiv@b+3
  5466  0022B8  C093  F02C         	movff	_rapporto,___fldiv@a
  5467  0022BC  C094  F02D         	movff	_rapporto+1,___fldiv@a+1
  5468  0022C0  C095  F02E         	movff	_rapporto+2,___fldiv@a+2
  5469  0022C4  C096  F02F         	movff	_rapporto+3,___fldiv@a+3
  5470  0022C8  ECBF  F00D         	call	___fldiv	;wreg free
  5471  0022CC  C028  F085         	movff	?___fldiv,_voltage
  5472  0022D0  C029  F086         	movff	?___fldiv+1,_voltage+1
  5473  0022D4  C02A  F087         	movff	?___fldiv+2,_voltage+2
  5474  0022D8  C02B  F088         	movff	?___fldiv+3,_voltage+3
  5475  0022DC  0012               	return		;funcret
  5476  0022DE                     __end_of_read_adc:
  5477                           	opt stack 0
  5478                           tblptru	equ	0xFF8
  5479                           tblptrh	equ	0xFF7
  5480                           tblptrl	equ	0xFF6
  5481                           tablat	equ	0xFF5
  5482                           prodh	equ	0xFF4
  5483                           prodl	equ	0xFF3
  5484                           postinc0	equ	0xFEE
  5485                           wreg	equ	0xFE8
  5486                           indf2	equ	0xFDF
  5487                           postinc2	equ	0xFDE
  5488                           postdec2	equ	0xFDD
  5489                           fsr2h	equ	0xFDA
  5490                           fsr2l	equ	0xFD9
  5491                           status	equ	0xFD8
  5492                           
  5493 ;; *************** function ___xxtofl *****************
  5494 ;; Defined at:
  5495 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\xxtofl.c"
  5496 ;; Parameters:    Size  Location     Type
  5497 ;;  sign            1    wreg     unsigned char 
  5498 ;;  val             4    0[COMRAM] long 
  5499 ;; Auto vars:     Size  Location     Type
  5500 ;;  sign            1    8[COMRAM] unsigned char 
  5501 ;;  arg             4   10[COMRAM] unsigned long 
  5502 ;;  exp             1    9[COMRAM] unsigned char 
  5503 ;; Return value:  Size  Location     Type
  5504 ;;                  4    0[COMRAM] unsigned char 
  5505 ;; Registers used:
  5506 ;;		wreg, status,2, status,0
  5507 ;; Tracked objects:
  5508 ;;		On entry : 0/0
  5509 ;;		On exit  : 0/0
  5510 ;;		Unchanged: 0/0
  5511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5512 ;;      Params:         4       0       0       0       0       0       0       0       0
  5513 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5514 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5515 ;;      Totals:        14       0       0       0       0       0       0       0       0
  5516 ;;Total ram usage:       14 bytes
  5517 ;; Hardware stack levels used:    1
  5518 ;; This function calls:
  5519 ;;		Nothing
  5520 ;; This function is called by:
  5521 ;;		_read_adc
  5522 ;;		_sprintf
  5523 ;; This function uses a non-reentrant model
  5524 ;;
  5525                           
  5526                           	psect	text18
  5527  002444                     __ptext18:
  5528                           	opt stack 0
  5529  002444                     ___xxtofl:
  5530                           	opt stack 28
  5531                           
  5532                           ;incstack = 0
  5533                           ;___xxtofl@sign stored from wreg
  5534  002444  6E09               	movwf	___xxtofl@sign,c
  5535  002446  5009               	movf	___xxtofl@sign,w,c
  5536  002448  A4D8               	btfss	status,2,c
  5537  00244A  AE04               	btfss	___xxtofl@val+3,7,c
  5538  00244C  D01A               	goto	l872
  5539  00244E  C001  F005         	movff	___xxtofl@val,??___xxtofl
  5540  002452  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  5541  002456  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  5542  00245A  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  5543  00245E  1E05               	comf	??___xxtofl,f,c
  5544  002460  1E06               	comf	??___xxtofl+1,f,c
  5545  002462  1E07               	comf	??___xxtofl+2,f,c
  5546  002464  1E08               	comf	??___xxtofl+3,f,c
  5547  002466  2A05               	incf	??___xxtofl,f,c
  5548  002468  0E00               	movlw	0
  5549  00246A  2206               	addwfc	??___xxtofl+1,f,c
  5550  00246C  2207               	addwfc	??___xxtofl+2,f,c
  5551  00246E  2208               	addwfc	??___xxtofl+3,f,c
  5552  002470  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  5553  002474  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  5554  002478  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  5555  00247C  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  5556  002480  D008               	goto	l3256
  5557  002482                     l872:
  5558  002482  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  5559  002486  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  5560  00248A  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  5561  00248E  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  5562  002492                     l3256:
  5563  002492  5001               	movf	___xxtofl@val,w,c
  5564  002494  1002               	iorwf	___xxtofl@val+1,w,c
  5565  002496  1003               	iorwf	___xxtofl@val+2,w,c
  5566  002498  1004               	iorwf	___xxtofl@val+3,w,c
  5567  00249A  A4D8               	btfss	status,2,c
  5568  00249C  D009               	goto	l3262
  5569  00249E  0E00               	movlw	0
  5570  0024A0  6E01               	movwf	?___xxtofl,c
  5571  0024A2  0E00               	movlw	0
  5572  0024A4  6E02               	movwf	?___xxtofl+1,c
  5573  0024A6  0E00               	movlw	0
  5574  0024A8  6E03               	movwf	?___xxtofl+2,c
  5575  0024AA  0E00               	movlw	0
  5576  0024AC  6E04               	movwf	?___xxtofl+3,c
  5577  0024AE  0012               	return	
  5578  0024B0                     l3262:
  5579  0024B0  0E96               	movlw	150
  5580  0024B2  6E0A               	movwf	___xxtofl@exp,c
  5581  0024B4  D006               	goto	l3266
  5582  0024B6                     l3264:
  5583  0024B6  2A0A               	incf	___xxtofl@exp,f,c
  5584  0024B8  90D8               	bcf	status,0,c
  5585  0024BA  320E               	rrcf	___xxtofl@arg+3,f,c
  5586  0024BC  320D               	rrcf	___xxtofl@arg+2,f,c
  5587  0024BE  320C               	rrcf	___xxtofl@arg+1,f,c
  5588  0024C0  320B               	rrcf	___xxtofl@arg,f,c
  5589  0024C2                     l3266:
  5590  0024C2  0E00               	movlw	0
  5591  0024C4  140B               	andwf	___xxtofl@arg,w,c
  5592  0024C6  6E05               	movwf	??___xxtofl& (0+255),c
  5593  0024C8  0E00               	movlw	0
  5594  0024CA  140C               	andwf	___xxtofl@arg+1,w,c
  5595  0024CC  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  5596  0024CE  0E00               	movlw	0
  5597  0024D0  140D               	andwf	___xxtofl@arg+2,w,c
  5598  0024D2  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  5599  0024D4  0EFE               	movlw	254
  5600  0024D6  140E               	andwf	___xxtofl@arg+3,w,c
  5601  0024D8  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  5602  0024DA  5005               	movf	??___xxtofl,w,c
  5603  0024DC  1006               	iorwf	??___xxtofl+1,w,c
  5604  0024DE  1007               	iorwf	??___xxtofl+2,w,c
  5605  0024E0  1008               	iorwf	??___xxtofl+3,w,c
  5606  0024E2  B4D8               	btfsc	status,2,c
  5607  0024E4  D00D               	goto	l879
  5608  0024E6  D7E7               	goto	l3264
  5609  0024E8                     l3268:
  5610  0024E8  2A0A               	incf	___xxtofl@exp,f,c
  5611  0024EA  0E01               	movlw	1
  5612  0024EC  260B               	addwf	___xxtofl@arg,f,c
  5613  0024EE  0E00               	movlw	0
  5614  0024F0  220C               	addwfc	___xxtofl@arg+1,f,c
  5615  0024F2  220D               	addwfc	___xxtofl@arg+2,f,c
  5616  0024F4  220E               	addwfc	___xxtofl@arg+3,f,c
  5617  0024F6  90D8               	bcf	status,0,c
  5618  0024F8  320E               	rrcf	___xxtofl@arg+3,f,c
  5619  0024FA  320D               	rrcf	___xxtofl@arg+2,f,c
  5620  0024FC  320C               	rrcf	___xxtofl@arg+1,f,c
  5621  0024FE  320B               	rrcf	___xxtofl@arg,f,c
  5622  002500                     l879:
  5623  002500  0E00               	movlw	0
  5624  002502  140B               	andwf	___xxtofl@arg,w,c
  5625  002504  6E05               	movwf	??___xxtofl& (0+255),c
  5626  002506  0E00               	movlw	0
  5627  002508  140C               	andwf	___xxtofl@arg+1,w,c
  5628  00250A  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  5629  00250C  0E00               	movlw	0
  5630  00250E  140D               	andwf	___xxtofl@arg+2,w,c
  5631  002510  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  5632  002512  0EFF               	movlw	255
  5633  002514  140E               	andwf	___xxtofl@arg+3,w,c
  5634  002516  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  5635  002518  5005               	movf	??___xxtofl,w,c
  5636  00251A  1006               	iorwf	??___xxtofl+1,w,c
  5637  00251C  1007               	iorwf	??___xxtofl+2,w,c
  5638  00251E  1008               	iorwf	??___xxtofl+3,w,c
  5639  002520  B4D8               	btfsc	status,2,c
  5640  002522  D007               	goto	l3276
  5641  002524  D7E1               	goto	l3268
  5642  002526                     l3274:
  5643  002526  060A               	decf	___xxtofl@exp,f,c
  5644  002528  90D8               	bcf	status,0,c
  5645  00252A  360B               	rlcf	___xxtofl@arg,f,c
  5646  00252C  360C               	rlcf	___xxtofl@arg+1,f,c
  5647  00252E  360D               	rlcf	___xxtofl@arg+2,f,c
  5648  002530  360E               	rlcf	___xxtofl@arg+3,f,c
  5649  002532                     l3276:
  5650  002532  BE0D               	btfsc	___xxtofl@arg+2,7,c
  5651  002534  D003               	goto	l886
  5652  002536  0E02               	movlw	2
  5653  002538  600A               	cpfslt	___xxtofl@exp,c
  5654  00253A  D7F5               	goto	l3274
  5655  00253C                     l886:
  5656  00253C  B00A               	btfsc	___xxtofl@exp,0,c
  5657  00253E  D008               	goto	l887
  5658  002540  0EFF               	movlw	255
  5659  002542  160B               	andwf	___xxtofl@arg,f,c
  5660  002544  0EFF               	movlw	255
  5661  002546  160C               	andwf	___xxtofl@arg+1,f,c
  5662  002548  0E7F               	movlw	127
  5663  00254A  160D               	andwf	___xxtofl@arg+2,f,c
  5664  00254C  0EFF               	movlw	255
  5665  00254E  160E               	andwf	___xxtofl@arg+3,f,c
  5666  002550                     l887:
  5667  002550  90D8               	bcf	status,0,c
  5668  002552  320A               	rrcf	___xxtofl@exp,f,c
  5669  002554  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  5670  002558  6A06               	clrf	(??___xxtofl+1)& (0+255),c
  5671  00255A  6A07               	clrf	(??___xxtofl+2)& (0+255),c
  5672  00255C  6A08               	clrf	(??___xxtofl+3)& (0+255),c
  5673  00255E  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  5674  002562  6A07               	clrf	??___xxtofl+2,c
  5675  002564  6A06               	clrf	??___xxtofl+1,c
  5676  002566  6A05               	clrf	??___xxtofl,c
  5677  002568  5005               	movf	??___xxtofl,w,c
  5678  00256A  120B               	iorwf	___xxtofl@arg,f,c
  5679  00256C  5006               	movf	??___xxtofl+1,w,c
  5680  00256E  120C               	iorwf	___xxtofl@arg+1,f,c
  5681  002570  5007               	movf	??___xxtofl+2,w,c
  5682  002572  120D               	iorwf	___xxtofl@arg+2,f,c
  5683  002574  5008               	movf	??___xxtofl+3,w,c
  5684  002576  120E               	iorwf	___xxtofl@arg+3,f,c
  5685  002578  5009               	movf	___xxtofl@sign,w,c
  5686  00257A  A4D8               	btfss	status,2,c
  5687  00257C  AE04               	btfss	___xxtofl@val+3,7,c
  5688  00257E  D001               	goto	l3288
  5689  002580  8E0E               	bsf	___xxtofl@arg+3,7,c
  5690  002582                     l3288:
  5691  002582  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  5692  002586  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  5693  00258A  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  5694  00258E  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  5695  002592  0012               	return	
  5696  002594                     __end_of___xxtofl:
  5697                           	opt stack 0
  5698                           tblptru	equ	0xFF8
  5699                           tblptrh	equ	0xFF7
  5700                           tblptrl	equ	0xFF6
  5701                           tablat	equ	0xFF5
  5702                           prodh	equ	0xFF4
  5703                           prodl	equ	0xFF3
  5704                           postinc0	equ	0xFEE
  5705                           wreg	equ	0xFE8
  5706                           indf2	equ	0xFDF
  5707                           postinc2	equ	0xFDE
  5708                           postdec2	equ	0xFDD
  5709                           fsr2h	equ	0xFDA
  5710                           fsr2l	equ	0xFD9
  5711                           status	equ	0xFD8
  5712                           
  5713 ;; *************** function ___flmul *****************
  5714 ;; Defined at:
  5715 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcmul.c"
  5716 ;; Parameters:    Size  Location     Type
  5717 ;;  b               4   14[COMRAM] unsigned char 
  5718 ;;  a               4   18[COMRAM] unsigned char 
  5719 ;; Auto vars:     Size  Location     Type
  5720 ;;  prod            4   33[COMRAM] struct .
  5721 ;;  grs             4   27[COMRAM] unsigned long 
  5722 ;;  temp            2   37[COMRAM] struct .
  5723 ;;  bexp            1   32[COMRAM] unsigned char 
  5724 ;;  aexp            1   31[COMRAM] unsigned char 
  5725 ;;  sign            1   26[COMRAM] unsigned char 
  5726 ;; Return value:  Size  Location     Type
  5727 ;;                  4   14[COMRAM] unsigned char 
  5728 ;; Registers used:
  5729 ;;		wreg, status,2, status,0, prodl, prodh
  5730 ;; Tracked objects:
  5731 ;;		On entry : 0/0
  5732 ;;		On exit  : 0/0
  5733 ;;		Unchanged: 0/0
  5734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5735 ;;      Params:         8       0       0       0       0       0       0       0       0
  5736 ;;      Locals:        13       0       0       0       0       0       0       0       0
  5737 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5738 ;;      Totals:        25       0       0       0       0       0       0       0       0
  5739 ;;Total ram usage:       25 bytes
  5740 ;; Hardware stack levels used:    1
  5741 ;; This function calls:
  5742 ;;		Nothing
  5743 ;; This function is called by:
  5744 ;;		_read_adc
  5745 ;;		_fround
  5746 ;;		_scale
  5747 ;;		_sprintf
  5748 ;; This function uses a non-reentrant model
  5749 ;;
  5750                           
  5751                           	psect	text19
  5752  0014F2                     __ptext19:
  5753                           	opt stack 0
  5754  0014F2                     ___flmul:
  5755                           	opt stack 27
  5756                           
  5757                           ;incstack = 0
  5758  0014F2  5012               	movf	___flmul@b+3,w,c
  5759  0014F4  0B80               	andlw	128
  5760  0014F6  6E1B               	movwf	___flmul@sign,c
  5761  0014F8  5012               	movf	___flmul@b+3,w,c
  5762  0014FA  2412               	addwf	___flmul@b+3,w,c
  5763  0014FC  6E21               	movwf	___flmul@bexp,c
  5764  0014FE  BE11               	btfsc	___flmul@b+2,7,c
  5765  001500  8021               	bsf	___flmul@bexp,0,c
  5766  001502  5021               	movf	___flmul@bexp,w,c
  5767  001504  B4D8               	btfsc	status,2,c
  5768  001506  D00D               	goto	l2588
  5769  001508  2821               	incf	___flmul@bexp,w,c
  5770  00150A  A4D8               	btfss	status,2,c
  5771  00150C  D008               	goto	l2586
  5772  00150E  0E00               	movlw	0
  5773  001510  6E0F               	movwf	___flmul@b,c
  5774  001512  0E00               	movlw	0
  5775  001514  6E10               	movwf	___flmul@b+1,c
  5776  001516  0E00               	movlw	0
  5777  001518  6E11               	movwf	___flmul@b+2,c
  5778  00151A  0E00               	movlw	0
  5779  00151C  6E12               	movwf	___flmul@b+3,c
  5780  00151E                     l2586:
  5781  00151E  8E11               	bsf	___flmul@b+2,7,c
  5782  001520  D008               	goto	l2590
  5783  001522                     l2588:
  5784  001522  0E00               	movlw	0
  5785  001524  6E0F               	movwf	___flmul@b,c
  5786  001526  0E00               	movlw	0
  5787  001528  6E10               	movwf	___flmul@b+1,c
  5788  00152A  0E00               	movlw	0
  5789  00152C  6E11               	movwf	___flmul@b+2,c
  5790  00152E  0E00               	movlw	0
  5791  001530  6E12               	movwf	___flmul@b+3,c
  5792  001532                     l2590:
  5793  001532  5016               	movf	___flmul@a+3,w,c
  5794  001534  0B80               	andlw	128
  5795  001536  1A1B               	xorwf	___flmul@sign,f,c
  5796  001538  5016               	movf	___flmul@a+3,w,c
  5797  00153A  2416               	addwf	___flmul@a+3,w,c
  5798  00153C  6E20               	movwf	___flmul@aexp,c
  5799  00153E  BE15               	btfsc	___flmul@a+2,7,c
  5800  001540  8020               	bsf	___flmul@aexp,0,c
  5801  001542  5020               	movf	___flmul@aexp,w,c
  5802  001544  B4D8               	btfsc	status,2,c
  5803  001546  D00D               	goto	l2606
  5804  001548  2820               	incf	___flmul@aexp,w,c
  5805  00154A  A4D8               	btfss	status,2,c
  5806  00154C  D008               	goto	l2604
  5807  00154E  0E00               	movlw	0
  5808  001550  6E13               	movwf	___flmul@a,c
  5809  001552  0E00               	movlw	0
  5810  001554  6E14               	movwf	___flmul@a+1,c
  5811  001556  0E00               	movlw	0
  5812  001558  6E15               	movwf	___flmul@a+2,c
  5813  00155A  0E00               	movlw	0
  5814  00155C  6E16               	movwf	___flmul@a+3,c
  5815  00155E                     l2604:
  5816  00155E  8E15               	bsf	___flmul@a+2,7,c
  5817  001560  D008               	goto	l850
  5818  001562                     l2606:
  5819  001562  0E00               	movlw	0
  5820  001564  6E13               	movwf	___flmul@a,c
  5821  001566  0E00               	movlw	0
  5822  001568  6E14               	movwf	___flmul@a+1,c
  5823  00156A  0E00               	movlw	0
  5824  00156C  6E15               	movwf	___flmul@a+2,c
  5825  00156E  0E00               	movlw	0
  5826  001570  6E16               	movwf	___flmul@a+3,c
  5827  001572                     l850:
  5828  001572  5020               	movf	___flmul@aexp,w,c
  5829  001574  B4D8               	btfsc	status,2,c
  5830  001576  D003               	goto	l2610
  5831  001578  5021               	movf	___flmul@bexp,w,c
  5832  00157A  A4D8               	btfss	status,2,c
  5833  00157C  D009               	goto	l2614
  5834  00157E                     l2610:
  5835  00157E  0E00               	movlw	0
  5836  001580  6E0F               	movwf	?___flmul,c
  5837  001582  0E00               	movlw	0
  5838  001584  6E10               	movwf	?___flmul+1,c
  5839  001586  0E00               	movlw	0
  5840  001588  6E11               	movwf	?___flmul+2,c
  5841  00158A  0E00               	movlw	0
  5842  00158C  6E12               	movwf	?___flmul+3,c
  5843  00158E  0012               	return	
  5844  001590                     l2614:
  5845  001590  5015               	movf	___flmul@a+2,w,c
  5846  001592  020F               	mulwf	___flmul@b,c
  5847  001594  CFF3 F026          	movff	prodl,___flmul@temp
  5848  001598  CFF4 F027          	movff	prodh,___flmul@temp+1
  5849  00159C  5026               	movf	___flmul@temp,w,c
  5850  00159E  6E1C               	movwf	___flmul@grs,c
  5851  0015A0  6A1D               	clrf	___flmul@grs+1,c
  5852  0015A2  6A1E               	clrf	___flmul@grs+2,c
  5853  0015A4  6A1F               	clrf	___flmul@grs+3,c
  5854  0015A6  5027               	movf	___flmul@temp+1,w,c
  5855  0015A8  6E22               	movwf	___flmul@prod,c
  5856  0015AA  6A23               	clrf	___flmul@prod+1,c
  5857  0015AC  6A24               	clrf	___flmul@prod+2,c
  5858  0015AE  6A25               	clrf	___flmul@prod+3,c
  5859  0015B0  5014               	movf	___flmul@a+1,w,c
  5860  0015B2  0210               	mulwf	___flmul@b+1,c
  5861  0015B4  CFF3 F026          	movff	prodl,___flmul@temp
  5862  0015B8  CFF4 F027          	movff	prodh,___flmul@temp+1
  5863  0015BC  5026               	movf	___flmul@temp,w,c
  5864  0015BE  261C               	addwf	___flmul@grs,f,c
  5865  0015C0  0E00               	movlw	0
  5866  0015C2  221D               	addwfc	___flmul@grs+1,f,c
  5867  0015C4  221E               	addwfc	___flmul@grs+2,f,c
  5868  0015C6  221F               	addwfc	___flmul@grs+3,f,c
  5869  0015C8  5027               	movf	___flmul@temp+1,w,c
  5870  0015CA  2622               	addwf	___flmul@prod,f,c
  5871  0015CC  0E00               	movlw	0
  5872  0015CE  2223               	addwfc	___flmul@prod+1,f,c
  5873  0015D0  2224               	addwfc	___flmul@prod+2,f,c
  5874  0015D2  2225               	addwfc	___flmul@prod+3,f,c
  5875  0015D4  5013               	movf	___flmul@a,w,c
  5876  0015D6  0211               	mulwf	___flmul@b+2,c
  5877  0015D8  CFF3 F026          	movff	prodl,___flmul@temp
  5878  0015DC  CFF4 F027          	movff	prodh,___flmul@temp+1
  5879  0015E0  5026               	movf	___flmul@temp,w,c
  5880  0015E2  261C               	addwf	___flmul@grs,f,c
  5881  0015E4  0E00               	movlw	0
  5882  0015E6  221D               	addwfc	___flmul@grs+1,f,c
  5883  0015E8  221E               	addwfc	___flmul@grs+2,f,c
  5884  0015EA  221F               	addwfc	___flmul@grs+3,f,c
  5885  0015EC  5027               	movf	___flmul@temp+1,w,c
  5886  0015EE  2622               	addwf	___flmul@prod,f,c
  5887  0015F0  0E00               	movlw	0
  5888  0015F2  2223               	addwfc	___flmul@prod+1,f,c
  5889  0015F4  2224               	addwfc	___flmul@prod+2,f,c
  5890  0015F6  2225               	addwfc	___flmul@prod+3,f,c
  5891  0015F8  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5892  0015FC  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5893  001600  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5894  001604  6A1C               	clrf	___flmul@grs,c
  5895  001606  5013               	movf	___flmul@a,w,c
  5896  001608  0210               	mulwf	___flmul@b+1,c
  5897  00160A  CFF3 F026          	movff	prodl,___flmul@temp
  5898  00160E  CFF4 F027          	movff	prodh,___flmul@temp+1
  5899  001612  5026               	movf	___flmul@temp,w,c
  5900  001614  261C               	addwf	___flmul@grs,f,c
  5901  001616  5027               	movf	___flmul@temp+1,w,c
  5902  001618  221D               	addwfc	___flmul@grs+1,f,c
  5903  00161A  0E00               	movlw	0
  5904  00161C  221E               	addwfc	___flmul@grs+2,f,c
  5905  00161E  0E00               	movlw	0
  5906  001620  221F               	addwfc	___flmul@grs+3,f,c
  5907  001622  5014               	movf	___flmul@a+1,w,c
  5908  001624  020F               	mulwf	___flmul@b,c
  5909  001626  CFF3 F026          	movff	prodl,___flmul@temp
  5910  00162A  CFF4 F027          	movff	prodh,___flmul@temp+1
  5911  00162E  5026               	movf	___flmul@temp,w,c
  5912  001630  261C               	addwf	___flmul@grs,f,c
  5913  001632  5027               	movf	___flmul@temp+1,w,c
  5914  001634  221D               	addwfc	___flmul@grs+1,f,c
  5915  001636  0E00               	movlw	0
  5916  001638  221E               	addwfc	___flmul@grs+2,f,c
  5917  00163A  0E00               	movlw	0
  5918  00163C  221F               	addwfc	___flmul@grs+3,f,c
  5919  00163E  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5920  001642  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5921  001646  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5922  00164A  6A1C               	clrf	___flmul@grs,c
  5923  00164C  5013               	movf	___flmul@a,w,c
  5924  00164E  020F               	mulwf	___flmul@b,c
  5925  001650  CFF3 F026          	movff	prodl,___flmul@temp
  5926  001654  CFF4 F027          	movff	prodh,___flmul@temp+1
  5927  001658  5026               	movf	___flmul@temp,w,c
  5928  00165A  261C               	addwf	___flmul@grs,f,c
  5929  00165C  5027               	movf	___flmul@temp+1,w,c
  5930  00165E  221D               	addwfc	___flmul@grs+1,f,c
  5931  001660  0E00               	movlw	0
  5932  001662  221E               	addwfc	___flmul@grs+2,f,c
  5933  001664  0E00               	movlw	0
  5934  001666  221F               	addwfc	___flmul@grs+3,f,c
  5935  001668  5015               	movf	___flmul@a+2,w,c
  5936  00166A  0210               	mulwf	___flmul@b+1,c
  5937  00166C  CFF3 F026          	movff	prodl,___flmul@temp
  5938  001670  CFF4 F027          	movff	prodh,___flmul@temp+1
  5939  001674  5026               	movf	___flmul@temp,w,c
  5940  001676  2622               	addwf	___flmul@prod,f,c
  5941  001678  5027               	movf	___flmul@temp+1,w,c
  5942  00167A  2223               	addwfc	___flmul@prod+1,f,c
  5943  00167C  0E00               	movlw	0
  5944  00167E  2224               	addwfc	___flmul@prod+2,f,c
  5945  001680  0E00               	movlw	0
  5946  001682  2225               	addwfc	___flmul@prod+3,f,c
  5947  001684  5014               	movf	___flmul@a+1,w,c
  5948  001686  0211               	mulwf	___flmul@b+2,c
  5949  001688  CFF3 F026          	movff	prodl,___flmul@temp
  5950  00168C  CFF4 F027          	movff	prodh,___flmul@temp+1
  5951  001690  5026               	movf	___flmul@temp,w,c
  5952  001692  2622               	addwf	___flmul@prod,f,c
  5953  001694  5027               	movf	___flmul@temp+1,w,c
  5954  001696  2223               	addwfc	___flmul@prod+1,f,c
  5955  001698  0E00               	movlw	0
  5956  00169A  2224               	addwfc	___flmul@prod+2,f,c
  5957  00169C  0E00               	movlw	0
  5958  00169E  2225               	addwfc	___flmul@prod+3,f,c
  5959  0016A0  5015               	movf	___flmul@a+2,w,c
  5960  0016A2  0211               	mulwf	___flmul@b+2,c
  5961  0016A4  CFF3 F026          	movff	prodl,___flmul@temp
  5962  0016A8  CFF4 F027          	movff	prodh,___flmul@temp+1
  5963  0016AC  5026               	movf	___flmul@temp,w,c
  5964  0016AE  6E17               	movwf	??___flmul& (0+255),c
  5965  0016B0  5027               	movf	___flmul@temp+1,w,c
  5966  0016B2  6E18               	movwf	(??___flmul+1)& (0+255),c
  5967  0016B4  6A19               	clrf	(??___flmul+2)& (0+255),c
  5968  0016B6  6A1A               	clrf	(??___flmul+3)& (0+255),c
  5969  0016B8  C019  F01A         	movff	??___flmul+2,??___flmul+3
  5970  0016BC  C018  F019         	movff	??___flmul+1,??___flmul+2
  5971  0016C0  C017  F018         	movff	??___flmul,??___flmul+1
  5972  0016C4  6A17               	clrf	??___flmul,c
  5973  0016C6  5017               	movf	??___flmul,w,c
  5974  0016C8  2622               	addwf	___flmul@prod,f,c
  5975  0016CA  5018               	movf	??___flmul+1,w,c
  5976  0016CC  2223               	addwfc	___flmul@prod+1,f,c
  5977  0016CE  5019               	movf	??___flmul+2,w,c
  5978  0016D0  2224               	addwfc	___flmul@prod+2,f,c
  5979  0016D2  501A               	movf	??___flmul+3,w,c
  5980  0016D4  2225               	addwfc	___flmul@prod+3,f,c
  5981  0016D6  C01C  F017         	movff	___flmul@grs,??___flmul
  5982  0016DA  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  5983  0016DE  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  5984  0016E2  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  5985  0016E6  0E19               	movlw	25
  5986  0016E8  D005               	goto	u2570
  5987  0016EA                     u2575:
  5988  0016EA  90D8               	bcf	status,0,c
  5989  0016EC  321A               	rrcf	??___flmul+3,f,c
  5990  0016EE  3219               	rrcf	??___flmul+2,f,c
  5991  0016F0  3218               	rrcf	??___flmul+1,f,c
  5992  0016F2  3217               	rrcf	??___flmul,f,c
  5993  0016F4                     u2570:
  5994  0016F4  2EE8               	decfsz	wreg,f,c
  5995  0016F6  D7F9               	goto	u2575
  5996  0016F8  5017               	movf	??___flmul,w,c
  5997  0016FA  2622               	addwf	___flmul@prod,f,c
  5998  0016FC  5018               	movf	??___flmul+1,w,c
  5999  0016FE  2223               	addwfc	___flmul@prod+1,f,c
  6000  001700  5019               	movf	??___flmul+2,w,c
  6001  001702  2224               	addwfc	___flmul@prod+2,f,c
  6002  001704  501A               	movf	??___flmul+3,w,c
  6003  001706  2225               	addwfc	___flmul@prod+3,f,c
  6004  001708  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  6005  00170C  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  6006  001710  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  6007  001714  6A1C               	clrf	___flmul@grs,c
  6008  001716  5020               	movf	___flmul@aexp,w,c
  6009  001718  C021  F017         	movff	___flmul@bexp,??___flmul
  6010  00171C  6A18               	clrf	(??___flmul+1)& (0+255),c
  6011  00171E  2617               	addwf	??___flmul,f,c
  6012  001720  0E00               	movlw	0
  6013  001722  2218               	addwfc	??___flmul+1,f,c
  6014  001724  0E82               	movlw	130
  6015  001726  2417               	addwf	??___flmul,w,c
  6016  001728  6E26               	movwf	___flmul@temp,c
  6017  00172A  0EFF               	movlw	255
  6018  00172C  2018               	addwfc	??___flmul+1,w,c
  6019  00172E  6E27               	movwf	___flmul@temp+1,c
  6020  001730  D00F               	goto	l2662
  6021  001732                     l2656:
  6022  001732  90D8               	bcf	status,0,c
  6023  001734  3622               	rlcf	___flmul@prod,f,c
  6024  001736  3623               	rlcf	___flmul@prod+1,f,c
  6025  001738  3624               	rlcf	___flmul@prod+2,f,c
  6026  00173A  3625               	rlcf	___flmul@prod+3,f,c
  6027  00173C  BE1F               	btfsc	___flmul@grs+3,7,c
  6028  00173E  8022               	bsf	___flmul@prod,0,c
  6029  001740  90D8               	bcf	status,0,c
  6030  001742  361C               	rlcf	___flmul@grs,f,c
  6031  001744  361D               	rlcf	___flmul@grs+1,f,c
  6032  001746  361E               	rlcf	___flmul@grs+2,f,c
  6033  001748  361F               	rlcf	___flmul@grs+3,f,c
  6034  00174A  0626               	decf	___flmul@temp,f,c
  6035  00174C  A0D8               	btfss	status,0,c
  6036  00174E  0627               	decf	___flmul@temp+1,f,c
  6037  001750                     l2662:
  6038  001750  AE24               	btfss	___flmul@prod+2,7,c
  6039  001752  D7EF               	goto	l2656
  6040  001754  0E00               	movlw	0
  6041  001756  6E20               	movwf	___flmul@aexp,c
  6042  001758  AE1F               	btfss	___flmul@grs+3,7,c
  6043  00175A  D016               	goto	l859
  6044  00175C  0EFF               	movlw	255
  6045  00175E  141C               	andwf	___flmul@grs,w,c
  6046  001760  6E17               	movwf	??___flmul& (0+255),c
  6047  001762  0EFF               	movlw	255
  6048  001764  141D               	andwf	___flmul@grs+1,w,c
  6049  001766  6E18               	movwf	(??___flmul+1)& (0+255),c
  6050  001768  0EFF               	movlw	255
  6051  00176A  141E               	andwf	___flmul@grs+2,w,c
  6052  00176C  6E19               	movwf	(??___flmul+2)& (0+255),c
  6053  00176E  0E7F               	movlw	127
  6054  001770  141F               	andwf	___flmul@grs+3,w,c
  6055  001772  6E1A               	movwf	(??___flmul+3)& (0+255),c
  6056  001774  5017               	movf	??___flmul,w,c
  6057  001776  1018               	iorwf	??___flmul+1,w,c
  6058  001778  1019               	iorwf	??___flmul+2,w,c
  6059  00177A  101A               	iorwf	??___flmul+3,w,c
  6060  00177C  A4D8               	btfss	status,2,c
  6061  00177E  D002               	goto	l2672
  6062  001780  A022               	btfss	___flmul@prod,0,c
  6063  001782  D002               	goto	l859
  6064  001784                     l2672:
  6065  001784  0E01               	movlw	1
  6066  001786  6E20               	movwf	___flmul@aexp,c
  6067  001788                     l859:
  6068  001788  5020               	movf	___flmul@aexp,w,c
  6069  00178A  B4D8               	btfsc	status,2,c
  6070  00178C  D01F               	goto	l2682
  6071  00178E  0E01               	movlw	1
  6072  001790  2622               	addwf	___flmul@prod,f,c
  6073  001792  0E00               	movlw	0
  6074  001794  2223               	addwfc	___flmul@prod+1,f,c
  6075  001796  2224               	addwfc	___flmul@prod+2,f,c
  6076  001798  2225               	addwfc	___flmul@prod+3,f,c
  6077  00179A  A025               	btfss	___flmul@prod+3,0,c
  6078  00179C  D017               	goto	l2682
  6079  00179E  C022  F017         	movff	___flmul@prod,??___flmul
  6080  0017A2  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  6081  0017A6  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  6082  0017AA  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  6083  0017AE  341A               	rlcf	??___flmul+3,w,c
  6084  0017B0  321A               	rrcf	??___flmul+3,f,c
  6085  0017B2  3219               	rrcf	??___flmul+2,f,c
  6086  0017B4  3218               	rrcf	??___flmul+1,f,c
  6087  0017B6  3217               	rrcf	??___flmul,f,c
  6088  0017B8  C017  F022         	movff	??___flmul,___flmul@prod
  6089  0017BC  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  6090  0017C0  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  6091  0017C4  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  6092  0017C8  4A26               	infsnz	___flmul@temp,f,c
  6093  0017CA  2A27               	incf	___flmul@temp+1,f,c
  6094  0017CC                     l2682:
  6095  0017CC  BE27               	btfsc	___flmul@temp+1,7,c
  6096  0017CE  D00D               	goto	l2686
  6097  0017D0  5027               	movf	___flmul@temp+1,w,c
  6098  0017D2  E103               	bnz	u2650
  6099  0017D4  2826               	incf	___flmul@temp,w,c
  6100  0017D6  A0D8               	btfss	status,0,c
  6101  0017D8  D008               	goto	l2686
  6102  0017DA                     u2650:
  6103  0017DA  0E00               	movlw	0
  6104  0017DC  6E22               	movwf	___flmul@prod,c
  6105  0017DE  0E00               	movlw	0
  6106  0017E0  6E23               	movwf	___flmul@prod+1,c
  6107  0017E2  0E80               	movlw	128
  6108  0017E4  6E24               	movwf	___flmul@prod+2,c
  6109  0017E6  0E7F               	movlw	127
  6110  0017E8  D020               	goto	L9
  6111  0017EA                     l2686:
  6112  0017EA  BE27               	btfsc	___flmul@temp+1,7,c
  6113  0017EC  D005               	goto	l2688
  6114  0017EE  5027               	movf	___flmul@temp+1,w,c
  6115  0017F0  E10E               	bnz	l867
  6116  0017F2  0426               	decf	___flmul@temp,w,c
  6117  0017F4  B0D8               	btfsc	status,0,c
  6118  0017F6  D00B               	goto	l867
  6119  0017F8                     l2688:
  6120  0017F8  0E00               	movlw	0
  6121  0017FA  6E22               	movwf	___flmul@prod,c
  6122  0017FC  0E00               	movlw	0
  6123  0017FE  6E23               	movwf	___flmul@prod+1,c
  6124  001800  0E00               	movlw	0
  6125  001802  6E24               	movwf	___flmul@prod+2,c
  6126  001804  0E00               	movlw	0
  6127  001806  6E25               	movwf	___flmul@prod+3,c
  6128  001808  0E00               	movlw	0
  6129  00180A  6E1B               	movwf	___flmul@sign,c
  6130  00180C  D00F               	goto	l2698
  6131  00180E                     l867:
  6132  00180E  C026  F021         	movff	___flmul@temp,___flmul@bexp
  6133  001812  0EFF               	movlw	255
  6134  001814  1622               	andwf	___flmul@prod,f,c
  6135  001816  0EFF               	movlw	255
  6136  001818  1623               	andwf	___flmul@prod+1,f,c
  6137  00181A  0E7F               	movlw	127
  6138  00181C  1624               	andwf	___flmul@prod+2,f,c
  6139  00181E  0E00               	movlw	0
  6140  001820  1625               	andwf	___flmul@prod+3,f,c
  6141  001822  B021               	btfsc	___flmul@bexp,0,c
  6142  001824  8E24               	bsf	___flmul@prod+2,7,c
  6143  001826  90D8               	bcf	status,0,c
  6144  001828  3021               	rrcf	___flmul@bexp,w,c
  6145  00182A                     L9:
  6146  00182A  6E25               	movwf	___flmul@prod+3,c
  6147  00182C                     l2698:
  6148  00182C  501B               	movf	___flmul@sign,w,c
  6149  00182E  1225               	iorwf	___flmul@prod+3,f,c
  6150  001830  C022  F00F         	movff	___flmul@prod,?___flmul
  6151  001834  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  6152  001838  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  6153  00183C  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  6154  001840  0012               	return	
  6155  001842                     __end_of___flmul:
  6156                           	opt stack 0
  6157                           tblptru	equ	0xFF8
  6158                           tblptrh	equ	0xFF7
  6159                           tblptrl	equ	0xFF6
  6160                           tablat	equ	0xFF5
  6161                           prodh	equ	0xFF4
  6162                           prodl	equ	0xFF3
  6163                           postinc0	equ	0xFEE
  6164                           wreg	equ	0xFE8
  6165                           indf2	equ	0xFDF
  6166                           postinc2	equ	0xFDE
  6167                           postdec2	equ	0xFDD
  6168                           fsr2h	equ	0xFDA
  6169                           fsr2l	equ	0xFD9
  6170                           status	equ	0xFD8
  6171                           
  6172 ;; *************** function ___fldiv *****************
  6173 ;; Defined at:
  6174 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcdiv.c"
  6175 ;; Parameters:    Size  Location     Type
  6176 ;;  b               4   39[COMRAM] unsigned char 
  6177 ;;  a               4   43[COMRAM] unsigned char 
  6178 ;; Auto vars:     Size  Location     Type
  6179 ;;  grs             4   58[COMRAM] unsigned long 
  6180 ;;  rem             4   52[COMRAM] unsigned long 
  6181 ;;  new_exp         2   56[COMRAM] int 
  6182 ;;  aexp            1   63[COMRAM] unsigned char 
  6183 ;;  bexp            1   62[COMRAM] unsigned char 
  6184 ;;  sign            1   51[COMRAM] unsigned char 
  6185 ;; Return value:  Size  Location     Type
  6186 ;;                  4   39[COMRAM] unsigned char 
  6187 ;; Registers used:
  6188 ;;		wreg, status,2, status,0
  6189 ;; Tracked objects:
  6190 ;;		On entry : 0/0
  6191 ;;		On exit  : 0/0
  6192 ;;		Unchanged: 0/0
  6193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6194 ;;      Params:         8       0       0       0       0       0       0       0       0
  6195 ;;      Locals:        13       0       0       0       0       0       0       0       0
  6196 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6197 ;;      Totals:        25       0       0       0       0       0       0       0       0
  6198 ;;Total ram usage:       25 bytes
  6199 ;; Hardware stack levels used:    1
  6200 ;; This function calls:
  6201 ;;		Nothing
  6202 ;; This function is called by:
  6203 ;;		_main
  6204 ;;		_read_adc
  6205 ;; This function uses a non-reentrant model
  6206 ;;
  6207                           
  6208                           	psect	text20
  6209  001B7E                     __ptext20:
  6210                           	opt stack 0
  6211  001B7E                     ___fldiv:
  6212                           	opt stack 28
  6213                           
  6214                           ;incstack = 0
  6215  001B7E  502B               	movf	___fldiv@b+3,w,c
  6216  001B80  0B80               	andlw	128
  6217  001B82  6E34               	movwf	___fldiv@sign,c
  6218  001B84  502B               	movf	___fldiv@b+3,w,c
  6219  001B86  242B               	addwf	___fldiv@b+3,w,c
  6220  001B88  6E3F               	movwf	___fldiv@bexp,c
  6221  001B8A  BE2A               	btfsc	___fldiv@b+2,7,c
  6222  001B8C  803F               	bsf	___fldiv@bexp,0,c
  6223  001B8E  503F               	movf	___fldiv@bexp,w,c
  6224  001B90  B4D8               	btfsc	status,2,c
  6225  001B92  D00D               	goto	l3012
  6226  001B94  283F               	incf	___fldiv@bexp,w,c
  6227  001B96  A4D8               	btfss	status,2,c
  6228  001B98  D008               	goto	l3008
  6229  001B9A  0E00               	movlw	0
  6230  001B9C  6E28               	movwf	___fldiv@b,c
  6231  001B9E  0E00               	movlw	0
  6232  001BA0  6E29               	movwf	___fldiv@b+1,c
  6233  001BA2  0E00               	movlw	0
  6234  001BA4  6E2A               	movwf	___fldiv@b+2,c
  6235  001BA6  0E00               	movlw	0
  6236  001BA8  6E2B               	movwf	___fldiv@b+3,c
  6237  001BAA                     l3008:
  6238  001BAA  8E2A               	bsf	___fldiv@b+2,7,c
  6239  001BAC  D006               	goto	L10
  6240  001BAE                     l3012:
  6241  001BAE  0E00               	movlw	0
  6242  001BB0  6E28               	movwf	___fldiv@b,c
  6243  001BB2  0E00               	movlw	0
  6244  001BB4  6E29               	movwf	___fldiv@b+1,c
  6245  001BB6  0E00               	movlw	0
  6246  001BB8  6E2A               	movwf	___fldiv@b+2,c
  6247  001BBA                     L10:
  6248  001BBA  0E00               	movlw	0
  6249  001BBC  6E2B               	movwf	___fldiv@b+3,c
  6250  001BBE  502F               	movf	___fldiv@a+3,w,c
  6251  001BC0  0B80               	andlw	128
  6252  001BC2  1A34               	xorwf	___fldiv@sign,f,c
  6253  001BC4  502F               	movf	___fldiv@a+3,w,c
  6254  001BC6  242F               	addwf	___fldiv@a+3,w,c
  6255  001BC8  6E40               	movwf	___fldiv@aexp,c
  6256  001BCA  BE2E               	btfsc	___fldiv@a+2,7,c
  6257  001BCC  8040               	bsf	___fldiv@aexp,0,c
  6258  001BCE  5040               	movf	___fldiv@aexp,w,c
  6259  001BD0  B4D8               	btfsc	status,2,c
  6260  001BD2  D00D               	goto	l3032
  6261  001BD4  2840               	incf	___fldiv@aexp,w,c
  6262  001BD6  A4D8               	btfss	status,2,c
  6263  001BD8  D008               	goto	l3028
  6264  001BDA  0E00               	movlw	0
  6265  001BDC  6E2C               	movwf	___fldiv@a,c
  6266  001BDE  0E00               	movlw	0
  6267  001BE0  6E2D               	movwf	___fldiv@a+1,c
  6268  001BE2  0E00               	movlw	0
  6269  001BE4  6E2E               	movwf	___fldiv@a+2,c
  6270  001BE6  0E00               	movlw	0
  6271  001BE8  6E2F               	movwf	___fldiv@a+3,c
  6272  001BEA                     l3028:
  6273  001BEA  8E2E               	bsf	___fldiv@a+2,7,c
  6274  001BEC  D006               	goto	L11
  6275  001BEE                     l3032:
  6276  001BEE  0E00               	movlw	0
  6277  001BF0  6E2C               	movwf	___fldiv@a,c
  6278  001BF2  0E00               	movlw	0
  6279  001BF4  6E2D               	movwf	___fldiv@a+1,c
  6280  001BF6  0E00               	movlw	0
  6281  001BF8  6E2E               	movwf	___fldiv@a+2,c
  6282  001BFA                     L11:
  6283  001BFA  0E00               	movlw	0
  6284  001BFC  6E2F               	movwf	___fldiv@a+3,c
  6285  001BFE  502C               	movf	___fldiv@a,w,c
  6286  001C00  102D               	iorwf	___fldiv@a+1,w,c
  6287  001C02  102E               	iorwf	___fldiv@a+2,w,c
  6288  001C04  102F               	iorwf	___fldiv@a+3,w,c
  6289  001C06  A4D8               	btfss	status,2,c
  6290  001C08  D015               	goto	l3044
  6291  001C0A  0E00               	movlw	0
  6292  001C0C  6E28               	movwf	___fldiv@b,c
  6293  001C0E  0E00               	movlw	0
  6294  001C10  6E29               	movwf	___fldiv@b+1,c
  6295  001C12  0E00               	movlw	0
  6296  001C14  6E2A               	movwf	___fldiv@b+2,c
  6297  001C16  0E00               	movlw	0
  6298  001C18  6E2B               	movwf	___fldiv@b+3,c
  6299  001C1A  0E80               	movlw	128
  6300  001C1C  122A               	iorwf	___fldiv@b+2,f,c
  6301  001C1E  0E7F               	movlw	127
  6302  001C20  122B               	iorwf	___fldiv@b+3,f,c
  6303  001C22  C028  F028         	movff	___fldiv@b,?___fldiv
  6304  001C26  C029  F029         	movff	___fldiv@b+1,?___fldiv+1
  6305  001C2A  C02A  F02A         	movff	___fldiv@b+2,?___fldiv+2
  6306  001C2E  C02B  F02B         	movff	___fldiv@b+3,?___fldiv+3
  6307  001C32  0012               	return	
  6308  001C34                     l3044:
  6309  001C34  503F               	movf	___fldiv@bexp,w,c
  6310  001C36  A4D8               	btfss	status,2,c
  6311  001C38  D011               	goto	l3052
  6312  001C3A  0E00               	movlw	0
  6313  001C3C  6E28               	movwf	___fldiv@b,c
  6314  001C3E  0E00               	movlw	0
  6315  001C40  6E29               	movwf	___fldiv@b+1,c
  6316  001C42  0E00               	movlw	0
  6317  001C44  6E2A               	movwf	___fldiv@b+2,c
  6318  001C46  0E00               	movlw	0
  6319  001C48  6E2B               	movwf	___fldiv@b+3,c
  6320  001C4A  C028  F028         	movff	___fldiv@b,?___fldiv
  6321  001C4E  C029  F029         	movff	___fldiv@b+1,?___fldiv+1
  6322  001C52  C02A  F02A         	movff	___fldiv@b+2,?___fldiv+2
  6323  001C56  C02B  F02B         	movff	___fldiv@b+3,?___fldiv+3
  6324  001C5A  0012               	return	
  6325  001C5C                     l3052:
  6326  001C5C  5040               	movf	___fldiv@aexp,w,c
  6327  001C5E  6E30               	movwf	??___fldiv& (0+255),c
  6328  001C60  6A31               	clrf	(??___fldiv+1)& (0+255),c
  6329  001C62  1E30               	comf	??___fldiv,f,c
  6330  001C64  1E31               	comf	??___fldiv+1,f,c
  6331  001C66  4A30               	infsnz	??___fldiv,f,c
  6332  001C68  2A31               	incf	??___fldiv+1,f,c
  6333  001C6A  503F               	movf	___fldiv@bexp,w,c
  6334  001C6C  6E32               	movwf	(??___fldiv+2)& (0+255),c
  6335  001C6E  6A33               	clrf	(??___fldiv+3)& (0+255),c
  6336  001C70  5030               	movf	??___fldiv,w,c
  6337  001C72  2632               	addwf	??___fldiv+2,f,c
  6338  001C74  5031               	movf	??___fldiv+1,w,c
  6339  001C76  2233               	addwfc	??___fldiv+3,f,c
  6340  001C78  0E7F               	movlw	127
  6341  001C7A  2432               	addwf	??___fldiv+2,w,c
  6342  001C7C  6E39               	movwf	___fldiv@new_exp,c
  6343  001C7E  0E00               	movlw	0
  6344  001C80  2033               	addwfc	??___fldiv+3,w,c
  6345  001C82  6E3A               	movwf	___fldiv@new_exp+1,c
  6346  001C84  C028  F035         	movff	___fldiv@b,___fldiv@rem
  6347  001C88  C029  F036         	movff	___fldiv@b+1,___fldiv@rem+1
  6348  001C8C  C02A  F037         	movff	___fldiv@b+2,___fldiv@rem+2
  6349  001C90  C02B  F038         	movff	___fldiv@b+3,___fldiv@rem+3
  6350  001C94  0E00               	movlw	0
  6351  001C96  6E28               	movwf	___fldiv@b,c
  6352  001C98  0E00               	movlw	0
  6353  001C9A  6E29               	movwf	___fldiv@b+1,c
  6354  001C9C  0E00               	movlw	0
  6355  001C9E  6E2A               	movwf	___fldiv@b+2,c
  6356  001CA0  0E00               	movlw	0
  6357  001CA2  6E2B               	movwf	___fldiv@b+3,c
  6358  001CA4  0E00               	movlw	0
  6359  001CA6  6E3B               	movwf	___fldiv@grs,c
  6360  001CA8  0E00               	movlw	0
  6361  001CAA  6E3C               	movwf	___fldiv@grs+1,c
  6362  001CAC  0E00               	movlw	0
  6363  001CAE  6E3D               	movwf	___fldiv@grs+2,c
  6364  001CB0  0E00               	movlw	0
  6365  001CB2  6E3E               	movwf	___fldiv@grs+3,c
  6366  001CB4  0E00               	movlw	0
  6367  001CB6  6E40               	movwf	___fldiv@aexp,c
  6368  001CB8  D028               	goto	l820
  6369  001CBA                     l3062:
  6370  001CBA  5040               	movf	___fldiv@aexp,w,c
  6371  001CBC  B4D8               	btfsc	status,2,c
  6372  001CBE  D011               	goto	l3070
  6373  001CC0  90D8               	bcf	status,0,c
  6374  001CC2  3635               	rlcf	___fldiv@rem,f,c
  6375  001CC4  3636               	rlcf	___fldiv@rem+1,f,c
  6376  001CC6  3637               	rlcf	___fldiv@rem+2,f,c
  6377  001CC8  3638               	rlcf	___fldiv@rem+3,f,c
  6378  001CCA  90D8               	bcf	status,0,c
  6379  001CCC  3628               	rlcf	___fldiv@b,f,c
  6380  001CCE  3629               	rlcf	___fldiv@b+1,f,c
  6381  001CD0  362A               	rlcf	___fldiv@b+2,f,c
  6382  001CD2  362B               	rlcf	___fldiv@b+3,f,c
  6383  001CD4  BE3E               	btfsc	___fldiv@grs+3,7,c
  6384  001CD6  8028               	bsf	___fldiv@b,0,c
  6385  001CD8  90D8               	bcf	status,0,c
  6386  001CDA  363B               	rlcf	___fldiv@grs,f,c
  6387  001CDC  363C               	rlcf	___fldiv@grs+1,f,c
  6388  001CDE  363D               	rlcf	___fldiv@grs+2,f,c
  6389  001CE0  363E               	rlcf	___fldiv@grs+3,f,c
  6390  001CE2                     l3070:
  6391  001CE2  502C               	movf	___fldiv@a,w,c
  6392  001CE4  5C35               	subwf	___fldiv@rem,w,c
  6393  001CE6  502D               	movf	___fldiv@a+1,w,c
  6394  001CE8  5836               	subwfb	___fldiv@rem+1,w,c
  6395  001CEA  502E               	movf	___fldiv@a+2,w,c
  6396  001CEC  5837               	subwfb	___fldiv@rem+2,w,c
  6397  001CEE  502F               	movf	___fldiv@a+3,w,c
  6398  001CF0  5838               	subwfb	___fldiv@rem+3,w,c
  6399  001CF2  A0D8               	btfss	status,0,c
  6400  001CF4  D009               	goto	l3076
  6401  001CF6  8C3E               	bsf	___fldiv@grs+3,6,c
  6402  001CF8  502C               	movf	___fldiv@a,w,c
  6403  001CFA  5E35               	subwf	___fldiv@rem,f,c
  6404  001CFC  502D               	movf	___fldiv@a+1,w,c
  6405  001CFE  5A36               	subwfb	___fldiv@rem+1,f,c
  6406  001D00  502E               	movf	___fldiv@a+2,w,c
  6407  001D02  5A37               	subwfb	___fldiv@rem+2,f,c
  6408  001D04  502F               	movf	___fldiv@a+3,w,c
  6409  001D06  5A38               	subwfb	___fldiv@rem+3,f,c
  6410  001D08                     l3076:
  6411  001D08  2A40               	incf	___fldiv@aexp,f,c
  6412  001D0A                     l820:
  6413  001D0A  0E19               	movlw	25
  6414  001D0C  6440               	cpfsgt	___fldiv@aexp,c
  6415  001D0E  D7D5               	goto	l3062
  6416  001D10  5035               	movf	___fldiv@rem,w,c
  6417  001D12  1036               	iorwf	___fldiv@rem+1,w,c
  6418  001D14  1037               	iorwf	___fldiv@rem+2,w,c
  6419  001D16  1038               	iorwf	___fldiv@rem+3,w,c
  6420  001D18  B4D8               	btfsc	status,2,c
  6421  001D1A  D011               	goto	l3088
  6422  001D1C  803B               	bsf	___fldiv@grs,0,c
  6423  001D1E  D00F               	goto	l3088
  6424  001D20                     l3082:
  6425  001D20  90D8               	bcf	status,0,c
  6426  001D22  3628               	rlcf	___fldiv@b,f,c
  6427  001D24  3629               	rlcf	___fldiv@b+1,f,c
  6428  001D26  362A               	rlcf	___fldiv@b+2,f,c
  6429  001D28  362B               	rlcf	___fldiv@b+3,f,c
  6430  001D2A  BE3E               	btfsc	___fldiv@grs+3,7,c
  6431  001D2C  8028               	bsf	___fldiv@b,0,c
  6432  001D2E  90D8               	bcf	status,0,c
  6433  001D30  363B               	rlcf	___fldiv@grs,f,c
  6434  001D32  363C               	rlcf	___fldiv@grs+1,f,c
  6435  001D34  363D               	rlcf	___fldiv@grs+2,f,c
  6436  001D36  363E               	rlcf	___fldiv@grs+3,f,c
  6437  001D38  0639               	decf	___fldiv@new_exp,f,c
  6438  001D3A  A0D8               	btfss	status,0,c
  6439  001D3C  063A               	decf	___fldiv@new_exp+1,f,c
  6440  001D3E                     l3088:
  6441  001D3E  AE2A               	btfss	___fldiv@b+2,7,c
  6442  001D40  D7EF               	goto	l3082
  6443  001D42  0E00               	movlw	0
  6444  001D44  6E40               	movwf	___fldiv@aexp,c
  6445  001D46  AE3E               	btfss	___fldiv@grs+3,7,c
  6446  001D48  D016               	goto	l831
  6447  001D4A  0EFF               	movlw	255
  6448  001D4C  143B               	andwf	___fldiv@grs,w,c
  6449  001D4E  6E30               	movwf	??___fldiv& (0+255),c
  6450  001D50  0EFF               	movlw	255
  6451  001D52  143C               	andwf	___fldiv@grs+1,w,c
  6452  001D54  6E31               	movwf	(??___fldiv+1)& (0+255),c
  6453  001D56  0EFF               	movlw	255
  6454  001D58  143D               	andwf	___fldiv@grs+2,w,c
  6455  001D5A  6E32               	movwf	(??___fldiv+2)& (0+255),c
  6456  001D5C  0E7F               	movlw	127
  6457  001D5E  143E               	andwf	___fldiv@grs+3,w,c
  6458  001D60  6E33               	movwf	(??___fldiv+3)& (0+255),c
  6459  001D62  5030               	movf	??___fldiv,w,c
  6460  001D64  1031               	iorwf	??___fldiv+1,w,c
  6461  001D66  1032               	iorwf	??___fldiv+2,w,c
  6462  001D68  1033               	iorwf	??___fldiv+3,w,c
  6463  001D6A  A4D8               	btfss	status,2,c
  6464  001D6C  D002               	goto	l3098
  6465  001D6E  A028               	btfss	___fldiv@b,0,c
  6466  001D70  D002               	goto	l831
  6467  001D72                     l3098:
  6468  001D72  0E01               	movlw	1
  6469  001D74  6E40               	movwf	___fldiv@aexp,c
  6470  001D76                     l831:
  6471  001D76  5040               	movf	___fldiv@aexp,w,c
  6472  001D78  B4D8               	btfsc	status,2,c
  6473  001D7A  D01F               	goto	l3108
  6474  001D7C  0E01               	movlw	1
  6475  001D7E  2628               	addwf	___fldiv@b,f,c
  6476  001D80  0E00               	movlw	0
  6477  001D82  2229               	addwfc	___fldiv@b+1,f,c
  6478  001D84  222A               	addwfc	___fldiv@b+2,f,c
  6479  001D86  222B               	addwfc	___fldiv@b+3,f,c
  6480  001D88  A02B               	btfss	___fldiv@b+3,0,c
  6481  001D8A  D017               	goto	l3108
  6482  001D8C  C028  F030         	movff	___fldiv@b,??___fldiv
  6483  001D90  C029  F031         	movff	___fldiv@b+1,??___fldiv+1
  6484  001D94  C02A  F032         	movff	___fldiv@b+2,??___fldiv+2
  6485  001D98  C02B  F033         	movff	___fldiv@b+3,??___fldiv+3
  6486  001D9C  3433               	rlcf	??___fldiv+3,w,c
  6487  001D9E  3233               	rrcf	??___fldiv+3,f,c
  6488  001DA0  3232               	rrcf	??___fldiv+2,f,c
  6489  001DA2  3231               	rrcf	??___fldiv+1,f,c
  6490  001DA4  3230               	rrcf	??___fldiv,f,c
  6491  001DA6  C030  F028         	movff	??___fldiv,___fldiv@b
  6492  001DAA  C031  F029         	movff	??___fldiv+1,___fldiv@b+1
  6493  001DAE  C032  F02A         	movff	??___fldiv+2,___fldiv@b+2
  6494  001DB2  C033  F02B         	movff	??___fldiv+3,___fldiv@b+3
  6495  001DB6  4A39               	infsnz	___fldiv@new_exp,f,c
  6496  001DB8  2A3A               	incf	___fldiv@new_exp+1,f,c
  6497  001DBA                     l3108:
  6498  001DBA  BE3A               	btfsc	___fldiv@new_exp+1,7,c
  6499  001DBC  D010               	goto	l3112
  6500  001DBE  503A               	movf	___fldiv@new_exp+1,w,c
  6501  001DC0  E103               	bnz	u3250
  6502  001DC2  2839               	incf	___fldiv@new_exp,w,c
  6503  001DC4  A0D8               	btfss	status,0,c
  6504  001DC6  D00B               	goto	l3112
  6505  001DC8                     u3250:
  6506  001DC8  0E00               	movlw	0
  6507  001DCA  6E3A               	movwf	___fldiv@new_exp+1,c
  6508  001DCC  6839               	setf	___fldiv@new_exp,c
  6509  001DCE  0E00               	movlw	0
  6510  001DD0  6E28               	movwf	___fldiv@b,c
  6511  001DD2  0E00               	movlw	0
  6512  001DD4  6E29               	movwf	___fldiv@b+1,c
  6513  001DD6  0E00               	movlw	0
  6514  001DD8  6E2A               	movwf	___fldiv@b+2,c
  6515  001DDA  0E00               	movlw	0
  6516  001DDC  6E2B               	movwf	___fldiv@b+3,c
  6517  001DDE                     l3112:
  6518  001DDE  BE3A               	btfsc	___fldiv@new_exp+1,7,c
  6519  001DE0  D005               	goto	l3114
  6520  001DE2  503A               	movf	___fldiv@new_exp+1,w,c
  6521  001DE4  E111               	bnz	l3116
  6522  001DE6  0439               	decf	___fldiv@new_exp,w,c
  6523  001DE8  B0D8               	btfsc	status,0,c
  6524  001DEA  D00E               	goto	l3116
  6525  001DEC                     l3114:
  6526  001DEC  0E00               	movlw	0
  6527  001DEE  6E3A               	movwf	___fldiv@new_exp+1,c
  6528  001DF0  0E00               	movlw	0
  6529  001DF2  6E39               	movwf	___fldiv@new_exp,c
  6530  001DF4  0E00               	movlw	0
  6531  001DF6  6E28               	movwf	___fldiv@b,c
  6532  001DF8  0E00               	movlw	0
  6533  001DFA  6E29               	movwf	___fldiv@b+1,c
  6534  001DFC  0E00               	movlw	0
  6535  001DFE  6E2A               	movwf	___fldiv@b+2,c
  6536  001E00  0E00               	movlw	0
  6537  001E02  6E2B               	movwf	___fldiv@b+3,c
  6538  001E04  0E00               	movlw	0
  6539  001E06  6E34               	movwf	___fldiv@sign,c
  6540  001E08                     l3116:
  6541  001E08  C039  F03F         	movff	___fldiv@new_exp,___fldiv@bexp
  6542  001E0C  A03F               	btfss	___fldiv@bexp,0,c
  6543  001E0E  D002               	goto	l3122
  6544  001E10  8E2A               	bsf	___fldiv@b+2,7,c
  6545  001E12  D001               	goto	l3124
  6546  001E14                     l3122:
  6547  001E14  9E2A               	bcf	___fldiv@b+2,7,c
  6548  001E16                     l3124:
  6549  001E16  90D8               	bcf	status,0,c
  6550  001E18  303F               	rrcf	___fldiv@bexp,w,c
  6551  001E1A  6E2B               	movwf	___fldiv@b+3,c
  6552  001E1C  5034               	movf	___fldiv@sign,w,c
  6553  001E1E  122B               	iorwf	___fldiv@b+3,f,c
  6554  001E20  C028  F028         	movff	___fldiv@b,?___fldiv
  6555  001E24  C029  F029         	movff	___fldiv@b+1,?___fldiv+1
  6556  001E28  C02A  F02A         	movff	___fldiv@b+2,?___fldiv+2
  6557  001E2C  C02B  F02B         	movff	___fldiv@b+3,?___fldiv+3
  6558  001E30  0012               	return	
  6559  001E32                     __end_of___fldiv:
  6560                           	opt stack 0
  6561                           tblptru	equ	0xFF8
  6562                           tblptrh	equ	0xFF7
  6563                           tblptrl	equ	0xFF6
  6564                           tablat	equ	0xFF5
  6565                           prodh	equ	0xFF4
  6566                           prodl	equ	0xFF3
  6567                           postinc0	equ	0xFEE
  6568                           wreg	equ	0xFE8
  6569                           indf2	equ	0xFDF
  6570                           postinc2	equ	0xFDE
  6571                           postdec2	equ	0xFDD
  6572                           fsr2h	equ	0xFDA
  6573                           fsr2l	equ	0xFD9
  6574                           status	equ	0xFD8
  6575                           
  6576 ;; *************** function _LCD_write_string *****************
  6577 ;; Defined at:
  6578 ;;		line 194 in file "../../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  6579 ;; Parameters:    Size  Location     Type
  6580 ;;  buffer          2   17[COMRAM] PTR unsigned char 
  6581 ;;		 -> str(8), LCD_write_integer@convertedInt(6), 
  6582 ;; Auto vars:     Size  Location     Type
  6583 ;;		None
  6584 ;; Return value:  Size  Location     Type
  6585 ;;		None               void
  6586 ;; Registers used:
  6587 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6588 ;; Tracked objects:
  6589 ;;		On entry : 0/0
  6590 ;;		On exit  : 0/0
  6591 ;;		Unchanged: 0/0
  6592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6593 ;;      Params:         2       0       0       0       0       0       0       0       0
  6594 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6595 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6596 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6597 ;;Total ram usage:        2 bytes
  6598 ;; Hardware stack levels used:    1
  6599 ;; Hardware stack levels required when called:    5
  6600 ;; This function calls:
  6601 ;;		_LCD_write_char
  6602 ;; This function is called by:
  6603 ;;		_ricarica
  6604 ;;		_LCD_write_integer
  6605 ;; This function uses a non-reentrant model
  6606 ;;
  6607                           
  6608                           	psect	text21
  6609  003078                     __ptext21:
  6610                           	opt stack 0
  6611  003078                     _LCD_write_string:
  6612                           	opt stack 24
  6613                           
  6614                           ;src\LCD_44780.c: 197: while(*buffer){
  6615                           
  6616                           ;incstack = 0
  6617  003078  D009               	goto	l3318
  6618  00307A                     l3314:
  6619                           
  6620                           ;src\LCD_44780.c: 200: LCD_write_char(*buffer);
  6621  00307A  C012  FFD9         	movff	LCD_write_string@buffer,fsr2l
  6622  00307E  C013  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
  6623  003082  50DF               	movf	indf2,w,c
  6624  003084  EC99  F016         	call	_LCD_write_char
  6625                           
  6626                           ;src\LCD_44780.c: 202: buffer++;
  6627  003088  4A12               	infsnz	LCD_write_string@buffer,f,c
  6628  00308A  2A13               	incf	LCD_write_string@buffer+1,f,c
  6629  00308C                     l3318:
  6630  00308C  C012  FFD9         	movff	LCD_write_string@buffer,fsr2l
  6631  003090  C013  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
  6632  003094  50DF               	movf	indf2,w,c
  6633  003096  B4D8               	btfsc	status,2,c
  6634  003098  0012               	return	
  6635  00309A  D7EF               	goto	l3314
  6636  00309C                     __end_of_LCD_write_string:
  6637                           	opt stack 0
  6638                           tblptru	equ	0xFF8
  6639                           tblptrh	equ	0xFF7
  6640                           tblptrl	equ	0xFF6
  6641                           tablat	equ	0xFF5
  6642                           prodh	equ	0xFF4
  6643                           prodl	equ	0xFF3
  6644                           postinc0	equ	0xFEE
  6645                           wreg	equ	0xFE8
  6646                           indf2	equ	0xFDF
  6647                           postinc2	equ	0xFDE
  6648                           postdec2	equ	0xFDD
  6649                           fsr2h	equ	0xFDA
  6650                           fsr2l	equ	0xFD9
  6651                           status	equ	0xFD8
  6652                           
  6653 ;; *************** function _LCD_goto_line *****************
  6654 ;; Defined at:
  6655 ;;		line 111 in file "../../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  6656 ;; Parameters:    Size  Location     Type
  6657 ;;  line            1    wreg     unsigned char 
  6658 ;; Auto vars:     Size  Location     Type
  6659 ;;  line            1   12[COMRAM] unsigned char 
  6660 ;; Return value:  Size  Location     Type
  6661 ;;		None               void
  6662 ;; Registers used:
  6663 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6664 ;; Tracked objects:
  6665 ;;		On entry : 0/0
  6666 ;;		On exit  : 0/0
  6667 ;;		Unchanged: 0/0
  6668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6669 ;;      Params:         0       0       0       0       0       0       0       0       0
  6670 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6671 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6672 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6673 ;;Total ram usage:        1 bytes
  6674 ;; Hardware stack levels used:    1
  6675 ;; Hardware stack levels required when called:    4
  6676 ;; This function calls:
  6677 ;;		_LCD_send_command
  6678 ;; This function is called by:
  6679 ;;		_ricarica
  6680 ;;		_LCD_goto_xy
  6681 ;; This function uses a non-reentrant model
  6682 ;;
  6683                           
  6684                           	psect	text22
  6685  002B04                     __ptext22:
  6686                           	opt stack 0
  6687  002B04                     _LCD_goto_line:
  6688                           	opt stack 25
  6689                           
  6690                           ;incstack = 0
  6691                           ;LCD_goto_line@line stored from wreg
  6692  002B04  6E0D               	movwf	LCD_goto_line@line,c
  6693                           
  6694                           ;src\LCD_44780.c: 113: switch(line) {
  6695  002B06  D04C               	goto	l3302
  6696  002B08                     l3294:
  6697  002B08  0E00               	movlw	0
  6698  002B0A  6E09               	movwf	LCD_send_command@D2,c
  6699  002B0C  0E00               	movlw	0
  6700  002B0E  6E0A               	movwf	LCD_send_command@D1,c
  6701  002B10  0E00               	movlw	0
  6702  002B12  6E0B               	movwf	LCD_send_command@D0,c
  6703  002B14  0E01               	movlw	1
  6704  002B16  ECBE  F017         	call	_LCD_send_command
  6705                           
  6706                           ;src\LCD_44780.c: 116: LCD_send_command(0,0,0,0);
  6707  002B1A  0E00               	movlw	0
  6708  002B1C  6E09               	movwf	LCD_send_command@D2,c
  6709  002B1E  0E00               	movlw	0
  6710  002B20  6E0A               	movwf	LCD_send_command@D1,c
  6711  002B22  0E00               	movlw	0
  6712  002B24  6E0B               	movwf	LCD_send_command@D0,c
  6713  002B26  0E00               	movlw	0
  6714  002B28  ECBE  F017         	call	_LCD_send_command
  6715                           
  6716                           ;src\LCD_44780.c: 117: break;
  6717  002B2C  0012               	return	
  6718  002B2E                     l3296:
  6719  002B2E  0E01               	movlw	1
  6720  002B30  6E09               	movwf	LCD_send_command@D2,c
  6721  002B32  0E00               	movlw	0
  6722  002B34  6E0A               	movwf	LCD_send_command@D1,c
  6723  002B36  0E00               	movlw	0
  6724  002B38  6E0B               	movwf	LCD_send_command@D0,c
  6725  002B3A  0E01               	movlw	1
  6726  002B3C  ECBE  F017         	call	_LCD_send_command
  6727                           
  6728                           ;src\LCD_44780.c: 120: LCD_send_command(0,0,0,0);
  6729  002B40  0E00               	movlw	0
  6730  002B42  6E09               	movwf	LCD_send_command@D2,c
  6731  002B44  0E00               	movlw	0
  6732  002B46  6E0A               	movwf	LCD_send_command@D1,c
  6733  002B48  0E00               	movlw	0
  6734  002B4A  6E0B               	movwf	LCD_send_command@D0,c
  6735  002B4C  0E00               	movlw	0
  6736  002B4E  ECBE  F017         	call	_LCD_send_command
  6737                           
  6738                           ;src\LCD_44780.c: 121: break;
  6739  002B52  0012               	return	
  6740  002B54                     l3298:
  6741  002B54  0E00               	movlw	0
  6742  002B56  6E09               	movwf	LCD_send_command@D2,c
  6743  002B58  0E00               	movlw	0
  6744  002B5A  6E0A               	movwf	LCD_send_command@D1,c
  6745  002B5C  0E01               	movlw	1
  6746  002B5E  6E0B               	movwf	LCD_send_command@D0,c
  6747  002B60  0E01               	movlw	1
  6748  002B62  ECBE  F017         	call	_LCD_send_command
  6749                           
  6750                           ;src\LCD_44780.c: 124: LCD_send_command(0,1,0,0);
  6751  002B66  0E01               	movlw	1
  6752  002B68  6E09               	movwf	LCD_send_command@D2,c
  6753  002B6A  0E00               	movlw	0
  6754  002B6C  6E0A               	movwf	LCD_send_command@D1,c
  6755  002B6E  0E00               	movlw	0
  6756  002B70  6E0B               	movwf	LCD_send_command@D0,c
  6757  002B72  0E00               	movlw	0
  6758  002B74  ECBE  F017         	call	_LCD_send_command
  6759                           
  6760                           ;src\LCD_44780.c: 125: break;
  6761  002B78  0012               	return	
  6762  002B7A                     l3300:
  6763  002B7A  0E01               	movlw	1
  6764  002B7C  6E09               	movwf	LCD_send_command@D2,c
  6765  002B7E  0E00               	movlw	0
  6766  002B80  6E0A               	movwf	LCD_send_command@D1,c
  6767  002B82  0E01               	movlw	1
  6768  002B84  6E0B               	movwf	LCD_send_command@D0,c
  6769  002B86  0E01               	movlw	1
  6770  002B88  ECBE  F017         	call	_LCD_send_command
  6771                           
  6772                           ;src\LCD_44780.c: 128: LCD_send_command(0,1,0,0);
  6773  002B8C  0E01               	movlw	1
  6774  002B8E  6E09               	movwf	LCD_send_command@D2,c
  6775  002B90  0E00               	movlw	0
  6776  002B92  6E0A               	movwf	LCD_send_command@D1,c
  6777  002B94  0E00               	movlw	0
  6778  002B96  6E0B               	movwf	LCD_send_command@D0,c
  6779  002B98  0E00               	movlw	0
  6780  002B9A  ECBE  F017         	call	_LCD_send_command
  6781                           
  6782                           ;src\LCD_44780.c: 129: }
  6783  002B9E  0012               	return	
  6784  002BA0                     l3302:
  6785  002BA0  500D               	movf	LCD_goto_line@line,w,c
  6786                           
  6787                           ; Switch size 1, requested type "space"
  6788                           ; Number of cases is 4, Range of values is 1 to 4
  6789                           ; switch strategies available:
  6790                           ; Name         Instructions Cycles
  6791                           ; simple_byte           13     7 (average)
  6792                           ;	Chosen strategy is simple_byte
  6793  002BA2  0A01               	xorlw	1	; case 1
  6794  002BA4  B4D8               	btfsc	status,2,c
  6795  002BA6  D7B0               	goto	l3294
  6796  002BA8  0A03               	xorlw	3	; case 2
  6797  002BAA  B4D8               	btfsc	status,2,c
  6798  002BAC  D7C0               	goto	l3296
  6799  002BAE  0A01               	xorlw	1	; case 3
  6800  002BB0  B4D8               	btfsc	status,2,c
  6801  002BB2  D7D0               	goto	l3298
  6802  002BB4  0A07               	xorlw	7	; case 4
  6803  002BB6  A4D8               	btfss	status,2,c
  6804  002BB8  0012               	return	
  6805  002BBA  D7DF               	goto	l3300
  6806  002BBC                     __end_of_LCD_goto_line:
  6807                           	opt stack 0
  6808                           tblptru	equ	0xFF8
  6809                           tblptrh	equ	0xFF7
  6810                           tblptrl	equ	0xFF6
  6811                           tablat	equ	0xFF5
  6812                           prodh	equ	0xFF4
  6813                           prodl	equ	0xFF3
  6814                           postinc0	equ	0xFEE
  6815                           wreg	equ	0xFE8
  6816                           indf2	equ	0xFDF
  6817                           postinc2	equ	0xFDE
  6818                           postdec2	equ	0xFDD
  6819                           fsr2h	equ	0xFDA
  6820                           fsr2l	equ	0xFD9
  6821                           status	equ	0xFD8
  6822                           
  6823 ;; *************** function _inizializzazione *****************
  6824 ;; Defined at:
  6825 ;;		line 102 in file "tester.c"
  6826 ;; Parameters:    Size  Location     Type
  6827 ;;		None
  6828 ;; Auto vars:     Size  Location     Type
  6829 ;;		None
  6830 ;; Return value:  Size  Location     Type
  6831 ;;		None               void
  6832 ;; Registers used:
  6833 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6834 ;; Tracked objects:
  6835 ;;		On entry : 0/0
  6836 ;;		On exit  : 0/0
  6837 ;;		Unchanged: 0/0
  6838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6839 ;;      Params:         0       0       0       0       0       0       0       0       0
  6840 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6841 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6842 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6843 ;;Total ram usage:        0 bytes
  6844 ;; Hardware stack levels used:    1
  6845 ;; Hardware stack levels required when called:    6
  6846 ;; This function calls:
  6847 ;;		_LCD_clear
  6848 ;;		_LCD_initialize
  6849 ;;		_LCD_write_message
  6850 ;;		_delay_ms
  6851 ;; This function is called by:
  6852 ;;		_main
  6853 ;; This function uses a non-reentrant model
  6854 ;;
  6855                           
  6856                           	psect	text23
  6857  002EB4                     __ptext23:
  6858                           	opt stack 0
  6859  002EB4                     _inizializzazione:
  6860                           	opt stack 24
  6861                           
  6862                           ;tester.c: 103: LATA = 0x00;
  6863                           
  6864                           ;incstack = 0
  6865  002EB4  0E00               	movlw	0
  6866  002EB6  6E89               	movwf	3977,c	;volatile
  6867                           
  6868                           ;tester.c: 104: TRISA = 0b11111111;
  6869  002EB8  6892               	setf	3986,c	;volatile
  6870                           
  6871                           ;tester.c: 106: LATB = 0x00;
  6872  002EBA  0E00               	movlw	0
  6873  002EBC  6E8A               	movwf	3978,c	;volatile
  6874                           
  6875                           ;tester.c: 107: TRISB = 0b00;
  6876  002EBE  0E00               	movlw	0
  6877  002EC0  6E93               	movwf	3987,c	;volatile
  6878                           
  6879                           ;tester.c: 109: LATC = 0x00;
  6880  002EC2  0E00               	movlw	0
  6881  002EC4  6E8B               	movwf	3979,c	;volatile
  6882                           
  6883                           ;tester.c: 110: TRISC = 0b11111111;
  6884  002EC6  6894               	setf	3988,c	;volatile
  6885                           
  6886                           ;tester.c: 112: LCD_initialize(16);
  6887  002EC8  0E10               	movlw	16
  6888  002ECA  EC87  F014         	call	_LCD_initialize
  6889                           
  6890                           ;tester.c: 113: LCD_write_message("ciaone");
  6891  002ECE  0EBB               	movlw	low STR_5
  6892  002ED0  6E12               	movwf	LCD_write_message@buffer,c
  6893  002ED2  0E08               	movlw	high STR_5
  6894  002ED4  6E13               	movwf	LCD_write_message@buffer+1,c
  6895  002ED6  ECED  F017         	call	_LCD_write_message	;wreg free
  6896                           
  6897                           ;tester.c: 114: delay_ms(1000);
  6898  002EDA  0E03               	movlw	3
  6899  002EDC  6E08               	movwf	delay_ms@value_ms+1,c
  6900  002EDE  0EE8               	movlw	232
  6901  002EE0  6E07               	movwf	delay_ms@value_ms,c
  6902  002EE2  ECA2  F017         	call	_delay_ms	;wreg free
  6903                           
  6904                           ;tester.c: 115: LCD_clear();
  6905  002EE6  EC16  F018         	call	_LCD_clear	;wreg free
  6906                           
  6907                           ;tester.c: 117: ADCON0 = 0b00000000;
  6908  002EEA  0E00               	movlw	0
  6909  002EEC  6EC2               	movwf	4034,c	;volatile
  6910                           
  6911                           ;tester.c: 118: ADCON1 = 0b00001011;
  6912  002EEE  0E0B               	movlw	11
  6913  002EF0  6EC1               	movwf	4033,c	;volatile
  6914                           
  6915                           ;tester.c: 119: ADCON2 = 0b10110010;
  6916  002EF2  0EB2               	movlw	178
  6917  002EF4  6EC0               	movwf	4032,c	;volatile
  6918                           
  6919                           ;tester.c: 120: ADCON0bits.CHS3 = 0;
  6920  002EF6  9AC2               	bcf	4034,5,c	;volatile
  6921                           
  6922                           ;tester.c: 121: ADCON0bits.CHS2 = 0;
  6923  002EF8  98C2               	bcf	4034,4,c	;volatile
  6924                           
  6925                           ;tester.c: 122: ADCON0bits.CHS1 = 0;
  6926  002EFA  96C2               	bcf	4034,3,c	;volatile
  6927  002EFC  0012               	return		;funcret
  6928  002EFE                     __end_of_inizializzazione:
  6929                           	opt stack 0
  6930                           tblptru	equ	0xFF8
  6931                           tblptrh	equ	0xFF7
  6932                           tblptrl	equ	0xFF6
  6933                           tablat	equ	0xFF5
  6934                           prodh	equ	0xFF4
  6935                           prodl	equ	0xFF3
  6936                           postinc0	equ	0xFEE
  6937                           wreg	equ	0xFE8
  6938                           indf2	equ	0xFDF
  6939                           postinc2	equ	0xFDE
  6940                           postdec2	equ	0xFDD
  6941                           fsr2h	equ	0xFDA
  6942                           fsr2l	equ	0xFD9
  6943                           status	equ	0xFD8
  6944                           
  6945 ;; *************** function _LCD_write_message *****************
  6946 ;; Defined at:
  6947 ;;		line 178 in file "../../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  6948 ;; Parameters:    Size  Location     Type
  6949 ;;  buffer          2   17[COMRAM] PTR const unsigned char 
  6950 ;;		 -> STR_5(7), STR_4(17), STR_1(17), 
  6951 ;; Auto vars:     Size  Location     Type
  6952 ;;		None
  6953 ;; Return value:  Size  Location     Type
  6954 ;;		None               void
  6955 ;; Registers used:
  6956 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6957 ;; Tracked objects:
  6958 ;;		On entry : 0/0
  6959 ;;		On exit  : 0/0
  6960 ;;		Unchanged: 0/0
  6961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6962 ;;      Params:         2       0       0       0       0       0       0       0       0
  6963 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6964 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6965 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6966 ;;Total ram usage:        2 bytes
  6967 ;; Hardware stack levels used:    1
  6968 ;; Hardware stack levels required when called:    5
  6969 ;; This function calls:
  6970 ;;		_LCD_write_char
  6971 ;; This function is called by:
  6972 ;;		_ricarica
  6973 ;;		_inizializzazione
  6974 ;; This function uses a non-reentrant model
  6975 ;;
  6976                           
  6977                           	psect	text24
  6978  002FDA                     __ptext24:
  6979                           	opt stack 0
  6980  002FDA                     _LCD_write_message:
  6981                           	opt stack 24
  6982                           
  6983                           ;src\LCD_44780.c: 181: while(*buffer) {
  6984                           
  6985                           ;incstack = 0
  6986  002FDA  D00A               	goto	l3310
  6987  002FDC                     l3306:
  6988                           
  6989                           ;src\LCD_44780.c: 184: LCD_write_char(*buffer);
  6990  002FDC  C012  FFF6         	movff	LCD_write_message@buffer,tblptrl
  6991  002FE0  C013  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
  6992  002FE4                     	if	0	;tblptru may be non-zero
  6993  002FE4                     	endif
  6994  002FE4                     	if	0	;tblptru may be non-zero
  6995  002FE4                     	endif
  6996  002FE4  0008               	tblrd		*
  6997  002FE6  50F5               	movf	tablat,w,c
  6998  002FE8  EC99  F016         	call	_LCD_write_char
  6999                           
  7000                           ;src\LCD_44780.c: 186: buffer++;
  7001  002FEC  4A12               	infsnz	LCD_write_message@buffer,f,c
  7002  002FEE  2A13               	incf	LCD_write_message@buffer+1,f,c
  7003  002FF0                     l3310:
  7004  002FF0  C012  FFF6         	movff	LCD_write_message@buffer,tblptrl
  7005  002FF4  C013  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
  7006  002FF8                     	if	0	;tblptru may be non-zero
  7007  002FF8                     	endif
  7008  002FF8                     	if	0	;tblptru may be non-zero
  7009  002FF8                     	endif
  7010  002FF8  0008               	tblrd		*
  7011  002FFA  50F5               	movf	tablat,w,c
  7012  002FFC  0900               	iorlw	0
  7013  002FFE  B4D8               	btfsc	status,2,c
  7014  003000  0012               	return	
  7015  003002  D7EC               	goto	l3306
  7016  003004                     __end_of_LCD_write_message:
  7017                           	opt stack 0
  7018                           tblptru	equ	0xFF8
  7019                           tblptrh	equ	0xFF7
  7020                           tblptrl	equ	0xFF6
  7021                           tablat	equ	0xFF5
  7022                           prodh	equ	0xFF4
  7023                           prodl	equ	0xFF3
  7024                           postinc0	equ	0xFEE
  7025                           wreg	equ	0xFE8
  7026                           indf2	equ	0xFDF
  7027                           postinc2	equ	0xFDE
  7028                           postdec2	equ	0xFDD
  7029                           fsr2h	equ	0xFDA
  7030                           fsr2l	equ	0xFD9
  7031                           status	equ	0xFD8
  7032                           
  7033 ;; *************** function _LCD_write_char *****************
  7034 ;; Defined at:
  7035 ;;		line 145 in file "../../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  7036 ;; Parameters:    Size  Location     Type
  7037 ;;  value           1    wreg     unsigned char 
  7038 ;; Auto vars:     Size  Location     Type
  7039 ;;  value           1   16[COMRAM] unsigned char 
  7040 ;;  D0              1   15[COMRAM] unsigned char 
  7041 ;;  D1              1   14[COMRAM] unsigned char 
  7042 ;;  D2              1   13[COMRAM] unsigned char 
  7043 ;;  D3              1   12[COMRAM] unsigned char 
  7044 ;; Return value:  Size  Location     Type
  7045 ;;		None               void
  7046 ;; Registers used:
  7047 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7048 ;; Tracked objects:
  7049 ;;		On entry : 0/0
  7050 ;;		On exit  : 0/0
  7051 ;;		Unchanged: 0/0
  7052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7053 ;;      Params:         0       0       0       0       0       0       0       0       0
  7054 ;;      Locals:         5       0       0       0       0       0       0       0       0
  7055 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7056 ;;      Totals:         5       0       0       0       0       0       0       0       0
  7057 ;;Total ram usage:        5 bytes
  7058 ;; Hardware stack levels used:    1
  7059 ;; Hardware stack levels required when called:    4
  7060 ;; This function calls:
  7061 ;;		_LCD_send_command
  7062 ;; This function is called by:
  7063 ;;		_LCD_write_message
  7064 ;;		_LCD_write_string
  7065 ;; This function uses a non-reentrant model
  7066 ;;
  7067                           
  7068                           	psect	text25
  7069  002D32                     __ptext25:
  7070                           	opt stack 0
  7071  002D32                     _LCD_write_char:
  7072                           	opt stack 24
  7073                           
  7074                           ;incstack = 0
  7075                           ;LCD_write_char@value stored from wreg
  7076  002D32  6E11               	movwf	LCD_write_char@value,c
  7077                           
  7078                           ;src\LCD_44780.c: 147: unsigned char D3,D2,D1,D0;
  7079                           ;src\LCD_44780.c: 149: LATBbits.LATB1 = 1;
  7080  002D34  828A               	bsf	3978,1,c	;volatile
  7081                           
  7082                           ;src\LCD_44780.c: 152: D3 = (value & 0b10000000) >> 7;
  7083  002D36  4411               	rlncf	LCD_write_char@value,w,c
  7084  002D38  0B01               	andlw	1
  7085  002D3A  6E0D               	movwf	LCD_write_char@D3,c
  7086                           
  7087                           ;src\LCD_44780.c: 153: D2 = (value & 0b01000000) >> 6;
  7088  002D3C  4411               	rlncf	LCD_write_char@value,w,c
  7089  002D3E  46E8               	rlncf	wreg,f,c
  7090  002D40  0B03               	andlw	3
  7091  002D42  0B01               	andlw	1
  7092  002D44  6E0E               	movwf	LCD_write_char@D2,c
  7093                           
  7094                           ;src\LCD_44780.c: 154: D1 = (value & 0b00100000) >> 5;
  7095  002D46  3811               	swapf	LCD_write_char@value,w,c
  7096  002D48  42E8               	rrncf	wreg,f,c
  7097  002D4A  0B07               	andlw	7
  7098  002D4C  0B01               	andlw	1
  7099  002D4E  6E0F               	movwf	LCD_write_char@D1,c
  7100                           
  7101                           ;src\LCD_44780.c: 155: D0 = (value & 0b00010000) >> 4;
  7102  002D50  3811               	swapf	LCD_write_char@value,w,c
  7103  002D52  0B0F               	andlw	15
  7104  002D54  0B01               	andlw	1
  7105  002D56  6E10               	movwf	LCD_write_char@D0,c
  7106                           
  7107                           ;src\LCD_44780.c: 157: LCD_send_command (D3,D2,D1,D0);
  7108  002D58  C00E  F009         	movff	LCD_write_char@D2,LCD_send_command@D2
  7109  002D5C  C00F  F00A         	movff	LCD_write_char@D1,LCD_send_command@D1
  7110  002D60  C010  F00B         	movff	LCD_write_char@D0,LCD_send_command@D0
  7111  002D64  500D               	movf	LCD_write_char@D3,w,c
  7112  002D66  ECBE  F017         	call	_LCD_send_command
  7113                           
  7114                           ;src\LCD_44780.c: 160: D3 = (value & 0b00001000) >> 3;
  7115  002D6A  3811               	swapf	LCD_write_char@value,w,c
  7116  002D6C  46E8               	rlncf	wreg,f,c
  7117  002D6E  0B1F               	andlw	31
  7118  002D70  0B01               	andlw	1
  7119  002D72  6E0D               	movwf	LCD_write_char@D3,c
  7120                           
  7121                           ;src\LCD_44780.c: 161: D2 = (value & 0b00000100) >> 2;
  7122  002D74  4011               	rrncf	LCD_write_char@value,w,c
  7123  002D76  42E8               	rrncf	wreg,f,c
  7124  002D78  0B3F               	andlw	63
  7125  002D7A  0B01               	andlw	1
  7126  002D7C  6E0E               	movwf	LCD_write_char@D2,c
  7127                           
  7128                           ;src\LCD_44780.c: 162: D1 = (value & 0b00000010) >> 1;
  7129  002D7E  90D8               	bcf	status,0,c
  7130  002D80  3011               	rrcf	LCD_write_char@value,w,c
  7131  002D82  0B01               	andlw	1
  7132  002D84  6E0F               	movwf	LCD_write_char@D1,c
  7133                           
  7134                           ;src\LCD_44780.c: 163: D0 = (value & 0b00000001);
  7135  002D86  5011               	movf	LCD_write_char@value,w,c
  7136  002D88  0B01               	andlw	1
  7137  002D8A  6E10               	movwf	LCD_write_char@D0,c
  7138                           
  7139                           ;src\LCD_44780.c: 165: LCD_send_command (D3,D2,D1,D0);
  7140  002D8C  C00E  F009         	movff	LCD_write_char@D2,LCD_send_command@D2
  7141  002D90  C00F  F00A         	movff	LCD_write_char@D1,LCD_send_command@D1
  7142  002D94  C010  F00B         	movff	LCD_write_char@D0,LCD_send_command@D0
  7143  002D98  500D               	movf	LCD_write_char@D3,w,c
  7144  002D9A  ECBE  F017         	call	_LCD_send_command
  7145                           
  7146                           ;src\LCD_44780.c: 167: LATBbits.LATB1 = 0;
  7147  002D9E  928A               	bcf	3978,1,c	;volatile
  7148  002DA0  0012               	return		;funcret
  7149  002DA2                     __end_of_LCD_write_char:
  7150                           	opt stack 0
  7151                           tblptru	equ	0xFF8
  7152                           tblptrh	equ	0xFF7
  7153                           tblptrl	equ	0xFF6
  7154                           tablat	equ	0xFF5
  7155                           prodh	equ	0xFF4
  7156                           prodl	equ	0xFF3
  7157                           postinc0	equ	0xFEE
  7158                           wreg	equ	0xFE8
  7159                           indf2	equ	0xFDF
  7160                           postinc2	equ	0xFDE
  7161                           postdec2	equ	0xFDD
  7162                           fsr2h	equ	0xFDA
  7163                           fsr2l	equ	0xFD9
  7164                           status	equ	0xFD8
  7165                           
  7166 ;; *************** function _LCD_initialize *****************
  7167 ;; Defined at:
  7168 ;;		line 283 in file "../../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  7169 ;; Parameters:    Size  Location     Type
  7170 ;;  quartz_frequ    1    wreg     unsigned char 
  7171 ;; Auto vars:     Size  Location     Type
  7172 ;;  quartz_frequ    1   14[COMRAM] unsigned char 
  7173 ;; Return value:  Size  Location     Type
  7174 ;;		None               void
  7175 ;; Registers used:
  7176 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7177 ;; Tracked objects:
  7178 ;;		On entry : 0/0
  7179 ;;		On exit  : 0/0
  7180 ;;		Unchanged: 0/0
  7181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7182 ;;      Params:         0       0       0       0       0       0       0       0       0
  7183 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7184 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7185 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7186 ;;Total ram usage:        1 bytes
  7187 ;; Hardware stack levels used:    1
  7188 ;; Hardware stack levels required when called:    5
  7189 ;; This function calls:
  7190 ;;		_LCD_clear
  7191 ;;		_LCD_cursor
  7192 ;;		_LCD_send_command
  7193 ;;		_delay_ms
  7194 ;;		_delay_set_quartz
  7195 ;; This function is called by:
  7196 ;;		_inizializzazione
  7197 ;; This function uses a non-reentrant model
  7198 ;;
  7199                           
  7200                           	psect	text26
  7201  00290E                     __ptext26:
  7202                           	opt stack 0
  7203  00290E                     _LCD_initialize:
  7204                           	opt stack 24
  7205                           
  7206                           ;incstack = 0
  7207                           ;LCD_initialize@quartz_frequency stored from wreg
  7208  00290E  6E0F               	movwf	LCD_initialize@quartz_frequency,c
  7209                           
  7210                           ;src\LCD_44780.c: 285: delay_set_quartz (quartz_frequency);
  7211  002910  500F               	movf	LCD_initialize@quartz_frequency,w,c
  7212  002912  EC6C  F018         	call	_delay_set_quartz
  7213                           
  7214                           ;src\LCD_44780.c: 287: LATBbits.LATB1 = 0x00;
  7215  002916  928A               	bcf	3978,1,c	;volatile
  7216                           
  7217                           ;src\LCD_44780.c: 288: LATBbits.LATB3 = 0x00;
  7218  002918  968A               	bcf	3978,3,c	;volatile
  7219                           
  7220                           ;src\LCD_44780.c: 289: LATBbits.LATB2 = 0x00;
  7221  00291A  948A               	bcf	3978,2,c	;volatile
  7222                           
  7223                           ;src\LCD_44780.c: 291: delay_ms (100);
  7224  00291C  0E00               	movlw	0
  7225  00291E  6E08               	movwf	delay_ms@value_ms+1,c
  7226  002920  0E64               	movlw	100
  7227  002922  6E07               	movwf	delay_ms@value_ms,c
  7228  002924  ECA2  F017         	call	_delay_ms	;wreg free
  7229                           
  7230                           ;src\LCD_44780.c: 292: LCD_send_command (0,0,1,1);
  7231  002928  0E00               	movlw	0
  7232  00292A  6E09               	movwf	LCD_send_command@D2,c
  7233  00292C  0E01               	movlw	1
  7234  00292E  6E0A               	movwf	LCD_send_command@D1,c
  7235  002930  0E01               	movlw	1
  7236  002932  6E0B               	movwf	LCD_send_command@D0,c
  7237  002934  0E00               	movlw	0
  7238  002936  ECBE  F017         	call	_LCD_send_command
  7239                           
  7240                           ;src\LCD_44780.c: 293: delay_ms (100);
  7241  00293A  0E00               	movlw	0
  7242  00293C  6E08               	movwf	delay_ms@value_ms+1,c
  7243  00293E  0E64               	movlw	100
  7244  002940  6E07               	movwf	delay_ms@value_ms,c
  7245  002942  ECA2  F017         	call	_delay_ms	;wreg free
  7246                           
  7247                           ;src\LCD_44780.c: 294: LCD_send_command (0,0,1,1);
  7248  002946  0E00               	movlw	0
  7249  002948  6E09               	movwf	LCD_send_command@D2,c
  7250  00294A  0E01               	movlw	1
  7251  00294C  6E0A               	movwf	LCD_send_command@D1,c
  7252  00294E  0E01               	movlw	1
  7253  002950  6E0B               	movwf	LCD_send_command@D0,c
  7254  002952  0E00               	movlw	0
  7255  002954  ECBE  F017         	call	_LCD_send_command
  7256                           
  7257                           ;src\LCD_44780.c: 295: delay_ms (10);
  7258  002958  0E00               	movlw	0
  7259  00295A  6E08               	movwf	delay_ms@value_ms+1,c
  7260  00295C  0E0A               	movlw	10
  7261  00295E  6E07               	movwf	delay_ms@value_ms,c
  7262  002960  ECA2  F017         	call	_delay_ms	;wreg free
  7263                           
  7264                           ;src\LCD_44780.c: 296: LCD_send_command (0,0,1,1);
  7265  002964  0E00               	movlw	0
  7266  002966  6E09               	movwf	LCD_send_command@D2,c
  7267  002968  0E01               	movlw	1
  7268  00296A  6E0A               	movwf	LCD_send_command@D1,c
  7269  00296C  0E01               	movlw	1
  7270  00296E  6E0B               	movwf	LCD_send_command@D0,c
  7271  002970  0E00               	movlw	0
  7272  002972  ECBE  F017         	call	_LCD_send_command
  7273                           
  7274                           ;src\LCD_44780.c: 298: LCD_send_command (0,0,1,0);
  7275  002976  0E00               	movlw	0
  7276  002978  6E09               	movwf	LCD_send_command@D2,c
  7277  00297A  0E01               	movlw	1
  7278  00297C  6E0A               	movwf	LCD_send_command@D1,c
  7279  00297E  0E00               	movlw	0
  7280  002980  6E0B               	movwf	LCD_send_command@D0,c
  7281  002982  0E00               	movlw	0
  7282  002984  ECBE  F017         	call	_LCD_send_command
  7283                           
  7284                           ;src\LCD_44780.c: 300: LCD_send_command (0,0,1,0);
  7285  002988  0E00               	movlw	0
  7286  00298A  6E09               	movwf	LCD_send_command@D2,c
  7287  00298C  0E01               	movlw	1
  7288  00298E  6E0A               	movwf	LCD_send_command@D1,c
  7289  002990  0E00               	movlw	0
  7290  002992  6E0B               	movwf	LCD_send_command@D0,c
  7291  002994  0E00               	movlw	0
  7292  002996  ECBE  F017         	call	_LCD_send_command
  7293                           
  7294                           ;src\LCD_44780.c: 301: LCD_send_command (1,0,0,0);
  7295  00299A  0E00               	movlw	0
  7296  00299C  6E09               	movwf	LCD_send_command@D2,c
  7297  00299E  0E00               	movlw	0
  7298  0029A0  6E0A               	movwf	LCD_send_command@D1,c
  7299  0029A2  0E00               	movlw	0
  7300  0029A4  6E0B               	movwf	LCD_send_command@D0,c
  7301  0029A6  0E01               	movlw	1
  7302  0029A8  ECBE  F017         	call	_LCD_send_command
  7303                           
  7304                           ;src\LCD_44780.c: 303: LCD_send_command (0,0,0,0);
  7305  0029AC  0E00               	movlw	0
  7306  0029AE  6E09               	movwf	LCD_send_command@D2,c
  7307  0029B0  0E00               	movlw	0
  7308  0029B2  6E0A               	movwf	LCD_send_command@D1,c
  7309  0029B4  0E00               	movlw	0
  7310  0029B6  6E0B               	movwf	LCD_send_command@D0,c
  7311  0029B8  0E00               	movlw	0
  7312  0029BA  ECBE  F017         	call	_LCD_send_command
  7313                           
  7314                           ;src\LCD_44780.c: 304: LCD_send_command (1,0,0,0);
  7315  0029BE  0E00               	movlw	0
  7316  0029C0  6E09               	movwf	LCD_send_command@D2,c
  7317  0029C2  0E00               	movlw	0
  7318  0029C4  6E0A               	movwf	LCD_send_command@D1,c
  7319  0029C6  0E00               	movlw	0
  7320  0029C8  6E0B               	movwf	LCD_send_command@D0,c
  7321  0029CA  0E01               	movlw	1
  7322  0029CC  ECBE  F017         	call	_LCD_send_command
  7323                           
  7324                           ;src\LCD_44780.c: 306: LCD_send_command (0,0,0,0);
  7325  0029D0  0E00               	movlw	0
  7326  0029D2  6E09               	movwf	LCD_send_command@D2,c
  7327  0029D4  0E00               	movlw	0
  7328  0029D6  6E0A               	movwf	LCD_send_command@D1,c
  7329  0029D8  0E00               	movlw	0
  7330  0029DA  6E0B               	movwf	LCD_send_command@D0,c
  7331  0029DC  0E00               	movlw	0
  7332  0029DE  ECBE  F017         	call	_LCD_send_command
  7333                           
  7334                           ;src\LCD_44780.c: 307: LCD_send_command (0,0,0,1);
  7335  0029E2  0E00               	movlw	0
  7336  0029E4  6E09               	movwf	LCD_send_command@D2,c
  7337  0029E6  0E00               	movlw	0
  7338  0029E8  6E0A               	movwf	LCD_send_command@D1,c
  7339  0029EA  0E01               	movlw	1
  7340  0029EC  6E0B               	movwf	LCD_send_command@D0,c
  7341  0029EE  0E00               	movlw	0
  7342  0029F0  ECBE  F017         	call	_LCD_send_command
  7343                           
  7344                           ;src\LCD_44780.c: 309: LCD_send_command (0,0,0,0);
  7345  0029F4  0E00               	movlw	0
  7346  0029F6  6E09               	movwf	LCD_send_command@D2,c
  7347  0029F8  0E00               	movlw	0
  7348  0029FA  6E0A               	movwf	LCD_send_command@D1,c
  7349  0029FC  0E00               	movlw	0
  7350  0029FE  6E0B               	movwf	LCD_send_command@D0,c
  7351  002A00  0E00               	movlw	0
  7352  002A02  ECBE  F017         	call	_LCD_send_command
  7353                           
  7354                           ;src\LCD_44780.c: 310: LCD_send_command (0,1,1,0);
  7355  002A06  0E01               	movlw	1
  7356  002A08  6E09               	movwf	LCD_send_command@D2,c
  7357  002A0A  0E01               	movlw	1
  7358  002A0C  6E0A               	movwf	LCD_send_command@D1,c
  7359  002A0E  0E00               	movlw	0
  7360  002A10  6E0B               	movwf	LCD_send_command@D0,c
  7361  002A12  0E00               	movlw	0
  7362  002A14  ECBE  F017         	call	_LCD_send_command
  7363                           
  7364                           ;src\LCD_44780.c: 312: LCD_clear ();
  7365  002A18  EC16  F018         	call	_LCD_clear	;wreg free
  7366                           
  7367                           ;src\LCD_44780.c: 314: LCD_cursor (0,0);
  7368  002A1C  0E00               	movlw	0
  7369  002A1E  6E0D               	movwf	LCD_cursor@blinking,c
  7370  002A20  0E00               	movlw	0
  7371  002A22  EC02  F018         	call	_LCD_cursor
  7372  002A26  0012               	return		;funcret
  7373  002A28                     __end_of_LCD_initialize:
  7374                           	opt stack 0
  7375                           tblptru	equ	0xFF8
  7376                           tblptrh	equ	0xFF7
  7377                           tblptrl	equ	0xFF6
  7378                           tablat	equ	0xFF5
  7379                           prodh	equ	0xFF4
  7380                           prodl	equ	0xFF3
  7381                           postinc0	equ	0xFEE
  7382                           wreg	equ	0xFE8
  7383                           indf2	equ	0xFDF
  7384                           postinc2	equ	0xFDE
  7385                           postdec2	equ	0xFDD
  7386                           fsr2h	equ	0xFDA
  7387                           fsr2l	equ	0xFD9
  7388                           status	equ	0xFD8
  7389                           
  7390 ;; *************** function _delay_set_quartz *****************
  7391 ;; Defined at:
  7392 ;;		line 115 in file "../../LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
  7393 ;; Parameters:    Size  Location     Type
  7394 ;;  frequency       1    wreg     unsigned char 
  7395 ;; Auto vars:     Size  Location     Type
  7396 ;;  frequency       1    0[COMRAM] unsigned char 
  7397 ;; Return value:  Size  Location     Type
  7398 ;;		None               void
  7399 ;; Registers used:
  7400 ;;		wreg
  7401 ;; Tracked objects:
  7402 ;;		On entry : 0/0
  7403 ;;		On exit  : 0/0
  7404 ;;		Unchanged: 0/0
  7405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7406 ;;      Params:         0       0       0       0       0       0       0       0       0
  7407 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7408 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7409 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7410 ;;Total ram usage:        1 bytes
  7411 ;; Hardware stack levels used:    1
  7412 ;; This function calls:
  7413 ;;		Nothing
  7414 ;; This function is called by:
  7415 ;;		_LCD_initialize
  7416 ;;		_main
  7417 ;; This function uses a non-reentrant model
  7418 ;;
  7419                           
  7420                           	psect	text27
  7421  0030D8                     __ptext27:
  7422                           	opt stack 0
  7423  0030D8                     _delay_set_quartz:
  7424                           	opt stack 28
  7425                           
  7426                           ;incstack = 0
  7427                           ;delay_set_quartz@frequency stored from wreg
  7428  0030D8  6E01               	movwf	delay_set_quartz@frequency,c
  7429                           
  7430                           ;src\delay.c: 117: delay_quartz_frequency_value = frequency;
  7431  0030DA  C001  F05F         	movff	delay_set_quartz@frequency,_delay_quartz_frequency_value	;volatile
  7432  0030DE  0012               	return		;funcret
  7433  0030E0                     __end_of_delay_set_quartz:
  7434                           	opt stack 0
  7435                           tblptru	equ	0xFF8
  7436                           tblptrh	equ	0xFF7
  7437                           tblptrl	equ	0xFF6
  7438                           tablat	equ	0xFF5
  7439                           prodh	equ	0xFF4
  7440                           prodl	equ	0xFF3
  7441                           postinc0	equ	0xFEE
  7442                           wreg	equ	0xFE8
  7443                           indf2	equ	0xFDF
  7444                           postinc2	equ	0xFDE
  7445                           postdec2	equ	0xFDD
  7446                           fsr2h	equ	0xFDA
  7447                           fsr2l	equ	0xFD9
  7448                           status	equ	0xFD8
  7449                           
  7450 ;; *************** function _LCD_cursor *****************
  7451 ;; Defined at:
  7452 ;;		line 266 in file "../../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  7453 ;; Parameters:    Size  Location     Type
  7454 ;;  active          1    wreg     unsigned char 
  7455 ;;  blinking        1   12[COMRAM] unsigned char 
  7456 ;; Auto vars:     Size  Location     Type
  7457 ;;  active          1   13[COMRAM] unsigned char 
  7458 ;; Return value:  Size  Location     Type
  7459 ;;		None               void
  7460 ;; Registers used:
  7461 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7462 ;; Tracked objects:
  7463 ;;		On entry : 0/0
  7464 ;;		On exit  : 0/0
  7465 ;;		Unchanged: 0/0
  7466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7467 ;;      Params:         1       0       0       0       0       0       0       0       0
  7468 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7469 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7470 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7471 ;;Total ram usage:        2 bytes
  7472 ;; Hardware stack levels used:    1
  7473 ;; Hardware stack levels required when called:    4
  7474 ;; This function calls:
  7475 ;;		_LCD_send_command
  7476 ;; This function is called by:
  7477 ;;		_LCD_initialize
  7478 ;; This function uses a non-reentrant model
  7479 ;;
  7480                           
  7481                           	psect	text28
  7482  003004                     __ptext28:
  7483                           	opt stack 0
  7484  003004                     _LCD_cursor:
  7485                           	opt stack 24
  7486                           
  7487                           ;incstack = 0
  7488                           ;LCD_cursor@active stored from wreg
  7489  003004  6E0E               	movwf	LCD_cursor@active,c
  7490                           
  7491                           ;src\LCD_44780.c: 268: LCD_send_command (0,0,0,0);
  7492  003006  0E00               	movlw	0
  7493  003008  6E09               	movwf	LCD_send_command@D2,c
  7494  00300A  0E00               	movlw	0
  7495  00300C  6E0A               	movwf	LCD_send_command@D1,c
  7496  00300E  0E00               	movlw	0
  7497  003010  6E0B               	movwf	LCD_send_command@D0,c
  7498  003012  0E00               	movlw	0
  7499  003014  ECBE  F017         	call	_LCD_send_command
  7500                           
  7501                           ;src\LCD_44780.c: 269: LCD_send_command (1,1,active,blinking);
  7502  003018  0E01               	movlw	1
  7503  00301A  6E09               	movwf	LCD_send_command@D2,c
  7504  00301C  C00E  F00A         	movff	LCD_cursor@active,LCD_send_command@D1
  7505  003020  C00D  F00B         	movff	LCD_cursor@blinking,LCD_send_command@D0
  7506  003024  0E01               	movlw	1
  7507  003026  ECBE  F017         	call	_LCD_send_command
  7508  00302A  0012               	return		;funcret
  7509  00302C                     __end_of_LCD_cursor:
  7510                           	opt stack 0
  7511                           tblptru	equ	0xFF8
  7512                           tblptrh	equ	0xFF7
  7513                           tblptrl	equ	0xFF6
  7514                           tablat	equ	0xFF5
  7515                           prodh	equ	0xFF4
  7516                           prodl	equ	0xFF3
  7517                           postinc0	equ	0xFEE
  7518                           wreg	equ	0xFE8
  7519                           indf2	equ	0xFDF
  7520                           postinc2	equ	0xFDE
  7521                           postdec2	equ	0xFDD
  7522                           fsr2h	equ	0xFDA
  7523                           fsr2l	equ	0xFD9
  7524                           status	equ	0xFD8
  7525                           
  7526 ;; *************** function _LCD_clear *****************
  7527 ;; Defined at:
  7528 ;;		line 257 in file "../../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  7529 ;; Parameters:    Size  Location     Type
  7530 ;;		None
  7531 ;; Auto vars:     Size  Location     Type
  7532 ;;		None
  7533 ;; Return value:  Size  Location     Type
  7534 ;;		None               void
  7535 ;; Registers used:
  7536 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7537 ;; Tracked objects:
  7538 ;;		On entry : 0/0
  7539 ;;		On exit  : 0/0
  7540 ;;		Unchanged: 0/0
  7541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7542 ;;      Params:         0       0       0       0       0       0       0       0       0
  7543 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7544 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7545 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7546 ;;Total ram usage:        0 bytes
  7547 ;; Hardware stack levels used:    1
  7548 ;; Hardware stack levels required when called:    4
  7549 ;; This function calls:
  7550 ;;		_LCD_send_command
  7551 ;; This function is called by:
  7552 ;;		_LCD_initialize
  7553 ;;		_ricarica
  7554 ;;		_inizializzazione
  7555 ;; This function uses a non-reentrant model
  7556 ;;
  7557                           
  7558                           	psect	text29
  7559  00302C                     __ptext29:
  7560                           	opt stack 0
  7561  00302C                     _LCD_clear:
  7562                           	opt stack 25
  7563                           
  7564                           ;src\LCD_44780.c: 259: LCD_send_command (0,0,0,0);
  7565                           
  7566                           ;incstack = 0
  7567  00302C  0E00               	movlw	0
  7568  00302E  6E09               	movwf	LCD_send_command@D2,c
  7569  003030  0E00               	movlw	0
  7570  003032  6E0A               	movwf	LCD_send_command@D1,c
  7571  003034  0E00               	movlw	0
  7572  003036  6E0B               	movwf	LCD_send_command@D0,c
  7573  003038  0E00               	movlw	0
  7574  00303A  ECBE  F017         	call	_LCD_send_command
  7575                           
  7576                           ;src\LCD_44780.c: 260: LCD_send_command (0,0,0,1);
  7577  00303E  0E00               	movlw	0
  7578  003040  6E09               	movwf	LCD_send_command@D2,c
  7579  003042  0E00               	movlw	0
  7580  003044  6E0A               	movwf	LCD_send_command@D1,c
  7581  003046  0E01               	movlw	1
  7582  003048  6E0B               	movwf	LCD_send_command@D0,c
  7583  00304A  0E00               	movlw	0
  7584  00304C  ECBE  F017         	call	_LCD_send_command
  7585  003050  0012               	return		;funcret
  7586  003052                     __end_of_LCD_clear:
  7587                           	opt stack 0
  7588                           tblptru	equ	0xFF8
  7589                           tblptrh	equ	0xFF7
  7590                           tblptrl	equ	0xFF6
  7591                           tablat	equ	0xFF5
  7592                           prodh	equ	0xFF4
  7593                           prodl	equ	0xFF3
  7594                           postinc0	equ	0xFEE
  7595                           wreg	equ	0xFE8
  7596                           indf2	equ	0xFDF
  7597                           postinc2	equ	0xFDE
  7598                           postdec2	equ	0xFDD
  7599                           fsr2h	equ	0xFDA
  7600                           fsr2l	equ	0xFD9
  7601                           status	equ	0xFD8
  7602                           
  7603 ;; *************** function _LCD_send_command *****************
  7604 ;; Defined at:
  7605 ;;		line 61 in file "../../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  7606 ;; Parameters:    Size  Location     Type
  7607 ;;  D3              1    wreg     unsigned char 
  7608 ;;  D2              1    8[COMRAM] unsigned char 
  7609 ;;  D1              1    9[COMRAM] unsigned char 
  7610 ;;  D0              1   10[COMRAM] unsigned char 
  7611 ;; Auto vars:     Size  Location     Type
  7612 ;;  D3              1   11[COMRAM] unsigned char 
  7613 ;; Return value:  Size  Location     Type
  7614 ;;		None               void
  7615 ;; Registers used:
  7616 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7617 ;; Tracked objects:
  7618 ;;		On entry : 0/0
  7619 ;;		On exit  : 0/0
  7620 ;;		Unchanged: 0/0
  7621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7622 ;;      Params:         3       0       0       0       0       0       0       0       0
  7623 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7624 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7625 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7626 ;;Total ram usage:        4 bytes
  7627 ;; Hardware stack levels used:    1
  7628 ;; Hardware stack levels required when called:    3
  7629 ;; This function calls:
  7630 ;;		_LCD_enable_pulse
  7631 ;; This function is called by:
  7632 ;;		_LCD_goto_line
  7633 ;;		_LCD_write_char
  7634 ;;		_LCD_clear
  7635 ;;		_LCD_cursor
  7636 ;;		_LCD_initialize
  7637 ;;		_LCD_home
  7638 ;;		_LCD_shift
  7639 ;;		_LCD_shift_cursor
  7640 ;; This function uses a non-reentrant model
  7641 ;;
  7642                           
  7643                           	psect	text30
  7644  002F7C                     __ptext30:
  7645                           	opt stack 0
  7646  002F7C                     _LCD_send_command:
  7647                           	opt stack 24
  7648                           
  7649                           ;incstack = 0
  7650                           ;LCD_send_command@D3 stored from wreg
  7651  002F7C  6E0C               	movwf	LCD_send_command@D3,c
  7652                           
  7653                           ;src\LCD_44780.c: 63: LATBbits.LATB4 = D0;
  7654  002F7E  B00B               	btfsc	LCD_send_command@D0,0,c
  7655  002F80  D002               	bra	u2065
  7656  002F82  988A               	bcf	3978,4,c	;volatile
  7657  002F84  D001               	bra	u2066
  7658  002F86                     u2065:
  7659  002F86  888A               	bsf	3978,4,c	;volatile
  7660  002F88                     u2066:
  7661                           
  7662                           ;src\LCD_44780.c: 64: LATBbits.LATB5 = D1;
  7663  002F88  B00A               	btfsc	LCD_send_command@D1,0,c
  7664  002F8A  D002               	bra	u2075
  7665  002F8C  9A8A               	bcf	3978,5,c	;volatile
  7666  002F8E  D001               	bra	u2076
  7667  002F90                     u2075:
  7668  002F90  8A8A               	bsf	3978,5,c	;volatile
  7669  002F92                     u2076:
  7670                           
  7671                           ;src\LCD_44780.c: 65: LATBbits.LATB6 = D2;
  7672  002F92  B009               	btfsc	LCD_send_command@D2,0,c
  7673  002F94  D002               	bra	u2085
  7674  002F96  9C8A               	bcf	3978,6,c	;volatile
  7675  002F98  D001               	bra	u2086
  7676  002F9A                     u2085:
  7677  002F9A  8C8A               	bsf	3978,6,c	;volatile
  7678  002F9C                     u2086:
  7679                           
  7680                           ;src\LCD_44780.c: 66: LATBbits.LATB7 = D3;
  7681  002F9C  B00C               	btfsc	LCD_send_command@D3,0,c
  7682  002F9E  D002               	bra	u2095
  7683  002FA0  9E8A               	bcf	3978,7,c	;volatile
  7684  002FA2  D001               	bra	u2096
  7685  002FA4                     u2095:
  7686  002FA4  8E8A               	bsf	3978,7,c	;volatile
  7687  002FA6                     u2096:
  7688                           
  7689                           ;src\LCD_44780.c: 67: LCD_enable_pulse ();
  7690  002FA6  EC5D  F018         	call	_LCD_enable_pulse	;wreg free
  7691  002FAA  0012               	return		;funcret
  7692  002FAC                     __end_of_LCD_send_command:
  7693                           	opt stack 0
  7694                           tblptru	equ	0xFF8
  7695                           tblptrh	equ	0xFF7
  7696                           tblptrl	equ	0xFF6
  7697                           tablat	equ	0xFF5
  7698                           prodh	equ	0xFF4
  7699                           prodl	equ	0xFF3
  7700                           postinc0	equ	0xFEE
  7701                           wreg	equ	0xFE8
  7702                           indf2	equ	0xFDF
  7703                           postinc2	equ	0xFDE
  7704                           postdec2	equ	0xFDD
  7705                           fsr2h	equ	0xFDA
  7706                           fsr2l	equ	0xFD9
  7707                           status	equ	0xFD8
  7708                           
  7709 ;; *************** function _LCD_enable_pulse *****************
  7710 ;; Defined at:
  7711 ;;		line 49 in file "../../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  7712 ;; Parameters:    Size  Location     Type
  7713 ;;		None
  7714 ;; Auto vars:     Size  Location     Type
  7715 ;;		None
  7716 ;; Return value:  Size  Location     Type
  7717 ;;		None               void
  7718 ;; Registers used:
  7719 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7720 ;; Tracked objects:
  7721 ;;		On entry : 0/0
  7722 ;;		On exit  : 0/0
  7723 ;;		Unchanged: 0/0
  7724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7725 ;;      Params:         0       0       0       0       0       0       0       0       0
  7726 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7727 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7728 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7729 ;;Total ram usage:        0 bytes
  7730 ;; Hardware stack levels used:    1
  7731 ;; Hardware stack levels required when called:    2
  7732 ;; This function calls:
  7733 ;;		_delay_ms
  7734 ;; This function is called by:
  7735 ;;		_LCD_send_command
  7736 ;; This function uses a non-reentrant model
  7737 ;;
  7738                           
  7739                           	psect	text31
  7740  0030BA                     __ptext31:
  7741                           	opt stack 0
  7742  0030BA                     _LCD_enable_pulse:
  7743                           	opt stack 24
  7744                           
  7745                           ;src\LCD_44780.c: 51: LATBbits.LATB3 = 1;
  7746                           
  7747                           ;incstack = 0
  7748  0030BA  868A               	bsf	3978,3,c	;volatile
  7749                           
  7750                           ;src\LCD_44780.c: 52: delay_ms (1);
  7751  0030BC  0E00               	movlw	0
  7752  0030BE  6E08               	movwf	delay_ms@value_ms+1,c
  7753  0030C0  0E01               	movlw	1
  7754  0030C2  6E07               	movwf	delay_ms@value_ms,c
  7755  0030C4  ECA2  F017         	call	_delay_ms	;wreg free
  7756                           
  7757                           ;src\LCD_44780.c: 53: LATBbits.LATB3 = 0;
  7758  0030C8  968A               	bcf	3978,3,c	;volatile
  7759                           
  7760                           ;src\LCD_44780.c: 54: delay_ms (1);
  7761  0030CA  0E00               	movlw	0
  7762  0030CC  6E08               	movwf	delay_ms@value_ms+1,c
  7763  0030CE  0E01               	movlw	1
  7764  0030D0  6E07               	movwf	delay_ms@value_ms,c
  7765  0030D2  ECA2  F017         	call	_delay_ms	;wreg free
  7766  0030D6  0012               	return		;funcret
  7767  0030D8                     __end_of_LCD_enable_pulse:
  7768                           	opt stack 0
  7769                           tblptru	equ	0xFF8
  7770                           tblptrh	equ	0xFF7
  7771                           tblptrl	equ	0xFF6
  7772                           tablat	equ	0xFF5
  7773                           prodh	equ	0xFF4
  7774                           prodl	equ	0xFF3
  7775                           postinc0	equ	0xFEE
  7776                           wreg	equ	0xFE8
  7777                           indf2	equ	0xFDF
  7778                           postinc2	equ	0xFDE
  7779                           postdec2	equ	0xFDD
  7780                           fsr2h	equ	0xFDA
  7781                           fsr2l	equ	0xFD9
  7782                           status	equ	0xFD8
  7783                           
  7784 ;; *************** function _delay_ms *****************
  7785 ;; Defined at:
  7786 ;;		line 61 in file "../../LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
  7787 ;; Parameters:    Size  Location     Type
  7788 ;;  value_ms        2    6[COMRAM] unsigned int 
  7789 ;; Auto vars:     Size  Location     Type
  7790 ;;		None
  7791 ;; Return value:  Size  Location     Type
  7792 ;;		None               void
  7793 ;; Registers used:
  7794 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7795 ;; Tracked objects:
  7796 ;;		On entry : 0/0
  7797 ;;		On exit  : 0/0
  7798 ;;		Unchanged: 0/0
  7799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7800 ;;      Params:         2       0       0       0       0       0       0       0       0
  7801 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7802 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7803 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7804 ;;Total ram usage:        2 bytes
  7805 ;; Hardware stack levels used:    1
  7806 ;; Hardware stack levels required when called:    1
  7807 ;; This function calls:
  7808 ;;		___wmul
  7809 ;; This function is called by:
  7810 ;;		_LCD_enable_pulse
  7811 ;;		_LCD_initialize
  7812 ;;		_ricarica
  7813 ;;		_read_adc
  7814 ;;		_inizializzazione
  7815 ;;		_delay_s
  7816 ;; This function uses a non-reentrant model
  7817 ;;
  7818                           
  7819                           	psect	text32
  7820  002F44                     __ptext32:
  7821                           	opt stack 0
  7822  002F44                     _delay_ms:
  7823                           	opt stack 27
  7824                           
  7825                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
  7826                           
  7827                           ;incstack = 0
  7828  002F44  C05F  F001         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
  7829  002F48  6A02               	clrf	___wmul@multiplier+1,c
  7830  002F4A  C007  F003         	movff	delay_ms@value_ms,___wmul@multiplicand
  7831  002F4E  C008  F004         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
  7832  002F52  EC29  F018         	call	___wmul	;wreg free
  7833  002F56  C001  F091         	movff	?___wmul,_clock_counter_reference	;volatile
  7834  002F5A  C002  F092         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
  7835                           
  7836                           ;src\delay.c: 75: while (clock_counter_reference) {
  7837  002F5E  D007               	goto	l126
  7838  002F60                     l2356:
  7839                           
  7840                           ;src\delay.c: 85: _delay(240);
  7841  002F60  0E50               	movlw	80
  7842  002F62                     u4187:
  7843  002F62  2EE8               	decfsz	wreg,f,c
  7844  002F64  D7FE               	goto	u4187
  7845                           
  7846                           ;src\delay.c: 88: clock_counter_reference--;
  7847  002F66  0100               	movlb	0	; () banked
  7848  002F68  0791               	decf	_clock_counter_reference& (0+255),f,b	;volatile
  7849  002F6A  A0D8               	btfss	status,0,c
  7850  002F6C  0792               	decf	(_clock_counter_reference+1)& (0+255),f,b	;volatile
  7851  002F6E                     l126:
  7852  002F6E  0100               	movlb	0	; () banked
  7853  002F70  5191               	movf	_clock_counter_reference& (0+255),w,b	;volatile
  7854  002F72  0100               	movlb	0	; () banked
  7855  002F74  1192               	iorwf	(_clock_counter_reference+1)& (0+255),w,b	;volatile
  7856  002F76  B4D8               	btfsc	status,2,c
  7857  002F78  0012               	return	
  7858  002F7A  D7F2               	goto	l2356
  7859  002F7C                     __end_of_delay_ms:
  7860                           	opt stack 0
  7861                           tblptru	equ	0xFF8
  7862                           tblptrh	equ	0xFF7
  7863                           tblptrl	equ	0xFF6
  7864                           tablat	equ	0xFF5
  7865                           prodh	equ	0xFF4
  7866                           prodl	equ	0xFF3
  7867                           postinc0	equ	0xFEE
  7868                           wreg	equ	0xFE8
  7869                           indf2	equ	0xFDF
  7870                           postinc2	equ	0xFDE
  7871                           postdec2	equ	0xFDD
  7872                           fsr2h	equ	0xFDA
  7873                           fsr2l	equ	0xFD9
  7874                           status	equ	0xFD8
  7875                           
  7876 ;; *************** function ___wmul *****************
  7877 ;; Defined at:
  7878 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  7879 ;; Parameters:    Size  Location     Type
  7880 ;;  multiplier      2    0[COMRAM] unsigned int 
  7881 ;;  multiplicand    2    2[COMRAM] unsigned int 
  7882 ;; Auto vars:     Size  Location     Type
  7883 ;;  product         2    4[COMRAM] unsigned int 
  7884 ;; Return value:  Size  Location     Type
  7885 ;;                  2    0[COMRAM] unsigned int 
  7886 ;; Registers used:
  7887 ;;		wreg, status,2, status,0, prodl, prodh
  7888 ;; Tracked objects:
  7889 ;;		On entry : 0/0
  7890 ;;		On exit  : 0/0
  7891 ;;		Unchanged: 0/0
  7892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7893 ;;      Params:         4       0       0       0       0       0       0       0       0
  7894 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7895 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7896 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7897 ;;Total ram usage:        6 bytes
  7898 ;; Hardware stack levels used:    1
  7899 ;; This function calls:
  7900 ;;		Nothing
  7901 ;; This function is called by:
  7902 ;;		_delay_ms
  7903 ;;		_sprintf
  7904 ;; This function uses a non-reentrant model
  7905 ;;
  7906                           
  7907                           	psect	text33
  7908  003052                     __ptext33:
  7909                           	opt stack 0
  7910  003052                     ___wmul:
  7911                           	opt stack 28
  7912                           
  7913                           ; BSR set to: 0
  7914                           ;incstack = 0
  7915  003052  5001               	movf	___wmul@multiplier,w,c
  7916  003054  0203               	mulwf	___wmul@multiplicand,c
  7917  003056  CFF3 F005          	movff	prodl,___wmul@product
  7918  00305A  CFF4 F006          	movff	prodh,___wmul@product+1
  7919  00305E  5001               	movf	___wmul@multiplier,w,c
  7920  003060  0204               	mulwf	___wmul@multiplicand+1,c
  7921  003062  50F3               	movf	prodl,w,c
  7922  003064  2606               	addwf	___wmul@product+1,f,c
  7923  003066  5002               	movf	___wmul@multiplier+1,w,c
  7924  003068  0203               	mulwf	___wmul@multiplicand,c
  7925  00306A  50F3               	movf	prodl,w,c
  7926  00306C  2606               	addwf	___wmul@product+1,f,c
  7927  00306E  C005  F001         	movff	___wmul@product,?___wmul
  7928  003072  C006  F002         	movff	___wmul@product+1,?___wmul+1
  7929  003076  0012               	return	
  7930  003078                     __end_of___wmul:
  7931                           	opt stack 0
  7932                           tblptru	equ	0xFF8
  7933                           tblptrh	equ	0xFF7
  7934                           tblptrl	equ	0xFF6
  7935                           tablat	equ	0xFF5
  7936                           prodh	equ	0xFF4
  7937                           prodl	equ	0xFF3
  7938                           postinc0	equ	0xFEE
  7939                           wreg	equ	0xFE8
  7940                           indf2	equ	0xFDF
  7941                           postinc2	equ	0xFDE
  7942                           postdec2	equ	0xFDD
  7943                           fsr2h	equ	0xFDA
  7944                           fsr2l	equ	0xFD9
  7945                           status	equ	0xFD8
  7946                           tblptru	equ	0xFF8
  7947                           tblptrh	equ	0xFF7
  7948                           tblptrl	equ	0xFF6
  7949                           tablat	equ	0xFF5
  7950                           prodh	equ	0xFF4
  7951                           prodl	equ	0xFF3
  7952                           postinc0	equ	0xFEE
  7953                           wreg	equ	0xFE8
  7954                           indf2	equ	0xFDF
  7955                           postinc2	equ	0xFDE
  7956                           postdec2	equ	0xFDD
  7957                           fsr2h	equ	0xFDA
  7958                           fsr2l	equ	0xFD9
  7959                           status	equ	0xFD8
  7960                           
  7961                           	psect	rparam
  7962  0000                     tblptru	equ	0xFF8
  7963                           tblptrh	equ	0xFF7
  7964                           tblptrl	equ	0xFF6
  7965                           tablat	equ	0xFF5
  7966                           prodh	equ	0xFF4
  7967                           prodl	equ	0xFF3
  7968                           postinc0	equ	0xFEE
  7969                           wreg	equ	0xFE8
  7970                           indf2	equ	0xFDF
  7971                           postinc2	equ	0xFDE
  7972                           postdec2	equ	0xFDD
  7973                           fsr2h	equ	0xFDA
  7974                           fsr2l	equ	0xFD9
  7975                           status	equ	0xFD8


Data Sizes:
    Strings     56
    Constant    144
    Data        4
    BSS         28
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     90      95
    BANK0           160     25      58
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    sp__utoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(COMRAM[6]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_3(CODE[8]), STR_2(CODE[7]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 8
		 -> str(BANK0[8]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(COMRAM[6]), 

    LCD_write_string@buffer	PTR unsigned char  size(2) Largest target is 8
		 -> str(BANK0[8]), LCD_write_integer@convertedInt(COMRAM[6]), 

    LCD_write_message@buffer	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_5(CODE[7]), STR_4(CODE[17]), STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    _ricarica->_sprintf
    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___awdiv->___awmod
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _read_adc->___fldiv
    ___flmul->___awdiv
    ___fldiv->___flmul
    _LCD_write_string->_LCD_write_char
    _LCD_goto_line->_LCD_send_command
    _inizializzazione->_LCD_write_message
    _LCD_write_message->_LCD_write_char
    _LCD_write_char->_LCD_send_command
    _LCD_initialize->_LCD_cursor
    _LCD_cursor->_LCD_send_command
    _LCD_clear->_LCD_send_command
    _LCD_enable_pulse->_delay_ms
    _delay_ms->___wmul

Critical Paths under _main in BANK0

    _ricarica->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  121821
                            ___fldiv
                   _delay_set_quartz
                   _inizializzazione
                           _read_adc
                           _ricarica
 ---------------------------------------------------------------------------------
 (1) _ricarica                                             0     0      0   71840
                          _LCD_clear
                      _LCD_goto_line
                  _LCD_write_message
                   _LCD_write_string
                             ___flge
                           _delay_ms
                           _read_adc
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             43    35      8   30923
                                             80 COMRAM    10     2      8
                                              0 BANK0     25    25      0
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               13     9      4    7133
                                             39 COMRAM     9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              17    13      4    6935
                                             39 COMRAM    13     9      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1580
                                              6 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         17     9      8     431
                                              0 COMRAM    17     9      8
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          14     6      8     431
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     543
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     418
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     421
                                             48 COMRAM    10     6      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    2617
                                             72 COMRAM     8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    2342
                                             52 COMRAM    20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     109
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8    1078
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) _read_adc                                             3     3      0    7350
                                             64 COMRAM     3     3      0
                            ___fldiv
                            ___flmul
                           ___xxtofl
                           _delay_ms
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     514
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    3616
                                             14 COMRAM    25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    1817
                                             39 COMRAM    25    17      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCD_write_string                                     2     0      2    8098
                                             17 COMRAM     2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (2) _LCD_goto_line                                        1     1      0    7523
                                             12 COMRAM     1     1      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (1) _inizializzazione                                     0     0      0   40792
                          _LCD_clear
                     _LCD_initialize
                  _LCD_write_message
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _LCD_write_message                                    2     0      2    8098
                                             17 COMRAM     2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (3) _LCD_write_char                                       5     5      0    7861
                                             12 COMRAM     5     5      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_initialize                                       1     1      0   23924
                                             14 COMRAM     1     1      0
                          _LCD_clear
                         _LCD_cursor
                   _LCD_send_command
                           _delay_ms
                   _delay_set_quartz
 ---------------------------------------------------------------------------------
 (3) _delay_set_quartz                                     1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _LCD_cursor                                           2     1      1    7609
                                             12 COMRAM     2     1      1
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_clear                                            0     0      0    7501
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (4) _LCD_send_command                                     4     1      3    7501
                                              8 COMRAM     4     1      3
                   _LCD_enable_pulse
 ---------------------------------------------------------------------------------
 (5) _LCD_enable_pulse                                     0     0      0    1269
                           _delay_ms
 ---------------------------------------------------------------------------------
 (3) _delay_ms                                             2     0      2    1269
                                              6 COMRAM     2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     543
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___fldiv
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
   _delay_set_quartz
   _inizializzazione
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _delay_ms
       ___wmul
   _read_adc
     ___fldiv
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___flmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     ___xxtofl
     _delay_ms
       ___wmul
   _ricarica
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _LCD_write_string
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     ___flge
     _delay_ms
       ___wmul
     _read_adc
       ___fldiv
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___xxtofl
       _delay_ms
         ___wmul
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___flneg
       ___flsub
         ___fladd
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
       ___wmul
       ___xxtofl
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     19      3A       5       36.3%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5A      5F       1      100.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      99      20        0.0%
DATA                 0      0      99       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sun Feb 28 14:29:20 2016

                  ___fldiv@aexp 0040                    ___fldiv@bexp 003F       __size_of_delay_set_quartz 0008  
                  ___fldiv@sign 0034                    ___awdiv@sign 000C                     __CFG_BOR$ON 000000  
           ___wmul@multiplicand 0003                     __CFG_BORV$3 000000                    __CFG_CP0$OFF 000000  
                  __CFG_CP1$OFF 000000                    __CFG_CP2$OFF 000000                    __CFG_CP3$OFF 000000  
                           l126 2F6E                             l160 22E4                             l252 0E68  
                           l168 20D0                             l820 1D0A                             l477 27DC  
                           l581 26B4                             l670 2CB0                             l574 2626  
                           l831 1D76                             l487 28D2                             l575 264E  
                           l680 2DF6                             l850 1572                             l764 199A  
                           l781 1A88                             l765 1992                             l790 1AEC  
                           l766 1970                             l872 2482                             l867 180E  
                           l859 1788                             l886 253C                             l887 2550  
                           l879 2500                    __CFG_CPB$OFF 000000                    __CFG_CPD$OFF 000000  
                   ?_LCD_cursor 000D                             _str 0089                    ___awmod@sign 0006  
                           prod 000FF3                             wreg 000FE8                    __CFG_FOSC$HS 000000  
                  ___flmul@aexp 0020                    ___flmul@bexp 0021                    ___flmul@sign 001B  
                  ___flmul@temp 0026                    ___flmul@prod 0022                    __CFG_LVP$OFF 000000  
        __size_of_LCD_goto_line 00B8                    ___fltol@exp1 003A                    __CFG_WDT$OFF 000000  
                          l3012 1BAE                            l3112 1DDE                            l3032 1BEE  
                          l3008 1BAA                            l3200 2ACA                            l3122 1E14  
                          l3114 1DEC                            l3202 2AD6                            l3300 2B7A  
                          l3124 1E16                            l3116 1E08                            l3108 1DBA  
                          l3052 1C5C                            l3044 1C34                            l3028 1BEA  
                          l2420 18DA                            l2412 18BA                            l3204 2ADC  
                          l3220 2C6E                            l3310 2FF0                            l3302 2BA0  
                          l3070 1CE2                            l3062 1CBA                            l3150 2894  
                          l3142 2822                            l3230 2CA2                            l3222 2C72  
                          l2408 18B6                            l3208 2AF2                            l3240 2DC0  
                          l3306 2FDC                            l3314 307A                            l3082 1D20  
                          l2610 157E                            l3146 2856                            l2514 1AAC  
                          l2530 1ACC                            l2506 1A78                            l2450 1916  
                          l3218 2C62                            l3242 2DC4                            l3410 0920  
                          l3402 08F0                            l2356 2F60                            l3076 1D08  
                          l2604 155E                            l3156 290A                            l3164 2FC8  
                          l2540 1AE8                            l2524 1AC2                            l2532 1AD0  
                          l3500 0D06                            l3420 0980                            l3318 308C  
                          l2614 1590                            l2606 1562                            l3262 24B0  
                          l2550 1B32                            l2462 197E                            l3190 2AA2  
                          l3174 2A46                            l3246 2DE8                            l3238 2DB4  
                          l3502 0D0C                            l3414 095A                            l3088 1D3E  
                          l3264 24B6                            l3256 2492                            l2464 1982  
                          l2384 186E                            l2712 2BD0                            l3520 0D7C  
                          l3432 09C4                            l3424 0986                            l3416 0970  
                          l3098 1D72                            l3274 2526                            l3266 24C2  
                          l2562 1B60                            l2554 1B3E                            l3194 2AB2  
                          l3530 0E1E                            l3514 0D52                            l3442 0A16  
                          l3426 09AA                            l3276 2532                            l3268 24E8  
                          l3364 20B0                            l2564 1B62                            l2388 1872  
                          l2724 2BF6                            l2740 2C28                            l3294 2B08  
                          l2662 1750                            l2590 1532                            l3382 2140  
                          l2558 1B58                            l2486 19DA                            l2478 19B6  
                          l2726 2BFE                            l2718 2BE0                            l3550 0E9A  
                          l3542 0E6C                            l3518 0D76                            l3470 0B44  
                          l3296 2B2E                            l2672 1784                            l2656 1732  
                          l3288 2582                            l3368 20B8                            l2488 19DE  
                          l2496 19F0                            l2744 2C36                            l2736 2C1E  
                          l2728 2C02                            l2760 2CE2                            l2840 121C  
                          l3536 0E36                            l3528 0E10                            l3472 0B5A  
                          l3298 2B54                            l2682 17CC                            l2586 151E  
                          l2922 267A                            l2826 205E                            l2818 1F92  
                          l2850 12EA                            l3554 0EFC                            l3538 0E4A  
                          l3482 0BF6                            l3474 0B96                            l3466 0B16  
                          l3458 0A96                            l2588 1522                            l2932 26A2  
                          l2780 2D28                            l2772 2D10                            l2764 2CF0  
                          l2756 2CD6                            l3580 103A                            l3572 1006  
                          l3564 0FE0                            l3476 0BAC                            l3396 08D8  
                          l2686 17EA                            l2942 26E4                            l2934 26AE  
                          l2926 268A                            l2766 2CF8                            l2846 12C0  
                          l3566 0FEE                            l3486 0C24                            l3574 1014  
                          l3662 238A                            l2688 17F8                            l2768 2CFC  
                          l2776 2D1A                            l2864 14C8                            l3592 10AE  
                          l3584 105E                            l3496 0C8E                            l2698 182C  
                          l2970 2774                            l2962 2744                            l2858 1424  
                          l3594 10B2                            l2948 2702                            l2892 25EC  
                          l2876 30B2                            l3588 108A                            l3596 10CC  
                          l3748 2E5C                            l2982 27A2                            l2886 25C0  
                          l2992 27CA                            l2994 27D6                            l2986 27B2  
                          STR_1 0891                            STR_2 08C2                            STR_3 08B3  
                          STR_4 08A2                            STR_5 08BB                            u2200 1956  
                          u2210 1958                            _LATA 000F89                            _LATB 000F8A  
                          _LATC 000F8B                            u2065 2F86                            u2066 2F88  
                          u2075 2F90                            u2076 2F92                            u2085 2F9A  
                          u2086 2F9C                            u2190 1946                            u2095 2FA4  
                          u2096 2FA6                            u3250 1DC8                            u3350 2A64  
                          u2650 17DA                            u2570 16F4                            u3355 2A5A  
                          u2575 16EA                            u2911 25D0                            u4187 2F62  
                          u3840 0E60                            u2891 25A4                            _main 2E08  
     __size_of_LCD_send_command 0030                            fsr2h 000FDA                            indf2 000FDF  
                          fsr2l 000FD9                            prodh 000FF4                            prodl 000FF3  
                          start 0000                   __CFG_IESO$OFF 000000                 ___fldiv@new_exp 0039  
            __size_of_LCD_clear 0026                    _sprintf$1144 0060                   __CFG_MCLRE$ON 000000  
                  ___param_bank 000010        __end_of_LCD_enable_pulse 30D8         __size_of_LCD_initialize 011A  
                 __CFG_PLLDIV$1 000000                  __CFG_CCP2MX$ON 000000                   ___fltol@sign1 0039  
               __end_of___fladd 1B7E                           ?_main 0001                 __end_of___fldiv 1E32  
               __end_of___awdiv 2C40                 __end_of___flneg 2FDA                 __end_of___awmod 2D32  
               __end_of___flmul 1842                 __end_of___flsub 2F44                 __end_of___fltol 2B04  
               __end_of___lldiv 2CC2                 ___awdiv@divisor 0009                 __end_of___llmod 2E08  
               ___awdiv@counter 000B                   __CFG_USBDIV$1 000000                           _TRISA 000F92  
                         _TRISB 000F93                           _TRISC 000F94                   __CFG_PWRT$OFF 000000  
                 __CFG_WRT0$OFF 000000                   __CFG_WRT1$OFF 000000                   __CFG_WRT2$OFF 000000  
                 __CFG_WRT3$OFF 000000                  __CFG_EBTR0$OFF 000000                  __CFG_FCMEN$OFF 000000  
                __CFG_EBTR1$OFF 000000                  __CFG_EBTR2$OFF 000000                  __CFG_EBTR3$OFF 000000  
                 __CFG_WRTB$OFF 000000                   __CFG_WRTC$OFF 000000                   __CFG_WRTD$OFF 000000  
                __CFG_EBTRB$OFF 000000                 __end_of_dpowers 0891                           _scale 10DA  
               __end_of_isdigit 30BA                           tablat 000FF5                           status 000FD8  
               __end_of_sprintf 10DA                _inizializzazione 2EB4                  __CFG_PBADEN$ON 000000  
           __size_of_LCD_cursor 0028                 __initialization 2E66                    __end_of_main 2E66  
                 _LCD_goto_line 2B04               ?_LCD_write_string 0012                          ??_main 005B  
                 __activetblptr 000002              ??_LCD_write_string 0014            __size_of__tdiv_to_l_ 0132  
             __end_of_LCD_clear 3052          LCD_write_string@buffer 0012                          _ADCON0 000FC2  
                        _ADCON1 000FC1                          _ADCON2 000FC0                ___llmod@dividend 0001  
                        ?_scale 0028                          _ADRESH 000FC4                          _ADRESL 000FC3  
              ___awdiv@dividend 0007                __end_of___xxtofl 2594                __end_of_delay_ms 2F7C  
                __CFG_XINST$OFF 000000                __end_of__powers_ 0869                  ?_LCD_goto_line 0001  
                        ___flge 27EE                       ??___fladd 003D                _delay_set_quartz 30D8  
                        ___wmul 3052                       ??___fldiv 0030                       ??___awdiv 000B  
                     ??___flneg 0005                  __CFG_STVREN$ON 000000                       ??___awmod 0005  
                     ??___flmul 0017                       ??___flsub 0051                       ??___fltol 0035  
                     ??___lldiv 0009                       ??___llmod 0009         __size_of_LCD_write_char 0070  
              __end_of_read_adc 22DE                          _fround 1E32  LCD_initialize@quartz_frequency 000F  
                        clear_0 2E6C                ___awdiv@quotient 000D                 ___awmod@divisor 0003  
               ___awmod@counter 0005                __end_of_ricarica 2444                    __pdataCOMRAM 005F  
                     ??_isdigit 0001                    __mediumconst 0000                          tblptrh 000FF7  
                        tblptrl 000FF6                          tblptru 000FF8                       ??_sprintf 0059  
                    ___flge@ff1 0001                      ___flge@ff2 0005                    ___xxtofl@arg 000B  
                  ___xxtofl@exp 000A                    ___xxtofl@val 0001                      __accesstop 0060  
       __end_of__initialization 2EAA                      ___flneg@f1 0001                _LCD_send_command 2F7C  
                 ___rparam_used 000001                      ___fltol@f1 0031          LCD_write_integer@F4919 0079  
                __pcstackCOMRAM 0001                    __pidataBANK0 30E0                   __end_of_scale 14F2  
                _LCD_initialize 290E               _LCD_write_message 2FDA              ?_LCD_write_message 0012  
                    __div_to_l_ 26C6                    ??_LCD_cursor 000E                 __div_to_l_@exp1 000E  
           ??_LCD_write_message 0014                 __div_to_l_@cntr 000D                         ??_scale 002C  
               __div_to_l_@quot 0009                      __pbssBANK0 0079                   __div_to_l_@f1 0001  
                 __div_to_l_@f2 0005                 ??_LCD_goto_line 000D              __end_of_LCD_cursor 302C  
        __end_of_LCD_initialize 2A28                         ?___flge 0001                         ?___wmul 0001  
     __end_of_LCD_write_message 3004               ?_LCD_enable_pulse 0001                         ?_fround 0028  
            ??_LCD_enable_pulse 0009        __end_of_inizializzazione 2EFE                       ?___xxtofl 0001  
              LCD_cursor@active 000E                       ?_delay_ms 0007                 __CFG_VREGEN$OFF 000000  
                     ?_read_adc 0001                       ?_ricarica 0001               __end_of__npowers_ 0835  
                       __Hparam 0000                      _scale$1143 002C                         __Lparam 0000  
              delay_ms@value_ms 0007                 ?_LCD_initialize 0001                 __size_of___flge 0120  
                       ___fladd 1842                         ___fldiv 1B7E                         ___awdiv 2BBC  
                       ___flneg 2FAC                         ___awmod 2CC2                         ___flmul 14F2  
                       ___flsub 2EFE                         ___fltol 2A28                         ___lldiv 2C40  
               __size_of___wmul 0026                  _LCD_write_char 2D32                         ___llmod 2DA2  
                  __psmallconst 0800                         __pcinit 2E66                 __size_of_fround 027A  
                       __ramtop 0800             LCD_write_char@value 0011                         __ptext0 2E08  
                       __ptext1 22DE                         __ptext2 08CA                         __ptext3 10DA  
                       __ptext4 309C                         __ptext5 1E32                         __ptext6 2CC2  
                       __ptext7 2BBC                         __ptext8 2594                         __ptext9 26C6  
                   ?__div_to_l_ 0001                LCD_write_char@D0 0010                LCD_write_char@D1 000F  
              LCD_write_char@D2 000E                LCD_write_char@D3 000D                         _dpowers 0869  
                       _current 005B                         _isdigit 309C                      ??___xxtofl 0005  
              ___awmod@dividend 0001                         _lettura 007F                      ??_delay_ms 0009  
      __end_of_delay_set_quartz 30E0                         _sprintf 08CA                         _voltage 0085  
                     _LCD_clear 302C            end_of_initialization 2EAA       __size_of_LCD_write_string 0024  
                  _combinazioni 0097                   __Lmediumconst 0000                      ??_read_adc 0041  
                    ??_ricarica 005B                 ___lldiv@divisor 0005              LCD_cursor@blinking 000D  
               ___lldiv@counter 000D          __end_of_LCD_write_char 2DA2                         postdec2 000FDD  
                       postinc0 000FEE                         postinc2 000FDE      __size_of_LCD_write_message 002A  
                __tdiv_to_l_@f1 0001                  __tdiv_to_l_@f2 0005                   ??__tdiv_to_l_ 0009  
                     _PORTCbits 000F82        __end_of_LCD_send_command 2FAC                     ___fladd@grs 0048  
                 ___xxtofl@sign 0009                     ___fldiv@grs 003B                     ___fldiv@rem 0035  
                    ?_LCD_clear 0001         _clock_counter_reference 0091                     ___flmul@grs 001C  
           __size_of__div_to_l_ 0128                 ?_LCD_write_char 0001                  __end_of___flge 290E  
                __end_of___wmul 3078                   __pidataCOMRAM 30E3                  __end_of_fround 20AC  
           start_initialization 2E66             __end_of__tdiv_to_l_ 26C6                 ___llmod@divisor 0005  
               ___llmod@counter 0009                        ??___flge 0009                        ??___wmul 0005  
                   __pdataBANK0 0097                __CFG_LPT1OSC$OFF 000000                        ??_fround 002C  
                 sprintf@tmpval 006E                       ___fladd@a 0039                       ___fladd@b 0035  
                    fround@prec 0034                       ___fldiv@a 002C                       ___fldiv@b 0028  
             ?_inizializzazione 0001                       ___flmul@a 0013                       ___flmul@b 000F  
                   __pbssCOMRAM 005B                       ___flsub@a 004D                       ___flsub@b 0049  
                 __pcstackBANK0 0060              ??_inizializzazione 0014               __size_of___xxtofl 0150  
     __size_of_LCD_enable_pulse 001E               __size_of_delay_ms 0038                     ??_LCD_clear 000D  
       LCD_write_message@buffer 0012                _LCD_write_string 3078                     sprintf@flag 0066  
                   sprintf@fval 0074                     sprintf@prec 0072                ??_LCD_initialize 000F  
                     __pnvBANK0 0091       delay_set_quartz@frequency 0001               __size_of_read_adc 0232  
            LCD_send_command@D0 000B              LCD_send_command@D1 000A              LCD_send_command@D2 0009  
            LCD_send_command@D3 000C           __end_of_LCD_goto_line 2BBC               __size_of_ricarica 0166  
                      ?___fladd 0035                        ?___fldiv 0028                        ?___awdiv 0007  
                      ?___flneg 0001                        ?___awmod 0001                        ?___flmul 000F  
                      ?___flsub 0049                        ?___fltol 0031                        ?___lldiv 0001  
                      ?___llmod 0001                       __npowers_ 0801                     __tdiv_to_l_ 2594  
                  ??__div_to_l_ 0009                     __smallconst 0800                        ?_isdigit 0001  
                      ?_sprintf 0051                  __size_of_scale 0418               ?_delay_set_quartz 0001  
            ??_delay_set_quartz 0001                  ___wmul@product 0005                        _LATBbits 000F8A  
                      _LATCbits 000F8B    _delay_quartz_frequency_value 005F              __end_of__div_to_l_ 27EE  
              __CFG_WDTPS$32768 000000                      _ADCON0bits 000FC2               ___wmul@multiplier 0001  
             ?_LCD_send_command 0009              ??_LCD_send_command 000C                ??_LCD_write_char 000D  
             LCD_goto_line@line 000D                        __Hrparam 0000                        __Lrparam 0000  
                     read_adc@i 0043                __size_of___fladd 033C                __size_of___fldiv 02B4  
              __size_of___awdiv 0084                __size_of___flneg 002E                __size_of___awmod 0070  
              __size_of___flmul 0350                __size_of___flsub 0046                __size_of___fltol 00DC  
              __size_of___lldiv 0082                __size_of___llmod 0066                     _fround$1141 0030  
                   _fround$1142 002C                     _isdigit$768 0002                      sprintf@exp 006C  
                    sprintf@val 0068                        ___xxtofl 2444                __size_of_isdigit 001E  
                      _delay_ms 2F44                _LCD_enable_pulse 30BA                        __ptext10 2DA2  
                      __ptext11 2C40                        __ptext20 1B7E                        __ptext12 2A28  
                      __ptext21 3078                        __ptext13 2EFE                        __ptext30 2F7C  
                      __ptext22 2B04                        __ptext14 1842                        __ptext31 30BA  
                      __ptext23 2EB4                        __ptext15 2FAC                        __ptext32 2F44  
                      __ptext24 2FDA                        __ptext16 27EE                        __ptext33 3052  
                      __ptext25 2D32                        __ptext17 20AC                        __ptext26 290E  
                      __ptext18 2444                        __ptext27 30D8                        __ptext19 14F2  
                      __ptext28 3004                        __ptext29 302C                        __powers_ 0835  
              __size_of_sprintf 0810                        _read_adc 20AC                   __size_of_main 005E  
                      _ricarica 22DE                        _rapporto 0093        __end_of_LCD_write_string 309C  
         __CFG_CPUDIV$OSC1_PLL2 000000                      _LCD_cursor 3004                        isdigit@c 0003  
                      scale@scl 0030                       sprintf@ap 0064                __tdiv_to_l_@exp1 0011  
                     sprintf@sp 0051                __tdiv_to_l_@cntr 0010                __tdiv_to_l_@quot 000C  
              ___lldiv@dividend 0001       __size_of_inizializzazione 004A                    ?__tdiv_to_l_ 0001  
                      sprintf@c 0078                        sprintf@f 0053                ___lldiv@quotient 0009  
                 ___fladd@signs 0045                    ___fladd@aexp 0046                    ___fladd@bexp 0047  
