

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sat Apr 09 22:42:45 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    58                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    59                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    60                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    61  0000                     
    62                           	psect	idataCOMRAM
    63  00332E                     __pidataCOMRAM:
    64                           	opt stack 0
    65                           
    66                           ;initializer for _combinazioni
    67  00332E  01                 	db	1
    68  00332F  05                 	db	5
    69  003330  09                 	db	9
    70                           
    71                           ;initializer for _delay_quartz_frequency_value
    72  003331  10                 	db	16
    73                           
    74                           	psect	mediumconst
    75  007EE0                     __pmediumconst:
    76                           	opt stack 0
    77  007EE0  00                 	db	0
    78  007EE1                     __npowers_:
    79                           	opt stack 0
    80  007EE1  0000               	dw	0
    81  007EE3  3F80               	dw	16256
    82  007EE5  CCCD               	dw	52429
    83  007EE7  3DCC               	dw	15820
    84  007EE9  D70A               	dw	55050
    85  007EEB  3C23               	dw	15395
    86  007EED  126F               	dw	4719
    87  007EEF  3A83               	dw	14979
    88  007EF1  B717               	dw	46871
    89  007EF3  38D1               	dw	14545
    90  007EF5  C5AC               	dw	50604
    91  007EF7  3727               	dw	14119
    92  007EF9  37BD               	dw	14269
    93  007EFB  3586               	dw	13702
    94  007EFD  BF95               	dw	49045
    95  007EFF  33D6               	dw	13270
    96  007F01  CC77               	dw	52343
    97  007F03  322B               	dw	12843
    98  007F05  705F               	dw	28767
    99  007F07  3089               	dw	12425
   100  007F09  E6FF               	dw	59135
   101  007F0B  2EDB               	dw	11995
   102  007F0D  E508               	dw	58632
   103  007F0F  1E3C               	dw	7740
   104  007F11  4260               	dw	16992
   105  007F13  0DA2               	dw	3490
   106  007F15                     __end_of__npowers_:
   107                           	opt stack 0
   108  007F15                     __powers_:
   109                           	opt stack 0
   110  007F15  0000               	dw	0
   111  007F17  3F80               	dw	16256
   112  007F19  0000               	dw	0
   113  007F1B  4120               	dw	16672
   114  007F1D  0000               	dw	0
   115  007F1F  42C8               	dw	17096
   116  007F21  0000               	dw	0
   117  007F23  447A               	dw	17530
   118  007F25  4000               	dw	16384
   119  007F27  461C               	dw	17948
   120  007F29  5000               	dw	20480
   121  007F2B  47C3               	dw	18371
   122  007F2D  2400               	dw	9216
   123  007F2F  4974               	dw	18804
   124  007F31  9680               	dw	38528
   125  007F33  4B18               	dw	19224
   126  007F35  BC20               	dw	48160
   127  007F37  4CBE               	dw	19646
   128  007F39  6B28               	dw	27432
   129  007F3B  4E6E               	dw	20078
   130  007F3D  02F9               	dw	761
   131  007F3F  5015               	dw	20501
   132  007F41  78EC               	dw	30956
   133  007F43  60AD               	dw	24749
   134  007F45  F2CA               	dw	62154
   135  007F47  7149               	dw	29001
   136  007F49                     __end_of__powers_:
   137                           	opt stack 0
   138  007F49                     _dpowers:
   139                           	opt stack 0
   140  007F49  0001               	dw	1
   141  007F4B  0000               	dw	0
   142  007F4D  000A               	dw	10
   143  007F4F  0000               	dw	0
   144  007F51  0064               	dw	100
   145  007F53  0000               	dw	0
   146  007F55  03E8               	dw	1000
   147  007F57  0000               	dw	0
   148  007F59  2710               	dw	10000
   149  007F5B  0000               	dw	0
   150  007F5D  86A0               	dw	34464
   151  007F5F  0001               	dw	1
   152  007F61  4240               	dw	16960
   153  007F63  000F               	dw	15
   154  007F65  9680               	dw	38528
   155  007F67  0098               	dw	152
   156  007F69  E100               	dw	57600
   157  007F6B  05F5               	dw	1525
   158  007F6D  CA00               	dw	51712
   159  007F6F  3B9A               	dw	15258
   160  007F71                     __end_of_dpowers:
   161                           	opt stack 0
   162  007F71                     STR_15:
   163                           
   164                           ; BSR set to: 0
   165  007F71  43                 	db	67	;'C'
   166  007F72  69                 	db	105	;'i'
   167  007F73  63                 	db	99	;'c'
   168  007F74  6C                 	db	108	;'l'
   169  007F75  6F                 	db	111	;'o'
   170  007F76  20                 	db	32
   171  007F77  72                 	db	114	;'r'
   172  007F78  69                 	db	105	;'i'
   173  007F79  63                 	db	99	;'c'
   174  007F7A  61                 	db	97	;'a'
   175  007F7B  72                 	db	114	;'r'
   176  007F7C  69                 	db	105	;'i'
   177  007F7D  63                 	db	99	;'c'
   178  007F7E  61                 	db	97	;'a'
   179  007F7F  2E                 	db	46
   180  007F80  2E                 	db	46
   181  007F81  00                 	db	0
   182  007F82                     STR_8:
   183                           
   184                           ; BSR set to: 0
   185  007F82  62                 	db	98	;'b'
   186  007F83  61                 	db	97	;'a'
   187  007F84  74                 	db	116	;'t'
   188  007F85  74                 	db	116	;'t'
   189  007F86  65                 	db	101	;'e'
   190  007F87  72                 	db	114	;'r'
   191  007F88  69                 	db	105	;'i'
   192  007F89  61                 	db	97	;'a'
   193  007F8A  20                 	db	32
   194  007F8B  73                 	db	115	;'s'
   195  007F8C  63                 	db	99	;'c'
   196  007F8D  61                 	db	97	;'a'
   197  007F8E  72                 	db	114	;'r'
   198  007F8F  69                 	db	105	;'i'
   199  007F90  63                 	db	99	;'c'
   200  007F91  61                 	db	97	;'a'
   201  007F92  00                 	db	0
   202  007F93                     STR_18:
   203                           
   204                           ; BSR set to: 0
   205  007F93  43                 	db	67	;'C'
   206  007F94  61                 	db	97	;'a'
   207  007F95  72                 	db	114	;'r'
   208  007F96  69                 	db	105	;'i'
   209  007F97  63                 	db	99	;'c'
   210  007F98  61                 	db	97	;'a'
   211  007F99  20                 	db	32
   212  007F9A  74                 	db	116	;'t'
   213  007F9B  65                 	db	101	;'e'
   214  007F9C  72                 	db	114	;'r'
   215  007F9D  6D                 	db	109	;'m'
   216  007F9E  69                 	db	105	;'i'
   217  007F9F  6E                 	db	110	;'n'
   218  007FA0  61                 	db	97	;'a'
   219  007FA1  74                 	db	116	;'t'
   220  007FA2  61                 	db	97	;'a'
   221  007FA3  00                 	db	0
   222  007FA4                     STR_2:
   223                           
   224                           ; BSR set to: 0
   225  007FA4  70                 	db	112	;'p'
   226  007FA5  65                 	db	101	;'e'
   227  007FA6  72                 	db	114	;'r'
   228  007FA7  20                 	db	32
   229  007FA8  6E                 	db	110	;'n'
   230  007FA9  75                 	db	117	;'u'
   231  007FAA  6F                 	db	111	;'o'
   232  007FAB  76                 	db	118	;'v'
   233  007FAC  6F                 	db	111	;'o'
   234  007FAD  20                 	db	32
   235  007FAE  74                 	db	116	;'t'
   236  007FAF  65                 	db	101	;'e'
   237  007FB0  73                 	db	115	;'s'
   238  007FB1  74                 	db	116	;'t'
   239  007FB2  2E                 	db	46
   240  007FB3  00                 	db	0
   241  007FB4                     STR_19:
   242                           
   243                           ; BSR set to: 0
   244  007FB4  54                 	db	84	;'T'
   245  007FB5  45                 	db	69	;'E'
   246  007FB6  53                 	db	83	;'S'
   247  007FB7  54                 	db	84	;'T'
   248  007FB8  45                 	db	69	;'E'
   249  007FB9  52                 	db	82	;'R'
   250  007FBA  20                 	db	32
   251  007FBB  42                 	db	66	;'B'
   252  007FBC  41                 	db	65	;'A'
   253  007FBD  54                 	db	84	;'T'
   254  007FBE  54                 	db	84	;'T'
   255  007FBF  45                 	db	69	;'E'
   256  007FC0  52                 	db	82	;'R'
   257  007FC1  49                 	db	73	;'I'
   258  007FC2  45                 	db	69	;'E'
   259  007FC3  00                 	db	0
   260  007FC4                     STR_1:
   261                           
   262                           ; BSR set to: 0
   263  007FC4  53                 	db	83	;'S'
   264  007FC5  63                 	db	99	;'c'
   265  007FC6  6F                 	db	111	;'o'
   266  007FC7  6C                 	db	108	;'l'
   267  007FC8  6C                 	db	108	;'l'
   268  007FC9  65                 	db	101	;'e'
   269  007FCA  67                 	db	103	;'g'
   270  007FCB  61                 	db	97	;'a'
   271  007FCC  72                 	db	114	;'r'
   272  007FCD  65                 	db	101	;'e'
   273  007FCE  20                 	db	32
   274  007FCF  62                 	db	98	;'b'
   275  007FD0  61                 	db	97	;'a'
   276  007FD1  74                 	db	116	;'t'
   277  007FD2  74                 	db	116	;'t'
   278  007FD3  00                 	db	0
   279  007FD4                     STR_14:
   280                           
   281                           ; BSR set to: 0
   282  007FD4  45                 	db	69	;'E'
   283  007FD5  52                 	db	82	;'R'
   284  007FD6  52                 	db	82	;'R'
   285  007FD7  4F                 	db	79	;'O'
   286  007FD8  52                 	db	82	;'R'
   287  007FD9  45                 	db	69	;'E'
   288  007FDA  21                 	db	33
   289  007FDB  21                 	db	33
   290  007FDC  00                 	db	0
   291  007FDD                     STR_7:
   292                           
   293                           ; BSR set to: 0
   294  007FDD  20                 	db	32
   295  007FDE  49                 	db	73	;'I'
   296  007FDF  3A                 	db	58	;':'
   297  007FE0  25                 	db	37
   298  007FE1  2E                 	db	46
   299  007FE2  33                 	db	51	;'3'
   300  007FE3  66                 	db	102	;'f'
   301  007FE4  00                 	db	0
   302  007FE5                     STR_3:
   303                           
   304                           ; BSR set to: 0
   305  007FE5  74                 	db	116	;'t'
   306  007FE6  65                 	db	101	;'e'
   307  007FE7  6D                 	db	109	;'m'
   308  007FE8  70                 	db	112	;'p'
   309  007FE9  6F                 	db	111	;'o'
   310  007FEA  3A                 	db	58	;':'
   311  007FEB  00                 	db	0
   312  007FEC                     STR_6:
   313                           
   314                           ; BSR set to: 0
   315  007FEC  56                 	db	86	;'V'
   316  007FED  3A                 	db	58	;':'
   317  007FEE  25                 	db	37
   318  007FEF  2E                 	db	46
   319  007FF0  33                 	db	51	;'3'
   320  007FF1  66                 	db	102	;'f'
   321  007FF2  00                 	db	0
   322  007FF3                     STR_10:
   323                           
   324                           ; BSR set to: 0
   325  007FF3  25                 	db	37
   326  007FF4  2E                 	db	46
   327  007FF5  32                 	db	50	;'2'
   328  007FF6  66                 	db	102	;'f'
   329  007FF7  00                 	db	0
   330  007FF8                     STR_9:
   331                           
   332                           ; BSR set to: 0
   333  007FF8  43                 	db	67	;'C'
   334  007FF9  3A                 	db	58	;':'
   335  007FFA  00                 	db	0
   336  007FFB                     STR_11:
   337                           
   338                           ; BSR set to: 0
   339  007FFB  41                 	db	65	;'A'
   340  007FFC  68                 	db	104	;'h'
   341  007FFD  00                 	db	0
   342  0000                     
   343                           ; #config settings
   344  007FFE  00                 	db	0	; dummy byte at the end
   345  0000                     
   346                           	psect	nvCOMRAM
   347  000043                     __pnvCOMRAM:
   348                           	opt stack 0
   349  000043                     _clock_counter_reference:
   350                           	opt stack 0
   351  000043                     	ds	2
   352  000045                     _rapporto:
   353                           	opt stack 0
   354  000045                     	ds	4
   355  0000                     _ADCON0	set	4034
   356  0000                     _ADCON0bits	set	4034
   357  0000                     _ADCON1	set	4033
   358  0000                     _ADCON2	set	4032
   359  0000                     _ADRESH	set	4036
   360  0000                     _ADRESL	set	4035
   361  0000                     _INTCONbits	set	4082
   362  0000                     _LATA	set	3977
   363  0000                     _LATAbits	set	3977
   364  0000                     _LATB	set	3978
   365  0000                     _LATC	set	3979
   366  0000                     _PORTBbits	set	3969
   367  0000                     _PORTCbits	set	3970
   368  0000                     _T0CON	set	4053
   369  0000                     _TMR0H	set	4055
   370  0000                     _TMR0L	set	4054
   371  0000                     _TRISA	set	3986
   372  0000                     _TRISB	set	3987
   373  0000                     _TRISC	set	3988
   374                           
   375                           	psect	cinit
   376  00308C                     __pcinit:
   377                           	opt stack 0
   378  00308C                     start_initialization:
   379                           	opt stack 0
   380  00308C                     __initialization:
   381                           	opt stack 0
   382                           
   383                           ; Clear objects allocated to BANK0 (52 bytes)
   384  00308C  EE00  F0A7         	lfsr	0,__pbssBANK0
   385  003090  0E34               	movlw	52
   386  003092                     clear_0:
   387  003092  6AEE               	clrf	postinc0,c
   388  003094  06E8               	decf	wreg,f,c
   389  003096  E1FD               	bnz	clear_0
   390                           
   391                           ; Clear objects allocated to COMRAM (4 bytes)
   392  003098  6A4C               	clrf	(__pbssCOMRAM+3)& (0+255),c
   393  00309A  6A4B               	clrf	(__pbssCOMRAM+2)& (0+255),c
   394  00309C  6A4A               	clrf	(__pbssCOMRAM+1)& (0+255),c
   395  00309E  6A49               	clrf	__pbssCOMRAM& (0+255),c
   396                           
   397                           ; Initialize objects allocated to COMRAM (4 bytes)
   398                           ; load TBLPTR registers with __pidataCOMRAM
   399  0030A0  0E2E               	movlw	low __pidataCOMRAM
   400  0030A2  6EF6               	movwf	tblptrl,c
   401  0030A4  0E33               	movlw	high __pidataCOMRAM
   402  0030A6  6EF7               	movwf	tblptrh,c
   403  0030A8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   404  0030AA  6EF8               	movwf	tblptru,c
   405  0030AC  EE00  F04D         	lfsr	0,__pdataCOMRAM
   406  0030B0  EE10 F004          	lfsr	1,4
   407  0030B4                     copy_data0:
   408  0030B4  0009               	tblrd		*+
   409  0030B6  CFF5 FFEE          	movff	tablat,postinc0
   410  0030BA  50E5               	movf	postdec1,w,c
   411  0030BC  50E1               	movf	fsr1l,w,c
   412  0030BE  E1FA               	bnz	copy_data0
   413  0030C0                     end_of_initialization:
   414                           	opt stack 0
   415  0030C0                     __end_of__initialization:
   416                           	opt stack 0
   417  0030C0  9051               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   418  0030C2  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   419  0030C4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   420  0030C6  6EF8               	movwf	tblptru,c
   421  0030C8  0100               	movlb	0
   422  0030CA  EF98  F015         	goto	_main	;jump to C main() function
   423                           tblptru	equ	0xFF8
   424                           tblptrh	equ	0xFF7
   425                           tblptrl	equ	0xFF6
   426                           tablat	equ	0xFF5
   427                           postinc0	equ	0xFEE
   428                           wreg	equ	0xFE8
   429                           postdec1	equ	0xFE5
   430                           fsr1l	equ	0xFE1
   431                           
   432                           	psect	bssCOMRAM
   433  000049                     __pbssCOMRAM:
   434                           	opt stack 0
   435  000049                     _voltage:
   436                           	opt stack 0
   437  000049                     	ds	4
   438                           tblptru	equ	0xFF8
   439                           tblptrh	equ	0xFF7
   440                           tblptrl	equ	0xFF6
   441                           tablat	equ	0xFF5
   442                           postinc0	equ	0xFEE
   443                           wreg	equ	0xFE8
   444                           postdec1	equ	0xFE5
   445                           fsr1l	equ	0xFE1
   446                           
   447                           	psect	dataCOMRAM
   448  00004D                     __pdataCOMRAM:
   449                           	opt stack 0
   450  00004D                     _combinazioni:
   451                           	opt stack 0
   452  00004D                     	ds	3
   453  000050                     _delay_quartz_frequency_value:
   454                           	opt stack 0
   455  000050                     	ds	1
   456                           tblptru	equ	0xFF8
   457                           tblptrh	equ	0xFF7
   458                           tblptrl	equ	0xFF6
   459                           tablat	equ	0xFF5
   460                           postinc0	equ	0xFEE
   461                           wreg	equ	0xFE8
   462                           postdec1	equ	0xFE5
   463                           fsr1l	equ	0xFE1
   464                           
   465                           	psect	bssBANK0
   466  0000A7                     __pbssBANK0:
   467                           	opt stack 0
   468  0000A7                     _lettura:
   469                           	opt stack 0
   470  0000A7                     	ds	12
   471  0000B3                     LCD_write_integer@F4919:
   472                           	opt stack 0
   473  0000B3                     	ds	6
   474  0000B9                     _current:
   475                           	opt stack 0
   476  0000B9                     	ds	4
   477  0000BD                     _sommatoriaCorrente:
   478                           	opt stack 0
   479  0000BD                     	ds	4
   480  0000C1                     _tempo:
   481                           	opt stack 0
   482  0000C1                     	ds	4
   483  0000C5                     _tempo_delay:
   484                           	opt stack 0
   485  0000C5                     	ds	4
   486  0000C9                     _tempo_old:
   487                           	opt stack 0
   488  0000C9                     	ds	4
   489  0000CD                     _minuti:
   490                           	opt stack 0
   491  0000CD                     	ds	2
   492  0000CF                     _ore:
   493                           	opt stack 0
   494  0000CF                     	ds	2
   495  0000D1                     _secondi:
   496                           	opt stack 0
   497  0000D1                     	ds	2
   498  0000D3                     _str:
   499                           	opt stack 0
   500  0000D3                     	ds	8
   501                           tblptru	equ	0xFF8
   502                           tblptrh	equ	0xFF7
   503                           tblptrl	equ	0xFF6
   504                           tablat	equ	0xFF5
   505                           postinc0	equ	0xFEE
   506                           wreg	equ	0xFE8
   507                           postdec1	equ	0xFE5
   508                           fsr1l	equ	0xFE1
   509                           
   510                           	psect	cstackBANK0
   511  000060                     __pcstackBANK0:
   512                           	opt stack 0
   513  000060                     ??___fltol:
   514  000060                     ?___fladd:
   515                           	opt stack 0
   516  000060                     ___fldiv@sign:
   517                           	opt stack 0
   518  000060                     ___fladd@b:
   519                           	opt stack 0
   520                           
   521                           ; 4 bytes @ 0x0
   522  000060                     	ds	1
   523  000061                     ___fldiv@rem:
   524                           	opt stack 0
   525                           
   526                           ; 4 bytes @ 0x1
   527  000061                     	ds	3
   528  000064                     ___fltol@sign1:
   529                           	opt stack 0
   530  000064                     ___fladd@a:
   531                           	opt stack 0
   532                           
   533                           ; 4 bytes @ 0x4
   534  000064                     	ds	1
   535  000065                     ___fltol@exp1:
   536                           	opt stack 0
   537  000065                     ___fldiv@new_exp:
   538                           	opt stack 0
   539                           
   540                           ; 2 bytes @ 0x5
   541  000065                     	ds	2
   542  000067                     ___fldiv@grs:
   543                           	opt stack 0
   544                           
   545                           ; 4 bytes @ 0x7
   546  000067                     	ds	1
   547  000068                     ??___fladd:
   548                           
   549                           ; 0 bytes @ 0x8
   550  000068                     	ds	3
   551  00006B                     ___fldiv@bexp:
   552                           	opt stack 0
   553                           
   554                           ; 1 bytes @ 0xB
   555  00006B                     	ds	1
   556  00006C                     ___fldiv@aexp:
   557                           	opt stack 0
   558                           
   559                           ; 1 bytes @ 0xC
   560  00006C                     	ds	1
   561  00006D                     ??_read_adc:
   562                           
   563                           ; 0 bytes @ 0xD
   564  00006D                     	ds	3
   565  000070                     ___fladd@signs:
   566                           	opt stack 0
   567                           
   568                           ; 1 bytes @ 0x10
   569  000070                     	ds	1
   570  000071                     ___fladd@aexp:
   571                           	opt stack 0
   572                           
   573                           ; 1 bytes @ 0x11
   574  000071                     	ds	1
   575  000072                     ___fladd@bexp:
   576                           	opt stack 0
   577                           
   578                           ; 1 bytes @ 0x12
   579  000072                     	ds	1
   580  000073                     ___fladd@grs:
   581                           	opt stack 0
   582                           
   583                           ; 1 bytes @ 0x13
   584  000073                     	ds	1
   585  000074                     ?___flsub:
   586                           	opt stack 0
   587  000074                     ___flsub@b:
   588                           	opt stack 0
   589                           
   590                           ; 4 bytes @ 0x14
   591  000074                     	ds	4
   592  000078                     ___flsub@a:
   593                           	opt stack 0
   594                           
   595                           ; 4 bytes @ 0x18
   596  000078                     	ds	4
   597  00007C                     ?_sprintf:
   598                           	opt stack 0
   599  00007C                     sprintf@sp:
   600                           	opt stack 0
   601                           
   602                           ; 2 bytes @ 0x1C
   603  00007C                     	ds	2
   604  00007E                     sprintf@f:
   605                           	opt stack 0
   606                           
   607                           ; 2 bytes @ 0x1E
   608  00007E                     	ds	6
   609  000084                     ??_sprintf:
   610                           
   611                           ; 0 bytes @ 0x24
   612  000084                     	ds	2
   613  000086                     _sprintf$1261:
   614                           	opt stack 0
   615                           
   616                           ; 4 bytes @ 0x26
   617  000086                     	ds	4
   618  00008A                     sprintf@ap:
   619                           	opt stack 0
   620                           
   621                           ; 2 bytes @ 0x2A
   622  00008A                     	ds	2
   623  00008C                     sprintf@flag:
   624                           	opt stack 0
   625                           
   626                           ; 2 bytes @ 0x2C
   627  00008C                     	ds	2
   628  00008E                     sprintf@val:
   629                           	opt stack 0
   630                           
   631                           ; 4 bytes @ 0x2E
   632  00008E                     	ds	4
   633  000092                     sprintf@exp:
   634                           	opt stack 0
   635                           
   636                           ; 2 bytes @ 0x32
   637  000092                     	ds	2
   638  000094                     sprintf@tmpval:
   639                           	opt stack 0
   640                           
   641                           ; 4 bytes @ 0x34
   642  000094                     	ds	4
   643  000098                     sprintf@prec:
   644                           	opt stack 0
   645                           
   646                           ; 2 bytes @ 0x38
   647  000098                     	ds	2
   648  00009A                     sprintf@fval:
   649                           	opt stack 0
   650                           
   651                           ; 4 bytes @ 0x3A
   652  00009A                     	ds	4
   653  00009E                     sprintf@c:
   654                           	opt stack 0
   655                           
   656                           ; 1 bytes @ 0x3E
   657  00009E                     	ds	1
   658  00009F                     ??_scarica:
   659                           
   660                           ; 0 bytes @ 0x3F
   661  00009F                     	ds	8
   662                           tblptru	equ	0xFF8
   663                           tblptrh	equ	0xFF7
   664                           tblptrl	equ	0xFF6
   665                           tablat	equ	0xFF5
   666                           postinc0	equ	0xFEE
   667                           wreg	equ	0xFE8
   668                           postdec1	equ	0xFE5
   669                           fsr1l	equ	0xFE1
   670                           
   671                           	psect	cstackCOMRAM
   672  000001                     __pcstackCOMRAM:
   673                           	opt stack 0
   674  000001                     ??_isr_alta:
   675  000001                     
   676                           ; 0 bytes @ 0x0
   677  000001                     	ds	14
   678  00000F                     ??_isdigit:
   679  00000F                     ?___wmul:
   680                           	opt stack 0
   681  00000F                     ?___awmod:
   682                           	opt stack 0
   683  00000F                     ?___lwdiv:
   684                           	opt stack 0
   685  00000F                     ?___lwmod:
   686                           	opt stack 0
   687  00000F                     ?__tdiv_to_l_:
   688                           	opt stack 0
   689  00000F                     ?__div_to_l_:
   690                           	opt stack 0
   691  00000F                     ?___flneg:
   692                           	opt stack 0
   693  00000F                     ?___lldiv:
   694                           	opt stack 0
   695  00000F                     ?___llmod:
   696                           	opt stack 0
   697  00000F                     delay_set_quartz@frequency:
   698                           	opt stack 0
   699  00000F                     ___wmul@multiplier:
   700                           	opt stack 0
   701  00000F                     ___awmod@dividend:
   702                           	opt stack 0
   703  00000F                     ___lwdiv@dividend:
   704                           	opt stack 0
   705  00000F                     ___lwmod@dividend:
   706                           	opt stack 0
   707  00000F                     __div_to_l_@f1:
   708                           	opt stack 0
   709  00000F                     ___flge@ff1:
   710                           	opt stack 0
   711  00000F                     ___flneg@f1:
   712                           	opt stack 0
   713  00000F                     __tdiv_to_l_@f1:
   714                           	opt stack 0
   715  00000F                     ___lldiv@dividend:
   716                           	opt stack 0
   717  00000F                     ___llmod@dividend:
   718                           	opt stack 0
   719                           
   720                           ; 4 bytes @ 0xE
   721  00000F                     	ds	1
   722  000010                     _isdigit$885:
   723                           	opt stack 0
   724                           
   725                           ; 1 bytes @ 0xF
   726  000010                     	ds	1
   727  000011                     isdigit@c:
   728                           	opt stack 0
   729  000011                     ___wmul@multiplicand:
   730                           	opt stack 0
   731  000011                     ___awmod@divisor:
   732                           	opt stack 0
   733  000011                     ___lwdiv@divisor:
   734                           	opt stack 0
   735  000011                     ___lwmod@divisor:
   736                           	opt stack 0
   737                           
   738                           ; 2 bytes @ 0x10
   739  000011                     	ds	2
   740  000013                     ___awmod@counter:
   741                           	opt stack 0
   742  000013                     ___lwmod@counter:
   743                           	opt stack 0
   744  000013                     ___wmul@product:
   745                           	opt stack 0
   746  000013                     ___lwdiv@quotient:
   747                           	opt stack 0
   748  000013                     __div_to_l_@f2:
   749                           	opt stack 0
   750  000013                     ___flge@ff2:
   751                           	opt stack 0
   752  000013                     __tdiv_to_l_@f2:
   753                           	opt stack 0
   754  000013                     ___lldiv@divisor:
   755                           	opt stack 0
   756  000013                     ___llmod@divisor:
   757                           	opt stack 0
   758                           
   759                           ; 4 bytes @ 0x12
   760  000013                     	ds	1
   761  000014                     ___awmod@sign:
   762                           	opt stack 0
   763                           
   764                           ; 1 bytes @ 0x13
   765  000014                     	ds	1
   766  000015                     ?___awdiv:
   767                           	opt stack 0
   768  000015                     ?___xxtofl:
   769                           	opt stack 0
   770  000015                     ___lwdiv@counter:
   771                           	opt stack 0
   772  000015                     delay_ms@value_ms:
   773                           	opt stack 0
   774  000015                     ___awdiv@dividend:
   775                           	opt stack 0
   776  000015                     ___xxtofl@val:
   777                           	opt stack 0
   778                           
   779                           ; 4 bytes @ 0x14
   780  000015                     	ds	1
   781  000016                     utoa@buf:
   782                           	opt stack 0
   783                           
   784                           ; 2 bytes @ 0x15
   785  000016                     	ds	1
   786  000017                     ??__tdiv_to_l_:
   787  000017                     ??___flge:
   788  000017                     LCD_send_command@D2:
   789                           	opt stack 0
   790  000017                     delay_s@value_s:
   791                           	opt stack 0
   792  000017                     ___llmod@counter:
   793                           	opt stack 0
   794  000017                     ___awdiv@divisor:
   795                           	opt stack 0
   796  000017                     __div_to_l_@quot:
   797                           	opt stack 0
   798  000017                     ___lldiv@quotient:
   799                           	opt stack 0
   800                           
   801                           ; 4 bytes @ 0x16
   802  000017                     	ds	1
   803  000018                     LCD_send_command@D1:
   804                           	opt stack 0
   805  000018                     delay_s@repeat_loop:
   806                           	opt stack 0
   807  000018                     utoa@val:
   808                           	opt stack 0
   809                           
   810                           ; 2 bytes @ 0x17
   811  000018                     	ds	1
   812  000019                     ??___xxtofl:
   813  000019                     LCD_send_command@D0:
   814                           	opt stack 0
   815  000019                     ___awdiv@counter:
   816                           	opt stack 0
   817                           
   818                           ; 1 bytes @ 0x18
   819  000019                     	ds	1
   820  00001A                     LCD_send_command@D3:
   821                           	opt stack 0
   822  00001A                     ___awdiv@sign:
   823                           	opt stack 0
   824  00001A                     utoa@base:
   825                           	opt stack 0
   826  00001A                     __tdiv_to_l_@quot:
   827                           	opt stack 0
   828                           
   829                           ; 4 bytes @ 0x19
   830  00001A                     	ds	1
   831  00001B                     LCD_goto_line@line:
   832                           	opt stack 0
   833  00001B                     LCD_write_char@D3:
   834                           	opt stack 0
   835  00001B                     LCD_cursor@blinking:
   836                           	opt stack 0
   837  00001B                     __div_to_l_@cntr:
   838                           	opt stack 0
   839  00001B                     ___lldiv@counter:
   840                           	opt stack 0
   841  00001B                     ___awdiv@quotient:
   842                           	opt stack 0
   843                           
   844                           ; 2 bytes @ 0x1A
   845  00001B                     	ds	1
   846  00001C                     LCD_write_char@D2:
   847                           	opt stack 0
   848  00001C                     LCD_cursor@active:
   849                           	opt stack 0
   850  00001C                     __div_to_l_@exp1:
   851                           	opt stack 0
   852  00001C                     utoa@v:
   853                           	opt stack 0
   854                           
   855                           ; 2 bytes @ 0x1B
   856  00001C                     	ds	1
   857  00001D                     ?___flmul:
   858                           	opt stack 0
   859  00001D                     LCD_write_char@D1:
   860                           	opt stack 0
   861  00001D                     LCD_initialize@quartz_frequency:
   862                           	opt stack 0
   863  00001D                     ___xxtofl@sign:
   864                           	opt stack 0
   865  00001D                     ___flmul@b:
   866                           	opt stack 0
   867                           
   868                           ; 4 bytes @ 0x1C
   869  00001D                     	ds	1
   870  00001E                     LCD_write_char@D0:
   871                           	opt stack 0
   872  00001E                     __tdiv_to_l_@cntr:
   873                           	opt stack 0
   874  00001E                     utoa@c:
   875                           	opt stack 0
   876  00001E                     ___xxtofl@exp:
   877                           	opt stack 0
   878                           
   879                           ; 1 bytes @ 0x1D
   880  00001E                     	ds	1
   881  00001F                     LCD_write_char@value:
   882                           	opt stack 0
   883  00001F                     __tdiv_to_l_@exp1:
   884                           	opt stack 0
   885  00001F                     itoa@buf:
   886                           	opt stack 0
   887  00001F                     ___xxtofl@arg:
   888                           	opt stack 0
   889                           
   890                           ; 4 bytes @ 0x1E
   891  00001F                     	ds	1
   892  000020                     LCD_write_message@buffer:
   893                           	opt stack 0
   894  000020                     LCD_write_string@buffer:
   895                           	opt stack 0
   896                           
   897                           ; 2 bytes @ 0x1F
   898  000020                     	ds	1
   899  000021                     itoa@val:
   900                           	opt stack 0
   901  000021                     ___flmul@a:
   902                           	opt stack 0
   903                           
   904                           ; 4 bytes @ 0x20
   905  000021                     	ds	1
   906  000022                     
   907                           ; 0 bytes @ 0x21
   908  000022                     	ds	1
   909  000023                     itoa@base:
   910                           	opt stack 0
   911                           
   912                           ; 2 bytes @ 0x22
   913  000023                     	ds	2
   914  000025                     ??___flmul:
   915  000025                     itoa@cp:
   916                           	opt stack 0
   917                           
   918                           ; 2 bytes @ 0x24
   919  000025                     	ds	2
   920  000027                     LCD_write_integer@value:
   921                           	opt stack 0
   922                           
   923                           ; 2 bytes @ 0x26
   924  000027                     	ds	2
   925  000029                     LCD_write_integer@number_of_digits:
   926                           	opt stack 0
   927  000029                     ___flmul@sign:
   928                           	opt stack 0
   929                           
   930                           ; 1 bytes @ 0x28
   931  000029                     	ds	1
   932  00002A                     LCD_write_integer@zero_cleaning:
   933                           	opt stack 0
   934  00002A                     ___flmul@grs:
   935                           	opt stack 0
   936                           
   937                           ; 4 bytes @ 0x29
   938  00002A                     	ds	1
   939  00002B                     ??_LCD_write_integer:
   940                           
   941                           ; 0 bytes @ 0x2A
   942  00002B                     	ds	3
   943  00002E                     ___flmul@aexp:
   944                           	opt stack 0
   945                           
   946                           ; 1 bytes @ 0x2D
   947  00002E                     	ds	1
   948  00002F                     ___flmul@bexp:
   949                           	opt stack 0
   950                           
   951                           ; 1 bytes @ 0x2E
   952  00002F                     	ds	1
   953  000030                     ___flmul@prod:
   954                           	opt stack 0
   955  000030                     LCD_write_integer@convertedInt:
   956                           	opt stack 0
   957                           
   958                           ; 6 bytes @ 0x2F
   959  000030                     	ds	4
   960  000034                     ___flmul@temp:
   961                           	opt stack 0
   962                           
   963                           ; 2 bytes @ 0x33
   964  000034                     	ds	2
   965  000036                     ?___fldiv:
   966                           	opt stack 0
   967  000036                     ?_fround:
   968                           	opt stack 0
   969  000036                     ?_scale:
   970                           	opt stack 0
   971  000036                     LCD_write_integer@index:
   972                           	opt stack 0
   973  000036                     ___fldiv@b:
   974                           	opt stack 0
   975                           
   976                           ; 4 bytes @ 0x35
   977  000036                     	ds	4
   978  00003A                     ___fldiv@a:
   979                           	opt stack 0
   980  00003A                     _fround$1259:
   981                           	opt stack 0
   982  00003A                     _scale$1260:
   983                           	opt stack 0
   984                           
   985                           ; 4 bytes @ 0x39
   986  00003A                     	ds	4
   987  00003E                     ??___fldiv:
   988  00003E                     scale@scl:
   989                           	opt stack 0
   990  00003E                     _fround$1258:
   991                           	opt stack 0
   992                           
   993                           ; 4 bytes @ 0x3D
   994  00003E                     	ds	1
   995  00003F                     ?___fltol:
   996                           	opt stack 0
   997  00003F                     ___fltol@f1:
   998                           	opt stack 0
   999                           
  1000                           ; 4 bytes @ 0x3E
  1001  00003F                     	ds	3
  1002  000042                     read_adc@i:
  1003                           	opt stack 0
  1004  000042                     fround@prec:
  1005                           	opt stack 0
  1006                           
  1007                           ; 1 bytes @ 0x41
  1008  000042                     	ds	1
  1009  000043                     tblptru	equ	0xFF8
  1010                           tblptrh	equ	0xFF7
  1011                           tblptrl	equ	0xFF6
  1012                           tablat	equ	0xFF5
  1013                           postinc0	equ	0xFEE
  1014                           wreg	equ	0xFE8
  1015                           postdec1	equ	0xFE5
  1016                           fsr1l	equ	0xFE1
  1017                           
  1018                           ; 0 bytes @ 0x42
  1019 ;;
  1020 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1021 ;;
  1022 ;; *************** function _main *****************
  1023 ;; Defined at:
  1024 ;;		line 67 in file "tester.c"
  1025 ;; Parameters:    Size  Location     Type
  1026 ;;		None
  1027 ;; Auto vars:     Size  Location     Type
  1028 ;;		None
  1029 ;; Return value:  Size  Location     Type
  1030 ;;		None               void
  1031 ;; Registers used:
  1032 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1033 ;; Tracked objects:
  1034 ;;		On entry : 0/0
  1035 ;;		On exit  : 0/0
  1036 ;;		Unchanged: 0/0
  1037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1038 ;;      Params:         0       0       0       0       0       0       0       0       0
  1039 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1040 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1041 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1042 ;;Total ram usage:        0 bytes
  1043 ;; Hardware stack levels required when called:    9
  1044 ;; This function calls:
  1045 ;;		_LCD_clear
  1046 ;;		_LCD_goto_line
  1047 ;;		_LCD_home
  1048 ;;		_LCD_write_message
  1049 ;;		___fldiv
  1050 ;;		___flge
  1051 ;;		_delay_s
  1052 ;;		_delay_set_quartz
  1053 ;;		_inizializzazione
  1054 ;;		_read_adc
  1055 ;;		_ricarica
  1056 ;;		_scarica
  1057 ;; This function is called by:
  1058 ;;		Startup code after reset
  1059 ;; This function uses a non-reentrant model
  1060 ;;
  1061                           
  1062                           	psect	text0
  1063  002B30                     __ptext0:
  1064                           	opt stack 0
  1065  002B30                     _main:
  1066                           	opt stack 22
  1067                           
  1068                           ;tester.c: 68: delay_set_quartz(16);
  1069                           
  1070                           ; BSR set to: 0
  1071                           ;incstack = 0
  1072  002B30  0E10               	movlw	16
  1073  002B32  EC93  F019         	call	_delay_set_quartz
  1074                           
  1075                           ;tester.c: 69: rapporto = (17825 + 8111);
  1076  002B36  0E00               	movlw	0
  1077  002B38  6E45               	movwf	_rapporto,c
  1078  002B3A  0EA0               	movlw	160
  1079  002B3C  6E46               	movwf	_rapporto+1,c
  1080  002B3E  0ECA               	movlw	202
  1081  002B40  6E47               	movwf	_rapporto+2,c
  1082  002B42  0E46               	movlw	70
  1083  002B44  6E48               	movwf	_rapporto+3,c
  1084                           
  1085                           ;tester.c: 70: rapporto = 8111 / rapporto;
  1086  002B46  0E00               	movlw	0
  1087  002B48  6E36               	movwf	___fldiv@b,c
  1088  002B4A  0E78               	movlw	120
  1089  002B4C  6E37               	movwf	___fldiv@b+1,c
  1090  002B4E  0EFD               	movlw	253
  1091  002B50  6E38               	movwf	___fldiv@b+2,c
  1092  002B52  0E45               	movlw	69
  1093  002B54  6E39               	movwf	___fldiv@b+3,c
  1094  002B56  C045  F03A         	movff	_rapporto,___fldiv@a
  1095  002B5A  C046  F03B         	movff	_rapporto+1,___fldiv@a+1
  1096  002B5E  C047  F03C         	movff	_rapporto+2,___fldiv@a+2
  1097  002B62  C048  F03D         	movff	_rapporto+3,___fldiv@a+3
  1098  002B66  EC4F  F00C         	call	___fldiv	;wreg free
  1099  002B6A  C036  F045         	movff	?___fldiv,_rapporto
  1100  002B6E  C037  F046         	movff	?___fldiv+1,_rapporto+1
  1101  002B72  C038  F047         	movff	?___fldiv+2,_rapporto+2
  1102  002B76  C039  F048         	movff	?___fldiv+3,_rapporto+3
  1103                           
  1104                           ;tester.c: 71: inizializzazione();
  1105  002B7A  ECC9  F017         	call	_inizializzazione	;wreg free
  1106                           
  1107                           ;tester.c: 72: read_adc();
  1108  002B7E  ECED  F00D         	call	_read_adc	;wreg free
  1109  002B82                     l4959:
  1110                           
  1111                           ;tester.c: 74: ricarica();
  1112  002B82  EC6D  F010         	call	_ricarica	;wreg free
  1113                           
  1114                           ;tester.c: 75: LCD_clear();
  1115  002B86  EC2D  F019         	call	_LCD_clear	;wreg free
  1116                           
  1117                           ;tester.c: 76: scarica();
  1118  002B8A  EC81  F006         	call	_scarica	;wreg free
  1119                           
  1120                           ;tester.c: 77: LCD_clear();
  1121  002B8E  EC2D  F019         	call	_LCD_clear	;wreg free
  1122                           
  1123                           ;tester.c: 78: while(voltage>5){
  1124  002B92  D016               	goto	l4977
  1125  002B94                     l4967:
  1126                           
  1127                           ;tester.c: 79: LCD_home();
  1128  002B94  EC1A  F019         	call	_LCD_home	;wreg free
  1129                           
  1130                           ;tester.c: 80: LCD_write_message("Scollegare batt");
  1131  002B98  0EC4               	movlw	low STR_1
  1132  002B9A  6E20               	movwf	LCD_write_message@buffer,c
  1133  002B9C  0E7F               	movlw	high STR_1
  1134  002B9E  6E21               	movwf	LCD_write_message@buffer+1,c
  1135  002BA0  ECF1  F018         	call	_LCD_write_message	;wreg free
  1136                           
  1137                           ;tester.c: 81: LCD_goto_line(2);
  1138  002BA4  0E02               	movlw	2
  1139  002BA6  ECF5  F015         	call	_LCD_goto_line
  1140                           
  1141                           ;tester.c: 82: LCD_write_message("per nuovo test.");
  1142  002BAA  0EA4               	movlw	low STR_2
  1143  002BAC  6E20               	movwf	LCD_write_message@buffer,c
  1144  002BAE  0E7F               	movlw	high STR_2
  1145  002BB0  6E21               	movwf	LCD_write_message@buffer+1,c
  1146  002BB2  ECF1  F018         	call	_LCD_write_message	;wreg free
  1147                           
  1148                           ;tester.c: 83: delay_s(1);
  1149  002BB6  0E01               	movlw	1
  1150  002BB8  EC65  F019         	call	_delay_s
  1151                           
  1152                           ;tester.c: 84: read_adc();
  1153  002BBC  ECED  F00D         	call	_read_adc	;wreg free
  1154  002BC0                     l4977:
  1155  002BC0  0E00               	movlw	0
  1156  002BC2  6E0F               	movwf	___flge@ff1,c
  1157  002BC4  0E00               	movlw	0
  1158  002BC6  6E10               	movwf	___flge@ff1+1,c
  1159  002BC8  0EA0               	movlw	160
  1160  002BCA  6E11               	movwf	___flge@ff1+2,c
  1161  002BCC  0E40               	movlw	64
  1162  002BCE  6E12               	movwf	___flge@ff1+3,c
  1163  002BD0  C049  F013         	movff	_voltage,___flge@ff2
  1164  002BD4  C04A  F014         	movff	_voltage+1,___flge@ff2+1
  1165  002BD8  C04B  F015         	movff	_voltage+2,___flge@ff2+2
  1166  002BDC  C04C  F016         	movff	_voltage+3,___flge@ff2+3
  1167  002BE0  EC9A  F013         	call	___flge	;wreg free
  1168  002BE4  B0D8               	btfsc	status,0,c
  1169  002BE6  D7CD               	goto	l4959
  1170  002BE8  D7D5               	goto	l4967
  1171  002BEA                     __end_of_main:
  1172                           	opt stack 0
  1173                           tblptru	equ	0xFF8
  1174                           tblptrh	equ	0xFF7
  1175                           tblptrl	equ	0xFF6
  1176                           tablat	equ	0xFF5
  1177                           postinc0	equ	0xFEE
  1178                           wreg	equ	0xFE8
  1179                           postdec1	equ	0xFE5
  1180                           fsr1l	equ	0xFE1
  1181                           status	equ	0xFD8
  1182                           
  1183 ;; *************** function _scarica *****************
  1184 ;; Defined at:
  1185 ;;		line 89 in file "tester.c"
  1186 ;; Parameters:    Size  Location     Type
  1187 ;;		None
  1188 ;; Auto vars:     Size  Location     Type
  1189 ;;		None
  1190 ;; Return value:  Size  Location     Type
  1191 ;;		None               void
  1192 ;; Registers used:
  1193 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1194 ;; Tracked objects:
  1195 ;;		On entry : 0/0
  1196 ;;		On exit  : 0/0
  1197 ;;		Unchanged: 0/0
  1198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1199 ;;      Params:         0       0       0       0       0       0       0       0       0
  1200 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1201 ;;      Temps:          0       8       0       0       0       0       0       0       0
  1202 ;;      Totals:         0       8       0       0       0       0       0       0       0
  1203 ;;Total ram usage:        8 bytes
  1204 ;; Hardware stack levels used:    1
  1205 ;; Hardware stack levels required when called:    8
  1206 ;; This function calls:
  1207 ;;		_LCD_clear
  1208 ;;		_LCD_goto_line
  1209 ;;		_LCD_home
  1210 ;;		_LCD_write_integer
  1211 ;;		_LCD_write_message
  1212 ;;		_LCD_write_string
  1213 ;;		___fladd
  1214 ;;		___fldiv
  1215 ;;		___flge
  1216 ;;		___flneg
  1217 ;;		___wmul
  1218 ;;		___xxtofl
  1219 ;;		_delay_ms
  1220 ;;		_delay_s
  1221 ;;		_read_adc
  1222 ;;		_sprintf
  1223 ;; This function is called by:
  1224 ;;		_main
  1225 ;; This function uses a non-reentrant model
  1226 ;;
  1227                           
  1228                           	psect	text1
  1229  000D02                     __ptext1:
  1230                           	opt stack 0
  1231  000D02                     _scarica:
  1232                           	opt stack 22
  1233                           
  1234                           ;tester.c: 90: tempo = 0;
  1235                           
  1236                           ;incstack = 0
  1237  000D02  0E00               	movlw	0
  1238  000D04  0100               	movlb	0	; () banked
  1239  000D06  6FC1               	movwf	_tempo& (0+255),b
  1240  000D08  0E00               	movlw	0
  1241  000D0A  6FC2               	movwf	(_tempo+1)& (0+255),b
  1242  000D0C  0E00               	movlw	0
  1243  000D0E  6FC3               	movwf	(_tempo+2)& (0+255),b
  1244  000D10  0E00               	movlw	0
  1245  000D12  6FC4               	movwf	(_tempo+3)& (0+255),b
  1246                           
  1247                           ;tester.c: 91: T0CON = 0x85;
  1248  000D14  0E85               	movlw	133
  1249  000D16  6ED5               	movwf	4053,c	;volatile
  1250                           
  1251                           ;tester.c: 92: TMR0H = 0x0B;
  1252  000D18  0E0B               	movlw	11
  1253  000D1A  6ED7               	movwf	4055,c	;volatile
  1254                           
  1255                           ;tester.c: 93: TMR0L = 0xDC;
  1256  000D1C  0EDC               	movlw	220
  1257  000D1E  6ED6               	movwf	4054,c	;volatile
  1258                           
  1259                           ; BSR set to: 0
  1260                           ;tester.c: 94: INTCONbits.GIE = 1;
  1261  000D20  8EF2               	bsf	intcon,7,c	;volatile
  1262                           
  1263                           ; BSR set to: 0
  1264                           ;tester.c: 95: INTCONbits.TMR0IF = 0;
  1265  000D22  94F2               	bcf	intcon,2,c	;volatile
  1266                           
  1267                           ; BSR set to: 0
  1268                           ;tester.c: 96: INTCONbits.TMR0IE = 1;
  1269  000D24  8AF2               	bsf	intcon,5,c	;volatile
  1270                           
  1271                           ;tester.c: 97: secondi = 0;
  1272  000D26  0E00               	movlw	0
  1273  000D28  0100               	movlb	0	; () banked
  1274  000D2A  6FD2               	movwf	(_secondi+1)& (0+255),b
  1275  000D2C  0E00               	movlw	0
  1276  000D2E  6FD1               	movwf	_secondi& (0+255),b
  1277                           
  1278                           ;tester.c: 98: minuti = 0;
  1279  000D30  0E00               	movlw	0
  1280  000D32  0100               	movlb	0	; () banked
  1281  000D34  6FCE               	movwf	(_minuti+1)& (0+255),b
  1282  000D36  0E00               	movlw	0
  1283  000D38  6FCD               	movwf	_minuti& (0+255),b
  1284                           
  1285                           ;tester.c: 99: ore = 0;
  1286  000D3A  0E00               	movlw	0
  1287  000D3C  0100               	movlb	0	; () banked
  1288  000D3E  6FD0               	movwf	(_ore+1)& (0+255),b
  1289  000D40  0E00               	movlw	0
  1290  000D42  6FCF               	movwf	_ore& (0+255),b
  1291                           
  1292                           ;tester.c: 101: while (voltage > 10) {
  1293  000D44  D0D4               	goto	l191
  1294  000D46                     l192:
  1295                           
  1296                           ;tester.c: 103: LATAbits.LATA3 = 1;
  1297  000D46  8689               	bsf	3977,3,c	;volatile
  1298                           
  1299                           ;tester.c: 104: LCD_home();
  1300  000D48  EC1A  F019         	call	_LCD_home	;wreg free
  1301                           
  1302                           ;tester.c: 105: LCD_write_message("tempo:");
  1303  000D4C  0EE5               	movlw	low STR_3
  1304  000D4E  6E20               	movwf	LCD_write_message@buffer,c
  1305  000D50  0E7F               	movlw	high STR_3
  1306  000D52  6E21               	movwf	LCD_write_message@buffer+1,c
  1307  000D54  ECF1  F018         	call	_LCD_write_message	;wreg free
  1308                           
  1309                           ;tester.c: 106: LCD_write_integer(ore, 2, 0x00);
  1310  000D58  C0CF  F027         	movff	_ore,LCD_write_integer@value
  1311  000D5C  C0D0  F028         	movff	_ore+1,LCD_write_integer@value+1
  1312  000D60  0E02               	movlw	2
  1313  000D62  6E29               	movwf	LCD_write_integer@number_of_digits,c
  1314  000D64  0E00               	movlw	0
  1315  000D66  6E2A               	movwf	LCD_write_integer@zero_cleaning,c
  1316  000D68  ECCE  F011         	call	_LCD_write_integer	;wreg free
  1317                           
  1318                           ;tester.c: 107: LCD_write_message(":");
  1319  000D6C  0EF9               	movlw	low (STR_9+1)
  1320  000D6E  6E20               	movwf	LCD_write_message@buffer,c
  1321  000D70  0E7F               	movlw	high (STR_9+1)
  1322  000D72  6E21               	movwf	LCD_write_message@buffer+1,c
  1323  000D74  ECF1  F018         	call	_LCD_write_message	;wreg free
  1324                           
  1325                           ;tester.c: 108: LCD_write_integer(minuti, 2, 0x00);
  1326  000D78  C0CD  F027         	movff	_minuti,LCD_write_integer@value
  1327  000D7C  C0CE  F028         	movff	_minuti+1,LCD_write_integer@value+1
  1328  000D80  0E02               	movlw	2
  1329  000D82  6E29               	movwf	LCD_write_integer@number_of_digits,c
  1330  000D84  0E00               	movlw	0
  1331  000D86  6E2A               	movwf	LCD_write_integer@zero_cleaning,c
  1332  000D88  ECCE  F011         	call	_LCD_write_integer	;wreg free
  1333                           
  1334                           ;tester.c: 109: LCD_write_message(":");
  1335  000D8C  0EF9               	movlw	low (STR_9+1)
  1336  000D8E  6E20               	movwf	LCD_write_message@buffer,c
  1337  000D90  0E7F               	movlw	high (STR_9+1)
  1338  000D92  6E21               	movwf	LCD_write_message@buffer+1,c
  1339  000D94  ECF1  F018         	call	_LCD_write_message	;wreg free
  1340                           
  1341                           ;tester.c: 110: LCD_write_integer(secondi, 2, 0x00);
  1342  000D98  C0D1  F027         	movff	_secondi,LCD_write_integer@value
  1343  000D9C  C0D2  F028         	movff	_secondi+1,LCD_write_integer@value+1
  1344  000DA0  0E02               	movlw	2
  1345  000DA2  6E29               	movwf	LCD_write_integer@number_of_digits,c
  1346  000DA4  0E00               	movlw	0
  1347  000DA6  6E2A               	movwf	LCD_write_integer@zero_cleaning,c
  1348  000DA8  ECCE  F011         	call	_LCD_write_integer	;wreg free
  1349                           
  1350                           ;tester.c: 111: read_adc();
  1351  000DAC  ECED  F00D         	call	_read_adc	;wreg free
  1352                           
  1353                           ;tester.c: 112: LCD_goto_line(2);
  1354  000DB0  0E02               	movlw	2
  1355  000DB2  ECF5  F015         	call	_LCD_goto_line
  1356                           
  1357                           ;tester.c: 113: sprintf(str, "V:%.3f", voltage);
  1358  000DB6  0ED3               	movlw	low _str
  1359  000DB8  0100               	movlb	0	; () banked
  1360  000DBA  6F7C               	movwf	sprintf@sp& (0+255),b
  1361  000DBC  0E00               	movlw	high _str
  1362  000DBE  0100               	movlb	0	; () banked
  1363  000DC0  6F7D               	movwf	(sprintf@sp+1)& (0+255),b
  1364  000DC2  0EEC               	movlw	low STR_6
  1365  000DC4  0100               	movlb	0	; () banked
  1366  000DC6  6F7E               	movwf	sprintf@f& (0+255),b
  1367  000DC8  0E7F               	movlw	high STR_6
  1368  000DCA  0100               	movlb	0	; () banked
  1369  000DCC  6F7F               	movwf	(sprintf@f+1)& (0+255),b
  1370  000DCE  C049  F080         	movff	_voltage,?_sprintf+4
  1371  000DD2  C04A  F081         	movff	_voltage+1,?_sprintf+5
  1372  000DD6  C04B  F082         	movff	_voltage+2,?_sprintf+6
  1373  000DDA  C04C  F083         	movff	_voltage+3,?_sprintf+7
  1374  000DDE  EC0D  F000         	call	_sprintf	;wreg free
  1375                           
  1376                           ;tester.c: 114: str[7] = '\0';
  1377  000DE2  0E00               	movlw	0
  1378  000DE4  0100               	movlb	0	; () banked
  1379  000DE6  6FDA               	movwf	(_str+7)& (0+255),b
  1380                           
  1381                           ; BSR set to: 0
  1382                           ;tester.c: 115: LCD_write_string(str);
  1383  000DE8  0ED3               	movlw	low _str
  1384  000DEA  6E20               	movwf	LCD_write_string@buffer,c
  1385  000DEC  0E00               	movlw	high _str
  1386  000DEE  6E21               	movwf	LCD_write_string@buffer+1,c
  1387  000DF0  EC53  F019         	call	_LCD_write_string	;wreg free
  1388                           
  1389                           ;tester.c: 116: sprintf(str, " I:%.3f", current);
  1390  000DF4  0ED3               	movlw	low _str
  1391  000DF6  0100               	movlb	0	; () banked
  1392  000DF8  6F7C               	movwf	sprintf@sp& (0+255),b
  1393  000DFA  0E00               	movlw	high _str
  1394  000DFC  0100               	movlb	0	; () banked
  1395  000DFE  6F7D               	movwf	(sprintf@sp+1)& (0+255),b
  1396  000E00  0EDD               	movlw	low STR_7
  1397  000E02  0100               	movlb	0	; () banked
  1398  000E04  6F7E               	movwf	sprintf@f& (0+255),b
  1399  000E06  0E7F               	movlw	high STR_7
  1400  000E08  0100               	movlb	0	; () banked
  1401  000E0A  6F7F               	movwf	(sprintf@f+1)& (0+255),b
  1402  000E0C  C0B9  F080         	movff	_current,?_sprintf+4
  1403  000E10  C0BA  F081         	movff	_current+1,?_sprintf+5
  1404  000E14  C0BB  F082         	movff	_current+2,?_sprintf+6
  1405  000E18  C0BC  F083         	movff	_current+3,?_sprintf+7
  1406  000E1C  EC0D  F000         	call	_sprintf	;wreg free
  1407                           
  1408                           ;tester.c: 117: str[7] = '\0';
  1409  000E20  0E00               	movlw	0
  1410  000E22  0100               	movlb	0	; () banked
  1411  000E24  6FDA               	movwf	(_str+7)& (0+255),b
  1412                           
  1413                           ; BSR set to: 0
  1414                           ;tester.c: 118: LCD_write_string(str);
  1415  000E26  0ED3               	movlw	low _str
  1416  000E28  6E20               	movwf	LCD_write_string@buffer,c
  1417  000E2A  0E00               	movlw	high _str
  1418  000E2C  6E21               	movwf	LCD_write_string@buffer+1,c
  1419  000E2E  EC53  F019         	call	_LCD_write_string	;wreg free
  1420                           
  1421                           ;tester.c: 119: delay_ms(100);
  1422  000E32  0E00               	movlw	0
  1423  000E34  6E16               	movwf	delay_ms@value_ms+1,c
  1424  000E36  0E64               	movlw	100
  1425  000E38  6E15               	movwf	delay_ms@value_ms,c
  1426  000E3A  ECA9  F018         	call	_delay_ms	;wreg free
  1427                           
  1428                           ;tester.c: 120: if (tempo - tempo_old >= 59) {
  1429  000E3E  C0C9  F09F         	movff	_tempo_old,??_scarica
  1430  000E42  C0CA  F0A0         	movff	_tempo_old+1,??_scarica+1
  1431  000E46  C0CB  F0A1         	movff	_tempo_old+2,??_scarica+2
  1432  000E4A  C0CC  F0A2         	movff	_tempo_old+3,??_scarica+3
  1433  000E4E  0100               	movlb	0	; () banked
  1434  000E50  1F9F               	comf	??_scarica& (0+255),f,b
  1435  000E52  1FA0               	comf	(??_scarica+1)& (0+255),f,b
  1436  000E54  1FA1               	comf	(??_scarica+2)& (0+255),f,b
  1437  000E56  1FA2               	comf	(??_scarica+3)& (0+255),f,b
  1438  000E58  2B9F               	incf	??_scarica& (0+255),f,b
  1439  000E5A  0E00               	movlw	0
  1440  000E5C  23A0               	addwfc	(??_scarica+1)& (0+255),f,b
  1441  000E5E  23A1               	addwfc	(??_scarica+2)& (0+255),f,b
  1442  000E60  23A2               	addwfc	(??_scarica+3)& (0+255),f,b
  1443  000E62  0100               	movlb	0	; () banked
  1444  000E64  51C1               	movf	_tempo& (0+255),w,b
  1445  000E66  0100               	movlb	0	; () banked
  1446  000E68  259F               	addwf	??_scarica& (0+255),w,b
  1447  000E6A  0100               	movlb	0	; () banked
  1448  000E6C  6FA3               	movwf	(??_scarica+4)& (0+255),b
  1449  000E6E  0100               	movlb	0	; () banked
  1450  000E70  51C2               	movf	(_tempo+1)& (0+255),w,b
  1451  000E72  0100               	movlb	0	; () banked
  1452  000E74  21A0               	addwfc	(??_scarica+1)& (0+255),w,b
  1453  000E76  0100               	movlb	0	; () banked
  1454  000E78  6FA4               	movwf	(??_scarica+5)& (0+255),b
  1455  000E7A  0100               	movlb	0	; () banked
  1456  000E7C  51C3               	movf	(_tempo+2)& (0+255),w,b
  1457  000E7E  0100               	movlb	0	; () banked
  1458  000E80  21A1               	addwfc	(??_scarica+2)& (0+255),w,b
  1459  000E82  0100               	movlb	0	; () banked
  1460  000E84  6FA5               	movwf	(??_scarica+6)& (0+255),b
  1461  000E86  0100               	movlb	0	; () banked
  1462  000E88  51C4               	movf	(_tempo+3)& (0+255),w,b
  1463  000E8A  0100               	movlb	0	; () banked
  1464  000E8C  21A2               	addwfc	(??_scarica+3)& (0+255),w,b
  1465  000E8E  0100               	movlb	0	; () banked
  1466  000E90  6FA6               	movwf	(??_scarica+7)& (0+255),b
  1467  000E92  0100               	movlb	0	; () banked
  1468  000E94  51A6               	movf	(??_scarica+7)& (0+255),w,b
  1469  000E96  0100               	movlb	0	; () banked
  1470  000E98  11A5               	iorwf	(??_scarica+6)& (0+255),w,b
  1471  000E9A  0100               	movlb	0	; () banked
  1472  000E9C  11A4               	iorwf	(??_scarica+5)& (0+255),w,b
  1473  000E9E  E105               	bnz	u5520
  1474  000EA0  0E3B               	movlw	59
  1475  000EA2  0100               	movlb	0	; () banked
  1476  000EA4  5DA3               	subwf	(??_scarica+4)& (0+255),w,b
  1477  000EA6  A0D8               	btfss	status,0,c
  1478  000EA8  D022               	goto	l191
  1479  000EAA                     u5520:
  1480                           
  1481                           ; BSR set to: 0
  1482                           ;tester.c: 121: tempo_old = tempo;
  1483  000EAA  C0C1  F0C9         	movff	_tempo,_tempo_old
  1484  000EAE  C0C2  F0CA         	movff	_tempo+1,_tempo_old+1
  1485  000EB2  C0C3  F0CB         	movff	_tempo+2,_tempo_old+2
  1486  000EB6  C0C4  F0CC         	movff	_tempo+3,_tempo_old+3
  1487                           
  1488                           ; BSR set to: 0
  1489                           ;tester.c: 122: sommatoriaCorrente = current + sommatoriaCorrente;
  1490  000EBA  C0B9  F060         	movff	_current,___fladd@b
  1491  000EBE  C0BA  F061         	movff	_current+1,___fladd@b+1
  1492  000EC2  C0BB  F062         	movff	_current+2,___fladd@b+2
  1493  000EC6  C0BC  F063         	movff	_current+3,___fladd@b+3
  1494  000ECA  C0BD  F064         	movff	_sommatoriaCorrente,___fladd@a
  1495  000ECE  C0BE  F065         	movff	_sommatoriaCorrente+1,___fladd@a+1
  1496  000ED2  C0BF  F066         	movff	_sommatoriaCorrente+2,___fladd@a+2
  1497  000ED6  C0C0  F067         	movff	_sommatoriaCorrente+3,___fladd@a+3
  1498  000EDA  EC2D  F004         	call	___fladd	;wreg free
  1499  000EDE  C060  F0BD         	movff	?___fladd,_sommatoriaCorrente
  1500  000EE2  C061  F0BE         	movff	?___fladd+1,_sommatoriaCorrente+1
  1501  000EE6  C062  F0BF         	movff	?___fladd+2,_sommatoriaCorrente+2
  1502  000EEA  C063  F0C0         	movff	?___fladd+3,_sommatoriaCorrente+3
  1503  000EEE                     l191:
  1504  000EEE  0E00               	movlw	0
  1505  000EF0  6E0F               	movwf	___flge@ff1,c
  1506  000EF2  0E00               	movlw	0
  1507  000EF4  6E10               	movwf	___flge@ff1+1,c
  1508  000EF6  0E20               	movlw	32
  1509  000EF8  6E11               	movwf	___flge@ff1+2,c
  1510  000EFA  0E41               	movlw	65
  1511  000EFC  6E12               	movwf	___flge@ff1+3,c
  1512  000EFE  C049  F013         	movff	_voltage,___flge@ff2
  1513  000F02  C04A  F014         	movff	_voltage+1,___flge@ff2+1
  1514  000F06  C04B  F015         	movff	_voltage+2,___flge@ff2+2
  1515  000F0A  C04C  F016         	movff	_voltage+3,___flge@ff2+3
  1516  000F0E  EC9A  F013         	call	___flge	;wreg free
  1517  000F12  A0D8               	btfss	status,0,c
  1518  000F14  D718               	goto	l192
  1519                           
  1520                           ;tester.c: 123: }
  1521                           ;tester.c: 124: }
  1522                           ;tester.c: 125: LCD_clear();
  1523  000F16  EC2D  F019         	call	_LCD_clear	;wreg free
  1524                           
  1525                           ;tester.c: 126: LATAbits.LATA3 = 0;
  1526  000F1A  9689               	bcf	3977,3,c	;volatile
  1527                           
  1528                           ;tester.c: 127: LCD_write_message("batteria scarica");
  1529  000F1C  0E82               	movlw	low STR_8
  1530  000F1E  6E20               	movwf	LCD_write_message@buffer,c
  1531  000F20  0E7F               	movlw	high STR_8
  1532  000F22  6E21               	movwf	LCD_write_message@buffer+1,c
  1533  000F24  ECF1  F018         	call	_LCD_write_message	;wreg free
  1534                           
  1535                           ;tester.c: 128: LCD_goto_line(2);
  1536  000F28  0E02               	movlw	2
  1537  000F2A  ECF5  F015         	call	_LCD_goto_line
  1538                           
  1539                           ;tester.c: 129: LCD_write_message("C:");
  1540  000F2E  0EF8               	movlw	low STR_9
  1541  000F30  6E20               	movwf	LCD_write_message@buffer,c
  1542  000F32  0E7F               	movlw	high STR_9
  1543  000F34  6E21               	movwf	LCD_write_message@buffer+1,c
  1544  000F36  ECF1  F018         	call	_LCD_write_message	;wreg free
  1545                           
  1546                           ;tester.c: 130: if (ore > 0) {
  1547  000F3A  0100               	movlb	0	; () banked
  1548  000F3C  51CF               	movf	_ore& (0+255),w,b
  1549  000F3E  0100               	movlb	0	; () banked
  1550  000F40  11D0               	iorwf	(_ore+1)& (0+255),w,b
  1551  000F42  B4D8               	btfsc	status,2,c
  1552  000F44  D075               	goto	l4929
  1553                           
  1554                           ; BSR set to: 0
  1555                           ;tester.c: 131: sommatoriaCorrente = sommatoriaCorrente / 60;
  1556  000F46  C0BD  F036         	movff	_sommatoriaCorrente,___fldiv@b
  1557  000F4A  C0BE  F037         	movff	_sommatoriaCorrente+1,___fldiv@b+1
  1558  000F4E  C0BF  F038         	movff	_sommatoriaCorrente+2,___fldiv@b+2
  1559  000F52  C0C0  F039         	movff	_sommatoriaCorrente+3,___fldiv@b+3
  1560  000F56  0E00               	movlw	0
  1561  000F58  6E3A               	movwf	___fldiv@a,c
  1562  000F5A  0E00               	movlw	0
  1563  000F5C  6E3B               	movwf	___fldiv@a+1,c
  1564  000F5E  0E70               	movlw	112
  1565  000F60  6E3C               	movwf	___fldiv@a+2,c
  1566  000F62  0E42               	movlw	66
  1567  000F64  6E3D               	movwf	___fldiv@a+3,c
  1568  000F66  EC4F  F00C         	call	___fldiv	;wreg free
  1569  000F6A  C036  F0BD         	movff	?___fldiv,_sommatoriaCorrente
  1570  000F6E  C037  F0BE         	movff	?___fldiv+1,_sommatoriaCorrente+1
  1571  000F72  C038  F0BF         	movff	?___fldiv+2,_sommatoriaCorrente+2
  1572  000F76  C039  F0C0         	movff	?___fldiv+3,_sommatoriaCorrente+3
  1573                           
  1574                           ;tester.c: 132: sommatoriaCorrente = sommatoriaCorrente / ore;
  1575  000F7A  C0BD  F036         	movff	_sommatoriaCorrente,___fldiv@b
  1576  000F7E  C0BE  F037         	movff	_sommatoriaCorrente+1,___fldiv@b+1
  1577  000F82  C0BF  F038         	movff	_sommatoriaCorrente+2,___fldiv@b+2
  1578  000F86  C0C0  F039         	movff	_sommatoriaCorrente+3,___fldiv@b+3
  1579  000F8A  C0CF  F015         	movff	_ore,___xxtofl@val
  1580  000F8E  C0D0  F016         	movff	_ore+1,___xxtofl@val+1
  1581  000F92  6A17               	clrf	___xxtofl@val+2,c
  1582  000F94  6A18               	clrf	___xxtofl@val+3,c
  1583  000F96  0E00               	movlw	0
  1584  000F98  EC26  F011         	call	___xxtofl
  1585  000F9C  C015  F03A         	movff	?___xxtofl,___fldiv@a
  1586  000FA0  C016  F03B         	movff	?___xxtofl+1,___fldiv@a+1
  1587  000FA4  C017  F03C         	movff	?___xxtofl+2,___fldiv@a+2
  1588  000FA8  C018  F03D         	movff	?___xxtofl+3,___fldiv@a+3
  1589  000FAC  EC4F  F00C         	call	___fldiv	;wreg free
  1590  000FB0  C036  F0BD         	movff	?___fldiv,_sommatoriaCorrente
  1591  000FB4  C037  F0BE         	movff	?___fldiv+1,_sommatoriaCorrente+1
  1592  000FB8  C038  F0BF         	movff	?___fldiv+2,_sommatoriaCorrente+2
  1593  000FBC  C039  F0C0         	movff	?___fldiv+3,_sommatoriaCorrente+3
  1594                           
  1595                           ;tester.c: 133: sommatoriaCorrente = -(sommatoriaCorrente);
  1596  000FC0  C0BD  F00F         	movff	_sommatoriaCorrente,___flneg@f1
  1597  000FC4  C0BE  F010         	movff	_sommatoriaCorrente+1,___flneg@f1+1
  1598  000FC8  C0BF  F011         	movff	_sommatoriaCorrente+2,___flneg@f1+2
  1599  000FCC  C0C0  F012         	movff	_sommatoriaCorrente+3,___flneg@f1+3
  1600  000FD0  ECDA  F018         	call	___flneg	;wreg free
  1601  000FD4  C00F  F0BD         	movff	?___flneg,_sommatoriaCorrente
  1602  000FD8  C010  F0BE         	movff	?___flneg+1,_sommatoriaCorrente+1
  1603  000FDC  C011  F0BF         	movff	?___flneg+2,_sommatoriaCorrente+2
  1604  000FE0  C012  F0C0         	movff	?___flneg+3,_sommatoriaCorrente+3
  1605                           
  1606                           ;tester.c: 134: sprintf(str, "%.2f", sommatoriaCorrente);
  1607  000FE4  0ED3               	movlw	low _str
  1608  000FE6  0100               	movlb	0	; () banked
  1609  000FE8  6F7C               	movwf	sprintf@sp& (0+255),b
  1610  000FEA  0E00               	movlw	high _str
  1611  000FEC  0100               	movlb	0	; () banked
  1612  000FEE  6F7D               	movwf	(sprintf@sp+1)& (0+255),b
  1613  000FF0  0EF3               	movlw	low STR_10
  1614  000FF2  0100               	movlb	0	; () banked
  1615  000FF4  6F7E               	movwf	sprintf@f& (0+255),b
  1616  000FF6  0E7F               	movlw	high STR_10
  1617  000FF8  0100               	movlb	0	; () banked
  1618  000FFA  6F7F               	movwf	(sprintf@f+1)& (0+255),b
  1619  000FFC  C0BD  F080         	movff	_sommatoriaCorrente,?_sprintf+4
  1620  001000  C0BE  F081         	movff	_sommatoriaCorrente+1,?_sprintf+5
  1621  001004  C0BF  F082         	movff	_sommatoriaCorrente+2,?_sprintf+6
  1622  001008  C0C0  F083         	movff	_sommatoriaCorrente+3,?_sprintf+7
  1623  00100C  EC0D  F000         	call	_sprintf	;wreg free
  1624                           
  1625                           ;tester.c: 135: str[7] = '\0';
  1626  001010  0E00               	movlw	0
  1627  001012  0100               	movlb	0	; () banked
  1628  001014  6FDA               	movwf	(_str+7)& (0+255),b
  1629                           
  1630                           ; BSR set to: 0
  1631                           ;tester.c: 136: LCD_write_string(str);
  1632  001016  0ED3               	movlw	low _str
  1633  001018  6E20               	movwf	LCD_write_string@buffer,c
  1634  00101A  0E00               	movlw	high _str
  1635  00101C  6E21               	movwf	LCD_write_string@buffer+1,c
  1636  00101E  EC53  F019         	call	_LCD_write_string	;wreg free
  1637                           
  1638                           ;tester.c: 137: LCD_write_message("Ah");
  1639  001022  0EFB               	movlw	low STR_11
  1640  001024  6E20               	movwf	LCD_write_message@buffer,c
  1641  001026  0E7F               	movlw	high STR_11
  1642  001028  6E21               	movwf	LCD_write_message@buffer+1,c
  1643  00102A  ECF1  F018         	call	_LCD_write_message	;wreg free
  1644                           
  1645                           ;tester.c: 138: } else {
  1646  00102E  D07F               	goto	l4947
  1647  001030                     l4929:
  1648                           
  1649                           ;tester.c: 139: if ((tempo!=0)&&(sommatoriaCorrente!=0)){
  1650  001030  0100               	movlb	0	; () banked
  1651  001032  51C1               	movf	_tempo& (0+255),w,b
  1652  001034  0100               	movlb	0	; () banked
  1653  001036  11C2               	iorwf	(_tempo+1)& (0+255),w,b
  1654  001038  0100               	movlb	0	; () banked
  1655  00103A  11C3               	iorwf	(_tempo+2)& (0+255),w,b
  1656  00103C  0100               	movlb	0	; () banked
  1657  00103E  11C4               	iorwf	(_tempo+3)& (0+255),w,b
  1658  001040  B4D8               	btfsc	status,2,c
  1659  001042  D06F               	goto	l4945
  1660                           
  1661                           ; BSR set to: 0
  1662  001044  0100               	movlb	0	; () banked
  1663  001046  51BD               	movf	_sommatoriaCorrente& (0+255),w,b
  1664  001048  0100               	movlb	0	; () banked
  1665  00104A  11BE               	iorwf	(_sommatoriaCorrente+1)& (0+255),w,b
  1666  00104C  0100               	movlb	0	; () banked
  1667  00104E  11BF               	iorwf	(_sommatoriaCorrente+2)& (0+255),w,b
  1668  001050  0100               	movlb	0	; () banked
  1669  001052  11C0               	iorwf	(_sommatoriaCorrente+3)& (0+255),w,b
  1670  001054  B4D8               	btfsc	status,2,c
  1671  001056  D065               	goto	l4945
  1672                           
  1673                           ; BSR set to: 0
  1674                           ;tester.c: 140: sommatoriaCorrente = sommatoriaCorrente / (minuti*60);
  1675  001058  C0BD  F036         	movff	_sommatoriaCorrente,___fldiv@b
  1676  00105C  C0BE  F037         	movff	_sommatoriaCorrente+1,___fldiv@b+1
  1677  001060  C0BF  F038         	movff	_sommatoriaCorrente+2,___fldiv@b+2
  1678  001064  C0C0  F039         	movff	_sommatoriaCorrente+3,___fldiv@b+3
  1679  001068  C0CD  F00F         	movff	_minuti,___wmul@multiplier
  1680  00106C  C0CE  F010         	movff	_minuti+1,___wmul@multiplier+1
  1681  001070  0E00               	movlw	0
  1682  001072  6E12               	movwf	___wmul@multiplicand+1,c
  1683  001074  0E3C               	movlw	60
  1684  001076  6E11               	movwf	___wmul@multiplicand,c
  1685  001078  EC40  F019         	call	___wmul	;wreg free
  1686  00107C  C00F  F015         	movff	?___wmul,___xxtofl@val
  1687  001080  C010  F016         	movff	?___wmul+1,___xxtofl@val+1
  1688  001084  6A17               	clrf	___xxtofl@val+2,c
  1689  001086  6A18               	clrf	___xxtofl@val+3,c
  1690  001088  0E00               	movlw	0
  1691  00108A  EC26  F011         	call	___xxtofl
  1692  00108E  C015  F03A         	movff	?___xxtofl,___fldiv@a
  1693  001092  C016  F03B         	movff	?___xxtofl+1,___fldiv@a+1
  1694  001096  C017  F03C         	movff	?___xxtofl+2,___fldiv@a+2
  1695  00109A  C018  F03D         	movff	?___xxtofl+3,___fldiv@a+3
  1696  00109E  EC4F  F00C         	call	___fldiv	;wreg free
  1697  0010A2  C036  F0BD         	movff	?___fldiv,_sommatoriaCorrente
  1698  0010A6  C037  F0BE         	movff	?___fldiv+1,_sommatoriaCorrente+1
  1699  0010AA  C038  F0BF         	movff	?___fldiv+2,_sommatoriaCorrente+2
  1700  0010AE  C039  F0C0         	movff	?___fldiv+3,_sommatoriaCorrente+3
  1701                           
  1702                           ;tester.c: 141: sommatoriaCorrente = 0-sommatoriaCorrente;
  1703  0010B2  C0BD  F00F         	movff	_sommatoriaCorrente,___flneg@f1
  1704  0010B6  C0BE  F010         	movff	_sommatoriaCorrente+1,___flneg@f1+1
  1705  0010BA  C0BF  F011         	movff	_sommatoriaCorrente+2,___flneg@f1+2
  1706  0010BE  C0C0  F012         	movff	_sommatoriaCorrente+3,___flneg@f1+3
  1707  0010C2  ECDA  F018         	call	___flneg	;wreg free
  1708  0010C6  C00F  F0BD         	movff	?___flneg,_sommatoriaCorrente
  1709  0010CA  C010  F0BE         	movff	?___flneg+1,_sommatoriaCorrente+1
  1710  0010CE  C011  F0BF         	movff	?___flneg+2,_sommatoriaCorrente+2
  1711  0010D2  C012  F0C0         	movff	?___flneg+3,_sommatoriaCorrente+3
  1712                           
  1713                           ;tester.c: 142: sprintf(str, "%.3f", sommatoriaCorrente);
  1714  0010D6  0ED3               	movlw	low _str
  1715  0010D8  0100               	movlb	0	; () banked
  1716  0010DA  6F7C               	movwf	sprintf@sp& (0+255),b
  1717  0010DC  0E00               	movlw	high _str
  1718  0010DE  0100               	movlb	0	; () banked
  1719  0010E0  6F7D               	movwf	(sprintf@sp+1)& (0+255),b
  1720  0010E2  0EE0               	movlw	low (STR_7+3)
  1721  0010E4  0100               	movlb	0	; () banked
  1722  0010E6  6F7E               	movwf	sprintf@f& (0+255),b
  1723  0010E8  0E7F               	movlw	high (STR_7+3)
  1724  0010EA  0100               	movlb	0	; () banked
  1725  0010EC  6F7F               	movwf	(sprintf@f+1)& (0+255),b
  1726  0010EE  C0BD  F080         	movff	_sommatoriaCorrente,?_sprintf+4
  1727  0010F2  C0BE  F081         	movff	_sommatoriaCorrente+1,?_sprintf+5
  1728  0010F6  C0BF  F082         	movff	_sommatoriaCorrente+2,?_sprintf+6
  1729  0010FA  C0C0  F083         	movff	_sommatoriaCorrente+3,?_sprintf+7
  1730  0010FE  EC0D  F000         	call	_sprintf	;wreg free
  1731                           
  1732                           ;tester.c: 143: str[7] = '\0';
  1733  001102  0E00               	movlw	0
  1734  001104  0100               	movlb	0	; () banked
  1735  001106  6FDA               	movwf	(_str+7)& (0+255),b
  1736                           
  1737                           ; BSR set to: 0
  1738                           ;tester.c: 144: LCD_write_string(str);
  1739  001108  0ED3               	movlw	low _str
  1740  00110A  6E20               	movwf	LCD_write_string@buffer,c
  1741  00110C  0E00               	movlw	high _str
  1742  00110E  6E21               	movwf	LCD_write_string@buffer+1,c
  1743  001110  EC53  F019         	call	_LCD_write_string	;wreg free
  1744                           
  1745                           ;tester.c: 145: LCD_write_message("Ah");
  1746  001114  0EFB               	movlw	low STR_11
  1747  001116  6E20               	movwf	LCD_write_message@buffer,c
  1748  001118  0E7F               	movlw	high STR_11
  1749  00111A  6E21               	movwf	LCD_write_message@buffer+1,c
  1750  00111C  ECF1  F018         	call	_LCD_write_message	;wreg free
  1751                           
  1752                           ;tester.c: 146: }
  1753  001120  D006               	goto	l4947
  1754  001122                     l4945:
  1755                           
  1756                           ;tester.c: 147: else{
  1757                           ;tester.c: 148: LCD_write_message("ERRORE!!");
  1758  001122  0ED4               	movlw	low STR_14
  1759  001124  6E20               	movwf	LCD_write_message@buffer,c
  1760  001126  0E7F               	movlw	high STR_14
  1761  001128  6E21               	movwf	LCD_write_message@buffer+1,c
  1762  00112A  ECF1  F018         	call	_LCD_write_message	;wreg free
  1763  00112E                     l4947:
  1764                           
  1765                           ;tester.c: 149: }
  1766                           ;tester.c: 150: }
  1767                           ;tester.c: 151: delay_s(5);
  1768  00112E  0E05               	movlw	5
  1769  001130  EC65  F019         	call	_delay_s
  1770  001134  0012               	return		;funcret
  1771  001136                     __end_of_scarica:
  1772                           	opt stack 0
  1773                           tblptru	equ	0xFF8
  1774                           tblptrh	equ	0xFF7
  1775                           tblptrl	equ	0xFF6
  1776                           tablat	equ	0xFF5
  1777                           intcon	equ	0xFF2
  1778                           postinc0	equ	0xFEE
  1779                           wreg	equ	0xFE8
  1780                           postdec1	equ	0xFE5
  1781                           fsr1l	equ	0xFE1
  1782                           status	equ	0xFD8
  1783                           
  1784 ;; *************** function _delay_s *****************
  1785 ;; Defined at:
  1786 ;;		line 102 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/src\delay.c"
  1787 ;; Parameters:    Size  Location     Type
  1788 ;;  value_s         1    wreg     unsigned char 
  1789 ;; Auto vars:     Size  Location     Type
  1790 ;;  value_s         1   22[COMRAM] unsigned char 
  1791 ;;  repeat_loop     1   23[COMRAM] unsigned char 
  1792 ;; Return value:  Size  Location     Type
  1793 ;;		None               void
  1794 ;; Registers used:
  1795 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1796 ;; Tracked objects:
  1797 ;;		On entry : 0/0
  1798 ;;		On exit  : 0/0
  1799 ;;		Unchanged: 0/0
  1800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1801 ;;      Params:         0       0       0       0       0       0       0       0       0
  1802 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1803 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1804 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1805 ;;Total ram usage:        2 bytes
  1806 ;; Hardware stack levels used:    1
  1807 ;; Hardware stack levels required when called:    3
  1808 ;; This function calls:
  1809 ;;		_delay_ms
  1810 ;; This function is called by:
  1811 ;;		_main
  1812 ;;		_scarica
  1813 ;; This function uses a non-reentrant model
  1814 ;;
  1815                           
  1816                           	psect	text2
  1817  0032CA                     __ptext2:
  1818                           	opt stack 0
  1819  0032CA                     _delay_s:
  1820                           	opt stack 26
  1821                           
  1822                           ;incstack = 0
  1823                           ;delay_s@value_s stored from wreg
  1824  0032CA  6E17               	movwf	delay_s@value_s,c
  1825                           
  1826                           ;src\delay.c: 104: unsigned char repeat_loop;
  1827                           ;src\delay.c: 106: for (repeat_loop = 0; repeat_loop < value_s; repeat_loop++)
  1828  0032CC  0E00               	movlw	0
  1829  0032CE  6E18               	movwf	delay_s@repeat_loop,c
  1830  0032D0  D007               	goto	l3733
  1831  0032D2                     l3729:
  1832                           
  1833                           ;src\delay.c: 107: delay_ms (1000);
  1834  0032D2  0E03               	movlw	3
  1835  0032D4  6E16               	movwf	delay_ms@value_ms+1,c
  1836  0032D6  0EE8               	movlw	232
  1837  0032D8  6E15               	movwf	delay_ms@value_ms,c
  1838  0032DA  ECA9  F018         	call	_delay_ms	;wreg free
  1839  0032DE  2A18               	incf	delay_s@repeat_loop,f,c
  1840  0032E0                     l3733:
  1841  0032E0  5017               	movf	delay_s@value_s,w,c
  1842  0032E2  5C18               	subwf	delay_s@repeat_loop,w,c
  1843  0032E4  B0D8               	btfsc	status,0,c
  1844  0032E6  0012               	return	
  1845  0032E8  D7F4               	goto	l3729
  1846  0032EA                     __end_of_delay_s:
  1847                           	opt stack 0
  1848                           tblptru	equ	0xFF8
  1849                           tblptrh	equ	0xFF7
  1850                           tblptrl	equ	0xFF6
  1851                           tablat	equ	0xFF5
  1852                           intcon	equ	0xFF2
  1853                           postinc0	equ	0xFEE
  1854                           wreg	equ	0xFE8
  1855                           postdec1	equ	0xFE5
  1856                           fsr1l	equ	0xFE1
  1857                           status	equ	0xFD8
  1858                           
  1859 ;; *************** function _LCD_write_integer *****************
  1860 ;; Defined at:
  1861 ;;		line 210 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/src\LCD_44780.c"
  1862 ;; Parameters:    Size  Location     Type
  1863 ;;  value           2   38[COMRAM] int 
  1864 ;;  number_of_di    1   40[COMRAM] unsigned char 
  1865 ;;  zero_cleanin    1   41[COMRAM] unsigned char 
  1866 ;; Auto vars:     Size  Location     Type
  1867 ;;  convertedInt    6   47[COMRAM] unsigned char [6]
  1868 ;;  index           1   53[COMRAM] unsigned char 
  1869 ;; Return value:  Size  Location     Type
  1870 ;;		None               void
  1871 ;; Registers used:
  1872 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1873 ;; Tracked objects:
  1874 ;;		On entry : 0/0
  1875 ;;		On exit  : 0/0
  1876 ;;		Unchanged: 0/0
  1877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1878 ;;      Params:         4       0       0       0       0       0       0       0       0
  1879 ;;      Locals:         7       0       0       0       0       0       0       0       0
  1880 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1881 ;;      Totals:        16       0       0       0       0       0       0       0       0
  1882 ;;Total ram usage:       16 bytes
  1883 ;; Hardware stack levels used:    1
  1884 ;; Hardware stack levels required when called:    7
  1885 ;; This function calls:
  1886 ;;		_LCD_write_string
  1887 ;;		_itoa
  1888 ;; This function is called by:
  1889 ;;		_scarica
  1890 ;; This function uses a non-reentrant model
  1891 ;;
  1892                           
  1893                           	psect	text3
  1894  00239C                     __ptext3:
  1895                           	opt stack 0
  1896  00239C                     _LCD_write_integer:
  1897                           	opt stack 22
  1898                           
  1899                           ;src\LCD_44780.c: 213: unsigned char convertedInt [6] = {0,0,0,0,0,0};
  1900                           
  1901                           ;incstack = 0
  1902  00239C  EE20  F0B3         	lfsr	2,LCD_write_integer@F4919
  1903  0023A0  EE10  F030         	lfsr	1,LCD_write_integer@convertedInt
  1904  0023A4  0E05               	movlw	5
  1905  0023A6                     u3871:
  1906  0023A6  CFDB FFE3          	movff	plusw2,plusw1
  1907  0023AA  06E8               	decf	wreg,f,c
  1908  0023AC  E2FC               	bc	u3871
  1909                           
  1910                           ;src\LCD_44780.c: 216: unsigned char index;
  1911                           ;src\LCD_44780.c: 224: itoa ((unsigned char*) convertedInt, value,10);
  1912  0023AE  0E30               	movlw	low LCD_write_integer@convertedInt
  1913  0023B0  6E1F               	movwf	itoa@buf,c
  1914  0023B2  0E00               	movlw	high LCD_write_integer@convertedInt
  1915  0023B4  6E20               	movwf	itoa@buf+1,c
  1916  0023B6  C027  F021         	movff	LCD_write_integer@value,itoa@val
  1917  0023BA  C028  F022         	movff	LCD_write_integer@value+1,itoa@val+1
  1918  0023BE  0E00               	movlw	0
  1919  0023C0  6E24               	movwf	itoa@base+1,c
  1920  0023C2  0E0A               	movlw	10
  1921  0023C4  6E23               	movwf	itoa@base,c
  1922  0023C6  EC67  F018         	call	_itoa	;wreg free
  1923                           
  1924                           ;src\LCD_44780.c: 228: if (number_of_digits >0 ) {
  1925  0023CA  5029               	movf	LCD_write_integer@number_of_digits,w,c
  1926  0023CC  B4D8               	btfsc	status,2,c
  1927  0023CE  D07E               	goto	l3683
  1928                           
  1929                           ;src\LCD_44780.c: 230: convertedInt[number_of_digits] = '\0';
  1930  0023D0  5029               	movf	LCD_write_integer@number_of_digits,w,c
  1931  0023D2  0D01               	mullw	1
  1932  0023D4  0E30               	movlw	low LCD_write_integer@convertedInt
  1933  0023D6  24F3               	addwf	prodl,w,c
  1934  0023D8  6ED9               	movwf	fsr2l,c
  1935  0023DA  0E00               	movlw	high LCD_write_integer@convertedInt
  1936  0023DC  20F4               	addwfc	prodh,w,c
  1937  0023DE  6EDA               	movwf	fsr2h,c
  1938  0023E0  0E00               	movlw	0
  1939  0023E2  6EDF               	movwf	indf2,c
  1940                           
  1941                           ;src\LCD_44780.c: 234: while (!(convertedInt[number_of_digits-1] <= '9' && convertedInt[
      +                          number_of_digits-1] >= '0')){
  1942  0023E4  D04B               	goto	l3679
  1943  0023E6                     l3661:
  1944                           
  1945                           ;src\LCD_44780.c: 236: for (index = number_of_digits-1; index > 0; index--){
  1946  0023E6  0429               	decf	LCD_write_integer@number_of_digits,w,c
  1947  0023E8  6E36               	movwf	LCD_write_integer@index,c
  1948  0023EA                     l3663:
  1949  0023EA  5036               	movf	LCD_write_integer@index,w,c
  1950  0023EC  B4D8               	btfsc	status,2,c
  1951  0023EE  D046               	goto	l3679
  1952                           
  1953                           ;src\LCD_44780.c: 237: convertedInt[index] = convertedInt[index-1];
  1954  0023F0  0EFF               	movlw	255
  1955  0023F2  6E2B               	movwf	??_LCD_write_integer& (0+255),c
  1956  0023F4  0EFF               	movlw	255
  1957  0023F6  6E2C               	movwf	(??_LCD_write_integer+1)& (0+255),c
  1958  0023F8  5036               	movf	LCD_write_integer@index,w,c
  1959  0023FA  6E2D               	movwf	(??_LCD_write_integer+2)& (0+255),c
  1960  0023FC  6A2E               	clrf	(??_LCD_write_integer+3)& (0+255),c
  1961  0023FE  502B               	movf	??_LCD_write_integer,w,c
  1962  002400  262D               	addwf	??_LCD_write_integer+2,f,c
  1963  002402  502C               	movf	??_LCD_write_integer+1,w,c
  1964  002404  222E               	addwfc	??_LCD_write_integer+3,f,c
  1965  002406  0E30               	movlw	low LCD_write_integer@convertedInt
  1966  002408  242D               	addwf	??_LCD_write_integer+2,w,c
  1967  00240A  6ED9               	movwf	fsr2l,c
  1968  00240C  0E00               	movlw	high LCD_write_integer@convertedInt
  1969  00240E  202E               	addwfc	??_LCD_write_integer+3,w,c
  1970  002410  6EDA               	movwf	fsr2h,c
  1971  002412  5036               	movf	LCD_write_integer@index,w,c
  1972  002414  0D01               	mullw	1
  1973  002416  0E30               	movlw	low LCD_write_integer@convertedInt
  1974  002418  24F3               	addwf	prodl,w,c
  1975  00241A  6EE1               	movwf	fsr1l,c
  1976  00241C  0E00               	movlw	high LCD_write_integer@convertedInt
  1977  00241E  20F4               	addwfc	prodh,w,c
  1978  002420  6EE2               	movwf	fsr1h,c
  1979  002422  CFDF FFE7          	movff	indf2,indf1
  1980                           
  1981                           ;src\LCD_44780.c: 239: if (zero_cleaning == 0x01) {
  1982  002426  042A               	decf	LCD_write_integer@zero_cleaning,w,c
  1983  002428  A4D8               	btfss	status,2,c
  1984  00242A  D013               	goto	l3673
  1985                           
  1986                           ;src\LCD_44780.c: 240: convertedInt[index-1] = ' ';
  1987  00242C  0EFF               	movlw	255
  1988  00242E  6E2B               	movwf	??_LCD_write_integer& (0+255),c
  1989  002430  0EFF               	movlw	255
  1990  002432  6E2C               	movwf	(??_LCD_write_integer+1)& (0+255),c
  1991  002434  5036               	movf	LCD_write_integer@index,w,c
  1992  002436  6E2D               	movwf	(??_LCD_write_integer+2)& (0+255),c
  1993  002438  6A2E               	clrf	(??_LCD_write_integer+3)& (0+255),c
  1994  00243A  502B               	movf	??_LCD_write_integer,w,c
  1995  00243C  262D               	addwf	??_LCD_write_integer+2,f,c
  1996  00243E  502C               	movf	??_LCD_write_integer+1,w,c
  1997  002440  222E               	addwfc	??_LCD_write_integer+3,f,c
  1998  002442  0E30               	movlw	low LCD_write_integer@convertedInt
  1999  002444  242D               	addwf	??_LCD_write_integer+2,w,c
  2000  002446  6ED9               	movwf	fsr2l,c
  2001  002448  0E00               	movlw	high LCD_write_integer@convertedInt
  2002  00244A  202E               	addwfc	??_LCD_write_integer+3,w,c
  2003  00244C  6EDA               	movwf	fsr2h,c
  2004  00244E  0E20               	movlw	32
  2005  002450  D012               	goto	L1
  2006  002452                     l3673:
  2007                           
  2008                           ;src\LCD_44780.c: 242: convertedInt[index-1] = '0';
  2009  002452  0EFF               	movlw	255
  2010  002454  6E2B               	movwf	??_LCD_write_integer& (0+255),c
  2011  002456  0EFF               	movlw	255
  2012  002458  6E2C               	movwf	(??_LCD_write_integer+1)& (0+255),c
  2013  00245A  5036               	movf	LCD_write_integer@index,w,c
  2014  00245C  6E2D               	movwf	(??_LCD_write_integer+2)& (0+255),c
  2015  00245E  6A2E               	clrf	(??_LCD_write_integer+3)& (0+255),c
  2016  002460  502B               	movf	??_LCD_write_integer,w,c
  2017  002462  262D               	addwf	??_LCD_write_integer+2,f,c
  2018  002464  502C               	movf	??_LCD_write_integer+1,w,c
  2019  002466  222E               	addwfc	??_LCD_write_integer+3,f,c
  2020  002468  0E30               	movlw	low LCD_write_integer@convertedInt
  2021  00246A  242D               	addwf	??_LCD_write_integer+2,w,c
  2022  00246C  6ED9               	movwf	fsr2l,c
  2023  00246E  0E00               	movlw	high LCD_write_integer@convertedInt
  2024  002470  202E               	addwfc	??_LCD_write_integer+3,w,c
  2025  002472  6EDA               	movwf	fsr2h,c
  2026  002474  0E30               	movlw	48
  2027  002476                     L1:
  2028  002476  6EDF               	movwf	indf2,c
  2029  002478  0636               	decf	LCD_write_integer@index,f,c
  2030  00247A  D7B7               	goto	l3663
  2031  00247C                     l3679:
  2032  00247C  0EFF               	movlw	255
  2033  00247E  6E2B               	movwf	??_LCD_write_integer& (0+255),c
  2034  002480  0EFF               	movlw	255
  2035  002482  6E2C               	movwf	(??_LCD_write_integer+1)& (0+255),c
  2036  002484  5029               	movf	LCD_write_integer@number_of_digits,w,c
  2037  002486  6E2D               	movwf	(??_LCD_write_integer+2)& (0+255),c
  2038  002488  6A2E               	clrf	(??_LCD_write_integer+3)& (0+255),c
  2039  00248A  502B               	movf	??_LCD_write_integer,w,c
  2040  00248C  262D               	addwf	??_LCD_write_integer+2,f,c
  2041  00248E  502C               	movf	??_LCD_write_integer+1,w,c
  2042  002490  222E               	addwfc	??_LCD_write_integer+3,f,c
  2043  002492  0E30               	movlw	low LCD_write_integer@convertedInt
  2044  002494  242D               	addwf	??_LCD_write_integer+2,w,c
  2045  002496  6ED9               	movwf	fsr2l,c
  2046  002498  0E00               	movlw	high LCD_write_integer@convertedInt
  2047  00249A  202E               	addwfc	??_LCD_write_integer+3,w,c
  2048  00249C  6EDA               	movwf	fsr2h,c
  2049  00249E  0E3A               	movlw	58
  2050  0024A0  60DF               	cpfslt	indf2,c
  2051  0024A2  D7A1               	goto	l3661
  2052  0024A4  0EFF               	movlw	255
  2053  0024A6  6E2B               	movwf	??_LCD_write_integer& (0+255),c
  2054  0024A8  0EFF               	movlw	255
  2055  0024AA  6E2C               	movwf	(??_LCD_write_integer+1)& (0+255),c
  2056  0024AC  5029               	movf	LCD_write_integer@number_of_digits,w,c
  2057  0024AE  6E2D               	movwf	(??_LCD_write_integer+2)& (0+255),c
  2058  0024B0  6A2E               	clrf	(??_LCD_write_integer+3)& (0+255),c
  2059  0024B2  502B               	movf	??_LCD_write_integer,w,c
  2060  0024B4  262D               	addwf	??_LCD_write_integer+2,f,c
  2061  0024B6  502C               	movf	??_LCD_write_integer+1,w,c
  2062  0024B8  222E               	addwfc	??_LCD_write_integer+3,f,c
  2063  0024BA  0E30               	movlw	low LCD_write_integer@convertedInt
  2064  0024BC  242D               	addwf	??_LCD_write_integer+2,w,c
  2065  0024BE  6ED9               	movwf	fsr2l,c
  2066  0024C0  0E00               	movlw	high LCD_write_integer@convertedInt
  2067  0024C2  202E               	addwfc	??_LCD_write_integer+3,w,c
  2068  0024C4  6EDA               	movwf	fsr2h,c
  2069  0024C6  0E2F               	movlw	47
  2070  0024C8  64DF               	cpfsgt	indf2,c
  2071  0024CA  D78D               	goto	l3661
  2072  0024CC                     l3683:
  2073                           
  2074                           ;src\LCD_44780.c: 243: }
  2075                           ;src\LCD_44780.c: 245: }
  2076                           ;src\LCD_44780.c: 246: }
  2077                           ;src\LCD_44780.c: 247: }
  2078                           ;src\LCD_44780.c: 249: LCD_write_string (convertedInt);
  2079  0024CC  0E30               	movlw	low LCD_write_integer@convertedInt
  2080  0024CE  6E20               	movwf	LCD_write_string@buffer,c
  2081  0024D0  0E00               	movlw	high LCD_write_integer@convertedInt
  2082  0024D2  6E21               	movwf	LCD_write_string@buffer+1,c
  2083  0024D4  EC53  F019         	call	_LCD_write_string	;wreg free
  2084  0024D8  0012               	return		;funcret
  2085  0024DA                     __end_of_LCD_write_integer:
  2086                           	opt stack 0
  2087                           tblptru	equ	0xFF8
  2088                           tblptrh	equ	0xFF7
  2089                           tblptrl	equ	0xFF6
  2090                           tablat	equ	0xFF5
  2091                           prodh	equ	0xFF4
  2092                           prodl	equ	0xFF3
  2093                           intcon	equ	0xFF2
  2094                           postinc0	equ	0xFEE
  2095                           wreg	equ	0xFE8
  2096                           indf1	equ	0xFE7
  2097                           postdec1	equ	0xFE5
  2098                           plusw1	equ	0xFE3
  2099                           fsr1h	equ	0xFE2
  2100                           fsr1l	equ	0xFE1
  2101                           indf2	equ	0xFDF
  2102                           plusw2	equ	0xFDB
  2103                           fsr2h	equ	0xFDA
  2104                           fsr2l	equ	0xFD9
  2105                           status	equ	0xFD8
  2106                           
  2107 ;; *************** function _itoa *****************
  2108 ;; Defined at:
  2109 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\itoa.c"
  2110 ;; Parameters:    Size  Location     Type
  2111 ;;  buf             2   30[COMRAM] PTR unsigned char 
  2112 ;;		 -> LCD_write_integer@convertedInt(6), 
  2113 ;;  val             2   32[COMRAM] int 
  2114 ;;  base            2   34[COMRAM] int 
  2115 ;; Auto vars:     Size  Location     Type
  2116 ;;  cp              2   36[COMRAM] PTR unsigned char 
  2117 ;;		 -> LCD_write_integer@convertedInt(6), 
  2118 ;; Return value:  Size  Location     Type
  2119 ;;                  2   30[COMRAM] PTR unsigned char 
  2120 ;; Registers used:
  2121 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2122 ;; Tracked objects:
  2123 ;;		On entry : 0/0
  2124 ;;		On exit  : 0/0
  2125 ;;		Unchanged: 0/0
  2126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2127 ;;      Params:         6       0       0       0       0       0       0       0       0
  2128 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2129 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2130 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2131 ;;Total ram usage:        8 bytes
  2132 ;; Hardware stack levels used:    1
  2133 ;; Hardware stack levels required when called:    3
  2134 ;; This function calls:
  2135 ;;		_utoa
  2136 ;; This function is called by:
  2137 ;;		_LCD_write_integer
  2138 ;; This function uses a non-reentrant model
  2139 ;;
  2140                           
  2141                           	psect	text4
  2142  0030CE                     __ptext4:
  2143                           	opt stack 0
  2144  0030CE                     _itoa:
  2145                           	opt stack 25
  2146                           
  2147                           ;incstack = 0
  2148  0030CE  C01F  F025         	movff	itoa@buf,itoa@cp
  2149  0030D2  C020  F026         	movff	itoa@buf+1,itoa@cp+1
  2150  0030D6  AE22               	btfss	itoa@val+1,7,c
  2151  0030D8  D00C               	goto	l3139
  2152  0030DA  C01F  FFD9         	movff	itoa@buf,fsr2l
  2153  0030DE  C020  FFDA         	movff	itoa@buf+1,fsr2h
  2154  0030E2  0E2D               	movlw	45
  2155  0030E4  6EDF               	movwf	indf2,c
  2156  0030E6  4A1F               	infsnz	itoa@buf,f,c
  2157  0030E8  2A20               	incf	itoa@buf+1,f,c
  2158  0030EA  6C21               	negf	itoa@val,c
  2159  0030EC  1E22               	comf	itoa@val+1,f,c
  2160  0030EE  B0D8               	btfsc	status,0,c
  2161  0030F0  2A22               	incf	itoa@val+1,f,c
  2162  0030F2                     l3139:
  2163  0030F2  C01F  F016         	movff	itoa@buf,utoa@buf
  2164  0030F6  C020  F017         	movff	itoa@buf+1,utoa@buf+1
  2165  0030FA  C021  F018         	movff	itoa@val,utoa@val
  2166  0030FE  C022  F019         	movff	itoa@val+1,utoa@val+1
  2167  003102  C023  F01A         	movff	itoa@base,utoa@base
  2168  003106  C024  F01B         	movff	itoa@base+1,utoa@base+1
  2169  00310A  EC51  F016         	call	_utoa	;wreg free
  2170  00310E  0012               	return	
  2171  003110                     __end_of_itoa:
  2172                           	opt stack 0
  2173                           tblptru	equ	0xFF8
  2174                           tblptrh	equ	0xFF7
  2175                           tblptrl	equ	0xFF6
  2176                           tablat	equ	0xFF5
  2177                           prodh	equ	0xFF4
  2178                           prodl	equ	0xFF3
  2179                           intcon	equ	0xFF2
  2180                           postinc0	equ	0xFEE
  2181                           wreg	equ	0xFE8
  2182                           indf1	equ	0xFE7
  2183                           postdec1	equ	0xFE5
  2184                           plusw1	equ	0xFE3
  2185                           fsr1h	equ	0xFE2
  2186                           fsr1l	equ	0xFE1
  2187                           indf2	equ	0xFDF
  2188                           plusw2	equ	0xFDB
  2189                           fsr2h	equ	0xFDA
  2190                           fsr2l	equ	0xFD9
  2191                           status	equ	0xFD8
  2192                           
  2193 ;; *************** function _utoa *****************
  2194 ;; Defined at:
  2195 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\itoa.c"
  2196 ;; Parameters:    Size  Location     Type
  2197 ;;  buf             2   21[COMRAM] PTR unsigned char 
  2198 ;;		 -> LCD_write_integer@convertedInt(6), 
  2199 ;;  val             2   23[COMRAM] unsigned int 
  2200 ;;  base            2   25[COMRAM] int 
  2201 ;; Auto vars:     Size  Location     Type
  2202 ;;  v               2   27[COMRAM] unsigned int 
  2203 ;;  c               1   29[COMRAM] unsigned char 
  2204 ;; Return value:  Size  Location     Type
  2205 ;;                  2   21[COMRAM] PTR unsigned char 
  2206 ;; Registers used:
  2207 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2208 ;; Tracked objects:
  2209 ;;		On entry : 0/0
  2210 ;;		On exit  : 0/0
  2211 ;;		Unchanged: 0/0
  2212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2213 ;;      Params:         6       0       0       0       0       0       0       0       0
  2214 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2215 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2216 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2217 ;;Total ram usage:        9 bytes
  2218 ;; Hardware stack levels used:    1
  2219 ;; Hardware stack levels required when called:    2
  2220 ;; This function calls:
  2221 ;;		___lwdiv
  2222 ;;		___lwmod
  2223 ;; This function is called by:
  2224 ;;		_itoa
  2225 ;; This function uses a non-reentrant model
  2226 ;;
  2227                           
  2228                           	psect	text5
  2229  002CA2                     __ptext5:
  2230                           	opt stack 0
  2231  002CA2                     _utoa:
  2232                           	opt stack 25
  2233                           
  2234                           ;incstack = 0
  2235  002CA2  C018  F01C         	movff	utoa@val,utoa@v
  2236  002CA6  C019  F01D         	movff	utoa@val+1,utoa@v+1
  2237  002CAA                     l3095:
  2238  002CAA  C01C  F00F         	movff	utoa@v,___lwdiv@dividend
  2239  002CAE  C01D  F010         	movff	utoa@v+1,___lwdiv@dividend+1
  2240  002CB2  C01A  F011         	movff	utoa@base,___lwdiv@divisor
  2241  002CB6  C01B  F012         	movff	utoa@base+1,___lwdiv@divisor+1
  2242  002CBA  ECF9  F017         	call	___lwdiv	;wreg free
  2243  002CBE  C00F  F01C         	movff	?___lwdiv,utoa@v
  2244  002CC2  C010  F01D         	movff	?___lwdiv+1,utoa@v+1
  2245  002CC6  4A16               	infsnz	utoa@buf,f,c
  2246  002CC8  2A17               	incf	utoa@buf+1,f,c
  2247  002CCA  501C               	movf	utoa@v,w,c
  2248  002CCC  101D               	iorwf	utoa@v+1,w,c
  2249  002CCE  A4D8               	btfss	status,2,c
  2250  002CD0  D7EC               	goto	l3095
  2251  002CD2  C016  FFD9         	movff	utoa@buf,fsr2l
  2252  002CD6  C017  FFDA         	movff	utoa@buf+1,fsr2h
  2253  002CDA  0E00               	movlw	0
  2254  002CDC  6EDF               	movwf	indf2,c
  2255  002CDE  0616               	decf	utoa@buf,f,c
  2256  002CE0  A0D8               	btfss	status,0,c
  2257  002CE2  0617               	decf	utoa@buf+1,f,c
  2258  002CE4                     l3105:
  2259  002CE4  C018  F00F         	movff	utoa@val,___lwmod@dividend
  2260  002CE8  C019  F010         	movff	utoa@val+1,___lwmod@dividend+1
  2261  002CEC  C01A  F011         	movff	utoa@base,___lwmod@divisor
  2262  002CF0  C01B  F012         	movff	utoa@base+1,___lwmod@divisor+1
  2263  002CF4  EC88  F018         	call	___lwmod	;wreg free
  2264  002CF8  500F               	movf	?___lwmod,w,c
  2265  002CFA  6E1E               	movwf	utoa@c,c
  2266  002CFC  C018  F00F         	movff	utoa@val,___lwdiv@dividend
  2267  002D00  C019  F010         	movff	utoa@val+1,___lwdiv@dividend+1
  2268  002D04  C01A  F011         	movff	utoa@base,___lwdiv@divisor
  2269  002D08  C01B  F012         	movff	utoa@base+1,___lwdiv@divisor+1
  2270  002D0C  ECF9  F017         	call	___lwdiv	;wreg free
  2271  002D10  C00F  F018         	movff	?___lwdiv,utoa@val
  2272  002D14  C010  F019         	movff	?___lwdiv+1,utoa@val+1
  2273  002D18  0E09               	movlw	9
  2274  002D1A  641E               	cpfsgt	utoa@c,c
  2275  002D1C  D002               	goto	l687
  2276  002D1E  0E07               	movlw	7
  2277  002D20  261E               	addwf	utoa@c,f,c
  2278  002D22                     l687:
  2279  002D22  0E30               	movlw	48
  2280  002D24  261E               	addwf	utoa@c,f,c
  2281  002D26  C016  FFD9         	movff	utoa@buf,fsr2l
  2282  002D2A  C017  FFDA         	movff	utoa@buf+1,fsr2h
  2283  002D2E  C01E  FFDF         	movff	utoa@c,indf2
  2284  002D32  0616               	decf	utoa@buf,f,c
  2285  002D34  A0D8               	btfss	status,0,c
  2286  002D36  0617               	decf	utoa@buf+1,f,c
  2287  002D38  5018               	movf	utoa@val,w,c
  2288  002D3A  1019               	iorwf	utoa@val+1,w,c
  2289  002D3C  A4D8               	btfss	status,2,c
  2290  002D3E  D7D2               	goto	l3105
  2291                           
  2292                           ;	Return value of _utoa is never used
  2293  002D40  4A16               	infsnz	utoa@buf,f,c
  2294  002D42  2A17               	incf	utoa@buf+1,f,c
  2295  002D44  0012               	return	
  2296  002D46                     __end_of_utoa:
  2297                           	opt stack 0
  2298                           tblptru	equ	0xFF8
  2299                           tblptrh	equ	0xFF7
  2300                           tblptrl	equ	0xFF6
  2301                           tablat	equ	0xFF5
  2302                           prodh	equ	0xFF4
  2303                           prodl	equ	0xFF3
  2304                           intcon	equ	0xFF2
  2305                           postinc0	equ	0xFEE
  2306                           wreg	equ	0xFE8
  2307                           indf1	equ	0xFE7
  2308                           postdec1	equ	0xFE5
  2309                           plusw1	equ	0xFE3
  2310                           fsr1h	equ	0xFE2
  2311                           fsr1l	equ	0xFE1
  2312                           indf2	equ	0xFDF
  2313                           plusw2	equ	0xFDB
  2314                           fsr2h	equ	0xFDA
  2315                           fsr2l	equ	0xFD9
  2316                           status	equ	0xFD8
  2317                           
  2318 ;; *************** function ___lwmod *****************
  2319 ;; Defined at:
  2320 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
  2321 ;; Parameters:    Size  Location     Type
  2322 ;;  dividend        2   14[COMRAM] unsigned int 
  2323 ;;  divisor         2   16[COMRAM] unsigned int 
  2324 ;; Auto vars:     Size  Location     Type
  2325 ;;  counter         1   18[COMRAM] unsigned char 
  2326 ;; Return value:  Size  Location     Type
  2327 ;;                  2   14[COMRAM] unsigned int 
  2328 ;; Registers used:
  2329 ;;		wreg, status,2, status,0
  2330 ;; Tracked objects:
  2331 ;;		On entry : 0/0
  2332 ;;		On exit  : 0/0
  2333 ;;		Unchanged: 0/0
  2334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2335 ;;      Params:         4       0       0       0       0       0       0       0       0
  2336 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2337 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2338 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2339 ;;Total ram usage:        5 bytes
  2340 ;; Hardware stack levels used:    1
  2341 ;; Hardware stack levels required when called:    1
  2342 ;; This function calls:
  2343 ;;		Nothing
  2344 ;; This function is called by:
  2345 ;;		_utoa
  2346 ;; This function uses a non-reentrant model
  2347 ;;
  2348                           
  2349                           	psect	text6
  2350  003110                     __ptext6:
  2351                           	opt stack 0
  2352  003110                     ___lwmod:
  2353                           	opt stack 25
  2354                           
  2355                           ;incstack = 0
  2356  003110  5011               	movf	___lwmod@divisor,w,c
  2357  003112  1012               	iorwf	___lwmod@divisor+1,w,c
  2358  003114  B4D8               	btfsc	status,2,c
  2359  003116  D018               	goto	l776
  2360  003118  0E01               	movlw	1
  2361  00311A  6E13               	movwf	___lwmod@counter,c
  2362  00311C  D004               	goto	l2653
  2363  00311E                     l2651:
  2364  00311E  90D8               	bcf	status,0,c
  2365  003120  3611               	rlcf	___lwmod@divisor,f,c
  2366  003122  3612               	rlcf	___lwmod@divisor+1,f,c
  2367  003124  2A13               	incf	___lwmod@counter,f,c
  2368  003126                     l2653:
  2369  003126  AE12               	btfss	___lwmod@divisor+1,7,c
  2370  003128  D7FA               	goto	l2651
  2371  00312A                     l2655:
  2372  00312A  5011               	movf	___lwmod@divisor,w,c
  2373  00312C  5C0F               	subwf	___lwmod@dividend,w,c
  2374  00312E  5012               	movf	___lwmod@divisor+1,w,c
  2375  003130  5810               	subwfb	___lwmod@dividend+1,w,c
  2376  003132  A0D8               	btfss	status,0,c
  2377  003134  D004               	goto	l2659
  2378  003136  5011               	movf	___lwmod@divisor,w,c
  2379  003138  5E0F               	subwf	___lwmod@dividend,f,c
  2380  00313A  5012               	movf	___lwmod@divisor+1,w,c
  2381  00313C  5A10               	subwfb	___lwmod@dividend+1,f,c
  2382  00313E                     l2659:
  2383  00313E  90D8               	bcf	status,0,c
  2384  003140  3212               	rrcf	___lwmod@divisor+1,f,c
  2385  003142  3211               	rrcf	___lwmod@divisor,f,c
  2386  003144  2E13               	decfsz	___lwmod@counter,f,c
  2387  003146  D7F1               	goto	l2655
  2388  003148                     l776:
  2389  003148  C00F  F00F         	movff	___lwmod@dividend,?___lwmod
  2390  00314C  C010  F010         	movff	___lwmod@dividend+1,?___lwmod+1
  2391  003150  0012               	return		;funcret
  2392  003152                     __end_of___lwmod:
  2393                           	opt stack 0
  2394                           tblptru	equ	0xFF8
  2395                           tblptrh	equ	0xFF7
  2396                           tblptrl	equ	0xFF6
  2397                           tablat	equ	0xFF5
  2398                           prodh	equ	0xFF4
  2399                           prodl	equ	0xFF3
  2400                           intcon	equ	0xFF2
  2401                           postinc0	equ	0xFEE
  2402                           wreg	equ	0xFE8
  2403                           indf1	equ	0xFE7
  2404                           postdec1	equ	0xFE5
  2405                           plusw1	equ	0xFE3
  2406                           fsr1h	equ	0xFE2
  2407                           fsr1l	equ	0xFE1
  2408                           indf2	equ	0xFDF
  2409                           plusw2	equ	0xFDB
  2410                           fsr2h	equ	0xFDA
  2411                           fsr2l	equ	0xFD9
  2412                           status	equ	0xFD8
  2413                           
  2414 ;; *************** function ___lwdiv *****************
  2415 ;; Defined at:
  2416 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  2417 ;; Parameters:    Size  Location     Type
  2418 ;;  dividend        2   14[COMRAM] unsigned int 
  2419 ;;  divisor         2   16[COMRAM] unsigned int 
  2420 ;; Auto vars:     Size  Location     Type
  2421 ;;  quotient        2   18[COMRAM] unsigned int 
  2422 ;;  counter         1   20[COMRAM] unsigned char 
  2423 ;; Return value:  Size  Location     Type
  2424 ;;                  2   14[COMRAM] unsigned int 
  2425 ;; Registers used:
  2426 ;;		wreg, status,2, status,0
  2427 ;; Tracked objects:
  2428 ;;		On entry : 0/0
  2429 ;;		On exit  : 0/0
  2430 ;;		Unchanged: 0/0
  2431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2432 ;;      Params:         4       0       0       0       0       0       0       0       0
  2433 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2434 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2435 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2436 ;;Total ram usage:        7 bytes
  2437 ;; Hardware stack levels used:    1
  2438 ;; Hardware stack levels required when called:    1
  2439 ;; This function calls:
  2440 ;;		Nothing
  2441 ;; This function is called by:
  2442 ;;		_utoa
  2443 ;; This function uses a non-reentrant model
  2444 ;;
  2445                           
  2446                           	psect	text7
  2447  002FF2                     __ptext7:
  2448                           	opt stack 0
  2449  002FF2                     ___lwdiv:
  2450                           	opt stack 25
  2451                           
  2452                           ;incstack = 0
  2453  002FF2  0E00               	movlw	0
  2454  002FF4  6E14               	movwf	___lwdiv@quotient+1,c
  2455  002FF6  0E00               	movlw	0
  2456  002FF8  6E13               	movwf	___lwdiv@quotient,c
  2457  002FFA  5011               	movf	___lwdiv@divisor,w,c
  2458  002FFC  1012               	iorwf	___lwdiv@divisor+1,w,c
  2459  002FFE  B4D8               	btfsc	status,2,c
  2460  003000  D01C               	goto	l766
  2461  003002  0E01               	movlw	1
  2462  003004  6E15               	movwf	___lwdiv@counter,c
  2463  003006  D004               	goto	l2633
  2464  003008                     l2631:
  2465  003008  90D8               	bcf	status,0,c
  2466  00300A  3611               	rlcf	___lwdiv@divisor,f,c
  2467  00300C  3612               	rlcf	___lwdiv@divisor+1,f,c
  2468  00300E  2A15               	incf	___lwdiv@counter,f,c
  2469  003010                     l2633:
  2470  003010  AE12               	btfss	___lwdiv@divisor+1,7,c
  2471  003012  D7FA               	goto	l2631
  2472  003014                     l2635:
  2473  003014  90D8               	bcf	status,0,c
  2474  003016  3613               	rlcf	___lwdiv@quotient,f,c
  2475  003018  3614               	rlcf	___lwdiv@quotient+1,f,c
  2476  00301A  5011               	movf	___lwdiv@divisor,w,c
  2477  00301C  5C0F               	subwf	___lwdiv@dividend,w,c
  2478  00301E  5012               	movf	___lwdiv@divisor+1,w,c
  2479  003020  5810               	subwfb	___lwdiv@dividend+1,w,c
  2480  003022  A0D8               	btfss	status,0,c
  2481  003024  D005               	goto	l2643
  2482  003026  5011               	movf	___lwdiv@divisor,w,c
  2483  003028  5E0F               	subwf	___lwdiv@dividend,f,c
  2484  00302A  5012               	movf	___lwdiv@divisor+1,w,c
  2485  00302C  5A10               	subwfb	___lwdiv@dividend+1,f,c
  2486  00302E  8013               	bsf	___lwdiv@quotient,0,c
  2487  003030                     l2643:
  2488  003030  90D8               	bcf	status,0,c
  2489  003032  3212               	rrcf	___lwdiv@divisor+1,f,c
  2490  003034  3211               	rrcf	___lwdiv@divisor,f,c
  2491  003036  2E15               	decfsz	___lwdiv@counter,f,c
  2492  003038  D7ED               	goto	l2635
  2493  00303A                     l766:
  2494  00303A  C013  F00F         	movff	___lwdiv@quotient,?___lwdiv
  2495  00303E  C014  F010         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2496  003042  0012               	return		;funcret
  2497  003044                     __end_of___lwdiv:
  2498                           	opt stack 0
  2499                           tblptru	equ	0xFF8
  2500                           tblptrh	equ	0xFF7
  2501                           tblptrl	equ	0xFF6
  2502                           tablat	equ	0xFF5
  2503                           prodh	equ	0xFF4
  2504                           prodl	equ	0xFF3
  2505                           intcon	equ	0xFF2
  2506                           postinc0	equ	0xFEE
  2507                           wreg	equ	0xFE8
  2508                           indf1	equ	0xFE7
  2509                           postdec1	equ	0xFE5
  2510                           plusw1	equ	0xFE3
  2511                           fsr1h	equ	0xFE2
  2512                           fsr1l	equ	0xFE1
  2513                           indf2	equ	0xFDF
  2514                           plusw2	equ	0xFDB
  2515                           fsr2h	equ	0xFDA
  2516                           fsr2l	equ	0xFD9
  2517                           status	equ	0xFD8
  2518                           
  2519 ;; *************** function _LCD_home *****************
  2520 ;; Defined at:
  2521 ;;		line 74 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/src\LCD_44780.c"
  2522 ;; Parameters:    Size  Location     Type
  2523 ;;		None
  2524 ;; Auto vars:     Size  Location     Type
  2525 ;;		None
  2526 ;; Return value:  Size  Location     Type
  2527 ;;		None               void
  2528 ;; Registers used:
  2529 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2530 ;; Tracked objects:
  2531 ;;		On entry : 0/0
  2532 ;;		On exit  : 0/0
  2533 ;;		Unchanged: 0/0
  2534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2535 ;;      Params:         0       0       0       0       0       0       0       0       0
  2536 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2537 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2538 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2539 ;;Total ram usage:        0 bytes
  2540 ;; Hardware stack levels used:    1
  2541 ;; Hardware stack levels required when called:    5
  2542 ;; This function calls:
  2543 ;;		_LCD_send_command
  2544 ;; This function is called by:
  2545 ;;		_main
  2546 ;;		_scarica
  2547 ;; This function uses a non-reentrant model
  2548 ;;
  2549                           
  2550                           	psect	text8
  2551  003234                     __ptext8:
  2552                           	opt stack 0
  2553  003234                     _LCD_home:
  2554                           	opt stack 24
  2555                           
  2556                           ;src\LCD_44780.c: 76: LCD_send_command (0,0,0,0);
  2557                           
  2558                           ;incstack = 0
  2559  003234  0E00               	movlw	0
  2560  003236  6E17               	movwf	LCD_send_command@D2,c
  2561  003238  0E00               	movlw	0
  2562  00323A  6E18               	movwf	LCD_send_command@D1,c
  2563  00323C  0E00               	movlw	0
  2564  00323E  6E19               	movwf	LCD_send_command@D0,c
  2565  003240  0E00               	movlw	0
  2566  003242  ECC2  F018         	call	_LCD_send_command
  2567                           
  2568                           ;src\LCD_44780.c: 77: LCD_send_command (0,0,1,0);
  2569  003246  0E00               	movlw	0
  2570  003248  6E17               	movwf	LCD_send_command@D2,c
  2571  00324A  0E01               	movlw	1
  2572  00324C  6E18               	movwf	LCD_send_command@D1,c
  2573  00324E  0E00               	movlw	0
  2574  003250  6E19               	movwf	LCD_send_command@D0,c
  2575  003252  0E00               	movlw	0
  2576  003254  ECC2  F018         	call	_LCD_send_command
  2577  003258  0012               	return		;funcret
  2578  00325A                     __end_of_LCD_home:
  2579                           	opt stack 0
  2580                           tblptru	equ	0xFF8
  2581                           tblptrh	equ	0xFF7
  2582                           tblptrl	equ	0xFF6
  2583                           tablat	equ	0xFF5
  2584                           prodh	equ	0xFF4
  2585                           prodl	equ	0xFF3
  2586                           intcon	equ	0xFF2
  2587                           postinc0	equ	0xFEE
  2588                           wreg	equ	0xFE8
  2589                           indf1	equ	0xFE7
  2590                           postdec1	equ	0xFE5
  2591                           plusw1	equ	0xFE3
  2592                           fsr1h	equ	0xFE2
  2593                           fsr1l	equ	0xFE1
  2594                           indf2	equ	0xFDF
  2595                           plusw2	equ	0xFDB
  2596                           fsr2h	equ	0xFDA
  2597                           fsr2l	equ	0xFD9
  2598                           status	equ	0xFD8
  2599                           
  2600 ;; *************** function _ricarica *****************
  2601 ;; Defined at:
  2602 ;;		line 154 in file "tester.c"
  2603 ;; Parameters:    Size  Location     Type
  2604 ;;		None
  2605 ;; Auto vars:     Size  Location     Type
  2606 ;;		None
  2607 ;; Return value:  Size  Location     Type
  2608 ;;		None               void
  2609 ;; Registers used:
  2610 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2611 ;; Tracked objects:
  2612 ;;		On entry : 0/0
  2613 ;;		On exit  : 0/0
  2614 ;;		Unchanged: 0/0
  2615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2616 ;;      Params:         0       0       0       0       0       0       0       0       0
  2617 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2618 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2619 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2620 ;;Total ram usage:        0 bytes
  2621 ;; Hardware stack levels used:    1
  2622 ;; Hardware stack levels required when called:    7
  2623 ;; This function calls:
  2624 ;;		_LCD_goto_line
  2625 ;;		_LCD_write_message
  2626 ;;		_LCD_write_string
  2627 ;;		___flge
  2628 ;;		_delay_ms
  2629 ;;		_read_adc
  2630 ;;		_sprintf
  2631 ;; This function is called by:
  2632 ;;		_main
  2633 ;; This function uses a non-reentrant model
  2634 ;;
  2635                           
  2636                           	psect	text9
  2637  0020DA                     __ptext9:
  2638                           	opt stack 0
  2639  0020DA                     _ricarica:
  2640                           	opt stack 23
  2641                           
  2642                           ;tester.c: 155: read_adc();
  2643                           
  2644                           ;incstack = 0
  2645  0020DA  ECED  F00D         	call	_read_adc	;wreg free
  2646                           
  2647                           ;tester.c: 156: while ((current < -0.5) || (voltage < 13.5)) {
  2648  0020DE  D059               	goto	l4851
  2649  0020E0                     l203:
  2650                           
  2651                           ;tester.c: 157: PORTCbits.RC6 = 1;
  2652  0020E0  8C82               	bsf	3970,6,c	;volatile
  2653                           
  2654                           ;tester.c: 158: LCD_goto_line(1);
  2655  0020E2  0E01               	movlw	1
  2656  0020E4  ECF5  F015         	call	_LCD_goto_line
  2657                           
  2658                           ;tester.c: 159: LCD_write_message("Ciclo ricarica..");
  2659  0020E8  0E71               	movlw	low STR_15
  2660  0020EA  6E20               	movwf	LCD_write_message@buffer,c
  2661  0020EC  0E7F               	movlw	high STR_15
  2662  0020EE  6E21               	movwf	LCD_write_message@buffer+1,c
  2663  0020F0  ECF1  F018         	call	_LCD_write_message	;wreg free
  2664                           
  2665                           ;tester.c: 160: LCD_goto_line(2);
  2666  0020F4  0E02               	movlw	2
  2667  0020F6  ECF5  F015         	call	_LCD_goto_line
  2668                           
  2669                           ;tester.c: 161: sprintf(str, "V:%.3f", voltage);
  2670  0020FA  0ED3               	movlw	low _str
  2671  0020FC  0100               	movlb	0	; () banked
  2672  0020FE  6F7C               	movwf	sprintf@sp& (0+255),b
  2673  002100  0E00               	movlw	high _str
  2674  002102  0100               	movlb	0	; () banked
  2675  002104  6F7D               	movwf	(sprintf@sp+1)& (0+255),b
  2676  002106  0EEC               	movlw	low STR_6
  2677  002108  0100               	movlb	0	; () banked
  2678  00210A  6F7E               	movwf	sprintf@f& (0+255),b
  2679  00210C  0E7F               	movlw	high STR_6
  2680  00210E  0100               	movlb	0	; () banked
  2681  002110  6F7F               	movwf	(sprintf@f+1)& (0+255),b
  2682  002112  C049  F080         	movff	_voltage,?_sprintf+4
  2683  002116  C04A  F081         	movff	_voltage+1,?_sprintf+5
  2684  00211A  C04B  F082         	movff	_voltage+2,?_sprintf+6
  2685  00211E  C04C  F083         	movff	_voltage+3,?_sprintf+7
  2686  002122  EC0D  F000         	call	_sprintf	;wreg free
  2687                           
  2688                           ;tester.c: 162: str[7] = '\0';
  2689  002126  0E00               	movlw	0
  2690  002128  0100               	movlb	0	; () banked
  2691  00212A  6FDA               	movwf	(_str+7)& (0+255),b
  2692                           
  2693                           ; BSR set to: 0
  2694                           ;tester.c: 163: LCD_write_string(str);
  2695  00212C  0ED3               	movlw	low _str
  2696  00212E  6E20               	movwf	LCD_write_string@buffer,c
  2697  002130  0E00               	movlw	high _str
  2698  002132  6E21               	movwf	LCD_write_string@buffer+1,c
  2699  002134  EC53  F019         	call	_LCD_write_string	;wreg free
  2700                           
  2701                           ;tester.c: 164: sprintf(str, " I:%.3f", current);
  2702  002138  0ED3               	movlw	low _str
  2703  00213A  0100               	movlb	0	; () banked
  2704  00213C  6F7C               	movwf	sprintf@sp& (0+255),b
  2705  00213E  0E00               	movlw	high _str
  2706  002140  0100               	movlb	0	; () banked
  2707  002142  6F7D               	movwf	(sprintf@sp+1)& (0+255),b
  2708  002144  0EDD               	movlw	low STR_7
  2709  002146  0100               	movlb	0	; () banked
  2710  002148  6F7E               	movwf	sprintf@f& (0+255),b
  2711  00214A  0E7F               	movlw	high STR_7
  2712  00214C  0100               	movlb	0	; () banked
  2713  00214E  6F7F               	movwf	(sprintf@f+1)& (0+255),b
  2714  002150  C0B9  F080         	movff	_current,?_sprintf+4
  2715  002154  C0BA  F081         	movff	_current+1,?_sprintf+5
  2716  002158  C0BB  F082         	movff	_current+2,?_sprintf+6
  2717  00215C  C0BC  F083         	movff	_current+3,?_sprintf+7
  2718  002160  EC0D  F000         	call	_sprintf	;wreg free
  2719                           
  2720                           ;tester.c: 165: str[7] = '\0';
  2721  002164  0E00               	movlw	0
  2722  002166  0100               	movlb	0	; () banked
  2723  002168  6FDA               	movwf	(_str+7)& (0+255),b
  2724                           
  2725                           ; BSR set to: 0
  2726                           ;tester.c: 166: LCD_write_string(str);
  2727  00216A  0ED3               	movlw	low _str
  2728  00216C  6E20               	movwf	LCD_write_string@buffer,c
  2729  00216E  0E00               	movlw	high _str
  2730  002170  6E21               	movwf	LCD_write_string@buffer+1,c
  2731  002172  EC53  F019         	call	_LCD_write_string	;wreg free
  2732                           
  2733                           ;tester.c: 167: read_adc();
  2734  002176  ECED  F00D         	call	_read_adc	;wreg free
  2735                           
  2736                           ;tester.c: 168: delay_ms(500);
  2737  00217A  0E01               	movlw	1
  2738  00217C  6E16               	movwf	delay_ms@value_ms+1,c
  2739  00217E  0EF4               	movlw	244
  2740  002180  6E15               	movwf	delay_ms@value_ms,c
  2741  002182  ECA9  F018         	call	_delay_ms	;wreg free
  2742                           
  2743                           ;tester.c: 170: delay_ms(1);
  2744  002186  0E00               	movlw	0
  2745  002188  6E16               	movwf	delay_ms@value_ms+1,c
  2746  00218A  0E01               	movlw	1
  2747  00218C  6E15               	movwf	delay_ms@value_ms,c
  2748  00218E  ECA9  F018         	call	_delay_ms	;wreg free
  2749  002192                     l4851:
  2750  002192  C0B9  F00F         	movff	_current,___flge@ff1
  2751  002196  C0BA  F010         	movff	_current+1,___flge@ff1+1
  2752  00219A  C0BB  F011         	movff	_current+2,___flge@ff1+2
  2753  00219E  C0BC  F012         	movff	_current+3,___flge@ff1+3
  2754  0021A2  0E00               	movlw	0
  2755  0021A4  6E13               	movwf	___flge@ff2,c
  2756  0021A6  0E00               	movlw	0
  2757  0021A8  6E14               	movwf	___flge@ff2+1,c
  2758  0021AA  0E00               	movlw	0
  2759  0021AC  6E15               	movwf	___flge@ff2+2,c
  2760  0021AE  0EBF               	movlw	191
  2761  0021B0  6E16               	movwf	___flge@ff2+3,c
  2762  0021B2  EC9A  F013         	call	___flge	;wreg free
  2763  0021B6  A0D8               	btfss	status,0,c
  2764  0021B8  D793               	goto	l203
  2765  0021BA  C049  F00F         	movff	_voltage,___flge@ff1
  2766  0021BE  C04A  F010         	movff	_voltage+1,___flge@ff1+1
  2767  0021C2  C04B  F011         	movff	_voltage+2,___flge@ff1+2
  2768  0021C6  C04C  F012         	movff	_voltage+3,___flge@ff1+3
  2769  0021CA  0E00               	movlw	0
  2770  0021CC  6E13               	movwf	___flge@ff2,c
  2771  0021CE  0E00               	movlw	0
  2772  0021D0  6E14               	movwf	___flge@ff2+1,c
  2773  0021D2  0E58               	movlw	88
  2774  0021D4  6E15               	movwf	___flge@ff2+2,c
  2775  0021D6  0E41               	movlw	65
  2776  0021D8  6E16               	movwf	___flge@ff2+3,c
  2777  0021DA  EC9A  F013         	call	___flge	;wreg free
  2778  0021DE  A0D8               	btfss	status,0,c
  2779  0021E0  D77F               	goto	l203
  2780                           
  2781                           ;tester.c: 171: }
  2782                           ;tester.c: 172: if ((current > -1)&&(voltage > 14.5)) {
  2783  0021E2  0E00               	movlw	0
  2784  0021E4  6E0F               	movwf	___flge@ff1,c
  2785  0021E6  0E00               	movlw	0
  2786  0021E8  6E10               	movwf	___flge@ff1+1,c
  2787  0021EA  0E80               	movlw	128
  2788  0021EC  6E11               	movwf	___flge@ff1+2,c
  2789  0021EE  0EBF               	movlw	191
  2790  0021F0  6E12               	movwf	___flge@ff1+3,c
  2791  0021F2  C0B9  F013         	movff	_current,___flge@ff2
  2792  0021F6  C0BA  F014         	movff	_current+1,___flge@ff2+1
  2793  0021FA  C0BB  F015         	movff	_current+2,___flge@ff2+2
  2794  0021FE  C0BC  F016         	movff	_current+3,___flge@ff2+3
  2795  002202  EC9A  F013         	call	___flge	;wreg free
  2796  002206  B0D8               	btfsc	status,0,c
  2797  002208  0012               	return	
  2798  00220A  0E00               	movlw	0
  2799  00220C  6E0F               	movwf	___flge@ff1,c
  2800  00220E  0E00               	movlw	0
  2801  002210  6E10               	movwf	___flge@ff1+1,c
  2802  002212  0E68               	movlw	104
  2803  002214  6E11               	movwf	___flge@ff1+2,c
  2804  002216  0E41               	movlw	65
  2805  002218  6E12               	movwf	___flge@ff1+3,c
  2806  00221A  C049  F013         	movff	_voltage,___flge@ff2
  2807  00221E  C04A  F014         	movff	_voltage+1,___flge@ff2+1
  2808  002222  C04B  F015         	movff	_voltage+2,___flge@ff2+2
  2809  002226  C04C  F016         	movff	_voltage+3,___flge@ff2+3
  2810  00222A  EC9A  F013         	call	___flge	;wreg free
  2811  00222E  B0D8               	btfsc	status,0,c
  2812  002230  0012               	return	
  2813                           
  2814                           ;tester.c: 173: LCD_write_message("Carica terminata");
  2815  002232  0E93               	movlw	low STR_18
  2816  002234  6E20               	movwf	LCD_write_message@buffer,c
  2817  002236  0E7F               	movlw	high STR_18
  2818  002238  6E21               	movwf	LCD_write_message@buffer+1,c
  2819  00223A  ECF1  F018         	call	_LCD_write_message	;wreg free
  2820                           
  2821                           ;tester.c: 174: delay_ms(5000);
  2822  00223E  0E13               	movlw	19
  2823  002240  6E16               	movwf	delay_ms@value_ms+1,c
  2824  002242  0E88               	movlw	136
  2825  002244  6E15               	movwf	delay_ms@value_ms,c
  2826  002246  ECA9  F018         	call	_delay_ms	;wreg free
  2827  00224A  0012               	return	
  2828  00224C                     __end_of_ricarica:
  2829                           	opt stack 0
  2830                           tblptru	equ	0xFF8
  2831                           tblptrh	equ	0xFF7
  2832                           tblptrl	equ	0xFF6
  2833                           tablat	equ	0xFF5
  2834                           prodh	equ	0xFF4
  2835                           prodl	equ	0xFF3
  2836                           intcon	equ	0xFF2
  2837                           postinc0	equ	0xFEE
  2838                           wreg	equ	0xFE8
  2839                           indf1	equ	0xFE7
  2840                           postdec1	equ	0xFE5
  2841                           plusw1	equ	0xFE3
  2842                           fsr1h	equ	0xFE2
  2843                           fsr1l	equ	0xFE1
  2844                           indf2	equ	0xFDF
  2845                           plusw2	equ	0xFDB
  2846                           fsr2h	equ	0xFDA
  2847                           fsr2l	equ	0xFD9
  2848                           status	equ	0xFD8
  2849                           
  2850 ;; *************** function _sprintf *****************
  2851 ;; Defined at:
  2852 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  2853 ;; Parameters:    Size  Location     Type
  2854 ;;  sp              2   28[BANK0 ] PTR unsigned char 
  2855 ;;		 -> str(8), 
  2856 ;;  f               2   30[BANK0 ] PTR const unsigned char 
  2857 ;;		 -> STR_17(8), STR_16(7), STR_12(5), STR_10(5), 
  2858 ;;		 -> STR_7(8), STR_6(7), 
  2859 ;; Auto vars:     Size  Location     Type
  2860 ;;  fval            4   58[BANK0 ] PTR const unsigned char 
  2861 ;;  tmpval          4   52[BANK0 ] struct .
  2862 ;;  val             4   46[BANK0 ] unsigned long 
  2863 ;;  cp              3    0        PTR const unsigned char 
  2864 ;;  prec            2   56[BANK0 ] int 
  2865 ;;  exp             2   50[BANK0 ] int 
  2866 ;;  flag            2   44[BANK0 ] unsigned short 
  2867 ;;  ap              2   42[BANK0 ] PTR void [1]
  2868 ;;		 -> ?_sprintf(2), 
  2869 ;;  len             2    0        unsigned int 
  2870 ;;  width           2    0        int 
  2871 ;;  c               1   62[BANK0 ] char 
  2872 ;;  d               1    0        unsigned char 
  2873 ;; Return value:  Size  Location     Type
  2874 ;;                  2   28[BANK0 ] int 
  2875 ;; Registers used:
  2876 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2877 ;; Tracked objects:
  2878 ;;		On entry : 0/0
  2879 ;;		On exit  : 0/0
  2880 ;;		Unchanged: 0/0
  2881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2882 ;;      Params:         0       8       0       0       0       0       0       0       0
  2883 ;;      Locals:         0      25       0       0       0       0       0       0       0
  2884 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2885 ;;      Totals:         0      35       0       0       0       0       0       0       0
  2886 ;;Total ram usage:       35 bytes
  2887 ;; Hardware stack levels used:    1
  2888 ;; Hardware stack levels required when called:    3
  2889 ;; This function calls:
  2890 ;;		___awdiv
  2891 ;;		___fladd
  2892 ;;		___flge
  2893 ;;		___flmul
  2894 ;;		___flneg
  2895 ;;		___flsub
  2896 ;;		___fltol
  2897 ;;		___lldiv
  2898 ;;		___llmod
  2899 ;;		___wmul
  2900 ;;		___xxtofl
  2901 ;;		__div_to_l_
  2902 ;;		__tdiv_to_l_
  2903 ;;		_fround
  2904 ;;		_isdigit
  2905 ;;		_scale
  2906 ;; This function is called by:
  2907 ;;		_scarica
  2908 ;;		_ricarica
  2909 ;; This function uses a non-reentrant model
  2910 ;;
  2911                           
  2912                           	psect	text10
  2913  00001A                     __ptext10:
  2914                           	opt stack 0
  2915  00001A                     _sprintf:
  2916                           	opt stack 26
  2917                           
  2918                           ;doprnt.c: 494: va_list ap;
  2919                           ;doprnt.c: 499: signed char c;
  2920                           ;doprnt.c: 501: int width;
  2921                           ;doprnt.c: 504: int prec;
  2922                           ;doprnt.c: 508: unsigned short flag;
  2923                           ;doprnt.c: 515: char d;
  2924                           ;doprnt.c: 516: double fval;
  2925                           ;doprnt.c: 517: int exp;
  2926                           ;doprnt.c: 523: union {
  2927                           ;doprnt.c: 524: unsigned long vd;
  2928                           ;doprnt.c: 525: double integ;
  2929                           ;doprnt.c: 526: } tmpval;
  2930                           ;doprnt.c: 528: unsigned long val;
  2931                           ;doprnt.c: 529: unsigned len;
  2932                           ;doprnt.c: 530: const char * cp;
  2933                           ;doprnt.c: 533: *ap = __va_start();
  2934                           
  2935                           ;incstack = 0
  2936  00001A  0E80               	movlw	low (?_sprintf+4)
  2937  00001C  0100               	movlb	0	; () banked
  2938  00001E  6F8A               	movwf	sprintf@ap& (0+255),b
  2939  000020  0E00               	movlw	high (?_sprintf+4)
  2940  000022  0100               	movlb	0	; () banked
  2941  000024  6F8B               	movwf	(sprintf@ap+1)& (0+255),b
  2942                           
  2943                           ;doprnt.c: 536: while(c = *f++) {
  2944  000026  EF17  F004         	goto	l4819
  2945  00002A                     l4621:
  2946                           
  2947                           ; BSR set to: 0
  2948                           ;doprnt.c: 538: if(c != '%')
  2949  00002A  0E25               	movlw	37
  2950  00002C  0100               	movlb	0	; () banked
  2951  00002E  199E               	xorwf	sprintf@c& (0+255),w,b
  2952  000030  B4D8               	btfsc	status,2,c
  2953  000032  D007               	goto	l4627
  2954                           
  2955                           ; BSR set to: 0
  2956                           ;doprnt.c: 540: {
  2957                           ;doprnt.c: 541: ((*sp++ = (c)));
  2958  000034  C07C  FFD9         	movff	sprintf@sp,fsr2l
  2959  000038  C07D  FFDA         	movff	sprintf@sp+1,fsr2h
  2960  00003C  C09E  FFDF         	movff	sprintf@c,indf2
  2961  000040  D3F3               	goto	l4817
  2962  000042                     l4627:
  2963                           
  2964                           ; BSR set to: 0
  2965                           ;doprnt.c: 543: }
  2966                           ;doprnt.c: 548: flag = 0;
  2967  000042  0E00               	movlw	0
  2968  000044  0100               	movlb	0	; () banked
  2969  000046  6F8D               	movwf	(sprintf@flag+1)& (0+255),b
  2970  000048  0E00               	movlw	0
  2971  00004A  6F8C               	movwf	sprintf@flag& (0+255),b
  2972                           
  2973                           ; BSR set to: 0
  2974                           ;doprnt.c: 611: if(*f == '.') {
  2975  00004C  C07E  FFF6         	movff	sprintf@f,tblptrl
  2976  000050  C07F  FFF7         	movff	sprintf@f+1,tblptrh
  2977  000054                     	if	0	;tblptru may be non-zero
  2978  000054                     	endif
  2979  000054                     	if	0	;tblptru may be non-zero
  2980  000054                     	endif
  2981  000054  0008               	tblrd		*
  2982  000056  50F5               	movf	tablat,w,c
  2983  000058  0A2E               	xorlw	46
  2984  00005A  A4D8               	btfss	status,2,c
  2985  00005C  D034               	goto	l4641
  2986                           
  2987                           ; BSR set to: 0
  2988                           ;doprnt.c: 612: flag |= 0x4000;
  2989  00005E  0100               	movlb	0	; () banked
  2990  000060  8D8D               	bsf	(sprintf@flag+1)& (0+255),6,b
  2991                           
  2992                           ;doprnt.c: 613: f++;
  2993  000062  0100               	movlb	0	; () banked
  2994  000064  4B7E               	infsnz	sprintf@f& (0+255),f,b
  2995  000066  2B7F               	incf	(sprintf@f+1)& (0+255),f,b
  2996                           
  2997                           ; BSR set to: 0
  2998                           ;doprnt.c: 620: {
  2999                           ;doprnt.c: 621: prec = 0;
  3000  000068  0E00               	movlw	0
  3001  00006A  0100               	movlb	0	; () banked
  3002  00006C  6F99               	movwf	(sprintf@prec+1)& (0+255),b
  3003  00006E  0E00               	movlw	0
  3004  000070  6F98               	movwf	sprintf@prec& (0+255),b
  3005                           
  3006                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  3007  000072  D01E               	goto	l4639
  3008  000074                     l4635:
  3009                           
  3010                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  3011  000074  C098  F00F         	movff	sprintf@prec,___wmul@multiplier
  3012  000078  C099  F010         	movff	sprintf@prec+1,___wmul@multiplier+1
  3013  00007C  0E00               	movlw	0
  3014  00007E  6E12               	movwf	___wmul@multiplicand+1,c
  3015  000080  0E0A               	movlw	10
  3016  000082  6E11               	movwf	___wmul@multiplicand,c
  3017  000084  EC40  F019         	call	___wmul	;wreg free
  3018  000088  C07E  FFF6         	movff	sprintf@f,tblptrl
  3019  00008C  C07F  FFF7         	movff	sprintf@f+1,tblptrh
  3020  000090                     	if	0	;tblptru may be non-zero
  3021  000090                     	endif
  3022  000090                     	if	0	;tblptru may be non-zero
  3023  000090                     	endif
  3024  000090  0008               	tblrd		*
  3025  000092  50F5               	movf	tablat,w,c
  3026  000094  260F               	addwf	?___wmul,f,c
  3027  000096  0E00               	movlw	0
  3028  000098  2210               	addwfc	?___wmul+1,f,c
  3029  00009A  0ED0               	movlw	208
  3030  00009C  240F               	addwf	?___wmul,w,c
  3031  00009E  0100               	movlb	0	; () banked
  3032  0000A0  6F98               	movwf	sprintf@prec& (0+255),b
  3033  0000A2  0EFF               	movlw	255
  3034  0000A4  2010               	addwfc	?___wmul+1,w,c
  3035  0000A6  0100               	movlb	0	; () banked
  3036  0000A8  6F99               	movwf	(sprintf@prec+1)& (0+255),b
  3037                           
  3038                           ; BSR set to: 0
  3039  0000AA  0100               	movlb	0	; () banked
  3040  0000AC  4B7E               	infsnz	sprintf@f& (0+255),f,b
  3041  0000AE  2B7F               	incf	(sprintf@f+1)& (0+255),f,b
  3042  0000B0                     l4639:
  3043                           
  3044                           ; BSR set to: 0
  3045  0000B0  C07E  FFF6         	movff	sprintf@f,tblptrl
  3046  0000B4  C07F  FFF7         	movff	sprintf@f+1,tblptrh
  3047  0000B8                     	if	0	;tblptru may be non-zero
  3048  0000B8                     	endif
  3049  0000B8                     	if	0	;tblptru may be non-zero
  3050  0000B8                     	endif
  3051  0000B8  0008               	tblrd		*
  3052  0000BA  50F5               	movf	tablat,w,c
  3053  0000BC  EC75  F019         	call	_isdigit
  3054  0000C0  A0D8               	btfss	status,0,c
  3055  0000C2  D00C               	goto	l4649
  3056  0000C4  D7D7               	goto	l4635
  3057  0000C6                     l4641:
  3058                           
  3059                           ;doprnt.c: 626: prec = 0;
  3060  0000C6  0E00               	movlw	0
  3061  0000C8  0100               	movlb	0	; () banked
  3062  0000CA  6F99               	movwf	(sprintf@prec+1)& (0+255),b
  3063  0000CC  0E00               	movlw	0
  3064  0000CE  6F98               	movwf	sprintf@prec& (0+255),b
  3065                           
  3066                           ; BSR set to: 0
  3067                           ;doprnt.c: 628: flag |= 0x1000;
  3068  0000D0  0100               	movlb	0	; () banked
  3069  0000D2  898D               	bsf	(sprintf@flag+1)& (0+255),4,b
  3070                           
  3071                           ; BSR set to: 0
  3072                           ;doprnt.c: 630: }
  3073                           ;doprnt.c: 635: switch(c = *f++) {
  3074  0000D4  D003               	goto	l4649
  3075  0000D6                     l4645:
  3076                           
  3077                           ; BSR set to: 0
  3078                           ;doprnt.c: 663: flag |= 0x400;
  3079  0000D6  0100               	movlb	0	; () banked
  3080  0000D8  858D               	bsf	(sprintf@flag+1)& (0+255),2,b
  3081                           
  3082                           ;doprnt.c: 664: break;
  3083  0000DA  D013               	goto	l4651
  3084  0000DC                     l4649:
  3085  0000DC  C07E  FFF6         	movff	sprintf@f,tblptrl
  3086  0000E0  C07F  FFF7         	movff	sprintf@f+1,tblptrh
  3087  0000E4  0100               	movlb	0	; () banked
  3088  0000E6  4B7E               	infsnz	sprintf@f& (0+255),f,b
  3089  0000E8  2B7F               	incf	(sprintf@f+1)& (0+255),f,b
  3090  0000EA                     	if	0	;tblptru may be non-zero
  3091  0000EA                     	endif
  3092  0000EA                     	if	0	;tblptru may be non-zero
  3093  0000EA                     	endif
  3094  0000EA  0008               	tblrd		*
  3095  0000EC  CFF5 F09E          	movff	tablat,sprintf@c
  3096  0000F0  0100               	movlb	0	; () banked
  3097  0000F2  519E               	movf	sprintf@c& (0+255),w,b
  3098                           
  3099                           ; Switch size 1, requested type "space"
  3100                           ; Number of cases is 2, Range of values is 0 to 102
  3101                           ; switch strategies available:
  3102                           ; Name         Instructions Cycles
  3103                           ; simple_byte            7     4 (average)
  3104                           ;	Chosen strategy is simple_byte
  3105  0000F4  0A00               	xorlw	0	; case 0
  3106  0000F6  B4D8               	btfsc	status,2,c
  3107  0000F8  D3A9               	goto	l4821
  3108  0000FA  0A66               	xorlw	102	; case 102
  3109  0000FC  B4D8               	btfsc	status,2,c
  3110  0000FE  D7EB               	goto	l4645
  3111  000100  D396               	goto	l4819
  3112  000102                     l4651:
  3113                           
  3114                           ; BSR set to: 0
  3115                           ;doprnt.c: 825: if(flag & (0x700)) {
  3116  000102  0E07               	movlw	7
  3117  000104  0100               	movlb	0	; () banked
  3118  000106  158D               	andwf	(sprintf@flag+1)& (0+255),w,b
  3119  000108  B4D8               	btfsc	status,2,c
  3120  00010A  D339               	goto	l4799
  3121                           
  3122                           ; BSR set to: 0
  3123                           ;doprnt.c: 827: if(flag & 0x1000)
  3124  00010C  0100               	movlb	0	; () banked
  3125  00010E  A98D               	btfss	(sprintf@flag+1)& (0+255),4,b
  3126  000110  D005               	goto	l4657
  3127                           
  3128                           ; BSR set to: 0
  3129                           ;doprnt.c: 829: prec = 6;
  3130  000112  0E00               	movlw	0
  3131  000114  0100               	movlb	0	; () banked
  3132  000116  6F99               	movwf	(sprintf@prec+1)& (0+255),b
  3133  000118  0E06               	movlw	6
  3134  00011A  6F98               	movwf	sprintf@prec& (0+255),b
  3135  00011C                     l4657:
  3136                           
  3137                           ; BSR set to: 0
  3138                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  3139  00011C  C08A  FFD9         	movff	sprintf@ap,fsr2l
  3140  000120  C08B  FFDA         	movff	sprintf@ap+1,fsr2h
  3141  000124  CFDE F09A          	movff	postinc2,sprintf@fval
  3142  000128  CFDE F09B          	movff	postinc2,sprintf@fval+1
  3143  00012C  CFDE F09C          	movff	postinc2,sprintf@fval+2
  3144  000130  CFDE F09D          	movff	postinc2,sprintf@fval+3
  3145                           
  3146                           ; BSR set to: 0
  3147  000134  0E04               	movlw	4
  3148  000136  0100               	movlb	0	; () banked
  3149  000138  278A               	addwf	sprintf@ap& (0+255),f,b
  3150  00013A  0E00               	movlw	0
  3151  00013C  238B               	addwfc	(sprintf@ap+1)& (0+255),f,b
  3152                           
  3153                           ; BSR set to: 0
  3154                           ;doprnt.c: 831: if(fval < 0.0) {
  3155  00013E  0100               	movlb	0	; () banked
  3156  000140  AF9D               	btfss	(sprintf@fval+3)& (0+255),7,b
  3157  000142  D015               	goto	l4667
  3158                           
  3159                           ; BSR set to: 0
  3160                           ;doprnt.c: 832: fval = -fval;
  3161  000144  C09A  F00F         	movff	sprintf@fval,___flneg@f1
  3162  000148  C09B  F010         	movff	sprintf@fval+1,___flneg@f1+1
  3163  00014C  C09C  F011         	movff	sprintf@fval+2,___flneg@f1+2
  3164  000150  C09D  F012         	movff	sprintf@fval+3,___flneg@f1+3
  3165  000154  ECDA  F018         	call	___flneg	;wreg free
  3166  000158  C00F  F09A         	movff	?___flneg,sprintf@fval
  3167  00015C  C010  F09B         	movff	?___flneg+1,sprintf@fval+1
  3168  000160  C011  F09C         	movff	?___flneg+2,sprintf@fval+2
  3169  000164  C012  F09D         	movff	?___flneg+3,sprintf@fval+3
  3170                           
  3171                           ;doprnt.c: 833: flag |= 0x03;
  3172  000168  0E03               	movlw	3
  3173  00016A  0100               	movlb	0	; () banked
  3174  00016C  138C               	iorwf	sprintf@flag& (0+255),f,b
  3175  00016E                     l4667:
  3176                           
  3177                           ; BSR set to: 0
  3178                           ;doprnt.c: 834: }
  3179                           ;doprnt.c: 835: exp = 0;
  3180  00016E  0E00               	movlw	0
  3181  000170  0100               	movlb	0	; () banked
  3182  000172  6F93               	movwf	(sprintf@exp+1)& (0+255),b
  3183  000174  0E00               	movlw	0
  3184  000176  6F92               	movwf	sprintf@exp& (0+255),b
  3185                           
  3186                           ; BSR set to: 0
  3187                           ;doprnt.c: 836: if( fval!=0) {
  3188  000178  0100               	movlb	0	; () banked
  3189  00017A  519A               	movf	sprintf@fval& (0+255),w,b
  3190  00017C  0100               	movlb	0	; () banked
  3191  00017E  119B               	iorwf	(sprintf@fval+1)& (0+255),w,b
  3192  000180  0100               	movlb	0	; () banked
  3193  000182  119C               	iorwf	(sprintf@fval+2)& (0+255),w,b
  3194  000184  0100               	movlb	0	; () banked
  3195  000186  119D               	iorwf	(sprintf@fval+3)& (0+255),w,b
  3196  000188  B4D8               	btfsc	status,2,c
  3197  00018A  D088               	goto	l4695
  3198                           
  3199                           ; BSR set to: 0
  3200                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
  3201  00018C  0100               	movlb	0	; () banked
  3202  00018E  359C               	rlcf	(sprintf@fval+2)& (0+255),w,b
  3203  000190  359D               	rlcf	(sprintf@fval+3)& (0+255),w,b
  3204  000192  0F82               	addlw	130
  3205  000194  0100               	movlb	0	; () banked
  3206  000196  6F92               	movwf	sprintf@exp& (0+255),b
  3207  000198  0100               	movlb	0	; () banked
  3208  00019A  6B93               	clrf	(sprintf@exp+1)& (0+255),b
  3209  00019C  0EFF               	movlw	255
  3210  00019E  2393               	addwfc	(sprintf@exp+1)& (0+255),f,b
  3211                           
  3212                           ; BSR set to: 0
  3213                           ;doprnt.c: 838: exp--;
  3214  0001A0  0100               	movlb	0	; () banked
  3215  0001A2  0792               	decf	sprintf@exp& (0+255),f,b
  3216  0001A4  A0D8               	btfss	status,0,c
  3217  0001A6  0793               	decf	(sprintf@exp+1)& (0+255),f,b
  3218                           
  3219                           ; BSR set to: 0
  3220                           ;doprnt.c: 839: exp *= 3;
  3221  0001A8  C092  F00F         	movff	sprintf@exp,___wmul@multiplier
  3222  0001AC  C093  F010         	movff	sprintf@exp+1,___wmul@multiplier+1
  3223  0001B0  0E00               	movlw	0
  3224  0001B2  6E12               	movwf	___wmul@multiplicand+1,c
  3225  0001B4  0E03               	movlw	3
  3226  0001B6  6E11               	movwf	___wmul@multiplicand,c
  3227  0001B8  EC40  F019         	call	___wmul	;wreg free
  3228  0001BC  C00F  F092         	movff	?___wmul,sprintf@exp
  3229  0001C0  C010  F093         	movff	?___wmul+1,sprintf@exp+1
  3230                           
  3231                           ;doprnt.c: 840: exp /= 10;
  3232  0001C4  C092  F015         	movff	sprintf@exp,___awdiv@dividend
  3233  0001C8  C093  F016         	movff	sprintf@exp+1,___awdiv@dividend+1
  3234  0001CC  0E00               	movlw	0
  3235  0001CE  6E18               	movwf	___awdiv@divisor+1,c
  3236  0001D0  0E0A               	movlw	10
  3237  0001D2  6E17               	movwf	___awdiv@divisor,c
  3238  0001D4  ECA3  F016         	call	___awdiv	;wreg free
  3239  0001D8  C015  F092         	movff	?___awdiv,sprintf@exp
  3240  0001DC  C016  F093         	movff	?___awdiv+1,sprintf@exp+1
  3241                           
  3242                           ;doprnt.c: 841: if(exp < 0)
  3243  0001E0  0100               	movlb	0	; () banked
  3244  0001E2  AF93               	btfss	(sprintf@exp+1)& (0+255),7,b
  3245  0001E4  D004               	goto	l4683
  3246                           
  3247                           ; BSR set to: 0
  3248                           ;doprnt.c: 842: exp--;
  3249  0001E6  0100               	movlb	0	; () banked
  3250  0001E8  0792               	decf	sprintf@exp& (0+255),f,b
  3251  0001EA  A0D8               	btfss	status,0,c
  3252  0001EC  0793               	decf	(sprintf@exp+1)& (0+255),f,b
  3253  0001EE                     l4683:
  3254                           
  3255                           ; BSR set to: 0
  3256                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  3257  0001EE  0100               	movlb	0	; () banked
  3258  0001F0  5192               	movf	sprintf@exp& (0+255),w,b
  3259  0001F2  0800               	sublw	0
  3260  0001F4  EC9B  F008         	call	_scale
  3261  0001F8  C036  F094         	movff	?_scale,sprintf@tmpval
  3262  0001FC  C037  F095         	movff	?_scale+1,sprintf@tmpval+1
  3263  000200  C038  F096         	movff	?_scale+2,sprintf@tmpval+2
  3264  000204  C039  F097         	movff	?_scale+3,sprintf@tmpval+3
  3265                           
  3266                           ;doprnt.c: 847: tmpval.integ *= fval;
  3267  000208  C094  F01D         	movff	sprintf@tmpval,___flmul@b
  3268  00020C  C095  F01E         	movff	sprintf@tmpval+1,___flmul@b+1
  3269  000210  C096  F01F         	movff	sprintf@tmpval+2,___flmul@b+2
  3270  000214  C097  F020         	movff	sprintf@tmpval+3,___flmul@b+3
  3271  000218  C09A  F021         	movff	sprintf@fval,___flmul@a
  3272  00021C  C09B  F022         	movff	sprintf@fval+1,___flmul@a+1
  3273  000220  C09C  F023         	movff	sprintf@fval+2,___flmul@a+2
  3274  000224  C09D  F024         	movff	sprintf@fval+3,___flmul@a+3
  3275  000228  ECA7  F00A         	call	___flmul	;wreg free
  3276  00022C  C01D  F094         	movff	?___flmul,sprintf@tmpval
  3277  000230  C01E  F095         	movff	?___flmul+1,sprintf@tmpval+1
  3278  000234  C01F  F096         	movff	?___flmul+2,sprintf@tmpval+2
  3279  000238  C020  F097         	movff	?___flmul+3,sprintf@tmpval+3
  3280                           
  3281                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  3282  00023C  C094  F00F         	movff	sprintf@tmpval,___flge@ff1
  3283  000240  C095  F010         	movff	sprintf@tmpval+1,___flge@ff1+1
  3284  000244  C096  F011         	movff	sprintf@tmpval+2,___flge@ff1+2
  3285  000248  C097  F012         	movff	sprintf@tmpval+3,___flge@ff1+3
  3286  00024C  0E00               	movlw	0
  3287  00024E  6E13               	movwf	___flge@ff2,c
  3288  000250  0E00               	movlw	0
  3289  000252  6E14               	movwf	___flge@ff2+1,c
  3290  000254  0E80               	movlw	128
  3291  000256  6E15               	movwf	___flge@ff2+2,c
  3292  000258  0E3F               	movlw	63
  3293  00025A  6E16               	movwf	___flge@ff2+3,c
  3294  00025C  EC9A  F013         	call	___flge	;wreg free
  3295  000260  B0D8               	btfsc	status,0,c
  3296  000262  D005               	goto	l4691
  3297                           
  3298                           ;doprnt.c: 849: exp--;
  3299  000264  0100               	movlb	0	; () banked
  3300  000266  0792               	decf	sprintf@exp& (0+255),f,b
  3301  000268  A0D8               	btfss	status,0,c
  3302  00026A  0793               	decf	(sprintf@exp+1)& (0+255),f,b
  3303  00026C  D017               	goto	l4695
  3304  00026E                     l4691:
  3305                           
  3306                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  3307  00026E  C094  F00F         	movff	sprintf@tmpval,___flge@ff1
  3308  000272  C095  F010         	movff	sprintf@tmpval+1,___flge@ff1+1
  3309  000276  C096  F011         	movff	sprintf@tmpval+2,___flge@ff1+2
  3310  00027A  C097  F012         	movff	sprintf@tmpval+3,___flge@ff1+3
  3311  00027E  0E00               	movlw	0
  3312  000280  6E13               	movwf	___flge@ff2,c
  3313  000282  0E00               	movlw	0
  3314  000284  6E14               	movwf	___flge@ff2+1,c
  3315  000286  0E20               	movlw	32
  3316  000288  6E15               	movwf	___flge@ff2+2,c
  3317  00028A  0E41               	movlw	65
  3318  00028C  6E16               	movwf	___flge@ff2+3,c
  3319  00028E  EC9A  F013         	call	___flge	;wreg free
  3320  000292  A0D8               	btfss	status,0,c
  3321  000294  D003               	goto	l4695
  3322                           
  3323                           ;doprnt.c: 851: exp++;
  3324  000296  0100               	movlb	0	; () banked
  3325  000298  4B92               	infsnz	sprintf@exp& (0+255),f,b
  3326  00029A  2B93               	incf	(sprintf@exp+1)& (0+255),f,b
  3327  00029C                     l4695:
  3328                           
  3329                           ;doprnt.c: 852: }
  3330                           ;doprnt.c: 1112: if(prec <= 12)
  3331  00029C  0100               	movlb	0	; () banked
  3332  00029E  BF99               	btfsc	(sprintf@prec+1)& (0+255),7,b
  3333  0002A0  D008               	goto	l4697
  3334  0002A2  0100               	movlb	0	; () banked
  3335  0002A4  5199               	movf	(sprintf@prec+1)& (0+255),w,b
  3336  0002A6  E123               	bnz	l4699
  3337  0002A8  0E0D               	movlw	13
  3338  0002AA  0100               	movlb	0	; () banked
  3339  0002AC  5D98               	subwf	sprintf@prec& (0+255),w,b
  3340  0002AE  B0D8               	btfsc	status,0,c
  3341  0002B0  D01E               	goto	l4699
  3342  0002B2                     l4697:
  3343                           
  3344                           ; BSR set to: 0
  3345                           ;doprnt.c: 1113: fval += fround(prec);
  3346  0002B2  C09A  F060         	movff	sprintf@fval,___fladd@b
  3347  0002B6  C09B  F061         	movff	sprintf@fval+1,___fladd@b+1
  3348  0002BA  C09C  F062         	movff	sprintf@fval+2,___fladd@b+2
  3349  0002BE  C09D  F063         	movff	sprintf@fval+3,___fladd@b+3
  3350  0002C2  0100               	movlb	0	; () banked
  3351  0002C4  5198               	movf	sprintf@prec& (0+255),w,b
  3352  0002C6  EC30  F00F         	call	_fround
  3353  0002CA  C036  F064         	movff	?_fround,___fladd@a
  3354  0002CE  C037  F065         	movff	?_fround+1,___fladd@a+1
  3355  0002D2  C038  F066         	movff	?_fround+2,___fladd@a+2
  3356  0002D6  C039  F067         	movff	?_fround+3,___fladd@a+3
  3357  0002DA  EC2D  F004         	call	___fladd	;wreg free
  3358  0002DE  C060  F09A         	movff	?___fladd,sprintf@fval
  3359  0002E2  C061  F09B         	movff	?___fladd+1,sprintf@fval+1
  3360  0002E6  C062  F09C         	movff	?___fladd+2,sprintf@fval+2
  3361  0002EA  C063  F09D         	movff	?___fladd+3,sprintf@fval+3
  3362  0002EE                     l4699:
  3363                           
  3364                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  3365  0002EE  0100               	movlb	0	; () banked
  3366  0002F0  BF93               	btfsc	(sprintf@exp+1)& (0+255),7,b
  3367  0002F2  D008               	goto	l4701
  3368  0002F4  0100               	movlb	0	; () banked
  3369  0002F6  5193               	movf	(sprintf@exp+1)& (0+255),w,b
  3370  0002F8  E12A               	bnz	l4707
  3371  0002FA  0E0A               	movlw	10
  3372  0002FC  0100               	movlb	0	; () banked
  3373  0002FE  5D92               	subwf	sprintf@exp& (0+255),w,b
  3374  000300  B0D8               	btfsc	status,0,c
  3375  000302  D025               	goto	l4707
  3376  000304                     l4701:
  3377                           
  3378                           ; BSR set to: 0
  3379  000304  0100               	movlb	0	; () banked
  3380  000306  519A               	movf	sprintf@fval& (0+255),w,b
  3381  000308  0100               	movlb	0	; () banked
  3382  00030A  119B               	iorwf	(sprintf@fval+1)& (0+255),w,b
  3383  00030C  0100               	movlb	0	; () banked
  3384  00030E  119C               	iorwf	(sprintf@fval+2)& (0+255),w,b
  3385  000310  0100               	movlb	0	; () banked
  3386  000312  119D               	iorwf	(sprintf@fval+3)& (0+255),w,b
  3387  000314  B4D8               	btfsc	status,2,c
  3388  000316  D067               	goto	l4721
  3389                           
  3390                           ; BSR set to: 0
  3391  000318  C09A  F03F         	movff	sprintf@fval,___fltol@f1
  3392  00031C  C09B  F040         	movff	sprintf@fval+1,___fltol@f1+1
  3393  000320  C09C  F041         	movff	sprintf@fval+2,___fltol@f1+2
  3394  000324  C09D  F042         	movff	sprintf@fval+3,___fltol@f1+3
  3395  000328  ECB7  F014         	call	___fltol	;wreg free
  3396  00032C  503F               	movf	?___fltol,w,c
  3397  00032E  1040               	iorwf	?___fltol+1,w,c
  3398  000330  1041               	iorwf	?___fltol+2,w,c
  3399  000332  1042               	iorwf	?___fltol+3,w,c
  3400  000334  A4D8               	btfss	status,2,c
  3401  000336  D057               	goto	l4721
  3402  000338  0100               	movlb	0	; () banked
  3403  00033A  BF93               	btfsc	(sprintf@exp+1)& (0+255),7,b
  3404  00033C  D054               	goto	l4721
  3405  00033E  0100               	movlb	0	; () banked
  3406  000340  5193               	movf	(sprintf@exp+1)& (0+255),w,b
  3407  000342  E105               	bnz	l4707
  3408  000344  0E02               	movlw	2
  3409  000346  0100               	movlb	0	; () banked
  3410  000348  5D92               	subwf	sprintf@exp& (0+255),w,b
  3411  00034A  A0D8               	btfss	status,0,c
  3412  00034C  D04C               	goto	l4721
  3413  00034E                     l4707:
  3414                           
  3415                           ; BSR set to: 0
  3416                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  3417  00034E  C094  F00F         	movff	sprintf@tmpval,___flge@ff1
  3418  000352  C095  F010         	movff	sprintf@tmpval+1,___flge@ff1+1
  3419  000356  C096  F011         	movff	sprintf@tmpval+2,___flge@ff1+2
  3420  00035A  C097  F012         	movff	sprintf@tmpval+3,___flge@ff1+3
  3421  00035E  0E5F               	movlw	95
  3422  000360  6E13               	movwf	___flge@ff2,c
  3423  000362  0E70               	movlw	112
  3424  000364  6E14               	movwf	___flge@ff2+1,c
  3425  000366  0E89               	movlw	137
  3426  000368  6E15               	movwf	___flge@ff2+2,c
  3427  00036A  0E40               	movlw	64
  3428  00036C  6E16               	movwf	___flge@ff2+3,c
  3429  00036E  EC9A  F013         	call	___flge	;wreg free
  3430  000372  B0D8               	btfsc	status,0,c
  3431  000374  D003               	goto	l4711
  3432                           
  3433                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  3434  000376  0100               	movlb	0	; () banked
  3435  000378  0EF7               	movlw	247
  3436  00037A  D002               	goto	L2
  3437  00037C                     l4711:
  3438                           
  3439                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  3440  00037C  0100               	movlb	0	; () banked
  3441  00037E  0EF8               	movlw	248
  3442  000380                     L2:
  3443  000380  2792               	addwf	sprintf@exp& (0+255),f,b
  3444  000382  0EFF               	movlw	255
  3445  000384  2393               	addwfc	(sprintf@exp+1)& (0+255),f,b
  3446                           
  3447                           ; BSR set to: 0
  3448                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  3449                           
  3450                           ; BSR set to: 0
  3451  000386  0100               	movlb	0	; () banked
  3452  000388  5192               	movf	sprintf@exp& (0+255),w,b
  3453  00038A  EC9B  F008         	call	_scale
  3454  00038E  C036  F094         	movff	?_scale,sprintf@tmpval
  3455  000392  C037  F095         	movff	?_scale+1,sprintf@tmpval+1
  3456  000396  C038  F096         	movff	?_scale+2,sprintf@tmpval+2
  3457  00039A  C039  F097         	movff	?_scale+3,sprintf@tmpval+3
  3458  00039E  C09A  F00F         	movff	sprintf@fval,__div_to_l_@f1
  3459  0003A2  C09B  F010         	movff	sprintf@fval+1,__div_to_l_@f1+1
  3460  0003A6  C09C  F011         	movff	sprintf@fval+2,__div_to_l_@f1+2
  3461  0003AA  C09D  F012         	movff	sprintf@fval+3,__div_to_l_@f1+3
  3462  0003AE  C094  F013         	movff	sprintf@tmpval,__div_to_l_@f2
  3463  0003B2  C095  F014         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
  3464  0003B6  C096  F015         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
  3465  0003BA  C097  F016         	movff	sprintf@tmpval+3,__div_to_l_@f2+3
  3466  0003BE  EC06  F013         	call	__div_to_l_	;wreg free
  3467  0003C2  C00F  F08E         	movff	?__div_to_l_,sprintf@val
  3468  0003C6  C010  F08F         	movff	?__div_to_l_+1,sprintf@val+1
  3469  0003CA  C011  F090         	movff	?__div_to_l_+2,sprintf@val+2
  3470  0003CE  C012  F091         	movff	?__div_to_l_+3,sprintf@val+3
  3471                           
  3472                           ;doprnt.c: 1129: fval = 0.0;
  3473  0003D2  0E00               	movlw	0
  3474  0003D4  0100               	movlb	0	; () banked
  3475  0003D6  6F9A               	movwf	sprintf@fval& (0+255),b
  3476  0003D8  0E00               	movlw	0
  3477  0003DA  6F9B               	movwf	(sprintf@fval+1)& (0+255),b
  3478  0003DC  0E00               	movlw	0
  3479  0003DE  6F9C               	movwf	(sprintf@fval+2)& (0+255),b
  3480  0003E0  0E00               	movlw	0
  3481  0003E2  6F9D               	movwf	(sprintf@fval+3)& (0+255),b
  3482                           
  3483                           ;doprnt.c: 1130: } else {
  3484  0003E4  D03C               	goto	l4725
  3485  0003E6                     l4721:
  3486                           
  3487                           ;doprnt.c: 1131: val = (unsigned long)fval;
  3488  0003E6  C09A  F03F         	movff	sprintf@fval,___fltol@f1
  3489  0003EA  C09B  F040         	movff	sprintf@fval+1,___fltol@f1+1
  3490  0003EE  C09C  F041         	movff	sprintf@fval+2,___fltol@f1+2
  3491  0003F2  C09D  F042         	movff	sprintf@fval+3,___fltol@f1+3
  3492  0003F6  ECB7  F014         	call	___fltol	;wreg free
  3493  0003FA  C03F  F08E         	movff	?___fltol,sprintf@val
  3494  0003FE  C040  F08F         	movff	?___fltol+1,sprintf@val+1
  3495  000402  C041  F090         	movff	?___fltol+2,sprintf@val+2
  3496  000406  C042  F091         	movff	?___fltol+3,sprintf@val+3
  3497                           
  3498                           ;doprnt.c: 1132: fval -= (double)val;
  3499  00040A  C09A  F074         	movff	sprintf@fval,___flsub@b
  3500  00040E  C09B  F075         	movff	sprintf@fval+1,___flsub@b+1
  3501  000412  C09C  F076         	movff	sprintf@fval+2,___flsub@b+2
  3502  000416  C09D  F077         	movff	sprintf@fval+3,___flsub@b+3
  3503  00041A  C08E  F015         	movff	sprintf@val,___xxtofl@val
  3504  00041E  C08F  F016         	movff	sprintf@val+1,___xxtofl@val+1
  3505  000422  C090  F017         	movff	sprintf@val+2,___xxtofl@val+2
  3506  000426  C091  F018         	movff	sprintf@val+3,___xxtofl@val+3
  3507  00042A  0E00               	movlw	0
  3508  00042C  EC26  F011         	call	___xxtofl
  3509  000430  C015  F078         	movff	?___xxtofl,___flsub@a
  3510  000434  C016  F079         	movff	?___xxtofl+1,___flsub@a+1
  3511  000438  C017  F07A         	movff	?___xxtofl+2,___flsub@a+2
  3512  00043C  C018  F07B         	movff	?___xxtofl+3,___flsub@a+3
  3513  000440  EC22  F018         	call	___flsub	;wreg free
  3514  000444  C074  F09A         	movff	?___flsub,sprintf@fval
  3515  000448  C075  F09B         	movff	?___flsub+1,sprintf@fval+1
  3516  00044C  C076  F09C         	movff	?___flsub+2,sprintf@fval+2
  3517  000450  C077  F09D         	movff	?___flsub+3,sprintf@fval+3
  3518                           
  3519                           ;doprnt.c: 1133: exp = 0;
  3520  000454  0E00               	movlw	0
  3521  000456  0100               	movlb	0	; () banked
  3522  000458  6F93               	movwf	(sprintf@exp+1)& (0+255),b
  3523  00045A  0E00               	movlw	0
  3524  00045C  6F92               	movwf	sprintf@exp& (0+255),b
  3525  00045E                     l4725:
  3526                           
  3527                           ; BSR set to: 0
  3528                           ;doprnt.c: 1134: }
  3529                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  3530  00045E  0E01               	movlw	1
  3531  000460  0100               	movlb	0	; () banked
  3532  000462  6F9E               	movwf	sprintf@c& (0+255),b
  3533  000464                     l4727:
  3534                           
  3535                           ; BSR set to: 0
  3536  000464  0E0A               	movlw	10
  3537  000466  0100               	movlb	0	; () banked
  3538  000468  199E               	xorwf	sprintf@c& (0+255),w,b
  3539  00046A  B4D8               	btfsc	status,2,c
  3540  00046C  D01E               	goto	l4739
  3541                           
  3542                           ; BSR set to: 0
  3543                           ;doprnt.c: 1137: if(val < dpowers[c])
  3544                           
  3545                           ; BSR set to: 0
  3546                           
  3547                           ; BSR set to: 0
  3548  00046E  0100               	movlb	0	; () banked
  3549  000470  519E               	movf	sprintf@c& (0+255),w,b
  3550  000472  0D04               	mullw	4
  3551  000474  0E49               	movlw	low _dpowers
  3552  000476  24F3               	addwf	prodl,w,c
  3553  000478  6EF6               	movwf	tblptrl,c
  3554  00047A  0E7F               	movlw	high _dpowers
  3555  00047C  20F4               	addwfc	prodh,w,c
  3556  00047E  6EF7               	movwf	tblptrh,c
  3557  000480                     	if	0	;There are less than 3 active tblptr bytes
  3558  000480                     	endif
  3559  000480  0009               	tblrd		*+
  3560  000482  50F5               	movf	tablat,w,c
  3561  000484  0100               	movlb	0	; () banked
  3562  000486  5D8E               	subwf	sprintf@val& (0+255),w,b
  3563  000488  0009               	tblrd		*+
  3564  00048A  50F5               	movf	tablat,w,c
  3565  00048C  0100               	movlb	0	; () banked
  3566  00048E  598F               	subwfb	(sprintf@val+1)& (0+255),w,b
  3567  000490  0009               	tblrd		*+
  3568  000492  50F5               	movf	tablat,w,c
  3569  000494  0100               	movlb	0	; () banked
  3570  000496  5990               	subwfb	(sprintf@val+2)& (0+255),w,b
  3571  000498  0009               	tblrd		*+
  3572  00049A  50F5               	movf	tablat,w,c
  3573  00049C  0100               	movlb	0	; () banked
  3574  00049E  5991               	subwfb	(sprintf@val+3)& (0+255),w,b
  3575  0004A0  A0D8               	btfss	status,0,c
  3576  0004A2  D003               	goto	l4739
  3577                           
  3578                           ; BSR set to: 0
  3579                           
  3580                           ; BSR set to: 0
  3581                           
  3582                           ; BSR set to: 0
  3583                           ;doprnt.c: 1138: break;
  3584  0004A4  0100               	movlb	0	; () banked
  3585  0004A6  2B9E               	incf	sprintf@c& (0+255),f,b
  3586  0004A8  D7DD               	goto	l4727
  3587  0004AA                     l4739:
  3588                           
  3589                           ; BSR set to: 0
  3590                           ;doprnt.c: 1175: {
  3591                           ;doprnt.c: 1188: if(flag & 0x03)
  3592  0004AA  0E03               	movlw	3
  3593  0004AC  0100               	movlb	0	; () banked
  3594  0004AE  158C               	andwf	sprintf@flag& (0+255),w,b
  3595  0004B0  0100               	movlb	0	; () banked
  3596  0004B2  6F84               	movwf	??_sprintf& (0+255),b
  3597  0004B4  0E00               	movlw	0
  3598  0004B6  0100               	movlb	0	; () banked
  3599  0004B8  158D               	andwf	(sprintf@flag+1)& (0+255),w,b
  3600  0004BA  0100               	movlb	0	; () banked
  3601  0004BC  6F85               	movwf	(??_sprintf+1)& (0+255),b
  3602  0004BE  0100               	movlb	0	; () banked
  3603  0004C0  5184               	movf	??_sprintf& (0+255),w,b
  3604  0004C2  0100               	movlb	0	; () banked
  3605  0004C4  1185               	iorwf	(??_sprintf+1)& (0+255),w,b
  3606  0004C6  B4D8               	btfsc	status,2,c
  3607  0004C8  D054               	goto	l4753
  3608                           
  3609                           ; BSR set to: 0
  3610                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  3611  0004CA  C07C  FFD9         	movff	sprintf@sp,fsr2l
  3612  0004CE  C07D  FFDA         	movff	sprintf@sp+1,fsr2h
  3613  0004D2  0E2D               	movlw	45
  3614  0004D4  D04C               	goto	L3
  3615  0004D6                     l4743:
  3616                           
  3617                           ; BSR set to: 0
  3618  0004D6  0100               	movlb	0	; () banked
  3619  0004D8  4B7C               	infsnz	sprintf@sp& (0+255),f,b
  3620  0004DA  2B7D               	incf	(sprintf@sp+1)& (0+255),f,b
  3621                           
  3622                           ; BSR set to: 0
  3623                           ;doprnt.c: 1195: }
  3624                           ;doprnt.c: 1196: while(c--) {
  3625  0004DC  D04A               	goto	l4753
  3626  0004DE                     l4745:
  3627                           
  3628                           ; BSR set to: 0
  3629                           ;doprnt.c: 1200: {
  3630                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  3631  0004DE  C08E  F00F         	movff	sprintf@val,___lldiv@dividend
  3632  0004E2  C08F  F010         	movff	sprintf@val+1,___lldiv@dividend+1
  3633  0004E6  C090  F011         	movff	sprintf@val+2,___lldiv@dividend+2
  3634  0004EA  C091  F012         	movff	sprintf@val+3,___lldiv@dividend+3
  3635  0004EE  0100               	movlb	0	; () banked
  3636  0004F0  519E               	movf	sprintf@c& (0+255),w,b
  3637  0004F2  0D04               	mullw	4
  3638  0004F4  0E49               	movlw	low _dpowers
  3639  0004F6  24F3               	addwf	prodl,w,c
  3640  0004F8  6EF6               	movwf	tblptrl,c
  3641  0004FA  0E7F               	movlw	high _dpowers
  3642  0004FC  20F4               	addwfc	prodh,w,c
  3643  0004FE  6EF7               	movwf	tblptrh,c
  3644  000500                     	if	0	;There are less than 3 active tblptr bytes
  3645  000500                     	endif
  3646  000500  0009               	tblrd		*+
  3647  000502  CFF5 F013          	movff	tablat,___lldiv@divisor
  3648  000506  0009               	tblrd		*+
  3649  000508  CFF5 F014          	movff	tablat,___lldiv@divisor+1
  3650  00050C  0009               	tblrd		*+
  3651  00050E  CFF5 F015          	movff	tablat,___lldiv@divisor+2
  3652  000512  000A               	tblrd		*-
  3653  000514  CFF5 F016          	movff	tablat,___lldiv@divisor+3
  3654  000518  ECE5  F016         	call	___lldiv	;wreg free
  3655  00051C  C00F  F094         	movff	?___lldiv,sprintf@tmpval
  3656  000520  C010  F095         	movff	?___lldiv+1,sprintf@tmpval+1
  3657  000524  C011  F096         	movff	?___lldiv+2,sprintf@tmpval+2
  3658  000528  C012  F097         	movff	?___lldiv+3,sprintf@tmpval+3
  3659                           
  3660                           ;doprnt.c: 1202: tmpval.vd %= 10;
  3661  00052C  C094  F00F         	movff	sprintf@tmpval,___llmod@dividend
  3662  000530  C095  F010         	movff	sprintf@tmpval+1,___llmod@dividend+1
  3663  000534  C096  F011         	movff	sprintf@tmpval+2,___llmod@dividend+2
  3664  000538  C097  F012         	movff	sprintf@tmpval+3,___llmod@dividend+3
  3665  00053C  0E0A               	movlw	10
  3666  00053E  6E13               	movwf	___llmod@divisor,c
  3667  000540  0E00               	movlw	0
  3668  000542  6E14               	movwf	___llmod@divisor+1,c
  3669  000544  0E00               	movlw	0
  3670  000546  6E15               	movwf	___llmod@divisor+2,c
  3671  000548  0E00               	movlw	0
  3672  00054A  6E16               	movwf	___llmod@divisor+3,c
  3673  00054C  EC96  F017         	call	___llmod	;wreg free
  3674  000550  C00F  F094         	movff	?___llmod,sprintf@tmpval
  3675  000554  C010  F095         	movff	?___llmod+1,sprintf@tmpval+1
  3676  000558  C011  F096         	movff	?___llmod+2,sprintf@tmpval+2
  3677  00055C  C012  F097         	movff	?___llmod+3,sprintf@tmpval+3
  3678                           
  3679                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  3680  000560  0100               	movlb	0	; () banked
  3681  000562  5194               	movf	sprintf@tmpval& (0+255),w,b
  3682  000564  0F30               	addlw	48
  3683  000566  C07C  FFD9         	movff	sprintf@sp,fsr2l
  3684  00056A  C07D  FFDA         	movff	sprintf@sp+1,fsr2h
  3685  00056E                     L3:
  3686  00056E  6EDF               	movwf	indf2,c
  3687  000570  D7B2               	goto	l4743
  3688  000572                     l4753:
  3689                           
  3690                           ; BSR set to: 0
  3691  000572  0100               	movlb	0	; () banked
  3692  000574  079E               	decf	sprintf@c& (0+255),f,b
  3693  000576  0100               	movlb	0	; () banked
  3694  000578  299E               	incf	sprintf@c& (0+255),w,b
  3695  00057A  B4D8               	btfsc	status,2,c
  3696  00057C  D00E               	goto	l4761
  3697  00057E  D7AF               	goto	l4745
  3698  000580                     l4755:
  3699                           
  3700                           ; BSR set to: 0
  3701                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  3702  000580  C07C  FFD9         	movff	sprintf@sp,fsr2l
  3703  000584  C07D  FFDA         	movff	sprintf@sp+1,fsr2h
  3704  000588  0E30               	movlw	48
  3705  00058A  6EDF               	movwf	indf2,c
  3706                           
  3707                           ; BSR set to: 0
  3708  00058C  0100               	movlb	0	; () banked
  3709  00058E  4B7C               	infsnz	sprintf@sp& (0+255),f,b
  3710  000590  2B7D               	incf	(sprintf@sp+1)& (0+255),f,b
  3711                           
  3712                           ; BSR set to: 0
  3713                           ;doprnt.c: 1209: exp--;
  3714  000592  0100               	movlb	0	; () banked
  3715  000594  0792               	decf	sprintf@exp& (0+255),f,b
  3716  000596  A0D8               	btfss	status,0,c
  3717  000598  0793               	decf	(sprintf@exp+1)& (0+255),f,b
  3718  00059A                     l4761:
  3719                           
  3720                           ; BSR set to: 0
  3721  00059A  0100               	movlb	0	; () banked
  3722  00059C  BF93               	btfsc	(sprintf@exp+1)& (0+255),7,b
  3723  00059E  D007               	goto	l4763
  3724  0005A0  0100               	movlb	0	; () banked
  3725  0005A2  5193               	movf	(sprintf@exp+1)& (0+255),w,b
  3726  0005A4  E1ED               	bnz	l4755
  3727  0005A6  0100               	movlb	0	; () banked
  3728  0005A8  0592               	decf	sprintf@exp& (0+255),w,b
  3729  0005AA  B0D8               	btfsc	status,0,c
  3730  0005AC  D7E9               	goto	l4755
  3731  0005AE                     l4763:
  3732                           
  3733                           ; BSR set to: 0
  3734                           ;doprnt.c: 1210: }
  3735                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3736  0005AE  0100               	movlb	0	; () banked
  3737  0005B0  BF99               	btfsc	(sprintf@prec+1)& (0+255),7,b
  3738  0005B2  D00C               	goto	l295
  3739  0005B4  0100               	movlb	0	; () banked
  3740  0005B6  5199               	movf	(sprintf@prec+1)& (0+255),w,b
  3741  0005B8  E105               	bnz	u5380
  3742  0005BA  0E09               	movlw	9
  3743  0005BC  0100               	movlb	0	; () banked
  3744  0005BE  5D98               	subwf	sprintf@prec& (0+255),w,b
  3745  0005C0  A0D8               	btfss	status,0,c
  3746  0005C2  D004               	goto	l295
  3747  0005C4                     u5380:
  3748                           
  3749                           ; BSR set to: 0
  3750                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  3751  0005C4  0E08               	movlw	8
  3752  0005C6  0100               	movlb	0	; () banked
  3753  0005C8  6F9E               	movwf	sprintf@c& (0+255),b
  3754  0005CA  D002               	goto	l4767
  3755  0005CC                     l295:
  3756                           
  3757                           ; BSR set to: 0
  3758                           ;doprnt.c: 1213: else
  3759                           ;doprnt.c: 1214: c = prec;
  3760  0005CC  C098  F09E         	movff	sprintf@prec,sprintf@c
  3761  0005D0                     l4767:
  3762                           
  3763                           ; BSR set to: 0
  3764                           ;doprnt.c: 1215: prec -= c;
  3765  0005D0  0100               	movlb	0	; () banked
  3766  0005D2  519E               	movf	sprintf@c& (0+255),w,b
  3767  0005D4  0100               	movlb	0	; () banked
  3768  0005D6  5F98               	subwf	sprintf@prec& (0+255),f,b
  3769  0005D8  0E00               	movlw	0
  3770  0005DA  0100               	movlb	0	; () banked
  3771  0005DC  BF9E               	btfsc	sprintf@c& (0+255),7,b
  3772  0005DE  0EFF               	movlw	255
  3773  0005E0  0100               	movlb	0	; () banked
  3774  0005E2  5B99               	subwfb	(sprintf@prec+1)& (0+255),f,b
  3775                           
  3776                           ; BSR set to: 0
  3777                           ;doprnt.c: 1219: if(c)
  3778  0005E4  0100               	movlb	0	; () banked
  3779  0005E6  519E               	movf	sprintf@c& (0+255),w,b
  3780  0005E8  0100               	movlb	0	; () banked
  3781  0005EA  B4D8               	btfsc	status,2,c
  3782  0005EC  D009               	goto	l4775
  3783                           
  3784                           ; BSR set to: 0
  3785                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  3786  0005EE  C07C  FFD9         	movff	sprintf@sp,fsr2l
  3787  0005F2  C07D  FFDA         	movff	sprintf@sp+1,fsr2h
  3788  0005F6  0E2E               	movlw	46
  3789  0005F8  6EDF               	movwf	indf2,c
  3790                           
  3791                           ; BSR set to: 0
  3792  0005FA  0100               	movlb	0	; () banked
  3793  0005FC  4B7C               	infsnz	sprintf@sp& (0+255),f,b
  3794  0005FE  2B7D               	incf	(sprintf@sp+1)& (0+255),f,b
  3795  000600                     l4775:
  3796                           
  3797                           ; BSR set to: 0
  3798                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  3799  000600  0100               	movlb	0	; () banked
  3800  000602  519E               	movf	sprintf@c& (0+255),w,b
  3801  000604  EC9B  F008         	call	_scale
  3802  000608  C036  F086         	movff	?_scale,_sprintf$1261
  3803  00060C  C037  F087         	movff	?_scale+1,_sprintf$1261+1
  3804  000610  C038  F088         	movff	?_scale+2,_sprintf$1261+2
  3805  000614  C039  F089         	movff	?_scale+3,_sprintf$1261+3
  3806                           
  3807                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  3808  000618  C09A  F021         	movff	sprintf@fval,___flmul@a
  3809  00061C  C09B  F022         	movff	sprintf@fval+1,___flmul@a+1
  3810  000620  C09C  F023         	movff	sprintf@fval+2,___flmul@a+2
  3811  000624  C09D  F024         	movff	sprintf@fval+3,___flmul@a+3
  3812  000628  C086  F01D         	movff	_sprintf$1261,___flmul@b
  3813  00062C  C087  F01E         	movff	_sprintf$1261+1,___flmul@b+1
  3814  000630  C088  F01F         	movff	_sprintf$1261+2,___flmul@b+2
  3815  000634  C089  F020         	movff	_sprintf$1261+3,___flmul@b+3
  3816  000638  ECA7  F00A         	call	___flmul	;wreg free
  3817  00063C  C01D  F03F         	movff	?___flmul,___fltol@f1
  3818  000640  C01E  F040         	movff	?___flmul+1,___fltol@f1+1
  3819  000644  C01F  F041         	movff	?___flmul+2,___fltol@f1+2
  3820  000648  C020  F042         	movff	?___flmul+3,___fltol@f1+3
  3821  00064C  ECB7  F014         	call	___fltol	;wreg free
  3822  000650  C03F  F08E         	movff	?___fltol,sprintf@val
  3823  000654  C040  F08F         	movff	?___fltol+1,sprintf@val+1
  3824  000658  C041  F090         	movff	?___fltol+2,sprintf@val+2
  3825  00065C  C042  F091         	movff	?___fltol+3,sprintf@val+3
  3826                           
  3827                           ;doprnt.c: 1228: while(c--) {
  3828  000660  D073               	goto	l4789
  3829  000662                     l4779:
  3830                           
  3831                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  3832  000662  C08E  F00F         	movff	sprintf@val,___lldiv@dividend
  3833  000666  C08F  F010         	movff	sprintf@val+1,___lldiv@dividend+1
  3834  00066A  C090  F011         	movff	sprintf@val+2,___lldiv@dividend+2
  3835  00066E  C091  F012         	movff	sprintf@val+3,___lldiv@dividend+3
  3836  000672  0100               	movlb	0	; () banked
  3837  000674  519E               	movf	sprintf@c& (0+255),w,b
  3838  000676  0D04               	mullw	4
  3839  000678  0E49               	movlw	low _dpowers
  3840  00067A  24F3               	addwf	prodl,w,c
  3841  00067C  6EF6               	movwf	tblptrl,c
  3842  00067E  0E7F               	movlw	high _dpowers
  3843  000680  20F4               	addwfc	prodh,w,c
  3844  000682  6EF7               	movwf	tblptrh,c
  3845  000684                     	if	0	;There are less than 3 active tblptr bytes
  3846  000684                     	endif
  3847  000684  0009               	tblrd		*+
  3848  000686  CFF5 F013          	movff	tablat,___lldiv@divisor
  3849  00068A  0009               	tblrd		*+
  3850  00068C  CFF5 F014          	movff	tablat,___lldiv@divisor+1
  3851  000690  0009               	tblrd		*+
  3852  000692  CFF5 F015          	movff	tablat,___lldiv@divisor+2
  3853  000696  000A               	tblrd		*-
  3854  000698  CFF5 F016          	movff	tablat,___lldiv@divisor+3
  3855  00069C  ECE5  F016         	call	___lldiv	;wreg free
  3856  0006A0  C00F  F094         	movff	?___lldiv,sprintf@tmpval
  3857  0006A4  C010  F095         	movff	?___lldiv+1,sprintf@tmpval+1
  3858  0006A8  C011  F096         	movff	?___lldiv+2,sprintf@tmpval+2
  3859  0006AC  C012  F097         	movff	?___lldiv+3,sprintf@tmpval+3
  3860                           
  3861                           ;doprnt.c: 1230: tmpval.vd %= 10;
  3862  0006B0  C094  F00F         	movff	sprintf@tmpval,___llmod@dividend
  3863  0006B4  C095  F010         	movff	sprintf@tmpval+1,___llmod@dividend+1
  3864  0006B8  C096  F011         	movff	sprintf@tmpval+2,___llmod@dividend+2
  3865  0006BC  C097  F012         	movff	sprintf@tmpval+3,___llmod@dividend+3
  3866  0006C0  0E0A               	movlw	10
  3867  0006C2  6E13               	movwf	___llmod@divisor,c
  3868  0006C4  0E00               	movlw	0
  3869  0006C6  6E14               	movwf	___llmod@divisor+1,c
  3870  0006C8  0E00               	movlw	0
  3871  0006CA  6E15               	movwf	___llmod@divisor+2,c
  3872  0006CC  0E00               	movlw	0
  3873  0006CE  6E16               	movwf	___llmod@divisor+3,c
  3874  0006D0  EC96  F017         	call	___llmod	;wreg free
  3875  0006D4  C00F  F094         	movff	?___llmod,sprintf@tmpval
  3876  0006D8  C010  F095         	movff	?___llmod+1,sprintf@tmpval+1
  3877  0006DC  C011  F096         	movff	?___llmod+2,sprintf@tmpval+2
  3878  0006E0  C012  F097         	movff	?___llmod+3,sprintf@tmpval+3
  3879                           
  3880                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  3881  0006E4  0100               	movlb	0	; () banked
  3882  0006E6  5194               	movf	sprintf@tmpval& (0+255),w,b
  3883  0006E8  0F30               	addlw	48
  3884  0006EA  C07C  FFD9         	movff	sprintf@sp,fsr2l
  3885  0006EE  C07D  FFDA         	movff	sprintf@sp+1,fsr2h
  3886  0006F2  6EDF               	movwf	indf2,c
  3887                           
  3888                           ; BSR set to: 0
  3889  0006F4  0100               	movlb	0	; () banked
  3890  0006F6  4B7C               	infsnz	sprintf@sp& (0+255),f,b
  3891  0006F8  2B7D               	incf	(sprintf@sp+1)& (0+255),f,b
  3892                           
  3893                           ; BSR set to: 0
  3894                           ;doprnt.c: 1232: val %= dpowers[c];
  3895  0006FA  C08E  F00F         	movff	sprintf@val,___llmod@dividend
  3896  0006FE  C08F  F010         	movff	sprintf@val+1,___llmod@dividend+1
  3897  000702  C090  F011         	movff	sprintf@val+2,___llmod@dividend+2
  3898  000706  C091  F012         	movff	sprintf@val+3,___llmod@dividend+3
  3899  00070A  0100               	movlb	0	; () banked
  3900  00070C  519E               	movf	sprintf@c& (0+255),w,b
  3901  00070E  0D04               	mullw	4
  3902  000710  0E49               	movlw	low _dpowers
  3903  000712  24F3               	addwf	prodl,w,c
  3904  000714  6EF6               	movwf	tblptrl,c
  3905  000716  0E7F               	movlw	high _dpowers
  3906  000718  20F4               	addwfc	prodh,w,c
  3907  00071A  6EF7               	movwf	tblptrh,c
  3908  00071C                     	if	0	;There are less than 3 active tblptr bytes
  3909  00071C                     	endif
  3910  00071C  0009               	tblrd		*+
  3911  00071E  CFF5 F013          	movff	tablat,___llmod@divisor
  3912  000722  0009               	tblrd		*+
  3913  000724  CFF5 F014          	movff	tablat,___llmod@divisor+1
  3914  000728  0009               	tblrd		*+
  3915  00072A  CFF5 F015          	movff	tablat,___llmod@divisor+2
  3916  00072E  000A               	tblrd		*-
  3917  000730  CFF5 F016          	movff	tablat,___llmod@divisor+3
  3918  000734  EC96  F017         	call	___llmod	;wreg free
  3919  000738  C00F  F08E         	movff	?___llmod,sprintf@val
  3920  00073C  C010  F08F         	movff	?___llmod+1,sprintf@val+1
  3921  000740  C011  F090         	movff	?___llmod+2,sprintf@val+2
  3922  000744  C012  F091         	movff	?___llmod+3,sprintf@val+3
  3923  000748                     l4789:
  3924  000748  0100               	movlb	0	; () banked
  3925  00074A  079E               	decf	sprintf@c& (0+255),f,b
  3926  00074C  0100               	movlb	0	; () banked
  3927  00074E  299E               	incf	sprintf@c& (0+255),w,b
  3928  000750  B4D8               	btfsc	status,2,c
  3929  000752  D00E               	goto	l4797
  3930  000754  D786               	goto	l4779
  3931  000756                     l4791:
  3932                           
  3933                           ; BSR set to: 0
  3934                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  3935  000756  C07C  FFD9         	movff	sprintf@sp,fsr2l
  3936  00075A  C07D  FFDA         	movff	sprintf@sp+1,fsr2h
  3937  00075E  0E30               	movlw	48
  3938  000760  6EDF               	movwf	indf2,c
  3939                           
  3940                           ; BSR set to: 0
  3941  000762  0100               	movlb	0	; () banked
  3942  000764  4B7C               	infsnz	sprintf@sp& (0+255),f,b
  3943  000766  2B7D               	incf	(sprintf@sp+1)& (0+255),f,b
  3944                           
  3945                           ; BSR set to: 0
  3946                           ;doprnt.c: 1237: prec--;
  3947  000768  0100               	movlb	0	; () banked
  3948  00076A  0798               	decf	sprintf@prec& (0+255),f,b
  3949  00076C  A0D8               	btfss	status,0,c
  3950  00076E  0799               	decf	(sprintf@prec+1)& (0+255),f,b
  3951  000770                     l4797:
  3952                           
  3953                           ; BSR set to: 0
  3954  000770  0100               	movlb	0	; () banked
  3955  000772  5198               	movf	sprintf@prec& (0+255),w,b
  3956  000774  0100               	movlb	0	; () banked
  3957  000776  1199               	iorwf	(sprintf@prec+1)& (0+255),w,b
  3958  000778  B4D8               	btfsc	status,2,c
  3959  00077A  D059               	goto	l4819
  3960  00077C  D7EC               	goto	l4791
  3961  00077E                     l4799:
  3962                           
  3963                           ; BSR set to: 0
  3964                           ;doprnt.c: 1246: }
  3965                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  3966  00077E  0100               	movlb	0	; () banked
  3967  000780  5198               	movf	sprintf@prec& (0+255),w,b
  3968  000782  0100               	movlb	0	; () banked
  3969  000784  1199               	iorwf	(sprintf@prec+1)& (0+255),w,b
  3970  000786  A4D8               	btfss	status,2,c
  3971  000788  D00D               	goto	l4805
  3972                           
  3973                           ; BSR set to: 0
  3974  00078A  0100               	movlb	0	; () banked
  3975  00078C  518E               	movf	sprintf@val& (0+255),w,b
  3976  00078E  0100               	movlb	0	; () banked
  3977  000790  118F               	iorwf	(sprintf@val+1)& (0+255),w,b
  3978  000792  0100               	movlb	0	; () banked
  3979  000794  1190               	iorwf	(sprintf@val+2)& (0+255),w,b
  3980  000796  0100               	movlb	0	; () banked
  3981  000798  1191               	iorwf	(sprintf@val+3)& (0+255),w,b
  3982  00079A  A4D8               	btfss	status,2,c
  3983  00079C  D003               	goto	l4805
  3984                           
  3985                           ; BSR set to: 0
  3986                           ;doprnt.c: 1291: prec++;
  3987  00079E  0100               	movlb	0	; () banked
  3988  0007A0  4B98               	infsnz	sprintf@prec& (0+255),f,b
  3989  0007A2  2B99               	incf	(sprintf@prec+1)& (0+255),f,b
  3990  0007A4                     l4805:
  3991                           
  3992                           ; BSR set to: 0
  3993                           ;doprnt.c: 1339: if(c < prec)
  3994  0007A4  0E80               	movlw	128
  3995  0007A6  0100               	movlb	0	; () banked
  3996  0007A8  BF9E               	btfsc	sprintf@c& (0+255),7,b
  3997  0007AA  0E7F               	movlw	127
  3998  0007AC  0100               	movlb	0	; () banked
  3999  0007AE  6F84               	movwf	??_sprintf& (0+255),b
  4000  0007B0  0100               	movlb	0	; () banked
  4001  0007B2  5198               	movf	sprintf@prec& (0+255),w,b
  4002  0007B4  0100               	movlb	0	; () banked
  4003  0007B6  5D9E               	subwf	sprintf@c& (0+255),w,b
  4004  0007B8  0100               	movlb	0	; () banked
  4005  0007BA  5199               	movf	(sprintf@prec+1)& (0+255),w,b
  4006  0007BC  0A80               	xorlw	128
  4007  0007BE  0100               	movlb	0	; () banked
  4008  0007C0  5984               	subwfb	??_sprintf& (0+255),w,b
  4009  0007C2  B0D8               	btfsc	status,0,c
  4010  0007C4  D003               	goto	l4809
  4011                           
  4012                           ; BSR set to: 0
  4013                           ;doprnt.c: 1340: c = prec;
  4014  0007C6  C098  F09E         	movff	sprintf@prec,sprintf@c
  4015  0007CA  D018               	goto	l4813
  4016  0007CC                     l4809:
  4017                           
  4018                           ; BSR set to: 0
  4019                           ;doprnt.c: 1341: else if(prec < c)
  4020  0007CC  0100               	movlb	0	; () banked
  4021  0007CE  5199               	movf	(sprintf@prec+1)& (0+255),w,b
  4022  0007D0  0A80               	xorlw	128
  4023  0007D2  0100               	movlb	0	; () banked
  4024  0007D4  6F84               	movwf	??_sprintf& (0+255),b
  4025  0007D6  0100               	movlb	0	; () banked
  4026  0007D8  519E               	movf	sprintf@c& (0+255),w,b
  4027  0007DA  0100               	movlb	0	; () banked
  4028  0007DC  5D98               	subwf	sprintf@prec& (0+255),w,b
  4029  0007DE  0E80               	movlw	128
  4030  0007E0  0100               	movlb	0	; () banked
  4031  0007E2  BF9E               	btfsc	sprintf@c& (0+255),7,b
  4032  0007E4  0E7F               	movlw	127
  4033  0007E6  0100               	movlb	0	; () banked
  4034  0007E8  5984               	subwfb	??_sprintf& (0+255),w,b
  4035  0007EA  B0D8               	btfsc	status,0,c
  4036  0007EC  D007               	goto	l4813
  4037                           
  4038                           ; BSR set to: 0
  4039                           ;doprnt.c: 1342: prec = c;
  4040  0007EE  0100               	movlb	0	; () banked
  4041  0007F0  519E               	movf	sprintf@c& (0+255),w,b
  4042  0007F2  0100               	movlb	0	; () banked
  4043  0007F4  6F98               	movwf	sprintf@prec& (0+255),b
  4044  0007F6  6B99               	clrf	(sprintf@prec+1)& (0+255),b
  4045  0007F8  BF98               	btfsc	sprintf@prec& (0+255),7,b
  4046  0007FA  0799               	decf	(sprintf@prec+1)& (0+255),f,b
  4047  0007FC                     l4813:
  4048                           
  4049                           ; BSR set to: 0
  4050                           ;doprnt.c: 1422: {
  4051                           ;doprnt.c: 1438: if(flag & 0x03)
  4052  0007FC  0E03               	movlw	3
  4053  0007FE  0100               	movlb	0	; () banked
  4054  000800  158C               	andwf	sprintf@flag& (0+255),w,b
  4055  000802  0100               	movlb	0	; () banked
  4056  000804  6F84               	movwf	??_sprintf& (0+255),b
  4057  000806  0E00               	movlw	0
  4058  000808  0100               	movlb	0	; () banked
  4059  00080A  158D               	andwf	(sprintf@flag+1)& (0+255),w,b
  4060  00080C  0100               	movlb	0	; () banked
  4061  00080E  6F85               	movwf	(??_sprintf+1)& (0+255),b
  4062  000810  0100               	movlb	0	; () banked
  4063  000812  5184               	movf	??_sprintf& (0+255),w,b
  4064  000814  0100               	movlb	0	; () banked
  4065  000816  1185               	iorwf	(??_sprintf+1)& (0+255),w,b
  4066  000818  B4D8               	btfsc	status,2,c
  4067  00081A  D009               	goto	l4819
  4068                           
  4069                           ; BSR set to: 0
  4070                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  4071  00081C  C07C  FFD9         	movff	sprintf@sp,fsr2l
  4072  000820  C07D  FFDA         	movff	sprintf@sp+1,fsr2h
  4073  000824  0E2D               	movlw	45
  4074  000826  6EDF               	movwf	indf2,c
  4075  000828                     l4817:
  4076                           
  4077                           ; BSR set to: 0
  4078  000828  0100               	movlb	0	; () banked
  4079  00082A  4B7C               	infsnz	sprintf@sp& (0+255),f,b
  4080  00082C  2B7D               	incf	(sprintf@sp+1)& (0+255),f,b
  4081  00082E                     l4819:
  4082                           
  4083                           ; BSR set to: 0
  4084  00082E  C07E  FFF6         	movff	sprintf@f,tblptrl
  4085  000832  C07F  FFF7         	movff	sprintf@f+1,tblptrh
  4086  000836  0100               	movlb	0	; () banked
  4087  000838  4B7E               	infsnz	sprintf@f& (0+255),f,b
  4088  00083A  2B7F               	incf	(sprintf@f+1)& (0+255),f,b
  4089  00083C                     	if	0	;tblptru may be non-zero
  4090  00083C                     	endif
  4091  00083C                     	if	0	;tblptru may be non-zero
  4092  00083C                     	endif
  4093  00083C  0008               	tblrd		*
  4094  00083E  CFF5 F09E          	movff	tablat,sprintf@c
  4095  000842  0100               	movlb	0	; () banked
  4096  000844  519E               	movf	sprintf@c& (0+255),w,b
  4097  000846  A4D8               	btfss	status,2,c
  4098  000848  EF15  F000         	goto	l4621
  4099  00084C                     l4821:
  4100                           
  4101                           ; BSR set to: 0
  4102                           ;doprnt.c: 1538: *sp = 0;
  4103  00084C  C07C  FFD9         	movff	sprintf@sp,fsr2l
  4104  000850  C07D  FFDA         	movff	sprintf@sp+1,fsr2h
  4105  000854  0E00               	movlw	0
  4106  000856  6EDF               	movwf	indf2,c
  4107  000858  0012               	return	
  4108  00085A                     __end_of_sprintf:
  4109                           	opt stack 0
  4110                           tblptru	equ	0xFF8
  4111                           tblptrh	equ	0xFF7
  4112                           tblptrl	equ	0xFF6
  4113                           tablat	equ	0xFF5
  4114                           prodh	equ	0xFF4
  4115                           prodl	equ	0xFF3
  4116                           intcon	equ	0xFF2
  4117                           postinc0	equ	0xFEE
  4118                           wreg	equ	0xFE8
  4119                           indf1	equ	0xFE7
  4120                           postdec1	equ	0xFE5
  4121                           plusw1	equ	0xFE3
  4122                           fsr1h	equ	0xFE2
  4123                           fsr1l	equ	0xFE1
  4124                           indf2	equ	0xFDF
  4125                           postinc2	equ	0xFDE
  4126                           plusw2	equ	0xFDB
  4127                           fsr2h	equ	0xFDA
  4128                           fsr2l	equ	0xFD9
  4129                           status	equ	0xFD8
  4130                           
  4131 ;; *************** function _scale *****************
  4132 ;; Defined at:
  4133 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  4134 ;; Parameters:    Size  Location     Type
  4135 ;;  scl             1    wreg     char 
  4136 ;; Auto vars:     Size  Location     Type
  4137 ;;  scl             1   61[COMRAM] char 
  4138 ;; Return value:  Size  Location     Type
  4139 ;;                  4   53[COMRAM] char 
  4140 ;; Registers used:
  4141 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4142 ;; Tracked objects:
  4143 ;;		On entry : 0/0
  4144 ;;		On exit  : 0/0
  4145 ;;		Unchanged: 0/0
  4146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4147 ;;      Params:         4       0       0       0       0       0       0       0       0
  4148 ;;      Locals:         5       0       0       0       0       0       0       0       0
  4149 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4150 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4151 ;;Total ram usage:        9 bytes
  4152 ;; Hardware stack levels used:    1
  4153 ;; Hardware stack levels required when called:    2
  4154 ;; This function calls:
  4155 ;;		___awdiv
  4156 ;;		___awmod
  4157 ;;		___flmul
  4158 ;; This function is called by:
  4159 ;;		_sprintf
  4160 ;; This function uses a non-reentrant model
  4161 ;;
  4162                           
  4163                           	psect	text11
  4164  001136                     __ptext11:
  4165                           	opt stack 0
  4166  001136                     _scale:
  4167                           	opt stack 26
  4168                           
  4169                           ; BSR set to: 0
  4170                           ;incstack = 0
  4171                           ;scale@scl stored from wreg
  4172  001136  6E3E               	movwf	scale@scl,c
  4173                           
  4174                           ;doprnt.c: 428: if(scl < 0) {
  4175  001138  AE3E               	btfss	scale@scl,7,c
  4176  00113A  D105               	goto	l3189
  4177                           
  4178                           ;doprnt.c: 429: scl = -scl;
  4179  00113C  6C3E               	negf	scale@scl,c
  4180                           
  4181                           ;doprnt.c: 430: if(scl>=110)
  4182  00113E  503E               	movf	scale@scl,w,c
  4183  001140  0A80               	xorlw	128
  4184  001142  0F12               	addlw	-238
  4185  001144  A0D8               	btfss	status,0,c
  4186  001146  D098               	goto	l3179
  4187                           
  4188                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  4189  001148  0E00               	movlw	0
  4190  00114A  6E18               	movwf	___awdiv@divisor+1,c
  4191  00114C  0E0A               	movlw	10
  4192  00114E  6E17               	movwf	___awdiv@divisor,c
  4193  001150  0E00               	movlw	0
  4194  001152  6E12               	movwf	___awmod@divisor+1,c
  4195  001154  0E64               	movlw	100
  4196  001156  6E11               	movwf	___awmod@divisor,c
  4197  001158  503E               	movf	scale@scl,w,c
  4198  00115A  6E0F               	movwf	___awmod@dividend,c
  4199  00115C  6A10               	clrf	___awmod@dividend+1,c
  4200  00115E  BE0F               	btfsc	___awmod@dividend,7,c
  4201  001160  0610               	decf	___awmod@dividend+1,f,c
  4202  001162  EC26  F017         	call	___awmod	;wreg free
  4203  001166  C00F  F015         	movff	?___awmod,___awdiv@dividend
  4204  00116A  C010  F016         	movff	?___awmod+1,___awdiv@dividend+1
  4205  00116E  ECA3  F016         	call	___awdiv	;wreg free
  4206  001172  90D8               	bcf	status,0,c
  4207  001174  3615               	rlcf	?___awdiv,f,c
  4208  001176  3616               	rlcf	?___awdiv+1,f,c
  4209  001178  90D8               	bcf	status,0,c
  4210  00117A  3615               	rlcf	?___awdiv,f,c
  4211  00117C  3616               	rlcf	?___awdiv+1,f,c
  4212  00117E  0E24               	movlw	36
  4213  001180  2615               	addwf	?___awdiv,f,c
  4214  001182  0E00               	movlw	0
  4215  001184  2216               	addwfc	?___awdiv+1,f,c
  4216  001186  0EE1               	movlw	low __npowers_
  4217  001188  2415               	addwf	?___awdiv,w,c
  4218  00118A  6EF6               	movwf	tblptrl,c
  4219  00118C  0E7E               	movlw	high __npowers_
  4220  00118E  2016               	addwfc	?___awdiv+1,w,c
  4221  001190  6EF7               	movwf	tblptrh,c
  4222  001192                     	if	0	;There are less than 3 active tblptr bytes
  4223  001192                     	endif
  4224  001192  0009               	tblrd		*+
  4225  001194  CFF5 F021          	movff	tablat,___flmul@a
  4226  001198  0009               	tblrd		*+
  4227  00119A  CFF5 F022          	movff	tablat,___flmul@a+1
  4228  00119E  0009               	tblrd		*+
  4229  0011A0  CFF5 F023          	movff	tablat,___flmul@a+2
  4230  0011A4  000A               	tblrd		*-
  4231  0011A6  CFF5 F024          	movff	tablat,___flmul@a+3
  4232  0011AA  0E00               	movlw	0
  4233  0011AC  6E18               	movwf	___awdiv@divisor+1,c
  4234  0011AE  0E64               	movlw	100
  4235  0011B0  6E17               	movwf	___awdiv@divisor,c
  4236  0011B2  503E               	movf	scale@scl,w,c
  4237  0011B4  6E15               	movwf	___awdiv@dividend,c
  4238  0011B6  6A16               	clrf	___awdiv@dividend+1,c
  4239  0011B8  BE15               	btfsc	___awdiv@dividend,7,c
  4240  0011BA  0616               	decf	___awdiv@dividend+1,f,c
  4241  0011BC  ECA3  F016         	call	___awdiv	;wreg free
  4242  0011C0  90D8               	bcf	status,0,c
  4243  0011C2  3615               	rlcf	?___awdiv,f,c
  4244  0011C4  3616               	rlcf	?___awdiv+1,f,c
  4245  0011C6  90D8               	bcf	status,0,c
  4246  0011C8  3615               	rlcf	?___awdiv,f,c
  4247  0011CA  3616               	rlcf	?___awdiv+1,f,c
  4248  0011CC  0E48               	movlw	72
  4249  0011CE  2615               	addwf	?___awdiv,f,c
  4250  0011D0  0E00               	movlw	0
  4251  0011D2  2216               	addwfc	?___awdiv+1,f,c
  4252  0011D4  0EE1               	movlw	low __npowers_
  4253  0011D6  2415               	addwf	?___awdiv,w,c
  4254  0011D8  6EF6               	movwf	tblptrl,c
  4255  0011DA  0E7E               	movlw	high __npowers_
  4256  0011DC  2016               	addwfc	?___awdiv+1,w,c
  4257  0011DE  6EF7               	movwf	tblptrh,c
  4258  0011E0                     	if	0	;There are less than 3 active tblptr bytes
  4259  0011E0                     	endif
  4260  0011E0  0009               	tblrd		*+
  4261  0011E2  CFF5 F01D          	movff	tablat,___flmul@b
  4262  0011E6  0009               	tblrd		*+
  4263  0011E8  CFF5 F01E          	movff	tablat,___flmul@b+1
  4264  0011EC  0009               	tblrd		*+
  4265  0011EE  CFF5 F01F          	movff	tablat,___flmul@b+2
  4266  0011F2  000A               	tblrd		*-
  4267  0011F4  CFF5 F020          	movff	tablat,___flmul@b+3
  4268  0011F8  ECA7  F00A         	call	___flmul	;wreg free
  4269  0011FC  C01D  F03A         	movff	?___flmul,_scale$1260
  4270  001200  C01E  F03B         	movff	?___flmul+1,_scale$1260+1
  4271  001204  C01F  F03C         	movff	?___flmul+2,_scale$1260+2
  4272  001208  C020  F03D         	movff	?___flmul+3,_scale$1260+3
  4273                           
  4274                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  4275  00120C  C03A  F01D         	movff	_scale$1260,___flmul@b
  4276  001210  C03B  F01E         	movff	_scale$1260+1,___flmul@b+1
  4277  001214  C03C  F01F         	movff	_scale$1260+2,___flmul@b+2
  4278  001218  C03D  F020         	movff	_scale$1260+3,___flmul@b+3
  4279  00121C  0E00               	movlw	0
  4280  00121E  6E12               	movwf	___awmod@divisor+1,c
  4281  001220  0E0A               	movlw	10
  4282  001222  6E11               	movwf	___awmod@divisor,c
  4283  001224  503E               	movf	scale@scl,w,c
  4284  001226  6E0F               	movwf	___awmod@dividend,c
  4285  001228  6A10               	clrf	___awmod@dividend+1,c
  4286  00122A  BE0F               	btfsc	___awmod@dividend,7,c
  4287  00122C  0610               	decf	___awmod@dividend+1,f,c
  4288  00122E  EC26  F017         	call	___awmod	;wreg free
  4289  001232  90D8               	bcf	status,0,c
  4290  001234  360F               	rlcf	?___awmod,f,c
  4291  001236  3610               	rlcf	?___awmod+1,f,c
  4292  001238  90D8               	bcf	status,0,c
  4293  00123A  360F               	rlcf	?___awmod,f,c
  4294  00123C  3610               	rlcf	?___awmod+1,f,c
  4295  00123E  0EE1               	movlw	low __npowers_
  4296  001240  240F               	addwf	?___awmod,w,c
  4297  001242  6EF6               	movwf	tblptrl,c
  4298  001244  0E7E               	movlw	high __npowers_
  4299  001246  2010               	addwfc	?___awmod+1,w,c
  4300  001248  6EF7               	movwf	tblptrh,c
  4301  00124A                     	if	0	;There are less than 3 active tblptr bytes
  4302  00124A                     	endif
  4303  00124A  0009               	tblrd		*+
  4304  00124C  CFF5 F021          	movff	tablat,___flmul@a
  4305  001250  0009               	tblrd		*+
  4306  001252  CFF5 F022          	movff	tablat,___flmul@a+1
  4307  001256  0009               	tblrd		*+
  4308  001258  CFF5 F023          	movff	tablat,___flmul@a+2
  4309  00125C  000A               	tblrd		*-
  4310  00125E  CFF5 F024          	movff	tablat,___flmul@a+3
  4311  001262  ECA7  F00A         	call	___flmul	;wreg free
  4312  001266  C01D  F036         	movff	?___flmul,?_scale
  4313  00126A  C01E  F037         	movff	?___flmul+1,?_scale+1
  4314  00126E  C01F  F038         	movff	?___flmul+2,?_scale+2
  4315  001272  C020  F039         	movff	?___flmul+3,?_scale+3
  4316  001276  0012               	return	
  4317  001278                     l3179:
  4318                           
  4319                           ;doprnt.c: 432: else if(scl > 10)
  4320  001278  503E               	movf	scale@scl,w,c
  4321  00127A  0A80               	xorlw	128
  4322  00127C  0F75               	addlw	-139
  4323  00127E  A0D8               	btfss	status,0,c
  4324  001280  D04D               	goto	l3185
  4325                           
  4326                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  4327  001282  0E00               	movlw	0
  4328  001284  6E18               	movwf	___awdiv@divisor+1,c
  4329  001286  0E0A               	movlw	10
  4330  001288  6E17               	movwf	___awdiv@divisor,c
  4331  00128A  503E               	movf	scale@scl,w,c
  4332  00128C  6E15               	movwf	___awdiv@dividend,c
  4333  00128E  6A16               	clrf	___awdiv@dividend+1,c
  4334  001290  BE15               	btfsc	___awdiv@dividend,7,c
  4335  001292  0616               	decf	___awdiv@dividend+1,f,c
  4336  001294  ECA3  F016         	call	___awdiv	;wreg free
  4337  001298  90D8               	bcf	status,0,c
  4338  00129A  3615               	rlcf	?___awdiv,f,c
  4339  00129C  3616               	rlcf	?___awdiv+1,f,c
  4340  00129E  90D8               	bcf	status,0,c
  4341  0012A0  3615               	rlcf	?___awdiv,f,c
  4342  0012A2  3616               	rlcf	?___awdiv+1,f,c
  4343  0012A4  0E24               	movlw	36
  4344  0012A6  2615               	addwf	?___awdiv,f,c
  4345  0012A8  0E00               	movlw	0
  4346  0012AA  2216               	addwfc	?___awdiv+1,f,c
  4347  0012AC  0EE1               	movlw	low __npowers_
  4348  0012AE  2415               	addwf	?___awdiv,w,c
  4349  0012B0  6EF6               	movwf	tblptrl,c
  4350  0012B2  0E7E               	movlw	high __npowers_
  4351  0012B4  2016               	addwfc	?___awdiv+1,w,c
  4352  0012B6  6EF7               	movwf	tblptrh,c
  4353  0012B8                     	if	0	;There are less than 3 active tblptr bytes
  4354  0012B8                     	endif
  4355  0012B8  0009               	tblrd		*+
  4356  0012BA  CFF5 F01D          	movff	tablat,___flmul@b
  4357  0012BE  0009               	tblrd		*+
  4358  0012C0  CFF5 F01E          	movff	tablat,___flmul@b+1
  4359  0012C4  0009               	tblrd		*+
  4360  0012C6  CFF5 F01F          	movff	tablat,___flmul@b+2
  4361  0012CA  000A               	tblrd		*-
  4362  0012CC  CFF5 F020          	movff	tablat,___flmul@b+3
  4363  0012D0  0E00               	movlw	0
  4364  0012D2  6E12               	movwf	___awmod@divisor+1,c
  4365  0012D4  0E0A               	movlw	10
  4366  0012D6  6E11               	movwf	___awmod@divisor,c
  4367  0012D8  503E               	movf	scale@scl,w,c
  4368  0012DA  6E0F               	movwf	___awmod@dividend,c
  4369  0012DC  6A10               	clrf	___awmod@dividend+1,c
  4370  0012DE  BE0F               	btfsc	___awmod@dividend,7,c
  4371  0012E0  0610               	decf	___awmod@dividend+1,f,c
  4372  0012E2  EC26  F017         	call	___awmod	;wreg free
  4373  0012E6  90D8               	bcf	status,0,c
  4374  0012E8  360F               	rlcf	?___awmod,f,c
  4375  0012EA  3610               	rlcf	?___awmod+1,f,c
  4376  0012EC  90D8               	bcf	status,0,c
  4377  0012EE  360F               	rlcf	?___awmod,f,c
  4378  0012F0  3610               	rlcf	?___awmod+1,f,c
  4379  0012F2  0EE1               	movlw	low __npowers_
  4380  0012F4  240F               	addwf	?___awmod,w,c
  4381  0012F6  6EF6               	movwf	tblptrl,c
  4382  0012F8  0E7E               	movlw	high __npowers_
  4383  0012FA  2010               	addwfc	?___awmod+1,w,c
  4384  0012FC  6EF7               	movwf	tblptrh,c
  4385  0012FE                     	if	0	;There are less than 3 active tblptr bytes
  4386  0012FE                     	endif
  4387  0012FE  0009               	tblrd		*+
  4388  001300  CFF5 F021          	movff	tablat,___flmul@a
  4389  001304  0009               	tblrd		*+
  4390  001306  CFF5 F022          	movff	tablat,___flmul@a+1
  4391  00130A  0009               	tblrd		*+
  4392  00130C  CFF5 F023          	movff	tablat,___flmul@a+2
  4393  001310  000A               	tblrd		*-
  4394  001312  CFF5 F024          	movff	tablat,___flmul@a+3
  4395  001316  ECA7  F00A         	call	___flmul	;wreg free
  4396  00131A  D7A5               	goto	L4
  4397  00131C                     l3185:
  4398                           
  4399                           ;doprnt.c: 434: return _npowers_[scl];
  4400  00131C  503E               	movf	scale@scl,w,c
  4401  00131E  0D04               	mullw	4
  4402  001320  0EE1               	movlw	low __npowers_
  4403  001322  24F3               	addwf	prodl,w,c
  4404  001324  6EF6               	movwf	tblptrl,c
  4405  001326  0E7E               	movlw	high __npowers_
  4406  001328  20F4               	addwfc	prodh,w,c
  4407  00132A  6EF7               	movwf	tblptrh,c
  4408  00132C                     	if	0	;There are less than 3 active tblptr bytes
  4409  00132C                     	endif
  4410  00132C  0009               	tblrd		*+
  4411  00132E  CFF5 F036          	movff	tablat,?_scale
  4412  001332  0009               	tblrd		*+
  4413  001334  CFF5 F037          	movff	tablat,?_scale+1
  4414  001338  0009               	tblrd		*+
  4415  00133A  CFF5 F038          	movff	tablat,?_scale+2
  4416  00133E  000A               	tblrd		*-
  4417  001340  CFF5 F039          	movff	tablat,?_scale+3
  4418  001344  0012               	return	
  4419  001346                     l3189:
  4420                           
  4421                           ;doprnt.c: 435: }
  4422                           ;doprnt.c: 436: if(scl>=110)
  4423  001346  503E               	movf	scale@scl,w,c
  4424  001348  0A80               	xorlw	128
  4425  00134A  0F12               	addlw	-238
  4426  00134C  A0D8               	btfss	status,0,c
  4427  00134E  D098               	goto	l3197
  4428                           
  4429                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  4430  001350  0E00               	movlw	0
  4431  001352  6E18               	movwf	___awdiv@divisor+1,c
  4432  001354  0E0A               	movlw	10
  4433  001356  6E17               	movwf	___awdiv@divisor,c
  4434  001358  0E00               	movlw	0
  4435  00135A  6E12               	movwf	___awmod@divisor+1,c
  4436  00135C  0E64               	movlw	100
  4437  00135E  6E11               	movwf	___awmod@divisor,c
  4438  001360  503E               	movf	scale@scl,w,c
  4439  001362  6E0F               	movwf	___awmod@dividend,c
  4440  001364  6A10               	clrf	___awmod@dividend+1,c
  4441  001366  BE0F               	btfsc	___awmod@dividend,7,c
  4442  001368  0610               	decf	___awmod@dividend+1,f,c
  4443  00136A  EC26  F017         	call	___awmod	;wreg free
  4444  00136E  C00F  F015         	movff	?___awmod,___awdiv@dividend
  4445  001372  C010  F016         	movff	?___awmod+1,___awdiv@dividend+1
  4446  001376  ECA3  F016         	call	___awdiv	;wreg free
  4447  00137A  90D8               	bcf	status,0,c
  4448  00137C  3615               	rlcf	?___awdiv,f,c
  4449  00137E  3616               	rlcf	?___awdiv+1,f,c
  4450  001380  90D8               	bcf	status,0,c
  4451  001382  3615               	rlcf	?___awdiv,f,c
  4452  001384  3616               	rlcf	?___awdiv+1,f,c
  4453  001386  0E24               	movlw	36
  4454  001388  2615               	addwf	?___awdiv,f,c
  4455  00138A  0E00               	movlw	0
  4456  00138C  2216               	addwfc	?___awdiv+1,f,c
  4457  00138E  0E15               	movlw	low __powers_
  4458  001390  2415               	addwf	?___awdiv,w,c
  4459  001392  6EF6               	movwf	tblptrl,c
  4460  001394  0E7F               	movlw	high __powers_
  4461  001396  2016               	addwfc	?___awdiv+1,w,c
  4462  001398  6EF7               	movwf	tblptrh,c
  4463  00139A                     	if	0	;There are less than 3 active tblptr bytes
  4464  00139A                     	endif
  4465  00139A  0009               	tblrd		*+
  4466  00139C  CFF5 F021          	movff	tablat,___flmul@a
  4467  0013A0  0009               	tblrd		*+
  4468  0013A2  CFF5 F022          	movff	tablat,___flmul@a+1
  4469  0013A6  0009               	tblrd		*+
  4470  0013A8  CFF5 F023          	movff	tablat,___flmul@a+2
  4471  0013AC  000A               	tblrd		*-
  4472  0013AE  CFF5 F024          	movff	tablat,___flmul@a+3
  4473  0013B2  0E00               	movlw	0
  4474  0013B4  6E18               	movwf	___awdiv@divisor+1,c
  4475  0013B6  0E64               	movlw	100
  4476  0013B8  6E17               	movwf	___awdiv@divisor,c
  4477  0013BA  503E               	movf	scale@scl,w,c
  4478  0013BC  6E15               	movwf	___awdiv@dividend,c
  4479  0013BE  6A16               	clrf	___awdiv@dividend+1,c
  4480  0013C0  BE15               	btfsc	___awdiv@dividend,7,c
  4481  0013C2  0616               	decf	___awdiv@dividend+1,f,c
  4482  0013C4  ECA3  F016         	call	___awdiv	;wreg free
  4483  0013C8  90D8               	bcf	status,0,c
  4484  0013CA  3615               	rlcf	?___awdiv,f,c
  4485  0013CC  3616               	rlcf	?___awdiv+1,f,c
  4486  0013CE  90D8               	bcf	status,0,c
  4487  0013D0  3615               	rlcf	?___awdiv,f,c
  4488  0013D2  3616               	rlcf	?___awdiv+1,f,c
  4489  0013D4  0E48               	movlw	72
  4490  0013D6  2615               	addwf	?___awdiv,f,c
  4491  0013D8  0E00               	movlw	0
  4492  0013DA  2216               	addwfc	?___awdiv+1,f,c
  4493  0013DC  0E15               	movlw	low __powers_
  4494  0013DE  2415               	addwf	?___awdiv,w,c
  4495  0013E0  6EF6               	movwf	tblptrl,c
  4496  0013E2  0E7F               	movlw	high __powers_
  4497  0013E4  2016               	addwfc	?___awdiv+1,w,c
  4498  0013E6  6EF7               	movwf	tblptrh,c
  4499  0013E8                     	if	0	;There are less than 3 active tblptr bytes
  4500  0013E8                     	endif
  4501  0013E8  0009               	tblrd		*+
  4502  0013EA  CFF5 F01D          	movff	tablat,___flmul@b
  4503  0013EE  0009               	tblrd		*+
  4504  0013F0  CFF5 F01E          	movff	tablat,___flmul@b+1
  4505  0013F4  0009               	tblrd		*+
  4506  0013F6  CFF5 F01F          	movff	tablat,___flmul@b+2
  4507  0013FA  000A               	tblrd		*-
  4508  0013FC  CFF5 F020          	movff	tablat,___flmul@b+3
  4509  001400  ECA7  F00A         	call	___flmul	;wreg free
  4510  001404  C01D  F03A         	movff	?___flmul,_scale$1260
  4511  001408  C01E  F03B         	movff	?___flmul+1,_scale$1260+1
  4512  00140C  C01F  F03C         	movff	?___flmul+2,_scale$1260+2
  4513  001410  C020  F03D         	movff	?___flmul+3,_scale$1260+3
  4514                           
  4515                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  4516  001414  C03A  F01D         	movff	_scale$1260,___flmul@b
  4517  001418  C03B  F01E         	movff	_scale$1260+1,___flmul@b+1
  4518  00141C  C03C  F01F         	movff	_scale$1260+2,___flmul@b+2
  4519  001420  C03D  F020         	movff	_scale$1260+3,___flmul@b+3
  4520  001424  0E00               	movlw	0
  4521  001426  6E12               	movwf	___awmod@divisor+1,c
  4522  001428  0E0A               	movlw	10
  4523  00142A  6E11               	movwf	___awmod@divisor,c
  4524  00142C  503E               	movf	scale@scl,w,c
  4525  00142E  6E0F               	movwf	___awmod@dividend,c
  4526  001430  6A10               	clrf	___awmod@dividend+1,c
  4527  001432  BE0F               	btfsc	___awmod@dividend,7,c
  4528  001434  0610               	decf	___awmod@dividend+1,f,c
  4529  001436  EC26  F017         	call	___awmod	;wreg free
  4530  00143A  90D8               	bcf	status,0,c
  4531  00143C  360F               	rlcf	?___awmod,f,c
  4532  00143E  3610               	rlcf	?___awmod+1,f,c
  4533  001440  90D8               	bcf	status,0,c
  4534  001442  360F               	rlcf	?___awmod,f,c
  4535  001444  3610               	rlcf	?___awmod+1,f,c
  4536  001446  0E15               	movlw	low __powers_
  4537  001448  240F               	addwf	?___awmod,w,c
  4538  00144A  6EF6               	movwf	tblptrl,c
  4539  00144C  0E7F               	movlw	high __powers_
  4540  00144E  2010               	addwfc	?___awmod+1,w,c
  4541  001450  6EF7               	movwf	tblptrh,c
  4542  001452                     	if	0	;There are less than 3 active tblptr bytes
  4543  001452                     	endif
  4544  001452  0009               	tblrd		*+
  4545  001454  CFF5 F021          	movff	tablat,___flmul@a
  4546  001458  0009               	tblrd		*+
  4547  00145A  CFF5 F022          	movff	tablat,___flmul@a+1
  4548  00145E  0009               	tblrd		*+
  4549  001460  CFF5 F023          	movff	tablat,___flmul@a+2
  4550  001464  000A               	tblrd		*-
  4551  001466  CFF5 F024          	movff	tablat,___flmul@a+3
  4552  00146A  ECA7  F00A         	call	___flmul	;wreg free
  4553  00146E  C01D  F036         	movff	?___flmul,?_scale
  4554  001472  C01E  F037         	movff	?___flmul+1,?_scale+1
  4555  001476  C01F  F038         	movff	?___flmul+2,?_scale+2
  4556  00147A  C020  F039         	movff	?___flmul+3,?_scale+3
  4557  00147E  0012               	return	
  4558  001480                     l3197:
  4559                           
  4560                           ;doprnt.c: 438: else if(scl > 10)
  4561  001480  503E               	movf	scale@scl,w,c
  4562  001482  0A80               	xorlw	128
  4563  001484  0F75               	addlw	-139
  4564  001486  A0D8               	btfss	status,0,c
  4565  001488  D04D               	goto	l3203
  4566                           
  4567                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  4568  00148A  0E00               	movlw	0
  4569  00148C  6E18               	movwf	___awdiv@divisor+1,c
  4570  00148E  0E0A               	movlw	10
  4571  001490  6E17               	movwf	___awdiv@divisor,c
  4572  001492  503E               	movf	scale@scl,w,c
  4573  001494  6E15               	movwf	___awdiv@dividend,c
  4574  001496  6A16               	clrf	___awdiv@dividend+1,c
  4575  001498  BE15               	btfsc	___awdiv@dividend,7,c
  4576  00149A  0616               	decf	___awdiv@dividend+1,f,c
  4577  00149C  ECA3  F016         	call	___awdiv	;wreg free
  4578  0014A0  90D8               	bcf	status,0,c
  4579  0014A2  3615               	rlcf	?___awdiv,f,c
  4580  0014A4  3616               	rlcf	?___awdiv+1,f,c
  4581  0014A6  90D8               	bcf	status,0,c
  4582  0014A8  3615               	rlcf	?___awdiv,f,c
  4583  0014AA  3616               	rlcf	?___awdiv+1,f,c
  4584  0014AC  0E24               	movlw	36
  4585  0014AE  2615               	addwf	?___awdiv,f,c
  4586  0014B0  0E00               	movlw	0
  4587  0014B2  2216               	addwfc	?___awdiv+1,f,c
  4588  0014B4  0E15               	movlw	low __powers_
  4589  0014B6  2415               	addwf	?___awdiv,w,c
  4590  0014B8  6EF6               	movwf	tblptrl,c
  4591  0014BA  0E7F               	movlw	high __powers_
  4592  0014BC  2016               	addwfc	?___awdiv+1,w,c
  4593  0014BE  6EF7               	movwf	tblptrh,c
  4594  0014C0                     	if	0	;There are less than 3 active tblptr bytes
  4595  0014C0                     	endif
  4596  0014C0  0009               	tblrd		*+
  4597  0014C2  CFF5 F01D          	movff	tablat,___flmul@b
  4598  0014C6  0009               	tblrd		*+
  4599  0014C8  CFF5 F01E          	movff	tablat,___flmul@b+1
  4600  0014CC  0009               	tblrd		*+
  4601  0014CE  CFF5 F01F          	movff	tablat,___flmul@b+2
  4602  0014D2  000A               	tblrd		*-
  4603  0014D4  CFF5 F020          	movff	tablat,___flmul@b+3
  4604  0014D8  0E00               	movlw	0
  4605  0014DA  6E12               	movwf	___awmod@divisor+1,c
  4606  0014DC  0E0A               	movlw	10
  4607  0014DE  6E11               	movwf	___awmod@divisor,c
  4608  0014E0  503E               	movf	scale@scl,w,c
  4609  0014E2  6E0F               	movwf	___awmod@dividend,c
  4610  0014E4  6A10               	clrf	___awmod@dividend+1,c
  4611  0014E6  BE0F               	btfsc	___awmod@dividend,7,c
  4612  0014E8  0610               	decf	___awmod@dividend+1,f,c
  4613  0014EA  EC26  F017         	call	___awmod	;wreg free
  4614  0014EE  90D8               	bcf	status,0,c
  4615  0014F0  360F               	rlcf	?___awmod,f,c
  4616  0014F2  3610               	rlcf	?___awmod+1,f,c
  4617  0014F4  90D8               	bcf	status,0,c
  4618  0014F6  360F               	rlcf	?___awmod,f,c
  4619  0014F8  3610               	rlcf	?___awmod+1,f,c
  4620  0014FA  0E15               	movlw	low __powers_
  4621  0014FC  240F               	addwf	?___awmod,w,c
  4622  0014FE  6EF6               	movwf	tblptrl,c
  4623  001500  0E7F               	movlw	high __powers_
  4624  001502  2010               	addwfc	?___awmod+1,w,c
  4625  001504  6EF7               	movwf	tblptrh,c
  4626  001506                     	if	0	;There are less than 3 active tblptr bytes
  4627  001506                     	endif
  4628  001506  0009               	tblrd		*+
  4629  001508  CFF5 F021          	movff	tablat,___flmul@a
  4630  00150C  0009               	tblrd		*+
  4631  00150E  CFF5 F022          	movff	tablat,___flmul@a+1
  4632  001512  0009               	tblrd		*+
  4633  001514  CFF5 F023          	movff	tablat,___flmul@a+2
  4634  001518  000A               	tblrd		*-
  4635  00151A  CFF5 F024          	movff	tablat,___flmul@a+3
  4636  00151E  ECA7  F00A         	call	___flmul	;wreg free
  4637  001522  D7A5               	goto	L5
  4638  001524                     l3203:
  4639                           
  4640                           ;doprnt.c: 440: return _powers_[scl];
  4641  001524  503E               	movf	scale@scl,w,c
  4642  001526  0D04               	mullw	4
  4643  001528  0E15               	movlw	low __powers_
  4644  00152A  24F3               	addwf	prodl,w,c
  4645  00152C  6EF6               	movwf	tblptrl,c
  4646  00152E  0E7F               	movlw	high __powers_
  4647  001530  20F4               	addwfc	prodh,w,c
  4648  001532  6EF7               	movwf	tblptrh,c
  4649  001534                     	if	0	;There are less than 3 active tblptr bytes
  4650  001534                     	endif
  4651  001534  0009               	tblrd		*+
  4652  001536  CFF5 F036          	movff	tablat,?_scale
  4653  00153A  0009               	tblrd		*+
  4654  00153C  CFF5 F037          	movff	tablat,?_scale+1
  4655  001540  0009               	tblrd		*+
  4656  001542  CFF5 F038          	movff	tablat,?_scale+2
  4657  001546  000A               	tblrd		*-
  4658  001548  CFF5 F039          	movff	tablat,?_scale+3
  4659  00154C  0012               	return	
  4660  00154E                     __end_of_scale:
  4661                           	opt stack 0
  4662                           tblptru	equ	0xFF8
  4663                           tblptrh	equ	0xFF7
  4664                           tblptrl	equ	0xFF6
  4665                           tablat	equ	0xFF5
  4666                           prodh	equ	0xFF4
  4667                           prodl	equ	0xFF3
  4668                           intcon	equ	0xFF2
  4669                           postinc0	equ	0xFEE
  4670                           wreg	equ	0xFE8
  4671                           indf1	equ	0xFE7
  4672                           postdec1	equ	0xFE5
  4673                           plusw1	equ	0xFE3
  4674                           fsr1h	equ	0xFE2
  4675                           fsr1l	equ	0xFE1
  4676                           indf2	equ	0xFDF
  4677                           postinc2	equ	0xFDE
  4678                           plusw2	equ	0xFDB
  4679                           fsr2h	equ	0xFDA
  4680                           fsr2l	equ	0xFD9
  4681                           status	equ	0xFD8
  4682                           
  4683 ;; *************** function _isdigit *****************
  4684 ;; Defined at:
  4685 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
  4686 ;; Parameters:    Size  Location     Type
  4687 ;;  c               1    wreg     unsigned char 
  4688 ;; Auto vars:     Size  Location     Type
  4689 ;;  c               1   16[COMRAM] unsigned char 
  4690 ;; Return value:  Size  Location     Type
  4691 ;;		None               void
  4692 ;; Registers used:
  4693 ;;		wreg, status,2, status,0
  4694 ;; Tracked objects:
  4695 ;;		On entry : 0/0
  4696 ;;		On exit  : 0/0
  4697 ;;		Unchanged: 0/0
  4698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4699 ;;      Params:         0       0       0       0       0       0       0       0       0
  4700 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4701 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4702 ;;      Totals:         3       0       0       0       0       0       0       0       0
  4703 ;;Total ram usage:        3 bytes
  4704 ;; Hardware stack levels used:    1
  4705 ;; Hardware stack levels required when called:    1
  4706 ;; This function calls:
  4707 ;;		Nothing
  4708 ;; This function is called by:
  4709 ;;		_sprintf
  4710 ;; This function uses a non-reentrant model
  4711 ;;
  4712                           
  4713                           	psect	text12
  4714  0032EA                     __ptext12:
  4715                           	opt stack 0
  4716  0032EA                     _isdigit:
  4717                           	opt stack 27
  4718                           
  4719                           ;incstack = 0
  4720                           ;isdigit@c stored from wreg
  4721  0032EA  6E11               	movwf	isdigit@c,c
  4722  0032EC  0E00               	movlw	0
  4723  0032EE  6E10               	movwf	_isdigit$885,c
  4724  0032F0  0E3A               	movlw	58
  4725  0032F2  6011               	cpfslt	isdigit@c,c
  4726  0032F4  D005               	goto	l3215
  4727  0032F6  0E2F               	movlw	47
  4728  0032F8  6411               	cpfsgt	isdigit@c,c
  4729  0032FA  D002               	goto	l3215
  4730  0032FC  0E01               	movlw	1
  4731  0032FE  6E10               	movwf	_isdigit$885,c
  4732  003300                     l3215:
  4733  003300  C010  F00F         	movff	_isdigit$885,??_isdigit
  4734  003304  300F               	rrcf	??_isdigit,w,c
  4735  003306  0012               	return	
  4736  003308                     __end_of_isdigit:
  4737                           	opt stack 0
  4738                           tblptru	equ	0xFF8
  4739                           tblptrh	equ	0xFF7
  4740                           tblptrl	equ	0xFF6
  4741                           tablat	equ	0xFF5
  4742                           prodh	equ	0xFF4
  4743                           prodl	equ	0xFF3
  4744                           intcon	equ	0xFF2
  4745                           postinc0	equ	0xFEE
  4746                           wreg	equ	0xFE8
  4747                           indf1	equ	0xFE7
  4748                           postdec1	equ	0xFE5
  4749                           plusw1	equ	0xFE3
  4750                           fsr1h	equ	0xFE2
  4751                           fsr1l	equ	0xFE1
  4752                           indf2	equ	0xFDF
  4753                           postinc2	equ	0xFDE
  4754                           plusw2	equ	0xFDB
  4755                           fsr2h	equ	0xFDA
  4756                           fsr2l	equ	0xFD9
  4757                           status	equ	0xFD8
  4758                           
  4759 ;; *************** function _fround *****************
  4760 ;; Defined at:
  4761 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  4762 ;; Parameters:    Size  Location     Type
  4763 ;;  prec            1    wreg     unsigned char 
  4764 ;; Auto vars:     Size  Location     Type
  4765 ;;  prec            1   65[COMRAM] unsigned char 
  4766 ;; Return value:  Size  Location     Type
  4767 ;;                  4   53[COMRAM] unsigned char 
  4768 ;; Registers used:
  4769 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4770 ;; Tracked objects:
  4771 ;;		On entry : 0/0
  4772 ;;		On exit  : 0/0
  4773 ;;		Unchanged: 0/0
  4774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4775 ;;      Params:         4       0       0       0       0       0       0       0       0
  4776 ;;      Locals:         9       0       0       0       0       0       0       0       0
  4777 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4778 ;;      Totals:        13       0       0       0       0       0       0       0       0
  4779 ;;Total ram usage:       13 bytes
  4780 ;; Hardware stack levels used:    1
  4781 ;; Hardware stack levels required when called:    2
  4782 ;; This function calls:
  4783 ;;		___awdiv
  4784 ;;		___awmod
  4785 ;;		___flmul
  4786 ;; This function is called by:
  4787 ;;		_sprintf
  4788 ;; This function uses a non-reentrant model
  4789 ;;
  4790                           
  4791                           	psect	text13
  4792  001E60                     __ptext13:
  4793                           	opt stack 0
  4794  001E60                     _fround:
  4795                           	opt stack 26
  4796                           
  4797                           ;incstack = 0
  4798                           ;fround@prec stored from wreg
  4799  001E60  6E42               	movwf	fround@prec,c
  4800                           
  4801                           ;doprnt.c: 413: if(prec>=110)
  4802  001E62  0E6D               	movlw	109
  4803  001E64  6442               	cpfsgt	fround@prec,c
  4804  001E66  D0AC               	goto	l3157
  4805                           
  4806                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  4807  001E68  0E00               	movlw	0
  4808  001E6A  6E18               	movwf	___awdiv@divisor+1,c
  4809  001E6C  0E0A               	movlw	10
  4810  001E6E  6E17               	movwf	___awdiv@divisor,c
  4811  001E70  0E00               	movlw	0
  4812  001E72  6E12               	movwf	___awmod@divisor+1,c
  4813  001E74  0E64               	movlw	100
  4814  001E76  6E11               	movwf	___awmod@divisor,c
  4815  001E78  C042  F00F         	movff	fround@prec,___awmod@dividend
  4816  001E7C  6A10               	clrf	___awmod@dividend+1,c
  4817  001E7E  EC26  F017         	call	___awmod	;wreg free
  4818  001E82  C00F  F015         	movff	?___awmod,___awdiv@dividend
  4819  001E86  C010  F016         	movff	?___awmod+1,___awdiv@dividend+1
  4820  001E8A  ECA3  F016         	call	___awdiv	;wreg free
  4821  001E8E  90D8               	bcf	status,0,c
  4822  001E90  3615               	rlcf	?___awdiv,f,c
  4823  001E92  3616               	rlcf	?___awdiv+1,f,c
  4824  001E94  90D8               	bcf	status,0,c
  4825  001E96  3615               	rlcf	?___awdiv,f,c
  4826  001E98  3616               	rlcf	?___awdiv+1,f,c
  4827  001E9A  0E24               	movlw	36
  4828  001E9C  2615               	addwf	?___awdiv,f,c
  4829  001E9E  0E00               	movlw	0
  4830  001EA0  2216               	addwfc	?___awdiv+1,f,c
  4831  001EA2  0EE1               	movlw	low __npowers_
  4832  001EA4  2415               	addwf	?___awdiv,w,c
  4833  001EA6  6EF6               	movwf	tblptrl,c
  4834  001EA8  0E7E               	movlw	high __npowers_
  4835  001EAA  2016               	addwfc	?___awdiv+1,w,c
  4836  001EAC  6EF7               	movwf	tblptrh,c
  4837  001EAE                     	if	0	;There are less than 3 active tblptr bytes
  4838  001EAE                     	endif
  4839  001EAE  0009               	tblrd		*+
  4840  001EB0  CFF5 F021          	movff	tablat,___flmul@a
  4841  001EB4  0009               	tblrd		*+
  4842  001EB6  CFF5 F022          	movff	tablat,___flmul@a+1
  4843  001EBA  0009               	tblrd		*+
  4844  001EBC  CFF5 F023          	movff	tablat,___flmul@a+2
  4845  001EC0  000A               	tblrd		*-
  4846  001EC2  CFF5 F024          	movff	tablat,___flmul@a+3
  4847  001EC6  0E00               	movlw	0
  4848  001EC8  6E18               	movwf	___awdiv@divisor+1,c
  4849  001ECA  0E64               	movlw	100
  4850  001ECC  6E17               	movwf	___awdiv@divisor,c
  4851  001ECE  C042  F015         	movff	fround@prec,___awdiv@dividend
  4852  001ED2  6A16               	clrf	___awdiv@dividend+1,c
  4853  001ED4  ECA3  F016         	call	___awdiv	;wreg free
  4854  001ED8  90D8               	bcf	status,0,c
  4855  001EDA  3615               	rlcf	?___awdiv,f,c
  4856  001EDC  3616               	rlcf	?___awdiv+1,f,c
  4857  001EDE  90D8               	bcf	status,0,c
  4858  001EE0  3615               	rlcf	?___awdiv,f,c
  4859  001EE2  3616               	rlcf	?___awdiv+1,f,c
  4860  001EE4  0E48               	movlw	72
  4861  001EE6  2615               	addwf	?___awdiv,f,c
  4862  001EE8  0E00               	movlw	0
  4863  001EEA  2216               	addwfc	?___awdiv+1,f,c
  4864  001EEC  0EE1               	movlw	low __npowers_
  4865  001EEE  2415               	addwf	?___awdiv,w,c
  4866  001EF0  6EF6               	movwf	tblptrl,c
  4867  001EF2  0E7E               	movlw	high __npowers_
  4868  001EF4  2016               	addwfc	?___awdiv+1,w,c
  4869  001EF6  6EF7               	movwf	tblptrh,c
  4870  001EF8                     	if	0	;There are less than 3 active tblptr bytes
  4871  001EF8                     	endif
  4872  001EF8  0009               	tblrd		*+
  4873  001EFA  CFF5 F01D          	movff	tablat,___flmul@b
  4874  001EFE  0009               	tblrd		*+
  4875  001F00  CFF5 F01E          	movff	tablat,___flmul@b+1
  4876  001F04  0009               	tblrd		*+
  4877  001F06  CFF5 F01F          	movff	tablat,___flmul@b+2
  4878  001F0A  000A               	tblrd		*-
  4879  001F0C  CFF5 F020          	movff	tablat,___flmul@b+3
  4880  001F10  ECA7  F00A         	call	___flmul	;wreg free
  4881  001F14  C01D  F03E         	movff	?___flmul,_fround$1258
  4882  001F18  C01E  F03F         	movff	?___flmul+1,_fround$1258+1
  4883  001F1C  C01F  F040         	movff	?___flmul+2,_fround$1258+2
  4884  001F20  C020  F041         	movff	?___flmul+3,_fround$1258+3
  4885                           
  4886                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  4887  001F24  0E00               	movlw	0
  4888  001F26  6E12               	movwf	___awmod@divisor+1,c
  4889  001F28  0E0A               	movlw	10
  4890  001F2A  6E11               	movwf	___awmod@divisor,c
  4891  001F2C  C042  F00F         	movff	fround@prec,___awmod@dividend
  4892  001F30  6A10               	clrf	___awmod@dividend+1,c
  4893  001F32  EC26  F017         	call	___awmod	;wreg free
  4894  001F36  90D8               	bcf	status,0,c
  4895  001F38  360F               	rlcf	?___awmod,f,c
  4896  001F3A  3610               	rlcf	?___awmod+1,f,c
  4897  001F3C  90D8               	bcf	status,0,c
  4898  001F3E  360F               	rlcf	?___awmod,f,c
  4899  001F40  3610               	rlcf	?___awmod+1,f,c
  4900  001F42  0EE1               	movlw	low __npowers_
  4901  001F44  240F               	addwf	?___awmod,w,c
  4902  001F46  6EF6               	movwf	tblptrl,c
  4903  001F48  0E7E               	movlw	high __npowers_
  4904  001F4A  2010               	addwfc	?___awmod+1,w,c
  4905  001F4C  6EF7               	movwf	tblptrh,c
  4906  001F4E                     	if	0	;There are less than 3 active tblptr bytes
  4907  001F4E                     	endif
  4908  001F4E  0009               	tblrd		*+
  4909  001F50  CFF5 F021          	movff	tablat,___flmul@a
  4910  001F54  0009               	tblrd		*+
  4911  001F56  CFF5 F022          	movff	tablat,___flmul@a+1
  4912  001F5A  0009               	tblrd		*+
  4913  001F5C  CFF5 F023          	movff	tablat,___flmul@a+2
  4914  001F60  000A               	tblrd		*-
  4915  001F62  CFF5 F024          	movff	tablat,___flmul@a+3
  4916  001F66  C03E  F01D         	movff	_fround$1258,___flmul@b
  4917  001F6A  C03F  F01E         	movff	_fround$1258+1,___flmul@b+1
  4918  001F6E  C040  F01F         	movff	_fround$1258+2,___flmul@b+2
  4919  001F72  C041  F020         	movff	_fround$1258+3,___flmul@b+3
  4920  001F76  ECA7  F00A         	call	___flmul	;wreg free
  4921  001F7A  C01D  F03A         	movff	?___flmul,_fround$1259
  4922  001F7E  C01E  F03B         	movff	?___flmul+1,_fround$1259+1
  4923  001F82  C01F  F03C         	movff	?___flmul+2,_fround$1259+2
  4924  001F86  C020  F03D         	movff	?___flmul+3,_fround$1259+3
  4925                           
  4926                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  4927  001F8A  C03A  F01D         	movff	_fround$1259,___flmul@b
  4928  001F8E  C03B  F01E         	movff	_fround$1259+1,___flmul@b+1
  4929  001F92  C03C  F01F         	movff	_fround$1259+2,___flmul@b+2
  4930  001F96  C03D  F020         	movff	_fround$1259+3,___flmul@b+3
  4931  001F9A  0E00               	movlw	0
  4932  001F9C  6E21               	movwf	___flmul@a,c
  4933  001F9E  0E00               	movlw	0
  4934  001FA0  6E22               	movwf	___flmul@a+1,c
  4935  001FA2  0E00               	movlw	0
  4936  001FA4  6E23               	movwf	___flmul@a+2,c
  4937  001FA6  0E3F               	movlw	63
  4938  001FA8  6E24               	movwf	___flmul@a+3,c
  4939  001FAA  ECA7  F00A         	call	___flmul	;wreg free
  4940  001FAE  C01D  F036         	movff	?___flmul,?_fround
  4941  001FB2  C01E  F037         	movff	?___flmul+1,?_fround+1
  4942  001FB6  C01F  F038         	movff	?___flmul+2,?_fround+2
  4943  001FBA  C020  F039         	movff	?___flmul+3,?_fround+3
  4944  001FBE  0012               	return	
  4945  001FC0                     l3157:
  4946                           
  4947                           ;doprnt.c: 415: else if(prec > 10)
  4948  001FC0  0E0A               	movlw	10
  4949  001FC2  6442               	cpfsgt	fround@prec,c
  4950  001FC4  D063               	goto	l3165
  4951                           
  4952                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  4953  001FC6  0E00               	movlw	0
  4954  001FC8  6E12               	movwf	___awmod@divisor+1,c
  4955  001FCA  0E0A               	movlw	10
  4956  001FCC  6E11               	movwf	___awmod@divisor,c
  4957  001FCE  C042  F00F         	movff	fround@prec,___awmod@dividend
  4958  001FD2  6A10               	clrf	___awmod@dividend+1,c
  4959  001FD4  EC26  F017         	call	___awmod	;wreg free
  4960  001FD8  90D8               	bcf	status,0,c
  4961  001FDA  360F               	rlcf	?___awmod,f,c
  4962  001FDC  3610               	rlcf	?___awmod+1,f,c
  4963  001FDE  90D8               	bcf	status,0,c
  4964  001FE0  360F               	rlcf	?___awmod,f,c
  4965  001FE2  3610               	rlcf	?___awmod+1,f,c
  4966  001FE4  0EE1               	movlw	low __npowers_
  4967  001FE6  240F               	addwf	?___awmod,w,c
  4968  001FE8  6EF6               	movwf	tblptrl,c
  4969  001FEA  0E7E               	movlw	high __npowers_
  4970  001FEC  2010               	addwfc	?___awmod+1,w,c
  4971  001FEE  6EF7               	movwf	tblptrh,c
  4972  001FF0                     	if	0	;There are less than 3 active tblptr bytes
  4973  001FF0                     	endif
  4974  001FF0  0009               	tblrd		*+
  4975  001FF2  CFF5 F021          	movff	tablat,___flmul@a
  4976  001FF6  0009               	tblrd		*+
  4977  001FF8  CFF5 F022          	movff	tablat,___flmul@a+1
  4978  001FFC  0009               	tblrd		*+
  4979  001FFE  CFF5 F023          	movff	tablat,___flmul@a+2
  4980  002002  000A               	tblrd		*-
  4981  002004  CFF5 F024          	movff	tablat,___flmul@a+3
  4982  002008  0E00               	movlw	0
  4983  00200A  6E18               	movwf	___awdiv@divisor+1,c
  4984  00200C  0E0A               	movlw	10
  4985  00200E  6E17               	movwf	___awdiv@divisor,c
  4986  002010  C042  F015         	movff	fround@prec,___awdiv@dividend
  4987  002014  6A16               	clrf	___awdiv@dividend+1,c
  4988  002016  ECA3  F016         	call	___awdiv	;wreg free
  4989  00201A  90D8               	bcf	status,0,c
  4990  00201C  3615               	rlcf	?___awdiv,f,c
  4991  00201E  3616               	rlcf	?___awdiv+1,f,c
  4992  002020  90D8               	bcf	status,0,c
  4993  002022  3615               	rlcf	?___awdiv,f,c
  4994  002024  3616               	rlcf	?___awdiv+1,f,c
  4995  002026  0E24               	movlw	36
  4996  002028  2615               	addwf	?___awdiv,f,c
  4997  00202A  0E00               	movlw	0
  4998  00202C  2216               	addwfc	?___awdiv+1,f,c
  4999  00202E  0EE1               	movlw	low __npowers_
  5000  002030  2415               	addwf	?___awdiv,w,c
  5001  002032  6EF6               	movwf	tblptrl,c
  5002  002034  0E7E               	movlw	high __npowers_
  5003  002036  2016               	addwfc	?___awdiv+1,w,c
  5004  002038  6EF7               	movwf	tblptrh,c
  5005  00203A                     	if	0	;There are less than 3 active tblptr bytes
  5006  00203A                     	endif
  5007  00203A  0009               	tblrd		*+
  5008  00203C  CFF5 F01D          	movff	tablat,___flmul@b
  5009  002040  0009               	tblrd		*+
  5010  002042  CFF5 F01E          	movff	tablat,___flmul@b+1
  5011  002046  0009               	tblrd		*+
  5012  002048  CFF5 F01F          	movff	tablat,___flmul@b+2
  5013  00204C  000A               	tblrd		*-
  5014  00204E  CFF5 F020          	movff	tablat,___flmul@b+3
  5015  002052  ECA7  F00A         	call	___flmul	;wreg free
  5016  002056  C01D  F03E         	movff	?___flmul,_fround$1258
  5017  00205A  C01E  F03F         	movff	?___flmul+1,_fround$1258+1
  5018  00205E  C01F  F040         	movff	?___flmul+2,_fround$1258+2
  5019  002062  C020  F041         	movff	?___flmul+3,_fround$1258+3
  5020                           
  5021                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  5022  002066  C03E  F01D         	movff	_fround$1258,___flmul@b
  5023  00206A  C03F  F01E         	movff	_fround$1258+1,___flmul@b+1
  5024  00206E  C040  F01F         	movff	_fround$1258+2,___flmul@b+2
  5025  002072  C041  F020         	movff	_fround$1258+3,___flmul@b+3
  5026  002076  0E00               	movlw	0
  5027  002078  6E21               	movwf	___flmul@a,c
  5028  00207A  0E00               	movlw	0
  5029  00207C  6E22               	movwf	___flmul@a+1,c
  5030  00207E  0E00               	movlw	0
  5031  002080  6E23               	movwf	___flmul@a+2,c
  5032  002082  0E3F               	movlw	63
  5033  002084  6E24               	movwf	___flmul@a+3,c
  5034  002086  ECA7  F00A         	call	___flmul	;wreg free
  5035  00208A  D791               	goto	L6
  5036  00208C                     l3165:
  5037                           
  5038                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  5039  00208C  5042               	movf	fround@prec,w,c
  5040  00208E  0D04               	mullw	4
  5041  002090  0EE1               	movlw	low __npowers_
  5042  002092  24F3               	addwf	prodl,w,c
  5043  002094  6EF6               	movwf	tblptrl,c
  5044  002096  0E7E               	movlw	high __npowers_
  5045  002098  20F4               	addwfc	prodh,w,c
  5046  00209A  6EF7               	movwf	tblptrh,c
  5047  00209C                     	if	0	;There are less than 3 active tblptr bytes
  5048  00209C                     	endif
  5049  00209C  0009               	tblrd		*+
  5050  00209E  CFF5 F01D          	movff	tablat,___flmul@b
  5051  0020A2  0009               	tblrd		*+
  5052  0020A4  CFF5 F01E          	movff	tablat,___flmul@b+1
  5053  0020A8  0009               	tblrd		*+
  5054  0020AA  CFF5 F01F          	movff	tablat,___flmul@b+2
  5055  0020AE  000A               	tblrd		*-
  5056  0020B0  CFF5 F020          	movff	tablat,___flmul@b+3
  5057  0020B4  0E00               	movlw	0
  5058  0020B6  6E21               	movwf	___flmul@a,c
  5059  0020B8  0E00               	movlw	0
  5060  0020BA  6E22               	movwf	___flmul@a+1,c
  5061  0020BC  0E00               	movlw	0
  5062  0020BE  6E23               	movwf	___flmul@a+2,c
  5063  0020C0  0E3F               	movlw	63
  5064  0020C2  6E24               	movwf	___flmul@a+3,c
  5065  0020C4  ECA7  F00A         	call	___flmul	;wreg free
  5066  0020C8  C01D  F036         	movff	?___flmul,?_fround
  5067  0020CC  C01E  F037         	movff	?___flmul+1,?_fround+1
  5068  0020D0  C01F  F038         	movff	?___flmul+2,?_fround+2
  5069  0020D4  C020  F039         	movff	?___flmul+3,?_fround+3
  5070  0020D8  0012               	return	
  5071  0020DA                     __end_of_fround:
  5072                           	opt stack 0
  5073                           tblptru	equ	0xFF8
  5074                           tblptrh	equ	0xFF7
  5075                           tblptrl	equ	0xFF6
  5076                           tablat	equ	0xFF5
  5077                           prodh	equ	0xFF4
  5078                           prodl	equ	0xFF3
  5079                           intcon	equ	0xFF2
  5080                           postinc0	equ	0xFEE
  5081                           wreg	equ	0xFE8
  5082                           indf1	equ	0xFE7
  5083                           postdec1	equ	0xFE5
  5084                           plusw1	equ	0xFE3
  5085                           fsr1h	equ	0xFE2
  5086                           fsr1l	equ	0xFE1
  5087                           indf2	equ	0xFDF
  5088                           postinc2	equ	0xFDE
  5089                           plusw2	equ	0xFDB
  5090                           fsr2h	equ	0xFDA
  5091                           fsr2l	equ	0xFD9
  5092                           status	equ	0xFD8
  5093                           
  5094 ;; *************** function ___awmod *****************
  5095 ;; Defined at:
  5096 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
  5097 ;; Parameters:    Size  Location     Type
  5098 ;;  dividend        2   14[COMRAM] int 
  5099 ;;  divisor         2   16[COMRAM] int 
  5100 ;; Auto vars:     Size  Location     Type
  5101 ;;  sign            1   19[COMRAM] unsigned char 
  5102 ;;  counter         1   18[COMRAM] unsigned char 
  5103 ;; Return value:  Size  Location     Type
  5104 ;;                  2   14[COMRAM] int 
  5105 ;; Registers used:
  5106 ;;		wreg, status,2, status,0
  5107 ;; Tracked objects:
  5108 ;;		On entry : 0/0
  5109 ;;		On exit  : 0/0
  5110 ;;		Unchanged: 0/0
  5111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5112 ;;      Params:         4       0       0       0       0       0       0       0       0
  5113 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5114 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5115 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5116 ;;Total ram usage:        6 bytes
  5117 ;; Hardware stack levels used:    1
  5118 ;; Hardware stack levels required when called:    1
  5119 ;; This function calls:
  5120 ;;		Nothing
  5121 ;; This function is called by:
  5122 ;;		_fround
  5123 ;;		_scale
  5124 ;; This function uses a non-reentrant model
  5125 ;;
  5126                           
  5127                           	psect	text14
  5128  002E4C                     __ptext14:
  5129                           	opt stack 0
  5130  002E4C                     ___awmod:
  5131                           	opt stack 26
  5132                           
  5133                           ;incstack = 0
  5134  002E4C  0E00               	movlw	0
  5135  002E4E  6E14               	movwf	___awmod@sign,c
  5136  002E50  AE10               	btfss	___awmod@dividend+1,7,c
  5137  002E52  D006               	goto	l3065
  5138  002E54  6C0F               	negf	___awmod@dividend,c
  5139  002E56  1E10               	comf	___awmod@dividend+1,f,c
  5140  002E58  B0D8               	btfsc	status,0,c
  5141  002E5A  2A10               	incf	___awmod@dividend+1,f,c
  5142  002E5C  0E01               	movlw	1
  5143  002E5E  6E14               	movwf	___awmod@sign,c
  5144  002E60                     l3065:
  5145  002E60  AE12               	btfss	___awmod@divisor+1,7,c
  5146  002E62  D004               	goto	l3069
  5147  002E64  6C11               	negf	___awmod@divisor,c
  5148  002E66  1E12               	comf	___awmod@divisor+1,f,c
  5149  002E68  B0D8               	btfsc	status,0,c
  5150  002E6A  2A12               	incf	___awmod@divisor+1,f,c
  5151  002E6C                     l3069:
  5152  002E6C  5011               	movf	___awmod@divisor,w,c
  5153  002E6E  1012               	iorwf	___awmod@divisor+1,w,c
  5154  002E70  B4D8               	btfsc	status,2,c
  5155  002E72  D018               	goto	l3085
  5156  002E74  0E01               	movlw	1
  5157  002E76  6E13               	movwf	___awmod@counter,c
  5158  002E78  D004               	goto	l3075
  5159  002E7A                     l3073:
  5160  002E7A  90D8               	bcf	status,0,c
  5161  002E7C  3611               	rlcf	___awmod@divisor,f,c
  5162  002E7E  3612               	rlcf	___awmod@divisor+1,f,c
  5163  002E80  2A13               	incf	___awmod@counter,f,c
  5164  002E82                     l3075:
  5165  002E82  AE12               	btfss	___awmod@divisor+1,7,c
  5166  002E84  D7FA               	goto	l3073
  5167  002E86                     l3077:
  5168  002E86  5011               	movf	___awmod@divisor,w,c
  5169  002E88  5C0F               	subwf	___awmod@dividend,w,c
  5170  002E8A  5012               	movf	___awmod@divisor+1,w,c
  5171  002E8C  5810               	subwfb	___awmod@dividend+1,w,c
  5172  002E8E  A0D8               	btfss	status,0,c
  5173  002E90  D004               	goto	l3081
  5174  002E92  5011               	movf	___awmod@divisor,w,c
  5175  002E94  5E0F               	subwf	___awmod@dividend,f,c
  5176  002E96  5012               	movf	___awmod@divisor+1,w,c
  5177  002E98  5A10               	subwfb	___awmod@dividend+1,f,c
  5178  002E9A                     l3081:
  5179  002E9A  90D8               	bcf	status,0,c
  5180  002E9C  3212               	rrcf	___awmod@divisor+1,f,c
  5181  002E9E  3211               	rrcf	___awmod@divisor,f,c
  5182  002EA0  2E13               	decfsz	___awmod@counter,f,c
  5183  002EA2  D7F1               	goto	l3077
  5184  002EA4                     l3085:
  5185  002EA4  5014               	movf	___awmod@sign,w,c
  5186  002EA6  B4D8               	btfsc	status,2,c
  5187  002EA8  D004               	goto	l3089
  5188  002EAA  6C0F               	negf	___awmod@dividend,c
  5189  002EAC  1E10               	comf	___awmod@dividend+1,f,c
  5190  002EAE  B0D8               	btfsc	status,0,c
  5191  002EB0  2A10               	incf	___awmod@dividend+1,f,c
  5192  002EB2                     l3089:
  5193  002EB2  C00F  F00F         	movff	___awmod@dividend,?___awmod
  5194  002EB6  C010  F010         	movff	___awmod@dividend+1,?___awmod+1
  5195  002EBA  0012               	return	
  5196  002EBC                     __end_of___awmod:
  5197                           	opt stack 0
  5198                           tblptru	equ	0xFF8
  5199                           tblptrh	equ	0xFF7
  5200                           tblptrl	equ	0xFF6
  5201                           tablat	equ	0xFF5
  5202                           prodh	equ	0xFF4
  5203                           prodl	equ	0xFF3
  5204                           intcon	equ	0xFF2
  5205                           postinc0	equ	0xFEE
  5206                           wreg	equ	0xFE8
  5207                           indf1	equ	0xFE7
  5208                           postdec1	equ	0xFE5
  5209                           plusw1	equ	0xFE3
  5210                           fsr1h	equ	0xFE2
  5211                           fsr1l	equ	0xFE1
  5212                           indf2	equ	0xFDF
  5213                           postinc2	equ	0xFDE
  5214                           plusw2	equ	0xFDB
  5215                           fsr2h	equ	0xFDA
  5216                           fsr2l	equ	0xFD9
  5217                           status	equ	0xFD8
  5218                           
  5219 ;; *************** function ___awdiv *****************
  5220 ;; Defined at:
  5221 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  5222 ;; Parameters:    Size  Location     Type
  5223 ;;  dividend        2   20[COMRAM] int 
  5224 ;;  divisor         2   22[COMRAM] int 
  5225 ;; Auto vars:     Size  Location     Type
  5226 ;;  quotient        2   26[COMRAM] int 
  5227 ;;  sign            1   25[COMRAM] unsigned char 
  5228 ;;  counter         1   24[COMRAM] unsigned char 
  5229 ;; Return value:  Size  Location     Type
  5230 ;;                  2   20[COMRAM] int 
  5231 ;; Registers used:
  5232 ;;		wreg, status,2, status,0
  5233 ;; Tracked objects:
  5234 ;;		On entry : 0/0
  5235 ;;		On exit  : 0/0
  5236 ;;		Unchanged: 0/0
  5237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5238 ;;      Params:         4       0       0       0       0       0       0       0       0
  5239 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5240 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5241 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5242 ;;Total ram usage:        8 bytes
  5243 ;; Hardware stack levels used:    1
  5244 ;; Hardware stack levels required when called:    1
  5245 ;; This function calls:
  5246 ;;		Nothing
  5247 ;; This function is called by:
  5248 ;;		_fround
  5249 ;;		_scale
  5250 ;;		_sprintf
  5251 ;; This function uses a non-reentrant model
  5252 ;;
  5253                           
  5254                           	psect	text15
  5255  002D46                     __ptext15:
  5256                           	opt stack 0
  5257  002D46                     ___awdiv:
  5258                           	opt stack 26
  5259                           
  5260                           ;incstack = 0
  5261  002D46  0E00               	movlw	0
  5262  002D48  6E1A               	movwf	___awdiv@sign,c
  5263  002D4A  AE18               	btfss	___awdiv@divisor+1,7,c
  5264  002D4C  D006               	goto	l3021
  5265  002D4E  6C17               	negf	___awdiv@divisor,c
  5266  002D50  1E18               	comf	___awdiv@divisor+1,f,c
  5267  002D52  B0D8               	btfsc	status,0,c
  5268  002D54  2A18               	incf	___awdiv@divisor+1,f,c
  5269  002D56  0E01               	movlw	1
  5270  002D58  6E1A               	movwf	___awdiv@sign,c
  5271  002D5A                     l3021:
  5272  002D5A  AE16               	btfss	___awdiv@dividend+1,7,c
  5273  002D5C  D006               	goto	l3027
  5274  002D5E  6C15               	negf	___awdiv@dividend,c
  5275  002D60  1E16               	comf	___awdiv@dividend+1,f,c
  5276  002D62  B0D8               	btfsc	status,0,c
  5277  002D64  2A16               	incf	___awdiv@dividend+1,f,c
  5278  002D66  0E01               	movlw	1
  5279  002D68  1A1A               	xorwf	___awdiv@sign,f,c
  5280  002D6A                     l3027:
  5281  002D6A  0E00               	movlw	0
  5282  002D6C  6E1C               	movwf	___awdiv@quotient+1,c
  5283  002D6E  0E00               	movlw	0
  5284  002D70  6E1B               	movwf	___awdiv@quotient,c
  5285  002D72  5017               	movf	___awdiv@divisor,w,c
  5286  002D74  1018               	iorwf	___awdiv@divisor+1,w,c
  5287  002D76  B4D8               	btfsc	status,2,c
  5288  002D78  D01C               	goto	l3049
  5289  002D7A  0E01               	movlw	1
  5290  002D7C  6E19               	movwf	___awdiv@counter,c
  5291  002D7E  D004               	goto	l3035
  5292  002D80                     l3033:
  5293  002D80  90D8               	bcf	status,0,c
  5294  002D82  3617               	rlcf	___awdiv@divisor,f,c
  5295  002D84  3618               	rlcf	___awdiv@divisor+1,f,c
  5296  002D86  2A19               	incf	___awdiv@counter,f,c
  5297  002D88                     l3035:
  5298  002D88  AE18               	btfss	___awdiv@divisor+1,7,c
  5299  002D8A  D7FA               	goto	l3033
  5300  002D8C                     l3037:
  5301  002D8C  90D8               	bcf	status,0,c
  5302  002D8E  361B               	rlcf	___awdiv@quotient,f,c
  5303  002D90  361C               	rlcf	___awdiv@quotient+1,f,c
  5304  002D92  5017               	movf	___awdiv@divisor,w,c
  5305  002D94  5C15               	subwf	___awdiv@dividend,w,c
  5306  002D96  5018               	movf	___awdiv@divisor+1,w,c
  5307  002D98  5816               	subwfb	___awdiv@dividend+1,w,c
  5308  002D9A  A0D8               	btfss	status,0,c
  5309  002D9C  D005               	goto	l3045
  5310  002D9E  5017               	movf	___awdiv@divisor,w,c
  5311  002DA0  5E15               	subwf	___awdiv@dividend,f,c
  5312  002DA2  5018               	movf	___awdiv@divisor+1,w,c
  5313  002DA4  5A16               	subwfb	___awdiv@dividend+1,f,c
  5314  002DA6  801B               	bsf	___awdiv@quotient,0,c
  5315  002DA8                     l3045:
  5316  002DA8  90D8               	bcf	status,0,c
  5317  002DAA  3218               	rrcf	___awdiv@divisor+1,f,c
  5318  002DAC  3217               	rrcf	___awdiv@divisor,f,c
  5319  002DAE  2E19               	decfsz	___awdiv@counter,f,c
  5320  002DB0  D7ED               	goto	l3037
  5321  002DB2                     l3049:
  5322  002DB2  501A               	movf	___awdiv@sign,w,c
  5323  002DB4  B4D8               	btfsc	status,2,c
  5324  002DB6  D004               	goto	l3053
  5325  002DB8  6C1B               	negf	___awdiv@quotient,c
  5326  002DBA  1E1C               	comf	___awdiv@quotient+1,f,c
  5327  002DBC  B0D8               	btfsc	status,0,c
  5328  002DBE  2A1C               	incf	___awdiv@quotient+1,f,c
  5329  002DC0                     l3053:
  5330  002DC0  C01B  F015         	movff	___awdiv@quotient,?___awdiv
  5331  002DC4  C01C  F016         	movff	___awdiv@quotient+1,?___awdiv+1
  5332  002DC8  0012               	return	
  5333  002DCA                     __end_of___awdiv:
  5334                           	opt stack 0
  5335                           tblptru	equ	0xFF8
  5336                           tblptrh	equ	0xFF7
  5337                           tblptrl	equ	0xFF6
  5338                           tablat	equ	0xFF5
  5339                           prodh	equ	0xFF4
  5340                           prodl	equ	0xFF3
  5341                           intcon	equ	0xFF2
  5342                           postinc0	equ	0xFEE
  5343                           wreg	equ	0xFE8
  5344                           indf1	equ	0xFE7
  5345                           postdec1	equ	0xFE5
  5346                           plusw1	equ	0xFE3
  5347                           fsr1h	equ	0xFE2
  5348                           fsr1l	equ	0xFE1
  5349                           indf2	equ	0xFDF
  5350                           postinc2	equ	0xFDE
  5351                           plusw2	equ	0xFDB
  5352                           fsr2h	equ	0xFDA
  5353                           fsr2l	equ	0xFD9
  5354                           status	equ	0xFD8
  5355                           
  5356 ;; *************** function __tdiv_to_l_ *****************
  5357 ;; Defined at:
  5358 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftdivl.c"
  5359 ;; Parameters:    Size  Location     Type
  5360 ;;  f1              4   14[COMRAM] float 
  5361 ;;  f2              4   18[COMRAM] float 
  5362 ;; Auto vars:     Size  Location     Type
  5363 ;;  quot            4   25[COMRAM] unsigned long 
  5364 ;;  exp1            1   30[COMRAM] unsigned char 
  5365 ;;  cntr            1   29[COMRAM] unsigned char 
  5366 ;; Return value:  Size  Location     Type
  5367 ;;                  4   14[COMRAM] unsigned long 
  5368 ;; Registers used:
  5369 ;;		wreg, status,2, status,0
  5370 ;; Tracked objects:
  5371 ;;		On entry : 0/0
  5372 ;;		On exit  : 0/0
  5373 ;;		Unchanged: 0/0
  5374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5375 ;;      Params:         8       0       0       0       0       0       0       0       0
  5376 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5377 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5378 ;;      Totals:        17       0       0       0       0       0       0       0       0
  5379 ;;Total ram usage:       17 bytes
  5380 ;; Hardware stack levels used:    1
  5381 ;; Hardware stack levels required when called:    1
  5382 ;; This function calls:
  5383 ;;		Nothing
  5384 ;; This function is called by:
  5385 ;;		_sprintf
  5386 ;; This function uses a non-reentrant model
  5387 ;;
  5388                           
  5389                           	psect	text16
  5390  0024DA                     __ptext16:
  5391                           	opt stack 0
  5392  0024DA                     __tdiv_to_l_:
  5393                           	opt stack 27
  5394                           
  5395                           ;incstack = 0
  5396  0024DA  C011  F017         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  5397  0024DE  6A18               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  5398  0024E0  6A19               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  5399  0024E2  3410               	rlcf	__tdiv_to_l_@f1+1,w,c
  5400  0024E4  3617               	rlcf	??__tdiv_to_l_& (0+255),f,c
  5401  0024E6  E301               	bnc	u3181
  5402  0024E8  8018               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  5403  0024EA                     u3181:
  5404  0024EA  5017               	movf	??__tdiv_to_l_,w,c
  5405  0024EC  6E1F               	movwf	__tdiv_to_l_@exp1,c
  5406  0024EE  501F               	movf	__tdiv_to_l_@exp1,w,c
  5407  0024F0  A4D8               	btfss	status,2,c
  5408  0024F2  D009               	goto	l3225
  5409  0024F4  0E00               	movlw	0
  5410  0024F6  6E0F               	movwf	?__tdiv_to_l_,c
  5411  0024F8  0E00               	movlw	0
  5412  0024FA  6E10               	movwf	?__tdiv_to_l_+1,c
  5413  0024FC  0E00               	movlw	0
  5414  0024FE  6E11               	movwf	?__tdiv_to_l_+2,c
  5415  002500  0E00               	movlw	0
  5416  002502  6E12               	movwf	?__tdiv_to_l_+3,c
  5417  002504  0012               	return	
  5418  002506                     l3225:
  5419  002506  C015  F017         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  5420  00250A  6A18               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  5421  00250C  6A19               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  5422  00250E  3414               	rlcf	__tdiv_to_l_@f2+1,w,c
  5423  002510  3617               	rlcf	??__tdiv_to_l_& (0+255),f,c
  5424  002512  E301               	bnc	u3201
  5425  002514  8018               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  5426  002516                     u3201:
  5427  002516  5017               	movf	??__tdiv_to_l_,w,c
  5428  002518  6E1E               	movwf	__tdiv_to_l_@cntr,c
  5429  00251A  501E               	movf	__tdiv_to_l_@cntr,w,c
  5430  00251C  A4D8               	btfss	status,2,c
  5431  00251E  D009               	goto	l3231
  5432  002520  0E00               	movlw	0
  5433  002522  6E0F               	movwf	?__tdiv_to_l_,c
  5434  002524  0E00               	movlw	0
  5435  002526  6E10               	movwf	?__tdiv_to_l_+1,c
  5436  002528  0E00               	movlw	0
  5437  00252A  6E11               	movwf	?__tdiv_to_l_+2,c
  5438  00252C  0E00               	movlw	0
  5439  00252E  6E12               	movwf	?__tdiv_to_l_+3,c
  5440  002530  0012               	return	
  5441  002532                     l3231:
  5442  002532  8E10               	bsf	__tdiv_to_l_@f1+1,7,c
  5443  002534  0EFF               	movlw	255
  5444  002536  160F               	andwf	__tdiv_to_l_@f1,f,c
  5445  002538  0EFF               	movlw	255
  5446  00253A  1610               	andwf	__tdiv_to_l_@f1+1,f,c
  5447  00253C  0E00               	movlw	0
  5448  00253E  1611               	andwf	__tdiv_to_l_@f1+2,f,c
  5449  002540  8E14               	bsf	__tdiv_to_l_@f2+1,7,c
  5450  002542  0EFF               	movlw	255
  5451  002544  1613               	andwf	__tdiv_to_l_@f2,f,c
  5452  002546  0EFF               	movlw	255
  5453  002548  1614               	andwf	__tdiv_to_l_@f2+1,f,c
  5454  00254A  0E00               	movlw	0
  5455  00254C  1615               	andwf	__tdiv_to_l_@f2+2,f,c
  5456  00254E  0E00               	movlw	0
  5457  002550  6E1A               	movwf	__tdiv_to_l_@quot,c
  5458  002552  0E00               	movlw	0
  5459  002554  6E1B               	movwf	__tdiv_to_l_@quot+1,c
  5460  002556  0E00               	movlw	0
  5461  002558  6E1C               	movwf	__tdiv_to_l_@quot+2,c
  5462  00255A  0E00               	movlw	0
  5463  00255C  6E1D               	movwf	__tdiv_to_l_@quot+3,c
  5464  00255E  0E7F               	movlw	127
  5465  002560  5E1F               	subwf	__tdiv_to_l_@exp1,f,c
  5466  002562  501E               	movf	__tdiv_to_l_@cntr,w,c
  5467  002564  0F98               	addlw	152
  5468  002566  5E1F               	subwf	__tdiv_to_l_@exp1,f,c
  5469  002568  0E18               	movlw	24
  5470  00256A  6E1E               	movwf	__tdiv_to_l_@cntr,c
  5471  00256C                     l617:
  5472  00256C  90D8               	bcf	status,0,c
  5473  00256E  361A               	rlcf	__tdiv_to_l_@quot,f,c
  5474  002570  361B               	rlcf	__tdiv_to_l_@quot+1,f,c
  5475  002572  361C               	rlcf	__tdiv_to_l_@quot+2,f,c
  5476  002574  361D               	rlcf	__tdiv_to_l_@quot+3,f,c
  5477  002576  5013               	movf	__tdiv_to_l_@f2,w,c
  5478  002578  5C0F               	subwf	__tdiv_to_l_@f1,w,c
  5479  00257A  5014               	movf	__tdiv_to_l_@f2+1,w,c
  5480  00257C  5810               	subwfb	__tdiv_to_l_@f1+1,w,c
  5481  00257E  5015               	movf	__tdiv_to_l_@f2+2,w,c
  5482  002580  5811               	subwfb	__tdiv_to_l_@f1+2,w,c
  5483  002582  A0D8               	btfss	status,0,c
  5484  002584  D007               	goto	l618
  5485  002586  5013               	movf	__tdiv_to_l_@f2,w,c
  5486  002588  5E0F               	subwf	__tdiv_to_l_@f1,f,c
  5487  00258A  5014               	movf	__tdiv_to_l_@f2+1,w,c
  5488  00258C  5A10               	subwfb	__tdiv_to_l_@f1+1,f,c
  5489  00258E  5015               	movf	__tdiv_to_l_@f2+2,w,c
  5490  002590  5A11               	subwfb	__tdiv_to_l_@f1+2,f,c
  5491  002592  801A               	bsf	__tdiv_to_l_@quot,0,c
  5492  002594                     l618:
  5493  002594  90D8               	bcf	status,0,c
  5494  002596  360F               	rlcf	__tdiv_to_l_@f1,f,c
  5495  002598  3610               	rlcf	__tdiv_to_l_@f1+1,f,c
  5496  00259A  3611               	rlcf	__tdiv_to_l_@f1+2,f,c
  5497  00259C  2E1E               	decfsz	__tdiv_to_l_@cntr,f,c
  5498  00259E  D7E6               	goto	l617
  5499  0025A0  AE1F               	btfss	__tdiv_to_l_@exp1,7,c
  5500  0025A2  D016               	goto	l3265
  5501  0025A4  501F               	movf	__tdiv_to_l_@exp1,w,c
  5502  0025A6  0A80               	xorlw	128
  5503  0025A8  0F97               	addlw	151
  5504  0025AA  B0D8               	btfsc	status,0,c
  5505  0025AC  D009               	goto	l3261
  5506  0025AE  0E00               	movlw	0
  5507  0025B0  6E0F               	movwf	?__tdiv_to_l_,c
  5508  0025B2  0E00               	movlw	0
  5509  0025B4  6E10               	movwf	?__tdiv_to_l_+1,c
  5510  0025B6  0E00               	movlw	0
  5511  0025B8  6E11               	movwf	?__tdiv_to_l_+2,c
  5512  0025BA  0E00               	movlw	0
  5513  0025BC  6E12               	movwf	?__tdiv_to_l_+3,c
  5514  0025BE  0012               	return	
  5515  0025C0                     l3261:
  5516  0025C0  90D8               	bcf	status,0,c
  5517  0025C2  321D               	rrcf	__tdiv_to_l_@quot+3,f,c
  5518  0025C4  321C               	rrcf	__tdiv_to_l_@quot+2,f,c
  5519  0025C6  321B               	rrcf	__tdiv_to_l_@quot+1,f,c
  5520  0025C8  321A               	rrcf	__tdiv_to_l_@quot,f,c
  5521  0025CA  3E1F               	incfsz	__tdiv_to_l_@exp1,f,c
  5522  0025CC  D7F9               	goto	l3261
  5523  0025CE  D015               	goto	l624
  5524  0025D0                     l3265:
  5525  0025D0  0E17               	movlw	23
  5526  0025D2  641F               	cpfsgt	__tdiv_to_l_@exp1,c
  5527  0025D4  D00F               	goto	l3273
  5528  0025D6  0E00               	movlw	0
  5529  0025D8  6E0F               	movwf	?__tdiv_to_l_,c
  5530  0025DA  0E00               	movlw	0
  5531  0025DC  6E10               	movwf	?__tdiv_to_l_+1,c
  5532  0025DE  0E00               	movlw	0
  5533  0025E0  6E11               	movwf	?__tdiv_to_l_+2,c
  5534  0025E2  0E00               	movlw	0
  5535  0025E4  6E12               	movwf	?__tdiv_to_l_+3,c
  5536  0025E6  0012               	return	
  5537  0025E8                     l3271:
  5538  0025E8  90D8               	bcf	status,0,c
  5539  0025EA  361A               	rlcf	__tdiv_to_l_@quot,f,c
  5540  0025EC  361B               	rlcf	__tdiv_to_l_@quot+1,f,c
  5541  0025EE  361C               	rlcf	__tdiv_to_l_@quot+2,f,c
  5542  0025F0  361D               	rlcf	__tdiv_to_l_@quot+3,f,c
  5543  0025F2  061F               	decf	__tdiv_to_l_@exp1,f,c
  5544  0025F4                     l3273:
  5545  0025F4  501F               	movf	__tdiv_to_l_@exp1,w,c
  5546  0025F6  A4D8               	btfss	status,2,c
  5547  0025F8  D7F7               	goto	l3271
  5548  0025FA                     l624:
  5549  0025FA  C01A  F00F         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  5550  0025FE  C01B  F010         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  5551  002602  C01C  F011         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  5552  002606  C01D  F012         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  5553  00260A  0012               	return		;funcret
  5554  00260C                     __end_of__tdiv_to_l_:
  5555                           	opt stack 0
  5556                           tblptru	equ	0xFF8
  5557                           tblptrh	equ	0xFF7
  5558                           tblptrl	equ	0xFF6
  5559                           tablat	equ	0xFF5
  5560                           prodh	equ	0xFF4
  5561                           prodl	equ	0xFF3
  5562                           intcon	equ	0xFF2
  5563                           postinc0	equ	0xFEE
  5564                           wreg	equ	0xFE8
  5565                           indf1	equ	0xFE7
  5566                           postdec1	equ	0xFE5
  5567                           plusw1	equ	0xFE3
  5568                           fsr1h	equ	0xFE2
  5569                           fsr1l	equ	0xFE1
  5570                           indf2	equ	0xFDF
  5571                           postinc2	equ	0xFDE
  5572                           plusw2	equ	0xFDB
  5573                           fsr2h	equ	0xFDA
  5574                           fsr2l	equ	0xFD9
  5575                           status	equ	0xFD8
  5576                           
  5577 ;; *************** function __div_to_l_ *****************
  5578 ;; Defined at:
  5579 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fldivl.c"
  5580 ;; Parameters:    Size  Location     Type
  5581 ;;  f1              4   14[COMRAM] unsigned long 
  5582 ;;  f2              4   18[COMRAM] unsigned long 
  5583 ;; Auto vars:     Size  Location     Type
  5584 ;;  quot            4   22[COMRAM] unsigned long 
  5585 ;;  exp1            1   27[COMRAM] unsigned char 
  5586 ;;  cntr            1   26[COMRAM] unsigned char 
  5587 ;; Return value:  Size  Location     Type
  5588 ;;                  4   14[COMRAM] unsigned long 
  5589 ;; Registers used:
  5590 ;;		wreg, status,2, status,0
  5591 ;; Tracked objects:
  5592 ;;		On entry : 0/0
  5593 ;;		On exit  : 0/0
  5594 ;;		Unchanged: 0/0
  5595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5596 ;;      Params:         8       0       0       0       0       0       0       0       0
  5597 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5598 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5599 ;;      Totals:        14       0       0       0       0       0       0       0       0
  5600 ;;Total ram usage:       14 bytes
  5601 ;; Hardware stack levels used:    1
  5602 ;; Hardware stack levels required when called:    1
  5603 ;; This function calls:
  5604 ;;		Nothing
  5605 ;; This function is called by:
  5606 ;;		_sprintf
  5607 ;; This function uses a non-reentrant model
  5608 ;;
  5609                           
  5610                           	psect	text17
  5611  00260C                     __ptext17:
  5612                           	opt stack 0
  5613  00260C                     __div_to_l_:
  5614                           	opt stack 27
  5615                           
  5616                           ;incstack = 0
  5617  00260C  3411               	rlcf	__div_to_l_@f1+2,w,c
  5618  00260E  3412               	rlcf	__div_to_l_@f1+3,w,c
  5619  002610  6E1C               	movwf	__div_to_l_@exp1,c
  5620  002612  501C               	movf	__div_to_l_@exp1,w,c
  5621  002614  A4D8               	btfss	status,2,c
  5622  002616  D009               	goto	l3281
  5623  002618  0E00               	movlw	0
  5624  00261A  6E0F               	movwf	?__div_to_l_,c
  5625  00261C  0E00               	movlw	0
  5626  00261E  6E10               	movwf	?__div_to_l_+1,c
  5627  002620  0E00               	movlw	0
  5628  002622  6E11               	movwf	?__div_to_l_+2,c
  5629  002624  0E00               	movlw	0
  5630  002626  6E12               	movwf	?__div_to_l_+3,c
  5631  002628  0012               	return	
  5632  00262A                     l3281:
  5633  00262A  3415               	rlcf	__div_to_l_@f2+2,w,c
  5634  00262C  3416               	rlcf	__div_to_l_@f2+3,w,c
  5635  00262E  6E1B               	movwf	__div_to_l_@cntr,c
  5636  002630  501B               	movf	__div_to_l_@cntr,w,c
  5637  002632  A4D8               	btfss	status,2,c
  5638  002634  D009               	goto	l3287
  5639  002636  0E00               	movlw	0
  5640  002638  6E0F               	movwf	?__div_to_l_,c
  5641  00263A  0E00               	movlw	0
  5642  00263C  6E10               	movwf	?__div_to_l_+1,c
  5643  00263E  0E00               	movlw	0
  5644  002640  6E11               	movwf	?__div_to_l_+2,c
  5645  002642  0E00               	movlw	0
  5646  002644  6E12               	movwf	?__div_to_l_+3,c
  5647  002646  0012               	return	
  5648  002648                     l3287:
  5649  002648  8E11               	bsf	__div_to_l_@f1+2,7,c
  5650  00264A  0EFF               	movlw	255
  5651  00264C  160F               	andwf	__div_to_l_@f1,f,c
  5652  00264E  0EFF               	movlw	255
  5653  002650  1610               	andwf	__div_to_l_@f1+1,f,c
  5654  002652  0EFF               	movlw	255
  5655  002654  1611               	andwf	__div_to_l_@f1+2,f,c
  5656  002656  0E00               	movlw	0
  5657  002658  1612               	andwf	__div_to_l_@f1+3,f,c
  5658  00265A  8E15               	bsf	__div_to_l_@f2+2,7,c
  5659  00265C  0EFF               	movlw	255
  5660  00265E  1613               	andwf	__div_to_l_@f2,f,c
  5661  002660  0EFF               	movlw	255
  5662  002662  1614               	andwf	__div_to_l_@f2+1,f,c
  5663  002664  0EFF               	movlw	255
  5664  002666  1615               	andwf	__div_to_l_@f2+2,f,c
  5665  002668  0E00               	movlw	0
  5666  00266A  1616               	andwf	__div_to_l_@f2+3,f,c
  5667  00266C  0E00               	movlw	0
  5668  00266E  6E17               	movwf	__div_to_l_@quot,c
  5669  002670  0E00               	movlw	0
  5670  002672  6E18               	movwf	__div_to_l_@quot+1,c
  5671  002674  0E00               	movlw	0
  5672  002676  6E19               	movwf	__div_to_l_@quot+2,c
  5673  002678  0E00               	movlw	0
  5674  00267A  6E1A               	movwf	__div_to_l_@quot+3,c
  5675  00267C  0E7F               	movlw	127
  5676  00267E  5E1C               	subwf	__div_to_l_@exp1,f,c
  5677  002680  501B               	movf	__div_to_l_@cntr,w,c
  5678  002682  0FA0               	addlw	160
  5679  002684  5E1C               	subwf	__div_to_l_@exp1,f,c
  5680  002686  0E20               	movlw	32
  5681  002688  6E1B               	movwf	__div_to_l_@cntr,c
  5682  00268A                     l3301:
  5683  00268A  90D8               	bcf	status,0,c
  5684  00268C  3617               	rlcf	__div_to_l_@quot,f,c
  5685  00268E  3618               	rlcf	__div_to_l_@quot+1,f,c
  5686  002690  3619               	rlcf	__div_to_l_@quot+2,f,c
  5687  002692  361A               	rlcf	__div_to_l_@quot+3,f,c
  5688  002694  5013               	movf	__div_to_l_@f2,w,c
  5689  002696  5C0F               	subwf	__div_to_l_@f1,w,c
  5690  002698  5014               	movf	__div_to_l_@f2+1,w,c
  5691  00269A  5810               	subwfb	__div_to_l_@f1+1,w,c
  5692  00269C  5015               	movf	__div_to_l_@f2+2,w,c
  5693  00269E  5811               	subwfb	__div_to_l_@f1+2,w,c
  5694  0026A0  5016               	movf	__div_to_l_@f2+3,w,c
  5695  0026A2  5812               	subwfb	__div_to_l_@f1+3,w,c
  5696  0026A4  A0D8               	btfss	status,0,c
  5697  0026A6  D009               	goto	l3309
  5698  0026A8  5013               	movf	__div_to_l_@f2,w,c
  5699  0026AA  5E0F               	subwf	__div_to_l_@f1,f,c
  5700  0026AC  5014               	movf	__div_to_l_@f2+1,w,c
  5701  0026AE  5A10               	subwfb	__div_to_l_@f1+1,f,c
  5702  0026B0  5015               	movf	__div_to_l_@f2+2,w,c
  5703  0026B2  5A11               	subwfb	__div_to_l_@f1+2,f,c
  5704  0026B4  5016               	movf	__div_to_l_@f2+3,w,c
  5705  0026B6  5A12               	subwfb	__div_to_l_@f1+3,f,c
  5706  0026B8  8017               	bsf	__div_to_l_@quot,0,c
  5707  0026BA                     l3309:
  5708  0026BA  90D8               	bcf	status,0,c
  5709  0026BC  360F               	rlcf	__div_to_l_@f1,f,c
  5710  0026BE  3610               	rlcf	__div_to_l_@f1+1,f,c
  5711  0026C0  3611               	rlcf	__div_to_l_@f1+2,f,c
  5712  0026C2  3612               	rlcf	__div_to_l_@f1+3,f,c
  5713  0026C4  2E1B               	decfsz	__div_to_l_@cntr,f,c
  5714  0026C6  D7E1               	goto	l3301
  5715  0026C8  AE1C               	btfss	__div_to_l_@exp1,7,c
  5716  0026CA  D016               	goto	l3325
  5717  0026CC  501C               	movf	__div_to_l_@exp1,w,c
  5718  0026CE  0A80               	xorlw	128
  5719  0026D0  0F9F               	addlw	159
  5720  0026D2  B0D8               	btfsc	status,0,c
  5721  0026D4  D009               	goto	l3321
  5722  0026D6  0E00               	movlw	0
  5723  0026D8  6E0F               	movwf	?__div_to_l_,c
  5724  0026DA  0E00               	movlw	0
  5725  0026DC  6E10               	movwf	?__div_to_l_+1,c
  5726  0026DE  0E00               	movlw	0
  5727  0026E0  6E11               	movwf	?__div_to_l_+2,c
  5728  0026E2  0E00               	movlw	0
  5729  0026E4  6E12               	movwf	?__div_to_l_+3,c
  5730  0026E6  0012               	return	
  5731  0026E8                     l3321:
  5732  0026E8  90D8               	bcf	status,0,c
  5733  0026EA  321A               	rrcf	__div_to_l_@quot+3,f,c
  5734  0026EC  3219               	rrcf	__div_to_l_@quot+2,f,c
  5735  0026EE  3218               	rrcf	__div_to_l_@quot+1,f,c
  5736  0026F0  3217               	rrcf	__div_to_l_@quot,f,c
  5737  0026F2  3E1C               	incfsz	__div_to_l_@exp1,f,c
  5738  0026F4  D7F9               	goto	l3321
  5739  0026F6  D015               	goto	l520
  5740  0026F8                     l3325:
  5741  0026F8  0E1F               	movlw	31
  5742  0026FA  641C               	cpfsgt	__div_to_l_@exp1,c
  5743  0026FC  D00F               	goto	l3333
  5744  0026FE  0E00               	movlw	0
  5745  002700  6E0F               	movwf	?__div_to_l_,c
  5746  002702  0E00               	movlw	0
  5747  002704  6E10               	movwf	?__div_to_l_+1,c
  5748  002706  0E00               	movlw	0
  5749  002708  6E11               	movwf	?__div_to_l_+2,c
  5750  00270A  0E00               	movlw	0
  5751  00270C  6E12               	movwf	?__div_to_l_+3,c
  5752  00270E  0012               	return	
  5753  002710                     l3331:
  5754  002710  90D8               	bcf	status,0,c
  5755  002712  3617               	rlcf	__div_to_l_@quot,f,c
  5756  002714  3618               	rlcf	__div_to_l_@quot+1,f,c
  5757  002716  3619               	rlcf	__div_to_l_@quot+2,f,c
  5758  002718  361A               	rlcf	__div_to_l_@quot+3,f,c
  5759  00271A  061C               	decf	__div_to_l_@exp1,f,c
  5760  00271C                     l3333:
  5761  00271C  501C               	movf	__div_to_l_@exp1,w,c
  5762  00271E  A4D8               	btfss	status,2,c
  5763  002720  D7F7               	goto	l3331
  5764  002722                     l520:
  5765  002722  C017  F00F         	movff	__div_to_l_@quot,?__div_to_l_
  5766  002726  C018  F010         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  5767  00272A  C019  F011         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  5768  00272E  C01A  F012         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  5769  002732  0012               	return		;funcret
  5770  002734                     __end_of__div_to_l_:
  5771                           	opt stack 0
  5772                           tblptru	equ	0xFF8
  5773                           tblptrh	equ	0xFF7
  5774                           tblptrl	equ	0xFF6
  5775                           tablat	equ	0xFF5
  5776                           prodh	equ	0xFF4
  5777                           prodl	equ	0xFF3
  5778                           intcon	equ	0xFF2
  5779                           postinc0	equ	0xFEE
  5780                           wreg	equ	0xFE8
  5781                           indf1	equ	0xFE7
  5782                           postdec1	equ	0xFE5
  5783                           plusw1	equ	0xFE3
  5784                           fsr1h	equ	0xFE2
  5785                           fsr1l	equ	0xFE1
  5786                           indf2	equ	0xFDF
  5787                           postinc2	equ	0xFDE
  5788                           plusw2	equ	0xFDB
  5789                           fsr2h	equ	0xFDA
  5790                           fsr2l	equ	0xFD9
  5791                           status	equ	0xFD8
  5792                           
  5793 ;; *************** function ___llmod *****************
  5794 ;; Defined at:
  5795 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\llmod.c"
  5796 ;; Parameters:    Size  Location     Type
  5797 ;;  dividend        4   14[COMRAM] unsigned long 
  5798 ;;  divisor         4   18[COMRAM] unsigned long 
  5799 ;; Auto vars:     Size  Location     Type
  5800 ;;  counter         1   22[COMRAM] unsigned char 
  5801 ;; Return value:  Size  Location     Type
  5802 ;;                  4   14[COMRAM] unsigned long 
  5803 ;; Registers used:
  5804 ;;		wreg, status,2, status,0
  5805 ;; Tracked objects:
  5806 ;;		On entry : 0/0
  5807 ;;		On exit  : 0/0
  5808 ;;		Unchanged: 0/0
  5809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5810 ;;      Params:         8       0       0       0       0       0       0       0       0
  5811 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5812 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5813 ;;      Totals:         9       0       0       0       0       0       0       0       0
  5814 ;;Total ram usage:        9 bytes
  5815 ;; Hardware stack levels used:    1
  5816 ;; Hardware stack levels required when called:    1
  5817 ;; This function calls:
  5818 ;;		Nothing
  5819 ;; This function is called by:
  5820 ;;		_sprintf
  5821 ;; This function uses a non-reentrant model
  5822 ;;
  5823                           
  5824                           	psect	text18
  5825  002F2C                     __ptext18:
  5826                           	opt stack 0
  5827  002F2C                     ___llmod:
  5828                           	opt stack 27
  5829                           
  5830                           ;incstack = 0
  5831  002F2C  5013               	movf	___llmod@divisor,w,c
  5832  002F2E  1014               	iorwf	___llmod@divisor+1,w,c
  5833  002F30  1015               	iorwf	___llmod@divisor+2,w,c
  5834  002F32  1016               	iorwf	___llmod@divisor+3,w,c
  5835  002F34  B4D8               	btfsc	status,2,c
  5836  002F36  D024               	goto	l723
  5837  002F38  0E01               	movlw	1
  5838  002F3A  6E17               	movwf	___llmod@counter,c
  5839  002F3C  D006               	goto	l3579
  5840  002F3E                     l3577:
  5841  002F3E  90D8               	bcf	status,0,c
  5842  002F40  3613               	rlcf	___llmod@divisor,f,c
  5843  002F42  3614               	rlcf	___llmod@divisor+1,f,c
  5844  002F44  3615               	rlcf	___llmod@divisor+2,f,c
  5845  002F46  3616               	rlcf	___llmod@divisor+3,f,c
  5846  002F48  2A17               	incf	___llmod@counter,f,c
  5847  002F4A                     l3579:
  5848  002F4A  AE16               	btfss	___llmod@divisor+3,7,c
  5849  002F4C  D7F8               	goto	l3577
  5850  002F4E                     l3581:
  5851  002F4E  5013               	movf	___llmod@divisor,w,c
  5852  002F50  5C0F               	subwf	___llmod@dividend,w,c
  5853  002F52  5014               	movf	___llmod@divisor+1,w,c
  5854  002F54  5810               	subwfb	___llmod@dividend+1,w,c
  5855  002F56  5015               	movf	___llmod@divisor+2,w,c
  5856  002F58  5811               	subwfb	___llmod@dividend+2,w,c
  5857  002F5A  5016               	movf	___llmod@divisor+3,w,c
  5858  002F5C  5812               	subwfb	___llmod@dividend+3,w,c
  5859  002F5E  A0D8               	btfss	status,0,c
  5860  002F60  D008               	goto	l3585
  5861  002F62  5013               	movf	___llmod@divisor,w,c
  5862  002F64  5E0F               	subwf	___llmod@dividend,f,c
  5863  002F66  5014               	movf	___llmod@divisor+1,w,c
  5864  002F68  5A10               	subwfb	___llmod@dividend+1,f,c
  5865  002F6A  5015               	movf	___llmod@divisor+2,w,c
  5866  002F6C  5A11               	subwfb	___llmod@dividend+2,f,c
  5867  002F6E  5016               	movf	___llmod@divisor+3,w,c
  5868  002F70  5A12               	subwfb	___llmod@dividend+3,f,c
  5869  002F72                     l3585:
  5870  002F72  90D8               	bcf	status,0,c
  5871  002F74  3216               	rrcf	___llmod@divisor+3,f,c
  5872  002F76  3215               	rrcf	___llmod@divisor+2,f,c
  5873  002F78  3214               	rrcf	___llmod@divisor+1,f,c
  5874  002F7A  3213               	rrcf	___llmod@divisor,f,c
  5875  002F7C  2E17               	decfsz	___llmod@counter,f,c
  5876  002F7E  D7E7               	goto	l3581
  5877  002F80                     l723:
  5878  002F80  C00F  F00F         	movff	___llmod@dividend,?___llmod
  5879  002F84  C010  F010         	movff	___llmod@dividend+1,?___llmod+1
  5880  002F88  C011  F011         	movff	___llmod@dividend+2,?___llmod+2
  5881  002F8C  C012  F012         	movff	___llmod@dividend+3,?___llmod+3
  5882  002F90  0012               	return		;funcret
  5883  002F92                     __end_of___llmod:
  5884                           	opt stack 0
  5885                           tblptru	equ	0xFF8
  5886                           tblptrh	equ	0xFF7
  5887                           tblptrl	equ	0xFF6
  5888                           tablat	equ	0xFF5
  5889                           prodh	equ	0xFF4
  5890                           prodl	equ	0xFF3
  5891                           intcon	equ	0xFF2
  5892                           postinc0	equ	0xFEE
  5893                           wreg	equ	0xFE8
  5894                           indf1	equ	0xFE7
  5895                           postdec1	equ	0xFE5
  5896                           plusw1	equ	0xFE3
  5897                           fsr1h	equ	0xFE2
  5898                           fsr1l	equ	0xFE1
  5899                           indf2	equ	0xFDF
  5900                           postinc2	equ	0xFDE
  5901                           plusw2	equ	0xFDB
  5902                           fsr2h	equ	0xFDA
  5903                           fsr2l	equ	0xFD9
  5904                           status	equ	0xFD8
  5905                           
  5906 ;; *************** function ___lldiv *****************
  5907 ;; Defined at:
  5908 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
  5909 ;; Parameters:    Size  Location     Type
  5910 ;;  dividend        4   14[COMRAM] unsigned long 
  5911 ;;  divisor         4   18[COMRAM] unsigned long 
  5912 ;; Auto vars:     Size  Location     Type
  5913 ;;  quotient        4   22[COMRAM] unsigned long 
  5914 ;;  counter         1   26[COMRAM] unsigned char 
  5915 ;; Return value:  Size  Location     Type
  5916 ;;                  4   14[COMRAM] unsigned long 
  5917 ;; Registers used:
  5918 ;;		wreg, status,2, status,0
  5919 ;; Tracked objects:
  5920 ;;		On entry : 0/0
  5921 ;;		On exit  : 0/0
  5922 ;;		Unchanged: 0/0
  5923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5924 ;;      Params:         8       0       0       0       0       0       0       0       0
  5925 ;;      Locals:         5       0       0       0       0       0       0       0       0
  5926 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5927 ;;      Totals:        13       0       0       0       0       0       0       0       0
  5928 ;;Total ram usage:       13 bytes
  5929 ;; Hardware stack levels used:    1
  5930 ;; Hardware stack levels required when called:    1
  5931 ;; This function calls:
  5932 ;;		Nothing
  5933 ;; This function is called by:
  5934 ;;		_sprintf
  5935 ;; This function uses a non-reentrant model
  5936 ;;
  5937                           
  5938                           	psect	text19
  5939  002DCA                     __ptext19:
  5940                           	opt stack 0
  5941  002DCA                     ___lldiv:
  5942                           	opt stack 27
  5943                           
  5944                           ;incstack = 0
  5945  002DCA  0E00               	movlw	0
  5946  002DCC  6E17               	movwf	___lldiv@quotient,c
  5947  002DCE  0E00               	movlw	0
  5948  002DD0  6E18               	movwf	___lldiv@quotient+1,c
  5949  002DD2  0E00               	movlw	0
  5950  002DD4  6E19               	movwf	___lldiv@quotient+2,c
  5951  002DD6  0E00               	movlw	0
  5952  002DD8  6E1A               	movwf	___lldiv@quotient+3,c
  5953  002DDA  5013               	movf	___lldiv@divisor,w,c
  5954  002DDC  1014               	iorwf	___lldiv@divisor+1,w,c
  5955  002DDE  1015               	iorwf	___lldiv@divisor+2,w,c
  5956  002DE0  1016               	iorwf	___lldiv@divisor+3,w,c
  5957  002DE2  B4D8               	btfsc	status,2,c
  5958  002DE4  D02A               	goto	l713
  5959  002DE6  0E01               	movlw	1
  5960  002DE8  6E1B               	movwf	___lldiv@counter,c
  5961  002DEA  D006               	goto	l3559
  5962  002DEC                     l3557:
  5963  002DEC  90D8               	bcf	status,0,c
  5964  002DEE  3613               	rlcf	___lldiv@divisor,f,c
  5965  002DF0  3614               	rlcf	___lldiv@divisor+1,f,c
  5966  002DF2  3615               	rlcf	___lldiv@divisor+2,f,c
  5967  002DF4  3616               	rlcf	___lldiv@divisor+3,f,c
  5968  002DF6  2A1B               	incf	___lldiv@counter,f,c
  5969  002DF8                     l3559:
  5970  002DF8  AE16               	btfss	___lldiv@divisor+3,7,c
  5971  002DFA  D7F8               	goto	l3557
  5972  002DFC                     l3561:
  5973  002DFC  90D8               	bcf	status,0,c
  5974  002DFE  3617               	rlcf	___lldiv@quotient,f,c
  5975  002E00  3618               	rlcf	___lldiv@quotient+1,f,c
  5976  002E02  3619               	rlcf	___lldiv@quotient+2,f,c
  5977  002E04  361A               	rlcf	___lldiv@quotient+3,f,c
  5978  002E06  5013               	movf	___lldiv@divisor,w,c
  5979  002E08  5C0F               	subwf	___lldiv@dividend,w,c
  5980  002E0A  5014               	movf	___lldiv@divisor+1,w,c
  5981  002E0C  5810               	subwfb	___lldiv@dividend+1,w,c
  5982  002E0E  5015               	movf	___lldiv@divisor+2,w,c
  5983  002E10  5811               	subwfb	___lldiv@dividend+2,w,c
  5984  002E12  5016               	movf	___lldiv@divisor+3,w,c
  5985  002E14  5812               	subwfb	___lldiv@dividend+3,w,c
  5986  002E16  A0D8               	btfss	status,0,c
  5987  002E18  D009               	goto	l3569
  5988  002E1A  5013               	movf	___lldiv@divisor,w,c
  5989  002E1C  5E0F               	subwf	___lldiv@dividend,f,c
  5990  002E1E  5014               	movf	___lldiv@divisor+1,w,c
  5991  002E20  5A10               	subwfb	___lldiv@dividend+1,f,c
  5992  002E22  5015               	movf	___lldiv@divisor+2,w,c
  5993  002E24  5A11               	subwfb	___lldiv@dividend+2,f,c
  5994  002E26  5016               	movf	___lldiv@divisor+3,w,c
  5995  002E28  5A12               	subwfb	___lldiv@dividend+3,f,c
  5996  002E2A  8017               	bsf	___lldiv@quotient,0,c
  5997  002E2C                     l3569:
  5998  002E2C  90D8               	bcf	status,0,c
  5999  002E2E  3216               	rrcf	___lldiv@divisor+3,f,c
  6000  002E30  3215               	rrcf	___lldiv@divisor+2,f,c
  6001  002E32  3214               	rrcf	___lldiv@divisor+1,f,c
  6002  002E34  3213               	rrcf	___lldiv@divisor,f,c
  6003  002E36  2E1B               	decfsz	___lldiv@counter,f,c
  6004  002E38  D7E1               	goto	l3561
  6005  002E3A                     l713:
  6006  002E3A  C017  F00F         	movff	___lldiv@quotient,?___lldiv
  6007  002E3E  C018  F010         	movff	___lldiv@quotient+1,?___lldiv+1
  6008  002E42  C019  F011         	movff	___lldiv@quotient+2,?___lldiv+2
  6009  002E46  C01A  F012         	movff	___lldiv@quotient+3,?___lldiv+3
  6010  002E4A  0012               	return		;funcret
  6011  002E4C                     __end_of___lldiv:
  6012                           	opt stack 0
  6013                           tblptru	equ	0xFF8
  6014                           tblptrh	equ	0xFF7
  6015                           tblptrl	equ	0xFF6
  6016                           tablat	equ	0xFF5
  6017                           prodh	equ	0xFF4
  6018                           prodl	equ	0xFF3
  6019                           intcon	equ	0xFF2
  6020                           postinc0	equ	0xFEE
  6021                           wreg	equ	0xFE8
  6022                           indf1	equ	0xFE7
  6023                           postdec1	equ	0xFE5
  6024                           plusw1	equ	0xFE3
  6025                           fsr1h	equ	0xFE2
  6026                           fsr1l	equ	0xFE1
  6027                           indf2	equ	0xFDF
  6028                           postinc2	equ	0xFDE
  6029                           plusw2	equ	0xFDB
  6030                           fsr2h	equ	0xFDA
  6031                           fsr2l	equ	0xFD9
  6032                           status	equ	0xFD8
  6033                           
  6034 ;; *************** function ___fltol *****************
  6035 ;; Defined at:
  6036 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fltol.c"
  6037 ;; Parameters:    Size  Location     Type
  6038 ;;  f1              4   62[COMRAM] unsigned long 
  6039 ;; Auto vars:     Size  Location     Type
  6040 ;;  exp1            1    5[BANK0 ] unsigned char 
  6041 ;;  sign1           1    4[BANK0 ] unsigned char 
  6042 ;; Return value:  Size  Location     Type
  6043 ;;                  4   62[COMRAM] long 
  6044 ;; Registers used:
  6045 ;;		wreg, status,2, status,0
  6046 ;; Tracked objects:
  6047 ;;		On entry : 0/0
  6048 ;;		On exit  : 0/0
  6049 ;;		Unchanged: 0/0
  6050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6051 ;;      Params:         4       0       0       0       0       0       0       0       0
  6052 ;;      Locals:         0       2       0       0       0       0       0       0       0
  6053 ;;      Temps:          0       4       0       0       0       0       0       0       0
  6054 ;;      Totals:         4       6       0       0       0       0       0       0       0
  6055 ;;Total ram usage:       10 bytes
  6056 ;; Hardware stack levels used:    1
  6057 ;; Hardware stack levels required when called:    1
  6058 ;; This function calls:
  6059 ;;		Nothing
  6060 ;; This function is called by:
  6061 ;;		_sprintf
  6062 ;; This function uses a non-reentrant model
  6063 ;;
  6064                           
  6065                           	psect	text20
  6066  00296E                     __ptext20:
  6067                           	opt stack 0
  6068  00296E                     ___fltol:
  6069                           	opt stack 27
  6070                           
  6071                           ;incstack = 0
  6072  00296E  3441               	rlcf	___fltol@f1+2,w,c
  6073  002970  3442               	rlcf	___fltol@f1+3,w,c
  6074  002972  0100               	movlb	0	; () banked
  6075  002974  6F65               	movwf	___fltol@exp1& (0+255),b
  6076  002976  0100               	movlb	0	; () banked
  6077  002978  5165               	movf	___fltol@exp1& (0+255),w,b
  6078  00297A  A4D8               	btfss	status,2,c
  6079  00297C  D009               	goto	l4551
  6080                           
  6081                           ; BSR set to: 0
  6082  00297E  0E00               	movlw	0
  6083  002980  6E3F               	movwf	?___fltol,c
  6084  002982  0E00               	movlw	0
  6085  002984  6E40               	movwf	?___fltol+1,c
  6086  002986  0E00               	movlw	0
  6087  002988  6E41               	movwf	?___fltol+2,c
  6088  00298A  0E00               	movlw	0
  6089  00298C  6E42               	movwf	?___fltol+3,c
  6090                           
  6091                           ; BSR set to: 0
  6092  00298E  0012               	return	
  6093  002990                     l4551:
  6094                           
  6095                           ; BSR set to: 0
  6096  002990  C03F  F060         	movff	___fltol@f1,??___fltol
  6097  002994  C040  F061         	movff	___fltol@f1+1,??___fltol+1
  6098  002998  C041  F062         	movff	___fltol@f1+2,??___fltol+2
  6099  00299C  C042  F063         	movff	___fltol@f1+3,??___fltol+3
  6100  0029A0  0E20               	movlw	32
  6101  0029A2  D006               	goto	u5070
  6102  0029A4                     u5075:
  6103  0029A4  0100               	movlb	0	; () banked
  6104  0029A6  90D8               	bcf	status,0,c
  6105  0029A8  3363               	rrcf	(??___fltol+3)& (0+255),f,b
  6106  0029AA  3362               	rrcf	(??___fltol+2)& (0+255),f,b
  6107  0029AC  3361               	rrcf	(??___fltol+1)& (0+255),f,b
  6108  0029AE  3360               	rrcf	??___fltol& (0+255),f,b
  6109  0029B0                     u5070:
  6110  0029B0  2EE8               	decfsz	wreg,f,c
  6111  0029B2  D7F8               	goto	u5075
  6112  0029B4  0100               	movlb	0	; () banked
  6113  0029B6  5160               	movf	??___fltol& (0+255),w,b
  6114  0029B8  0100               	movlb	0	; () banked
  6115  0029BA  6F64               	movwf	___fltol@sign1& (0+255),b
  6116                           
  6117                           ; BSR set to: 0
  6118  0029BC  8E41               	bsf	___fltol@f1+2,7,c
  6119                           
  6120                           ; BSR set to: 0
  6121  0029BE  0EFF               	movlw	255
  6122  0029C0  163F               	andwf	___fltol@f1,f,c
  6123  0029C2  0EFF               	movlw	255
  6124  0029C4  1640               	andwf	___fltol@f1+1,f,c
  6125  0029C6  0EFF               	movlw	255
  6126  0029C8  1641               	andwf	___fltol@f1+2,f,c
  6127  0029CA  0E00               	movlw	0
  6128  0029CC  1642               	andwf	___fltol@f1+3,f,c
  6129                           
  6130                           ; BSR set to: 0
  6131  0029CE  0E96               	movlw	150
  6132  0029D0  0100               	movlb	0	; () banked
  6133  0029D2  5F65               	subwf	___fltol@exp1& (0+255),f,b
  6134                           
  6135                           ; BSR set to: 0
  6136  0029D4  0100               	movlb	0	; () banked
  6137  0029D6  AF65               	btfss	___fltol@exp1& (0+255),7,b
  6138  0029D8  D018               	goto	l4571
  6139                           
  6140                           ; BSR set to: 0
  6141  0029DA  0100               	movlb	0	; () banked
  6142  0029DC  5165               	movf	___fltol@exp1& (0+255),w,b
  6143  0029DE  0A80               	xorlw	128
  6144  0029E0  0F97               	addlw	151
  6145  0029E2  B0D8               	btfsc	status,0,c
  6146  0029E4  D009               	goto	l4567
  6147                           
  6148                           ; BSR set to: 0
  6149  0029E6  0E00               	movlw	0
  6150  0029E8  6E3F               	movwf	?___fltol,c
  6151  0029EA  0E00               	movlw	0
  6152  0029EC  6E40               	movwf	?___fltol+1,c
  6153  0029EE  0E00               	movlw	0
  6154  0029F0  6E41               	movwf	?___fltol+2,c
  6155  0029F2  0E00               	movlw	0
  6156  0029F4  6E42               	movwf	?___fltol+3,c
  6157                           
  6158                           ; BSR set to: 0
  6159  0029F6  0012               	return	
  6160  0029F8                     l4567:
  6161                           
  6162                           ; BSR set to: 0
  6163  0029F8  90D8               	bcf	status,0,c
  6164  0029FA  3242               	rrcf	___fltol@f1+3,f,c
  6165  0029FC  3241               	rrcf	___fltol@f1+2,f,c
  6166  0029FE  3240               	rrcf	___fltol@f1+1,f,c
  6167  002A00  323F               	rrcf	___fltol@f1,f,c
  6168                           
  6169                           ; BSR set to: 0
  6170  002A02  0100               	movlb	0	; () banked
  6171  002A04  3F65               	incfsz	___fltol@exp1& (0+255),f,b
  6172  002A06  D7F8               	goto	l4567
  6173                           
  6174                           ; BSR set to: 0
  6175  002A08  D019               	goto	l4581
  6176  002A0A                     l4571:
  6177                           
  6178                           ; BSR set to: 0
  6179  002A0A  0E1F               	movlw	31
  6180  002A0C  0100               	movlb	0	; () banked
  6181  002A0E  6565               	cpfsgt	___fltol@exp1& (0+255),b
  6182  002A10  D010               	goto	l4579
  6183                           
  6184                           ; BSR set to: 0
  6185  002A12  0E00               	movlw	0
  6186  002A14  6E3F               	movwf	?___fltol,c
  6187  002A16  0E00               	movlw	0
  6188  002A18  6E40               	movwf	?___fltol+1,c
  6189  002A1A  0E00               	movlw	0
  6190  002A1C  6E41               	movwf	?___fltol+2,c
  6191  002A1E  0E00               	movlw	0
  6192  002A20  6E42               	movwf	?___fltol+3,c
  6193                           
  6194                           ; BSR set to: 0
  6195  002A22  0012               	return	
  6196  002A24                     l4577:
  6197                           
  6198                           ; BSR set to: 0
  6199  002A24  90D8               	bcf	status,0,c
  6200  002A26  363F               	rlcf	___fltol@f1,f,c
  6201  002A28  3640               	rlcf	___fltol@f1+1,f,c
  6202  002A2A  3641               	rlcf	___fltol@f1+2,f,c
  6203  002A2C  3642               	rlcf	___fltol@f1+3,f,c
  6204  002A2E  0100               	movlb	0	; () banked
  6205  002A30  0765               	decf	___fltol@exp1& (0+255),f,b
  6206  002A32                     l4579:
  6207                           
  6208                           ; BSR set to: 0
  6209  002A32  0100               	movlb	0	; () banked
  6210  002A34  5165               	movf	___fltol@exp1& (0+255),w,b
  6211  002A36  0100               	movlb	0	; () banked
  6212  002A38  A4D8               	btfss	status,2,c
  6213  002A3A  D7F4               	goto	l4577
  6214  002A3C                     l4581:
  6215                           
  6216                           ; BSR set to: 0
  6217  002A3C  0100               	movlb	0	; () banked
  6218  002A3E  5164               	movf	___fltol@sign1& (0+255),w,b
  6219  002A40  0100               	movlb	0	; () banked
  6220  002A42  B4D8               	btfsc	status,2,c
  6221  002A44  D008               	goto	l4585
  6222                           
  6223                           ; BSR set to: 0
  6224  002A46  1E42               	comf	___fltol@f1+3,f,c
  6225  002A48  1E41               	comf	___fltol@f1+2,f,c
  6226  002A4A  1E40               	comf	___fltol@f1+1,f,c
  6227  002A4C  6C3F               	negf	___fltol@f1,c
  6228  002A4E  0E00               	movlw	0
  6229  002A50  2240               	addwfc	___fltol@f1+1,f,c
  6230  002A52  2241               	addwfc	___fltol@f1+2,f,c
  6231  002A54  2242               	addwfc	___fltol@f1+3,f,c
  6232  002A56                     l4585:
  6233                           
  6234                           ; BSR set to: 0
  6235  002A56  C03F  F03F         	movff	___fltol@f1,?___fltol
  6236  002A5A  C040  F040         	movff	___fltol@f1+1,?___fltol+1
  6237  002A5E  C041  F041         	movff	___fltol@f1+2,?___fltol+2
  6238  002A62  C042  F042         	movff	___fltol@f1+3,?___fltol+3
  6239  002A66  0012               	return	
  6240  002A68                     __end_of___fltol:
  6241                           	opt stack 0
  6242                           tblptru	equ	0xFF8
  6243                           tblptrh	equ	0xFF7
  6244                           tblptrl	equ	0xFF6
  6245                           tablat	equ	0xFF5
  6246                           prodh	equ	0xFF4
  6247                           prodl	equ	0xFF3
  6248                           intcon	equ	0xFF2
  6249                           postinc0	equ	0xFEE
  6250                           wreg	equ	0xFE8
  6251                           indf1	equ	0xFE7
  6252                           postdec1	equ	0xFE5
  6253                           plusw1	equ	0xFE3
  6254                           fsr1h	equ	0xFE2
  6255                           fsr1l	equ	0xFE1
  6256                           indf2	equ	0xFDF
  6257                           postinc2	equ	0xFDE
  6258                           plusw2	equ	0xFDB
  6259                           fsr2h	equ	0xFDA
  6260                           fsr2l	equ	0xFD9
  6261                           status	equ	0xFD8
  6262                           
  6263 ;; *************** function ___flsub *****************
  6264 ;; Defined at:
  6265 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
  6266 ;; Parameters:    Size  Location     Type
  6267 ;;  b               4   20[BANK0 ] long 
  6268 ;;  a               4   24[BANK0 ] long 
  6269 ;; Auto vars:     Size  Location     Type
  6270 ;;		None
  6271 ;; Return value:  Size  Location     Type
  6272 ;;                  4   20[BANK0 ] long 
  6273 ;; Registers used:
  6274 ;;		wreg, status,2, status,0, cstack
  6275 ;; Tracked objects:
  6276 ;;		On entry : 0/0
  6277 ;;		On exit  : 0/0
  6278 ;;		Unchanged: 0/0
  6279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6280 ;;      Params:         0       8       0       0       0       0       0       0       0
  6281 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6282 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6283 ;;      Totals:         0       8       0       0       0       0       0       0       0
  6284 ;;Total ram usage:        8 bytes
  6285 ;; Hardware stack levels used:    1
  6286 ;; Hardware stack levels required when called:    2
  6287 ;; This function calls:
  6288 ;;		___fladd
  6289 ;; This function is called by:
  6290 ;;		_sprintf
  6291 ;; This function uses a non-reentrant model
  6292 ;;
  6293                           
  6294                           	psect	text21
  6295  003044                     __ptext21:
  6296                           	opt stack 0
  6297  003044                     ___flsub:
  6298                           	opt stack 26
  6299                           
  6300                           ; BSR set to: 0
  6301                           ;incstack = 0
  6302  003044  0E00               	movlw	0
  6303  003046  0100               	movlb	0	; () banked
  6304  003048  1B78               	xorwf	___flsub@a& (0+255),f,b
  6305  00304A  0E00               	movlw	0
  6306  00304C  1B79               	xorwf	(___flsub@a+1)& (0+255),f,b
  6307  00304E  0E00               	movlw	0
  6308  003050  1B7A               	xorwf	(___flsub@a+2)& (0+255),f,b
  6309  003052  0E80               	movlw	128
  6310  003054  1B7B               	xorwf	(___flsub@a+3)& (0+255),f,b
  6311                           
  6312                           ; BSR set to: 0
  6313  003056  C074  F060         	movff	___flsub@b,___fladd@b
  6314  00305A  C075  F061         	movff	___flsub@b+1,___fladd@b+1
  6315  00305E  C076  F062         	movff	___flsub@b+2,___fladd@b+2
  6316  003062  C077  F063         	movff	___flsub@b+3,___fladd@b+3
  6317  003066  C078  F064         	movff	___flsub@a,___fladd@a
  6318  00306A  C079  F065         	movff	___flsub@a+1,___fladd@a+1
  6319  00306E  C07A  F066         	movff	___flsub@a+2,___fladd@a+2
  6320  003072  C07B  F067         	movff	___flsub@a+3,___fladd@a+3
  6321  003076  EC2D  F004         	call	___fladd	;wreg free
  6322  00307A  C060  F074         	movff	?___fladd,?___flsub
  6323  00307E  C061  F075         	movff	?___fladd+1,?___flsub+1
  6324  003082  C062  F076         	movff	?___fladd+2,?___flsub+2
  6325  003086  C063  F077         	movff	?___fladd+3,?___flsub+3
  6326  00308A  0012               	return	
  6327  00308C                     __end_of___flsub:
  6328                           	opt stack 0
  6329                           tblptru	equ	0xFF8
  6330                           tblptrh	equ	0xFF7
  6331                           tblptrl	equ	0xFF6
  6332                           tablat	equ	0xFF5
  6333                           prodh	equ	0xFF4
  6334                           prodl	equ	0xFF3
  6335                           intcon	equ	0xFF2
  6336                           postinc0	equ	0xFEE
  6337                           wreg	equ	0xFE8
  6338                           indf1	equ	0xFE7
  6339                           postdec1	equ	0xFE5
  6340                           plusw1	equ	0xFE3
  6341                           fsr1h	equ	0xFE2
  6342                           fsr1l	equ	0xFE1
  6343                           indf2	equ	0xFDF
  6344                           postinc2	equ	0xFDE
  6345                           plusw2	equ	0xFDB
  6346                           fsr2h	equ	0xFDA
  6347                           fsr2l	equ	0xFD9
  6348                           status	equ	0xFD8
  6349                           
  6350 ;; *************** function ___fladd *****************
  6351 ;; Defined at:
  6352 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
  6353 ;; Parameters:    Size  Location     Type
  6354 ;;  b               4    0[BANK0 ] long 
  6355 ;;  a               4    4[BANK0 ] long 
  6356 ;; Auto vars:     Size  Location     Type
  6357 ;;  grs             1   19[BANK0 ] unsigned char 
  6358 ;;  bexp            1   18[BANK0 ] unsigned char 
  6359 ;;  aexp            1   17[BANK0 ] unsigned char 
  6360 ;;  signs           1   16[BANK0 ] unsigned char 
  6361 ;; Return value:  Size  Location     Type
  6362 ;;                  4    0[BANK0 ] unsigned char 
  6363 ;; Registers used:
  6364 ;;		wreg, status,2, status,0
  6365 ;; Tracked objects:
  6366 ;;		On entry : 0/0
  6367 ;;		On exit  : 0/0
  6368 ;;		Unchanged: 0/0
  6369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6370 ;;      Params:         0       8       0       0       0       0       0       0       0
  6371 ;;      Locals:         0       4       0       0       0       0       0       0       0
  6372 ;;      Temps:          0       8       0       0       0       0       0       0       0
  6373 ;;      Totals:         0      20       0       0       0       0       0       0       0
  6374 ;;Total ram usage:       20 bytes
  6375 ;; Hardware stack levels used:    1
  6376 ;; Hardware stack levels required when called:    1
  6377 ;; This function calls:
  6378 ;;		Nothing
  6379 ;; This function is called by:
  6380 ;;		_scarica
  6381 ;;		_sprintf
  6382 ;;		___flsub
  6383 ;; This function uses a non-reentrant model
  6384 ;;
  6385                           
  6386                           	psect	text22
  6387  00085A                     __ptext22:
  6388                           	opt stack 0
  6389  00085A                     ___fladd:
  6390                           	opt stack 26
  6391                           
  6392                           ;incstack = 0
  6393  00085A  0100               	movlb	0	; () banked
  6394  00085C  5163               	movf	(___fladd@b+3)& (0+255),w,b
  6395  00085E  0B80               	andlw	128
  6396  000860  0100               	movlb	0	; () banked
  6397  000862  6F70               	movwf	___fladd@signs& (0+255),b
  6398  000864  0100               	movlb	0	; () banked
  6399  000866  5163               	movf	(___fladd@b+3)& (0+255),w,b
  6400  000868  2563               	addwf	(___fladd@b+3)& (0+255),w,b
  6401  00086A  0100               	movlb	0	; () banked
  6402  00086C  6F72               	movwf	___fladd@bexp& (0+255),b
  6403                           
  6404                           ; BSR set to: 0
  6405  00086E  0100               	movlb	0	; () banked
  6406  000870  AF62               	btfss	(___fladd@b+2)& (0+255),7,b
  6407  000872  D002               	goto	l4207
  6408                           
  6409                           ; BSR set to: 0
  6410  000874  0100               	movlb	0	; () banked
  6411  000876  8172               	bsf	___fladd@bexp& (0+255),0,b
  6412  000878                     l4207:
  6413                           
  6414                           ; BSR set to: 0
  6415  000878  0100               	movlb	0	; () banked
  6416  00087A  5172               	movf	___fladd@bexp& (0+255),w,b
  6417  00087C  0100               	movlb	0	; () banked
  6418  00087E  B4D8               	btfsc	status,2,c
  6419  000880  D012               	goto	l4217
  6420                           
  6421                           ; BSR set to: 0
  6422  000882  0100               	movlb	0	; () banked
  6423  000884  2972               	incf	___fladd@bexp& (0+255),w,b
  6424  000886  A4D8               	btfss	status,2,c
  6425  000888  D009               	goto	l4213
  6426                           
  6427                           ; BSR set to: 0
  6428  00088A  0E00               	movlw	0
  6429  00088C  0100               	movlb	0	; () banked
  6430  00088E  6F60               	movwf	___fladd@b& (0+255),b
  6431  000890  0E00               	movlw	0
  6432  000892  6F61               	movwf	(___fladd@b+1)& (0+255),b
  6433  000894  0E00               	movlw	0
  6434  000896  6F62               	movwf	(___fladd@b+2)& (0+255),b
  6435  000898  0E00               	movlw	0
  6436  00089A  6F63               	movwf	(___fladd@b+3)& (0+255),b
  6437  00089C                     l4213:
  6438                           
  6439                           ; BSR set to: 0
  6440  00089C  0100               	movlb	0	; () banked
  6441  00089E  8F62               	bsf	(___fladd@b+2)& (0+255),7,b
  6442                           
  6443                           ; BSR set to: 0
  6444  0008A0  0E00               	movlw	0
  6445  0008A2  0100               	movlb	0	; () banked
  6446  0008A4  D008               	goto	L7
  6447  0008A6                     l4217:
  6448                           
  6449                           ; BSR set to: 0
  6450  0008A6  0E00               	movlw	0
  6451  0008A8  0100               	movlb	0	; () banked
  6452  0008AA  6F60               	movwf	___fladd@b& (0+255),b
  6453  0008AC  0E00               	movlw	0
  6454  0008AE  6F61               	movwf	(___fladd@b+1)& (0+255),b
  6455  0008B0  0E00               	movlw	0
  6456  0008B2  6F62               	movwf	(___fladd@b+2)& (0+255),b
  6457  0008B4  0E00               	movlw	0
  6458  0008B6                     L7:
  6459  0008B6  6F63               	movwf	(___fladd@b+3)& (0+255),b
  6460                           
  6461                           ; BSR set to: 0
  6462                           
  6463                           ; BSR set to: 0
  6464  0008B8  0100               	movlb	0	; () banked
  6465  0008BA  5167               	movf	(___fladd@a+3)& (0+255),w,b
  6466  0008BC  0B80               	andlw	128
  6467  0008BE  0100               	movlb	0	; () banked
  6468  0008C0  6F71               	movwf	___fladd@aexp& (0+255),b
  6469                           
  6470                           ; BSR set to: 0
  6471  0008C2  0100               	movlb	0	; () banked
  6472  0008C4  5170               	movf	___fladd@signs& (0+255),w,b
  6473  0008C6  0100               	movlb	0	; () banked
  6474  0008C8  1971               	xorwf	___fladd@aexp& (0+255),w,b
  6475  0008CA  B4D8               	btfsc	status,2,c
  6476  0008CC  D002               	goto	l4225
  6477                           
  6478                           ; BSR set to: 0
  6479  0008CE  0100               	movlb	0	; () banked
  6480  0008D0  8D70               	bsf	___fladd@signs& (0+255),6,b
  6481  0008D2                     l4225:
  6482                           
  6483                           ; BSR set to: 0
  6484  0008D2  0100               	movlb	0	; () banked
  6485  0008D4  5167               	movf	(___fladd@a+3)& (0+255),w,b
  6486  0008D6  2567               	addwf	(___fladd@a+3)& (0+255),w,b
  6487  0008D8  0100               	movlb	0	; () banked
  6488  0008DA  6F71               	movwf	___fladd@aexp& (0+255),b
  6489                           
  6490                           ; BSR set to: 0
  6491  0008DC  0100               	movlb	0	; () banked
  6492  0008DE  AF66               	btfss	(___fladd@a+2)& (0+255),7,b
  6493  0008E0  D002               	goto	l4231
  6494                           
  6495                           ; BSR set to: 0
  6496  0008E2  0100               	movlb	0	; () banked
  6497  0008E4  8171               	bsf	___fladd@aexp& (0+255),0,b
  6498  0008E6                     l4231:
  6499                           
  6500                           ; BSR set to: 0
  6501  0008E6  0100               	movlb	0	; () banked
  6502  0008E8  5171               	movf	___fladd@aexp& (0+255),w,b
  6503  0008EA  0100               	movlb	0	; () banked
  6504  0008EC  B4D8               	btfsc	status,2,c
  6505  0008EE  D012               	goto	l4241
  6506                           
  6507                           ; BSR set to: 0
  6508  0008F0  0100               	movlb	0	; () banked
  6509  0008F2  2971               	incf	___fladd@aexp& (0+255),w,b
  6510  0008F4  A4D8               	btfss	status,2,c
  6511  0008F6  D009               	goto	l4237
  6512                           
  6513                           ; BSR set to: 0
  6514  0008F8  0E00               	movlw	0
  6515  0008FA  0100               	movlb	0	; () banked
  6516  0008FC  6F64               	movwf	___fladd@a& (0+255),b
  6517  0008FE  0E00               	movlw	0
  6518  000900  6F65               	movwf	(___fladd@a+1)& (0+255),b
  6519  000902  0E00               	movlw	0
  6520  000904  6F66               	movwf	(___fladd@a+2)& (0+255),b
  6521  000906  0E00               	movlw	0
  6522  000908  6F67               	movwf	(___fladd@a+3)& (0+255),b
  6523  00090A                     l4237:
  6524                           
  6525                           ; BSR set to: 0
  6526  00090A  0100               	movlb	0	; () banked
  6527  00090C  8F66               	bsf	(___fladd@a+2)& (0+255),7,b
  6528                           
  6529                           ; BSR set to: 0
  6530  00090E  0E00               	movlw	0
  6531  000910  0100               	movlb	0	; () banked
  6532  000912  D008               	goto	L8
  6533  000914                     l4241:
  6534                           
  6535                           ; BSR set to: 0
  6536  000914  0E00               	movlw	0
  6537  000916  0100               	movlb	0	; () banked
  6538  000918  6F64               	movwf	___fladd@a& (0+255),b
  6539  00091A  0E00               	movlw	0
  6540  00091C  6F65               	movwf	(___fladd@a+1)& (0+255),b
  6541  00091E  0E00               	movlw	0
  6542  000920  6F66               	movwf	(___fladd@a+2)& (0+255),b
  6543  000922  0E00               	movlw	0
  6544  000924                     L8:
  6545  000924  6F67               	movwf	(___fladd@a+3)& (0+255),b
  6546                           
  6547                           ; BSR set to: 0
  6548                           
  6549                           ; BSR set to: 0
  6550  000926  0100               	movlb	0	; () banked
  6551  000928  5172               	movf	___fladd@bexp& (0+255),w,b
  6552  00092A  0100               	movlb	0	; () banked
  6553  00092C  5D71               	subwf	___fladd@aexp& (0+255),w,b
  6554  00092E  B0D8               	btfsc	status,0,c
  6555  000930  D024               	goto	l4279
  6556                           
  6557                           ; BSR set to: 0
  6558  000932  0100               	movlb	0	; () banked
  6559  000934  AD70               	btfss	___fladd@signs& (0+255),6,b
  6560  000936  D003               	goto	l4249
  6561                           
  6562                           ; BSR set to: 0
  6563  000938  0E80               	movlw	128
  6564  00093A  0100               	movlb	0	; () banked
  6565  00093C  1B70               	xorwf	___fladd@signs& (0+255),f,b
  6566  00093E                     l4249:
  6567                           
  6568                           ; BSR set to: 0
  6569  00093E  C072  F073         	movff	___fladd@bexp,___fladd@grs
  6570                           
  6571                           ; BSR set to: 0
  6572  000942  C071  F072         	movff	___fladd@aexp,___fladd@bexp
  6573                           
  6574                           ; BSR set to: 0
  6575  000946  C073  F071         	movff	___fladd@grs,___fladd@aexp
  6576                           
  6577                           ; BSR set to: 0
  6578  00094A  C060  F073         	movff	___fladd@b,___fladd@grs
  6579                           
  6580                           ; BSR set to: 0
  6581  00094E  C064  F060         	movff	___fladd@a,___fladd@b
  6582                           
  6583                           ; BSR set to: 0
  6584  000952  C073  F064         	movff	___fladd@grs,___fladd@a
  6585                           
  6586                           ; BSR set to: 0
  6587  000956  C061  F073         	movff	___fladd@b+1,___fladd@grs
  6588                           
  6589                           ; BSR set to: 0
  6590  00095A  C065  F061         	movff	___fladd@a+1,___fladd@b+1
  6591                           
  6592                           ; BSR set to: 0
  6593  00095E  C073  F065         	movff	___fladd@grs,___fladd@a+1
  6594                           
  6595                           ; BSR set to: 0
  6596  000962  C062  F073         	movff	___fladd@b+2,___fladd@grs
  6597                           
  6598                           ; BSR set to: 0
  6599  000966  C066  F062         	movff	___fladd@a+2,___fladd@b+2
  6600                           
  6601                           ; BSR set to: 0
  6602  00096A  C073  F066         	movff	___fladd@grs,___fladd@a+2
  6603                           
  6604                           ; BSR set to: 0
  6605  00096E  C063  F073         	movff	___fladd@b+3,___fladd@grs
  6606                           
  6607                           ; BSR set to: 0
  6608  000972  C067  F063         	movff	___fladd@a+3,___fladd@b+3
  6609                           
  6610                           ; BSR set to: 0
  6611  000976  C073  F067         	movff	___fladd@grs,___fladd@a+3
  6612  00097A                     l4279:
  6613                           
  6614                           ; BSR set to: 0
  6615  00097A  0E00               	movlw	0
  6616  00097C  0100               	movlb	0	; () banked
  6617  00097E  6F73               	movwf	___fladd@grs& (0+255),b
  6618                           
  6619                           ; BSR set to: 0
  6620  000980  0100               	movlb	0	; () banked
  6621  000982  5172               	movf	___fladd@bexp& (0+255),w,b
  6622  000984  0100               	movlb	0	; () banked
  6623  000986  6F68               	movwf	??___fladd& (0+255),b
  6624  000988  6B69               	clrf	(??___fladd+1)& (0+255),b
  6625  00098A  0100               	movlb	0	; () banked
  6626  00098C  1F68               	comf	??___fladd& (0+255),f,b
  6627  00098E  1F69               	comf	(??___fladd+1)& (0+255),f,b
  6628  000990  4B68               	infsnz	??___fladd& (0+255),f,b
  6629  000992  2B69               	incf	(??___fladd+1)& (0+255),f,b
  6630  000994  0100               	movlb	0	; () banked
  6631  000996  5171               	movf	___fladd@aexp& (0+255),w,b
  6632  000998  0100               	movlb	0	; () banked
  6633  00099A  6F6A               	movwf	(??___fladd+2)& (0+255),b
  6634  00099C  6B6B               	clrf	(??___fladd+3)& (0+255),b
  6635  00099E  0100               	movlb	0	; () banked
  6636  0009A0  5168               	movf	??___fladd& (0+255),w,b
  6637  0009A2  0100               	movlb	0	; () banked
  6638  0009A4  276A               	addwf	(??___fladd+2)& (0+255),f,b
  6639  0009A6  0100               	movlb	0	; () banked
  6640  0009A8  5169               	movf	(??___fladd+1)& (0+255),w,b
  6641  0009AA  0100               	movlb	0	; () banked
  6642  0009AC  236B               	addwfc	(??___fladd+3)& (0+255),f,b
  6643  0009AE  0100               	movlb	0	; () banked
  6644  0009B0  BF6B               	btfsc	(??___fladd+3)& (0+255),7,b
  6645  0009B2  D03D               	goto	l808
  6646  0009B4  0100               	movlb	0	; () banked
  6647  0009B6  516B               	movf	(??___fladd+3)& (0+255),w,b
  6648  0009B8  E105               	bnz	u4530
  6649  0009BA  0E1A               	movlw	26
  6650  0009BC  0100               	movlb	0	; () banked
  6651  0009BE  5D6A               	subwf	(??___fladd+2)& (0+255),w,b
  6652  0009C0  A0D8               	btfss	status,0,c
  6653  0009C2  D035               	goto	l808
  6654  0009C4                     u4530:
  6655                           
  6656                           ; BSR set to: 0
  6657  0009C4  0100               	movlb	0	; () banked
  6658  0009C6  5160               	movf	___fladd@b& (0+255),w,b
  6659  0009C8  0100               	movlb	0	; () banked
  6660  0009CA  1161               	iorwf	(___fladd@b+1)& (0+255),w,b
  6661  0009CC  0100               	movlb	0	; () banked
  6662  0009CE  1162               	iorwf	(___fladd@b+2)& (0+255),w,b
  6663  0009D0  0100               	movlb	0	; () banked
  6664  0009D2  1163               	iorwf	(___fladd@b+3)& (0+255),w,b
  6665  0009D4  B4D8               	btfsc	status,2,c
  6666  0009D6  D002               	goto	u4540
  6667  0009D8  0E01               	movlw	1
  6668  0009DA  D001               	goto	u4550
  6669  0009DC                     u4540:
  6670  0009DC  0E00               	movlw	0
  6671  0009DE                     u4550:
  6672  0009DE  0100               	movlb	0	; () banked
  6673  0009E0  6F73               	movwf	___fladd@grs& (0+255),b
  6674                           
  6675                           ; BSR set to: 0
  6676  0009E2  0E00               	movlw	0
  6677  0009E4  0100               	movlb	0	; () banked
  6678  0009E6  6F60               	movwf	___fladd@b& (0+255),b
  6679  0009E8  0E00               	movlw	0
  6680  0009EA  6F61               	movwf	(___fladd@b+1)& (0+255),b
  6681  0009EC  0E00               	movlw	0
  6682  0009EE  6F62               	movwf	(___fladd@b+2)& (0+255),b
  6683  0009F0  0E00               	movlw	0
  6684  0009F2  6F63               	movwf	(___fladd@b+3)& (0+255),b
  6685                           
  6686                           ; BSR set to: 0
  6687  0009F4  C071  F072         	movff	___fladd@aexp,___fladd@bexp
  6688  0009F8  D020               	goto	l807
  6689  0009FA                     l809:
  6690                           
  6691                           ; BSR set to: 0
  6692  0009FA  0100               	movlb	0	; () banked
  6693  0009FC  A173               	btfss	___fladd@grs& (0+255),0,b
  6694  0009FE  D007               	goto	l4291
  6695                           
  6696                           ; BSR set to: 0
  6697  000A00  0100               	movlb	0	; () banked
  6698  000A02  90D8               	bcf	status,0,c
  6699  000A04  3173               	rrcf	___fladd@grs& (0+255),w,b
  6700  000A06  0901               	iorlw	1
  6701  000A08  0100               	movlb	0	; () banked
  6702  000A0A  6F73               	movwf	___fladd@grs& (0+255),b
  6703  000A0C  D003               	goto	l4293
  6704  000A0E                     l4291:
  6705                           
  6706                           ; BSR set to: 0
  6707  000A0E  0100               	movlb	0	; () banked
  6708  000A10  90D8               	bcf	status,0,c
  6709  000A12  3373               	rrcf	___fladd@grs& (0+255),f,b
  6710  000A14                     l4293:
  6711                           
  6712                           ; BSR set to: 0
  6713  000A14  0100               	movlb	0	; () banked
  6714  000A16  A160               	btfss	___fladd@b& (0+255),0,b
  6715  000A18  D002               	goto	l4297
  6716                           
  6717                           ; BSR set to: 0
  6718  000A1A  0100               	movlb	0	; () banked
  6719  000A1C  8F73               	bsf	___fladd@grs& (0+255),7,b
  6720  000A1E                     l4297:
  6721                           
  6722                           ; BSR set to: 0
  6723  000A1E  0100               	movlb	0	; () banked
  6724  000A20  3563               	rlcf	(___fladd@b+3)& (0+255),w,b
  6725  000A22  3363               	rrcf	(___fladd@b+3)& (0+255),f,b
  6726  000A24  3362               	rrcf	(___fladd@b+2)& (0+255),f,b
  6727  000A26  3361               	rrcf	(___fladd@b+1)& (0+255),f,b
  6728  000A28  3360               	rrcf	___fladd@b& (0+255),f,b
  6729                           
  6730                           ; BSR set to: 0
  6731  000A2A  0100               	movlb	0	; () banked
  6732  000A2C  2B72               	incf	___fladd@bexp& (0+255),f,b
  6733  000A2E                     l808:
  6734                           
  6735                           ; BSR set to: 0
  6736  000A2E  0100               	movlb	0	; () banked
  6737  000A30  5171               	movf	___fladd@aexp& (0+255),w,b
  6738  000A32  0100               	movlb	0	; () banked
  6739  000A34  5D72               	subwf	___fladd@bexp& (0+255),w,b
  6740  000A36  A0D8               	btfss	status,0,c
  6741  000A38  D7E0               	goto	l809
  6742  000A3A                     l807:
  6743                           
  6744                           ; BSR set to: 0
  6745  000A3A  0100               	movlb	0	; () banked
  6746  000A3C  BD70               	btfsc	___fladd@signs& (0+255),6,b
  6747  000A3E  D03F               	goto	l4325
  6748                           
  6749                           ; BSR set to: 0
  6750  000A40  0100               	movlb	0	; () banked
  6751  000A42  5172               	movf	___fladd@bexp& (0+255),w,b
  6752  000A44  0100               	movlb	0	; () banked
  6753  000A46  A4D8               	btfss	status,2,c
  6754  000A48  D00A               	goto	l4307
  6755                           
  6756                           ; BSR set to: 0
  6757  000A4A  0E00               	movlw	0
  6758  000A4C  0100               	movlb	0	; () banked
  6759  000A4E  6F60               	movwf	?___fladd& (0+255),b
  6760  000A50  0E00               	movlw	0
  6761  000A52  6F61               	movwf	(?___fladd+1)& (0+255),b
  6762  000A54  0E00               	movlw	0
  6763  000A56  6F62               	movwf	(?___fladd+2)& (0+255),b
  6764  000A58  0E00               	movlw	0
  6765  000A5A  6F63               	movwf	(?___fladd+3)& (0+255),b
  6766                           
  6767                           ; BSR set to: 0
  6768  000A5C  0012               	return	
  6769  000A5E                     l4307:
  6770                           
  6771                           ; BSR set to: 0
  6772  000A5E  0100               	movlb	0	; () banked
  6773  000A60  5164               	movf	___fladd@a& (0+255),w,b
  6774  000A62  0100               	movlb	0	; () banked
  6775  000A64  2760               	addwf	___fladd@b& (0+255),f,b
  6776  000A66  0100               	movlb	0	; () banked
  6777  000A68  5165               	movf	(___fladd@a+1)& (0+255),w,b
  6778  000A6A  0100               	movlb	0	; () banked
  6779  000A6C  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
  6780  000A6E  0100               	movlb	0	; () banked
  6781  000A70  5166               	movf	(___fladd@a+2)& (0+255),w,b
  6782  000A72  0100               	movlb	0	; () banked
  6783  000A74  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
  6784  000A76  0100               	movlb	0	; () banked
  6785  000A78  5167               	movf	(___fladd@a+3)& (0+255),w,b
  6786  000A7A  0100               	movlb	0	; () banked
  6787  000A7C  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
  6788                           
  6789                           ; BSR set to: 0
  6790  000A7E  0100               	movlb	0	; () banked
  6791  000A80  A163               	btfss	(___fladd@b+3)& (0+255),0,b
  6792  000A82  D0CC               	goto	l4361
  6793                           
  6794                           ; BSR set to: 0
  6795  000A84  0100               	movlb	0	; () banked
  6796  000A86  A173               	btfss	___fladd@grs& (0+255),0,b
  6797  000A88  D009               	goto	l4315
  6798                           
  6799                           ; BSR set to: 0
  6800  000A8A  0100               	movlb	0	; () banked
  6801  000A8C  90D8               	bcf	status,0,c
  6802  000A8E  3373               	rrcf	___fladd@grs& (0+255),f,b
  6803  000A90  0100               	movlb	0	; () banked
  6804  000A92  5173               	movf	___fladd@grs& (0+255),w,b
  6805  000A94  0901               	iorlw	1
  6806  000A96  0100               	movlb	0	; () banked
  6807  000A98  6F73               	movwf	___fladd@grs& (0+255),b
  6808  000A9A  D003               	goto	l4317
  6809  000A9C                     l4315:
  6810                           
  6811                           ; BSR set to: 0
  6812  000A9C  0100               	movlb	0	; () banked
  6813  000A9E  90D8               	bcf	status,0,c
  6814  000AA0  3373               	rrcf	___fladd@grs& (0+255),f,b
  6815  000AA2                     l4317:
  6816                           
  6817                           ; BSR set to: 0
  6818  000AA2  0100               	movlb	0	; () banked
  6819  000AA4  A160               	btfss	___fladd@b& (0+255),0,b
  6820  000AA6  D002               	goto	l4321
  6821                           
  6822                           ; BSR set to: 0
  6823  000AA8  0100               	movlb	0	; () banked
  6824  000AAA  8F73               	bsf	___fladd@grs& (0+255),7,b
  6825  000AAC                     l4321:
  6826                           
  6827                           ; BSR set to: 0
  6828  000AAC  0100               	movlb	0	; () banked
  6829  000AAE  3563               	rlcf	(___fladd@b+3)& (0+255),w,b
  6830  000AB0  3363               	rrcf	(___fladd@b+3)& (0+255),f,b
  6831  000AB2  3362               	rrcf	(___fladd@b+2)& (0+255),f,b
  6832  000AB4  3361               	rrcf	(___fladd@b+1)& (0+255),f,b
  6833  000AB6  3360               	rrcf	___fladd@b& (0+255),f,b
  6834                           
  6835                           ; BSR set to: 0
  6836  000AB8  0100               	movlb	0	; () banked
  6837  000ABA  2B72               	incf	___fladd@bexp& (0+255),f,b
  6838                           
  6839                           ; BSR set to: 0
  6840  000ABC  D0AF               	goto	l4361
  6841  000ABE                     l4325:
  6842                           
  6843                           ; BSR set to: 0
  6844  000ABE  0100               	movlb	0	; () banked
  6845  000AC0  5164               	movf	___fladd@a& (0+255),w,b
  6846  000AC2  0100               	movlb	0	; () banked
  6847  000AC4  5D60               	subwf	___fladd@b& (0+255),w,b
  6848  000AC6  0100               	movlb	0	; () banked
  6849  000AC8  5165               	movf	(___fladd@a+1)& (0+255),w,b
  6850  000ACA  0100               	movlb	0	; () banked
  6851  000ACC  5961               	subwfb	(___fladd@b+1)& (0+255),w,b
  6852  000ACE  0100               	movlb	0	; () banked
  6853  000AD0  5166               	movf	(___fladd@a+2)& (0+255),w,b
  6854  000AD2  0100               	movlb	0	; () banked
  6855  000AD4  5962               	subwfb	(___fladd@b+2)& (0+255),w,b
  6856  000AD6  0100               	movlb	0	; () banked
  6857  000AD8  5163               	movf	(___fladd@b+3)& (0+255),w,b
  6858  000ADA  0A80               	xorlw	128
  6859  000ADC  0100               	movlb	0	; () banked
  6860  000ADE  6F68               	movwf	??___fladd& (0+255),b
  6861  000AE0  0100               	movlb	0	; () banked
  6862  000AE2  5167               	movf	(___fladd@a+3)& (0+255),w,b
  6863  000AE4  0A80               	xorlw	128
  6864  000AE6  0100               	movlb	0	; () banked
  6865  000AE8  5968               	subwfb	??___fladd& (0+255),w,b
  6866  000AEA  B0D8               	btfsc	status,0,c
  6867  000AEC  D050               	goto	l4335
  6868                           
  6869                           ; BSR set to: 0
  6870  000AEE  C060  F068         	movff	___fladd@b,??___fladd
  6871  000AF2  C061  F069         	movff	___fladd@b+1,??___fladd+1
  6872  000AF6  C062  F06A         	movff	___fladd@b+2,??___fladd+2
  6873  000AFA  C063  F06B         	movff	___fladd@b+3,??___fladd+3
  6874  000AFE  0100               	movlb	0	; () banked
  6875  000B00  1F68               	comf	??___fladd& (0+255),f,b
  6876  000B02  1F69               	comf	(??___fladd+1)& (0+255),f,b
  6877  000B04  1F6A               	comf	(??___fladd+2)& (0+255),f,b
  6878  000B06  1F6B               	comf	(??___fladd+3)& (0+255),f,b
  6879  000B08  2B68               	incf	??___fladd& (0+255),f,b
  6880  000B0A  0E00               	movlw	0
  6881  000B0C  2369               	addwfc	(??___fladd+1)& (0+255),f,b
  6882  000B0E  236A               	addwfc	(??___fladd+2)& (0+255),f,b
  6883  000B10  236B               	addwfc	(??___fladd+3)& (0+255),f,b
  6884  000B12  0100               	movlb	0	; () banked
  6885  000B14  5164               	movf	___fladd@a& (0+255),w,b
  6886  000B16  0100               	movlb	0	; () banked
  6887  000B18  2568               	addwf	??___fladd& (0+255),w,b
  6888  000B1A  0100               	movlb	0	; () banked
  6889  000B1C  6F6C               	movwf	(??___fladd+4)& (0+255),b
  6890  000B1E  0100               	movlb	0	; () banked
  6891  000B20  5165               	movf	(___fladd@a+1)& (0+255),w,b
  6892  000B22  0100               	movlb	0	; () banked
  6893  000B24  2169               	addwfc	(??___fladd+1)& (0+255),w,b
  6894  000B26  0100               	movlb	0	; () banked
  6895  000B28  6F6D               	movwf	(??___fladd+5)& (0+255),b
  6896  000B2A  0100               	movlb	0	; () banked
  6897  000B2C  5166               	movf	(___fladd@a+2)& (0+255),w,b
  6898  000B2E  0100               	movlb	0	; () banked
  6899  000B30  216A               	addwfc	(??___fladd+2)& (0+255),w,b
  6900  000B32  0100               	movlb	0	; () banked
  6901  000B34  6F6E               	movwf	(??___fladd+6)& (0+255),b
  6902  000B36  0100               	movlb	0	; () banked
  6903  000B38  5167               	movf	(___fladd@a+3)& (0+255),w,b
  6904  000B3A  0100               	movlb	0	; () banked
  6905  000B3C  216B               	addwfc	(??___fladd+3)& (0+255),w,b
  6906  000B3E  0100               	movlb	0	; () banked
  6907  000B40  6F6F               	movwf	(??___fladd+7)& (0+255),b
  6908  000B42  0EFF               	movlw	255
  6909  000B44  0100               	movlb	0	; () banked
  6910  000B46  256C               	addwf	(??___fladd+4)& (0+255),w,b
  6911  000B48  0100               	movlb	0	; () banked
  6912  000B4A  6F60               	movwf	___fladd@b& (0+255),b
  6913  000B4C  0EFF               	movlw	255
  6914  000B4E  0100               	movlb	0	; () banked
  6915  000B50  216D               	addwfc	(??___fladd+5)& (0+255),w,b
  6916  000B52  0100               	movlb	0	; () banked
  6917  000B54  6F61               	movwf	(___fladd@b+1)& (0+255),b
  6918  000B56  0EFF               	movlw	255
  6919  000B58  0100               	movlb	0	; () banked
  6920  000B5A  216E               	addwfc	(??___fladd+6)& (0+255),w,b
  6921  000B5C  0100               	movlb	0	; () banked
  6922  000B5E  6F62               	movwf	(___fladd@b+2)& (0+255),b
  6923  000B60  0EFF               	movlw	255
  6924  000B62  0100               	movlb	0	; () banked
  6925  000B64  216F               	addwfc	(??___fladd+7)& (0+255),w,b
  6926  000B66  0100               	movlb	0	; () banked
  6927  000B68  6F63               	movwf	(___fladd@b+3)& (0+255),b
  6928  000B6A  0E80               	movlw	128
  6929  000B6C  0100               	movlb	0	; () banked
  6930  000B6E  1B70               	xorwf	___fladd@signs& (0+255),f,b
  6931                           
  6932                           ; BSR set to: 0
  6933  000B70  0100               	movlb	0	; () banked
  6934  000B72  6D73               	negf	___fladd@grs& (0+255),b
  6935                           
  6936                           ; BSR set to: 0
  6937  000B74  0100               	movlb	0	; () banked
  6938  000B76  5173               	movf	___fladd@grs& (0+255),w,b
  6939  000B78  0100               	movlb	0	; () banked
  6940  000B7A  A4D8               	btfss	status,2,c
  6941  000B7C  D018               	goto	l824
  6942                           
  6943                           ; BSR set to: 0
  6944  000B7E  0E01               	movlw	1
  6945  000B80  0100               	movlb	0	; () banked
  6946  000B82  2760               	addwf	___fladd@b& (0+255),f,b
  6947  000B84  0E00               	movlw	0
  6948  000B86  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
  6949  000B88  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
  6950  000B8A  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
  6951                           
  6952                           ; BSR set to: 0
  6953  000B8C  D010               	goto	l824
  6954  000B8E                     l4335:
  6955                           
  6956                           ; BSR set to: 0
  6957  000B8E  0100               	movlb	0	; () banked
  6958  000B90  5164               	movf	___fladd@a& (0+255),w,b
  6959  000B92  0100               	movlb	0	; () banked
  6960  000B94  5F60               	subwf	___fladd@b& (0+255),f,b
  6961  000B96  0100               	movlb	0	; () banked
  6962  000B98  5165               	movf	(___fladd@a+1)& (0+255),w,b
  6963  000B9A  0100               	movlb	0	; () banked
  6964  000B9C  5B61               	subwfb	(___fladd@b+1)& (0+255),f,b
  6965  000B9E  0100               	movlb	0	; () banked
  6966  000BA0  5166               	movf	(___fladd@a+2)& (0+255),w,b
  6967  000BA2  0100               	movlb	0	; () banked
  6968  000BA4  5B62               	subwfb	(___fladd@b+2)& (0+255),f,b
  6969  000BA6  0100               	movlb	0	; () banked
  6970  000BA8  5167               	movf	(___fladd@a+3)& (0+255),w,b
  6971  000BAA  0100               	movlb	0	; () banked
  6972  000BAC  5B63               	subwfb	(___fladd@b+3)& (0+255),f,b
  6973  000BAE                     l824:
  6974                           
  6975                           ; BSR set to: 0
  6976  000BAE  0100               	movlb	0	; () banked
  6977  000BB0  5160               	movf	___fladd@b& (0+255),w,b
  6978  000BB2  0100               	movlb	0	; () banked
  6979  000BB4  1161               	iorwf	(___fladd@b+1)& (0+255),w,b
  6980  000BB6  0100               	movlb	0	; () banked
  6981  000BB8  1162               	iorwf	(___fladd@b+2)& (0+255),w,b
  6982  000BBA  0100               	movlb	0	; () banked
  6983  000BBC  1163               	iorwf	(___fladd@b+3)& (0+255),w,b
  6984  000BBE  A4D8               	btfss	status,2,c
  6985  000BC0  D02A               	goto	l4359
  6986                           
  6987                           ; BSR set to: 0
  6988  000BC2  0100               	movlb	0	; () banked
  6989  000BC4  5173               	movf	___fladd@grs& (0+255),w,b
  6990  000BC6  0100               	movlb	0	; () banked
  6991  000BC8  A4D8               	btfss	status,2,c
  6992  000BCA  D025               	goto	l4359
  6993                           
  6994                           ; BSR set to: 0
  6995  000BCC  0E00               	movlw	0
  6996  000BCE  0100               	movlb	0	; () banked
  6997  000BD0  6F60               	movwf	?___fladd& (0+255),b
  6998  000BD2  0E00               	movlw	0
  6999  000BD4  6F61               	movwf	(?___fladd+1)& (0+255),b
  7000  000BD6  0E00               	movlw	0
  7001  000BD8  6F62               	movwf	(?___fladd+2)& (0+255),b
  7002  000BDA  0E00               	movlw	0
  7003  000BDC  6F63               	movwf	(?___fladd+3)& (0+255),b
  7004                           
  7005                           ; BSR set to: 0
  7006  000BDE  0012               	return	
  7007  000BE0                     l4343:
  7008                           
  7009                           ; BSR set to: 0
  7010  000BE0  0100               	movlb	0	; () banked
  7011  000BE2  90D8               	bcf	status,0,c
  7012  000BE4  3760               	rlcf	___fladd@b& (0+255),f,b
  7013  000BE6  3761               	rlcf	(___fladd@b+1)& (0+255),f,b
  7014  000BE8  3762               	rlcf	(___fladd@b+2)& (0+255),f,b
  7015  000BEA  3763               	rlcf	(___fladd@b+3)& (0+255),f,b
  7016                           
  7017                           ; BSR set to: 0
  7018  000BEC  0100               	movlb	0	; () banked
  7019  000BEE  AF73               	btfss	___fladd@grs& (0+255),7,b
  7020  000BF0  D002               	goto	l4349
  7021                           
  7022                           ; BSR set to: 0
  7023  000BF2  0100               	movlb	0	; () banked
  7024  000BF4  8160               	bsf	___fladd@b& (0+255),0,b
  7025  000BF6                     l4349:
  7026                           
  7027                           ; BSR set to: 0
  7028  000BF6  0100               	movlb	0	; () banked
  7029  000BF8  A173               	btfss	___fladd@grs& (0+255),0,b
  7030  000BFA  D003               	goto	l4353
  7031                           
  7032                           ; BSR set to: 0
  7033  000BFC  80D8               	bsf	status,0,c
  7034  000BFE  0100               	movlb	0	; () banked
  7035  000C00  D002               	goto	L9
  7036  000C02                     l4353:
  7037                           
  7038                           ; BSR set to: 0
  7039  000C02  0100               	movlb	0	; () banked
  7040  000C04  90D8               	bcf	status,0,c
  7041  000C06                     L9:
  7042  000C06  3773               	rlcf	___fladd@grs& (0+255),f,b
  7043                           
  7044                           ; BSR set to: 0
  7045                           
  7046                           ; BSR set to: 0
  7047  000C08  0100               	movlb	0	; () banked
  7048  000C0A  5172               	movf	___fladd@bexp& (0+255),w,b
  7049  000C0C  0100               	movlb	0	; () banked
  7050  000C0E  B4D8               	btfsc	status,2,c
  7051  000C10  D002               	goto	l4359
  7052                           
  7053                           ; BSR set to: 0
  7054  000C12  0100               	movlb	0	; () banked
  7055  000C14  0772               	decf	___fladd@bexp& (0+255),f,b
  7056  000C16                     l4359:
  7057                           
  7058                           ; BSR set to: 0
  7059  000C16  0100               	movlb	0	; () banked
  7060  000C18  AF62               	btfss	(___fladd@b+2)& (0+255),7,b
  7061  000C1A  D7E2               	goto	l4343
  7062  000C1C                     l4361:
  7063                           
  7064                           ; BSR set to: 0
  7065  000C1C  0E00               	movlw	0
  7066  000C1E  0100               	movlb	0	; () banked
  7067  000C20  6F71               	movwf	___fladd@aexp& (0+255),b
  7068                           
  7069                           ; BSR set to: 0
  7070  000C22  0100               	movlb	0	; () banked
  7071  000C24  AF73               	btfss	___fladd@grs& (0+255),7,b
  7072  000C26  D00D               	goto	l833
  7073                           
  7074                           ; BSR set to: 0
  7075  000C28  C073  F068         	movff	___fladd@grs,??___fladd
  7076  000C2C  0E7F               	movlw	127
  7077  000C2E  0100               	movlb	0	; () banked
  7078  000C30  1768               	andwf	??___fladd& (0+255),f,b
  7079  000C32  A4D8               	btfss	status,2,c
  7080  000C34  D003               	goto	l4369
  7081                           
  7082                           ; BSR set to: 0
  7083                           
  7084                           ; BSR set to: 0
  7085  000C36  0100               	movlb	0	; () banked
  7086  000C38  A160               	btfss	___fladd@b& (0+255),0,b
  7087  000C3A  D003               	goto	l833
  7088  000C3C                     l4369:
  7089                           
  7090                           ; BSR set to: 0
  7091  000C3C  0E01               	movlw	1
  7092  000C3E  0100               	movlb	0	; () banked
  7093  000C40  6F71               	movwf	___fladd@aexp& (0+255),b
  7094  000C42                     l833:
  7095                           
  7096                           ; BSR set to: 0
  7097  000C42  0100               	movlb	0	; () banked
  7098  000C44  5171               	movf	___fladd@aexp& (0+255),w,b
  7099  000C46  0100               	movlb	0	; () banked
  7100  000C48  B4D8               	btfsc	status,2,c
  7101  000C4A  D026               	goto	l4379
  7102                           
  7103                           ; BSR set to: 0
  7104  000C4C  0E01               	movlw	1
  7105  000C4E  0100               	movlb	0	; () banked
  7106  000C50  2760               	addwf	___fladd@b& (0+255),f,b
  7107  000C52  0E00               	movlw	0
  7108  000C54  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
  7109  000C56  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
  7110  000C58  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
  7111                           
  7112                           ; BSR set to: 0
  7113  000C5A  0100               	movlb	0	; () banked
  7114  000C5C  A163               	btfss	(___fladd@b+3)& (0+255),0,b
  7115  000C5E  D01C               	goto	l4379
  7116                           
  7117                           ; BSR set to: 0
  7118  000C60  C060  F068         	movff	___fladd@b,??___fladd
  7119  000C64  C061  F069         	movff	___fladd@b+1,??___fladd+1
  7120  000C68  C062  F06A         	movff	___fladd@b+2,??___fladd+2
  7121  000C6C  C063  F06B         	movff	___fladd@b+3,??___fladd+3
  7122  000C70  0100               	movlb	0	; () banked
  7123  000C72  356B               	rlcf	(??___fladd+3)& (0+255),w,b
  7124  000C74  336B               	rrcf	(??___fladd+3)& (0+255),f,b
  7125  000C76  336A               	rrcf	(??___fladd+2)& (0+255),f,b
  7126  000C78  3369               	rrcf	(??___fladd+1)& (0+255),f,b
  7127  000C7A  3368               	rrcf	??___fladd& (0+255),f,b
  7128  000C7C  C068  F060         	movff	??___fladd,___fladd@b
  7129  000C80  C069  F061         	movff	??___fladd+1,___fladd@b+1
  7130  000C84  C06A  F062         	movff	??___fladd+2,___fladd@b+2
  7131  000C88  C06B  F063         	movff	??___fladd+3,___fladd@b+3
  7132  000C8C  0100               	movlb	0	; () banked
  7133  000C8E  2972               	incf	___fladd@bexp& (0+255),w,b
  7134  000C90  B4D8               	btfsc	status,2,c
  7135  000C92  D002               	goto	l4379
  7136                           
  7137                           ; BSR set to: 0
  7138  000C94  0100               	movlb	0	; () banked
  7139  000C96  2B72               	incf	___fladd@bexp& (0+255),f,b
  7140  000C98                     l4379:
  7141                           
  7142                           ; BSR set to: 0
  7143  000C98  0100               	movlb	0	; () banked
  7144  000C9A  2972               	incf	___fladd@bexp& (0+255),w,b
  7145  000C9C  B4D8               	btfsc	status,2,c
  7146  000C9E  D005               	goto	l4383
  7147                           
  7148                           ; BSR set to: 0
  7149  000CA0  0100               	movlb	0	; () banked
  7150  000CA2  5172               	movf	___fladd@bexp& (0+255),w,b
  7151  000CA4  0100               	movlb	0	; () banked
  7152  000CA6  A4D8               	btfss	status,2,c
  7153  000CA8  D011               	goto	l4387
  7154  000CAA                     l4383:
  7155                           
  7156                           ; BSR set to: 0
  7157  000CAA  0E00               	movlw	0
  7158  000CAC  0100               	movlb	0	; () banked
  7159  000CAE  6F60               	movwf	___fladd@b& (0+255),b
  7160  000CB0  0E00               	movlw	0
  7161  000CB2  6F61               	movwf	(___fladd@b+1)& (0+255),b
  7162  000CB4  0E00               	movlw	0
  7163  000CB6  6F62               	movwf	(___fladd@b+2)& (0+255),b
  7164  000CB8  0E00               	movlw	0
  7165  000CBA  6F63               	movwf	(___fladd@b+3)& (0+255),b
  7166  000CBC  0100               	movlb	0	; () banked
  7167  000CBE  5172               	movf	___fladd@bexp& (0+255),w,b
  7168  000CC0  0100               	movlb	0	; () banked
  7169  000CC2  A4D8               	btfss	status,2,c
  7170  000CC4  D003               	goto	l4387
  7171                           
  7172                           ; BSR set to: 0
  7173  000CC6  0E00               	movlw	0
  7174  000CC8  0100               	movlb	0	; () banked
  7175  000CCA  6F70               	movwf	___fladd@signs& (0+255),b
  7176  000CCC                     l4387:
  7177                           
  7178                           ; BSR set to: 0
  7179  000CCC  0100               	movlb	0	; () banked
  7180  000CCE  A172               	btfss	___fladd@bexp& (0+255),0,b
  7181  000CD0  D003               	goto	l4391
  7182                           
  7183                           ; BSR set to: 0
  7184  000CD2  0100               	movlb	0	; () banked
  7185  000CD4  8F62               	bsf	(___fladd@b+2)& (0+255),7,b
  7186  000CD6  D002               	goto	l4393
  7187  000CD8                     l4391:
  7188                           
  7189                           ; BSR set to: 0
  7190  000CD8  0100               	movlb	0	; () banked
  7191  000CDA  9F62               	bcf	(___fladd@b+2)& (0+255),7,b
  7192  000CDC                     l4393:
  7193                           
  7194                           ; BSR set to: 0
  7195  000CDC  0100               	movlb	0	; () banked
  7196  000CDE  90D8               	bcf	status,0,c
  7197  000CE0  3172               	rrcf	___fladd@bexp& (0+255),w,b
  7198  000CE2  0100               	movlb	0	; () banked
  7199  000CE4  6F63               	movwf	(___fladd@b+3)& (0+255),b
  7200                           
  7201                           ; BSR set to: 0
  7202  000CE6  0100               	movlb	0	; () banked
  7203  000CE8  AF70               	btfss	___fladd@signs& (0+255),7,b
  7204  000CEA  D002               	goto	l4399
  7205                           
  7206                           ; BSR set to: 0
  7207  000CEC  0100               	movlb	0	; () banked
  7208  000CEE  8F63               	bsf	(___fladd@b+3)& (0+255),7,b
  7209  000CF0                     l4399:
  7210                           
  7211                           ; BSR set to: 0
  7212  000CF0  C060  F060         	movff	___fladd@b,?___fladd
  7213  000CF4  C061  F061         	movff	___fladd@b+1,?___fladd+1
  7214  000CF8  C062  F062         	movff	___fladd@b+2,?___fladd+2
  7215  000CFC  C063  F063         	movff	___fladd@b+3,?___fladd+3
  7216  000D00  0012               	return	
  7217  000D02                     __end_of___fladd:
  7218                           	opt stack 0
  7219                           tblptru	equ	0xFF8
  7220                           tblptrh	equ	0xFF7
  7221                           tblptrl	equ	0xFF6
  7222                           tablat	equ	0xFF5
  7223                           prodh	equ	0xFF4
  7224                           prodl	equ	0xFF3
  7225                           intcon	equ	0xFF2
  7226                           postinc0	equ	0xFEE
  7227                           wreg	equ	0xFE8
  7228                           indf1	equ	0xFE7
  7229                           postdec1	equ	0xFE5
  7230                           plusw1	equ	0xFE3
  7231                           fsr1h	equ	0xFE2
  7232                           fsr1l	equ	0xFE1
  7233                           indf2	equ	0xFDF
  7234                           postinc2	equ	0xFDE
  7235                           plusw2	equ	0xFDB
  7236                           fsr2h	equ	0xFDA
  7237                           fsr2l	equ	0xFD9
  7238                           status	equ	0xFD8
  7239                           
  7240 ;; *************** function ___flneg *****************
  7241 ;; Defined at:
  7242 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flneg.c"
  7243 ;; Parameters:    Size  Location     Type
  7244 ;;  f1              4   14[COMRAM] unsigned char 
  7245 ;; Auto vars:     Size  Location     Type
  7246 ;;		None
  7247 ;; Return value:  Size  Location     Type
  7248 ;;                  4   14[COMRAM] unsigned char 
  7249 ;; Registers used:
  7250 ;;		wreg, status,2, status,0
  7251 ;; Tracked objects:
  7252 ;;		On entry : 0/0
  7253 ;;		On exit  : 0/0
  7254 ;;		Unchanged: 0/0
  7255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7256 ;;      Params:         4       0       0       0       0       0       0       0       0
  7257 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7258 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7259 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7260 ;;Total ram usage:        4 bytes
  7261 ;; Hardware stack levels used:    1
  7262 ;; Hardware stack levels required when called:    1
  7263 ;; This function calls:
  7264 ;;		Nothing
  7265 ;; This function is called by:
  7266 ;;		_scarica
  7267 ;;		_sprintf
  7268 ;; This function uses a non-reentrant model
  7269 ;;
  7270                           
  7271                           	psect	text23
  7272  0031B4                     __ptext23:
  7273                           	opt stack 0
  7274  0031B4                     ___flneg:
  7275                           	opt stack 27
  7276                           
  7277                           ; BSR set to: 0
  7278                           ;incstack = 0
  7279  0031B4  500F               	movf	___flneg@f1,w,c
  7280  0031B6  1010               	iorwf	___flneg@f1+1,w,c
  7281  0031B8  1011               	iorwf	___flneg@f1+2,w,c
  7282  0031BA  1012               	iorwf	___flneg@f1+3,w,c
  7283  0031BC  B4D8               	btfsc	status,2,c
  7284  0031BE  D008               	goto	l3503
  7285  0031C0  0E00               	movlw	0
  7286  0031C2  1A0F               	xorwf	___flneg@f1,f,c
  7287  0031C4  0E00               	movlw	0
  7288  0031C6  1A10               	xorwf	___flneg@f1+1,f,c
  7289  0031C8  0E00               	movlw	0
  7290  0031CA  1A11               	xorwf	___flneg@f1+2,f,c
  7291  0031CC  0E80               	movlw	128
  7292  0031CE  1A12               	xorwf	___flneg@f1+3,f,c
  7293  0031D0                     l3503:
  7294  0031D0  C00F  F00F         	movff	___flneg@f1,?___flneg
  7295  0031D4  C010  F010         	movff	___flneg@f1+1,?___flneg+1
  7296  0031D8  C011  F011         	movff	___flneg@f1+2,?___flneg+2
  7297  0031DC  C012  F012         	movff	___flneg@f1+3,?___flneg+3
  7298  0031E0  0012               	return	
  7299  0031E2                     __end_of___flneg:
  7300                           	opt stack 0
  7301                           tblptru	equ	0xFF8
  7302                           tblptrh	equ	0xFF7
  7303                           tblptrl	equ	0xFF6
  7304                           tablat	equ	0xFF5
  7305                           prodh	equ	0xFF4
  7306                           prodl	equ	0xFF3
  7307                           intcon	equ	0xFF2
  7308                           postinc0	equ	0xFEE
  7309                           wreg	equ	0xFE8
  7310                           indf1	equ	0xFE7
  7311                           postdec1	equ	0xFE5
  7312                           plusw1	equ	0xFE3
  7313                           fsr1h	equ	0xFE2
  7314                           fsr1l	equ	0xFE1
  7315                           indf2	equ	0xFDF
  7316                           postinc2	equ	0xFDE
  7317                           plusw2	equ	0xFDB
  7318                           fsr2h	equ	0xFDA
  7319                           fsr2l	equ	0xFD9
  7320                           status	equ	0xFD8
  7321                           
  7322 ;; *************** function ___flge *****************
  7323 ;; Defined at:
  7324 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flge.c"
  7325 ;; Parameters:    Size  Location     Type
  7326 ;;  ff1             4   14[COMRAM] unsigned char 
  7327 ;;  ff2             4   18[COMRAM] unsigned char 
  7328 ;; Auto vars:     Size  Location     Type
  7329 ;;		None
  7330 ;; Return value:  Size  Location     Type
  7331 ;;		None               void
  7332 ;; Registers used:
  7333 ;;		wreg, status,2, status,0
  7334 ;; Tracked objects:
  7335 ;;		On entry : 0/0
  7336 ;;		On exit  : 0/0
  7337 ;;		Unchanged: 0/0
  7338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7339 ;;      Params:         8       0       0       0       0       0       0       0       0
  7340 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7341 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7342 ;;      Totals:        12       0       0       0       0       0       0       0       0
  7343 ;;Total ram usage:       12 bytes
  7344 ;; Hardware stack levels used:    1
  7345 ;; Hardware stack levels required when called:    1
  7346 ;; This function calls:
  7347 ;;		Nothing
  7348 ;; This function is called by:
  7349 ;;		_main
  7350 ;;		_scarica
  7351 ;;		_ricarica
  7352 ;;		_sprintf
  7353 ;; This function uses a non-reentrant model
  7354 ;;
  7355                           
  7356                           	psect	text24
  7357  002734                     __ptext24:
  7358                           	opt stack 0
  7359  002734                     ___flge:
  7360                           	opt stack 27
  7361                           
  7362                           ;incstack = 0
  7363  002734  0E00               	movlw	0
  7364  002736  140F               	andwf	___flge@ff1,w,c
  7365  002738  6E17               	movwf	??___flge& (0+255),c
  7366  00273A  0E00               	movlw	0
  7367  00273C  1410               	andwf	___flge@ff1+1,w,c
  7368  00273E  6E18               	movwf	(??___flge+1)& (0+255),c
  7369  002740  0E80               	movlw	128
  7370  002742  1411               	andwf	___flge@ff1+2,w,c
  7371  002744  6E19               	movwf	(??___flge+2)& (0+255),c
  7372  002746  0E7F               	movlw	127
  7373  002748  1412               	andwf	___flge@ff1+3,w,c
  7374  00274A  6E1A               	movwf	(??___flge+3)& (0+255),c
  7375  00274C  5017               	movf	??___flge,w,c
  7376  00274E  1018               	iorwf	??___flge+1,w,c
  7377  002750  1019               	iorwf	??___flge+2,w,c
  7378  002752  101A               	iorwf	??___flge+3,w,c
  7379  002754  A4D8               	btfss	status,2,c
  7380  002756  D008               	goto	l3481
  7381  002758  0E00               	movlw	0
  7382  00275A  6E0F               	movwf	___flge@ff1,c
  7383  00275C  0E00               	movlw	0
  7384  00275E  6E10               	movwf	___flge@ff1+1,c
  7385  002760  0E00               	movlw	0
  7386  002762  6E11               	movwf	___flge@ff1+2,c
  7387  002764  0E00               	movlw	0
  7388  002766  6E12               	movwf	___flge@ff1+3,c
  7389  002768                     l3481:
  7390  002768  0E00               	movlw	0
  7391  00276A  1413               	andwf	___flge@ff2,w,c
  7392  00276C  6E17               	movwf	??___flge& (0+255),c
  7393  00276E  0E00               	movlw	0
  7394  002770  1414               	andwf	___flge@ff2+1,w,c
  7395  002772  6E18               	movwf	(??___flge+1)& (0+255),c
  7396  002774  0E80               	movlw	128
  7397  002776  1415               	andwf	___flge@ff2+2,w,c
  7398  002778  6E19               	movwf	(??___flge+2)& (0+255),c
  7399  00277A  0E7F               	movlw	127
  7400  00277C  1416               	andwf	___flge@ff2+3,w,c
  7401  00277E  6E1A               	movwf	(??___flge+3)& (0+255),c
  7402  002780  5017               	movf	??___flge,w,c
  7403  002782  1018               	iorwf	??___flge+1,w,c
  7404  002784  1019               	iorwf	??___flge+2,w,c
  7405  002786  101A               	iorwf	??___flge+3,w,c
  7406  002788  A4D8               	btfss	status,2,c
  7407  00278A  D008               	goto	l3485
  7408  00278C  0E00               	movlw	0
  7409  00278E  6E13               	movwf	___flge@ff2,c
  7410  002790  0E00               	movlw	0
  7411  002792  6E14               	movwf	___flge@ff2+1,c
  7412  002794  0E00               	movlw	0
  7413  002796  6E15               	movwf	___flge@ff2+2,c
  7414  002798  0E00               	movlw	0
  7415  00279A  6E16               	movwf	___flge@ff2+3,c
  7416  00279C                     l3485:
  7417  00279C  AE12               	btfss	___flge@ff1+3,7,c
  7418  00279E  D01D               	goto	l3489
  7419  0027A0  C00F  F017         	movff	___flge@ff1,??___flge
  7420  0027A4  C010  F018         	movff	___flge@ff1+1,??___flge+1
  7421  0027A8  C011  F019         	movff	___flge@ff1+2,??___flge+2
  7422  0027AC  C012  F01A         	movff	___flge@ff1+3,??___flge+3
  7423  0027B0  1E17               	comf	??___flge,f,c
  7424  0027B2  1E18               	comf	??___flge+1,f,c
  7425  0027B4  1E19               	comf	??___flge+2,f,c
  7426  0027B6  1E1A               	comf	??___flge+3,f,c
  7427  0027B8  2A17               	incf	??___flge,f,c
  7428  0027BA  0E00               	movlw	0
  7429  0027BC  2218               	addwfc	??___flge+1,f,c
  7430  0027BE  2219               	addwfc	??___flge+2,f,c
  7431  0027C0  221A               	addwfc	??___flge+3,f,c
  7432  0027C2  0E00               	movlw	0
  7433  0027C4  2417               	addwf	??___flge,w,c
  7434  0027C6  6E0F               	movwf	___flge@ff1,c
  7435  0027C8  0E00               	movlw	0
  7436  0027CA  2018               	addwfc	??___flge+1,w,c
  7437  0027CC  6E10               	movwf	___flge@ff1+1,c
  7438  0027CE  0E00               	movlw	0
  7439  0027D0  2019               	addwfc	??___flge+2,w,c
  7440  0027D2  6E11               	movwf	___flge@ff1+2,c
  7441  0027D4  0E80               	movlw	128
  7442  0027D6  201A               	addwfc	??___flge+3,w,c
  7443  0027D8  6E12               	movwf	___flge@ff1+3,c
  7444  0027DA                     l3489:
  7445  0027DA  AE16               	btfss	___flge@ff2+3,7,c
  7446  0027DC  D01D               	goto	l530
  7447  0027DE  C013  F017         	movff	___flge@ff2,??___flge
  7448  0027E2  C014  F018         	movff	___flge@ff2+1,??___flge+1
  7449  0027E6  C015  F019         	movff	___flge@ff2+2,??___flge+2
  7450  0027EA  C016  F01A         	movff	___flge@ff2+3,??___flge+3
  7451  0027EE  1E17               	comf	??___flge,f,c
  7452  0027F0  1E18               	comf	??___flge+1,f,c
  7453  0027F2  1E19               	comf	??___flge+2,f,c
  7454  0027F4  1E1A               	comf	??___flge+3,f,c
  7455  0027F6  2A17               	incf	??___flge,f,c
  7456  0027F8  0E00               	movlw	0
  7457  0027FA  2218               	addwfc	??___flge+1,f,c
  7458  0027FC  2219               	addwfc	??___flge+2,f,c
  7459  0027FE  221A               	addwfc	??___flge+3,f,c
  7460  002800  0E00               	movlw	0
  7461  002802  2417               	addwf	??___flge,w,c
  7462  002804  6E13               	movwf	___flge@ff2,c
  7463  002806  0E00               	movlw	0
  7464  002808  2018               	addwfc	??___flge+1,w,c
  7465  00280A  6E14               	movwf	___flge@ff2+1,c
  7466  00280C  0E00               	movlw	0
  7467  00280E  2019               	addwfc	??___flge+2,w,c
  7468  002810  6E15               	movwf	___flge@ff2+2,c
  7469  002812  0E80               	movlw	128
  7470  002814  201A               	addwfc	??___flge+3,w,c
  7471  002816  6E16               	movwf	___flge@ff2+3,c
  7472  002818                     l530:
  7473  002818  0E00               	movlw	0
  7474  00281A  1A0F               	xorwf	___flge@ff1,f,c
  7475  00281C  0E00               	movlw	0
  7476  00281E  1A10               	xorwf	___flge@ff1+1,f,c
  7477  002820  0E00               	movlw	0
  7478  002822  1A11               	xorwf	___flge@ff1+2,f,c
  7479  002824  0E80               	movlw	128
  7480  002826  1A12               	xorwf	___flge@ff1+3,f,c
  7481  002828  0E00               	movlw	0
  7482  00282A  1A13               	xorwf	___flge@ff2,f,c
  7483  00282C  0E00               	movlw	0
  7484  00282E  1A14               	xorwf	___flge@ff2+1,f,c
  7485  002830  0E00               	movlw	0
  7486  002832  1A15               	xorwf	___flge@ff2+2,f,c
  7487  002834  0E80               	movlw	128
  7488  002836  1A16               	xorwf	___flge@ff2+3,f,c
  7489  002838  5013               	movf	___flge@ff2,w,c
  7490  00283A  5C0F               	subwf	___flge@ff1,w,c
  7491  00283C  5014               	movf	___flge@ff2+1,w,c
  7492  00283E  5810               	subwfb	___flge@ff1+1,w,c
  7493  002840  5015               	movf	___flge@ff2+2,w,c
  7494  002842  5811               	subwfb	___flge@ff1+2,w,c
  7495  002844  5016               	movf	___flge@ff2+3,w,c
  7496  002846  5812               	subwfb	___flge@ff1+3,w,c
  7497  002848  B0D8               	btfsc	status,0,c
  7498  00284A  D002               	goto	l3495
  7499  00284C  90D8               	bcf	status,0,c
  7500  00284E  0012               	return	
  7501  002850                     l3495:
  7502  002850  80D8               	bsf	status,0,c
  7503  002852  0012               	return	
  7504  002854                     __end_of___flge:
  7505                           	opt stack 0
  7506                           tblptru	equ	0xFF8
  7507                           tblptrh	equ	0xFF7
  7508                           tblptrl	equ	0xFF6
  7509                           tablat	equ	0xFF5
  7510                           prodh	equ	0xFF4
  7511                           prodl	equ	0xFF3
  7512                           intcon	equ	0xFF2
  7513                           postinc0	equ	0xFEE
  7514                           wreg	equ	0xFE8
  7515                           indf1	equ	0xFE7
  7516                           postdec1	equ	0xFE5
  7517                           plusw1	equ	0xFE3
  7518                           fsr1h	equ	0xFE2
  7519                           fsr1l	equ	0xFE1
  7520                           indf2	equ	0xFDF
  7521                           postinc2	equ	0xFDE
  7522                           plusw2	equ	0xFDB
  7523                           fsr2h	equ	0xFDA
  7524                           fsr2l	equ	0xFD9
  7525                           status	equ	0xFD8
  7526                           
  7527 ;; *************** function _read_adc *****************
  7528 ;; Defined at:
  7529 ;;		line 178 in file "tester.c"
  7530 ;; Parameters:    Size  Location     Type
  7531 ;;		None
  7532 ;; Auto vars:     Size  Location     Type
  7533 ;;  i               1   65[COMRAM] unsigned char 
  7534 ;; Return value:  Size  Location     Type
  7535 ;;		None               void
  7536 ;; Registers used:
  7537 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7538 ;; Tracked objects:
  7539 ;;		On entry : 0/0
  7540 ;;		On exit  : 0/0
  7541 ;;		Unchanged: 0/0
  7542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7543 ;;      Params:         0       0       0       0       0       0       0       0       0
  7544 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7545 ;;      Temps:          0       8       0       0       0       0       0       0       0
  7546 ;;      Totals:         1       8       0       0       0       0       0       0       0
  7547 ;;Total ram usage:        9 bytes
  7548 ;; Hardware stack levels used:    1
  7549 ;; Hardware stack levels required when called:    3
  7550 ;; This function calls:
  7551 ;;		___fldiv
  7552 ;;		___flmul
  7553 ;;		___xxtofl
  7554 ;;		_delay_ms
  7555 ;; This function is called by:
  7556 ;;		_main
  7557 ;;		_scarica
  7558 ;;		_ricarica
  7559 ;; This function uses a non-reentrant model
  7560 ;;
  7561                           
  7562                           	psect	text25
  7563  001BDA                     __ptext25:
  7564                           	opt stack 0
  7565  001BDA                     _read_adc:
  7566                           	opt stack 26
  7567                           
  7568                           ;tester.c: 179: for (char i = 0; i < 3; i++) {
  7569                           
  7570                           ;incstack = 0
  7571  001BDA  0E00               	movlw	0
  7572  001BDC  6E42               	movwf	read_adc@i,c
  7573  001BDE                     l4591:
  7574  001BDE  0E02               	movlw	2
  7575  001BE0  6442               	cpfsgt	read_adc@i,c
  7576  001BE2  D001               	goto	l4595
  7577  001BE4  D064               	goto	l4607
  7578  001BE6                     l4595:
  7579                           
  7580                           ;tester.c: 180: ADCON0 = combinazioni[i];
  7581  001BE6  5042               	movf	read_adc@i,w,c
  7582  001BE8  0D01               	mullw	1
  7583  001BEA  0E4D               	movlw	low _combinazioni
  7584  001BEC  24F3               	addwf	prodl,w,c
  7585  001BEE  6ED9               	movwf	fsr2l,c
  7586  001BF0  0E00               	movlw	high _combinazioni
  7587  001BF2  20F4               	addwfc	prodh,w,c
  7588  001BF4  6EDA               	movwf	fsr2h,c
  7589  001BF6  50DF               	movf	indf2,w,c
  7590  001BF8  6EC2               	movwf	4034,c	;volatile
  7591                           
  7592                           ;tester.c: 181: ADCON0bits.GO = 1;
  7593  001BFA  82C2               	bsf	4034,1,c	;volatile
  7594  001BFC                     l211:
  7595  001BFC  B2C2               	btfsc	4034,1,c	;volatile
  7596  001BFE  D7FE               	goto	l211
  7597                           
  7598                           ;tester.c: 183: lettura [i] = ADRESH;
  7599  001C00  CFC4 F06D          	movff	4036,??_read_adc	;volatile
  7600  001C04  0100               	movlb	0	; () banked
  7601  001C06  6B6E               	clrf	(??_read_adc+1)& (0+255),b
  7602  001C08  6B6F               	clrf	(??_read_adc+2)& (0+255),b
  7603  001C0A  6B70               	clrf	(??_read_adc+3)& (0+255),b
  7604  001C0C  5042               	movf	read_adc@i,w,c
  7605  001C0E  0D04               	mullw	4
  7606  001C10  0EA7               	movlw	low _lettura
  7607  001C12  24F3               	addwf	prodl,w,c
  7608  001C14  6ED9               	movwf	fsr2l,c
  7609  001C16  0E00               	movlw	high _lettura
  7610  001C18  20F4               	addwfc	prodh,w,c
  7611  001C1A  6EDA               	movwf	fsr2h,c
  7612  001C1C  C06D  FFDE         	movff	??_read_adc,postinc2
  7613  001C20  C06E  FFDE         	movff	??_read_adc+1,postinc2
  7614  001C24  C06F  FFDE         	movff	??_read_adc+2,postinc2
  7615  001C28  C070  FFDE         	movff	??_read_adc+3,postinc2
  7616                           
  7617                           ;tester.c: 184: lettura [i] = ((lettura[i] << 8) | ADRESL);
  7618  001C2C  5042               	movf	read_adc@i,w,c
  7619  001C2E  0D04               	mullw	4
  7620  001C30  0EA7               	movlw	low _lettura
  7621  001C32  24F3               	addwf	prodl,w,c
  7622  001C34  6ED9               	movwf	fsr2l,c
  7623  001C36  0E00               	movlw	high _lettura
  7624  001C38  20F4               	addwfc	prodh,w,c
  7625  001C3A  6EDA               	movwf	fsr2h,c
  7626  001C3C  CFDE F06D          	movff	postinc2,??_read_adc
  7627  001C40  CFDE F06E          	movff	postinc2,??_read_adc+1
  7628  001C44  CFDE F06F          	movff	postinc2,??_read_adc+2
  7629  001C48  CFDE F070          	movff	postinc2,??_read_adc+3
  7630  001C4C  C06F  F070         	movff	??_read_adc+2,??_read_adc+3
  7631  001C50  C06E  F06F         	movff	??_read_adc+1,??_read_adc+2
  7632  001C54  C06D  F06E         	movff	??_read_adc,??_read_adc+1
  7633  001C58  0100               	movlb	0	; () banked
  7634  001C5A  6B6D               	clrf	??_read_adc& (0+255),b
  7635  001C5C  50C3               	movf	4035,w,c	;volatile
  7636  001C5E  0100               	movlb	0	; () banked
  7637  001C60  116D               	iorwf	??_read_adc& (0+255),w,b
  7638  001C62  0100               	movlb	0	; () banked
  7639  001C64  6F71               	movwf	(??_read_adc+4)& (0+255),b
  7640  001C66  0100               	movlb	0	; () banked
  7641  001C68  516E               	movf	(??_read_adc+1)& (0+255),w,b
  7642  001C6A  0100               	movlb	0	; () banked
  7643  001C6C  6F72               	movwf	(??_read_adc+5)& (0+255),b
  7644  001C6E  0100               	movlb	0	; () banked
  7645  001C70  516F               	movf	(??_read_adc+2)& (0+255),w,b
  7646  001C72  0100               	movlb	0	; () banked
  7647  001C74  6F73               	movwf	(??_read_adc+6)& (0+255),b
  7648  001C76  0100               	movlb	0	; () banked
  7649  001C78  5170               	movf	(??_read_adc+3)& (0+255),w,b
  7650  001C7A  0100               	movlb	0	; () banked
  7651  001C7C  6F74               	movwf	(??_read_adc+7)& (0+255),b
  7652  001C7E  5042               	movf	read_adc@i,w,c
  7653  001C80  0D04               	mullw	4
  7654  001C82  0EA7               	movlw	low _lettura
  7655  001C84  24F3               	addwf	prodl,w,c
  7656  001C86  6ED9               	movwf	fsr2l,c
  7657  001C88  0E00               	movlw	high _lettura
  7658  001C8A  20F4               	addwfc	prodh,w,c
  7659  001C8C  6EDA               	movwf	fsr2h,c
  7660  001C8E  C071  FFDE         	movff	??_read_adc+4,postinc2
  7661  001C92  C072  FFDE         	movff	??_read_adc+5,postinc2
  7662  001C96  C073  FFDE         	movff	??_read_adc+6,postinc2
  7663  001C9A  C074  FFDE         	movff	??_read_adc+7,postinc2
  7664                           
  7665                           ; BSR set to: 0
  7666                           ;tester.c: 185: delay_ms(5);
  7667  001C9E  0E00               	movlw	0
  7668  001CA0  6E16               	movwf	delay_ms@value_ms+1,c
  7669  001CA2  0E05               	movlw	5
  7670  001CA4  6E15               	movwf	delay_ms@value_ms,c
  7671  001CA6  ECA9  F018         	call	_delay_ms	;wreg free
  7672  001CAA  2A42               	incf	read_adc@i,f,c
  7673  001CAC  D798               	goto	l4591
  7674  001CAE                     l4607:
  7675                           
  7676                           ;tester.c: 186: }
  7677                           ;tester.c: 187: current = (lettura[0] - lettura[1]);
  7678  001CAE  C0AB  F06D         	movff	_lettura+4,??_read_adc
  7679  001CB2  C0AC  F06E         	movff	_lettura+5,??_read_adc+1
  7680  001CB6  C0AD  F06F         	movff	_lettura+6,??_read_adc+2
  7681  001CBA  C0AE  F070         	movff	_lettura+7,??_read_adc+3
  7682  001CBE  0100               	movlb	0	; () banked
  7683  001CC0  1F6D               	comf	??_read_adc& (0+255),f,b
  7684  001CC2  1F6E               	comf	(??_read_adc+1)& (0+255),f,b
  7685  001CC4  1F6F               	comf	(??_read_adc+2)& (0+255),f,b
  7686  001CC6  1F70               	comf	(??_read_adc+3)& (0+255),f,b
  7687  001CC8  2B6D               	incf	??_read_adc& (0+255),f,b
  7688  001CCA  0E00               	movlw	0
  7689  001CCC  236E               	addwfc	(??_read_adc+1)& (0+255),f,b
  7690  001CCE  236F               	addwfc	(??_read_adc+2)& (0+255),f,b
  7691  001CD0  2370               	addwfc	(??_read_adc+3)& (0+255),f,b
  7692  001CD2  0100               	movlb	0	; () banked
  7693  001CD4  51A7               	movf	_lettura& (0+255),w,b
  7694  001CD6  0100               	movlb	0	; () banked
  7695  001CD8  256D               	addwf	??_read_adc& (0+255),w,b
  7696  001CDA  6E15               	movwf	___xxtofl@val,c
  7697  001CDC  0100               	movlb	0	; () banked
  7698  001CDE  51A8               	movf	(_lettura+1)& (0+255),w,b
  7699  001CE0  0100               	movlb	0	; () banked
  7700  001CE2  216E               	addwfc	(??_read_adc+1)& (0+255),w,b
  7701  001CE4  6E16               	movwf	___xxtofl@val+1,c
  7702  001CE6  0100               	movlb	0	; () banked
  7703  001CE8  51A9               	movf	(_lettura+2)& (0+255),w,b
  7704  001CEA  0100               	movlb	0	; () banked
  7705  001CEC  216F               	addwfc	(??_read_adc+2)& (0+255),w,b
  7706  001CEE  6E17               	movwf	___xxtofl@val+2,c
  7707  001CF0  0100               	movlb	0	; () banked
  7708  001CF2  51AA               	movf	(_lettura+3)& (0+255),w,b
  7709  001CF4  0100               	movlb	0	; () banked
  7710  001CF6  2170               	addwfc	(??_read_adc+3)& (0+255),w,b
  7711  001CF8  6E18               	movwf	___xxtofl@val+3,c
  7712  001CFA  0E01               	movlw	1
  7713  001CFC  EC26  F011         	call	___xxtofl
  7714  001D00  C015  F0B9         	movff	?___xxtofl,_current
  7715  001D04  C016  F0BA         	movff	?___xxtofl+1,_current+1
  7716  001D08  C017  F0BB         	movff	?___xxtofl+2,_current+2
  7717  001D0C  C018  F0BC         	movff	?___xxtofl+3,_current+3
  7718                           
  7719                           ;tester.c: 188: current = (current * 5);
  7720  001D10  C0B9  F01D         	movff	_current,___flmul@b
  7721  001D14  C0BA  F01E         	movff	_current+1,___flmul@b+1
  7722  001D18  C0BB  F01F         	movff	_current+2,___flmul@b+2
  7723  001D1C  C0BC  F020         	movff	_current+3,___flmul@b+3
  7724  001D20  0E00               	movlw	0
  7725  001D22  6E21               	movwf	___flmul@a,c
  7726  001D24  0E00               	movlw	0
  7727  001D26  6E22               	movwf	___flmul@a+1,c
  7728  001D28  0EA0               	movlw	160
  7729  001D2A  6E23               	movwf	___flmul@a+2,c
  7730  001D2C  0E40               	movlw	64
  7731  001D2E  6E24               	movwf	___flmul@a+3,c
  7732  001D30  ECA7  F00A         	call	___flmul	;wreg free
  7733  001D34  C01D  F0B9         	movff	?___flmul,_current
  7734  001D38  C01E  F0BA         	movff	?___flmul+1,_current+1
  7735  001D3C  C01F  F0BB         	movff	?___flmul+2,_current+2
  7736  001D40  C020  F0BC         	movff	?___flmul+3,_current+3
  7737                           
  7738                           ;tester.c: 189: current = current / 1024;
  7739  001D44  C0B9  F036         	movff	_current,___fldiv@b
  7740  001D48  C0BA  F037         	movff	_current+1,___fldiv@b+1
  7741  001D4C  C0BB  F038         	movff	_current+2,___fldiv@b+2
  7742  001D50  C0BC  F039         	movff	_current+3,___fldiv@b+3
  7743  001D54  0E00               	movlw	0
  7744  001D56  6E3A               	movwf	___fldiv@a,c
  7745  001D58  0E00               	movlw	0
  7746  001D5A  6E3B               	movwf	___fldiv@a+1,c
  7747  001D5C  0E80               	movlw	128
  7748  001D5E  6E3C               	movwf	___fldiv@a+2,c
  7749  001D60  0E44               	movlw	68
  7750  001D62  6E3D               	movwf	___fldiv@a+3,c
  7751  001D64  EC4F  F00C         	call	___fldiv	;wreg free
  7752  001D68  C036  F0B9         	movff	?___fldiv,_current
  7753  001D6C  C037  F0BA         	movff	?___fldiv+1,_current+1
  7754  001D70  C038  F0BB         	movff	?___fldiv+2,_current+2
  7755  001D74  C039  F0BC         	movff	?___fldiv+3,_current+3
  7756                           
  7757                           ;tester.c: 190: current = current / 0.200;
  7758  001D78  C0B9  F036         	movff	_current,___fldiv@b
  7759  001D7C  C0BA  F037         	movff	_current+1,___fldiv@b+1
  7760  001D80  C0BB  F038         	movff	_current+2,___fldiv@b+2
  7761  001D84  C0BC  F039         	movff	_current+3,___fldiv@b+3
  7762  001D88  0ECD               	movlw	205
  7763  001D8A  6E3A               	movwf	___fldiv@a,c
  7764  001D8C  0ECC               	movlw	204
  7765  001D8E  6E3B               	movwf	___fldiv@a+1,c
  7766  001D90  0E4C               	movlw	76
  7767  001D92  6E3C               	movwf	___fldiv@a+2,c
  7768  001D94  0E3E               	movlw	62
  7769  001D96  6E3D               	movwf	___fldiv@a+3,c
  7770  001D98  EC4F  F00C         	call	___fldiv	;wreg free
  7771  001D9C  C036  F0B9         	movff	?___fldiv,_current
  7772  001DA0  C037  F0BA         	movff	?___fldiv+1,_current+1
  7773  001DA4  C038  F0BB         	movff	?___fldiv+2,_current+2
  7774  001DA8  C039  F0BC         	movff	?___fldiv+3,_current+3
  7775                           
  7776                           ;tester.c: 191: voltage = (lettura[2]);
  7777  001DAC  C0AF  F015         	movff	_lettura+8,___xxtofl@val
  7778  001DB0  C0B0  F016         	movff	_lettura+9,___xxtofl@val+1
  7779  001DB4  C0B1  F017         	movff	_lettura+10,___xxtofl@val+2
  7780  001DB8  C0B2  F018         	movff	_lettura+11,___xxtofl@val+3
  7781  001DBC  0E01               	movlw	1
  7782  001DBE  EC26  F011         	call	___xxtofl
  7783  001DC2  C015  F049         	movff	?___xxtofl,_voltage
  7784  001DC6  C016  F04A         	movff	?___xxtofl+1,_voltage+1
  7785  001DCA  C017  F04B         	movff	?___xxtofl+2,_voltage+2
  7786  001DCE  C018  F04C         	movff	?___xxtofl+3,_voltage+3
  7787                           
  7788                           ;tester.c: 192: voltage = (voltage * 5) / 1024;
  7789  001DD2  0E00               	movlw	0
  7790  001DD4  6E21               	movwf	___flmul@a,c
  7791  001DD6  0E00               	movlw	0
  7792  001DD8  6E22               	movwf	___flmul@a+1,c
  7793  001DDA  0EA0               	movlw	160
  7794  001DDC  6E23               	movwf	___flmul@a+2,c
  7795  001DDE  0E40               	movlw	64
  7796  001DE0  6E24               	movwf	___flmul@a+3,c
  7797  001DE2  C049  F01D         	movff	_voltage,___flmul@b
  7798  001DE6  C04A  F01E         	movff	_voltage+1,___flmul@b+1
  7799  001DEA  C04B  F01F         	movff	_voltage+2,___flmul@b+2
  7800  001DEE  C04C  F020         	movff	_voltage+3,___flmul@b+3
  7801  001DF2  ECA7  F00A         	call	___flmul	;wreg free
  7802  001DF6  C01D  F036         	movff	?___flmul,___fldiv@b
  7803  001DFA  C01E  F037         	movff	?___flmul+1,___fldiv@b+1
  7804  001DFE  C01F  F038         	movff	?___flmul+2,___fldiv@b+2
  7805  001E02  C020  F039         	movff	?___flmul+3,___fldiv@b+3
  7806  001E06  0E00               	movlw	0
  7807  001E08  6E3A               	movwf	___fldiv@a,c
  7808  001E0A  0E00               	movlw	0
  7809  001E0C  6E3B               	movwf	___fldiv@a+1,c
  7810  001E0E  0E80               	movlw	128
  7811  001E10  6E3C               	movwf	___fldiv@a+2,c
  7812  001E12  0E44               	movlw	68
  7813  001E14  6E3D               	movwf	___fldiv@a+3,c
  7814  001E16  EC4F  F00C         	call	___fldiv	;wreg free
  7815  001E1A  C036  F049         	movff	?___fldiv,_voltage
  7816  001E1E  C037  F04A         	movff	?___fldiv+1,_voltage+1
  7817  001E22  C038  F04B         	movff	?___fldiv+2,_voltage+2
  7818  001E26  C039  F04C         	movff	?___fldiv+3,_voltage+3
  7819                           
  7820                           ;tester.c: 193: voltage = voltage / rapporto;
  7821  001E2A  C049  F036         	movff	_voltage,___fldiv@b
  7822  001E2E  C04A  F037         	movff	_voltage+1,___fldiv@b+1
  7823  001E32  C04B  F038         	movff	_voltage+2,___fldiv@b+2
  7824  001E36  C04C  F039         	movff	_voltage+3,___fldiv@b+3
  7825  001E3A  C045  F03A         	movff	_rapporto,___fldiv@a
  7826  001E3E  C046  F03B         	movff	_rapporto+1,___fldiv@a+1
  7827  001E42  C047  F03C         	movff	_rapporto+2,___fldiv@a+2
  7828  001E46  C048  F03D         	movff	_rapporto+3,___fldiv@a+3
  7829  001E4A  EC4F  F00C         	call	___fldiv	;wreg free
  7830  001E4E  C036  F049         	movff	?___fldiv,_voltage
  7831  001E52  C037  F04A         	movff	?___fldiv+1,_voltage+1
  7832  001E56  C038  F04B         	movff	?___fldiv+2,_voltage+2
  7833  001E5A  C039  F04C         	movff	?___fldiv+3,_voltage+3
  7834  001E5E  0012               	return		;funcret
  7835  001E60                     __end_of_read_adc:
  7836                           	opt stack 0
  7837                           tblptru	equ	0xFF8
  7838                           tblptrh	equ	0xFF7
  7839                           tblptrl	equ	0xFF6
  7840                           tablat	equ	0xFF5
  7841                           prodh	equ	0xFF4
  7842                           prodl	equ	0xFF3
  7843                           intcon	equ	0xFF2
  7844                           postinc0	equ	0xFEE
  7845                           wreg	equ	0xFE8
  7846                           indf1	equ	0xFE7
  7847                           postdec1	equ	0xFE5
  7848                           plusw1	equ	0xFE3
  7849                           fsr1h	equ	0xFE2
  7850                           fsr1l	equ	0xFE1
  7851                           indf2	equ	0xFDF
  7852                           postinc2	equ	0xFDE
  7853                           plusw2	equ	0xFDB
  7854                           fsr2h	equ	0xFDA
  7855                           fsr2l	equ	0xFD9
  7856                           status	equ	0xFD8
  7857                           
  7858 ;; *************** function ___xxtofl *****************
  7859 ;; Defined at:
  7860 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\xxtofl.c"
  7861 ;; Parameters:    Size  Location     Type
  7862 ;;  sign            1    wreg     unsigned char 
  7863 ;;  val             4   20[COMRAM] long 
  7864 ;; Auto vars:     Size  Location     Type
  7865 ;;  sign            1   28[COMRAM] unsigned char 
  7866 ;;  arg             4   30[COMRAM] unsigned long 
  7867 ;;  exp             1   29[COMRAM] unsigned char 
  7868 ;; Return value:  Size  Location     Type
  7869 ;;                  4   20[COMRAM] unsigned char 
  7870 ;; Registers used:
  7871 ;;		wreg, status,2, status,0
  7872 ;; Tracked objects:
  7873 ;;		On entry : 0/0
  7874 ;;		On exit  : 0/0
  7875 ;;		Unchanged: 0/0
  7876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7877 ;;      Params:         4       0       0       0       0       0       0       0       0
  7878 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7879 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7880 ;;      Totals:        14       0       0       0       0       0       0       0       0
  7881 ;;Total ram usage:       14 bytes
  7882 ;; Hardware stack levels used:    1
  7883 ;; Hardware stack levels required when called:    1
  7884 ;; This function calls:
  7885 ;;		Nothing
  7886 ;; This function is called by:
  7887 ;;		_scarica
  7888 ;;		_read_adc
  7889 ;;		_sprintf
  7890 ;; This function uses a non-reentrant model
  7891 ;;
  7892                           
  7893                           	psect	text26
  7894  00224C                     __ptext26:
  7895                           	opt stack 0
  7896  00224C                     ___xxtofl:
  7897                           	opt stack 27
  7898                           
  7899                           ;incstack = 0
  7900                           ;___xxtofl@sign stored from wreg
  7901  00224C  6E1D               	movwf	___xxtofl@sign,c
  7902  00224E  501D               	movf	___xxtofl@sign,w,c
  7903  002250  A4D8               	btfss	status,2,c
  7904  002252  AE18               	btfss	___xxtofl@val+3,7,c
  7905  002254  D01A               	goto	l915
  7906  002256  C015  F019         	movff	___xxtofl@val,??___xxtofl
  7907  00225A  C016  F01A         	movff	___xxtofl@val+1,??___xxtofl+1
  7908  00225E  C017  F01B         	movff	___xxtofl@val+2,??___xxtofl+2
  7909  002262  C018  F01C         	movff	___xxtofl@val+3,??___xxtofl+3
  7910  002266  1E19               	comf	??___xxtofl,f,c
  7911  002268  1E1A               	comf	??___xxtofl+1,f,c
  7912  00226A  1E1B               	comf	??___xxtofl+2,f,c
  7913  00226C  1E1C               	comf	??___xxtofl+3,f,c
  7914  00226E  2A19               	incf	??___xxtofl,f,c
  7915  002270  0E00               	movlw	0
  7916  002272  221A               	addwfc	??___xxtofl+1,f,c
  7917  002274  221B               	addwfc	??___xxtofl+2,f,c
  7918  002276  221C               	addwfc	??___xxtofl+3,f,c
  7919  002278  C019  F01F         	movff	??___xxtofl,___xxtofl@arg
  7920  00227C  C01A  F020         	movff	??___xxtofl+1,___xxtofl@arg+1
  7921  002280  C01B  F021         	movff	??___xxtofl+2,___xxtofl@arg+2
  7922  002284  C01C  F022         	movff	??___xxtofl+3,___xxtofl@arg+3
  7923  002288  D008               	goto	l3595
  7924  00228A                     l915:
  7925  00228A  C015  F01F         	movff	___xxtofl@val,___xxtofl@arg
  7926  00228E  C016  F020         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7927  002292  C017  F021         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7928  002296  C018  F022         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7929  00229A                     l3595:
  7930  00229A  5015               	movf	___xxtofl@val,w,c
  7931  00229C  1016               	iorwf	___xxtofl@val+1,w,c
  7932  00229E  1017               	iorwf	___xxtofl@val+2,w,c
  7933  0022A0  1018               	iorwf	___xxtofl@val+3,w,c
  7934  0022A2  A4D8               	btfss	status,2,c
  7935  0022A4  D009               	goto	l3601
  7936  0022A6  0E00               	movlw	0
  7937  0022A8  6E15               	movwf	?___xxtofl,c
  7938  0022AA  0E00               	movlw	0
  7939  0022AC  6E16               	movwf	?___xxtofl+1,c
  7940  0022AE  0E00               	movlw	0
  7941  0022B0  6E17               	movwf	?___xxtofl+2,c
  7942  0022B2  0E00               	movlw	0
  7943  0022B4  6E18               	movwf	?___xxtofl+3,c
  7944  0022B6  0012               	return	
  7945  0022B8                     l3601:
  7946  0022B8  0E96               	movlw	150
  7947  0022BA  6E1E               	movwf	___xxtofl@exp,c
  7948  0022BC  D006               	goto	l3605
  7949  0022BE                     l3603:
  7950  0022BE  2A1E               	incf	___xxtofl@exp,f,c
  7951  0022C0  90D8               	bcf	status,0,c
  7952  0022C2  3222               	rrcf	___xxtofl@arg+3,f,c
  7953  0022C4  3221               	rrcf	___xxtofl@arg+2,f,c
  7954  0022C6  3220               	rrcf	___xxtofl@arg+1,f,c
  7955  0022C8  321F               	rrcf	___xxtofl@arg,f,c
  7956  0022CA                     l3605:
  7957  0022CA  0E00               	movlw	0
  7958  0022CC  141F               	andwf	___xxtofl@arg,w,c
  7959  0022CE  6E19               	movwf	??___xxtofl& (0+255),c
  7960  0022D0  0E00               	movlw	0
  7961  0022D2  1420               	andwf	___xxtofl@arg+1,w,c
  7962  0022D4  6E1A               	movwf	(??___xxtofl+1)& (0+255),c
  7963  0022D6  0E00               	movlw	0
  7964  0022D8  1421               	andwf	___xxtofl@arg+2,w,c
  7965  0022DA  6E1B               	movwf	(??___xxtofl+2)& (0+255),c
  7966  0022DC  0EFE               	movlw	254
  7967  0022DE  1422               	andwf	___xxtofl@arg+3,w,c
  7968  0022E0  6E1C               	movwf	(??___xxtofl+3)& (0+255),c
  7969  0022E2  5019               	movf	??___xxtofl,w,c
  7970  0022E4  101A               	iorwf	??___xxtofl+1,w,c
  7971  0022E6  101B               	iorwf	??___xxtofl+2,w,c
  7972  0022E8  101C               	iorwf	??___xxtofl+3,w,c
  7973  0022EA  B4D8               	btfsc	status,2,c
  7974  0022EC  D00D               	goto	l922
  7975  0022EE  D7E7               	goto	l3603
  7976  0022F0                     l3607:
  7977  0022F0  2A1E               	incf	___xxtofl@exp,f,c
  7978  0022F2  0E01               	movlw	1
  7979  0022F4  261F               	addwf	___xxtofl@arg,f,c
  7980  0022F6  0E00               	movlw	0
  7981  0022F8  2220               	addwfc	___xxtofl@arg+1,f,c
  7982  0022FA  2221               	addwfc	___xxtofl@arg+2,f,c
  7983  0022FC  2222               	addwfc	___xxtofl@arg+3,f,c
  7984  0022FE  90D8               	bcf	status,0,c
  7985  002300  3222               	rrcf	___xxtofl@arg+3,f,c
  7986  002302  3221               	rrcf	___xxtofl@arg+2,f,c
  7987  002304  3220               	rrcf	___xxtofl@arg+1,f,c
  7988  002306  321F               	rrcf	___xxtofl@arg,f,c
  7989  002308                     l922:
  7990  002308  0E00               	movlw	0
  7991  00230A  141F               	andwf	___xxtofl@arg,w,c
  7992  00230C  6E19               	movwf	??___xxtofl& (0+255),c
  7993  00230E  0E00               	movlw	0
  7994  002310  1420               	andwf	___xxtofl@arg+1,w,c
  7995  002312  6E1A               	movwf	(??___xxtofl+1)& (0+255),c
  7996  002314  0E00               	movlw	0
  7997  002316  1421               	andwf	___xxtofl@arg+2,w,c
  7998  002318  6E1B               	movwf	(??___xxtofl+2)& (0+255),c
  7999  00231A  0EFF               	movlw	255
  8000  00231C  1422               	andwf	___xxtofl@arg+3,w,c
  8001  00231E  6E1C               	movwf	(??___xxtofl+3)& (0+255),c
  8002  002320  5019               	movf	??___xxtofl,w,c
  8003  002322  101A               	iorwf	??___xxtofl+1,w,c
  8004  002324  101B               	iorwf	??___xxtofl+2,w,c
  8005  002326  101C               	iorwf	??___xxtofl+3,w,c
  8006  002328  B4D8               	btfsc	status,2,c
  8007  00232A  D007               	goto	l3615
  8008  00232C  D7E1               	goto	l3607
  8009  00232E                     l3613:
  8010  00232E  061E               	decf	___xxtofl@exp,f,c
  8011  002330  90D8               	bcf	status,0,c
  8012  002332  361F               	rlcf	___xxtofl@arg,f,c
  8013  002334  3620               	rlcf	___xxtofl@arg+1,f,c
  8014  002336  3621               	rlcf	___xxtofl@arg+2,f,c
  8015  002338  3622               	rlcf	___xxtofl@arg+3,f,c
  8016  00233A                     l3615:
  8017  00233A  BE21               	btfsc	___xxtofl@arg+2,7,c
  8018  00233C  D003               	goto	l929
  8019  00233E  0E02               	movlw	2
  8020  002340  601E               	cpfslt	___xxtofl@exp,c
  8021  002342  D7F5               	goto	l3613
  8022  002344                     l929:
  8023  002344  B01E               	btfsc	___xxtofl@exp,0,c
  8024  002346  D008               	goto	l930
  8025  002348  0EFF               	movlw	255
  8026  00234A  161F               	andwf	___xxtofl@arg,f,c
  8027  00234C  0EFF               	movlw	255
  8028  00234E  1620               	andwf	___xxtofl@arg+1,f,c
  8029  002350  0E7F               	movlw	127
  8030  002352  1621               	andwf	___xxtofl@arg+2,f,c
  8031  002354  0EFF               	movlw	255
  8032  002356  1622               	andwf	___xxtofl@arg+3,f,c
  8033  002358                     l930:
  8034  002358  90D8               	bcf	status,0,c
  8035  00235A  321E               	rrcf	___xxtofl@exp,f,c
  8036  00235C  C01E  F019         	movff	___xxtofl@exp,??___xxtofl
  8037  002360  6A1A               	clrf	(??___xxtofl+1)& (0+255),c
  8038  002362  6A1B               	clrf	(??___xxtofl+2)& (0+255),c
  8039  002364  6A1C               	clrf	(??___xxtofl+3)& (0+255),c
  8040  002366  C019  F01C         	movff	??___xxtofl,??___xxtofl+3
  8041  00236A  6A1B               	clrf	??___xxtofl+2,c
  8042  00236C  6A1A               	clrf	??___xxtofl+1,c
  8043  00236E  6A19               	clrf	??___xxtofl,c
  8044  002370  5019               	movf	??___xxtofl,w,c
  8045  002372  121F               	iorwf	___xxtofl@arg,f,c
  8046  002374  501A               	movf	??___xxtofl+1,w,c
  8047  002376  1220               	iorwf	___xxtofl@arg+1,f,c
  8048  002378  501B               	movf	??___xxtofl+2,w,c
  8049  00237A  1221               	iorwf	___xxtofl@arg+2,f,c
  8050  00237C  501C               	movf	??___xxtofl+3,w,c
  8051  00237E  1222               	iorwf	___xxtofl@arg+3,f,c
  8052  002380  501D               	movf	___xxtofl@sign,w,c
  8053  002382  A4D8               	btfss	status,2,c
  8054  002384  AE18               	btfss	___xxtofl@val+3,7,c
  8055  002386  D001               	goto	l3627
  8056  002388  8E22               	bsf	___xxtofl@arg+3,7,c
  8057  00238A                     l3627:
  8058  00238A  C01F  F015         	movff	___xxtofl@arg,?___xxtofl
  8059  00238E  C020  F016         	movff	___xxtofl@arg+1,?___xxtofl+1
  8060  002392  C021  F017         	movff	___xxtofl@arg+2,?___xxtofl+2
  8061  002396  C022  F018         	movff	___xxtofl@arg+3,?___xxtofl+3
  8062  00239A  0012               	return	
  8063  00239C                     __end_of___xxtofl:
  8064                           	opt stack 0
  8065                           tblptru	equ	0xFF8
  8066                           tblptrh	equ	0xFF7
  8067                           tblptrl	equ	0xFF6
  8068                           tablat	equ	0xFF5
  8069                           prodh	equ	0xFF4
  8070                           prodl	equ	0xFF3
  8071                           intcon	equ	0xFF2
  8072                           postinc0	equ	0xFEE
  8073                           wreg	equ	0xFE8
  8074                           indf1	equ	0xFE7
  8075                           postdec1	equ	0xFE5
  8076                           plusw1	equ	0xFE3
  8077                           fsr1h	equ	0xFE2
  8078                           fsr1l	equ	0xFE1
  8079                           indf2	equ	0xFDF
  8080                           postinc2	equ	0xFDE
  8081                           plusw2	equ	0xFDB
  8082                           fsr2h	equ	0xFDA
  8083                           fsr2l	equ	0xFD9
  8084                           status	equ	0xFD8
  8085                           
  8086 ;; *************** function ___flmul *****************
  8087 ;; Defined at:
  8088 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcmul.c"
  8089 ;; Parameters:    Size  Location     Type
  8090 ;;  b               4   28[COMRAM] unsigned char 
  8091 ;;  a               4   32[COMRAM] unsigned char 
  8092 ;; Auto vars:     Size  Location     Type
  8093 ;;  prod            4   47[COMRAM] struct .
  8094 ;;  grs             4   41[COMRAM] unsigned long 
  8095 ;;  temp            2   51[COMRAM] struct .
  8096 ;;  bexp            1   46[COMRAM] unsigned char 
  8097 ;;  aexp            1   45[COMRAM] unsigned char 
  8098 ;;  sign            1   40[COMRAM] unsigned char 
  8099 ;; Return value:  Size  Location     Type
  8100 ;;                  4   28[COMRAM] unsigned char 
  8101 ;; Registers used:
  8102 ;;		wreg, status,2, status,0, prodl, prodh
  8103 ;; Tracked objects:
  8104 ;;		On entry : 0/0
  8105 ;;		On exit  : 0/0
  8106 ;;		Unchanged: 0/0
  8107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8108 ;;      Params:         8       0       0       0       0       0       0       0       0
  8109 ;;      Locals:        13       0       0       0       0       0       0       0       0
  8110 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8111 ;;      Totals:        25       0       0       0       0       0       0       0       0
  8112 ;;Total ram usage:       25 bytes
  8113 ;; Hardware stack levels used:    1
  8114 ;; Hardware stack levels required when called:    1
  8115 ;; This function calls:
  8116 ;;		Nothing
  8117 ;; This function is called by:
  8118 ;;		_read_adc
  8119 ;;		_fround
  8120 ;;		_scale
  8121 ;;		_sprintf
  8122 ;; This function uses a non-reentrant model
  8123 ;;
  8124                           
  8125                           	psect	text27
  8126  00154E                     __ptext27:
  8127                           	opt stack 0
  8128  00154E                     ___flmul:
  8129                           	opt stack 26
  8130                           
  8131                           ;incstack = 0
  8132  00154E  5020               	movf	___flmul@b+3,w,c
  8133  001550  0B80               	andlw	128
  8134  001552  6E29               	movwf	___flmul@sign,c
  8135  001554  5020               	movf	___flmul@b+3,w,c
  8136  001556  2420               	addwf	___flmul@b+3,w,c
  8137  001558  6E2F               	movwf	___flmul@bexp,c
  8138  00155A  BE1F               	btfsc	___flmul@b+2,7,c
  8139  00155C  802F               	bsf	___flmul@bexp,0,c
  8140  00155E  502F               	movf	___flmul@bexp,w,c
  8141  001560  B4D8               	btfsc	status,2,c
  8142  001562  D00D               	goto	l2897
  8143  001564  282F               	incf	___flmul@bexp,w,c
  8144  001566  A4D8               	btfss	status,2,c
  8145  001568  D008               	goto	l2895
  8146  00156A  0E00               	movlw	0
  8147  00156C  6E1D               	movwf	___flmul@b,c
  8148  00156E  0E00               	movlw	0
  8149  001570  6E1E               	movwf	___flmul@b+1,c
  8150  001572  0E00               	movlw	0
  8151  001574  6E1F               	movwf	___flmul@b+2,c
  8152  001576  0E00               	movlw	0
  8153  001578  6E20               	movwf	___flmul@b+3,c
  8154  00157A                     l2895:
  8155  00157A  8E1F               	bsf	___flmul@b+2,7,c
  8156  00157C  D008               	goto	l2899
  8157  00157E                     l2897:
  8158  00157E  0E00               	movlw	0
  8159  001580  6E1D               	movwf	___flmul@b,c
  8160  001582  0E00               	movlw	0
  8161  001584  6E1E               	movwf	___flmul@b+1,c
  8162  001586  0E00               	movlw	0
  8163  001588  6E1F               	movwf	___flmul@b+2,c
  8164  00158A  0E00               	movlw	0
  8165  00158C  6E20               	movwf	___flmul@b+3,c
  8166  00158E                     l2899:
  8167  00158E  5024               	movf	___flmul@a+3,w,c
  8168  001590  0B80               	andlw	128
  8169  001592  1A29               	xorwf	___flmul@sign,f,c
  8170  001594  5024               	movf	___flmul@a+3,w,c
  8171  001596  2424               	addwf	___flmul@a+3,w,c
  8172  001598  6E2E               	movwf	___flmul@aexp,c
  8173  00159A  BE23               	btfsc	___flmul@a+2,7,c
  8174  00159C  802E               	bsf	___flmul@aexp,0,c
  8175  00159E  502E               	movf	___flmul@aexp,w,c
  8176  0015A0  B4D8               	btfsc	status,2,c
  8177  0015A2  D00D               	goto	l2915
  8178  0015A4  282E               	incf	___flmul@aexp,w,c
  8179  0015A6  A4D8               	btfss	status,2,c
  8180  0015A8  D008               	goto	l2913
  8181  0015AA  0E00               	movlw	0
  8182  0015AC  6E21               	movwf	___flmul@a,c
  8183  0015AE  0E00               	movlw	0
  8184  0015B0  6E22               	movwf	___flmul@a+1,c
  8185  0015B2  0E00               	movlw	0
  8186  0015B4  6E23               	movwf	___flmul@a+2,c
  8187  0015B6  0E00               	movlw	0
  8188  0015B8  6E24               	movwf	___flmul@a+3,c
  8189  0015BA                     l2913:
  8190  0015BA  8E23               	bsf	___flmul@a+2,7,c
  8191  0015BC  D008               	goto	l893
  8192  0015BE                     l2915:
  8193  0015BE  0E00               	movlw	0
  8194  0015C0  6E21               	movwf	___flmul@a,c
  8195  0015C2  0E00               	movlw	0
  8196  0015C4  6E22               	movwf	___flmul@a+1,c
  8197  0015C6  0E00               	movlw	0
  8198  0015C8  6E23               	movwf	___flmul@a+2,c
  8199  0015CA  0E00               	movlw	0
  8200  0015CC  6E24               	movwf	___flmul@a+3,c
  8201  0015CE                     l893:
  8202  0015CE  502E               	movf	___flmul@aexp,w,c
  8203  0015D0  B4D8               	btfsc	status,2,c
  8204  0015D2  D003               	goto	l2919
  8205  0015D4  502F               	movf	___flmul@bexp,w,c
  8206  0015D6  A4D8               	btfss	status,2,c
  8207  0015D8  D009               	goto	l2923
  8208  0015DA                     l2919:
  8209  0015DA  0E00               	movlw	0
  8210  0015DC  6E1D               	movwf	?___flmul,c
  8211  0015DE  0E00               	movlw	0
  8212  0015E0  6E1E               	movwf	?___flmul+1,c
  8213  0015E2  0E00               	movlw	0
  8214  0015E4  6E1F               	movwf	?___flmul+2,c
  8215  0015E6  0E00               	movlw	0
  8216  0015E8  6E20               	movwf	?___flmul+3,c
  8217  0015EA  0012               	return	
  8218  0015EC                     l2923:
  8219  0015EC  5023               	movf	___flmul@a+2,w,c
  8220  0015EE  021D               	mulwf	___flmul@b,c
  8221  0015F0  CFF3 F034          	movff	prodl,___flmul@temp
  8222  0015F4  CFF4 F035          	movff	prodh,___flmul@temp+1
  8223  0015F8  5034               	movf	___flmul@temp,w,c
  8224  0015FA  6E2A               	movwf	___flmul@grs,c
  8225  0015FC  6A2B               	clrf	___flmul@grs+1,c
  8226  0015FE  6A2C               	clrf	___flmul@grs+2,c
  8227  001600  6A2D               	clrf	___flmul@grs+3,c
  8228  001602  5035               	movf	___flmul@temp+1,w,c
  8229  001604  6E30               	movwf	___flmul@prod,c
  8230  001606  6A31               	clrf	___flmul@prod+1,c
  8231  001608  6A32               	clrf	___flmul@prod+2,c
  8232  00160A  6A33               	clrf	___flmul@prod+3,c
  8233  00160C  5022               	movf	___flmul@a+1,w,c
  8234  00160E  021E               	mulwf	___flmul@b+1,c
  8235  001610  CFF3 F034          	movff	prodl,___flmul@temp
  8236  001614  CFF4 F035          	movff	prodh,___flmul@temp+1
  8237  001618  5034               	movf	___flmul@temp,w,c
  8238  00161A  262A               	addwf	___flmul@grs,f,c
  8239  00161C  0E00               	movlw	0
  8240  00161E  222B               	addwfc	___flmul@grs+1,f,c
  8241  001620  222C               	addwfc	___flmul@grs+2,f,c
  8242  001622  222D               	addwfc	___flmul@grs+3,f,c
  8243  001624  5035               	movf	___flmul@temp+1,w,c
  8244  001626  2630               	addwf	___flmul@prod,f,c
  8245  001628  0E00               	movlw	0
  8246  00162A  2231               	addwfc	___flmul@prod+1,f,c
  8247  00162C  2232               	addwfc	___flmul@prod+2,f,c
  8248  00162E  2233               	addwfc	___flmul@prod+3,f,c
  8249  001630  5021               	movf	___flmul@a,w,c
  8250  001632  021F               	mulwf	___flmul@b+2,c
  8251  001634  CFF3 F034          	movff	prodl,___flmul@temp
  8252  001638  CFF4 F035          	movff	prodh,___flmul@temp+1
  8253  00163C  5034               	movf	___flmul@temp,w,c
  8254  00163E  262A               	addwf	___flmul@grs,f,c
  8255  001640  0E00               	movlw	0
  8256  001642  222B               	addwfc	___flmul@grs+1,f,c
  8257  001644  222C               	addwfc	___flmul@grs+2,f,c
  8258  001646  222D               	addwfc	___flmul@grs+3,f,c
  8259  001648  5035               	movf	___flmul@temp+1,w,c
  8260  00164A  2630               	addwf	___flmul@prod,f,c
  8261  00164C  0E00               	movlw	0
  8262  00164E  2231               	addwfc	___flmul@prod+1,f,c
  8263  001650  2232               	addwfc	___flmul@prod+2,f,c
  8264  001652  2233               	addwfc	___flmul@prod+3,f,c
  8265  001654  C02C  F02D         	movff	___flmul@grs+2,___flmul@grs+3
  8266  001658  C02B  F02C         	movff	___flmul@grs+1,___flmul@grs+2
  8267  00165C  C02A  F02B         	movff	___flmul@grs,___flmul@grs+1
  8268  001660  6A2A               	clrf	___flmul@grs,c
  8269  001662  5021               	movf	___flmul@a,w,c
  8270  001664  021E               	mulwf	___flmul@b+1,c
  8271  001666  CFF3 F034          	movff	prodl,___flmul@temp
  8272  00166A  CFF4 F035          	movff	prodh,___flmul@temp+1
  8273  00166E  5034               	movf	___flmul@temp,w,c
  8274  001670  262A               	addwf	___flmul@grs,f,c
  8275  001672  5035               	movf	___flmul@temp+1,w,c
  8276  001674  222B               	addwfc	___flmul@grs+1,f,c
  8277  001676  0E00               	movlw	0
  8278  001678  222C               	addwfc	___flmul@grs+2,f,c
  8279  00167A  0E00               	movlw	0
  8280  00167C  222D               	addwfc	___flmul@grs+3,f,c
  8281  00167E  5022               	movf	___flmul@a+1,w,c
  8282  001680  021D               	mulwf	___flmul@b,c
  8283  001682  CFF3 F034          	movff	prodl,___flmul@temp
  8284  001686  CFF4 F035          	movff	prodh,___flmul@temp+1
  8285  00168A  5034               	movf	___flmul@temp,w,c
  8286  00168C  262A               	addwf	___flmul@grs,f,c
  8287  00168E  5035               	movf	___flmul@temp+1,w,c
  8288  001690  222B               	addwfc	___flmul@grs+1,f,c
  8289  001692  0E00               	movlw	0
  8290  001694  222C               	addwfc	___flmul@grs+2,f,c
  8291  001696  0E00               	movlw	0
  8292  001698  222D               	addwfc	___flmul@grs+3,f,c
  8293  00169A  C02C  F02D         	movff	___flmul@grs+2,___flmul@grs+3
  8294  00169E  C02B  F02C         	movff	___flmul@grs+1,___flmul@grs+2
  8295  0016A2  C02A  F02B         	movff	___flmul@grs,___flmul@grs+1
  8296  0016A6  6A2A               	clrf	___flmul@grs,c
  8297  0016A8  5021               	movf	___flmul@a,w,c
  8298  0016AA  021D               	mulwf	___flmul@b,c
  8299  0016AC  CFF3 F034          	movff	prodl,___flmul@temp
  8300  0016B0  CFF4 F035          	movff	prodh,___flmul@temp+1
  8301  0016B4  5034               	movf	___flmul@temp,w,c
  8302  0016B6  262A               	addwf	___flmul@grs,f,c
  8303  0016B8  5035               	movf	___flmul@temp+1,w,c
  8304  0016BA  222B               	addwfc	___flmul@grs+1,f,c
  8305  0016BC  0E00               	movlw	0
  8306  0016BE  222C               	addwfc	___flmul@grs+2,f,c
  8307  0016C0  0E00               	movlw	0
  8308  0016C2  222D               	addwfc	___flmul@grs+3,f,c
  8309  0016C4  5023               	movf	___flmul@a+2,w,c
  8310  0016C6  021E               	mulwf	___flmul@b+1,c
  8311  0016C8  CFF3 F034          	movff	prodl,___flmul@temp
  8312  0016CC  CFF4 F035          	movff	prodh,___flmul@temp+1
  8313  0016D0  5034               	movf	___flmul@temp,w,c
  8314  0016D2  2630               	addwf	___flmul@prod,f,c
  8315  0016D4  5035               	movf	___flmul@temp+1,w,c
  8316  0016D6  2231               	addwfc	___flmul@prod+1,f,c
  8317  0016D8  0E00               	movlw	0
  8318  0016DA  2232               	addwfc	___flmul@prod+2,f,c
  8319  0016DC  0E00               	movlw	0
  8320  0016DE  2233               	addwfc	___flmul@prod+3,f,c
  8321  0016E0  5022               	movf	___flmul@a+1,w,c
  8322  0016E2  021F               	mulwf	___flmul@b+2,c
  8323  0016E4  CFF3 F034          	movff	prodl,___flmul@temp
  8324  0016E8  CFF4 F035          	movff	prodh,___flmul@temp+1
  8325  0016EC  5034               	movf	___flmul@temp,w,c
  8326  0016EE  2630               	addwf	___flmul@prod,f,c
  8327  0016F0  5035               	movf	___flmul@temp+1,w,c
  8328  0016F2  2231               	addwfc	___flmul@prod+1,f,c
  8329  0016F4  0E00               	movlw	0
  8330  0016F6  2232               	addwfc	___flmul@prod+2,f,c
  8331  0016F8  0E00               	movlw	0
  8332  0016FA  2233               	addwfc	___flmul@prod+3,f,c
  8333  0016FC  5023               	movf	___flmul@a+2,w,c
  8334  0016FE  021F               	mulwf	___flmul@b+2,c
  8335  001700  CFF3 F034          	movff	prodl,___flmul@temp
  8336  001704  CFF4 F035          	movff	prodh,___flmul@temp+1
  8337  001708  5034               	movf	___flmul@temp,w,c
  8338  00170A  6E25               	movwf	??___flmul& (0+255),c
  8339  00170C  5035               	movf	___flmul@temp+1,w,c
  8340  00170E  6E26               	movwf	(??___flmul+1)& (0+255),c
  8341  001710  6A27               	clrf	(??___flmul+2)& (0+255),c
  8342  001712  6A28               	clrf	(??___flmul+3)& (0+255),c
  8343  001714  C027  F028         	movff	??___flmul+2,??___flmul+3
  8344  001718  C026  F027         	movff	??___flmul+1,??___flmul+2
  8345  00171C  C025  F026         	movff	??___flmul,??___flmul+1
  8346  001720  6A25               	clrf	??___flmul,c
  8347  001722  5025               	movf	??___flmul,w,c
  8348  001724  2630               	addwf	___flmul@prod,f,c
  8349  001726  5026               	movf	??___flmul+1,w,c
  8350  001728  2231               	addwfc	___flmul@prod+1,f,c
  8351  00172A  5027               	movf	??___flmul+2,w,c
  8352  00172C  2232               	addwfc	___flmul@prod+2,f,c
  8353  00172E  5028               	movf	??___flmul+3,w,c
  8354  001730  2233               	addwfc	___flmul@prod+3,f,c
  8355  001732  C02A  F025         	movff	___flmul@grs,??___flmul
  8356  001736  C02B  F026         	movff	___flmul@grs+1,??___flmul+1
  8357  00173A  C02C  F027         	movff	___flmul@grs+2,??___flmul+2
  8358  00173E  C02D  F028         	movff	___flmul@grs+3,??___flmul+3
  8359  001742  0E19               	movlw	25
  8360  001744  D005               	goto	u2810
  8361  001746                     u2815:
  8362  001746  90D8               	bcf	status,0,c
  8363  001748  3228               	rrcf	??___flmul+3,f,c
  8364  00174A  3227               	rrcf	??___flmul+2,f,c
  8365  00174C  3226               	rrcf	??___flmul+1,f,c
  8366  00174E  3225               	rrcf	??___flmul,f,c
  8367  001750                     u2810:
  8368  001750  2EE8               	decfsz	wreg,f,c
  8369  001752  D7F9               	goto	u2815
  8370  001754  5025               	movf	??___flmul,w,c
  8371  001756  2630               	addwf	___flmul@prod,f,c
  8372  001758  5026               	movf	??___flmul+1,w,c
  8373  00175A  2231               	addwfc	___flmul@prod+1,f,c
  8374  00175C  5027               	movf	??___flmul+2,w,c
  8375  00175E  2232               	addwfc	___flmul@prod+2,f,c
  8376  001760  5028               	movf	??___flmul+3,w,c
  8377  001762  2233               	addwfc	___flmul@prod+3,f,c
  8378  001764  C02C  F02D         	movff	___flmul@grs+2,___flmul@grs+3
  8379  001768  C02B  F02C         	movff	___flmul@grs+1,___flmul@grs+2
  8380  00176C  C02A  F02B         	movff	___flmul@grs,___flmul@grs+1
  8381  001770  6A2A               	clrf	___flmul@grs,c
  8382  001772  502E               	movf	___flmul@aexp,w,c
  8383  001774  C02F  F025         	movff	___flmul@bexp,??___flmul
  8384  001778  6A26               	clrf	(??___flmul+1)& (0+255),c
  8385  00177A  2625               	addwf	??___flmul,f,c
  8386  00177C  0E00               	movlw	0
  8387  00177E  2226               	addwfc	??___flmul+1,f,c
  8388  001780  0E82               	movlw	130
  8389  001782  2425               	addwf	??___flmul,w,c
  8390  001784  6E34               	movwf	___flmul@temp,c
  8391  001786  0EFF               	movlw	255
  8392  001788  2026               	addwfc	??___flmul+1,w,c
  8393  00178A  6E35               	movwf	___flmul@temp+1,c
  8394  00178C  D00F               	goto	l2971
  8395  00178E                     l2965:
  8396  00178E  90D8               	bcf	status,0,c
  8397  001790  3630               	rlcf	___flmul@prod,f,c
  8398  001792  3631               	rlcf	___flmul@prod+1,f,c
  8399  001794  3632               	rlcf	___flmul@prod+2,f,c
  8400  001796  3633               	rlcf	___flmul@prod+3,f,c
  8401  001798  BE2D               	btfsc	___flmul@grs+3,7,c
  8402  00179A  8030               	bsf	___flmul@prod,0,c
  8403  00179C  90D8               	bcf	status,0,c
  8404  00179E  362A               	rlcf	___flmul@grs,f,c
  8405  0017A0  362B               	rlcf	___flmul@grs+1,f,c
  8406  0017A2  362C               	rlcf	___flmul@grs+2,f,c
  8407  0017A4  362D               	rlcf	___flmul@grs+3,f,c
  8408  0017A6  0634               	decf	___flmul@temp,f,c
  8409  0017A8  A0D8               	btfss	status,0,c
  8410  0017AA  0635               	decf	___flmul@temp+1,f,c
  8411  0017AC                     l2971:
  8412  0017AC  AE32               	btfss	___flmul@prod+2,7,c
  8413  0017AE  D7EF               	goto	l2965
  8414  0017B0  0E00               	movlw	0
  8415  0017B2  6E2E               	movwf	___flmul@aexp,c
  8416  0017B4  AE2D               	btfss	___flmul@grs+3,7,c
  8417  0017B6  D016               	goto	l902
  8418  0017B8  0EFF               	movlw	255
  8419  0017BA  142A               	andwf	___flmul@grs,w,c
  8420  0017BC  6E25               	movwf	??___flmul& (0+255),c
  8421  0017BE  0EFF               	movlw	255
  8422  0017C0  142B               	andwf	___flmul@grs+1,w,c
  8423  0017C2  6E26               	movwf	(??___flmul+1)& (0+255),c
  8424  0017C4  0EFF               	movlw	255
  8425  0017C6  142C               	andwf	___flmul@grs+2,w,c
  8426  0017C8  6E27               	movwf	(??___flmul+2)& (0+255),c
  8427  0017CA  0E7F               	movlw	127
  8428  0017CC  142D               	andwf	___flmul@grs+3,w,c
  8429  0017CE  6E28               	movwf	(??___flmul+3)& (0+255),c
  8430  0017D0  5025               	movf	??___flmul,w,c
  8431  0017D2  1026               	iorwf	??___flmul+1,w,c
  8432  0017D4  1027               	iorwf	??___flmul+2,w,c
  8433  0017D6  1028               	iorwf	??___flmul+3,w,c
  8434  0017D8  A4D8               	btfss	status,2,c
  8435  0017DA  D002               	goto	l2981
  8436  0017DC  A030               	btfss	___flmul@prod,0,c
  8437  0017DE  D002               	goto	l902
  8438  0017E0                     l2981:
  8439  0017E0  0E01               	movlw	1
  8440  0017E2  6E2E               	movwf	___flmul@aexp,c
  8441  0017E4                     l902:
  8442  0017E4  502E               	movf	___flmul@aexp,w,c
  8443  0017E6  B4D8               	btfsc	status,2,c
  8444  0017E8  D01F               	goto	l2991
  8445  0017EA  0E01               	movlw	1
  8446  0017EC  2630               	addwf	___flmul@prod,f,c
  8447  0017EE  0E00               	movlw	0
  8448  0017F0  2231               	addwfc	___flmul@prod+1,f,c
  8449  0017F2  2232               	addwfc	___flmul@prod+2,f,c
  8450  0017F4  2233               	addwfc	___flmul@prod+3,f,c
  8451  0017F6  A033               	btfss	___flmul@prod+3,0,c
  8452  0017F8  D017               	goto	l2991
  8453  0017FA  C030  F025         	movff	___flmul@prod,??___flmul
  8454  0017FE  C031  F026         	movff	___flmul@prod+1,??___flmul+1
  8455  001802  C032  F027         	movff	___flmul@prod+2,??___flmul+2
  8456  001806  C033  F028         	movff	___flmul@prod+3,??___flmul+3
  8457  00180A  3428               	rlcf	??___flmul+3,w,c
  8458  00180C  3228               	rrcf	??___flmul+3,f,c
  8459  00180E  3227               	rrcf	??___flmul+2,f,c
  8460  001810  3226               	rrcf	??___flmul+1,f,c
  8461  001812  3225               	rrcf	??___flmul,f,c
  8462  001814  C025  F030         	movff	??___flmul,___flmul@prod
  8463  001818  C026  F031         	movff	??___flmul+1,___flmul@prod+1
  8464  00181C  C027  F032         	movff	??___flmul+2,___flmul@prod+2
  8465  001820  C028  F033         	movff	??___flmul+3,___flmul@prod+3
  8466  001824  4A34               	infsnz	___flmul@temp,f,c
  8467  001826  2A35               	incf	___flmul@temp+1,f,c
  8468  001828                     l2991:
  8469  001828  BE35               	btfsc	___flmul@temp+1,7,c
  8470  00182A  D00D               	goto	l2995
  8471  00182C  5035               	movf	___flmul@temp+1,w,c
  8472  00182E  E103               	bnz	u2890
  8473  001830  2834               	incf	___flmul@temp,w,c
  8474  001832  A0D8               	btfss	status,0,c
  8475  001834  D008               	goto	l2995
  8476  001836                     u2890:
  8477  001836  0E00               	movlw	0
  8478  001838  6E30               	movwf	___flmul@prod,c
  8479  00183A  0E00               	movlw	0
  8480  00183C  6E31               	movwf	___flmul@prod+1,c
  8481  00183E  0E80               	movlw	128
  8482  001840  6E32               	movwf	___flmul@prod+2,c
  8483  001842  0E7F               	movlw	127
  8484  001844  D020               	goto	L10
  8485  001846                     l2995:
  8486  001846  BE35               	btfsc	___flmul@temp+1,7,c
  8487  001848  D005               	goto	l2997
  8488  00184A  5035               	movf	___flmul@temp+1,w,c
  8489  00184C  E10E               	bnz	l910
  8490  00184E  0434               	decf	___flmul@temp,w,c
  8491  001850  B0D8               	btfsc	status,0,c
  8492  001852  D00B               	goto	l910
  8493  001854                     l2997:
  8494  001854  0E00               	movlw	0
  8495  001856  6E30               	movwf	___flmul@prod,c
  8496  001858  0E00               	movlw	0
  8497  00185A  6E31               	movwf	___flmul@prod+1,c
  8498  00185C  0E00               	movlw	0
  8499  00185E  6E32               	movwf	___flmul@prod+2,c
  8500  001860  0E00               	movlw	0
  8501  001862  6E33               	movwf	___flmul@prod+3,c
  8502  001864  0E00               	movlw	0
  8503  001866  6E29               	movwf	___flmul@sign,c
  8504  001868  D00F               	goto	l3007
  8505  00186A                     l910:
  8506  00186A  C034  F02F         	movff	___flmul@temp,___flmul@bexp
  8507  00186E  0EFF               	movlw	255
  8508  001870  1630               	andwf	___flmul@prod,f,c
  8509  001872  0EFF               	movlw	255
  8510  001874  1631               	andwf	___flmul@prod+1,f,c
  8511  001876  0E7F               	movlw	127
  8512  001878  1632               	andwf	___flmul@prod+2,f,c
  8513  00187A  0E00               	movlw	0
  8514  00187C  1633               	andwf	___flmul@prod+3,f,c
  8515  00187E  B02F               	btfsc	___flmul@bexp,0,c
  8516  001880  8E32               	bsf	___flmul@prod+2,7,c
  8517  001882  90D8               	bcf	status,0,c
  8518  001884  302F               	rrcf	___flmul@bexp,w,c
  8519  001886                     L10:
  8520  001886  6E33               	movwf	___flmul@prod+3,c
  8521  001888                     l3007:
  8522  001888  5029               	movf	___flmul@sign,w,c
  8523  00188A  1233               	iorwf	___flmul@prod+3,f,c
  8524  00188C  C030  F01D         	movff	___flmul@prod,?___flmul
  8525  001890  C031  F01E         	movff	___flmul@prod+1,?___flmul+1
  8526  001894  C032  F01F         	movff	___flmul@prod+2,?___flmul+2
  8527  001898  C033  F020         	movff	___flmul@prod+3,?___flmul+3
  8528  00189C  0012               	return	
  8529  00189E                     __end_of___flmul:
  8530                           	opt stack 0
  8531                           tblptru	equ	0xFF8
  8532                           tblptrh	equ	0xFF7
  8533                           tblptrl	equ	0xFF6
  8534                           tablat	equ	0xFF5
  8535                           prodh	equ	0xFF4
  8536                           prodl	equ	0xFF3
  8537                           intcon	equ	0xFF2
  8538                           postinc0	equ	0xFEE
  8539                           wreg	equ	0xFE8
  8540                           indf1	equ	0xFE7
  8541                           postdec1	equ	0xFE5
  8542                           plusw1	equ	0xFE3
  8543                           fsr1h	equ	0xFE2
  8544                           fsr1l	equ	0xFE1
  8545                           indf2	equ	0xFDF
  8546                           postinc2	equ	0xFDE
  8547                           plusw2	equ	0xFDB
  8548                           fsr2h	equ	0xFDA
  8549                           fsr2l	equ	0xFD9
  8550                           status	equ	0xFD8
  8551                           
  8552 ;; *************** function ___fldiv *****************
  8553 ;; Defined at:
  8554 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcdiv.c"
  8555 ;; Parameters:    Size  Location     Type
  8556 ;;  b               4   53[COMRAM] unsigned char 
  8557 ;;  a               4   57[COMRAM] unsigned char 
  8558 ;; Auto vars:     Size  Location     Type
  8559 ;;  grs             4    7[BANK0 ] unsigned long 
  8560 ;;  rem             4    1[BANK0 ] unsigned long 
  8561 ;;  new_exp         2    5[BANK0 ] int 
  8562 ;;  aexp            1   12[BANK0 ] unsigned char 
  8563 ;;  bexp            1   11[BANK0 ] unsigned char 
  8564 ;;  sign            1    0[BANK0 ] unsigned char 
  8565 ;; Return value:  Size  Location     Type
  8566 ;;                  4   53[COMRAM] unsigned char 
  8567 ;; Registers used:
  8568 ;;		wreg, status,2, status,0
  8569 ;; Tracked objects:
  8570 ;;		On entry : 0/0
  8571 ;;		On exit  : 0/0
  8572 ;;		Unchanged: 0/0
  8573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8574 ;;      Params:         8       0       0       0       0       0       0       0       0
  8575 ;;      Locals:         0      13       0       0       0       0       0       0       0
  8576 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8577 ;;      Totals:        12      13       0       0       0       0       0       0       0
  8578 ;;Total ram usage:       25 bytes
  8579 ;; Hardware stack levels used:    1
  8580 ;; Hardware stack levels required when called:    1
  8581 ;; This function calls:
  8582 ;;		Nothing
  8583 ;; This function is called by:
  8584 ;;		_main
  8585 ;;		_scarica
  8586 ;;		_read_adc
  8587 ;; This function uses a non-reentrant model
  8588 ;;
  8589                           
  8590                           	psect	text28
  8591  00189E                     __ptext28:
  8592                           	opt stack 0
  8593  00189E                     ___fldiv:
  8594                           	opt stack 27
  8595                           
  8596                           ;incstack = 0
  8597  00189E  5039               	movf	___fldiv@b+3,w,c
  8598  0018A0  0B80               	andlw	128
  8599  0018A2  0100               	movlb	0	; () banked
  8600  0018A4  6F60               	movwf	___fldiv@sign& (0+255),b
  8601  0018A6  5039               	movf	___fldiv@b+3,w,c
  8602  0018A8  2439               	addwf	___fldiv@b+3,w,c
  8603  0018AA  0100               	movlb	0	; () banked
  8604  0018AC  6F6B               	movwf	___fldiv@bexp& (0+255),b
  8605                           
  8606                           ; BSR set to: 0
  8607  0018AE  AE38               	btfss	___fldiv@b+2,7,c
  8608  0018B0  D002               	goto	l4409
  8609                           
  8610                           ; BSR set to: 0
  8611  0018B2  0100               	movlb	0	; () banked
  8612  0018B4  816B               	bsf	___fldiv@bexp& (0+255),0,b
  8613  0018B6                     l4409:
  8614                           
  8615                           ; BSR set to: 0
  8616  0018B6  0100               	movlb	0	; () banked
  8617  0018B8  516B               	movf	___fldiv@bexp& (0+255),w,b
  8618  0018BA  0100               	movlb	0	; () banked
  8619  0018BC  B4D8               	btfsc	status,2,c
  8620  0018BE  D00E               	goto	l4419
  8621                           
  8622                           ; BSR set to: 0
  8623  0018C0  0100               	movlb	0	; () banked
  8624  0018C2  296B               	incf	___fldiv@bexp& (0+255),w,b
  8625  0018C4  A4D8               	btfss	status,2,c
  8626  0018C6  D008               	goto	l4415
  8627                           
  8628                           ; BSR set to: 0
  8629  0018C8  0E00               	movlw	0
  8630  0018CA  6E36               	movwf	___fldiv@b,c
  8631  0018CC  0E00               	movlw	0
  8632  0018CE  6E37               	movwf	___fldiv@b+1,c
  8633  0018D0  0E00               	movlw	0
  8634  0018D2  6E38               	movwf	___fldiv@b+2,c
  8635  0018D4  0E00               	movlw	0
  8636  0018D6  6E39               	movwf	___fldiv@b+3,c
  8637  0018D8                     l4415:
  8638                           
  8639                           ; BSR set to: 0
  8640  0018D8  8E38               	bsf	___fldiv@b+2,7,c
  8641  0018DA  D006               	goto	L11
  8642  0018DC                     l4419:
  8643                           
  8644                           ; BSR set to: 0
  8645  0018DC  0E00               	movlw	0
  8646  0018DE  6E36               	movwf	___fldiv@b,c
  8647  0018E0  0E00               	movlw	0
  8648  0018E2  6E37               	movwf	___fldiv@b+1,c
  8649  0018E4  0E00               	movlw	0
  8650  0018E6  6E38               	movwf	___fldiv@b+2,c
  8651  0018E8                     L11:
  8652  0018E8  0E00               	movlw	0
  8653  0018EA  6E39               	movwf	___fldiv@b+3,c
  8654                           
  8655                           ; BSR set to: 0
  8656                           
  8657                           ; BSR set to: 0
  8658  0018EC  503D               	movf	___fldiv@a+3,w,c
  8659  0018EE  0B80               	andlw	128
  8660  0018F0  0100               	movlb	0	; () banked
  8661  0018F2  1B60               	xorwf	___fldiv@sign& (0+255),f,b
  8662                           
  8663                           ; BSR set to: 0
  8664  0018F4  503D               	movf	___fldiv@a+3,w,c
  8665  0018F6  243D               	addwf	___fldiv@a+3,w,c
  8666  0018F8  0100               	movlb	0	; () banked
  8667  0018FA  6F6C               	movwf	___fldiv@aexp& (0+255),b
  8668                           
  8669                           ; BSR set to: 0
  8670  0018FC  AE3C               	btfss	___fldiv@a+2,7,c
  8671  0018FE  D002               	goto	l4429
  8672                           
  8673                           ; BSR set to: 0
  8674  001900  0100               	movlb	0	; () banked
  8675  001902  816C               	bsf	___fldiv@aexp& (0+255),0,b
  8676  001904                     l4429:
  8677                           
  8678                           ; BSR set to: 0
  8679  001904  0100               	movlb	0	; () banked
  8680  001906  516C               	movf	___fldiv@aexp& (0+255),w,b
  8681  001908  0100               	movlb	0	; () banked
  8682  00190A  B4D8               	btfsc	status,2,c
  8683  00190C  D00E               	goto	l4439
  8684                           
  8685                           ; BSR set to: 0
  8686  00190E  0100               	movlb	0	; () banked
  8687  001910  296C               	incf	___fldiv@aexp& (0+255),w,b
  8688  001912  A4D8               	btfss	status,2,c
  8689  001914  D008               	goto	l4435
  8690                           
  8691                           ; BSR set to: 0
  8692  001916  0E00               	movlw	0
  8693  001918  6E3A               	movwf	___fldiv@a,c
  8694  00191A  0E00               	movlw	0
  8695  00191C  6E3B               	movwf	___fldiv@a+1,c
  8696  00191E  0E00               	movlw	0
  8697  001920  6E3C               	movwf	___fldiv@a+2,c
  8698  001922  0E00               	movlw	0
  8699  001924  6E3D               	movwf	___fldiv@a+3,c
  8700  001926                     l4435:
  8701                           
  8702                           ; BSR set to: 0
  8703  001926  8E3C               	bsf	___fldiv@a+2,7,c
  8704  001928  D006               	goto	L12
  8705  00192A                     l4439:
  8706                           
  8707                           ; BSR set to: 0
  8708  00192A  0E00               	movlw	0
  8709  00192C  6E3A               	movwf	___fldiv@a,c
  8710  00192E  0E00               	movlw	0
  8711  001930  6E3B               	movwf	___fldiv@a+1,c
  8712  001932  0E00               	movlw	0
  8713  001934  6E3C               	movwf	___fldiv@a+2,c
  8714  001936                     L12:
  8715  001936  0E00               	movlw	0
  8716  001938  6E3D               	movwf	___fldiv@a+3,c
  8717                           
  8718                           ; BSR set to: 0
  8719                           
  8720                           ; BSR set to: 0
  8721  00193A  503A               	movf	___fldiv@a,w,c
  8722  00193C  103B               	iorwf	___fldiv@a+1,w,c
  8723  00193E  103C               	iorwf	___fldiv@a+2,w,c
  8724  001940  103D               	iorwf	___fldiv@a+3,w,c
  8725  001942  A4D8               	btfss	status,2,c
  8726  001944  D015               	goto	l4451
  8727                           
  8728                           ; BSR set to: 0
  8729  001946  0E00               	movlw	0
  8730  001948  6E36               	movwf	___fldiv@b,c
  8731  00194A  0E00               	movlw	0
  8732  00194C  6E37               	movwf	___fldiv@b+1,c
  8733  00194E  0E00               	movlw	0
  8734  001950  6E38               	movwf	___fldiv@b+2,c
  8735  001952  0E00               	movlw	0
  8736  001954  6E39               	movwf	___fldiv@b+3,c
  8737                           
  8738                           ; BSR set to: 0
  8739  001956  0E80               	movlw	128
  8740  001958  1238               	iorwf	___fldiv@b+2,f,c
  8741  00195A  0E7F               	movlw	127
  8742  00195C  1239               	iorwf	___fldiv@b+3,f,c
  8743                           
  8744                           ; BSR set to: 0
  8745  00195E  C036  F036         	movff	___fldiv@b,?___fldiv
  8746  001962  C037  F037         	movff	___fldiv@b+1,?___fldiv+1
  8747  001966  C038  F038         	movff	___fldiv@b+2,?___fldiv+2
  8748  00196A  C039  F039         	movff	___fldiv@b+3,?___fldiv+3
  8749                           
  8750                           ; BSR set to: 0
  8751  00196E  0012               	return	
  8752  001970                     l4451:
  8753                           
  8754                           ; BSR set to: 0
  8755  001970  0100               	movlb	0	; () banked
  8756  001972  516B               	movf	___fldiv@bexp& (0+255),w,b
  8757  001974  0100               	movlb	0	; () banked
  8758  001976  A4D8               	btfss	status,2,c
  8759  001978  D011               	goto	l4459
  8760                           
  8761                           ; BSR set to: 0
  8762  00197A  0E00               	movlw	0
  8763  00197C  6E36               	movwf	___fldiv@b,c
  8764  00197E  0E00               	movlw	0
  8765  001980  6E37               	movwf	___fldiv@b+1,c
  8766  001982  0E00               	movlw	0
  8767  001984  6E38               	movwf	___fldiv@b+2,c
  8768  001986  0E00               	movlw	0
  8769  001988  6E39               	movwf	___fldiv@b+3,c
  8770                           
  8771                           ; BSR set to: 0
  8772  00198A  C036  F036         	movff	___fldiv@b,?___fldiv
  8773  00198E  C037  F037         	movff	___fldiv@b+1,?___fldiv+1
  8774  001992  C038  F038         	movff	___fldiv@b+2,?___fldiv+2
  8775  001996  C039  F039         	movff	___fldiv@b+3,?___fldiv+3
  8776                           
  8777                           ; BSR set to: 0
  8778  00199A  0012               	return	
  8779  00199C                     l4459:
  8780                           
  8781                           ; BSR set to: 0
  8782  00199C  0100               	movlb	0	; () banked
  8783  00199E  516C               	movf	___fldiv@aexp& (0+255),w,b
  8784  0019A0  6E3E               	movwf	??___fldiv& (0+255),c
  8785  0019A2  6A3F               	clrf	(??___fldiv+1)& (0+255),c
  8786  0019A4  1E3E               	comf	??___fldiv,f,c
  8787  0019A6  1E3F               	comf	??___fldiv+1,f,c
  8788  0019A8  4A3E               	infsnz	??___fldiv,f,c
  8789  0019AA  2A3F               	incf	??___fldiv+1,f,c
  8790  0019AC  0100               	movlb	0	; () banked
  8791  0019AE  516B               	movf	___fldiv@bexp& (0+255),w,b
  8792  0019B0  6E40               	movwf	(??___fldiv+2)& (0+255),c
  8793  0019B2  6A41               	clrf	(??___fldiv+3)& (0+255),c
  8794  0019B4  503E               	movf	??___fldiv,w,c
  8795  0019B6  2640               	addwf	??___fldiv+2,f,c
  8796  0019B8  503F               	movf	??___fldiv+1,w,c
  8797  0019BA  2241               	addwfc	??___fldiv+3,f,c
  8798  0019BC  0E7F               	movlw	127
  8799  0019BE  2440               	addwf	??___fldiv+2,w,c
  8800  0019C0  0100               	movlb	0	; () banked
  8801  0019C2  6F65               	movwf	___fldiv@new_exp& (0+255),b
  8802  0019C4  0E00               	movlw	0
  8803  0019C6  2041               	addwfc	??___fldiv+3,w,c
  8804  0019C8  0100               	movlb	0	; () banked
  8805  0019CA  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
  8806                           
  8807                           ; BSR set to: 0
  8808  0019CC  C036  F061         	movff	___fldiv@b,___fldiv@rem
  8809  0019D0  C037  F062         	movff	___fldiv@b+1,___fldiv@rem+1
  8810  0019D4  C038  F063         	movff	___fldiv@b+2,___fldiv@rem+2
  8811  0019D8  C039  F064         	movff	___fldiv@b+3,___fldiv@rem+3
  8812                           
  8813                           ; BSR set to: 0
  8814  0019DC  0E00               	movlw	0
  8815  0019DE  6E36               	movwf	___fldiv@b,c
  8816  0019E0  0E00               	movlw	0
  8817  0019E2  6E37               	movwf	___fldiv@b+1,c
  8818  0019E4  0E00               	movlw	0
  8819  0019E6  6E38               	movwf	___fldiv@b+2,c
  8820  0019E8  0E00               	movlw	0
  8821  0019EA  6E39               	movwf	___fldiv@b+3,c
  8822                           
  8823                           ; BSR set to: 0
  8824  0019EC  0E00               	movlw	0
  8825  0019EE  0100               	movlb	0	; () banked
  8826  0019F0  6F67               	movwf	___fldiv@grs& (0+255),b
  8827  0019F2  0E00               	movlw	0
  8828  0019F4  6F68               	movwf	(___fldiv@grs+1)& (0+255),b
  8829  0019F6  0E00               	movlw	0
  8830  0019F8  6F69               	movwf	(___fldiv@grs+2)& (0+255),b
  8831  0019FA  0E00               	movlw	0
  8832  0019FC  6F6A               	movwf	(___fldiv@grs+3)& (0+255),b
  8833                           
  8834                           ; BSR set to: 0
  8835  0019FE  0E00               	movlw	0
  8836  001A00  0100               	movlb	0	; () banked
  8837  001A02  6F6C               	movwf	___fldiv@aexp& (0+255),b
  8838  001A04  D037               	goto	l863
  8839  001A06                     l4469:
  8840                           
  8841                           ; BSR set to: 0
  8842  001A06  0100               	movlb	0	; () banked
  8843  001A08  516C               	movf	___fldiv@aexp& (0+255),w,b
  8844  001A0A  0100               	movlb	0	; () banked
  8845  001A0C  B4D8               	btfsc	status,2,c
  8846  001A0E  D014               	goto	l4477
  8847                           
  8848                           ; BSR set to: 0
  8849  001A10  0100               	movlb	0	; () banked
  8850  001A12  90D8               	bcf	status,0,c
  8851  001A14  3761               	rlcf	___fldiv@rem& (0+255),f,b
  8852  001A16  3762               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  8853  001A18  3763               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  8854  001A1A  3764               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  8855  001A1C  90D8               	bcf	status,0,c
  8856  001A1E  3636               	rlcf	___fldiv@b,f,c
  8857  001A20  3637               	rlcf	___fldiv@b+1,f,c
  8858  001A22  3638               	rlcf	___fldiv@b+2,f,c
  8859  001A24  3639               	rlcf	___fldiv@b+3,f,c
  8860                           
  8861                           ; BSR set to: 0
  8862  001A26  0100               	movlb	0	; () banked
  8863  001A28  BF6A               	btfsc	(___fldiv@grs+3)& (0+255),7,b
  8864                           
  8865                           ; BSR set to: 0
  8866  001A2A  8036               	bsf	___fldiv@b,0,c
  8867                           
  8868                           ; BSR set to: 0
  8869  001A2C  0100               	movlb	0	; () banked
  8870  001A2E  90D8               	bcf	status,0,c
  8871  001A30  3767               	rlcf	___fldiv@grs& (0+255),f,b
  8872  001A32  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  8873  001A34  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  8874  001A36  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  8875  001A38                     l4477:
  8876                           
  8877                           ; BSR set to: 0
  8878  001A38  503A               	movf	___fldiv@a,w,c
  8879  001A3A  0100               	movlb	0	; () banked
  8880  001A3C  5D61               	subwf	___fldiv@rem& (0+255),w,b
  8881  001A3E  503B               	movf	___fldiv@a+1,w,c
  8882  001A40  0100               	movlb	0	; () banked
  8883  001A42  5962               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  8884  001A44  503C               	movf	___fldiv@a+2,w,c
  8885  001A46  0100               	movlb	0	; () banked
  8886  001A48  5963               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  8887  001A4A  503D               	movf	___fldiv@a+3,w,c
  8888  001A4C  0100               	movlb	0	; () banked
  8889  001A4E  5964               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  8890  001A50  A0D8               	btfss	status,0,c
  8891  001A52  D00E               	goto	l4483
  8892                           
  8893                           ; BSR set to: 0
  8894  001A54  0100               	movlb	0	; () banked
  8895  001A56  8D6A               	bsf	(___fldiv@grs+3)& (0+255),6,b
  8896                           
  8897                           ; BSR set to: 0
  8898  001A58  503A               	movf	___fldiv@a,w,c
  8899  001A5A  0100               	movlb	0	; () banked
  8900  001A5C  5F61               	subwf	___fldiv@rem& (0+255),f,b
  8901  001A5E  503B               	movf	___fldiv@a+1,w,c
  8902  001A60  0100               	movlb	0	; () banked
  8903  001A62  5B62               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  8904  001A64  503C               	movf	___fldiv@a+2,w,c
  8905  001A66  0100               	movlb	0	; () banked
  8906  001A68  5B63               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  8907  001A6A  503D               	movf	___fldiv@a+3,w,c
  8908  001A6C  0100               	movlb	0	; () banked
  8909  001A6E  5B64               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  8910  001A70                     l4483:
  8911                           
  8912                           ; BSR set to: 0
  8913  001A70  0100               	movlb	0	; () banked
  8914  001A72  2B6C               	incf	___fldiv@aexp& (0+255),f,b
  8915  001A74                     l863:
  8916                           
  8917                           ; BSR set to: 0
  8918  001A74  0E19               	movlw	25
  8919  001A76  0100               	movlb	0	; () banked
  8920  001A78  656C               	cpfsgt	___fldiv@aexp& (0+255),b
  8921  001A7A  D7C5               	goto	l4469
  8922                           
  8923                           ; BSR set to: 0
  8924                           
  8925                           ; BSR set to: 0
  8926  001A7C  0100               	movlb	0	; () banked
  8927  001A7E  5161               	movf	___fldiv@rem& (0+255),w,b
  8928  001A80  0100               	movlb	0	; () banked
  8929  001A82  1162               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  8930  001A84  0100               	movlb	0	; () banked
  8931  001A86  1163               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  8932  001A88  0100               	movlb	0	; () banked
  8933  001A8A  1164               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  8934  001A8C  B4D8               	btfsc	status,2,c
  8935  001A8E  D015               	goto	l4495
  8936                           
  8937                           ; BSR set to: 0
  8938  001A90  0100               	movlb	0	; () banked
  8939  001A92  8167               	bsf	___fldiv@grs& (0+255),0,b
  8940                           
  8941                           ; BSR set to: 0
  8942  001A94  D012               	goto	l4495
  8943  001A96                     l4489:
  8944                           
  8945                           ; BSR set to: 0
  8946  001A96  90D8               	bcf	status,0,c
  8947  001A98  3636               	rlcf	___fldiv@b,f,c
  8948  001A9A  3637               	rlcf	___fldiv@b+1,f,c
  8949  001A9C  3638               	rlcf	___fldiv@b+2,f,c
  8950  001A9E  3639               	rlcf	___fldiv@b+3,f,c
  8951                           
  8952                           ; BSR set to: 0
  8953  001AA0  0100               	movlb	0	; () banked
  8954  001AA2  BF6A               	btfsc	(___fldiv@grs+3)& (0+255),7,b
  8955                           
  8956                           ; BSR set to: 0
  8957  001AA4  8036               	bsf	___fldiv@b,0,c
  8958                           
  8959                           ; BSR set to: 0
  8960  001AA6  0100               	movlb	0	; () banked
  8961  001AA8  90D8               	bcf	status,0,c
  8962  001AAA  3767               	rlcf	___fldiv@grs& (0+255),f,b
  8963  001AAC  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  8964  001AAE  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  8965  001AB0  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  8966  001AB2  0100               	movlb	0	; () banked
  8967  001AB4  0765               	decf	___fldiv@new_exp& (0+255),f,b
  8968  001AB6  A0D8               	btfss	status,0,c
  8969  001AB8  0766               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  8970  001ABA                     l4495:
  8971                           
  8972                           ; BSR set to: 0
  8973  001ABA  AE38               	btfss	___fldiv@b+2,7,c
  8974  001ABC  D7EC               	goto	l4489
  8975                           
  8976                           ; BSR set to: 0
  8977                           
  8978                           ; BSR set to: 0
  8979  001ABE  0E00               	movlw	0
  8980  001AC0  0100               	movlb	0	; () banked
  8981  001AC2  6F6C               	movwf	___fldiv@aexp& (0+255),b
  8982                           
  8983                           ; BSR set to: 0
  8984  001AC4  0100               	movlb	0	; () banked
  8985  001AC6  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
  8986  001AC8  D01B               	goto	l874
  8987                           
  8988                           ; BSR set to: 0
  8989  001ACA  0EFF               	movlw	255
  8990  001ACC  0100               	movlb	0	; () banked
  8991  001ACE  1567               	andwf	___fldiv@grs& (0+255),w,b
  8992  001AD0  6E3E               	movwf	??___fldiv& (0+255),c
  8993  001AD2  0EFF               	movlw	255
  8994  001AD4  0100               	movlb	0	; () banked
  8995  001AD6  1568               	andwf	(___fldiv@grs+1)& (0+255),w,b
  8996  001AD8  6E3F               	movwf	(??___fldiv+1)& (0+255),c
  8997  001ADA  0EFF               	movlw	255
  8998  001ADC  0100               	movlb	0	; () banked
  8999  001ADE  1569               	andwf	(___fldiv@grs+2)& (0+255),w,b
  9000  001AE0  6E40               	movwf	(??___fldiv+2)& (0+255),c
  9001  001AE2  0E7F               	movlw	127
  9002  001AE4  0100               	movlb	0	; () banked
  9003  001AE6  156A               	andwf	(___fldiv@grs+3)& (0+255),w,b
  9004  001AE8  6E41               	movwf	(??___fldiv+3)& (0+255),c
  9005  001AEA  503E               	movf	??___fldiv,w,c
  9006  001AEC  103F               	iorwf	??___fldiv+1,w,c
  9007  001AEE  1040               	iorwf	??___fldiv+2,w,c
  9008  001AF0  1041               	iorwf	??___fldiv+3,w,c
  9009  001AF2  A4D8               	btfss	status,2,c
  9010  001AF4  D002               	goto	l4505
  9011                           
  9012                           ; BSR set to: 0
  9013                           
  9014                           ; BSR set to: 0
  9015  001AF6  A036               	btfss	___fldiv@b,0,c
  9016  001AF8  D003               	goto	l874
  9017  001AFA                     l4505:
  9018                           
  9019                           ; BSR set to: 0
  9020  001AFA  0E01               	movlw	1
  9021  001AFC  0100               	movlb	0	; () banked
  9022  001AFE  6F6C               	movwf	___fldiv@aexp& (0+255),b
  9023  001B00                     l874:
  9024                           
  9025                           ; BSR set to: 0
  9026  001B00  0100               	movlb	0	; () banked
  9027  001B02  516C               	movf	___fldiv@aexp& (0+255),w,b
  9028  001B04  0100               	movlb	0	; () banked
  9029  001B06  B4D8               	btfsc	status,2,c
  9030  001B08  D020               	goto	l4515
  9031                           
  9032                           ; BSR set to: 0
  9033  001B0A  0E01               	movlw	1
  9034  001B0C  2636               	addwf	___fldiv@b,f,c
  9035  001B0E  0E00               	movlw	0
  9036  001B10  2237               	addwfc	___fldiv@b+1,f,c
  9037  001B12  2238               	addwfc	___fldiv@b+2,f,c
  9038  001B14  2239               	addwfc	___fldiv@b+3,f,c
  9039                           
  9040                           ; BSR set to: 0
  9041  001B16  A039               	btfss	___fldiv@b+3,0,c
  9042  001B18  D018               	goto	l4515
  9043                           
  9044                           ; BSR set to: 0
  9045  001B1A  C036  F03E         	movff	___fldiv@b,??___fldiv
  9046  001B1E  C037  F03F         	movff	___fldiv@b+1,??___fldiv+1
  9047  001B22  C038  F040         	movff	___fldiv@b+2,??___fldiv+2
  9048  001B26  C039  F041         	movff	___fldiv@b+3,??___fldiv+3
  9049  001B2A  3441               	rlcf	??___fldiv+3,w,c
  9050  001B2C  3241               	rrcf	??___fldiv+3,f,c
  9051  001B2E  3240               	rrcf	??___fldiv+2,f,c
  9052  001B30  323F               	rrcf	??___fldiv+1,f,c
  9053  001B32  323E               	rrcf	??___fldiv,f,c
  9054  001B34  C03E  F036         	movff	??___fldiv,___fldiv@b
  9055  001B38  C03F  F037         	movff	??___fldiv+1,___fldiv@b+1
  9056  001B3C  C040  F038         	movff	??___fldiv+2,___fldiv@b+2
  9057  001B40  C041  F039         	movff	??___fldiv+3,___fldiv@b+3
  9058                           
  9059                           ; BSR set to: 0
  9060  001B44  0100               	movlb	0	; () banked
  9061  001B46  4B65               	infsnz	___fldiv@new_exp& (0+255),f,b
  9062  001B48  2B66               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  9063  001B4A                     l4515:
  9064                           
  9065                           ; BSR set to: 0
  9066  001B4A  0100               	movlb	0	; () banked
  9067  001B4C  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  9068  001B4E  D013               	goto	l4519
  9069  001B50  0100               	movlb	0	; () banked
  9070  001B52  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  9071  001B54  E104               	bnz	u5030
  9072  001B56  0100               	movlb	0	; () banked
  9073  001B58  2965               	incf	___fldiv@new_exp& (0+255),w,b
  9074  001B5A  A0D8               	btfss	status,0,c
  9075  001B5C  D00C               	goto	l4519
  9076  001B5E                     u5030:
  9077                           
  9078                           ; BSR set to: 0
  9079  001B5E  0E00               	movlw	0
  9080  001B60  0100               	movlb	0	; () banked
  9081  001B62  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
  9082  001B64  6965               	setf	___fldiv@new_exp& (0+255),b
  9083  001B66  0E00               	movlw	0
  9084  001B68  6E36               	movwf	___fldiv@b,c
  9085  001B6A  0E00               	movlw	0
  9086  001B6C  6E37               	movwf	___fldiv@b+1,c
  9087  001B6E  0E00               	movlw	0
  9088  001B70  6E38               	movwf	___fldiv@b+2,c
  9089  001B72  0E00               	movlw	0
  9090  001B74  6E39               	movwf	___fldiv@b+3,c
  9091  001B76                     l4519:
  9092                           
  9093                           ; BSR set to: 0
  9094  001B76  0100               	movlb	0	; () banked
  9095  001B78  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  9096  001B7A  D007               	goto	l4521
  9097  001B7C  0100               	movlb	0	; () banked
  9098  001B7E  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  9099  001B80  E114               	bnz	l4523
  9100  001B82  0100               	movlb	0	; () banked
  9101  001B84  0565               	decf	___fldiv@new_exp& (0+255),w,b
  9102  001B86  B0D8               	btfsc	status,0,c
  9103  001B88  D010               	goto	l4523
  9104  001B8A                     l4521:
  9105                           
  9106                           ; BSR set to: 0
  9107  001B8A  0E00               	movlw	0
  9108  001B8C  0100               	movlb	0	; () banked
  9109  001B8E  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
  9110  001B90  0E00               	movlw	0
  9111  001B92  6F65               	movwf	___fldiv@new_exp& (0+255),b
  9112  001B94  0E00               	movlw	0
  9113  001B96  6E36               	movwf	___fldiv@b,c
  9114  001B98  0E00               	movlw	0
  9115  001B9A  6E37               	movwf	___fldiv@b+1,c
  9116  001B9C  0E00               	movlw	0
  9117  001B9E  6E38               	movwf	___fldiv@b+2,c
  9118  001BA0  0E00               	movlw	0
  9119  001BA2  6E39               	movwf	___fldiv@b+3,c
  9120  001BA4  0E00               	movlw	0
  9121  001BA6  0100               	movlb	0	; () banked
  9122  001BA8  6F60               	movwf	___fldiv@sign& (0+255),b
  9123  001BAA                     l4523:
  9124                           
  9125                           ; BSR set to: 0
  9126  001BAA  C065  F06B         	movff	___fldiv@new_exp,___fldiv@bexp
  9127                           
  9128                           ; BSR set to: 0
  9129  001BAE  0100               	movlb	0	; () banked
  9130  001BB0  A16B               	btfss	___fldiv@bexp& (0+255),0,b
  9131  001BB2  D002               	goto	l4529
  9132                           
  9133                           ; BSR set to: 0
  9134  001BB4  8E38               	bsf	___fldiv@b+2,7,c
  9135  001BB6  D001               	goto	l4531
  9136  001BB8                     l4529:
  9137                           
  9138                           ; BSR set to: 0
  9139  001BB8  9E38               	bcf	___fldiv@b+2,7,c
  9140  001BBA                     l4531:
  9141                           
  9142                           ; BSR set to: 0
  9143  001BBA  0100               	movlb	0	; () banked
  9144  001BBC  90D8               	bcf	status,0,c
  9145  001BBE  316B               	rrcf	___fldiv@bexp& (0+255),w,b
  9146  001BC0  6E39               	movwf	___fldiv@b+3,c
  9147                           
  9148                           ; BSR set to: 0
  9149  001BC2  0100               	movlb	0	; () banked
  9150  001BC4  5160               	movf	___fldiv@sign& (0+255),w,b
  9151  001BC6  1239               	iorwf	___fldiv@b+3,f,c
  9152                           
  9153                           ; BSR set to: 0
  9154  001BC8  C036  F036         	movff	___fldiv@b,?___fldiv
  9155  001BCC  C037  F037         	movff	___fldiv@b+1,?___fldiv+1
  9156  001BD0  C038  F038         	movff	___fldiv@b+2,?___fldiv+2
  9157  001BD4  C039  F039         	movff	___fldiv@b+3,?___fldiv+3
  9158  001BD8  0012               	return	
  9159  001BDA                     __end_of___fldiv:
  9160                           	opt stack 0
  9161                           tblptru	equ	0xFF8
  9162                           tblptrh	equ	0xFF7
  9163                           tblptrl	equ	0xFF6
  9164                           tablat	equ	0xFF5
  9165                           prodh	equ	0xFF4
  9166                           prodl	equ	0xFF3
  9167                           intcon	equ	0xFF2
  9168                           postinc0	equ	0xFEE
  9169                           wreg	equ	0xFE8
  9170                           indf1	equ	0xFE7
  9171                           postdec1	equ	0xFE5
  9172                           plusw1	equ	0xFE3
  9173                           fsr1h	equ	0xFE2
  9174                           fsr1l	equ	0xFE1
  9175                           indf2	equ	0xFDF
  9176                           postinc2	equ	0xFDE
  9177                           plusw2	equ	0xFDB
  9178                           fsr2h	equ	0xFDA
  9179                           fsr2l	equ	0xFD9
  9180                           status	equ	0xFD8
  9181                           
  9182 ;; *************** function _LCD_write_string *****************
  9183 ;; Defined at:
  9184 ;;		line 194 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/src\LCD_44780.c"
  9185 ;; Parameters:    Size  Location     Type
  9186 ;;  buffer          2   31[COMRAM] PTR unsigned char 
  9187 ;;		 -> str(8), LCD_write_integer@convertedInt(6), 
  9188 ;; Auto vars:     Size  Location     Type
  9189 ;;		None
  9190 ;; Return value:  Size  Location     Type
  9191 ;;		None               void
  9192 ;; Registers used:
  9193 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9194 ;; Tracked objects:
  9195 ;;		On entry : 0/0
  9196 ;;		On exit  : 0/0
  9197 ;;		Unchanged: 0/0
  9198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9199 ;;      Params:         2       0       0       0       0       0       0       0       0
  9200 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9201 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9202 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9203 ;;Total ram usage:        2 bytes
  9204 ;; Hardware stack levels used:    1
  9205 ;; Hardware stack levels required when called:    6
  9206 ;; This function calls:
  9207 ;;		_LCD_write_char
  9208 ;; This function is called by:
  9209 ;;		_LCD_write_integer
  9210 ;;		_scarica
  9211 ;;		_ricarica
  9212 ;; This function uses a non-reentrant model
  9213 ;;
  9214                           
  9215                           	psect	text29
  9216  0032A6                     __ptext29:
  9217                           	opt stack 0
  9218  0032A6                     _LCD_write_string:
  9219                           	opt stack 23
  9220                           
  9221                           ;src\LCD_44780.c: 197: while(*buffer){
  9222                           
  9223                           ; BSR set to: 0
  9224                           ;incstack = 0
  9225  0032A6  D009               	goto	l3129
  9226  0032A8                     l3125:
  9227                           
  9228                           ;src\LCD_44780.c: 200: LCD_write_char(*buffer);
  9229  0032A8  C020  FFD9         	movff	LCD_write_string@buffer,fsr2l
  9230  0032AC  C021  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
  9231  0032B0  50DF               	movf	indf2,w,c
  9232  0032B2  EC5E  F017         	call	_LCD_write_char
  9233                           
  9234                           ;src\LCD_44780.c: 202: buffer++;
  9235  0032B6  4A20               	infsnz	LCD_write_string@buffer,f,c
  9236  0032B8  2A21               	incf	LCD_write_string@buffer+1,f,c
  9237  0032BA                     l3129:
  9238  0032BA  C020  FFD9         	movff	LCD_write_string@buffer,fsr2l
  9239  0032BE  C021  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
  9240  0032C2  50DF               	movf	indf2,w,c
  9241  0032C4  B4D8               	btfsc	status,2,c
  9242  0032C6  0012               	return	
  9243  0032C8  D7EF               	goto	l3125
  9244  0032CA                     __end_of_LCD_write_string:
  9245                           	opt stack 0
  9246                           tblptru	equ	0xFF8
  9247                           tblptrh	equ	0xFF7
  9248                           tblptrl	equ	0xFF6
  9249                           tablat	equ	0xFF5
  9250                           prodh	equ	0xFF4
  9251                           prodl	equ	0xFF3
  9252                           intcon	equ	0xFF2
  9253                           postinc0	equ	0xFEE
  9254                           wreg	equ	0xFE8
  9255                           indf1	equ	0xFE7
  9256                           postdec1	equ	0xFE5
  9257                           plusw1	equ	0xFE3
  9258                           fsr1h	equ	0xFE2
  9259                           fsr1l	equ	0xFE1
  9260                           indf2	equ	0xFDF
  9261                           postinc2	equ	0xFDE
  9262                           plusw2	equ	0xFDB
  9263                           fsr2h	equ	0xFDA
  9264                           fsr2l	equ	0xFD9
  9265                           status	equ	0xFD8
  9266                           
  9267 ;; *************** function _LCD_goto_line *****************
  9268 ;; Defined at:
  9269 ;;		line 111 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/src\LCD_44780.c"
  9270 ;; Parameters:    Size  Location     Type
  9271 ;;  line            1    wreg     unsigned char 
  9272 ;; Auto vars:     Size  Location     Type
  9273 ;;  line            1   26[COMRAM] unsigned char 
  9274 ;; Return value:  Size  Location     Type
  9275 ;;		None               void
  9276 ;; Registers used:
  9277 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9278 ;; Tracked objects:
  9279 ;;		On entry : 0/0
  9280 ;;		On exit  : 0/0
  9281 ;;		Unchanged: 0/0
  9282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9283 ;;      Params:         0       0       0       0       0       0       0       0       0
  9284 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9285 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9286 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9287 ;;Total ram usage:        1 bytes
  9288 ;; Hardware stack levels used:    1
  9289 ;; Hardware stack levels required when called:    5
  9290 ;; This function calls:
  9291 ;;		_LCD_send_command
  9292 ;; This function is called by:
  9293 ;;		_main
  9294 ;;		_scarica
  9295 ;;		_ricarica
  9296 ;;		_LCD_goto_xy
  9297 ;; This function uses a non-reentrant model
  9298 ;;
  9299                           
  9300                           	psect	text30
  9301  002BEA                     __ptext30:
  9302                           	opt stack 0
  9303  002BEA                     _LCD_goto_line:
  9304                           	opt stack 24
  9305                           
  9306                           ;incstack = 0
  9307                           ;LCD_goto_line@line stored from wreg
  9308  002BEA  6E1B               	movwf	LCD_goto_line@line,c
  9309                           
  9310                           ;src\LCD_44780.c: 113: switch(line) {
  9311  002BEC  D04C               	goto	l3643
  9312  002BEE                     l3635:
  9313  002BEE  0E00               	movlw	0
  9314  002BF0  6E17               	movwf	LCD_send_command@D2,c
  9315  002BF2  0E00               	movlw	0
  9316  002BF4  6E18               	movwf	LCD_send_command@D1,c
  9317  002BF6  0E00               	movlw	0
  9318  002BF8  6E19               	movwf	LCD_send_command@D0,c
  9319  002BFA  0E01               	movlw	1
  9320  002BFC  ECC2  F018         	call	_LCD_send_command
  9321                           
  9322                           ;src\LCD_44780.c: 116: LCD_send_command(0,0,0,0);
  9323  002C00  0E00               	movlw	0
  9324  002C02  6E17               	movwf	LCD_send_command@D2,c
  9325  002C04  0E00               	movlw	0
  9326  002C06  6E18               	movwf	LCD_send_command@D1,c
  9327  002C08  0E00               	movlw	0
  9328  002C0A  6E19               	movwf	LCD_send_command@D0,c
  9329  002C0C  0E00               	movlw	0
  9330  002C0E  ECC2  F018         	call	_LCD_send_command
  9331                           
  9332                           ;src\LCD_44780.c: 117: break;
  9333  002C12  0012               	return	
  9334  002C14                     l3637:
  9335  002C14  0E01               	movlw	1
  9336  002C16  6E17               	movwf	LCD_send_command@D2,c
  9337  002C18  0E00               	movlw	0
  9338  002C1A  6E18               	movwf	LCD_send_command@D1,c
  9339  002C1C  0E00               	movlw	0
  9340  002C1E  6E19               	movwf	LCD_send_command@D0,c
  9341  002C20  0E01               	movlw	1
  9342  002C22  ECC2  F018         	call	_LCD_send_command
  9343                           
  9344                           ;src\LCD_44780.c: 120: LCD_send_command(0,0,0,0);
  9345  002C26  0E00               	movlw	0
  9346  002C28  6E17               	movwf	LCD_send_command@D2,c
  9347  002C2A  0E00               	movlw	0
  9348  002C2C  6E18               	movwf	LCD_send_command@D1,c
  9349  002C2E  0E00               	movlw	0
  9350  002C30  6E19               	movwf	LCD_send_command@D0,c
  9351  002C32  0E00               	movlw	0
  9352  002C34  ECC2  F018         	call	_LCD_send_command
  9353                           
  9354                           ;src\LCD_44780.c: 121: break;
  9355  002C38  0012               	return	
  9356  002C3A                     l3639:
  9357  002C3A  0E00               	movlw	0
  9358  002C3C  6E17               	movwf	LCD_send_command@D2,c
  9359  002C3E  0E00               	movlw	0
  9360  002C40  6E18               	movwf	LCD_send_command@D1,c
  9361  002C42  0E01               	movlw	1
  9362  002C44  6E19               	movwf	LCD_send_command@D0,c
  9363  002C46  0E01               	movlw	1
  9364  002C48  ECC2  F018         	call	_LCD_send_command
  9365                           
  9366                           ;src\LCD_44780.c: 124: LCD_send_command(0,1,0,0);
  9367  002C4C  0E01               	movlw	1
  9368  002C4E  6E17               	movwf	LCD_send_command@D2,c
  9369  002C50  0E00               	movlw	0
  9370  002C52  6E18               	movwf	LCD_send_command@D1,c
  9371  002C54  0E00               	movlw	0
  9372  002C56  6E19               	movwf	LCD_send_command@D0,c
  9373  002C58  0E00               	movlw	0
  9374  002C5A  ECC2  F018         	call	_LCD_send_command
  9375                           
  9376                           ;src\LCD_44780.c: 125: break;
  9377  002C5E  0012               	return	
  9378  002C60                     l3641:
  9379  002C60  0E01               	movlw	1
  9380  002C62  6E17               	movwf	LCD_send_command@D2,c
  9381  002C64  0E00               	movlw	0
  9382  002C66  6E18               	movwf	LCD_send_command@D1,c
  9383  002C68  0E01               	movlw	1
  9384  002C6A  6E19               	movwf	LCD_send_command@D0,c
  9385  002C6C  0E01               	movlw	1
  9386  002C6E  ECC2  F018         	call	_LCD_send_command
  9387                           
  9388                           ;src\LCD_44780.c: 128: LCD_send_command(0,1,0,0);
  9389  002C72  0E01               	movlw	1
  9390  002C74  6E17               	movwf	LCD_send_command@D2,c
  9391  002C76  0E00               	movlw	0
  9392  002C78  6E18               	movwf	LCD_send_command@D1,c
  9393  002C7A  0E00               	movlw	0
  9394  002C7C  6E19               	movwf	LCD_send_command@D0,c
  9395  002C7E  0E00               	movlw	0
  9396  002C80  ECC2  F018         	call	_LCD_send_command
  9397                           
  9398                           ;src\LCD_44780.c: 129: }
  9399  002C84  0012               	return	
  9400  002C86                     l3643:
  9401  002C86  501B               	movf	LCD_goto_line@line,w,c
  9402                           
  9403                           ; Switch size 1, requested type "space"
  9404                           ; Number of cases is 4, Range of values is 1 to 4
  9405                           ; switch strategies available:
  9406                           ; Name         Instructions Cycles
  9407                           ; simple_byte           13     7 (average)
  9408                           ;	Chosen strategy is simple_byte
  9409  002C88  0A01               	xorlw	1	; case 1
  9410  002C8A  B4D8               	btfsc	status,2,c
  9411  002C8C  D7B0               	goto	l3635
  9412  002C8E  0A03               	xorlw	3	; case 2
  9413  002C90  B4D8               	btfsc	status,2,c
  9414  002C92  D7C0               	goto	l3637
  9415  002C94  0A01               	xorlw	1	; case 3
  9416  002C96  B4D8               	btfsc	status,2,c
  9417  002C98  D7D0               	goto	l3639
  9418  002C9A  0A07               	xorlw	7	; case 4
  9419  002C9C  A4D8               	btfss	status,2,c
  9420  002C9E  0012               	return	
  9421  002CA0  D7DF               	goto	l3641
  9422  002CA2                     __end_of_LCD_goto_line:
  9423                           	opt stack 0
  9424                           tblptru	equ	0xFF8
  9425                           tblptrh	equ	0xFF7
  9426                           tblptrl	equ	0xFF6
  9427                           tablat	equ	0xFF5
  9428                           prodh	equ	0xFF4
  9429                           prodl	equ	0xFF3
  9430                           intcon	equ	0xFF2
  9431                           postinc0	equ	0xFEE
  9432                           wreg	equ	0xFE8
  9433                           indf1	equ	0xFE7
  9434                           postdec1	equ	0xFE5
  9435                           plusw1	equ	0xFE3
  9436                           fsr1h	equ	0xFE2
  9437                           fsr1l	equ	0xFE1
  9438                           indf2	equ	0xFDF
  9439                           postinc2	equ	0xFDE
  9440                           plusw2	equ	0xFDB
  9441                           fsr2h	equ	0xFDA
  9442                           fsr2l	equ	0xFD9
  9443                           status	equ	0xFD8
  9444                           
  9445 ;; *************** function _inizializzazione *****************
  9446 ;; Defined at:
  9447 ;;		line 196 in file "tester.c"
  9448 ;; Parameters:    Size  Location     Type
  9449 ;;		None
  9450 ;; Auto vars:     Size  Location     Type
  9451 ;;		None
  9452 ;; Return value:  Size  Location     Type
  9453 ;;		None               void
  9454 ;; Registers used:
  9455 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9456 ;; Tracked objects:
  9457 ;;		On entry : 0/0
  9458 ;;		On exit  : 0/0
  9459 ;;		Unchanged: 0/0
  9460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9461 ;;      Params:         0       0       0       0       0       0       0       0       0
  9462 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9463 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9464 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9465 ;;Total ram usage:        0 bytes
  9466 ;; Hardware stack levels used:    1
  9467 ;; Hardware stack levels required when called:    7
  9468 ;; This function calls:
  9469 ;;		_LCD_clear
  9470 ;;		_LCD_initialize
  9471 ;;		_LCD_write_message
  9472 ;;		_delay_ms
  9473 ;; This function is called by:
  9474 ;;		_main
  9475 ;; This function uses a non-reentrant model
  9476 ;;
  9477                           
  9478                           	psect	text31
  9479  002F92                     __ptext31:
  9480                           	opt stack 0
  9481  002F92                     _inizializzazione:
  9482                           	opt stack 23
  9483                           
  9484                           ;tester.c: 197: LATA = 0x00;
  9485                           
  9486                           ;incstack = 0
  9487  002F92  0E00               	movlw	0
  9488  002F94  6E89               	movwf	3977,c	;volatile
  9489                           
  9490                           ;tester.c: 198: TRISA = 0b11110111;
  9491  002F96  0EF7               	movlw	247
  9492  002F98  6E92               	movwf	3986,c	;volatile
  9493                           
  9494                           ;tester.c: 200: LATB = 0x00;
  9495  002F9A  0E00               	movlw	0
  9496  002F9C  6E8A               	movwf	3978,c	;volatile
  9497                           
  9498                           ;tester.c: 201: TRISB = 0x00;
  9499  002F9E  0E00               	movlw	0
  9500  002FA0  6E93               	movwf	3987,c	;volatile
  9501                           
  9502                           ;tester.c: 203: LATC = 0x00;
  9503  002FA2  0E00               	movlw	0
  9504  002FA4  6E8B               	movwf	3979,c	;volatile
  9505                           
  9506                           ;tester.c: 204: TRISC = 0b11111111;
  9507  002FA6  6894               	setf	3988,c	;volatile
  9508                           
  9509                           ;tester.c: 206: LCD_initialize(16);
  9510  002FA8  0E10               	movlw	16
  9511  002FAA  EC2A  F014         	call	_LCD_initialize
  9512                           
  9513                           ;tester.c: 207: LCD_write_message("TESTER BATTERIE");
  9514  002FAE  0EB4               	movlw	low STR_19
  9515  002FB0  6E20               	movwf	LCD_write_message@buffer,c
  9516  002FB2  0E7F               	movlw	high STR_19
  9517  002FB4  6E21               	movwf	LCD_write_message@buffer+1,c
  9518  002FB6  ECF1  F018         	call	_LCD_write_message	;wreg free
  9519                           
  9520                           ;tester.c: 208: delay_ms(500);
  9521  002FBA  0E01               	movlw	1
  9522  002FBC  6E16               	movwf	delay_ms@value_ms+1,c
  9523  002FBE  0EF4               	movlw	244
  9524  002FC0  6E15               	movwf	delay_ms@value_ms,c
  9525  002FC2  ECA9  F018         	call	_delay_ms	;wreg free
  9526                           
  9527                           ;tester.c: 209: LCD_clear();
  9528  002FC6  EC2D  F019         	call	_LCD_clear	;wreg free
  9529                           
  9530                           ;tester.c: 211: ADCON0 = 0b00000000;
  9531  002FCA  0E00               	movlw	0
  9532  002FCC  6EC2               	movwf	4034,c	;volatile
  9533                           
  9534                           ;tester.c: 212: ADCON1 = 0b00001100;
  9535  002FCE  0E0C               	movlw	12
  9536  002FD0  6EC1               	movwf	4033,c	;volatile
  9537                           
  9538                           ;tester.c: 213: ADCON2 = 0b10111110;
  9539  002FD2  0EBE               	movlw	190
  9540  002FD4  6EC0               	movwf	4032,c	;volatile
  9541                           
  9542                           ;tester.c: 214: ADCON0bits.CHS3 = 0;
  9543  002FD6  9AC2               	bcf	4034,5,c	;volatile
  9544                           
  9545                           ;tester.c: 215: ADCON0bits.CHS2 = 0;
  9546  002FD8  98C2               	bcf	4034,4,c	;volatile
  9547                           
  9548                           ;tester.c: 216: ADCON0bits.CHS1 = 0;
  9549  002FDA  96C2               	bcf	4034,3,c	;volatile
  9550                           
  9551                           ;tester.c: 217: T0CON = 0x85;
  9552  002FDC  0E85               	movlw	133
  9553  002FDE  6ED5               	movwf	4053,c	;volatile
  9554                           
  9555                           ;tester.c: 218: TMR0H = 0x0B;
  9556  002FE0  0E0B               	movlw	11
  9557  002FE2  6ED7               	movwf	4055,c	;volatile
  9558                           
  9559                           ;tester.c: 219: TMR0L = 0xDC;
  9560  002FE4  0EDC               	movlw	220
  9561  002FE6  6ED6               	movwf	4054,c	;volatile
  9562                           
  9563                           ;tester.c: 220: INTCONbits.GIE = 1;
  9564  002FE8  8EF2               	bsf	intcon,7,c	;volatile
  9565                           
  9566                           ;tester.c: 221: INTCONbits.TMR0IF = 0;
  9567  002FEA  94F2               	bcf	intcon,2,c	;volatile
  9568                           
  9569                           ;tester.c: 222: INTCONbits.TMR0IE = 1;
  9570  002FEC  8AF2               	bsf	intcon,5,c	;volatile
  9571                           
  9572                           ;tester.c: 223: ADCON0bits.ADON = 1;
  9573  002FEE  80C2               	bsf	4034,0,c	;volatile
  9574  002FF0  0012               	return		;funcret
  9575  002FF2                     __end_of_inizializzazione:
  9576                           	opt stack 0
  9577                           tblptru	equ	0xFF8
  9578                           tblptrh	equ	0xFF7
  9579                           tblptrl	equ	0xFF6
  9580                           tablat	equ	0xFF5
  9581                           prodh	equ	0xFF4
  9582                           prodl	equ	0xFF3
  9583                           intcon	equ	0xFF2
  9584                           postinc0	equ	0xFEE
  9585                           wreg	equ	0xFE8
  9586                           indf1	equ	0xFE7
  9587                           postdec1	equ	0xFE5
  9588                           plusw1	equ	0xFE3
  9589                           fsr1h	equ	0xFE2
  9590                           fsr1l	equ	0xFE1
  9591                           indf2	equ	0xFDF
  9592                           postinc2	equ	0xFDE
  9593                           plusw2	equ	0xFDB
  9594                           fsr2h	equ	0xFDA
  9595                           fsr2l	equ	0xFD9
  9596                           status	equ	0xFD8
  9597                           
  9598 ;; *************** function _LCD_write_message *****************
  9599 ;; Defined at:
  9600 ;;		line 178 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/src\LCD_44780.c"
  9601 ;; Parameters:    Size  Location     Type
  9602 ;;  buffer          2   31[COMRAM] PTR const unsigned char 
  9603 ;;		 -> STR_19(16), STR_18(17), STR_15(17), STR_14(9), 
  9604 ;;		 -> STR_13(3), STR_11(3), STR_9(3), STR_8(17), 
  9605 ;;		 -> STR_5(2), STR_4(2), STR_3(7), STR_2(16), 
  9606 ;;		 -> STR_1(16), 
  9607 ;; Auto vars:     Size  Location     Type
  9608 ;;		None
  9609 ;; Return value:  Size  Location     Type
  9610 ;;		None               void
  9611 ;; Registers used:
  9612 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9613 ;; Tracked objects:
  9614 ;;		On entry : 0/0
  9615 ;;		On exit  : 0/0
  9616 ;;		Unchanged: 0/0
  9617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9618 ;;      Params:         2       0       0       0       0       0       0       0       0
  9619 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9620 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9621 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9622 ;;Total ram usage:        2 bytes
  9623 ;; Hardware stack levels used:    1
  9624 ;; Hardware stack levels required when called:    6
  9625 ;; This function calls:
  9626 ;;		_LCD_write_char
  9627 ;; This function is called by:
  9628 ;;		_main
  9629 ;;		_scarica
  9630 ;;		_ricarica
  9631 ;;		_inizializzazione
  9632 ;; This function uses a non-reentrant model
  9633 ;;
  9634                           
  9635                           	psect	text32
  9636  0031E2                     __ptext32:
  9637                           	opt stack 0
  9638  0031E2                     _LCD_write_message:
  9639                           	opt stack 23
  9640                           
  9641                           ;src\LCD_44780.c: 181: while(*buffer) {
  9642                           
  9643                           ;incstack = 0
  9644  0031E2  D00A               	goto	l3651
  9645  0031E4                     l3647:
  9646                           
  9647                           ;src\LCD_44780.c: 184: LCD_write_char(*buffer);
  9648  0031E4  C020  FFF6         	movff	LCD_write_message@buffer,tblptrl
  9649  0031E8  C021  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
  9650  0031EC                     	if	0	;tblptru may be non-zero
  9651  0031EC                     	endif
  9652  0031EC                     	if	0	;tblptru may be non-zero
  9653  0031EC                     	endif
  9654  0031EC  0008               	tblrd		*
  9655  0031EE  50F5               	movf	tablat,w,c
  9656  0031F0  EC5E  F017         	call	_LCD_write_char
  9657                           
  9658                           ;src\LCD_44780.c: 186: buffer++;
  9659  0031F4  4A20               	infsnz	LCD_write_message@buffer,f,c
  9660  0031F6  2A21               	incf	LCD_write_message@buffer+1,f,c
  9661  0031F8                     l3651:
  9662  0031F8  C020  FFF6         	movff	LCD_write_message@buffer,tblptrl
  9663  0031FC  C021  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
  9664  003200                     	if	0	;tblptru may be non-zero
  9665  003200                     	endif
  9666  003200                     	if	0	;tblptru may be non-zero
  9667  003200                     	endif
  9668  003200  0008               	tblrd		*
  9669  003202  50F5               	movf	tablat,w,c
  9670  003204  0900               	iorlw	0
  9671  003206  B4D8               	btfsc	status,2,c
  9672  003208  0012               	return	
  9673  00320A  D7EC               	goto	l3647
  9674  00320C                     __end_of_LCD_write_message:
  9675                           	opt stack 0
  9676                           tblptru	equ	0xFF8
  9677                           tblptrh	equ	0xFF7
  9678                           tblptrl	equ	0xFF6
  9679                           tablat	equ	0xFF5
  9680                           prodh	equ	0xFF4
  9681                           prodl	equ	0xFF3
  9682                           intcon	equ	0xFF2
  9683                           postinc0	equ	0xFEE
  9684                           wreg	equ	0xFE8
  9685                           indf1	equ	0xFE7
  9686                           postdec1	equ	0xFE5
  9687                           plusw1	equ	0xFE3
  9688                           fsr1h	equ	0xFE2
  9689                           fsr1l	equ	0xFE1
  9690                           indf2	equ	0xFDF
  9691                           postinc2	equ	0xFDE
  9692                           plusw2	equ	0xFDB
  9693                           fsr2h	equ	0xFDA
  9694                           fsr2l	equ	0xFD9
  9695                           status	equ	0xFD8
  9696                           
  9697 ;; *************** function _LCD_write_char *****************
  9698 ;; Defined at:
  9699 ;;		line 145 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/src\LCD_44780.c"
  9700 ;; Parameters:    Size  Location     Type
  9701 ;;  value           1    wreg     unsigned char 
  9702 ;; Auto vars:     Size  Location     Type
  9703 ;;  value           1   30[COMRAM] unsigned char 
  9704 ;;  D0              1   29[COMRAM] unsigned char 
  9705 ;;  D1              1   28[COMRAM] unsigned char 
  9706 ;;  D2              1   27[COMRAM] unsigned char 
  9707 ;;  D3              1   26[COMRAM] unsigned char 
  9708 ;; Return value:  Size  Location     Type
  9709 ;;		None               void
  9710 ;; Registers used:
  9711 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9712 ;; Tracked objects:
  9713 ;;		On entry : 0/0
  9714 ;;		On exit  : 0/0
  9715 ;;		Unchanged: 0/0
  9716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9717 ;;      Params:         0       0       0       0       0       0       0       0       0
  9718 ;;      Locals:         5       0       0       0       0       0       0       0       0
  9719 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9720 ;;      Totals:         5       0       0       0       0       0       0       0       0
  9721 ;;Total ram usage:        5 bytes
  9722 ;; Hardware stack levels used:    1
  9723 ;; Hardware stack levels required when called:    5
  9724 ;; This function calls:
  9725 ;;		_LCD_send_command
  9726 ;; This function is called by:
  9727 ;;		_LCD_write_message
  9728 ;;		_LCD_write_string
  9729 ;; This function uses a non-reentrant model
  9730 ;;
  9731                           
  9732                           	psect	text33
  9733  002EBC                     __ptext33:
  9734                           	opt stack 0
  9735  002EBC                     _LCD_write_char:
  9736                           	opt stack 23
  9737                           
  9738                           ;incstack = 0
  9739                           ;LCD_write_char@value stored from wreg
  9740  002EBC  6E1F               	movwf	LCD_write_char@value,c
  9741                           
  9742                           ;src\LCD_44780.c: 147: unsigned char D3,D2,D1,D0;
  9743                           ;src\LCD_44780.c: 149: PORTBbits.RB1 = 1;
  9744  002EBE  8281               	bsf	3969,1,c	;volatile
  9745                           
  9746                           ;src\LCD_44780.c: 152: D3 = (value & 0b10000000) >> 7;
  9747  002EC0  441F               	rlncf	LCD_write_char@value,w,c
  9748  002EC2  0B01               	andlw	1
  9749  002EC4  6E1B               	movwf	LCD_write_char@D3,c
  9750                           
  9751                           ;src\LCD_44780.c: 153: D2 = (value & 0b01000000) >> 6;
  9752  002EC6  441F               	rlncf	LCD_write_char@value,w,c
  9753  002EC8  46E8               	rlncf	wreg,f,c
  9754  002ECA  0B03               	andlw	3
  9755  002ECC  0B01               	andlw	1
  9756  002ECE  6E1C               	movwf	LCD_write_char@D2,c
  9757                           
  9758                           ;src\LCD_44780.c: 154: D1 = (value & 0b00100000) >> 5;
  9759  002ED0  381F               	swapf	LCD_write_char@value,w,c
  9760  002ED2  42E8               	rrncf	wreg,f,c
  9761  002ED4  0B07               	andlw	7
  9762  002ED6  0B01               	andlw	1
  9763  002ED8  6E1D               	movwf	LCD_write_char@D1,c
  9764                           
  9765                           ;src\LCD_44780.c: 155: D0 = (value & 0b00010000) >> 4;
  9766  002EDA  381F               	swapf	LCD_write_char@value,w,c
  9767  002EDC  0B0F               	andlw	15
  9768  002EDE  0B01               	andlw	1
  9769  002EE0  6E1E               	movwf	LCD_write_char@D0,c
  9770                           
  9771                           ;src\LCD_44780.c: 157: LCD_send_command (D3,D2,D1,D0);
  9772  002EE2  C01C  F017         	movff	LCD_write_char@D2,LCD_send_command@D2
  9773  002EE6  C01D  F018         	movff	LCD_write_char@D1,LCD_send_command@D1
  9774  002EEA  C01E  F019         	movff	LCD_write_char@D0,LCD_send_command@D0
  9775  002EEE  501B               	movf	LCD_write_char@D3,w,c
  9776  002EF0  ECC2  F018         	call	_LCD_send_command
  9777                           
  9778                           ;src\LCD_44780.c: 160: D3 = (value & 0b00001000) >> 3;
  9779  002EF4  381F               	swapf	LCD_write_char@value,w,c
  9780  002EF6  46E8               	rlncf	wreg,f,c
  9781  002EF8  0B1F               	andlw	31
  9782  002EFA  0B01               	andlw	1
  9783  002EFC  6E1B               	movwf	LCD_write_char@D3,c
  9784                           
  9785                           ;src\LCD_44780.c: 161: D2 = (value & 0b00000100) >> 2;
  9786  002EFE  401F               	rrncf	LCD_write_char@value,w,c
  9787  002F00  42E8               	rrncf	wreg,f,c
  9788  002F02  0B3F               	andlw	63
  9789  002F04  0B01               	andlw	1
  9790  002F06  6E1C               	movwf	LCD_write_char@D2,c
  9791                           
  9792                           ;src\LCD_44780.c: 162: D1 = (value & 0b00000010) >> 1;
  9793  002F08  90D8               	bcf	status,0,c
  9794  002F0A  301F               	rrcf	LCD_write_char@value,w,c
  9795  002F0C  0B01               	andlw	1
  9796  002F0E  6E1D               	movwf	LCD_write_char@D1,c
  9797                           
  9798                           ;src\LCD_44780.c: 163: D0 = (value & 0b00000001);
  9799  002F10  501F               	movf	LCD_write_char@value,w,c
  9800  002F12  0B01               	andlw	1
  9801  002F14  6E1E               	movwf	LCD_write_char@D0,c
  9802                           
  9803                           ;src\LCD_44780.c: 165: LCD_send_command (D3,D2,D1,D0);
  9804  002F16  C01C  F017         	movff	LCD_write_char@D2,LCD_send_command@D2
  9805  002F1A  C01D  F018         	movff	LCD_write_char@D1,LCD_send_command@D1
  9806  002F1E  C01E  F019         	movff	LCD_write_char@D0,LCD_send_command@D0
  9807  002F22  501B               	movf	LCD_write_char@D3,w,c
  9808  002F24  ECC2  F018         	call	_LCD_send_command
  9809                           
  9810                           ;src\LCD_44780.c: 167: PORTBbits.RB1 = 0;
  9811  002F28  9281               	bcf	3969,1,c	;volatile
  9812  002F2A  0012               	return		;funcret
  9813  002F2C                     __end_of_LCD_write_char:
  9814                           	opt stack 0
  9815                           tblptru	equ	0xFF8
  9816                           tblptrh	equ	0xFF7
  9817                           tblptrl	equ	0xFF6
  9818                           tablat	equ	0xFF5
  9819                           prodh	equ	0xFF4
  9820                           prodl	equ	0xFF3
  9821                           intcon	equ	0xFF2
  9822                           postinc0	equ	0xFEE
  9823                           wreg	equ	0xFE8
  9824                           indf1	equ	0xFE7
  9825                           postdec1	equ	0xFE5
  9826                           plusw1	equ	0xFE3
  9827                           fsr1h	equ	0xFE2
  9828                           fsr1l	equ	0xFE1
  9829                           indf2	equ	0xFDF
  9830                           postinc2	equ	0xFDE
  9831                           plusw2	equ	0xFDB
  9832                           fsr2h	equ	0xFDA
  9833                           fsr2l	equ	0xFD9
  9834                           status	equ	0xFD8
  9835                           
  9836 ;; *************** function _LCD_initialize *****************
  9837 ;; Defined at:
  9838 ;;		line 283 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/src\LCD_44780.c"
  9839 ;; Parameters:    Size  Location     Type
  9840 ;;  quartz_frequ    1    wreg     unsigned char 
  9841 ;; Auto vars:     Size  Location     Type
  9842 ;;  quartz_frequ    1   28[COMRAM] unsigned char 
  9843 ;; Return value:  Size  Location     Type
  9844 ;;		None               void
  9845 ;; Registers used:
  9846 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9847 ;; Tracked objects:
  9848 ;;		On entry : 0/0
  9849 ;;		On exit  : 0/0
  9850 ;;		Unchanged: 0/0
  9851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9852 ;;      Params:         0       0       0       0       0       0       0       0       0
  9853 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9854 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9855 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9856 ;;Total ram usage:        1 bytes
  9857 ;; Hardware stack levels used:    1
  9858 ;; Hardware stack levels required when called:    6
  9859 ;; This function calls:
  9860 ;;		_LCD_clear
  9861 ;;		_LCD_cursor
  9862 ;;		_LCD_send_command
  9863 ;;		_delay_ms
  9864 ;;		_delay_set_quartz
  9865 ;; This function is called by:
  9866 ;;		_inizializzazione
  9867 ;; This function uses a non-reentrant model
  9868 ;;
  9869                           
  9870                           	psect	text34
  9871  002854                     __ptext34:
  9872                           	opt stack 0
  9873  002854                     _LCD_initialize:
  9874                           	opt stack 23
  9875                           
  9876                           ;incstack = 0
  9877                           ;LCD_initialize@quartz_frequency stored from wreg
  9878  002854  6E1D               	movwf	LCD_initialize@quartz_frequency,c
  9879                           
  9880                           ;src\LCD_44780.c: 285: delay_set_quartz (quartz_frequency);
  9881  002856  501D               	movf	LCD_initialize@quartz_frequency,w,c
  9882  002858  EC93  F019         	call	_delay_set_quartz
  9883                           
  9884                           ;src\LCD_44780.c: 287: PORTBbits.RB1 = 0x00;
  9885  00285C  9281               	bcf	3969,1,c	;volatile
  9886                           
  9887                           ;src\LCD_44780.c: 288: PORTBbits.RB3 = 0x00;
  9888  00285E  9681               	bcf	3969,3,c	;volatile
  9889                           
  9890                           ;src\LCD_44780.c: 289: PORTBbits.RB2 = 0x00;
  9891  002860  9481               	bcf	3969,2,c	;volatile
  9892                           
  9893                           ;src\LCD_44780.c: 291: delay_ms (100);
  9894  002862  0E00               	movlw	0
  9895  002864  6E16               	movwf	delay_ms@value_ms+1,c
  9896  002866  0E64               	movlw	100
  9897  002868  6E15               	movwf	delay_ms@value_ms,c
  9898  00286A  ECA9  F018         	call	_delay_ms	;wreg free
  9899                           
  9900                           ;src\LCD_44780.c: 292: LCD_send_command (0,0,1,1);
  9901  00286E  0E00               	movlw	0
  9902  002870  6E17               	movwf	LCD_send_command@D2,c
  9903  002872  0E01               	movlw	1
  9904  002874  6E18               	movwf	LCD_send_command@D1,c
  9905  002876  0E01               	movlw	1
  9906  002878  6E19               	movwf	LCD_send_command@D0,c
  9907  00287A  0E00               	movlw	0
  9908  00287C  ECC2  F018         	call	_LCD_send_command
  9909                           
  9910                           ;src\LCD_44780.c: 293: delay_ms (100);
  9911  002880  0E00               	movlw	0
  9912  002882  6E16               	movwf	delay_ms@value_ms+1,c
  9913  002884  0E64               	movlw	100
  9914  002886  6E15               	movwf	delay_ms@value_ms,c
  9915  002888  ECA9  F018         	call	_delay_ms	;wreg free
  9916                           
  9917                           ;src\LCD_44780.c: 294: LCD_send_command (0,0,1,1);
  9918  00288C  0E00               	movlw	0
  9919  00288E  6E17               	movwf	LCD_send_command@D2,c
  9920  002890  0E01               	movlw	1
  9921  002892  6E18               	movwf	LCD_send_command@D1,c
  9922  002894  0E01               	movlw	1
  9923  002896  6E19               	movwf	LCD_send_command@D0,c
  9924  002898  0E00               	movlw	0
  9925  00289A  ECC2  F018         	call	_LCD_send_command
  9926                           
  9927                           ;src\LCD_44780.c: 295: delay_ms (10);
  9928  00289E  0E00               	movlw	0
  9929  0028A0  6E16               	movwf	delay_ms@value_ms+1,c
  9930  0028A2  0E0A               	movlw	10
  9931  0028A4  6E15               	movwf	delay_ms@value_ms,c
  9932  0028A6  ECA9  F018         	call	_delay_ms	;wreg free
  9933                           
  9934                           ;src\LCD_44780.c: 296: LCD_send_command (0,0,1,1);
  9935  0028AA  0E00               	movlw	0
  9936  0028AC  6E17               	movwf	LCD_send_command@D2,c
  9937  0028AE  0E01               	movlw	1
  9938  0028B0  6E18               	movwf	LCD_send_command@D1,c
  9939  0028B2  0E01               	movlw	1
  9940  0028B4  6E19               	movwf	LCD_send_command@D0,c
  9941  0028B6  0E00               	movlw	0
  9942  0028B8  ECC2  F018         	call	_LCD_send_command
  9943                           
  9944                           ;src\LCD_44780.c: 298: LCD_send_command (0,0,1,0);
  9945  0028BC  0E00               	movlw	0
  9946  0028BE  6E17               	movwf	LCD_send_command@D2,c
  9947  0028C0  0E01               	movlw	1
  9948  0028C2  6E18               	movwf	LCD_send_command@D1,c
  9949  0028C4  0E00               	movlw	0
  9950  0028C6  6E19               	movwf	LCD_send_command@D0,c
  9951  0028C8  0E00               	movlw	0
  9952  0028CA  ECC2  F018         	call	_LCD_send_command
  9953                           
  9954                           ;src\LCD_44780.c: 300: LCD_send_command (0,0,1,0);
  9955  0028CE  0E00               	movlw	0
  9956  0028D0  6E17               	movwf	LCD_send_command@D2,c
  9957  0028D2  0E01               	movlw	1
  9958  0028D4  6E18               	movwf	LCD_send_command@D1,c
  9959  0028D6  0E00               	movlw	0
  9960  0028D8  6E19               	movwf	LCD_send_command@D0,c
  9961  0028DA  0E00               	movlw	0
  9962  0028DC  ECC2  F018         	call	_LCD_send_command
  9963                           
  9964                           ;src\LCD_44780.c: 301: LCD_send_command (1,0,0,0);
  9965  0028E0  0E00               	movlw	0
  9966  0028E2  6E17               	movwf	LCD_send_command@D2,c
  9967  0028E4  0E00               	movlw	0
  9968  0028E6  6E18               	movwf	LCD_send_command@D1,c
  9969  0028E8  0E00               	movlw	0
  9970  0028EA  6E19               	movwf	LCD_send_command@D0,c
  9971  0028EC  0E01               	movlw	1
  9972  0028EE  ECC2  F018         	call	_LCD_send_command
  9973                           
  9974                           ;src\LCD_44780.c: 303: LCD_send_command (0,0,0,0);
  9975  0028F2  0E00               	movlw	0
  9976  0028F4  6E17               	movwf	LCD_send_command@D2,c
  9977  0028F6  0E00               	movlw	0
  9978  0028F8  6E18               	movwf	LCD_send_command@D1,c
  9979  0028FA  0E00               	movlw	0
  9980  0028FC  6E19               	movwf	LCD_send_command@D0,c
  9981  0028FE  0E00               	movlw	0
  9982  002900  ECC2  F018         	call	_LCD_send_command
  9983                           
  9984                           ;src\LCD_44780.c: 304: LCD_send_command (1,0,0,0);
  9985  002904  0E00               	movlw	0
  9986  002906  6E17               	movwf	LCD_send_command@D2,c
  9987  002908  0E00               	movlw	0
  9988  00290A  6E18               	movwf	LCD_send_command@D1,c
  9989  00290C  0E00               	movlw	0
  9990  00290E  6E19               	movwf	LCD_send_command@D0,c
  9991  002910  0E01               	movlw	1
  9992  002912  ECC2  F018         	call	_LCD_send_command
  9993                           
  9994                           ;src\LCD_44780.c: 306: LCD_send_command (0,0,0,0);
  9995  002916  0E00               	movlw	0
  9996  002918  6E17               	movwf	LCD_send_command@D2,c
  9997  00291A  0E00               	movlw	0
  9998  00291C  6E18               	movwf	LCD_send_command@D1,c
  9999  00291E  0E00               	movlw	0
 10000  002920  6E19               	movwf	LCD_send_command@D0,c
 10001  002922  0E00               	movlw	0
 10002  002924  ECC2  F018         	call	_LCD_send_command
 10003                           
 10004                           ;src\LCD_44780.c: 307: LCD_send_command (0,0,0,1);
 10005  002928  0E00               	movlw	0
 10006  00292A  6E17               	movwf	LCD_send_command@D2,c
 10007  00292C  0E00               	movlw	0
 10008  00292E  6E18               	movwf	LCD_send_command@D1,c
 10009  002930  0E01               	movlw	1
 10010  002932  6E19               	movwf	LCD_send_command@D0,c
 10011  002934  0E00               	movlw	0
 10012  002936  ECC2  F018         	call	_LCD_send_command
 10013                           
 10014                           ;src\LCD_44780.c: 309: LCD_send_command (0,0,0,0);
 10015  00293A  0E00               	movlw	0
 10016  00293C  6E17               	movwf	LCD_send_command@D2,c
 10017  00293E  0E00               	movlw	0
 10018  002940  6E18               	movwf	LCD_send_command@D1,c
 10019  002942  0E00               	movlw	0
 10020  002944  6E19               	movwf	LCD_send_command@D0,c
 10021  002946  0E00               	movlw	0
 10022  002948  ECC2  F018         	call	_LCD_send_command
 10023                           
 10024                           ;src\LCD_44780.c: 310: LCD_send_command (0,1,1,0);
 10025  00294C  0E01               	movlw	1
 10026  00294E  6E17               	movwf	LCD_send_command@D2,c
 10027  002950  0E01               	movlw	1
 10028  002952  6E18               	movwf	LCD_send_command@D1,c
 10029  002954  0E00               	movlw	0
 10030  002956  6E19               	movwf	LCD_send_command@D0,c
 10031  002958  0E00               	movlw	0
 10032  00295A  ECC2  F018         	call	_LCD_send_command
 10033                           
 10034                           ;src\LCD_44780.c: 312: LCD_clear ();
 10035  00295E  EC2D  F019         	call	_LCD_clear	;wreg free
 10036                           
 10037                           ;src\LCD_44780.c: 314: LCD_cursor (0,0);
 10038  002962  0E00               	movlw	0
 10039  002964  6E1B               	movwf	LCD_cursor@blinking,c
 10040  002966  0E00               	movlw	0
 10041  002968  EC06  F019         	call	_LCD_cursor
 10042  00296C  0012               	return		;funcret
 10043  00296E                     __end_of_LCD_initialize:
 10044                           	opt stack 0
 10045                           tblptru	equ	0xFF8
 10046                           tblptrh	equ	0xFF7
 10047                           tblptrl	equ	0xFF6
 10048                           tablat	equ	0xFF5
 10049                           prodh	equ	0xFF4
 10050                           prodl	equ	0xFF3
 10051                           intcon	equ	0xFF2
 10052                           postinc0	equ	0xFEE
 10053                           wreg	equ	0xFE8
 10054                           indf1	equ	0xFE7
 10055                           postdec1	equ	0xFE5
 10056                           plusw1	equ	0xFE3
 10057                           fsr1h	equ	0xFE2
 10058                           fsr1l	equ	0xFE1
 10059                           indf2	equ	0xFDF
 10060                           postinc2	equ	0xFDE
 10061                           plusw2	equ	0xFDB
 10062                           fsr2h	equ	0xFDA
 10063                           fsr2l	equ	0xFD9
 10064                           status	equ	0xFD8
 10065                           
 10066 ;; *************** function _delay_set_quartz *****************
 10067 ;; Defined at:
 10068 ;;		line 115 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/src\delay.c"
 10069 ;; Parameters:    Size  Location     Type
 10070 ;;  frequency       1    wreg     unsigned char 
 10071 ;; Auto vars:     Size  Location     Type
 10072 ;;  frequency       1   14[COMRAM] unsigned char 
 10073 ;; Return value:  Size  Location     Type
 10074 ;;		None               void
 10075 ;; Registers used:
 10076 ;;		wreg
 10077 ;; Tracked objects:
 10078 ;;		On entry : 0/0
 10079 ;;		On exit  : 0/0
 10080 ;;		Unchanged: 0/0
 10081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10082 ;;      Params:         0       0       0       0       0       0       0       0       0
 10083 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10084 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10085 ;;      Totals:         1       0       0       0       0       0       0       0       0
 10086 ;;Total ram usage:        1 bytes
 10087 ;; Hardware stack levels used:    1
 10088 ;; Hardware stack levels required when called:    1
 10089 ;; This function calls:
 10090 ;;		Nothing
 10091 ;; This function is called by:
 10092 ;;		_LCD_initialize
 10093 ;;		_main
 10094 ;; This function uses a non-reentrant model
 10095 ;;
 10096                           
 10097                           	psect	text35
 10098  003326                     __ptext35:
 10099                           	opt stack 0
 10100  003326                     _delay_set_quartz:
 10101                           	opt stack 27
 10102                           
 10103                           ;incstack = 0
 10104                           ;delay_set_quartz@frequency stored from wreg
 10105  003326  6E0F               	movwf	delay_set_quartz@frequency,c
 10106                           
 10107                           ;src\delay.c: 117: delay_quartz_frequency_value = frequency;
 10108  003328  C00F  F050         	movff	delay_set_quartz@frequency,_delay_quartz_frequency_value	;volatile
 10109  00332C  0012               	return		;funcret
 10110  00332E                     __end_of_delay_set_quartz:
 10111                           	opt stack 0
 10112                           tblptru	equ	0xFF8
 10113                           tblptrh	equ	0xFF7
 10114                           tblptrl	equ	0xFF6
 10115                           tablat	equ	0xFF5
 10116                           prodh	equ	0xFF4
 10117                           prodl	equ	0xFF3
 10118                           intcon	equ	0xFF2
 10119                           postinc0	equ	0xFEE
 10120                           wreg	equ	0xFE8
 10121                           indf1	equ	0xFE7
 10122                           postdec1	equ	0xFE5
 10123                           plusw1	equ	0xFE3
 10124                           fsr1h	equ	0xFE2
 10125                           fsr1l	equ	0xFE1
 10126                           indf2	equ	0xFDF
 10127                           postinc2	equ	0xFDE
 10128                           plusw2	equ	0xFDB
 10129                           fsr2h	equ	0xFDA
 10130                           fsr2l	equ	0xFD9
 10131                           status	equ	0xFD8
 10132                           
 10133 ;; *************** function _LCD_cursor *****************
 10134 ;; Defined at:
 10135 ;;		line 266 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/src\LCD_44780.c"
 10136 ;; Parameters:    Size  Location     Type
 10137 ;;  active          1    wreg     unsigned char 
 10138 ;;  blinking        1   26[COMRAM] unsigned char 
 10139 ;; Auto vars:     Size  Location     Type
 10140 ;;  active          1   27[COMRAM] unsigned char 
 10141 ;; Return value:  Size  Location     Type
 10142 ;;		None               void
 10143 ;; Registers used:
 10144 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10145 ;; Tracked objects:
 10146 ;;		On entry : 0/0
 10147 ;;		On exit  : 0/0
 10148 ;;		Unchanged: 0/0
 10149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10150 ;;      Params:         1       0       0       0       0       0       0       0       0
 10151 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10152 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10153 ;;      Totals:         2       0       0       0       0       0       0       0       0
 10154 ;;Total ram usage:        2 bytes
 10155 ;; Hardware stack levels used:    1
 10156 ;; Hardware stack levels required when called:    5
 10157 ;; This function calls:
 10158 ;;		_LCD_send_command
 10159 ;; This function is called by:
 10160 ;;		_LCD_initialize
 10161 ;; This function uses a non-reentrant model
 10162 ;;
 10163                           
 10164                           	psect	text36
 10165  00320C                     __ptext36:
 10166                           	opt stack 0
 10167  00320C                     _LCD_cursor:
 10168                           	opt stack 23
 10169                           
 10170                           ;incstack = 0
 10171                           ;LCD_cursor@active stored from wreg
 10172  00320C  6E1C               	movwf	LCD_cursor@active,c
 10173                           
 10174                           ;src\LCD_44780.c: 268: LCD_send_command (0,0,0,0);
 10175  00320E  0E00               	movlw	0
 10176  003210  6E17               	movwf	LCD_send_command@D2,c
 10177  003212  0E00               	movlw	0
 10178  003214  6E18               	movwf	LCD_send_command@D1,c
 10179  003216  0E00               	movlw	0
 10180  003218  6E19               	movwf	LCD_send_command@D0,c
 10181  00321A  0E00               	movlw	0
 10182  00321C  ECC2  F018         	call	_LCD_send_command
 10183                           
 10184                           ;src\LCD_44780.c: 269: LCD_send_command (1,1,active,blinking);
 10185  003220  0E01               	movlw	1
 10186  003222  6E17               	movwf	LCD_send_command@D2,c
 10187  003224  C01C  F018         	movff	LCD_cursor@active,LCD_send_command@D1
 10188  003228  C01B  F019         	movff	LCD_cursor@blinking,LCD_send_command@D0
 10189  00322C  0E01               	movlw	1
 10190  00322E  ECC2  F018         	call	_LCD_send_command
 10191  003232  0012               	return		;funcret
 10192  003234                     __end_of_LCD_cursor:
 10193                           	opt stack 0
 10194                           tblptru	equ	0xFF8
 10195                           tblptrh	equ	0xFF7
 10196                           tblptrl	equ	0xFF6
 10197                           tablat	equ	0xFF5
 10198                           prodh	equ	0xFF4
 10199                           prodl	equ	0xFF3
 10200                           intcon	equ	0xFF2
 10201                           postinc0	equ	0xFEE
 10202                           wreg	equ	0xFE8
 10203                           indf1	equ	0xFE7
 10204                           postdec1	equ	0xFE5
 10205                           plusw1	equ	0xFE3
 10206                           fsr1h	equ	0xFE2
 10207                           fsr1l	equ	0xFE1
 10208                           indf2	equ	0xFDF
 10209                           postinc2	equ	0xFDE
 10210                           plusw2	equ	0xFDB
 10211                           fsr2h	equ	0xFDA
 10212                           fsr2l	equ	0xFD9
 10213                           status	equ	0xFD8
 10214                           
 10215 ;; *************** function _LCD_clear *****************
 10216 ;; Defined at:
 10217 ;;		line 257 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/src\LCD_44780.c"
 10218 ;; Parameters:    Size  Location     Type
 10219 ;;		None
 10220 ;; Auto vars:     Size  Location     Type
 10221 ;;		None
 10222 ;; Return value:  Size  Location     Type
 10223 ;;		None               void
 10224 ;; Registers used:
 10225 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10226 ;; Tracked objects:
 10227 ;;		On entry : 0/0
 10228 ;;		On exit  : 0/0
 10229 ;;		Unchanged: 0/0
 10230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10231 ;;      Params:         0       0       0       0       0       0       0       0       0
 10232 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10233 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10234 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10235 ;;Total ram usage:        0 bytes
 10236 ;; Hardware stack levels used:    1
 10237 ;; Hardware stack levels required when called:    5
 10238 ;; This function calls:
 10239 ;;		_LCD_send_command
 10240 ;; This function is called by:
 10241 ;;		_LCD_initialize
 10242 ;;		_main
 10243 ;;		_scarica
 10244 ;;		_inizializzazione
 10245 ;; This function uses a non-reentrant model
 10246 ;;
 10247                           
 10248                           	psect	text37
 10249  00325A                     __ptext37:
 10250                           	opt stack 0
 10251  00325A                     _LCD_clear:
 10252                           	opt stack 24
 10253                           
 10254                           ;src\LCD_44780.c: 259: LCD_send_command (0,0,0,0);
 10255                           
 10256                           ;incstack = 0
 10257  00325A  0E00               	movlw	0
 10258  00325C  6E17               	movwf	LCD_send_command@D2,c
 10259  00325E  0E00               	movlw	0
 10260  003260  6E18               	movwf	LCD_send_command@D1,c
 10261  003262  0E00               	movlw	0
 10262  003264  6E19               	movwf	LCD_send_command@D0,c
 10263  003266  0E00               	movlw	0
 10264  003268  ECC2  F018         	call	_LCD_send_command
 10265                           
 10266                           ;src\LCD_44780.c: 260: LCD_send_command (0,0,0,1);
 10267  00326C  0E00               	movlw	0
 10268  00326E  6E17               	movwf	LCD_send_command@D2,c
 10269  003270  0E00               	movlw	0
 10270  003272  6E18               	movwf	LCD_send_command@D1,c
 10271  003274  0E01               	movlw	1
 10272  003276  6E19               	movwf	LCD_send_command@D0,c
 10273  003278  0E00               	movlw	0
 10274  00327A  ECC2  F018         	call	_LCD_send_command
 10275  00327E  0012               	return		;funcret
 10276  003280                     __end_of_LCD_clear:
 10277                           	opt stack 0
 10278                           tblptru	equ	0xFF8
 10279                           tblptrh	equ	0xFF7
 10280                           tblptrl	equ	0xFF6
 10281                           tablat	equ	0xFF5
 10282                           prodh	equ	0xFF4
 10283                           prodl	equ	0xFF3
 10284                           intcon	equ	0xFF2
 10285                           postinc0	equ	0xFEE
 10286                           wreg	equ	0xFE8
 10287                           indf1	equ	0xFE7
 10288                           postdec1	equ	0xFE5
 10289                           plusw1	equ	0xFE3
 10290                           fsr1h	equ	0xFE2
 10291                           fsr1l	equ	0xFE1
 10292                           indf2	equ	0xFDF
 10293                           postinc2	equ	0xFDE
 10294                           plusw2	equ	0xFDB
 10295                           fsr2h	equ	0xFDA
 10296                           fsr2l	equ	0xFD9
 10297                           status	equ	0xFD8
 10298                           
 10299 ;; *************** function _LCD_send_command *****************
 10300 ;; Defined at:
 10301 ;;		line 61 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/src\LCD_44780.c"
 10302 ;; Parameters:    Size  Location     Type
 10303 ;;  D3              1    wreg     unsigned char 
 10304 ;;  D2              1   22[COMRAM] unsigned char 
 10305 ;;  D1              1   23[COMRAM] unsigned char 
 10306 ;;  D0              1   24[COMRAM] unsigned char 
 10307 ;; Auto vars:     Size  Location     Type
 10308 ;;  D3              1   25[COMRAM] unsigned char 
 10309 ;; Return value:  Size  Location     Type
 10310 ;;		None               void
 10311 ;; Registers used:
 10312 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10313 ;; Tracked objects:
 10314 ;;		On entry : 0/0
 10315 ;;		On exit  : 0/0
 10316 ;;		Unchanged: 0/0
 10317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10318 ;;      Params:         3       0       0       0       0       0       0       0       0
 10319 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10320 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10321 ;;      Totals:         4       0       0       0       0       0       0       0       0
 10322 ;;Total ram usage:        4 bytes
 10323 ;; Hardware stack levels used:    1
 10324 ;; Hardware stack levels required when called:    4
 10325 ;; This function calls:
 10326 ;;		_LCD_enable_pulse
 10327 ;; This function is called by:
 10328 ;;		_LCD_home
 10329 ;;		_LCD_goto_line
 10330 ;;		_LCD_write_char
 10331 ;;		_LCD_clear
 10332 ;;		_LCD_cursor
 10333 ;;		_LCD_initialize
 10334 ;;		_LCD_shift
 10335 ;;		_LCD_shift_cursor
 10336 ;; This function uses a non-reentrant model
 10337 ;;
 10338                           
 10339                           	psect	text38
 10340  003184                     __ptext38:
 10341                           	opt stack 0
 10342  003184                     _LCD_send_command:
 10343                           	opt stack 23
 10344                           
 10345                           ;incstack = 0
 10346                           ;LCD_send_command@D3 stored from wreg
 10347  003184  6E1A               	movwf	LCD_send_command@D3,c
 10348                           
 10349                           ;src\LCD_44780.c: 63: PORTBbits.RB4 = D0;
 10350  003186  B019               	btfsc	LCD_send_command@D0,0,c
 10351  003188  D002               	bra	u2245
 10352  00318A  9881               	bcf	3969,4,c	;volatile
 10353  00318C  D001               	bra	u2246
 10354  00318E                     u2245:
 10355  00318E  8881               	bsf	3969,4,c	;volatile
 10356  003190                     u2246:
 10357                           
 10358                           ;src\LCD_44780.c: 64: PORTBbits.RB5 = D1;
 10359  003190  B018               	btfsc	LCD_send_command@D1,0,c
 10360  003192  D002               	bra	u2255
 10361  003194  9A81               	bcf	3969,5,c	;volatile
 10362  003196  D001               	bra	u2256
 10363  003198                     u2255:
 10364  003198  8A81               	bsf	3969,5,c	;volatile
 10365  00319A                     u2256:
 10366                           
 10367                           ;src\LCD_44780.c: 65: PORTBbits.RB6 = D2;
 10368  00319A  B017               	btfsc	LCD_send_command@D2,0,c
 10369  00319C  D002               	bra	u2265
 10370  00319E  9C81               	bcf	3969,6,c	;volatile
 10371  0031A0  D001               	bra	u2266
 10372  0031A2                     u2265:
 10373  0031A2  8C81               	bsf	3969,6,c	;volatile
 10374  0031A4                     u2266:
 10375                           
 10376                           ;src\LCD_44780.c: 66: PORTBbits.RB7 = D3;
 10377  0031A4  B01A               	btfsc	LCD_send_command@D3,0,c
 10378  0031A6  D002               	bra	u2275
 10379  0031A8  9E81               	bcf	3969,7,c	;volatile
 10380  0031AA  D001               	bra	u2276
 10381  0031AC                     u2275:
 10382  0031AC  8E81               	bsf	3969,7,c	;volatile
 10383  0031AE                     u2276:
 10384                           
 10385                           ;src\LCD_44780.c: 67: LCD_enable_pulse ();
 10386  0031AE  EC84  F019         	call	_LCD_enable_pulse	;wreg free
 10387  0031B2  0012               	return		;funcret
 10388  0031B4                     __end_of_LCD_send_command:
 10389                           	opt stack 0
 10390                           tblptru	equ	0xFF8
 10391                           tblptrh	equ	0xFF7
 10392                           tblptrl	equ	0xFF6
 10393                           tablat	equ	0xFF5
 10394                           prodh	equ	0xFF4
 10395                           prodl	equ	0xFF3
 10396                           intcon	equ	0xFF2
 10397                           postinc0	equ	0xFEE
 10398                           wreg	equ	0xFE8
 10399                           indf1	equ	0xFE7
 10400                           postdec1	equ	0xFE5
 10401                           plusw1	equ	0xFE3
 10402                           fsr1h	equ	0xFE2
 10403                           fsr1l	equ	0xFE1
 10404                           indf2	equ	0xFDF
 10405                           postinc2	equ	0xFDE
 10406                           plusw2	equ	0xFDB
 10407                           fsr2h	equ	0xFDA
 10408                           fsr2l	equ	0xFD9
 10409                           status	equ	0xFD8
 10410                           
 10411 ;; *************** function _LCD_enable_pulse *****************
 10412 ;; Defined at:
 10413 ;;		line 49 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/src\LCD_44780.c"
 10414 ;; Parameters:    Size  Location     Type
 10415 ;;		None
 10416 ;; Auto vars:     Size  Location     Type
 10417 ;;		None
 10418 ;; Return value:  Size  Location     Type
 10419 ;;		None               void
 10420 ;; Registers used:
 10421 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10422 ;; Tracked objects:
 10423 ;;		On entry : 0/0
 10424 ;;		On exit  : 0/0
 10425 ;;		Unchanged: 0/0
 10426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10427 ;;      Params:         0       0       0       0       0       0       0       0       0
 10428 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10429 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10430 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10431 ;;Total ram usage:        0 bytes
 10432 ;; Hardware stack levels used:    1
 10433 ;; Hardware stack levels required when called:    3
 10434 ;; This function calls:
 10435 ;;		_delay_ms
 10436 ;; This function is called by:
 10437 ;;		_LCD_send_command
 10438 ;; This function uses a non-reentrant model
 10439 ;;
 10440                           
 10441                           	psect	text39
 10442  003308                     __ptext39:
 10443                           	opt stack 0
 10444  003308                     _LCD_enable_pulse:
 10445                           	opt stack 23
 10446                           
 10447                           ;src\LCD_44780.c: 51: PORTBbits.RB3 = 1;
 10448                           
 10449                           ;incstack = 0
 10450  003308  8681               	bsf	3969,3,c	;volatile
 10451                           
 10452                           ;src\LCD_44780.c: 52: delay_ms (1);
 10453  00330A  0E00               	movlw	0
 10454  00330C  6E16               	movwf	delay_ms@value_ms+1,c
 10455  00330E  0E01               	movlw	1
 10456  003310  6E15               	movwf	delay_ms@value_ms,c
 10457  003312  ECA9  F018         	call	_delay_ms	;wreg free
 10458                           
 10459                           ;src\LCD_44780.c: 53: PORTBbits.RB3 = 0;
 10460  003316  9681               	bcf	3969,3,c	;volatile
 10461                           
 10462                           ;src\LCD_44780.c: 54: delay_ms (1);
 10463  003318  0E00               	movlw	0
 10464  00331A  6E16               	movwf	delay_ms@value_ms+1,c
 10465  00331C  0E01               	movlw	1
 10466  00331E  6E15               	movwf	delay_ms@value_ms,c
 10467  003320  ECA9  F018         	call	_delay_ms	;wreg free
 10468  003324  0012               	return		;funcret
 10469  003326                     __end_of_LCD_enable_pulse:
 10470                           	opt stack 0
 10471                           tblptru	equ	0xFF8
 10472                           tblptrh	equ	0xFF7
 10473                           tblptrl	equ	0xFF6
 10474                           tablat	equ	0xFF5
 10475                           prodh	equ	0xFF4
 10476                           prodl	equ	0xFF3
 10477                           intcon	equ	0xFF2
 10478                           postinc0	equ	0xFEE
 10479                           wreg	equ	0xFE8
 10480                           indf1	equ	0xFE7
 10481                           postdec1	equ	0xFE5
 10482                           plusw1	equ	0xFE3
 10483                           fsr1h	equ	0xFE2
 10484                           fsr1l	equ	0xFE1
 10485                           indf2	equ	0xFDF
 10486                           postinc2	equ	0xFDE
 10487                           plusw2	equ	0xFDB
 10488                           fsr2h	equ	0xFDA
 10489                           fsr2l	equ	0xFD9
 10490                           status	equ	0xFD8
 10491                           
 10492 ;; *************** function _delay_ms *****************
 10493 ;; Defined at:
 10494 ;;		line 61 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/src\delay.c"
 10495 ;; Parameters:    Size  Location     Type
 10496 ;;  value_ms        2   20[COMRAM] unsigned int 
 10497 ;; Auto vars:     Size  Location     Type
 10498 ;;		None
 10499 ;; Return value:  Size  Location     Type
 10500 ;;		None               void
 10501 ;; Registers used:
 10502 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10503 ;; Tracked objects:
 10504 ;;		On entry : 0/0
 10505 ;;		On exit  : 0/0
 10506 ;;		Unchanged: 0/0
 10507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10508 ;;      Params:         2       0       0       0       0       0       0       0       0
 10509 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10510 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10511 ;;      Totals:         2       0       0       0       0       0       0       0       0
 10512 ;;Total ram usage:        2 bytes
 10513 ;; Hardware stack levels used:    1
 10514 ;; Hardware stack levels required when called:    2
 10515 ;; This function calls:
 10516 ;;		___wmul
 10517 ;; This function is called by:
 10518 ;;		_LCD_enable_pulse
 10519 ;;		_LCD_initialize
 10520 ;;		_delay_s
 10521 ;;		_scarica
 10522 ;;		_ricarica
 10523 ;;		_read_adc
 10524 ;;		_inizializzazione
 10525 ;; This function uses a non-reentrant model
 10526 ;;
 10527                           
 10528                           	psect	text40
 10529  003152                     __ptext40:
 10530                           	opt stack 0
 10531  003152                     _delay_ms:
 10532                           	opt stack 26
 10533                           
 10534                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
 10535                           
 10536                           ;incstack = 0
 10537  003152  C050  F00F         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
 10538  003156  6A10               	clrf	___wmul@multiplier+1,c
 10539  003158  C015  F011         	movff	delay_ms@value_ms,___wmul@multiplicand
 10540  00315C  C016  F012         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
 10541  003160  EC40  F019         	call	___wmul	;wreg free
 10542  003164  C00F  F043         	movff	?___wmul,_clock_counter_reference	;volatile
 10543  003168  C010  F044         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
 10544                           
 10545                           ;src\delay.c: 75: while (clock_counter_reference) {
 10546  00316C  D006               	goto	l136
 10547  00316E                     l2609:
 10548                           
 10549                           ;src\delay.c: 85: _delay(240);
 10550  00316E  0E50               	movlw	80
 10551  003170                     u5587:
 10552  003170  2EE8               	decfsz	wreg,f,c
 10553  003172  D7FE               	goto	u5587
 10554                           
 10555                           ;src\delay.c: 88: clock_counter_reference--;
 10556  003174  0643               	decf	_clock_counter_reference,f,c	;volatile
 10557  003176  A0D8               	btfss	status,0,c
 10558  003178  0644               	decf	_clock_counter_reference+1,f,c	;volatile
 10559  00317A                     l136:
 10560  00317A  5043               	movf	_clock_counter_reference,w,c	;volatile
 10561  00317C  1044               	iorwf	_clock_counter_reference+1,w,c	;volatile
 10562  00317E  B4D8               	btfsc	status,2,c
 10563  003180  0012               	return	
 10564  003182  D7F5               	goto	l2609
 10565  003184                     __end_of_delay_ms:
 10566                           	opt stack 0
 10567                           tblptru	equ	0xFF8
 10568                           tblptrh	equ	0xFF7
 10569                           tblptrl	equ	0xFF6
 10570                           tablat	equ	0xFF5
 10571                           prodh	equ	0xFF4
 10572                           prodl	equ	0xFF3
 10573                           intcon	equ	0xFF2
 10574                           postinc0	equ	0xFEE
 10575                           wreg	equ	0xFE8
 10576                           indf1	equ	0xFE7
 10577                           postdec1	equ	0xFE5
 10578                           plusw1	equ	0xFE3
 10579                           fsr1h	equ	0xFE2
 10580                           fsr1l	equ	0xFE1
 10581                           indf2	equ	0xFDF
 10582                           postinc2	equ	0xFDE
 10583                           plusw2	equ	0xFDB
 10584                           fsr2h	equ	0xFDA
 10585                           fsr2l	equ	0xFD9
 10586                           status	equ	0xFD8
 10587                           
 10588 ;; *************** function ___wmul *****************
 10589 ;; Defined at:
 10590 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 10591 ;; Parameters:    Size  Location     Type
 10592 ;;  multiplier      2   14[COMRAM] unsigned int 
 10593 ;;  multiplicand    2   16[COMRAM] unsigned int 
 10594 ;; Auto vars:     Size  Location     Type
 10595 ;;  product         2   18[COMRAM] unsigned int 
 10596 ;; Return value:  Size  Location     Type
 10597 ;;                  2   14[COMRAM] unsigned int 
 10598 ;; Registers used:
 10599 ;;		wreg, status,2, status,0, prodl, prodh
 10600 ;; Tracked objects:
 10601 ;;		On entry : 0/0
 10602 ;;		On exit  : 0/0
 10603 ;;		Unchanged: 0/0
 10604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10605 ;;      Params:         4       0       0       0       0       0       0       0       0
 10606 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10607 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10608 ;;      Totals:         6       0       0       0       0       0       0       0       0
 10609 ;;Total ram usage:        6 bytes
 10610 ;; Hardware stack levels used:    1
 10611 ;; Hardware stack levels required when called:    1
 10612 ;; This function calls:
 10613 ;;		Nothing
 10614 ;; This function is called by:
 10615 ;;		_delay_ms
 10616 ;;		_scarica
 10617 ;;		_sprintf
 10618 ;; This function uses a non-reentrant model
 10619 ;;
 10620                           
 10621                           	psect	text41
 10622  003280                     __ptext41:
 10623                           	opt stack 0
 10624  003280                     ___wmul:
 10625                           	opt stack 27
 10626                           
 10627                           ;incstack = 0
 10628  003280  500F               	movf	___wmul@multiplier,w,c
 10629  003282  0211               	mulwf	___wmul@multiplicand,c
 10630  003284  CFF3 F013          	movff	prodl,___wmul@product
 10631  003288  CFF4 F014          	movff	prodh,___wmul@product+1
 10632  00328C  500F               	movf	___wmul@multiplier,w,c
 10633  00328E  0212               	mulwf	___wmul@multiplicand+1,c
 10634  003290  50F3               	movf	prodl,w,c
 10635  003292  2614               	addwf	___wmul@product+1,f,c
 10636  003294  5010               	movf	___wmul@multiplier+1,w,c
 10637  003296  0211               	mulwf	___wmul@multiplicand,c
 10638  003298  50F3               	movf	prodl,w,c
 10639  00329A  2614               	addwf	___wmul@product+1,f,c
 10640  00329C  C013  F00F         	movff	___wmul@product,?___wmul
 10641  0032A0  C014  F010         	movff	___wmul@product+1,?___wmul+1
 10642  0032A4  0012               	return	
 10643  0032A6                     __end_of___wmul:
 10644                           	opt stack 0
 10645                           tblptru	equ	0xFF8
 10646                           tblptrh	equ	0xFF7
 10647                           tblptrl	equ	0xFF6
 10648                           tablat	equ	0xFF5
 10649                           prodh	equ	0xFF4
 10650                           prodl	equ	0xFF3
 10651                           intcon	equ	0xFF2
 10652                           postinc0	equ	0xFEE
 10653                           wreg	equ	0xFE8
 10654                           indf1	equ	0xFE7
 10655                           postdec1	equ	0xFE5
 10656                           plusw1	equ	0xFE3
 10657                           fsr1h	equ	0xFE2
 10658                           fsr1l	equ	0xFE1
 10659                           indf2	equ	0xFDF
 10660                           postinc2	equ	0xFDE
 10661                           plusw2	equ	0xFDB
 10662                           fsr2h	equ	0xFDA
 10663                           fsr2l	equ	0xFD9
 10664                           status	equ	0xFD8
 10665                           
 10666 ;; *************** function _isr_alta *****************
 10667 ;; Defined at:
 10668 ;;		line 51 in file "tester.c"
 10669 ;; Parameters:    Size  Location     Type
 10670 ;;		None
 10671 ;; Auto vars:     Size  Location     Type
 10672 ;;		None
 10673 ;; Return value:  Size  Location     Type
 10674 ;;		None               void
 10675 ;; Registers used:
 10676 ;;		wreg, status,2, status,0
 10677 ;; Tracked objects:
 10678 ;;		On entry : 0/0
 10679 ;;		On exit  : 0/0
 10680 ;;		Unchanged: 0/0
 10681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10682 ;;      Params:         0       0       0       0       0       0       0       0       0
 10683 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10684 ;;      Temps:         14       0       0       0       0       0       0       0       0
 10685 ;;      Totals:        14       0       0       0       0       0       0       0       0
 10686 ;;Total ram usage:       14 bytes
 10687 ;; Hardware stack levels used:    1
 10688 ;; This function calls:
 10689 ;;		Nothing
 10690 ;; This function is called by:
 10691 ;;		Interrupt level 2
 10692 ;; This function uses a non-reentrant model
 10693 ;;
 10694                           
 10695                           	psect	intcode
 10696  000008                     __pintcode:
 10697                           	opt stack 0
 10698  000008                     _isr_alta:
 10699                           	opt stack 22
 10700                           
 10701                           ;incstack = 0
 10702  000008  8251               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 10703  00000A  CFFA F001          	movff	pclath,??_isr_alta
 10704  00000E  CFFB F002          	movff	pclatu,??_isr_alta+1
 10705  000012  ED34  F015         	call	int_func,f	;refresh shadow registers
 10706                           pclatu	equ	0xFFB
 10707                           pclath	equ	0xFFA
 10708                           tblptru	equ	0xFF8
 10709                           tblptrh	equ	0xFF7
 10710                           tblptrl	equ	0xFF6
 10711                           tablat	equ	0xFF5
 10712                           prodh	equ	0xFF4
 10713                           prodl	equ	0xFF3
 10714                           intcon	equ	0xFF2
 10715                           postinc0	equ	0xFEE
 10716                           wreg	equ	0xFE8
 10717                           indf1	equ	0xFE7
 10718                           postdec1	equ	0xFE5
 10719                           plusw1	equ	0xFE3
 10720                           fsr1h	equ	0xFE2
 10721                           fsr1l	equ	0xFE1
 10722                           indf2	equ	0xFDF
 10723                           postinc2	equ	0xFDE
 10724                           plusw2	equ	0xFDB
 10725                           fsr2h	equ	0xFDA
 10726                           fsr2l	equ	0xFD9
 10727                           status	equ	0xFD8
 10728                           
 10729                           	psect	intcode_body
 10730  002A68                     __pintcode_body:
 10731                           	opt stack 22
 10732  002A68                     int_func:
 10733                           	opt stack 22
 10734  002A68  0006               	pop		; remove dummy address from shadow register refresh
 10735  002A6A  CFE9 F003          	movff	fsr0l,??_isr_alta+2
 10736  002A6E  CFEA F004          	movff	fsr0h,??_isr_alta+3
 10737  002A72  CFE1 F005          	movff	fsr1l,??_isr_alta+4
 10738  002A76  CFE2 F006          	movff	fsr1h,??_isr_alta+5
 10739  002A7A  CFD9 F007          	movff	fsr2l,??_isr_alta+6
 10740  002A7E  CFDA F008          	movff	fsr2h,??_isr_alta+7
 10741  002A82  CFF3 F009          	movff	prodl,??_isr_alta+8
 10742  002A86  CFF4 F00A          	movff	prodh,??_isr_alta+9
 10743  002A8A  CFF6 F00B          	movff	tblptrl,??_isr_alta+10
 10744  002A8E  CFF7 F00C          	movff	tblptrh,??_isr_alta+11
 10745  002A92  CFF8 F00D          	movff	tblptru,??_isr_alta+12
 10746  002A96  CFF5 F00E          	movff	tablat,??_isr_alta+13
 10747                           
 10748                           ;tester.c: 52: INTCONbits.TMR0IF = 0;
 10749  002A9A  94F2               	bcf	intcon,2,c	;volatile
 10750                           
 10751                           ;tester.c: 53: TMR0H = 0x0B;
 10752  002A9C  0E0B               	movlw	11
 10753  002A9E  6ED7               	movwf	4055,c	;volatile
 10754                           
 10755                           ;tester.c: 54: TMR0L = 0xDC;
 10756  002AA0  0EDC               	movlw	220
 10757  002AA2  6ED6               	movwf	4054,c	;volatile
 10758                           
 10759                           ;tester.c: 55: tempo++;
 10760  002AA4  0E01               	movlw	1
 10761  002AA6  0100               	movlb	0	; () banked
 10762  002AA8  27C1               	addwf	_tempo& (0+255),f,b
 10763  002AAA  0E00               	movlw	0
 10764  002AAC  23C2               	addwfc	(_tempo+1)& (0+255),f,b
 10765  002AAE  23C3               	addwfc	(_tempo+2)& (0+255),f,b
 10766  002AB0  23C4               	addwfc	(_tempo+3)& (0+255),f,b
 10767                           
 10768                           ; BSR set to: 0
 10769                           ;tester.c: 56: secondi++;
 10770  002AB2  0100               	movlb	0	; () banked
 10771  002AB4  4BD1               	infsnz	_secondi& (0+255),f,b
 10772  002AB6  2BD2               	incf	(_secondi+1)& (0+255),f,b
 10773                           
 10774                           ; BSR set to: 0
 10775                           ;tester.c: 57: if (secondi == 59) {
 10776  002AB8  0E3B               	movlw	59
 10777  002ABA  0100               	movlb	0	; () banked
 10778  002ABC  19D1               	xorwf	_secondi& (0+255),w,b
 10779  002ABE  0100               	movlb	0	; () banked
 10780  002AC0  11D2               	iorwf	(_secondi+1)& (0+255),w,b
 10781  002AC2  A4D8               	btfss	status,2,c
 10782  002AC4  D017               	goto	i2l179
 10783                           
 10784                           ; BSR set to: 0
 10785                           ;tester.c: 58: secondi = 0;
 10786  002AC6  0E00               	movlw	0
 10787  002AC8  0100               	movlb	0	; () banked
 10788  002ACA  6FD2               	movwf	(_secondi+1)& (0+255),b
 10789  002ACC  0E00               	movlw	0
 10790  002ACE  6FD1               	movwf	_secondi& (0+255),b
 10791                           
 10792                           ; BSR set to: 0
 10793                           ;tester.c: 59: minuti++;
 10794  002AD0  0100               	movlb	0	; () banked
 10795  002AD2  4BCD               	infsnz	_minuti& (0+255),f,b
 10796  002AD4  2BCE               	incf	(_minuti+1)& (0+255),f,b
 10797                           
 10798                           ; BSR set to: 0
 10799                           ;tester.c: 60: if (minuti == 59) {
 10800  002AD6  0E3B               	movlw	59
 10801  002AD8  0100               	movlb	0	; () banked
 10802  002ADA  19CD               	xorwf	_minuti& (0+255),w,b
 10803  002ADC  0100               	movlb	0	; () banked
 10804  002ADE  11CE               	iorwf	(_minuti+1)& (0+255),w,b
 10805  002AE0  A4D8               	btfss	status,2,c
 10806  002AE2  D008               	goto	i2l179
 10807                           
 10808                           ; BSR set to: 0
 10809                           ;tester.c: 61: minuti = 0;
 10810  002AE4  0E00               	movlw	0
 10811  002AE6  0100               	movlb	0	; () banked
 10812  002AE8  6FCE               	movwf	(_minuti+1)& (0+255),b
 10813  002AEA  0E00               	movlw	0
 10814  002AEC  6FCD               	movwf	_minuti& (0+255),b
 10815                           
 10816                           ; BSR set to: 0
 10817                           ;tester.c: 62: ore++;
 10818  002AEE  0100               	movlb	0	; () banked
 10819  002AF0  4BCF               	infsnz	_ore& (0+255),f,b
 10820  002AF2  2BD0               	incf	(_ore+1)& (0+255),f,b
 10821  002AF4                     i2l179:
 10822                           
 10823                           ; BSR set to: 0
 10824  002AF4  C00E  FFF5         	movff	??_isr_alta+13,tablat
 10825  002AF8  C00D  FFF8         	movff	??_isr_alta+12,tblptru
 10826  002AFC  C00C  FFF7         	movff	??_isr_alta+11,tblptrh
 10827  002B00  C00B  FFF6         	movff	??_isr_alta+10,tblptrl
 10828  002B04  C00A  FFF4         	movff	??_isr_alta+9,prodh
 10829  002B08  C009  FFF3         	movff	??_isr_alta+8,prodl
 10830  002B0C  C008  FFDA         	movff	??_isr_alta+7,fsr2h
 10831  002B10  C007  FFD9         	movff	??_isr_alta+6,fsr2l
 10832  002B14  C006  FFE2         	movff	??_isr_alta+5,fsr1h
 10833  002B18  C005  FFE1         	movff	??_isr_alta+4,fsr1l
 10834  002B1C  C004  FFEA         	movff	??_isr_alta+3,fsr0h
 10835  002B20  C003  FFE9         	movff	??_isr_alta+2,fsr0l
 10836  002B24  C002  FFFB         	movff	??_isr_alta+1,pclatu
 10837  002B28  C001  FFFA         	movff	??_isr_alta,pclath
 10838  002B2C  9251               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 10839  002B2E  0011               	retfie		f
 10840  002B30                     __end_of_isr_alta:
 10841                           	opt stack 0
 10842                           pclatu	equ	0xFFB
 10843                           pclath	equ	0xFFA
 10844                           tblptru	equ	0xFF8
 10845                           tblptrh	equ	0xFF7
 10846                           tblptrl	equ	0xFF6
 10847                           tablat	equ	0xFF5
 10848                           prodh	equ	0xFF4
 10849                           prodl	equ	0xFF3
 10850                           intcon	equ	0xFF2
 10851                           postinc0	equ	0xFEE
 10852                           fsr0h	equ	0xFEA
 10853                           fsr0l	equ	0xFE9
 10854                           wreg	equ	0xFE8
 10855                           indf1	equ	0xFE7
 10856                           postdec1	equ	0xFE5
 10857                           plusw1	equ	0xFE3
 10858                           fsr1h	equ	0xFE2
 10859                           fsr1l	equ	0xFE1
 10860                           indf2	equ	0xFDF
 10861                           postinc2	equ	0xFDE
 10862                           plusw2	equ	0xFDB
 10863                           fsr2h	equ	0xFDA
 10864                           fsr2l	equ	0xFD9
 10865                           status	equ	0xFD8
 10866                           pclatu	equ	0xFFB
 10867                           pclath	equ	0xFFA
 10868                           tblptru	equ	0xFF8
 10869                           tblptrh	equ	0xFF7
 10870                           tblptrl	equ	0xFF6
 10871                           tablat	equ	0xFF5
 10872                           prodh	equ	0xFF4
 10873                           prodl	equ	0xFF3
 10874                           intcon	equ	0xFF2
 10875                           postinc0	equ	0xFEE
 10876                           fsr0h	equ	0xFEA
 10877                           fsr0l	equ	0xFE9
 10878                           wreg	equ	0xFE8
 10879                           indf1	equ	0xFE7
 10880                           postdec1	equ	0xFE5
 10881                           plusw1	equ	0xFE3
 10882                           fsr1h	equ	0xFE2
 10883                           fsr1l	equ	0xFE1
 10884                           indf2	equ	0xFDF
 10885                           postinc2	equ	0xFDE
 10886                           plusw2	equ	0xFDB
 10887                           fsr2h	equ	0xFDA
 10888                           fsr2l	equ	0xFD9
 10889                           status	equ	0xFD8
 10890                           
 10891                           	psect	rparam
 10892  0000                     pclatu	equ	0xFFB
 10893                           pclath	equ	0xFFA
 10894                           tblptru	equ	0xFF8
 10895                           tblptrh	equ	0xFF7
 10896                           tblptrl	equ	0xFF6
 10897                           tablat	equ	0xFF5
 10898                           prodh	equ	0xFF4
 10899                           prodl	equ	0xFF3
 10900                           intcon	equ	0xFF2
 10901                           postinc0	equ	0xFEE
 10902                           fsr0h	equ	0xFEA
 10903                           fsr0l	equ	0xFE9
 10904                           wreg	equ	0xFE8
 10905                           indf1	equ	0xFE7
 10906                           postdec1	equ	0xFE5
 10907                           plusw1	equ	0xFE3
 10908                           fsr1h	equ	0xFE2
 10909                           fsr1l	equ	0xFE1
 10910                           indf2	equ	0xFDF
 10911                           postinc2	equ	0xFDE
 10912                           plusw2	equ	0xFDB
 10913                           fsr2h	equ	0xFDA
 10914                           fsr2l	equ	0xFD9
 10915                           status	equ	0xFD8
 10916                           
 10917                           	psect	temp
 10918  000051                     btemp:
 10919                           	opt stack 0
 10920  000051                     	ds	1
 10921  0000                     int$flags	set	btemp
 10922                           pclatu	equ	0xFFB
 10923                           pclath	equ	0xFFA
 10924                           tblptru	equ	0xFF8
 10925                           tblptrh	equ	0xFF7
 10926                           tblptrl	equ	0xFF6
 10927                           tablat	equ	0xFF5
 10928                           prodh	equ	0xFF4
 10929                           prodl	equ	0xFF3
 10930                           intcon	equ	0xFF2
 10931                           postinc0	equ	0xFEE
 10932                           fsr0h	equ	0xFEA
 10933                           fsr0l	equ	0xFE9
 10934                           wreg	equ	0xFE8
 10935                           indf1	equ	0xFE7
 10936                           postdec1	equ	0xFE5
 10937                           plusw1	equ	0xFE3
 10938                           fsr1h	equ	0xFE2
 10939                           fsr1l	equ	0xFE1
 10940                           indf2	equ	0xFDF
 10941                           postinc2	equ	0xFDE
 10942                           plusw2	equ	0xFDB
 10943                           fsr2h	equ	0xFDA
 10944                           fsr2l	equ	0xFD9
 10945                           status	equ	0xFD8


Data Sizes:
    Strings     141
    Constant    144
    Data        4
    BSS         56
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     66      80
    BANK0           160     71     123
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(COMRAM[6]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(COMRAM[6]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(COMRAM[6]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(COMRAM[6]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_17(CODE[8]), STR_16(CODE[7]), STR_12(CODE[5]), STR_10(CODE[5]), 
		 -> STR_7(CODE[8]), STR_6(CODE[7]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 8
		 -> str(BANK0[8]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(COMRAM[6]), 

    LCD_write_string@buffer	PTR unsigned char  size(2) Largest target is 8
		 -> str(BANK0[8]), LCD_write_integer@convertedInt(COMRAM[6]), 

    LCD_write_message@buffer	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_19(CODE[16]), STR_18(CODE[17]), STR_15(CODE[17]), STR_14(CODE[9]), 
		 -> STR_13(CODE[3]), STR_11(CODE[3]), STR_9(CODE[3]), STR_8(CODE[17]), 
		 -> STR_5(CODE[2]), STR_4(CODE[2]), STR_3(CODE[7]), STR_2(CODE[16]), 
		 -> STR_1(CODE[16]), 


Critical Paths under _main in COMRAM

    _main->_read_adc
    _scarica->_read_adc
    _delay_s->_delay_ms
    _LCD_write_integer->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _LCD_home->_LCD_send_command
    _ricarica->_read_adc
    _sprintf->___fltol
    _sprintf->_fround
    _scale->___flmul
    _fround->___flmul
    ___awdiv->___awmod
    ___fltol->_scale
    ___fladd->_fround
    _read_adc->___fldiv
    ___xxtofl->___wmul
    ___flmul->___awdiv
    ___fldiv->___flmul
    _LCD_write_string->_LCD_write_char
    _LCD_goto_line->_LCD_send_command
    _inizializzazione->_LCD_write_message
    _LCD_write_message->_LCD_write_char
    _LCD_write_char->_LCD_send_command
    _LCD_initialize->_LCD_cursor
    _LCD_cursor->_LCD_send_command
    _LCD_clear->_LCD_send_command
    _LCD_enable_pulse->_delay_ms
    _delay_ms->___wmul

Critical Paths under _isr_alta in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_scarica
    _scarica->_sprintf
    _ricarica->_sprintf
    _sprintf->___flsub
    ___flsub->___fladd
    _read_adc->___fldiv

Critical Paths under _isr_alta in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr_alta in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr_alta in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr_alta in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr_alta in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr_alta in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr_alta in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr_alta in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  270627
                          _LCD_clear
                      _LCD_goto_line
                           _LCD_home
                  _LCD_write_message
                            ___fldiv
                             ___flge
                            _delay_s
                   _delay_set_quartz
                   _inizializzazione
                           _read_adc
                           _ricarica
                            _scarica
 ---------------------------------------------------------------------------------
 (1) _scarica                                              8     8      0  108621
                                             63 BANK0      8     8      0
                          _LCD_clear
                      _LCD_goto_line
                           _LCD_home
                  _LCD_write_integer
                  _LCD_write_message
                   _LCD_write_string
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flneg
                             ___wmul
                           ___xxtofl
                           _delay_ms
                            _delay_s
                           _read_adc
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _delay_s                                              2     2      0    1507
                                             22 COMRAM     2     2      0
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _LCD_write_integer                                   16    12      4   11182
                                             38 COMRAM    16    12      4
                   _LCD_write_string
                               _itoa
 ---------------------------------------------------------------------------------
 (3) _itoa                                                 8     2      6    1554
                                             30 COMRAM     8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                 9     3      6    1199
                                             21 COMRAM     9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     287
                                             14 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     418
                                             14 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _LCD_home                                             0     0      0    7693
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (1) _ricarica                                             0     0      0   72517
                      _LCD_goto_line
                  _LCD_write_message
                   _LCD_write_string
                             ___flge
                           _delay_ms
                           _read_adc
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             43    35      8   35659
                                             28 BANK0     35    27      8
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               13     9      4    7133
                                             53 COMRAM     9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      68
                                             14 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              17    13      4    6935
                                             53 COMRAM    13     9      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1448
                                             14 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1580
                                             20 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         17     9      8     431
                                             14 COMRAM    17     9      8
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          14     6      8     431
                                             14 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     543
                                             14 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     418
                                             14 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     568
                                             62 COMRAM     4     0      4
                                              0 BANK0      6     6      0
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3851
                                             20 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    3518
                                              0 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     237
                                             14 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8    1334
                                             14 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) _read_adc                                             9     9      0    8872
                                             65 COMRAM     1     1      0
                                             13 BANK0      8     8      0
                            ___fldiv
                            ___flmul
                           ___xxtofl
                           _delay_ms
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     642
                                             20 COMRAM    14    10      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    3616
                                             28 COMRAM    25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    2961
                                             53 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                            ___flmul (ARG)
                             ___wmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCD_write_string                                     2     0      2    8546
                                             31 COMRAM     2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (2) _LCD_goto_line                                        1     1      0    7715
                                             26 COMRAM     1     1      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (1) _inizializzazione                                     0     0      0   42769
                          _LCD_clear
                     _LCD_initialize
                  _LCD_write_message
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _LCD_write_message                                    2     0      2    8930
                                             31 COMRAM     2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (3) _LCD_write_char                                       5     5      0    8053
                                             26 COMRAM     5     5      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_initialize                                       1     1      0   24685
                                             28 COMRAM     1     1      0
                          _LCD_clear
                         _LCD_cursor
                   _LCD_send_command
                           _delay_ms
                   _delay_set_quartz
 ---------------------------------------------------------------------------------
 (3) _delay_set_quartz                                     1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _LCD_cursor                                           2     1      1    7801
                                             26 COMRAM     2     1      1
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_clear                                            0     0      0    7693
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (4) _LCD_send_command                                     4     1      3    7693
                                             22 COMRAM     4     1      3
                   _LCD_enable_pulse
 ---------------------------------------------------------------------------------
 (5) _LCD_enable_pulse                                     0     0      0    1461
                           _delay_ms
 ---------------------------------------------------------------------------------
 (3) _delay_ms                                             2     0      2    1461
                                             20 COMRAM     2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     671
                                             14 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _isr_alta                                            14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_clear
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
   _LCD_goto_line
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
   _LCD_home
     _LCD_send_command
       _LCD_enable_pulse
         _delay_ms
           ___wmul
   _LCD_write_message
     _LCD_write_char
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
   ___fldiv
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     ___wmul (ARG)
     ___xxtofl (ARG)
       ___wmul (ARG)
   ___flge
   _delay_s
     _delay_ms
       ___wmul
   _delay_set_quartz
   _inizializzazione
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _delay_ms
       ___wmul
   _read_adc
     ___fldiv
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___wmul (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
     ___flmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     ___xxtofl
       ___wmul (ARG)
     _delay_ms
       ___wmul
   _ricarica
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _LCD_write_string
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     ___flge
     _delay_ms
       ___wmul
     _read_adc
       ___fldiv
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___wmul (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___xxtofl
         ___wmul (ARG)
       _delay_ms
         ___wmul
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___flneg
       ___flsub
         ___fladd
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
       ___fltol
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
       ___wmul
       ___xxtofl
         ___wmul (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _scarica
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_home
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_write_integer
       _LCD_write_string
         _LCD_write_char
           _LCD_send_command
             _LCD_enable_pulse
               _delay_ms
                 ___wmul
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _LCD_write_string
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     ___fladd
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___fldiv
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___wmul (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
     ___flge
     ___flneg
     ___wmul
     ___xxtofl
       ___wmul (ARG)
     _delay_ms
       ___wmul
     _delay_s
       _delay_ms
         ___wmul
     _read_adc
       ___fldiv
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___wmul (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___xxtofl
         ___wmul (ARG)
       _delay_ms
         ___wmul
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___flneg
       ___flsub
         ___fladd
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
       ___fltol
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
       ___wmul
       ___xxtofl
         ___wmul (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)

 _isr_alta (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     47      7B       5       76.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     42      50       1       85.1%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      CB      20        0.0%
DATA                 0      0      CB       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sat Apr 09 22:42:45 2016

                     ___fldiv@aexp 006C                       ___fldiv@bexp 006B  
        __size_of_delay_set_quartz 0008                       ___fldiv@sign 0060  
                     ___awdiv@sign 001A                 delay_s@repeat_loop 0018  
                      __CFG_BOR$ON 000000                ___wmul@multiplicand 0011  
                      __CFG_BORV$3 000000                       __CFG_CP0$OFF 000000  
                     __CFG_CP1$OFF 000000                       __CFG_CP2$OFF 000000  
                     __CFG_CP3$OFF 000000                                l211 1BFC  
                              l203 20E0                                l136 317A  
                              l191 0EEE                                l520 2722  
                              l192 0D46                                l530 2818  
                              l295 05CC                                l624 25FA  
                              l713 2E3A                                l617 256C  
                              l618 2594                                l723 2F80  
                              l910 186A                                l902 17E4  
                              l807 0A3A                                l824 0BAE  
                              l808 0A2E                                l833 0C42  
                              l809 09FA                                l930 2358  
                              l922 2308                                l915 228A  
                              l766 303A                                l863 1A74  
                              l687 2D22                                l776 3148  
                              l929 2344                                l874 1B00  
                              l893 15CE                       __CFG_CPB$OFF 000000  
                     __CFG_CPD$OFF 000000                        ?_LCD_cursor 001B  
               _sommatoriaCorrente 00BD                                _ore 00CF  
                              _str 00D3                       ___awmod@sign 0014  
                              prod 000FF3                                wreg 000FE8  
                     __CFG_FOSC$HS 000000                       ___flmul@aexp 002E  
                     ___flmul@bexp 002F                       ___flmul@sign 0029  
                     ___flmul@temp 0034                       ___flmul@prod 0030  
                     __CFG_LVP$OFF 000000             __size_of_LCD_goto_line 00B8  
                     ___fltol@exp1 0065                       __CFG_WDT$OFF 000000  
                             l3021 2D5A                               l3007 1888  
                             l3033 2D80                               l3105 2CE4  
                             l3035 2D88                               l3027 2D6A  
                             l3203 1524                               l3125 32A8  
                             l3301 268A                               l3053 2DC0  
                             l3045 2DA8                               l3037 2D8C  
                             l3231 2532                               l3215 3300  
                             l3129 32BA                               l3321 26E8  
                             l3225 2506                               l3049 2DB2  
                             l3081 2E9A                               l3073 2E7A  
                             l3065 2E60                               l3331 2710  
                             l3075 2E82                               l3139 30F2  
                             l4213 089C                               l3333 271C  
                             l3325 26F8                               l3309 26BA  
                             l3261 25C0                               l3077 2E86  
                             l3085 2EA4                               l3069 2E6C  
                             l3165 208C                               l3157 1FC0  
                             l3503 31D0                               l4231 08E6  
                             l4207 0878                               l3271 25E8  
                             l2631 3008                               l3095 2CAA  
                             l2609 316E                               l3601 22B8  
                             l4321 0AAC                               l4241 0914  
                             l4225 08D2                               l4217 08A6  
                             l3281 262A                               l3273 25F4  
                             l3265 25D0                               l3089 2EB2  
                             l3185 131C                               l2633 3010  
                             l3603 22BE                               l4315 0A9C  
                             l4307 0A5E                               l3179 1278  
                             l2643 3030                               l2635 3014  
                             l2651 311E                               l3613 232E  
                             l3605 22CA                               l4317 0AA2  
                             l4325 0ABE                               l4237 090A  
                             l3197 1480                               l3189 1346  
                             l2653 3126                               l4415 18D8  
                             l3615 233A                               l3607 22F0  
                             l4343 0BE0                               l4335 0B8E  
                             l3287 2648                               l2655 312A  
                             l3641 2C60                               l4521 1B8A  
                             l4505 1AFA                               l4409 18B6  
                             l2913 15BA                               l3481 2768  
                             l4353 0C02                               l4361 0C1C  
                             l4249 093E                               l3561 2DFC  
                             l3651 31F8                               l3635 2BEE  
                             l3643 2C86                               l4531 1BBA  
                             l4523 1BAA                               l4515 1B4A  
                             l4451 1970                               l4435 1926  
                             l4419 18DC                               l2923 15EC  
                             l2915 15BE                               l3627 238A  
                             l4291 0A0E                               l2659 313E  
                             l3637 2C14                               l4429 1904  
                             l3485 279C                               l4349 0BF6  
                             l4293 0A14                               l3557 2DEC  
                             l3581 2F4E                               l4701 0304  
                             l4621 002A                               l3661 23E6  
                             l3733 32E0                               l3647 31E4  
                             l3639 2C3A                               l4519 1B76  
                             l4439 192A                               l2919 15DA  
                             l4607 1CAE                               l3495 2850  
                             l4391 0CD8                               l4383 0CAA  
                             l4359 0C16                               l4279 097A  
                             l4551 2990                               l3559 2DF8  
                             l4711 037C                               l3663 23EA  
                             l4529 1BB8                               l3489 27DA  
                             l4393 0CDC                               l4369 0C3C  
                             l4297 0A1E                               l3569 2E2C  
                             l3585 2F72                               l3577 2F3E  
                             l4721 03E6                               l4641 00C6  
                             l3673 2452                               l3729 32D2  
                             l4483 1A70                               l4459 199C  
                             l2971 17AC                               l3595 229A  
                             l4387 0CCC                               l4379 0C98  
                             l4571 2A0A                               l3579 2F4A  
                             l4707 034E                               l4651 0102  
                             l4635 0074                               l4627 0042  
                             l3683 24CC                               l4477 1A38  
                             l4469 1A06                               l2981 17E0  
                             l2965 178E                               l4581 2A3C  
                             l4813 07FC                               l4805 07A4  
                             l4725 045E                               l4645 00D6  
                             l4821 084C                               l4495 1ABA  
                             l2991 1828                               l2895 157A  
                             l4591 1BDE                               l4399 0CF0  
                             l4567 29F8                               l4743 04D6  
                             l4727 0464                               l4639 00B0  
                             l3679 247C                               l4489 1A96  
                             l2897 157E                               l4585 2A56  
                             l4577 2A24                               l4817 0828  
                             l4809 07CC                               l4761 059A  
                             l4745 04DE                               l4753 0572  
                             l4657 011C                               l4649 00DC  
                             l2995 1846                               l2899 158E  
                             l4595 1BE6                               l4579 2A32  
                             l4763 05AE                               l4755 0580  
                             l4739 04AA                               l4691 026E  
                             l4683 01EE                               l4667 016E  
                             l4819 082E                               l4851 2192  
                             l2997 1854                               l4791 0756  
                             l4775 0600                               l4767 05D0  
                             l4695 029C                               l4697 02B2  
                             l4945 1122                               l4929 1030  
                             l4779 0662                               l4699 02EE  
                             l4947 112E                               l4797 0770  
                             l4789 0748                               l4799 077E  
                             l4967 2B94                               l4959 2B82  
                             l4977 2BC0                               STR_1 7FC4  
                             STR_2 7FA4                               STR_3 7FE5  
                             STR_4 7FF9                               STR_5 7FF9  
                             STR_6 7FEC                               STR_7 7FDD  
                             STR_8 7F82                               STR_9 7FF8  
                             _LATA 000F89                               _LATB 000F8A  
                             _LATC 000F8B                               u3201 2516  
                             u2245 318E                               u2246 3190  
                             u2255 3198                               u2256 319A  
                             u2265 31A2                               u2266 31A4  
                             u2275 31AC                               u2276 31AE  
                             u3181 24EA                               u5030 1B5E  
                             u2810 1750                               u5070 29B0  
                             u2815 1746                               u4530 09C4  
                             u5075 29A4                               u4540 09DC  
                             u4550 09DE                               u5520 0EAA  
                             u2890 1836                               u5380 05C4  
                             u3871 23A6                               u5587 3170  
                             _main 2B30                               _itoa 30CE  
        __size_of_LCD_send_command 0030                               fsr0h 000FEA  
                             fsr1h 000FE2                               fsr0l 000FE9  
                             fsr2h 000FDA                               indf1 000FE7  
                             fsr1l 000FE1                               indf2 000FDF  
                             fsr2l 000FD9                               btemp 0051  
                             _utoa 2CA2                               pclat 000FFA  
                             prodh 000FF4                               prodl 000FF3  
                             start 0016                      __CFG_IESO$OFF 000000  
                  ___fldiv@new_exp 0065                 __size_of_LCD_clear 0026  
                     _sprintf$1261 0086                     delay_s@value_s 0017  
                    __CFG_MCLRE$ON 000000                       ___param_bank 000010  
         __end_of_LCD_enable_pulse 3326            __size_of_LCD_initialize 011A  
                    __CFG_PLLDIV$1 000000                   __end_of_LCD_home 325A  
                   __CFG_CCP2MX$ON 000000                      ___fltol@sign1 0064  
                  __end_of___fladd 0D02                              ?_main 0001  
                  __end_of___fldiv 1BDA                              ?_itoa 001F  
                  __end_of___awdiv 2DCA                    __end_of___flneg 31E2  
                            STR_10 7FF3                              STR_11 7FFB  
                            STR_12 7FE0                              STR_13 7FFB  
                            STR_14 7FD4                              STR_15 7F71  
                            STR_16 7FEC                              STR_17 7FDD  
                            STR_18 7F93                              STR_19 7FB4  
                  __end_of___awmod 2EBC                    __end_of___flmul 189E  
                  __end_of___flsub 308C                    __end_of___fltol 2A68  
                  __end_of___lldiv 2E4C                              ?_utoa 0016  
                            _T0CON 000FD5                    ___awdiv@divisor 0017  
                  __end_of___llmod 2F92                    __end_of___lwdiv 3044  
                  __end_of___lwmod 3152                              i2l179 2AF4  
                  ___awdiv@counter 0019                              _TMR0H 000FD7  
                            _TMR0L 000FD6                      __CFG_USBDIV$1 000000  
                            _TRISA 000F92                              _TRISB 000F93  
                            _TRISC 000F94                      __CFG_PWRT$OFF 000000  
                  __end_of_delay_s 32EA                      __CFG_WRT0$OFF 000000  
                    __CFG_WRT1$OFF 000000                      __CFG_WRT2$OFF 000000  
                    __CFG_WRT3$OFF 000000                     __CFG_EBTR0$OFF 000000  
                   __CFG_FCMEN$OFF 000000                     __CFG_EBTR1$OFF 000000  
                   __CFG_EBTR2$OFF 000000                     __CFG_EBTR3$OFF 000000  
                    __CFG_WRTB$OFF 000000                      __CFG_WRTC$OFF 000000  
                    __CFG_WRTD$OFF 000000                     __CFG_EBTRB$OFF 000000  
                  __end_of_dpowers 7F71                              _scale 1136  
                  __end_of_isdigit 3308                              _tempo 00C1  
                  __end_of_scarica 1136                              tablat 000FF5  
                            plusw1 000FE3                              plusw2 000FDB  
                            utoa@c 001E                              utoa@v 001C  
                            status 000FD8                    __end_of_sprintf 085A  
                 _inizializzazione 2F92                __size_of_LCD_cursor 0028  
                  __initialization 308C                       __end_of_main 2BEA  
                     __end_of_itoa 3110                      _LCD_goto_line 2BEA  
                     __end_of_utoa 2D46                  ?_LCD_write_string 0020  
                           ??_main 0043                             ??_itoa 0025  
                           ??_utoa 001C                      __activetblptr 000002  
               ??_LCD_write_string 0022               __size_of__tdiv_to_l_ 0132  
                __end_of_LCD_clear 3280             LCD_write_string@buffer 0020  
                           _ADCON0 000FC2                             _ADCON1 000FC1  
                           _ADCON2 000FC0                   ___llmod@dividend 000F  
                           ?_scale 0036                             _ADRESH 000FC4  
                           _ADRESL 000FC3                   ___awdiv@dividend 0015  
                 __end_of___xxtofl 239C                   __end_of_delay_ms 3184  
                   __CFG_XINST$OFF 000000                   __end_of__powers_ 7F49  
                   ?_LCD_goto_line 0001                             ___flge 2734  
                        ??___fladd 0068                   _delay_set_quartz 3326  
                           ___wmul 3280                          ??___fldiv 003E  
                        ??___awdiv 0019                          ??___flneg 0013  
                   __CFG_STVREN$ON 000000                          ??___awmod 0013  
                        ??___flmul 0025                          ??___flsub 0043  
                        ??___fltol 0060                          ??___lldiv 0017  
                        ??___llmod 0017                          ??___lwdiv 0013  
                        ??___lwmod 0013            __size_of_LCD_write_char 0070  
                 __end_of_read_adc 1E60                             _fround 1E60  
   LCD_initialize@quartz_frequency 001D                             clear_0 3092  
                 ___awdiv@quotient 001B                             _minuti 00CD  
                  ___awmod@divisor 0011                          ??_delay_s 0017  
                  ___awmod@counter 0013                   __end_of_isr_alta 2B30  
                 __end_of_ricarica 224C                             itoa@cp 0025  
                     __pdataCOMRAM 004D                          ??_isdigit 000F  
                        ??_scarica 009F                       __mediumconst 7EE0  
                           tblptrh 000FF7                             tblptrl 000FF6  
                           tblptru 000FF8                          ??_sprintf 0084  
                       ___flge@ff1 000F                         ___flge@ff2 0013  
                     ___xxtofl@arg 001F                       ___xxtofl@exp 001E  
                     ___xxtofl@val 0015                         __accesstop 0060  
          __end_of__initialization 30C0                    __CFG_PBADEN$OFF 000000  
                       ___flneg@f1 000F                   _LCD_send_command 3184  
                        ?_LCD_home 0001                      ___rparam_used 000001  
LCD_write_integer@number_of_digits 0029                         ___fltol@f1 003F  
           LCD_write_integer@F4919 00B3                     __pcstackCOMRAM 0001  
                    __end_of_scale 154E                     _LCD_initialize 2854  
                _LCD_write_integer 239C                  _LCD_write_message 31E2  
               ?_LCD_write_integer 0027             LCD_write_integer@index 0036  
               ?_LCD_write_message 0020                         __div_to_l_ 260C  
                     ??_LCD_cursor 001C             LCD_write_integer@value 0027  
    LCD_write_integer@convertedInt 0030                ??_LCD_write_integer 002B  
                  __div_to_l_@exp1 001C                ??_LCD_write_message 0022  
                  __div_to_l_@cntr 001B                            ??_scale 003A  
                  __div_to_l_@quot 0017                         __pbssBANK0 00A7  
                       __pnvCOMRAM 0043                         ??_LCD_home 001B  
                    __div_to_l_@f1 000F                      __div_to_l_@f2 0013  
                  ??_LCD_goto_line 001B                 __end_of_LCD_cursor 3234  
           __end_of_LCD_initialize 296E                            ?___flge 000F  
                          ?___wmul 000F          __end_of_LCD_write_integer 24DA  
        __end_of_LCD_write_message 320C                  ?_LCD_enable_pulse 0001  
                          ?_fround 0036                 ??_LCD_enable_pulse 0017  
         __end_of_inizializzazione 2FF2                          ?___xxtofl 0015  
                 LCD_cursor@active 001C                          ?_delay_ms 0015  
                  __CFG_VREGEN$OFF 000000                          ?_read_adc 0001  
                        ?_isr_alta 0001                          ?_ricarica 0001  
                __end_of__npowers_ 7F15                            __Hparam 0000  
                       _scale$1260 003A                            __Lparam 0000  
                 delay_ms@value_ms 0015                    ?_LCD_initialize 0001  
                  __size_of___flge 0120                            ___fladd 085A  
                          ___fldiv 189E                            ___awdiv 2D46  
                          ___flneg 31B4                            ___awmod 2E4C  
                          ___flmul 154E                            ___flsub 3044  
                          ___fltol 296E                            ___lldiv 2DCA  
                  __size_of___wmul 0026                     _LCD_write_char 2EBC  
                          ___llmod 2F2C                            ___lwdiv 2FF2  
                          ___lwmod 3110                            __pcinit 308C  
                  __size_of_fround 027A                            _delay_s 32CA  
                          __ramtop 0800                LCD_write_char@value 001F  
                          __ptext0 2B30                            __ptext1 0D02  
                          __ptext2 32CA                            __ptext3 239C  
                          __ptext4 30CE                            __ptext5 2CA2  
                          __ptext6 3110                            __ptext7 2FF2  
                          __ptext8 3234                            __ptext9 20DA  
                      ?__div_to_l_ 000F                   LCD_write_char@D0 001E  
                 LCD_write_char@D1 001D                   LCD_write_char@D2 001C  
                 LCD_write_char@D3 001B                            _dpowers 7F49  
                          _current 00B9                            _isdigit 32EA  
                       ??___xxtofl 0019                   ___awmod@dividend 000F  
                          _scarica 0D02                            _lettura 00A7  
                          _secondi 00D1                         ??_delay_ms 0017  
         __end_of_delay_set_quartz 332E                            _sprintf 001A  
                          _voltage 0049                     __pintcode_body 2A68  
                        _LCD_clear 325A               end_of_initialization 30C0  
        __size_of_LCD_write_string 0024                       _combinazioni 004D  
                          itoa@buf 001F                            itoa@val 0021  
                    __Lmediumconst 7EE0                         ??_read_adc 006D  
                          int_func 2A68                         ??_isr_alta 0001  
                       ??_ricarica 0043                    ___lldiv@divisor 0013  
               LCD_cursor@blinking 001B                    ___lldiv@counter 001B  
           __end_of_LCD_write_char 2F2C                            postdec1 000FE5  
                          postinc0 000FEE                            postinc2 000FDE  
       __size_of_LCD_write_integer 013E         __size_of_LCD_write_message 002A  
                          utoa@buf 0016                     __tdiv_to_l_@f1 000F  
                   __tdiv_to_l_@f2 0013                            utoa@val 0018  
                    ??__tdiv_to_l_ 0017                          _PORTBbits 000F81  
                        _PORTCbits 000F82           __end_of_LCD_send_command 31B4  
                      ___fladd@grs 0073                      ___xxtofl@sign 001D  
                      ___fldiv@grs 0067                        ___fldiv@rem 0061  
                       ?_LCD_clear 0001            _clock_counter_reference 0043  
                      ___flmul@grs 002A                __size_of__div_to_l_ 0128  
                __size_of_LCD_home 0026                    ?_LCD_write_char 0001  
                   __end_of___flge 2854                     __end_of___wmul 32A6  
                    __pidataCOMRAM 332E                     __end_of_fround 20DA  
              start_initialization 308C                __end_of__tdiv_to_l_ 260C  
                  ___llmod@divisor 0013                    ___llmod@counter 0017  
                         ??___flge 0017                           ??___wmul 0013  
                 __CFG_LPT1OSC$OFF 000000                           ??_fround 003A  
                    sprintf@tmpval 0094                          ___fladd@a 0064  
                        ___fladd@b 0060                         fround@prec 0042  
                        ___fldiv@a 003A                          ___fldiv@b 0036  
                ?_inizializzazione 0001                          ___flmul@a 0021  
                        ___flmul@b 001D                        __pbssCOMRAM 0049  
                        ___flsub@a 0078                          ___flsub@b 0074  
                    __pcstackBANK0 0060                 ??_inizializzazione 0022  
                __size_of___xxtofl 0150          __size_of_LCD_enable_pulse 001E  
                __size_of_delay_ms 0032                        ??_LCD_clear 001B  
          LCD_write_message@buffer 0020                   _LCD_write_string 32A6  
                      sprintf@flag 008C                        sprintf@fval 009A  
                      sprintf@prec 0098                   ??_LCD_initialize 001D  
        delay_set_quartz@frequency 000F                  __size_of_read_adc 0286  
                 ___lwdiv@dividend 000F                 LCD_send_command@D0 0019  
               LCD_send_command@D1 0018                 LCD_send_command@D2 0017  
               LCD_send_command@D3 001A                  __size_of_isr_alta 2B28  
            __end_of_LCD_goto_line 2CA2                          __pintcode 0008  
                __size_of_ricarica 0172                      __pmediumconst 7EE0  
                         ?___fladd 0060                           ?___fldiv 0036  
                         ?___awdiv 0015                           ?___flneg 000F  
                         ?___awmod 000F                           ?___flmul 001D  
                         ?___flsub 0074                           ?___fltol 003F  
                         ?___lldiv 000F                           ?___llmod 000F  
                        __npowers_ 7EE1                           ?___lwdiv 000F  
                         ?___lwmod 000F                           ?_delay_s 0001  
                      __tdiv_to_l_ 24DA                       ??__div_to_l_ 0017  
                         ?_isdigit 0001                           ?_scarica 0001  
                 ___lwdiv@quotient 0013                           ?_sprintf 007C  
                   __size_of_scale 0418                  ?_delay_set_quartz 0001  
               ??_delay_set_quartz 000F                     ___wmul@product 0013  
                         _LATAbits 000F89                           _LCD_home 3234  
     _delay_quartz_frequency_value 0050                 __end_of__div_to_l_ 2734  
                 __CFG_WDTPS$32768 000000                          _tempo_old 00C9  
   LCD_write_integer@zero_cleaning 002A                         _ADCON0bits 000FC2  
                ___wmul@multiplier 000F                  ?_LCD_send_command 0017  
               ??_LCD_send_command 001A                          copy_data0 30B4  
                 ??_LCD_write_char 001B                  LCD_goto_line@line 001B  
                         __Hrparam 0000                           __Lrparam 0000  
                        read_adc@i 0042                   __size_of___fladd 04A8  
                 __size_of___fldiv 033C                   __size_of___awdiv 0084  
                 __size_of___flneg 002E                   __size_of___awmod 0070  
                 __size_of___flmul 0350                   __size_of___flsub 0048  
                 __size_of___fltol 00FA                   __size_of___lldiv 0082  
                 __size_of___llmod 0066                   __size_of___lwdiv 0052  
                 __size_of___lwmod 0042                        _fround$1258 003E  
                      _fround$1259 003A                        _isdigit$885 0010  
                 __size_of_delay_s 0020                         sprintf@exp 0092  
                       sprintf@val 008E                           ___xxtofl 224C  
                 __size_of_isdigit 001E                           _delay_ms 3152  
                  ___lwdiv@divisor 0011                   __size_of_scarica 0434  
                  ___lwdiv@counter 0015                   _LCD_enable_pulse 3308  
                         __ptext10 001A                           __ptext11 1136  
                         __ptext20 296E                           __ptext12 32EA  
                         __ptext21 3044                           __ptext13 1E60  
                         __ptext30 2BEA                           __ptext22 085A  
                         __ptext14 2E4C                           __ptext31 2F92  
                         __ptext23 31B4                           __ptext15 2D46  
                         __ptext40 3152                           __ptext32 31E2  
                         __ptext24 2734                           __ptext16 24DA  
                         __ptext41 3280                           __ptext33 2EBC  
                         __ptext25 1BDA                           __ptext17 260C  
                         __ptext34 2854                           __ptext26 224C  
                         __ptext18 2F2C                           __ptext35 3326  
                         __ptext27 154E                           __ptext19 2DCA  
                         __ptext36 320C                           __ptext28 189E  
                         __ptext37 325A                           __ptext29 32A6  
                         __ptext38 3184                           __ptext39 3308  
                         __powers_ 7F15                   __size_of_sprintf 0840  
                         _read_adc 1BDA                      __size_of_main 00BA  
                    __size_of_itoa 0042                      __size_of_utoa 00A4  
                         _isr_alta 0008                           _ricarica 20DA  
                         _rapporto 0045                           int$flags 0051  
         __end_of_LCD_write_string 32CA              __CFG_CPUDIV$OSC1_PLL2 000000  
                       _LCD_cursor 320C                         _INTCONbits 000FF2  
                         itoa@base 0023                           isdigit@c 0011  
                         scale@scl 003E                           intlevel2 0000  
                        sprintf@ap 008A                   __tdiv_to_l_@exp1 001F  
                 __tdiv_to_l_@cntr 001E                          sprintf@sp 007C  
                 __tdiv_to_l_@quot 001A                   ___lwmod@dividend 000F  
                 ___lldiv@dividend 000F          __size_of_inizializzazione 0060  
                     ?__tdiv_to_l_ 000F                           utoa@base 001A  
                      _tempo_delay 00C5                           sprintf@c 009E  
                         sprintf@f 007E                   ___lldiv@quotient 0017  
                  ___lwmod@divisor 0011                    ___lwmod@counter 0013  
                    ___fladd@signs 0070                       ___fladd@aexp 0071  
                     ___fladd@bexp 0072  
