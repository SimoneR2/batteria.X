

Microchip Technology PIC18 LITE Macro Assembler V1.36 build -262312587 
                                                                                               Sun Feb 28 11:00:20 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    52                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    53  0000                     
    54                           	psect	idataCOMRAM
    55  00303F                     __pidataCOMRAM:
    56                           	opt stack 0
    57                           
    58                           ;initializer for _delay_quartz_frequency_value
    59  00303F  14                 	db	20
    60                           
    61                           	psect	idataBANK0
    62  00303C                     __pidataBANK0:
    63                           	opt stack 0
    64                           
    65                           ;initializer for _combinazioni
    66  00303C  00                 	db	0
    67  00303D  01                 	db	1
    68  00303E  03                 	db	3
    69                           
    70                           	psect	smallconst
    71  000800                     __psmallconst:
    72                           	opt stack 0
    73  000800  00                 	db	0
    74  000801                     __npowers_:
    75                           	opt stack 0
    76  000801  0000               	dw	0
    77  000803  3F80               	dw	16256
    78  000805  CCCD               	dw	52429
    79  000807  3DCC               	dw	15820
    80  000809  D70A               	dw	55050
    81  00080B  3C23               	dw	15395
    82  00080D  126F               	dw	4719
    83  00080F  3A83               	dw	14979
    84  000811  B717               	dw	46871
    85  000813  38D1               	dw	14545
    86  000815  C5AC               	dw	50604
    87  000817  3727               	dw	14119
    88  000819  37BD               	dw	14269
    89  00081B  3586               	dw	13702
    90  00081D  BF95               	dw	49045
    91  00081F  33D6               	dw	13270
    92  000821  CC77               	dw	52343
    93  000823  322B               	dw	12843
    94  000825  705F               	dw	28767
    95  000827  3089               	dw	12425
    96  000829  E6FF               	dw	59135
    97  00082B  2EDB               	dw	11995
    98  00082D  E508               	dw	58632
    99  00082F  1E3C               	dw	7740
   100  000831  4260               	dw	16992
   101  000833  0DA2               	dw	3490
   102  000835                     __end_of__npowers_:
   103                           	opt stack 0
   104  000835                     __powers_:
   105                           	opt stack 0
   106  000835  0000               	dw	0
   107  000837  3F80               	dw	16256
   108  000839  0000               	dw	0
   109  00083B  4120               	dw	16672
   110  00083D  0000               	dw	0
   111  00083F  42C8               	dw	17096
   112  000841  0000               	dw	0
   113  000843  447A               	dw	17530
   114  000845  4000               	dw	16384
   115  000847  461C               	dw	17948
   116  000849  5000               	dw	20480
   117  00084B  47C3               	dw	18371
   118  00084D  2400               	dw	9216
   119  00084F  4974               	dw	18804
   120  000851  9680               	dw	38528
   121  000853  4B18               	dw	19224
   122  000855  BC20               	dw	48160
   123  000857  4CBE               	dw	19646
   124  000859  6B28               	dw	27432
   125  00085B  4E6E               	dw	20078
   126  00085D  02F9               	dw	761
   127  00085F  5015               	dw	20501
   128  000861  78EC               	dw	30956
   129  000863  60AD               	dw	24749
   130  000865  F2CA               	dw	62154
   131  000867  7149               	dw	29001
   132  000869                     __end_of__powers_:
   133                           	opt stack 0
   134  000869                     _dpowers:
   135                           	opt stack 0
   136  000869  0001               	dw	1
   137  00086B  0000               	dw	0
   138  00086D  000A               	dw	10
   139  00086F  0000               	dw	0
   140  000871  0064               	dw	100
   141  000873  0000               	dw	0
   142  000875  03E8               	dw	1000
   143  000877  0000               	dw	0
   144  000879  2710               	dw	10000
   145  00087B  0000               	dw	0
   146  00087D  86A0               	dw	34464
   147  00087F  0001               	dw	1
   148  000881  4240               	dw	16960
   149  000883  000F               	dw	15
   150  000885  9680               	dw	38528
   151  000887  0098               	dw	152
   152  000889  E100               	dw	57600
   153  00088B  05F5               	dw	1525
   154  00088D  CA00               	dw	51712
   155  00088F  3B9A               	dw	15258
   156  000891                     __end_of_dpowers:
   157                           	opt stack 0
   158  000891                     STR_1:
   159  000891  43                 	db	67	;'C'
   160  000892  69                 	db	105	;'i'
   161  000893  63                 	db	99	;'c'
   162  000894  6C                 	db	108	;'l'
   163  000895  6F                 	db	111	;'o'
   164  000896  20                 	db	32
   165  000897  72                 	db	114	;'r'
   166  000898  69                 	db	105	;'i'
   167  000899  63                 	db	99	;'c'
   168  00089A  61                 	db	97	;'a'
   169  00089B  72                 	db	114	;'r'
   170  00089C  69                 	db	105	;'i'
   171  00089D  63                 	db	99	;'c'
   172  00089E  61                 	db	97	;'a'
   173  00089F  2E                 	db	46
   174  0008A0  2E                 	db	46
   175  0008A1  00                 	db	0
   176  0008A2                     STR_4:
   177  0008A2  43                 	db	67	;'C'
   178  0008A3  61                 	db	97	;'a'
   179  0008A4  72                 	db	114	;'r'
   180  0008A5  69                 	db	105	;'i'
   181  0008A6  63                 	db	99	;'c'
   182  0008A7  61                 	db	97	;'a'
   183  0008A8  20                 	db	32
   184  0008A9  74                 	db	116	;'t'
   185  0008AA  65                 	db	101	;'e'
   186  0008AB  72                 	db	114	;'r'
   187  0008AC  6D                 	db	109	;'m'
   188  0008AD  69                 	db	105	;'i'
   189  0008AE  6E                 	db	110	;'n'
   190  0008AF  61                 	db	97	;'a'
   191  0008B0  74                 	db	116	;'t'
   192  0008B1  61                 	db	97	;'a'
   193  0008B2  00                 	db	0
   194  0008B3                     STR_5:
   195  0008B3  69                 	db	105	;'i'
   196  0008B4  6E                 	db	110	;'n'
   197  0008B5  69                 	db	105	;'i'
   198  0008B6  7A                 	db	122	;'z'
   199  0008B7  69                 	db	105	;'i'
   200  0008B8  61                 	db	97	;'a'
   201  0008B9  6C                 	db	108	;'l'
   202  0008BA  69                 	db	105	;'i'
   203  0008BB  7A                 	db	122	;'z'
   204  0008BC  7A                 	db	122	;'z'
   205  0008BD  61                 	db	97	;'a'
   206  0008BE  7A                 	db	122	;'z'
   207  0008BF  69                 	db	105	;'i'
   208  0008C0  6F                 	db	111	;'o'
   209  0008C1  6E                 	db	110	;'n'
   210  0008C2  65                 	db	101	;'e'
   211  0008C3  00                 	db	0
   212  0008C4                     STR_2:
   213  0008C4  56                 	db	86	;'V'
   214  0008C5  3A                 	db	58	;':'
   215  0008C6  25                 	db	37
   216  0008C7  2E                 	db	46
   217  0008C8  32                 	db	50	;'2'
   218  0008C9  66                 	db	102	;'f'
   219  0008CA  20                 	db	32
   220  0008CB  00                 	db	0
   221  0008CC                     STR_3:
   222  0008CC  49                 	db	73	;'I'
   223  0008CD  3A                 	db	58	;':'
   224  0008CE  25                 	db	37
   225  0008CF  2E                 	db	46
   226  0008D0  32                 	db	50	;'2'
   227  0008D1  66                 	db	102	;'f'
   228  0008D2  00                 	db	0
   229                           
   230                           ; #config settings
   231  0008D3  00                 	db	0	; dummy byte at the end
   232  0000                     
   233                           	psect	nvCOMRAM
   234  00005B                     __pnvCOMRAM:
   235                           	opt stack 0
   236  00005B                     _clock_counter_reference:
   237                           	opt stack 0
   238  00005B                     	ds	2
   239                           
   240                           	psect	nvBANK0
   241  00008F                     __pnvBANK0:
   242                           	opt stack 0
   243  00008F                     _rapporto:
   244                           	opt stack 0
   245  00008F                     	ds	4
   246  0000                     _ADCON0	set	4034
   247  0000                     _ADCON0bits	set	4034
   248  0000                     _ADCON1	set	4033
   249  0000                     _ADCON2	set	4032
   250  0000                     _ADRESH	set	4036
   251  0000                     _ADRESL	set	4035
   252  0000                     _LATA	set	3977
   253  0000                     _LATB	set	3978
   254  0000                     _LATBbits	set	3978
   255  0000                     _LATC	set	3979
   256  0000                     _LATCbits	set	3979
   257  0000                     _PORTCbits	set	3970
   258  0000                     _TRISA	set	3986
   259  0000                     _TRISB	set	3987
   260  0000                     _TRISC	set	3988
   261                           
   262                           	psect	cinit
   263  002E16                     __pcinit:
   264                           	opt stack 0
   265  002E16                     start_initialization:
   266                           	opt stack 0
   267  002E16                     __initialization:
   268                           	opt stack 0
   269                           
   270                           ; Clear objects allocated to BANK0 (22 bytes)
   271  002E16  EE00  F079         	lfsr	0,__pbssBANK0
   272  002E1A  0E16               	movlw	22
   273  002E1C                     clear_0:
   274  002E1C  6AEE               	clrf	postinc0,c
   275  002E1E  06E8               	decf	wreg,f,c
   276  002E20  E1FD               	bnz	clear_0
   277                           
   278                           ; Clear objects allocated to COMRAM (2 bytes)
   279  002E22  6A5E               	clrf	(__pbssCOMRAM+1)& (0+255),c
   280  002E24  6A5D               	clrf	__pbssCOMRAM& (0+255),c
   281                           
   282                           ; Initialize objects allocated to BANK0 (3 bytes)
   283                           ; load TBLPTR registers with __pidataBANK0
   284  002E26  0E3C               	movlw	low __pidataBANK0
   285  002E28  6EF6               	movwf	tblptrl,c
   286  002E2A  0E30               	movlw	high __pidataBANK0
   287  002E2C  6EF7               	movwf	tblptrh,c
   288  002E2E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   289  002E30  6EF8               	movwf	tblptru,c
   290  002E32  0009               	tblrd		*+	;fetch initializer
   291  002E34  CFF5 F093          	movff	tablat,__pdataBANK0
   292  002E38  0009               	tblrd		*+	;fetch initializer
   293  002E3A  CFF5 F094          	movff	tablat,__pdataBANK0+1
   294  002E3E  0009               	tblrd		*+	;fetch initializer
   295  002E40  CFF5 F095          	movff	tablat,__pdataBANK0+2
   296                           
   297                           ; Initialize objects allocated to COMRAM (1 bytes)
   298                           ; load TBLPTR registers with __pidataCOMRAM
   299  002E44  0E3F               	movlw	low __pidataCOMRAM
   300  002E46  6EF6               	movwf	tblptrl,c
   301  002E48  0E30               	movlw	high __pidataCOMRAM
   302  002E4A  6EF7               	movwf	tblptrh,c
   303  002E4C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   304  002E4E  6EF8               	movwf	tblptru,c
   305  002E50  0009               	tblrd		*+	;fetch initializer
   306  002E52  CFF5 F05F          	movff	tablat,__pdataCOMRAM
   307  002E56                     end_of_initialization:
   308                           	opt stack 0
   309  002E56                     __end_of__initialization:
   310                           	opt stack 0
   311  002E56  0E00               	movlw	low (__Lmediumconst shr (0+16))
   312  002E58  6EF8               	movwf	tblptru,c
   313  002E5A  0100               	movlb	0
   314  002E5C  EFB8  F016         	goto	_main	;jump to C main() function
   315                           tblptru	equ	0xFF8
   316                           tblptrh	equ	0xFF7
   317                           tblptrl	equ	0xFF6
   318                           tablat	equ	0xFF5
   319                           postinc0	equ	0xFEE
   320                           wreg	equ	0xFE8
   321                           
   322                           	psect	bssCOMRAM
   323  00005D                     __pbssCOMRAM:
   324                           	opt stack 0
   325  00005D                     _lettura:
   326                           	opt stack 0
   327  00005D                     	ds	2
   328                           tblptru	equ	0xFF8
   329                           tblptrh	equ	0xFF7
   330                           tblptrl	equ	0xFF6
   331                           tablat	equ	0xFF5
   332                           postinc0	equ	0xFEE
   333                           wreg	equ	0xFE8
   334                           
   335                           	psect	dataCOMRAM
   336  00005F                     __pdataCOMRAM:
   337                           	opt stack 0
   338  00005F                     _delay_quartz_frequency_value:
   339                           	opt stack 0
   340  00005F                     	ds	1
   341                           tblptru	equ	0xFF8
   342                           tblptrh	equ	0xFF7
   343                           tblptrl	equ	0xFF6
   344                           tablat	equ	0xFF5
   345                           postinc0	equ	0xFEE
   346                           wreg	equ	0xFE8
   347                           
   348                           	psect	bssBANK0
   349  000079                     __pbssBANK0:
   350                           	opt stack 0
   351  000079                     LCD_write_integer@F4700:
   352                           	opt stack 0
   353  000079                     	ds	6
   354  00007F                     _current:
   355                           	opt stack 0
   356  00007F                     	ds	4
   357  000083                     _voltage:
   358                           	opt stack 0
   359  000083                     	ds	4
   360  000087                     _str:
   361                           	opt stack 0
   362  000087                     	ds	8
   363                           tblptru	equ	0xFF8
   364                           tblptrh	equ	0xFF7
   365                           tblptrl	equ	0xFF6
   366                           tablat	equ	0xFF5
   367                           postinc0	equ	0xFEE
   368                           wreg	equ	0xFE8
   369                           
   370                           	psect	dataBANK0
   371  000093                     __pdataBANK0:
   372                           	opt stack 0
   373  000093                     _combinazioni:
   374                           	opt stack 0
   375  000093                     	ds	3
   376                           tblptru	equ	0xFF8
   377                           tblptrh	equ	0xFF7
   378                           tblptrl	equ	0xFF6
   379                           tablat	equ	0xFF5
   380                           postinc0	equ	0xFEE
   381                           wreg	equ	0xFE8
   382                           
   383                           	psect	cstackBANK0
   384  000060                     __pcstackBANK0:
   385                           	opt stack 0
   386  000060                     _sprintf$1109:
   387                           	opt stack 0
   388                           
   389                           ; 4 bytes @ 0x0
   390  000060                     	ds	4
   391  000064                     sprintf@ap:
   392                           	opt stack 0
   393                           
   394                           ; 2 bytes @ 0x4
   395  000064                     	ds	2
   396  000066                     sprintf@flag:
   397                           	opt stack 0
   398                           
   399                           ; 2 bytes @ 0x6
   400  000066                     	ds	2
   401  000068                     sprintf@val:
   402                           	opt stack 0
   403                           
   404                           ; 4 bytes @ 0x8
   405  000068                     	ds	4
   406  00006C                     sprintf@exp:
   407                           	opt stack 0
   408                           
   409                           ; 2 bytes @ 0xC
   410  00006C                     	ds	2
   411  00006E                     sprintf@tmpval:
   412                           	opt stack 0
   413                           
   414                           ; 4 bytes @ 0xE
   415  00006E                     	ds	4
   416  000072                     sprintf@prec:
   417                           	opt stack 0
   418                           
   419                           ; 2 bytes @ 0x12
   420  000072                     	ds	2
   421  000074                     sprintf@fval:
   422                           	opt stack 0
   423                           
   424                           ; 4 bytes @ 0x14
   425  000074                     	ds	4
   426  000078                     sprintf@c:
   427                           	opt stack 0
   428                           
   429                           ; 1 bytes @ 0x18
   430  000078                     	ds	1
   431                           tblptru	equ	0xFF8
   432                           tblptrh	equ	0xFF7
   433                           tblptrl	equ	0xFF6
   434                           tablat	equ	0xFF5
   435                           postinc0	equ	0xFEE
   436                           wreg	equ	0xFE8
   437                           
   438                           	psect	cstackCOMRAM
   439  000001                     __pcstackCOMRAM:
   440                           	opt stack 0
   441  000001                     ??_isdigit:
   442  000001                     ?___wmul:
   443                           	opt stack 0
   444  000001                     ?___awmod:
   445                           	opt stack 0
   446  000001                     ?__tdiv_to_l_:
   447                           	opt stack 0
   448  000001                     ?__div_to_l_:
   449                           	opt stack 0
   450  000001                     ?___fldiv:
   451                           	opt stack 0
   452  000001                     ?___flneg:
   453                           	opt stack 0
   454  000001                     ?___lldiv:
   455                           	opt stack 0
   456  000001                     ?___llmod:
   457                           	opt stack 0
   458  000001                     delay_set_quartz@frequency:
   459                           	opt stack 0
   460  000001                     ___wmul@multiplier:
   461                           	opt stack 0
   462  000001                     ___awmod@dividend:
   463                           	opt stack 0
   464  000001                     __div_to_l_@f1:
   465                           	opt stack 0
   466  000001                     ___flge@ff1:
   467                           	opt stack 0
   468  000001                     ___flneg@f1:
   469                           	opt stack 0
   470  000001                     __tdiv_to_l_@f1:
   471                           	opt stack 0
   472  000001                     ___lldiv@dividend:
   473                           	opt stack 0
   474  000001                     ___llmod@dividend:
   475                           	opt stack 0
   476  000001                     ___fldiv@b:
   477                           	opt stack 0
   478                           
   479                           ; 4 bytes @ 0x0
   480  000001                     	ds	1
   481  000002                     _isdigit$733:
   482                           	opt stack 0
   483                           
   484                           ; 1 bytes @ 0x1
   485  000002                     	ds	1
   486  000003                     isdigit@c:
   487                           	opt stack 0
   488  000003                     ___wmul@multiplicand:
   489                           	opt stack 0
   490  000003                     ___awmod@divisor:
   491                           	opt stack 0
   492                           
   493                           ; 2 bytes @ 0x2
   494  000003                     	ds	2
   495  000005                     ___awmod@counter:
   496                           	opt stack 0
   497  000005                     ___wmul@product:
   498                           	opt stack 0
   499  000005                     __div_to_l_@f2:
   500                           	opt stack 0
   501  000005                     ___flge@ff2:
   502                           	opt stack 0
   503  000005                     __tdiv_to_l_@f2:
   504                           	opt stack 0
   505  000005                     ___lldiv@divisor:
   506                           	opt stack 0
   507  000005                     ___llmod@divisor:
   508                           	opt stack 0
   509  000005                     ___fldiv@a:
   510                           	opt stack 0
   511                           
   512                           ; 4 bytes @ 0x4
   513  000005                     	ds	1
   514  000006                     ___awmod@sign:
   515                           	opt stack 0
   516                           
   517                           ; 1 bytes @ 0x5
   518  000006                     	ds	1
   519  000007                     ?___awdiv:
   520                           	opt stack 0
   521  000007                     delay_ms@value_ms:
   522                           	opt stack 0
   523  000007                     ___awdiv@dividend:
   524                           	opt stack 0
   525                           
   526                           ; 2 bytes @ 0x6
   527  000007                     	ds	2
   528  000009                     ??__tdiv_to_l_:
   529  000009                     ??___fldiv:
   530  000009                     ??___flge:
   531  000009                     LCD_send_command@D2:
   532                           	opt stack 0
   533  000009                     ___llmod@counter:
   534                           	opt stack 0
   535  000009                     ___awdiv@divisor:
   536                           	opt stack 0
   537  000009                     __div_to_l_@quot:
   538                           	opt stack 0
   539  000009                     ___lldiv@quotient:
   540                           	opt stack 0
   541                           
   542                           ; 4 bytes @ 0x8
   543  000009                     	ds	1
   544  00000A                     LCD_send_command@D1:
   545                           	opt stack 0
   546                           
   547                           ; 1 bytes @ 0x9
   548  00000A                     	ds	1
   549  00000B                     LCD_send_command@D0:
   550                           	opt stack 0
   551  00000B                     ___awdiv@counter:
   552                           	opt stack 0
   553                           
   554                           ; 1 bytes @ 0xA
   555  00000B                     	ds	1
   556  00000C                     LCD_send_command@D3:
   557                           	opt stack 0
   558  00000C                     ___awdiv@sign:
   559                           	opt stack 0
   560  00000C                     __tdiv_to_l_@quot:
   561                           	opt stack 0
   562                           
   563                           ; 4 bytes @ 0xB
   564  00000C                     	ds	1
   565  00000D                     LCD_goto_line@line:
   566                           	opt stack 0
   567  00000D                     LCD_write_char@D3:
   568                           	opt stack 0
   569  00000D                     LCD_cursor@blinking:
   570                           	opt stack 0
   571  00000D                     __div_to_l_@cntr:
   572                           	opt stack 0
   573  00000D                     ___lldiv@counter:
   574                           	opt stack 0
   575  00000D                     ___fldiv@sign:
   576                           	opt stack 0
   577  00000D                     ___awdiv@quotient:
   578                           	opt stack 0
   579                           
   580                           ; 2 bytes @ 0xC
   581  00000D                     	ds	1
   582  00000E                     LCD_write_char@D2:
   583                           	opt stack 0
   584  00000E                     LCD_cursor@active:
   585                           	opt stack 0
   586  00000E                     __div_to_l_@exp1:
   587                           	opt stack 0
   588  00000E                     ___fldiv@rem:
   589                           	opt stack 0
   590                           
   591                           ; 4 bytes @ 0xD
   592  00000E                     	ds	1
   593  00000F                     ?___flmul:
   594                           	opt stack 0
   595  00000F                     ?___xxtofl:
   596                           	opt stack 0
   597  00000F                     LCD_write_char@D1:
   598                           	opt stack 0
   599  00000F                     LCD_initialize@quartz_frequency:
   600                           	opt stack 0
   601  00000F                     ___flmul@b:
   602                           	opt stack 0
   603  00000F                     ___xxtofl@val:
   604                           	opt stack 0
   605                           
   606                           ; 4 bytes @ 0xE
   607  00000F                     	ds	1
   608  000010                     LCD_write_char@D0:
   609                           	opt stack 0
   610  000010                     __tdiv_to_l_@cntr:
   611                           	opt stack 0
   612                           
   613                           ; 1 bytes @ 0xF
   614  000010                     	ds	1
   615  000011                     LCD_write_char@value:
   616                           	opt stack 0
   617  000011                     __tdiv_to_l_@exp1:
   618                           	opt stack 0
   619                           
   620                           ; 1 bytes @ 0x10
   621  000011                     	ds	1
   622  000012                     LCD_write_message@buffer:
   623                           	opt stack 0
   624  000012                     LCD_write_string@buffer:
   625                           	opt stack 0
   626  000012                     ___fldiv@new_exp:
   627                           	opt stack 0
   628                           
   629                           ; 2 bytes @ 0x11
   630  000012                     	ds	1
   631  000013                     ??___xxtofl:
   632  000013                     ___flmul@a:
   633                           	opt stack 0
   634                           
   635                           ; 4 bytes @ 0x12
   636  000013                     	ds	1
   637  000014                     ___fldiv@grs:
   638                           	opt stack 0
   639                           
   640                           ; 4 bytes @ 0x13
   641  000014                     	ds	3
   642  000017                     ??___flmul:
   643  000017                     ___xxtofl@sign:
   644                           	opt stack 0
   645                           
   646                           ; 1 bytes @ 0x16
   647  000017                     	ds	1
   648  000018                     ___fldiv@bexp:
   649                           	opt stack 0
   650  000018                     ___xxtofl@exp:
   651                           	opt stack 0
   652                           
   653                           ; 1 bytes @ 0x17
   654  000018                     	ds	1
   655  000019                     ___fldiv@aexp:
   656                           	opt stack 0
   657  000019                     ___xxtofl@arg:
   658                           	opt stack 0
   659                           
   660                           ; 4 bytes @ 0x18
   661  000019                     	ds	2
   662  00001B                     ___flmul@sign:
   663                           	opt stack 0
   664                           
   665                           ; 1 bytes @ 0x1A
   666  00001B                     	ds	1
   667  00001C                     ___flmul@grs:
   668                           	opt stack 0
   669                           
   670                           ; 4 bytes @ 0x1B
   671  00001C                     	ds	4
   672  000020                     ___flmul@aexp:
   673                           	opt stack 0
   674                           
   675                           ; 1 bytes @ 0x1F
   676  000020                     	ds	1
   677  000021                     ___flmul@bexp:
   678                           	opt stack 0
   679                           
   680                           ; 1 bytes @ 0x20
   681  000021                     	ds	1
   682  000022                     ___flmul@prod:
   683                           	opt stack 0
   684                           
   685                           ; 4 bytes @ 0x21
   686  000022                     	ds	4
   687  000026                     ___flmul@temp:
   688                           	opt stack 0
   689                           
   690                           ; 2 bytes @ 0x25
   691  000026                     	ds	2
   692  000028                     ??_read_adc:
   693  000028                     ?_fround:
   694                           	opt stack 0
   695  000028                     ?_scale:
   696                           	opt stack 0
   697                           
   698                           ; 4 bytes @ 0x27
   699  000028                     	ds	2
   700  00002A                     read_adc@i:
   701                           	opt stack 0
   702                           
   703                           ; 1 bytes @ 0x29
   704  00002A                     	ds	2
   705  00002C                     _fround$1107:
   706                           	opt stack 0
   707  00002C                     _scale$1108:
   708                           	opt stack 0
   709                           
   710                           ; 4 bytes @ 0x2B
   711  00002C                     	ds	4
   712  000030                     scale@scl:
   713                           	opt stack 0
   714  000030                     _fround$1106:
   715                           	opt stack 0
   716                           
   717                           ; 4 bytes @ 0x2F
   718  000030                     	ds	1
   719  000031                     ?___fltol:
   720                           	opt stack 0
   721  000031                     ___fltol@f1:
   722                           	opt stack 0
   723                           
   724                           ; 4 bytes @ 0x30
   725  000031                     	ds	3
   726  000034                     fround@prec:
   727                           	opt stack 0
   728                           
   729                           ; 1 bytes @ 0x33
   730  000034                     	ds	1
   731  000035                     ??___fltol:
   732  000035                     ?___fladd:
   733                           	opt stack 0
   734  000035                     ___fladd@b:
   735                           	opt stack 0
   736                           
   737                           ; 4 bytes @ 0x34
   738  000035                     	ds	4
   739  000039                     ___fltol@sign1:
   740                           	opt stack 0
   741  000039                     ___fladd@a:
   742                           	opt stack 0
   743                           
   744                           ; 4 bytes @ 0x38
   745  000039                     	ds	1
   746  00003A                     ___fltol@exp1:
   747                           	opt stack 0
   748                           
   749                           ; 1 bytes @ 0x39
   750  00003A                     	ds	3
   751  00003D                     ??___fladd:
   752                           
   753                           ; 1 bytes @ 0x3C
   754  00003D                     	ds	8
   755  000045                     ___fladd@signs:
   756                           	opt stack 0
   757                           
   758                           ; 1 bytes @ 0x44
   759  000045                     	ds	1
   760  000046                     ___fladd@aexp:
   761                           	opt stack 0
   762                           
   763                           ; 1 bytes @ 0x45
   764  000046                     	ds	1
   765  000047                     ___fladd@bexp:
   766                           	opt stack 0
   767                           
   768                           ; 1 bytes @ 0x46
   769  000047                     	ds	1
   770  000048                     ___fladd@grs:
   771                           	opt stack 0
   772                           
   773                           ; 1 bytes @ 0x47
   774  000048                     	ds	1
   775  000049                     ?___flsub:
   776                           	opt stack 0
   777  000049                     ___flsub@b:
   778                           	opt stack 0
   779                           
   780                           ; 4 bytes @ 0x48
   781  000049                     	ds	4
   782  00004D                     ___flsub@a:
   783                           	opt stack 0
   784                           
   785                           ; 4 bytes @ 0x4C
   786  00004D                     	ds	4
   787  000051                     ?_sprintf:
   788                           	opt stack 0
   789  000051                     sprintf@sp:
   790                           	opt stack 0
   791                           
   792                           ; 2 bytes @ 0x50
   793  000051                     	ds	2
   794  000053                     sprintf@f:
   795                           	opt stack 0
   796                           
   797                           ; 2 bytes @ 0x52
   798  000053                     	ds	6
   799  000059                     ??_sprintf:
   800                           
   801                           ; 1 bytes @ 0x58
   802  000059                     	ds	2
   803  00005B                     tblptru	equ	0xFF8
   804                           tblptrh	equ	0xFF7
   805                           tblptrl	equ	0xFF6
   806                           tablat	equ	0xFF5
   807                           postinc0	equ	0xFEE
   808                           wreg	equ	0xFE8
   809                           
   810                           ; 1 bytes @ 0x5A
   811 ;;
   812 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   813 ;;
   814 ;; *************** function _main *****************
   815 ;; Defined at:
   816 ;;		line 45 in file "tester.c"
   817 ;; Parameters:    Size  Location     Type
   818 ;;		None
   819 ;; Auto vars:     Size  Location     Type
   820 ;;		None
   821 ;; Return value:  Size  Location     Type
   822 ;;                  1    wreg      void 
   823 ;; Registers used:
   824 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   825 ;; Tracked objects:
   826 ;;		On entry : 0/0
   827 ;;		On exit  : 0/0
   828 ;;		Unchanged: 0/0
   829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   830 ;;      Params:         0       0       0       0       0       0       0       0       0
   831 ;;      Locals:         0       0       0       0       0       0       0       0       0
   832 ;;      Temps:          0       0       0       0       0       0       0       0       0
   833 ;;      Totals:         0       0       0       0       0       0       0       0       0
   834 ;;Total ram usage:        0 bytes
   835 ;; Hardware stack levels required when called:    7
   836 ;; This function calls:
   837 ;;		___fldiv
   838 ;;		_inizializzazione
   839 ;;		_read_adc
   840 ;;		_ricarica
   841 ;; This function is called by:
   842 ;;		Startup code after reset
   843 ;; This function uses a non-reentrant model
   844 ;;
   845                           
   846                           	psect	text0
   847  002D70                     __ptext0:
   848                           	opt stack 0
   849  002D70                     _main:
   850                           	opt stack 24
   851                           
   852                           ;tester.c: 46: rapporto = (15000 + 7500);
   853                           
   854                           ;incstack = 0
   855  002D70  0E00               	movlw	0
   856  002D72  0100               	movlb	0	; () banked
   857  002D74  6F8F               	movwf	_rapporto& (0+255),b
   858  002D76  0EC8               	movlw	200
   859  002D78  6F90               	movwf	(_rapporto+1)& (0+255),b
   860  002D7A  0EAF               	movlw	175
   861  002D7C  6F91               	movwf	(_rapporto+2)& (0+255),b
   862  002D7E  0E46               	movlw	70
   863  002D80  6F92               	movwf	(_rapporto+3)& (0+255),b
   864                           
   865                           ; BSR set to: 0
   866                           ;tester.c: 47: rapporto = 7500 / rapporto;
   867  002D82  0E00               	movlw	0
   868  002D84  6E01               	movwf	___fldiv@b,c
   869  002D86  0E60               	movlw	96
   870  002D88  6E02               	movwf	___fldiv@b+1,c
   871  002D8A  0EEA               	movlw	234
   872  002D8C  6E03               	movwf	___fldiv@b+2,c
   873  002D8E  0E45               	movlw	69
   874  002D90  6E04               	movwf	___fldiv@b+3,c
   875  002D92  C08F  F005         	movff	_rapporto,___fldiv@a
   876  002D96  C090  F006         	movff	_rapporto+1,___fldiv@a+1
   877  002D9A  C091  F007         	movff	_rapporto+2,___fldiv@a+2
   878  002D9E  C092  F008         	movff	_rapporto+3,___fldiv@a+3
   879  002DA2  ECC4  F00D         	call	___fldiv	;wreg free
   880  002DA6  C001  F08F         	movff	?___fldiv,_rapporto
   881  002DAA  C002  F090         	movff	?___fldiv+1,_rapporto+1
   882  002DAE  C003  F091         	movff	?___fldiv+2,_rapporto+2
   883  002DB2  C004  F092         	movff	?___fldiv+3,_rapporto+3
   884                           
   885                           ;tester.c: 48: inizializzazione();
   886  002DB6  ECE4  F016         	call	_inizializzazione	;wreg free
   887                           
   888                           ;tester.c: 49: read_adc();
   889  002DBA  EC5B  F010         	call	_read_adc	;wreg free
   890  002DBE                     l3706:
   891                           
   892                           ;tester.c: 51: ricarica();
   893  002DBE  ECDC  F011         	call	_ricarica	;wreg free
   894                           
   895                           ;tester.c: 52: read_adc();
   896  002DC2  EC5B  F010         	call	_read_adc	;wreg free
   897  002DC6  D7FB               	goto	l3706
   898  002DC8                     __end_of_main:
   899                           	opt stack 0
   900                           tblptru	equ	0xFF8
   901                           tblptrh	equ	0xFF7
   902                           tblptrl	equ	0xFF6
   903                           tablat	equ	0xFF5
   904                           postinc0	equ	0xFEE
   905                           wreg	equ	0xFE8
   906                           
   907 ;; *************** function _ricarica *****************
   908 ;; Defined at:
   909 ;;		line 56 in file "tester.c"
   910 ;; Parameters:    Size  Location     Type
   911 ;;		None
   912 ;; Auto vars:     Size  Location     Type
   913 ;;		None
   914 ;; Return value:  Size  Location     Type
   915 ;;                  1    wreg      void 
   916 ;; Registers used:
   917 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   918 ;; Tracked objects:
   919 ;;		On entry : 0/0
   920 ;;		On exit  : 0/0
   921 ;;		Unchanged: 0/0
   922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   923 ;;      Params:         0       0       0       0       0       0       0       0       0
   924 ;;      Locals:         0       0       0       0       0       0       0       0       0
   925 ;;      Temps:          0       0       0       0       0       0       0       0       0
   926 ;;      Totals:         0       0       0       0       0       0       0       0       0
   927 ;;Total ram usage:        0 bytes
   928 ;; Hardware stack levels used:    1
   929 ;; Hardware stack levels required when called:    6
   930 ;; This function calls:
   931 ;;		_LCD_goto_line
   932 ;;		_LCD_write_message
   933 ;;		_LCD_write_string
   934 ;;		___flge
   935 ;;		_delay_ms
   936 ;;		_read_adc
   937 ;;		_sprintf
   938 ;; This function is called by:
   939 ;;		_main
   940 ;; This function uses a non-reentrant model
   941 ;;
   942                           
   943                           	psect	text1
   944  0023B8                     __ptext1:
   945                           	opt stack 0
   946  0023B8                     _ricarica:
   947                           	opt stack 24
   948                           
   949                           ;tester.c: 57: read_adc();
   950                           
   951                           ;incstack = 0
   952  0023B8  EC5B  F010         	call	_read_adc	;wreg free
   953                           
   954                           ;tester.c: 58: while ((current < -1)&&(voltage < 14.5)) {
   955  0023BC  D042               	goto	l3622
   956  0023BE                     l160:
   957                           
   958                           ;tester.c: 59: PORTCbits.RC6 = 1;
   959  0023BE  8C82               	bsf	3970,6,c	;volatile
   960                           
   961                           ;tester.c: 60: LCD_write_message("Ciclo ricarica..");
   962  0023C0  0E91               	movlw	low STR_1
   963  0023C2  6E12               	movwf	LCD_write_message@buffer,c
   964  0023C4  0E08               	movlw	high STR_1
   965  0023C6  6E13               	movwf	LCD_write_message@buffer+1,c
   966  0023C8  EC9B  F017         	call	_LCD_write_message	;wreg free
   967                           
   968                           ;tester.c: 61: LCD_goto_line(2);
   969  0023CC  0E02               	movlw	2
   970  0023CE  EC36  F015         	call	_LCD_goto_line
   971                           
   972                           ;tester.c: 62: sprintf(str, "V:%.2f ", voltage);
   973  0023D2  0E87               	movlw	low _str
   974  0023D4  6E51               	movwf	sprintf@sp,c
   975  0023D6  0E00               	movlw	high _str
   976  0023D8  6E52               	movwf	sprintf@sp+1,c
   977  0023DA  0EC4               	movlw	low STR_2
   978  0023DC  6E53               	movwf	sprintf@f,c
   979  0023DE  0E08               	movlw	high STR_2
   980  0023E0  6E54               	movwf	sprintf@f+1,c
   981  0023E2  C083  F055         	movff	_voltage,?_sprintf+4
   982  0023E6  C084  F056         	movff	_voltage+1,?_sprintf+5
   983  0023EA  C085  F057         	movff	_voltage+2,?_sprintf+6
   984  0023EE  C086  F058         	movff	_voltage+3,?_sprintf+7
   985  0023F2  EC6A  F004         	call	_sprintf	;wreg free
   986                           
   987                           ;tester.c: 63: LCD_write_string(str);
   988  0023F6  0E87               	movlw	low _str
   989  0023F8  6E12               	movwf	LCD_write_string@buffer,c
   990  0023FA  0E00               	movlw	high _str
   991  0023FC  6E13               	movwf	LCD_write_string@buffer+1,c
   992  0023FE  ECEA  F017         	call	_LCD_write_string	;wreg free
   993                           
   994                           ;tester.c: 64: sprintf(str, "I:%.2f", current);
   995  002402  0E87               	movlw	low _str
   996  002404  6E51               	movwf	sprintf@sp,c
   997  002406  0E00               	movlw	high _str
   998  002408  6E52               	movwf	sprintf@sp+1,c
   999  00240A  0ECC               	movlw	low STR_3
  1000  00240C  6E53               	movwf	sprintf@f,c
  1001  00240E  0E08               	movlw	high STR_3
  1002  002410  6E54               	movwf	sprintf@f+1,c
  1003  002412  C07F  F055         	movff	_current,?_sprintf+4
  1004  002416  C080  F056         	movff	_current+1,?_sprintf+5
  1005  00241A  C081  F057         	movff	_current+2,?_sprintf+6
  1006  00241E  C082  F058         	movff	_current+3,?_sprintf+7
  1007  002422  EC6A  F004         	call	_sprintf	;wreg free
  1008                           
  1009                           ;tester.c: 66: LCD_write_string(str);
  1010  002426  0E87               	movlw	low _str
  1011  002428  6E12               	movwf	LCD_write_string@buffer,c
  1012  00242A  0E00               	movlw	high _str
  1013  00242C  6E13               	movwf	LCD_write_string@buffer+1,c
  1014  00242E  ECEA  F017         	call	_LCD_write_string	;wreg free
  1015                           
  1016                           ;tester.c: 67: read_adc();
  1017  002432  EC5B  F010         	call	_read_adc	;wreg free
  1018                           
  1019                           ;tester.c: 68: delay_ms(100);
  1020  002436  0E00               	movlw	0
  1021  002438  6E08               	movwf	delay_ms@value_ms+1,c
  1022  00243A  0E64               	movlw	100
  1023  00243C  6E07               	movwf	delay_ms@value_ms,c
  1024  00243E  EC53  F017         	call	_delay_ms	;wreg free
  1025  002442                     l3622:
  1026  002442  C07F  F001         	movff	_current,___flge@ff1
  1027  002446  C080  F002         	movff	_current+1,___flge@ff1+1
  1028  00244A  C081  F003         	movff	_current+2,___flge@ff1+2
  1029  00244E  C082  F004         	movff	_current+3,___flge@ff1+3
  1030  002452  0E00               	movlw	0
  1031  002454  6E05               	movwf	___flge@ff2,c
  1032  002456  0E00               	movlw	0
  1033  002458  6E06               	movwf	___flge@ff2+1,c
  1034  00245A  0E80               	movlw	128
  1035  00245C  6E07               	movwf	___flge@ff2+2,c
  1036  00245E  0EBF               	movlw	191
  1037  002460  6E08               	movwf	___flge@ff2+3,c
  1038  002462  ECAB  F013         	call	___flge	;wreg free
  1039  002466  B0D8               	btfsc	status,0,c
  1040  002468  D014               	goto	l3626
  1041  00246A  C083  F001         	movff	_voltage,___flge@ff1
  1042  00246E  C084  F002         	movff	_voltage+1,___flge@ff1+1
  1043  002472  C085  F003         	movff	_voltage+2,___flge@ff1+2
  1044  002476  C086  F004         	movff	_voltage+3,___flge@ff1+3
  1045  00247A  0E00               	movlw	0
  1046  00247C  6E05               	movwf	___flge@ff2,c
  1047  00247E  0E00               	movlw	0
  1048  002480  6E06               	movwf	___flge@ff2+1,c
  1049  002482  0E68               	movlw	104
  1050  002484  6E07               	movwf	___flge@ff2+2,c
  1051  002486  0E41               	movlw	65
  1052  002488  6E08               	movwf	___flge@ff2+3,c
  1053  00248A  ECAB  F013         	call	___flge	;wreg free
  1054  00248E  A0D8               	btfss	status,0,c
  1055  002490  D796               	goto	l160
  1056  002492                     l3626:
  1057                           
  1058                           ;tester.c: 69: }
  1059                           ;tester.c: 70: if ((current > -1)&&(voltage > 14.5)) {
  1060  002492  0E00               	movlw	0
  1061  002494  6E01               	movwf	___flge@ff1,c
  1062  002496  0E00               	movlw	0
  1063  002498  6E02               	movwf	___flge@ff1+1,c
  1064  00249A  0E80               	movlw	128
  1065  00249C  6E03               	movwf	___flge@ff1+2,c
  1066  00249E  0EBF               	movlw	191
  1067  0024A0  6E04               	movwf	___flge@ff1+3,c
  1068  0024A2  C07F  F005         	movff	_current,___flge@ff2
  1069  0024A6  C080  F006         	movff	_current+1,___flge@ff2+1
  1070  0024AA  C081  F007         	movff	_current+2,___flge@ff2+2
  1071  0024AE  C082  F008         	movff	_current+3,___flge@ff2+3
  1072  0024B2  ECAB  F013         	call	___flge	;wreg free
  1073  0024B6  B0D8               	btfsc	status,0,c
  1074  0024B8  0012               	return	
  1075  0024BA  0E00               	movlw	0
  1076  0024BC  6E01               	movwf	___flge@ff1,c
  1077  0024BE  0E00               	movlw	0
  1078  0024C0  6E02               	movwf	___flge@ff1+1,c
  1079  0024C2  0E68               	movlw	104
  1080  0024C4  6E03               	movwf	___flge@ff1+2,c
  1081  0024C6  0E41               	movlw	65
  1082  0024C8  6E04               	movwf	___flge@ff1+3,c
  1083  0024CA  C083  F005         	movff	_voltage,___flge@ff2
  1084  0024CE  C084  F006         	movff	_voltage+1,___flge@ff2+1
  1085  0024D2  C085  F007         	movff	_voltage+2,___flge@ff2+2
  1086  0024D6  C086  F008         	movff	_voltage+3,___flge@ff2+3
  1087  0024DA  ECAB  F013         	call	___flge	;wreg free
  1088  0024DE  B0D8               	btfsc	status,0,c
  1089  0024E0  0012               	return	
  1090                           
  1091                           ;tester.c: 71: LCD_write_message("Carica terminata");
  1092  0024E2  0EA2               	movlw	low STR_4
  1093  0024E4  6E12               	movwf	LCD_write_message@buffer,c
  1094  0024E6  0E08               	movlw	high STR_4
  1095  0024E8  6E13               	movwf	LCD_write_message@buffer+1,c
  1096  0024EA  EC9B  F017         	call	_LCD_write_message	;wreg free
  1097                           
  1098                           ;tester.c: 72: delay_ms(5000);
  1099  0024EE  0E13               	movlw	19
  1100  0024F0  6E08               	movwf	delay_ms@value_ms+1,c
  1101  0024F2  0E88               	movlw	136
  1102  0024F4  6E07               	movwf	delay_ms@value_ms,c
  1103  0024F6  EC53  F017         	call	_delay_ms	;wreg free
  1104  0024FA  0012               	return	
  1105  0024FC                     __end_of_ricarica:
  1106                           	opt stack 0
  1107                           tblptru	equ	0xFF8
  1108                           tblptrh	equ	0xFF7
  1109                           tblptrl	equ	0xFF6
  1110                           tablat	equ	0xFF5
  1111                           postinc0	equ	0xFEE
  1112                           wreg	equ	0xFE8
  1113                           status	equ	0xFD8
  1114                           
  1115 ;; *************** function _sprintf *****************
  1116 ;; Defined at:
  1117 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\doprnt.c"
  1118 ;; Parameters:    Size  Location     Type
  1119 ;;  sp              2   80[COMRAM] PTR unsigned char 
  1120 ;;		 -> str(8), 
  1121 ;;  f               2   82[COMRAM] PTR const unsigned char 
  1122 ;;		 -> STR_3(7), STR_2(8), 
  1123 ;; Auto vars:     Size  Location     Type
  1124 ;;  fval            4   20[BANK0 ] PTR const unsigned char 
  1125 ;;  tmpval          4   14[BANK0 ] struct .
  1126 ;;  val             4    8[BANK0 ] unsigned long 
  1127 ;;  cp              3    0        PTR const unsigned char 
  1128 ;;  prec            2   18[BANK0 ] int 
  1129 ;;  exp             2   12[BANK0 ] int 
  1130 ;;  flag            2    6[BANK0 ] unsigned short 
  1131 ;;  ap              2    4[BANK0 ] PTR void [1]
  1132 ;;		 -> ?_sprintf(2), 
  1133 ;;  len             2    0        unsigned int 
  1134 ;;  width           2    0        int 
  1135 ;;  c               1   24[BANK0 ] char 
  1136 ;;  d               1    0        unsigned char 
  1137 ;; Return value:  Size  Location     Type
  1138 ;;                  2   80[COMRAM] int 
  1139 ;; Registers used:
  1140 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1141 ;; Tracked objects:
  1142 ;;		On entry : 0/0
  1143 ;;		On exit  : 0/0
  1144 ;;		Unchanged: 0/0
  1145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1146 ;;      Params:         8       0       0       0       0       0       0       0       0
  1147 ;;      Locals:         0      25       0       0       0       0       0       0       0
  1148 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1149 ;;      Totals:        10      25       0       0       0       0       0       0       0
  1150 ;;Total ram usage:       35 bytes
  1151 ;; Hardware stack levels used:    1
  1152 ;; Hardware stack levels required when called:    2
  1153 ;; This function calls:
  1154 ;;		___awdiv
  1155 ;;		___fladd
  1156 ;;		___flge
  1157 ;;		___flmul
  1158 ;;		___flneg
  1159 ;;		___flsub
  1160 ;;		___fltol
  1161 ;;		___lldiv
  1162 ;;		___llmod
  1163 ;;		___wmul
  1164 ;;		___xxtofl
  1165 ;;		__div_to_l_
  1166 ;;		__tdiv_to_l_
  1167 ;;		_fround
  1168 ;;		_isdigit
  1169 ;;		_scale
  1170 ;; This function is called by:
  1171 ;;		_ricarica
  1172 ;; This function uses a non-reentrant model
  1173 ;;
  1174                           
  1175                           	psect	text2
  1176  0008D4                     __ptext2:
  1177                           	opt stack 0
  1178  0008D4                     _sprintf:
  1179                           	opt stack 27
  1180                           
  1181                           ;doprnt.c: 494: va_list ap;
  1182                           ;doprnt.c: 499: signed char c;
  1183                           ;doprnt.c: 501: int width;
  1184                           ;doprnt.c: 504: int prec;
  1185                           ;doprnt.c: 508: unsigned short flag;
  1186                           ;doprnt.c: 515: char d;
  1187                           ;doprnt.c: 516: double fval;
  1188                           ;doprnt.c: 517: int exp;
  1189                           ;doprnt.c: 523: union {
  1190                           ;doprnt.c: 524: unsigned long vd;
  1191                           ;doprnt.c: 525: double integ;
  1192                           ;doprnt.c: 526: } tmpval;
  1193                           ;doprnt.c: 528: unsigned long val;
  1194                           ;doprnt.c: 529: unsigned len;
  1195                           ;doprnt.c: 530: const char * cp;
  1196                           ;doprnt.c: 533: *ap = __va_start();
  1197                           
  1198                           ;incstack = 0
  1199  0008D4  0E55               	movlw	low (?_sprintf+4)
  1200  0008D6  0100               	movlb	0	; () banked
  1201  0008D8  6F64               	movwf	sprintf@ap& (0+255),b
  1202  0008DA  0E00               	movlw	high (?_sprintf+4)
  1203  0008DC  0100               	movlb	0	; () banked
  1204  0008DE  6F65               	movwf	(sprintf@ap+1)& (0+255),b
  1205                           
  1206                           ;doprnt.c: 536: while(c = *f++) {
  1207  0008E0  D3ED               	goto	l3570
  1208  0008E2                     l3372:
  1209                           
  1210                           ; BSR set to: 0
  1211                           ;doprnt.c: 538: if(c != '%')
  1212  0008E2  0E25               	movlw	37
  1213  0008E4  0100               	movlb	0	; () banked
  1214  0008E6  1978               	xorwf	sprintf@c& (0+255),w,b
  1215  0008E8  B4D8               	btfsc	status,2,c
  1216  0008EA  D007               	goto	l3378
  1217                           
  1218                           ; BSR set to: 0
  1219                           ;doprnt.c: 540: {
  1220                           ;doprnt.c: 541: ((*sp++ = (c)));
  1221  0008EC  C051  FFD9         	movff	sprintf@sp,fsr2l
  1222  0008F0  C052  FFDA         	movff	sprintf@sp+1,fsr2h
  1223  0008F4  C078  FFDF         	movff	sprintf@c,indf2
  1224  0008F8  D3DF               	goto	l3568
  1225  0008FA                     l3378:
  1226                           
  1227                           ; BSR set to: 0
  1228                           ;doprnt.c: 543: }
  1229                           ;doprnt.c: 548: flag = 0;
  1230  0008FA  0E00               	movlw	0
  1231  0008FC  0100               	movlb	0	; () banked
  1232  0008FE  6F67               	movwf	(sprintf@flag+1)& (0+255),b
  1233  000900  0E00               	movlw	0
  1234  000902  6F66               	movwf	sprintf@flag& (0+255),b
  1235                           
  1236                           ; BSR set to: 0
  1237                           ;doprnt.c: 611: if(*f == '.') {
  1238  000904  C053  FFF6         	movff	sprintf@f,tblptrl
  1239  000908  C054  FFF7         	movff	sprintf@f+1,tblptrh
  1240  00090C                     	if	0	;tblptru may be non-zero
  1241  00090C                     	endif
  1242  00090C                     	if	0	;tblptru may be non-zero
  1243  00090C                     	endif
  1244  00090C  0008               	tblrd		*
  1245  00090E  50F5               	movf	tablat,w,c
  1246  000910  0A2E               	xorlw	46
  1247  000912  A4D8               	btfss	status,2,c
  1248  000914  D032               	goto	l3392
  1249                           
  1250                           ; BSR set to: 0
  1251                           ;doprnt.c: 612: flag |= 0x4000;
  1252  000916  0100               	movlb	0	; () banked
  1253  000918  8D67               	bsf	(sprintf@flag+1)& (0+255),6,b
  1254                           
  1255                           ;doprnt.c: 613: f++;
  1256  00091A  4A53               	infsnz	sprintf@f,f,c
  1257  00091C  2A54               	incf	sprintf@f+1,f,c
  1258                           
  1259                           ; BSR set to: 0
  1260                           ;doprnt.c: 620: {
  1261                           ;doprnt.c: 621: prec = 0;
  1262  00091E  0E00               	movlw	0
  1263  000920  0100               	movlb	0	; () banked
  1264  000922  6F73               	movwf	(sprintf@prec+1)& (0+255),b
  1265  000924  0E00               	movlw	0
  1266  000926  6F72               	movwf	sprintf@prec& (0+255),b
  1267                           
  1268                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  1269  000928  D01D               	goto	l3390
  1270  00092A                     l3386:
  1271                           
  1272                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  1273  00092A  C072  F001         	movff	sprintf@prec,___wmul@multiplier
  1274  00092E  C073  F002         	movff	sprintf@prec+1,___wmul@multiplier+1
  1275  000932  0E00               	movlw	0
  1276  000934  6E04               	movwf	___wmul@multiplicand+1,c
  1277  000936  0E0A               	movlw	10
  1278  000938  6E03               	movwf	___wmul@multiplicand,c
  1279  00093A  ECD7  F017         	call	___wmul	;wreg free
  1280  00093E  C053  FFF6         	movff	sprintf@f,tblptrl
  1281  000942  C054  FFF7         	movff	sprintf@f+1,tblptrh
  1282  000946                     	if	0	;tblptru may be non-zero
  1283  000946                     	endif
  1284  000946                     	if	0	;tblptru may be non-zero
  1285  000946                     	endif
  1286  000946  0008               	tblrd		*
  1287  000948  50F5               	movf	tablat,w,c
  1288  00094A  2601               	addwf	?___wmul,f,c
  1289  00094C  0E00               	movlw	0
  1290  00094E  2202               	addwfc	?___wmul+1,f,c
  1291  000950  0ED0               	movlw	208
  1292  000952  2401               	addwf	?___wmul,w,c
  1293  000954  0100               	movlb	0	; () banked
  1294  000956  6F72               	movwf	sprintf@prec& (0+255),b
  1295  000958  0EFF               	movlw	255
  1296  00095A  2002               	addwfc	?___wmul+1,w,c
  1297  00095C  0100               	movlb	0	; () banked
  1298  00095E  6F73               	movwf	(sprintf@prec+1)& (0+255),b
  1299                           
  1300                           ; BSR set to: 0
  1301  000960  4A53               	infsnz	sprintf@f,f,c
  1302  000962  2A54               	incf	sprintf@f+1,f,c
  1303  000964                     l3390:
  1304                           
  1305                           ; BSR set to: 0
  1306  000964  C053  FFF6         	movff	sprintf@f,tblptrl
  1307  000968  C054  FFF7         	movff	sprintf@f+1,tblptrh
  1308  00096C                     	if	0	;tblptru may be non-zero
  1309  00096C                     	endif
  1310  00096C                     	if	0	;tblptru may be non-zero
  1311  00096C                     	endif
  1312  00096C  0008               	tblrd		*
  1313  00096E  50F5               	movf	tablat,w,c
  1314  000970  ECFC  F017         	call	_isdigit
  1315  000974  A0D8               	btfss	status,0,c
  1316  000976  D00C               	goto	l3400
  1317  000978  D7D8               	goto	l3386
  1318  00097A                     l3392:
  1319                           
  1320                           ;doprnt.c: 626: prec = 0;
  1321  00097A  0E00               	movlw	0
  1322  00097C  0100               	movlb	0	; () banked
  1323  00097E  6F73               	movwf	(sprintf@prec+1)& (0+255),b
  1324  000980  0E00               	movlw	0
  1325  000982  6F72               	movwf	sprintf@prec& (0+255),b
  1326                           
  1327                           ; BSR set to: 0
  1328                           ;doprnt.c: 628: flag |= 0x1000;
  1329  000984  0100               	movlb	0	; () banked
  1330  000986  8967               	bsf	(sprintf@flag+1)& (0+255),4,b
  1331                           
  1332                           ; BSR set to: 0
  1333                           ;doprnt.c: 630: }
  1334                           ;doprnt.c: 635: switch(c = *f++) {
  1335  000988  D003               	goto	l3400
  1336  00098A                     l3396:
  1337                           
  1338                           ; BSR set to: 0
  1339                           ;doprnt.c: 663: flag |= 0x400;
  1340  00098A  0100               	movlb	0	; () banked
  1341  00098C  8567               	bsf	(sprintf@flag+1)& (0+255),2,b
  1342                           
  1343                           ;doprnt.c: 664: break;
  1344  00098E  D012               	goto	l3402
  1345  000990                     l3400:
  1346  000990  C053  FFF6         	movff	sprintf@f,tblptrl
  1347  000994  C054  FFF7         	movff	sprintf@f+1,tblptrh
  1348  000998  4A53               	infsnz	sprintf@f,f,c
  1349  00099A  2A54               	incf	sprintf@f+1,f,c
  1350  00099C                     	if	0	;tblptru may be non-zero
  1351  00099C                     	endif
  1352  00099C                     	if	0	;tblptru may be non-zero
  1353  00099C                     	endif
  1354  00099C  0008               	tblrd		*
  1355  00099E  CFF5 F078          	movff	tablat,sprintf@c
  1356  0009A2  0100               	movlb	0	; () banked
  1357  0009A4  5178               	movf	sprintf@c& (0+255),w,b
  1358                           
  1359                           ; Switch size 1, requested type "space"
  1360                           ; Number of cases is 2, Range of values is 0 to 102
  1361                           ; switch strategies available:
  1362                           ; Name         Instructions Cycles
  1363                           ; simple_byte            7     4 (average)
  1364                           ;	Chosen strategy is simple_byte
  1365  0009A6  0A00               	xorlw	0	; case 0
  1366  0009A8  B4D8               	btfsc	status,2,c
  1367  0009AA  D395               	goto	l3572
  1368  0009AC  0A66               	xorlw	102	; case 102
  1369  0009AE  B4D8               	btfsc	status,2,c
  1370  0009B0  D7EC               	goto	l3396
  1371  0009B2  D384               	goto	l3570
  1372  0009B4                     l3402:
  1373                           
  1374                           ; BSR set to: 0
  1375                           ;doprnt.c: 825: if(flag & (0x700)) {
  1376  0009B4  0E07               	movlw	7
  1377  0009B6  0100               	movlb	0	; () banked
  1378  0009B8  1567               	andwf	(sprintf@flag+1)& (0+255),w,b
  1379  0009BA  B4D8               	btfsc	status,2,c
  1380  0009BC  D330               	goto	l3550
  1381                           
  1382                           ; BSR set to: 0
  1383                           ;doprnt.c: 827: if(flag & 0x1000)
  1384  0009BE  0100               	movlb	0	; () banked
  1385  0009C0  A967               	btfss	(sprintf@flag+1)& (0+255),4,b
  1386  0009C2  D005               	goto	l3408
  1387                           
  1388                           ; BSR set to: 0
  1389                           ;doprnt.c: 829: prec = 6;
  1390  0009C4  0E00               	movlw	0
  1391  0009C6  0100               	movlb	0	; () banked
  1392  0009C8  6F73               	movwf	(sprintf@prec+1)& (0+255),b
  1393  0009CA  0E06               	movlw	6
  1394  0009CC  6F72               	movwf	sprintf@prec& (0+255),b
  1395  0009CE                     l3408:
  1396                           
  1397                           ; BSR set to: 0
  1398                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  1399  0009CE  C064  FFD9         	movff	sprintf@ap,fsr2l
  1400  0009D2  C065  FFDA         	movff	sprintf@ap+1,fsr2h
  1401  0009D6  CFDE F074          	movff	postinc2,sprintf@fval
  1402  0009DA  CFDE F075          	movff	postinc2,sprintf@fval+1
  1403  0009DE  CFDE F076          	movff	postinc2,sprintf@fval+2
  1404  0009E2  CFDE F077          	movff	postinc2,sprintf@fval+3
  1405                           
  1406                           ; BSR set to: 0
  1407  0009E6  0E04               	movlw	4
  1408  0009E8  0100               	movlb	0	; () banked
  1409  0009EA  2764               	addwf	sprintf@ap& (0+255),f,b
  1410  0009EC  0E00               	movlw	0
  1411  0009EE  2365               	addwfc	(sprintf@ap+1)& (0+255),f,b
  1412                           
  1413                           ; BSR set to: 0
  1414                           ;doprnt.c: 831: if(fval < 0.0) {
  1415  0009F0  0100               	movlb	0	; () banked
  1416  0009F2  AF77               	btfss	(sprintf@fval+3)& (0+255),7,b
  1417  0009F4  D015               	goto	l3418
  1418                           
  1419                           ; BSR set to: 0
  1420                           ;doprnt.c: 832: fval = -fval;
  1421  0009F6  C074  F001         	movff	sprintf@fval,___flneg@f1
  1422  0009FA  C075  F002         	movff	sprintf@fval+1,___flneg@f1+1
  1423  0009FE  C076  F003         	movff	sprintf@fval+2,___flneg@f1+2
  1424  000A02  C077  F004         	movff	sprintf@fval+3,___flneg@f1+3
  1425  000A06  EC84  F017         	call	___flneg	;wreg free
  1426  000A0A  C001  F074         	movff	?___flneg,sprintf@fval
  1427  000A0E  C002  F075         	movff	?___flneg+1,sprintf@fval+1
  1428  000A12  C003  F076         	movff	?___flneg+2,sprintf@fval+2
  1429  000A16  C004  F077         	movff	?___flneg+3,sprintf@fval+3
  1430                           
  1431                           ;doprnt.c: 833: flag |= 0x03;
  1432  000A1A  0E03               	movlw	3
  1433  000A1C  0100               	movlb	0	; () banked
  1434  000A1E  1366               	iorwf	sprintf@flag& (0+255),f,b
  1435  000A20                     l3418:
  1436                           
  1437                           ; BSR set to: 0
  1438                           ;doprnt.c: 834: }
  1439                           ;doprnt.c: 835: exp = 0;
  1440  000A20  0E00               	movlw	0
  1441  000A22  0100               	movlb	0	; () banked
  1442  000A24  6F6D               	movwf	(sprintf@exp+1)& (0+255),b
  1443  000A26  0E00               	movlw	0
  1444  000A28  6F6C               	movwf	sprintf@exp& (0+255),b
  1445                           
  1446                           ; BSR set to: 0
  1447                           ;doprnt.c: 836: if( fval!=0) {
  1448  000A2A  0100               	movlb	0	; () banked
  1449  000A2C  5174               	movf	sprintf@fval& (0+255),w,b
  1450  000A2E  0100               	movlb	0	; () banked
  1451  000A30  1175               	iorwf	(sprintf@fval+1)& (0+255),w,b
  1452  000A32  0100               	movlb	0	; () banked
  1453  000A34  1176               	iorwf	(sprintf@fval+2)& (0+255),w,b
  1454  000A36  0100               	movlb	0	; () banked
  1455  000A38  1177               	iorwf	(sprintf@fval+3)& (0+255),w,b
  1456  000A3A  B4D8               	btfsc	status,2,c
  1457  000A3C  D088               	goto	l3446
  1458                           
  1459                           ; BSR set to: 0
  1460                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
  1461  000A3E  0100               	movlb	0	; () banked
  1462  000A40  3576               	rlcf	(sprintf@fval+2)& (0+255),w,b
  1463  000A42  3577               	rlcf	(sprintf@fval+3)& (0+255),w,b
  1464  000A44  0F82               	addlw	130
  1465  000A46  0100               	movlb	0	; () banked
  1466  000A48  6F6C               	movwf	sprintf@exp& (0+255),b
  1467  000A4A  0100               	movlb	0	; () banked
  1468  000A4C  6B6D               	clrf	(sprintf@exp+1)& (0+255),b
  1469  000A4E  0EFF               	movlw	255
  1470  000A50  236D               	addwfc	(sprintf@exp+1)& (0+255),f,b
  1471                           
  1472                           ; BSR set to: 0
  1473                           ;doprnt.c: 838: exp--;
  1474  000A52  0100               	movlb	0	; () banked
  1475  000A54  076C               	decf	sprintf@exp& (0+255),f,b
  1476  000A56  A0D8               	btfss	status,0,c
  1477  000A58  076D               	decf	(sprintf@exp+1)& (0+255),f,b
  1478                           
  1479                           ; BSR set to: 0
  1480                           ;doprnt.c: 839: exp *= 3;
  1481  000A5A  C06C  F001         	movff	sprintf@exp,___wmul@multiplier
  1482  000A5E  C06D  F002         	movff	sprintf@exp+1,___wmul@multiplier+1
  1483  000A62  0E00               	movlw	0
  1484  000A64  6E04               	movwf	___wmul@multiplicand+1,c
  1485  000A66  0E03               	movlw	3
  1486  000A68  6E03               	movwf	___wmul@multiplicand,c
  1487  000A6A  ECD7  F017         	call	___wmul	;wreg free
  1488  000A6E  C001  F06C         	movff	?___wmul,sprintf@exp
  1489  000A72  C002  F06D         	movff	?___wmul+1,sprintf@exp+1
  1490                           
  1491                           ;doprnt.c: 840: exp /= 10;
  1492  000A76  C06C  F007         	movff	sprintf@exp,___awdiv@dividend
  1493  000A7A  C06D  F008         	movff	sprintf@exp+1,___awdiv@dividend+1
  1494  000A7E  0E00               	movlw	0
  1495  000A80  6E0A               	movwf	___awdiv@divisor+1,c
  1496  000A82  0E0A               	movlw	10
  1497  000A84  6E09               	movwf	___awdiv@divisor,c
  1498  000A86  EC92  F015         	call	___awdiv	;wreg free
  1499  000A8A  C007  F06C         	movff	?___awdiv,sprintf@exp
  1500  000A8E  C008  F06D         	movff	?___awdiv+1,sprintf@exp+1
  1501                           
  1502                           ;doprnt.c: 841: if(exp < 0)
  1503  000A92  0100               	movlb	0	; () banked
  1504  000A94  AF6D               	btfss	(sprintf@exp+1)& (0+255),7,b
  1505  000A96  D004               	goto	l3434
  1506                           
  1507                           ; BSR set to: 0
  1508                           ;doprnt.c: 842: exp--;
  1509  000A98  0100               	movlb	0	; () banked
  1510  000A9A  076C               	decf	sprintf@exp& (0+255),f,b
  1511  000A9C  A0D8               	btfss	status,0,c
  1512  000A9E  076D               	decf	(sprintf@exp+1)& (0+255),f,b
  1513  000AA0                     l3434:
  1514                           
  1515                           ; BSR set to: 0
  1516                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  1517  000AA0  0100               	movlb	0	; () banked
  1518  000AA2  516C               	movf	sprintf@exp& (0+255),w,b
  1519  000AA4  0800               	sublw	0
  1520  000AA6  EC72  F008         	call	_scale
  1521  000AAA  C028  F06E         	movff	?_scale,sprintf@tmpval
  1522  000AAE  C029  F06F         	movff	?_scale+1,sprintf@tmpval+1
  1523  000AB2  C02A  F070         	movff	?_scale+2,sprintf@tmpval+2
  1524  000AB6  C02B  F071         	movff	?_scale+3,sprintf@tmpval+3
  1525                           
  1526                           ;doprnt.c: 847: tmpval.integ *= fval;
  1527  000ABA  C06E  F00F         	movff	sprintf@tmpval,___flmul@b
  1528  000ABE  C06F  F010         	movff	sprintf@tmpval+1,___flmul@b+1
  1529  000AC2  C070  F011         	movff	sprintf@tmpval+2,___flmul@b+2
  1530  000AC6  C071  F012         	movff	sprintf@tmpval+3,___flmul@b+3
  1531  000ACA  C074  F013         	movff	sprintf@fval,___flmul@a
  1532  000ACE  C075  F014         	movff	sprintf@fval+1,___flmul@a+1
  1533  000AD2  C076  F015         	movff	sprintf@fval+2,___flmul@a+2
  1534  000AD6  C077  F016         	movff	sprintf@fval+3,___flmul@a+3
  1535  000ADA  EC7E  F00A         	call	___flmul	;wreg free
  1536  000ADE  C00F  F06E         	movff	?___flmul,sprintf@tmpval
  1537  000AE2  C010  F06F         	movff	?___flmul+1,sprintf@tmpval+1
  1538  000AE6  C011  F070         	movff	?___flmul+2,sprintf@tmpval+2
  1539  000AEA  C012  F071         	movff	?___flmul+3,sprintf@tmpval+3
  1540                           
  1541                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  1542  000AEE  C06E  F001         	movff	sprintf@tmpval,___flge@ff1
  1543  000AF2  C06F  F002         	movff	sprintf@tmpval+1,___flge@ff1+1
  1544  000AF6  C070  F003         	movff	sprintf@tmpval+2,___flge@ff1+2
  1545  000AFA  C071  F004         	movff	sprintf@tmpval+3,___flge@ff1+3
  1546  000AFE  0E00               	movlw	0
  1547  000B00  6E05               	movwf	___flge@ff2,c
  1548  000B02  0E00               	movlw	0
  1549  000B04  6E06               	movwf	___flge@ff2+1,c
  1550  000B06  0E80               	movlw	128
  1551  000B08  6E07               	movwf	___flge@ff2+2,c
  1552  000B0A  0E3F               	movlw	63
  1553  000B0C  6E08               	movwf	___flge@ff2+3,c
  1554  000B0E  ECAB  F013         	call	___flge	;wreg free
  1555  000B12  B0D8               	btfsc	status,0,c
  1556  000B14  D005               	goto	l3442
  1557                           
  1558                           ;doprnt.c: 849: exp--;
  1559  000B16  0100               	movlb	0	; () banked
  1560  000B18  076C               	decf	sprintf@exp& (0+255),f,b
  1561  000B1A  A0D8               	btfss	status,0,c
  1562  000B1C  076D               	decf	(sprintf@exp+1)& (0+255),f,b
  1563  000B1E  D017               	goto	l3446
  1564  000B20                     l3442:
  1565                           
  1566                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  1567  000B20  C06E  F001         	movff	sprintf@tmpval,___flge@ff1
  1568  000B24  C06F  F002         	movff	sprintf@tmpval+1,___flge@ff1+1
  1569  000B28  C070  F003         	movff	sprintf@tmpval+2,___flge@ff1+2
  1570  000B2C  C071  F004         	movff	sprintf@tmpval+3,___flge@ff1+3
  1571  000B30  0E00               	movlw	0
  1572  000B32  6E05               	movwf	___flge@ff2,c
  1573  000B34  0E00               	movlw	0
  1574  000B36  6E06               	movwf	___flge@ff2+1,c
  1575  000B38  0E20               	movlw	32
  1576  000B3A  6E07               	movwf	___flge@ff2+2,c
  1577  000B3C  0E41               	movlw	65
  1578  000B3E  6E08               	movwf	___flge@ff2+3,c
  1579  000B40  ECAB  F013         	call	___flge	;wreg free
  1580  000B44  A0D8               	btfss	status,0,c
  1581  000B46  D003               	goto	l3446
  1582                           
  1583                           ;doprnt.c: 851: exp++;
  1584  000B48  0100               	movlb	0	; () banked
  1585  000B4A  4B6C               	infsnz	sprintf@exp& (0+255),f,b
  1586  000B4C  2B6D               	incf	(sprintf@exp+1)& (0+255),f,b
  1587  000B4E                     l3446:
  1588                           
  1589                           ;doprnt.c: 852: }
  1590                           ;doprnt.c: 1112: if(prec <= 12)
  1591  000B4E  0100               	movlb	0	; () banked
  1592  000B50  BF73               	btfsc	(sprintf@prec+1)& (0+255),7,b
  1593  000B52  D008               	goto	l3448
  1594  000B54  0100               	movlb	0	; () banked
  1595  000B56  5173               	movf	(sprintf@prec+1)& (0+255),w,b
  1596  000B58  E123               	bnz	l3450
  1597  000B5A  0E0D               	movlw	13
  1598  000B5C  0100               	movlb	0	; () banked
  1599  000B5E  5D72               	subwf	sprintf@prec& (0+255),w,b
  1600  000B60  B0D8               	btfsc	status,0,c
  1601  000B62  D01E               	goto	l3450
  1602  000B64                     l3448:
  1603                           
  1604                           ; BSR set to: 0
  1605                           ;doprnt.c: 1113: fval += fround(prec);
  1606  000B64  C074  F035         	movff	sprintf@fval,___fladd@b
  1607  000B68  C075  F036         	movff	sprintf@fval+1,___fladd@b+1
  1608  000B6C  C076  F037         	movff	sprintf@fval+2,___fladd@b+2
  1609  000B70  C077  F038         	movff	sprintf@fval+3,___fladd@b+3
  1610  000B74  0100               	movlb	0	; () banked
  1611  000B76  5172               	movf	sprintf@prec& (0+255),w,b
  1612  000B78  EC1E  F00F         	call	_fround
  1613  000B7C  C028  F039         	movff	?_fround,___fladd@a
  1614  000B80  C029  F03A         	movff	?_fround+1,___fladd@a+1
  1615  000B84  C02A  F03B         	movff	?_fround+2,___fladd@a+2
  1616  000B88  C02B  F03C         	movff	?_fround+3,___fladd@a+3
  1617  000B8C  EC26  F00C         	call	___fladd	;wreg free
  1618  000B90  C035  F074         	movff	?___fladd,sprintf@fval
  1619  000B94  C036  F075         	movff	?___fladd+1,sprintf@fval+1
  1620  000B98  C037  F076         	movff	?___fladd+2,sprintf@fval+2
  1621  000B9C  C038  F077         	movff	?___fladd+3,sprintf@fval+3
  1622  000BA0                     l3450:
  1623                           
  1624                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  1625  000BA0  0100               	movlb	0	; () banked
  1626  000BA2  BF6D               	btfsc	(sprintf@exp+1)& (0+255),7,b
  1627  000BA4  D008               	goto	l3452
  1628  000BA6  0100               	movlb	0	; () banked
  1629  000BA8  516D               	movf	(sprintf@exp+1)& (0+255),w,b
  1630  000BAA  E12A               	bnz	l3458
  1631  000BAC  0E0A               	movlw	10
  1632  000BAE  0100               	movlb	0	; () banked
  1633  000BB0  5D6C               	subwf	sprintf@exp& (0+255),w,b
  1634  000BB2  B0D8               	btfsc	status,0,c
  1635  000BB4  D025               	goto	l3458
  1636  000BB6                     l3452:
  1637                           
  1638                           ; BSR set to: 0
  1639  000BB6  0100               	movlb	0	; () banked
  1640  000BB8  5174               	movf	sprintf@fval& (0+255),w,b
  1641  000BBA  0100               	movlb	0	; () banked
  1642  000BBC  1175               	iorwf	(sprintf@fval+1)& (0+255),w,b
  1643  000BBE  0100               	movlb	0	; () banked
  1644  000BC0  1176               	iorwf	(sprintf@fval+2)& (0+255),w,b
  1645  000BC2  0100               	movlb	0	; () banked
  1646  000BC4  1177               	iorwf	(sprintf@fval+3)& (0+255),w,b
  1647  000BC6  B4D8               	btfsc	status,2,c
  1648  000BC8  D067               	goto	l3472
  1649                           
  1650                           ; BSR set to: 0
  1651  000BCA  C074  F031         	movff	sprintf@fval,___fltol@f1
  1652  000BCE  C075  F032         	movff	sprintf@fval+1,___fltol@f1+1
  1653  000BD2  C076  F033         	movff	sprintf@fval+2,___fltol@f1+2
  1654  000BD6  C077  F034         	movff	sprintf@fval+3,___fltol@f1+3
  1655  000BDA  ECC8  F014         	call	___fltol	;wreg free
  1656  000BDE  5031               	movf	?___fltol,w,c
  1657  000BE0  1032               	iorwf	?___fltol+1,w,c
  1658  000BE2  1033               	iorwf	?___fltol+2,w,c
  1659  000BE4  1034               	iorwf	?___fltol+3,w,c
  1660  000BE6  A4D8               	btfss	status,2,c
  1661  000BE8  D057               	goto	l3472
  1662  000BEA  0100               	movlb	0	; () banked
  1663  000BEC  BF6D               	btfsc	(sprintf@exp+1)& (0+255),7,b
  1664  000BEE  D054               	goto	l3472
  1665  000BF0  0100               	movlb	0	; () banked
  1666  000BF2  516D               	movf	(sprintf@exp+1)& (0+255),w,b
  1667  000BF4  E105               	bnz	l3458
  1668  000BF6  0E02               	movlw	2
  1669  000BF8  0100               	movlb	0	; () banked
  1670  000BFA  5D6C               	subwf	sprintf@exp& (0+255),w,b
  1671  000BFC  A0D8               	btfss	status,0,c
  1672  000BFE  D04C               	goto	l3472
  1673  000C00                     l3458:
  1674                           
  1675                           ; BSR set to: 0
  1676                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  1677  000C00  C06E  F001         	movff	sprintf@tmpval,___flge@ff1
  1678  000C04  C06F  F002         	movff	sprintf@tmpval+1,___flge@ff1+1
  1679  000C08  C070  F003         	movff	sprintf@tmpval+2,___flge@ff1+2
  1680  000C0C  C071  F004         	movff	sprintf@tmpval+3,___flge@ff1+3
  1681  000C10  0E5F               	movlw	95
  1682  000C12  6E05               	movwf	___flge@ff2,c
  1683  000C14  0E70               	movlw	112
  1684  000C16  6E06               	movwf	___flge@ff2+1,c
  1685  000C18  0E89               	movlw	137
  1686  000C1A  6E07               	movwf	___flge@ff2+2,c
  1687  000C1C  0E40               	movlw	64
  1688  000C1E  6E08               	movwf	___flge@ff2+3,c
  1689  000C20  ECAB  F013         	call	___flge	;wreg free
  1690  000C24  B0D8               	btfsc	status,0,c
  1691  000C26  D003               	goto	l3462
  1692                           
  1693                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  1694  000C28  0100               	movlb	0	; () banked
  1695  000C2A  0EF7               	movlw	247
  1696  000C2C  D002               	goto	L1
  1697  000C2E                     l3462:
  1698                           
  1699                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  1700  000C2E  0100               	movlb	0	; () banked
  1701  000C30  0EF8               	movlw	248
  1702  000C32                     L1:
  1703  000C32  276C               	addwf	sprintf@exp& (0+255),f,b
  1704  000C34  0EFF               	movlw	255
  1705  000C36  236D               	addwfc	(sprintf@exp+1)& (0+255),f,b
  1706                           
  1707                           ; BSR set to: 0
  1708                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  1709                           
  1710                           ; BSR set to: 0
  1711  000C38  0100               	movlb	0	; () banked
  1712  000C3A  516C               	movf	sprintf@exp& (0+255),w,b
  1713  000C3C  EC72  F008         	call	_scale
  1714  000C40  C028  F06E         	movff	?_scale,sprintf@tmpval
  1715  000C44  C029  F06F         	movff	?_scale+1,sprintf@tmpval+1
  1716  000C48  C02A  F070         	movff	?_scale+2,sprintf@tmpval+2
  1717  000C4C  C02B  F071         	movff	?_scale+3,sprintf@tmpval+3
  1718  000C50  C074  F001         	movff	sprintf@fval,__div_to_l_@f1
  1719  000C54  C075  F002         	movff	sprintf@fval+1,__div_to_l_@f1+1
  1720  000C58  C076  F003         	movff	sprintf@fval+2,__div_to_l_@f1+2
  1721  000C5C  C077  F004         	movff	sprintf@fval+3,__div_to_l_@f1+3
  1722  000C60  C06E  F005         	movff	sprintf@tmpval,__div_to_l_@f2
  1723  000C64  C06F  F006         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
  1724  000C68  C070  F007         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
  1725  000C6C  C071  F008         	movff	sprintf@tmpval+3,__div_to_l_@f2+3
  1726  000C70  EC17  F013         	call	__div_to_l_	;wreg free
  1727  000C74  C001  F068         	movff	?__div_to_l_,sprintf@val
  1728  000C78  C002  F069         	movff	?__div_to_l_+1,sprintf@val+1
  1729  000C7C  C003  F06A         	movff	?__div_to_l_+2,sprintf@val+2
  1730  000C80  C004  F06B         	movff	?__div_to_l_+3,sprintf@val+3
  1731                           
  1732                           ;doprnt.c: 1129: fval = 0.0;
  1733  000C84  0E00               	movlw	0
  1734  000C86  0100               	movlb	0	; () banked
  1735  000C88  6F74               	movwf	sprintf@fval& (0+255),b
  1736  000C8A  0E00               	movlw	0
  1737  000C8C  6F75               	movwf	(sprintf@fval+1)& (0+255),b
  1738  000C8E  0E00               	movlw	0
  1739  000C90  6F76               	movwf	(sprintf@fval+2)& (0+255),b
  1740  000C92  0E00               	movlw	0
  1741  000C94  6F77               	movwf	(sprintf@fval+3)& (0+255),b
  1742                           
  1743                           ;doprnt.c: 1130: } else {
  1744  000C96  D03C               	goto	l3476
  1745  000C98                     l3472:
  1746                           
  1747                           ;doprnt.c: 1131: val = (unsigned long)fval;
  1748  000C98  C074  F031         	movff	sprintf@fval,___fltol@f1
  1749  000C9C  C075  F032         	movff	sprintf@fval+1,___fltol@f1+1
  1750  000CA0  C076  F033         	movff	sprintf@fval+2,___fltol@f1+2
  1751  000CA4  C077  F034         	movff	sprintf@fval+3,___fltol@f1+3
  1752  000CA8  ECC8  F014         	call	___fltol	;wreg free
  1753  000CAC  C031  F068         	movff	?___fltol,sprintf@val
  1754  000CB0  C032  F069         	movff	?___fltol+1,sprintf@val+1
  1755  000CB4  C033  F06A         	movff	?___fltol+2,sprintf@val+2
  1756  000CB8  C034  F06B         	movff	?___fltol+3,sprintf@val+3
  1757                           
  1758                           ;doprnt.c: 1132: fval -= (double)val;
  1759  000CBC  C074  F049         	movff	sprintf@fval,___flsub@b
  1760  000CC0  C075  F04A         	movff	sprintf@fval+1,___flsub@b+1
  1761  000CC4  C076  F04B         	movff	sprintf@fval+2,___flsub@b+2
  1762  000CC8  C077  F04C         	movff	sprintf@fval+3,___flsub@b+3
  1763  000CCC  C068  F00F         	movff	sprintf@val,___xxtofl@val
  1764  000CD0  C069  F010         	movff	sprintf@val+1,___xxtofl@val+1
  1765  000CD4  C06A  F011         	movff	sprintf@val+2,___xxtofl@val+2
  1766  000CD8  C06B  F012         	movff	sprintf@val+3,___xxtofl@val+3
  1767  000CDC  0E00               	movlw	0
  1768  000CDE  EC34  F011         	call	___xxtofl
  1769  000CE2  C00F  F04D         	movff	?___xxtofl,___flsub@a
  1770  000CE6  C010  F04E         	movff	?___xxtofl+1,___flsub@a+1
  1771  000CEA  C011  F04F         	movff	?___xxtofl+2,___flsub@a+2
  1772  000CEE  C012  F050         	movff	?___xxtofl+3,___flsub@a+3
  1773  000CF2  EC30  F017         	call	___flsub	;wreg free
  1774  000CF6  C049  F074         	movff	?___flsub,sprintf@fval
  1775  000CFA  C04A  F075         	movff	?___flsub+1,sprintf@fval+1
  1776  000CFE  C04B  F076         	movff	?___flsub+2,sprintf@fval+2
  1777  000D02  C04C  F077         	movff	?___flsub+3,sprintf@fval+3
  1778                           
  1779                           ;doprnt.c: 1133: exp = 0;
  1780  000D06  0E00               	movlw	0
  1781  000D08  0100               	movlb	0	; () banked
  1782  000D0A  6F6D               	movwf	(sprintf@exp+1)& (0+255),b
  1783  000D0C  0E00               	movlw	0
  1784  000D0E  6F6C               	movwf	sprintf@exp& (0+255),b
  1785  000D10                     l3476:
  1786                           
  1787                           ; BSR set to: 0
  1788                           ;doprnt.c: 1134: }
  1789                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  1790  000D10  0E01               	movlw	1
  1791  000D12  0100               	movlb	0	; () banked
  1792  000D14  6F78               	movwf	sprintf@c& (0+255),b
  1793  000D16                     l3478:
  1794                           
  1795                           ; BSR set to: 0
  1796  000D16  0E0A               	movlw	10
  1797  000D18  0100               	movlb	0	; () banked
  1798  000D1A  1978               	xorwf	sprintf@c& (0+255),w,b
  1799  000D1C  B4D8               	btfsc	status,2,c
  1800  000D1E  D01E               	goto	l3490
  1801                           
  1802                           ; BSR set to: 0
  1803                           ;doprnt.c: 1137: if(val < dpowers[c])
  1804                           
  1805                           ; BSR set to: 0
  1806                           
  1807                           ; BSR set to: 0
  1808  000D20  0100               	movlb	0	; () banked
  1809  000D22  5178               	movf	sprintf@c& (0+255),w,b
  1810  000D24  0D04               	mullw	4
  1811  000D26  0E69               	movlw	low _dpowers
  1812  000D28  24F3               	addwf	prodl,w,c
  1813  000D2A  6EF6               	movwf	tblptrl,c
  1814  000D2C  0E08               	movlw	high _dpowers
  1815  000D2E  20F4               	addwfc	prodh,w,c
  1816  000D30  6EF7               	movwf	tblptrh,c
  1817  000D32                     	if	0	;There are less than 3 active tblptr bytes
  1818  000D32                     	endif
  1819  000D32  0009               	tblrd		*+
  1820  000D34  50F5               	movf	tablat,w,c
  1821  000D36  0100               	movlb	0	; () banked
  1822  000D38  5D68               	subwf	sprintf@val& (0+255),w,b
  1823  000D3A  0009               	tblrd		*+
  1824  000D3C  50F5               	movf	tablat,w,c
  1825  000D3E  0100               	movlb	0	; () banked
  1826  000D40  5969               	subwfb	(sprintf@val+1)& (0+255),w,b
  1827  000D42  0009               	tblrd		*+
  1828  000D44  50F5               	movf	tablat,w,c
  1829  000D46  0100               	movlb	0	; () banked
  1830  000D48  596A               	subwfb	(sprintf@val+2)& (0+255),w,b
  1831  000D4A  0009               	tblrd		*+
  1832  000D4C  50F5               	movf	tablat,w,c
  1833  000D4E  0100               	movlb	0	; () banked
  1834  000D50  596B               	subwfb	(sprintf@val+3)& (0+255),w,b
  1835  000D52  A0D8               	btfss	status,0,c
  1836  000D54  D003               	goto	l3490
  1837                           
  1838                           ; BSR set to: 0
  1839                           
  1840                           ; BSR set to: 0
  1841                           
  1842                           ; BSR set to: 0
  1843                           ;doprnt.c: 1138: break;
  1844  000D56  0100               	movlb	0	; () banked
  1845  000D58  2B78               	incf	sprintf@c& (0+255),f,b
  1846  000D5A  D7DD               	goto	l3478
  1847  000D5C                     l3490:
  1848                           
  1849                           ; BSR set to: 0
  1850                           ;doprnt.c: 1175: {
  1851                           ;doprnt.c: 1188: if(flag & 0x03)
  1852  000D5C  0E03               	movlw	3
  1853  000D5E  0100               	movlb	0	; () banked
  1854  000D60  1566               	andwf	sprintf@flag& (0+255),w,b
  1855  000D62  6E59               	movwf	??_sprintf& (0+255),c
  1856  000D64  0E00               	movlw	0
  1857  000D66  0100               	movlb	0	; () banked
  1858  000D68  1567               	andwf	(sprintf@flag+1)& (0+255),w,b
  1859  000D6A  6E5A               	movwf	(??_sprintf+1)& (0+255),c
  1860  000D6C  5059               	movf	??_sprintf,w,c
  1861  000D6E  105A               	iorwf	??_sprintf+1,w,c
  1862  000D70  B4D8               	btfsc	status,2,c
  1863  000D72  D053               	goto	l3504
  1864                           
  1865                           ; BSR set to: 0
  1866                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  1867  000D74  C051  FFD9         	movff	sprintf@sp,fsr2l
  1868  000D78  C052  FFDA         	movff	sprintf@sp+1,fsr2h
  1869  000D7C  0E2D               	movlw	45
  1870  000D7E  D04B               	goto	L2
  1871  000D80                     l3494:
  1872                           
  1873                           ; BSR set to: 0
  1874  000D80  4A51               	infsnz	sprintf@sp,f,c
  1875  000D82  2A52               	incf	sprintf@sp+1,f,c
  1876                           
  1877                           ; BSR set to: 0
  1878                           ;doprnt.c: 1195: }
  1879                           ;doprnt.c: 1196: while(c--) {
  1880  000D84  D04A               	goto	l3504
  1881  000D86                     l3496:
  1882                           
  1883                           ; BSR set to: 0
  1884                           ;doprnt.c: 1200: {
  1885                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  1886  000D86  C068  F001         	movff	sprintf@val,___lldiv@dividend
  1887  000D8A  C069  F002         	movff	sprintf@val+1,___lldiv@dividend+1
  1888  000D8E  C06A  F003         	movff	sprintf@val+2,___lldiv@dividend+2
  1889  000D92  C06B  F004         	movff	sprintf@val+3,___lldiv@dividend+3
  1890  000D96  0100               	movlb	0	; () banked
  1891  000D98  5178               	movf	sprintf@c& (0+255),w,b
  1892  000D9A  0D04               	mullw	4
  1893  000D9C  0E69               	movlw	low _dpowers
  1894  000D9E  24F3               	addwf	prodl,w,c
  1895  000DA0  6EF6               	movwf	tblptrl,c
  1896  000DA2  0E08               	movlw	high _dpowers
  1897  000DA4  20F4               	addwfc	prodh,w,c
  1898  000DA6  6EF7               	movwf	tblptrh,c
  1899  000DA8                     	if	0	;There are less than 3 active tblptr bytes
  1900  000DA8                     	endif
  1901  000DA8  0009               	tblrd		*+
  1902  000DAA  CFF5 F005          	movff	tablat,___lldiv@divisor
  1903  000DAE  0009               	tblrd		*+
  1904  000DB0  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  1905  000DB4  0009               	tblrd		*+
  1906  000DB6  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  1907  000DBA  000A               	tblrd		*-
  1908  000DBC  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  1909  000DC0  ECD4  F015         	call	___lldiv	;wreg free
  1910  000DC4  C001  F06E         	movff	?___lldiv,sprintf@tmpval
  1911  000DC8  C002  F06F         	movff	?___lldiv+1,sprintf@tmpval+1
  1912  000DCC  C003  F070         	movff	?___lldiv+2,sprintf@tmpval+2
  1913  000DD0  C004  F071         	movff	?___lldiv+3,sprintf@tmpval+3
  1914                           
  1915                           ;doprnt.c: 1202: tmpval.vd %= 10;
  1916  000DD4  C06E  F001         	movff	sprintf@tmpval,___llmod@dividend
  1917  000DD8  C06F  F002         	movff	sprintf@tmpval+1,___llmod@dividend+1
  1918  000DDC  C070  F003         	movff	sprintf@tmpval+2,___llmod@dividend+2
  1919  000DE0  C071  F004         	movff	sprintf@tmpval+3,___llmod@dividend+3
  1920  000DE4  0E0A               	movlw	10
  1921  000DE6  6E05               	movwf	___llmod@divisor,c
  1922  000DE8  0E00               	movlw	0
  1923  000DEA  6E06               	movwf	___llmod@divisor+1,c
  1924  000DEC  0E00               	movlw	0
  1925  000DEE  6E07               	movwf	___llmod@divisor+2,c
  1926  000DF0  0E00               	movlw	0
  1927  000DF2  6E08               	movwf	___llmod@divisor+3,c
  1928  000DF4  EC85  F016         	call	___llmod	;wreg free
  1929  000DF8  C001  F06E         	movff	?___llmod,sprintf@tmpval
  1930  000DFC  C002  F06F         	movff	?___llmod+1,sprintf@tmpval+1
  1931  000E00  C003  F070         	movff	?___llmod+2,sprintf@tmpval+2
  1932  000E04  C004  F071         	movff	?___llmod+3,sprintf@tmpval+3
  1933                           
  1934                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  1935  000E08  0100               	movlb	0	; () banked
  1936  000E0A  516E               	movf	sprintf@tmpval& (0+255),w,b
  1937  000E0C  0F30               	addlw	48
  1938  000E0E  C051  FFD9         	movff	sprintf@sp,fsr2l
  1939  000E12  C052  FFDA         	movff	sprintf@sp+1,fsr2h
  1940  000E16                     L2:
  1941  000E16  6EDF               	movwf	indf2,c
  1942  000E18  D7B3               	goto	l3494
  1943  000E1A                     l3504:
  1944                           
  1945                           ; BSR set to: 0
  1946  000E1A  0100               	movlb	0	; () banked
  1947  000E1C  0778               	decf	sprintf@c& (0+255),f,b
  1948  000E1E  0100               	movlb	0	; () banked
  1949  000E20  2978               	incf	sprintf@c& (0+255),w,b
  1950  000E22  B4D8               	btfsc	status,2,c
  1951  000E24  D00D               	goto	l3512
  1952  000E26  D7AF               	goto	l3496
  1953  000E28                     l3506:
  1954                           
  1955                           ; BSR set to: 0
  1956                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  1957  000E28  C051  FFD9         	movff	sprintf@sp,fsr2l
  1958  000E2C  C052  FFDA         	movff	sprintf@sp+1,fsr2h
  1959  000E30  0E30               	movlw	48
  1960  000E32  6EDF               	movwf	indf2,c
  1961                           
  1962                           ; BSR set to: 0
  1963  000E34  4A51               	infsnz	sprintf@sp,f,c
  1964  000E36  2A52               	incf	sprintf@sp+1,f,c
  1965                           
  1966                           ; BSR set to: 0
  1967                           ;doprnt.c: 1209: exp--;
  1968  000E38  0100               	movlb	0	; () banked
  1969  000E3A  076C               	decf	sprintf@exp& (0+255),f,b
  1970  000E3C  A0D8               	btfss	status,0,c
  1971  000E3E  076D               	decf	(sprintf@exp+1)& (0+255),f,b
  1972  000E40                     l3512:
  1973                           
  1974                           ; BSR set to: 0
  1975  000E40  0100               	movlb	0	; () banked
  1976  000E42  BF6D               	btfsc	(sprintf@exp+1)& (0+255),7,b
  1977  000E44  D007               	goto	l3514
  1978  000E46  0100               	movlb	0	; () banked
  1979  000E48  516D               	movf	(sprintf@exp+1)& (0+255),w,b
  1980  000E4A  E1EE               	bnz	l3506
  1981  000E4C  0100               	movlb	0	; () banked
  1982  000E4E  056C               	decf	sprintf@exp& (0+255),w,b
  1983  000E50  B0D8               	btfsc	status,0,c
  1984  000E52  D7EA               	goto	l3506
  1985  000E54                     l3514:
  1986                           
  1987                           ; BSR set to: 0
  1988                           ;doprnt.c: 1210: }
  1989                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  1990  000E54  0100               	movlb	0	; () banked
  1991  000E56  BF73               	btfsc	(sprintf@prec+1)& (0+255),7,b
  1992  000E58  D00C               	goto	l254
  1993  000E5A  0100               	movlb	0	; () banked
  1994  000E5C  5173               	movf	(sprintf@prec+1)& (0+255),w,b
  1995  000E5E  E105               	bnz	u3840
  1996  000E60  0E09               	movlw	9
  1997  000E62  0100               	movlb	0	; () banked
  1998  000E64  5D72               	subwf	sprintf@prec& (0+255),w,b
  1999  000E66  A0D8               	btfss	status,0,c
  2000  000E68  D004               	goto	l254
  2001  000E6A                     u3840:
  2002                           
  2003                           ; BSR set to: 0
  2004                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  2005  000E6A  0E08               	movlw	8
  2006  000E6C  0100               	movlb	0	; () banked
  2007  000E6E  6F78               	movwf	sprintf@c& (0+255),b
  2008  000E70  D002               	goto	l3518
  2009  000E72                     l254:
  2010                           
  2011                           ; BSR set to: 0
  2012                           ;doprnt.c: 1213: else
  2013                           ;doprnt.c: 1214: c = prec;
  2014  000E72  C072  F078         	movff	sprintf@prec,sprintf@c
  2015  000E76                     l3518:
  2016                           
  2017                           ; BSR set to: 0
  2018                           ;doprnt.c: 1215: prec -= c;
  2019  000E76  0100               	movlb	0	; () banked
  2020  000E78  5178               	movf	sprintf@c& (0+255),w,b
  2021  000E7A  0100               	movlb	0	; () banked
  2022  000E7C  5F72               	subwf	sprintf@prec& (0+255),f,b
  2023  000E7E  0E00               	movlw	0
  2024  000E80  0100               	movlb	0	; () banked
  2025  000E82  BF78               	btfsc	sprintf@c& (0+255),7,b
  2026  000E84  0EFF               	movlw	255
  2027  000E86  0100               	movlb	0	; () banked
  2028  000E88  5B73               	subwfb	(sprintf@prec+1)& (0+255),f,b
  2029                           
  2030                           ; BSR set to: 0
  2031                           ;doprnt.c: 1219: if(c)
  2032  000E8A  0100               	movlb	0	; () banked
  2033  000E8C  5178               	movf	sprintf@c& (0+255),w,b
  2034  000E8E  0100               	movlb	0	; () banked
  2035  000E90  B4D8               	btfsc	status,2,c
  2036  000E92  D008               	goto	l3526
  2037                           
  2038                           ; BSR set to: 0
  2039                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  2040  000E94  C051  FFD9         	movff	sprintf@sp,fsr2l
  2041  000E98  C052  FFDA         	movff	sprintf@sp+1,fsr2h
  2042  000E9C  0E2E               	movlw	46
  2043  000E9E  6EDF               	movwf	indf2,c
  2044                           
  2045                           ; BSR set to: 0
  2046  000EA0  4A51               	infsnz	sprintf@sp,f,c
  2047  000EA2  2A52               	incf	sprintf@sp+1,f,c
  2048  000EA4                     l3526:
  2049                           
  2050                           ; BSR set to: 0
  2051                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  2052  000EA4  0100               	movlb	0	; () banked
  2053  000EA6  5178               	movf	sprintf@c& (0+255),w,b
  2054  000EA8  EC72  F008         	call	_scale
  2055  000EAC  C028  F060         	movff	?_scale,_sprintf$1109
  2056  000EB0  C029  F061         	movff	?_scale+1,_sprintf$1109+1
  2057  000EB4  C02A  F062         	movff	?_scale+2,_sprintf$1109+2
  2058  000EB8  C02B  F063         	movff	?_scale+3,_sprintf$1109+3
  2059                           
  2060                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  2061  000EBC  C074  F013         	movff	sprintf@fval,___flmul@a
  2062  000EC0  C075  F014         	movff	sprintf@fval+1,___flmul@a+1
  2063  000EC4  C076  F015         	movff	sprintf@fval+2,___flmul@a+2
  2064  000EC8  C077  F016         	movff	sprintf@fval+3,___flmul@a+3
  2065  000ECC  C060  F00F         	movff	_sprintf$1109,___flmul@b
  2066  000ED0  C061  F010         	movff	_sprintf$1109+1,___flmul@b+1
  2067  000ED4  C062  F011         	movff	_sprintf$1109+2,___flmul@b+2
  2068  000ED8  C063  F012         	movff	_sprintf$1109+3,___flmul@b+3
  2069  000EDC  EC7E  F00A         	call	___flmul	;wreg free
  2070  000EE0  C00F  F031         	movff	?___flmul,___fltol@f1
  2071  000EE4  C010  F032         	movff	?___flmul+1,___fltol@f1+1
  2072  000EE8  C011  F033         	movff	?___flmul+2,___fltol@f1+2
  2073  000EEC  C012  F034         	movff	?___flmul+3,___fltol@f1+3
  2074  000EF0  ECC8  F014         	call	___fltol	;wreg free
  2075  000EF4  C031  F068         	movff	?___fltol,sprintf@val
  2076  000EF8  C032  F069         	movff	?___fltol+1,sprintf@val+1
  2077  000EFC  C033  F06A         	movff	?___fltol+2,sprintf@val+2
  2078  000F00  C034  F06B         	movff	?___fltol+3,sprintf@val+3
  2079                           
  2080                           ;doprnt.c: 1228: while(c--) {
  2081  000F04  D072               	goto	l3540
  2082  000F06                     l3530:
  2083                           
  2084                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  2085  000F06  C068  F001         	movff	sprintf@val,___lldiv@dividend
  2086  000F0A  C069  F002         	movff	sprintf@val+1,___lldiv@dividend+1
  2087  000F0E  C06A  F003         	movff	sprintf@val+2,___lldiv@dividend+2
  2088  000F12  C06B  F004         	movff	sprintf@val+3,___lldiv@dividend+3
  2089  000F16  0100               	movlb	0	; () banked
  2090  000F18  5178               	movf	sprintf@c& (0+255),w,b
  2091  000F1A  0D04               	mullw	4
  2092  000F1C  0E69               	movlw	low _dpowers
  2093  000F1E  24F3               	addwf	prodl,w,c
  2094  000F20  6EF6               	movwf	tblptrl,c
  2095  000F22  0E08               	movlw	high _dpowers
  2096  000F24  20F4               	addwfc	prodh,w,c
  2097  000F26  6EF7               	movwf	tblptrh,c
  2098  000F28                     	if	0	;There are less than 3 active tblptr bytes
  2099  000F28                     	endif
  2100  000F28  0009               	tblrd		*+
  2101  000F2A  CFF5 F005          	movff	tablat,___lldiv@divisor
  2102  000F2E  0009               	tblrd		*+
  2103  000F30  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  2104  000F34  0009               	tblrd		*+
  2105  000F36  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  2106  000F3A  000A               	tblrd		*-
  2107  000F3C  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  2108  000F40  ECD4  F015         	call	___lldiv	;wreg free
  2109  000F44  C001  F06E         	movff	?___lldiv,sprintf@tmpval
  2110  000F48  C002  F06F         	movff	?___lldiv+1,sprintf@tmpval+1
  2111  000F4C  C003  F070         	movff	?___lldiv+2,sprintf@tmpval+2
  2112  000F50  C004  F071         	movff	?___lldiv+3,sprintf@tmpval+3
  2113                           
  2114                           ;doprnt.c: 1230: tmpval.vd %= 10;
  2115  000F54  C06E  F001         	movff	sprintf@tmpval,___llmod@dividend
  2116  000F58  C06F  F002         	movff	sprintf@tmpval+1,___llmod@dividend+1
  2117  000F5C  C070  F003         	movff	sprintf@tmpval+2,___llmod@dividend+2
  2118  000F60  C071  F004         	movff	sprintf@tmpval+3,___llmod@dividend+3
  2119  000F64  0E0A               	movlw	10
  2120  000F66  6E05               	movwf	___llmod@divisor,c
  2121  000F68  0E00               	movlw	0
  2122  000F6A  6E06               	movwf	___llmod@divisor+1,c
  2123  000F6C  0E00               	movlw	0
  2124  000F6E  6E07               	movwf	___llmod@divisor+2,c
  2125  000F70  0E00               	movlw	0
  2126  000F72  6E08               	movwf	___llmod@divisor+3,c
  2127  000F74  EC85  F016         	call	___llmod	;wreg free
  2128  000F78  C001  F06E         	movff	?___llmod,sprintf@tmpval
  2129  000F7C  C002  F06F         	movff	?___llmod+1,sprintf@tmpval+1
  2130  000F80  C003  F070         	movff	?___llmod+2,sprintf@tmpval+2
  2131  000F84  C004  F071         	movff	?___llmod+3,sprintf@tmpval+3
  2132                           
  2133                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  2134  000F88  0100               	movlb	0	; () banked
  2135  000F8A  516E               	movf	sprintf@tmpval& (0+255),w,b
  2136  000F8C  0F30               	addlw	48
  2137  000F8E  C051  FFD9         	movff	sprintf@sp,fsr2l
  2138  000F92  C052  FFDA         	movff	sprintf@sp+1,fsr2h
  2139  000F96  6EDF               	movwf	indf2,c
  2140                           
  2141                           ; BSR set to: 0
  2142  000F98  4A51               	infsnz	sprintf@sp,f,c
  2143  000F9A  2A52               	incf	sprintf@sp+1,f,c
  2144                           
  2145                           ; BSR set to: 0
  2146                           ;doprnt.c: 1232: val %= dpowers[c];
  2147  000F9C  C068  F001         	movff	sprintf@val,___llmod@dividend
  2148  000FA0  C069  F002         	movff	sprintf@val+1,___llmod@dividend+1
  2149  000FA4  C06A  F003         	movff	sprintf@val+2,___llmod@dividend+2
  2150  000FA8  C06B  F004         	movff	sprintf@val+3,___llmod@dividend+3
  2151  000FAC  0100               	movlb	0	; () banked
  2152  000FAE  5178               	movf	sprintf@c& (0+255),w,b
  2153  000FB0  0D04               	mullw	4
  2154  000FB2  0E69               	movlw	low _dpowers
  2155  000FB4  24F3               	addwf	prodl,w,c
  2156  000FB6  6EF6               	movwf	tblptrl,c
  2157  000FB8  0E08               	movlw	high _dpowers
  2158  000FBA  20F4               	addwfc	prodh,w,c
  2159  000FBC  6EF7               	movwf	tblptrh,c
  2160  000FBE                     	if	0	;There are less than 3 active tblptr bytes
  2161  000FBE                     	endif
  2162  000FBE  0009               	tblrd		*+
  2163  000FC0  CFF5 F005          	movff	tablat,___llmod@divisor
  2164  000FC4  0009               	tblrd		*+
  2165  000FC6  CFF5 F006          	movff	tablat,___llmod@divisor+1
  2166  000FCA  0009               	tblrd		*+
  2167  000FCC  CFF5 F007          	movff	tablat,___llmod@divisor+2
  2168  000FD0  000A               	tblrd		*-
  2169  000FD2  CFF5 F008          	movff	tablat,___llmod@divisor+3
  2170  000FD6  EC85  F016         	call	___llmod	;wreg free
  2171  000FDA  C001  F068         	movff	?___llmod,sprintf@val
  2172  000FDE  C002  F069         	movff	?___llmod+1,sprintf@val+1
  2173  000FE2  C003  F06A         	movff	?___llmod+2,sprintf@val+2
  2174  000FE6  C004  F06B         	movff	?___llmod+3,sprintf@val+3
  2175  000FEA                     l3540:
  2176  000FEA  0100               	movlb	0	; () banked
  2177  000FEC  0778               	decf	sprintf@c& (0+255),f,b
  2178  000FEE  0100               	movlb	0	; () banked
  2179  000FF0  2978               	incf	sprintf@c& (0+255),w,b
  2180  000FF2  B4D8               	btfsc	status,2,c
  2181  000FF4  D00D               	goto	l3548
  2182  000FF6  D787               	goto	l3530
  2183  000FF8                     l3542:
  2184                           
  2185                           ; BSR set to: 0
  2186                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  2187  000FF8  C051  FFD9         	movff	sprintf@sp,fsr2l
  2188  000FFC  C052  FFDA         	movff	sprintf@sp+1,fsr2h
  2189  001000  0E30               	movlw	48
  2190  001002  6EDF               	movwf	indf2,c
  2191                           
  2192                           ; BSR set to: 0
  2193  001004  4A51               	infsnz	sprintf@sp,f,c
  2194  001006  2A52               	incf	sprintf@sp+1,f,c
  2195                           
  2196                           ; BSR set to: 0
  2197                           ;doprnt.c: 1237: prec--;
  2198  001008  0100               	movlb	0	; () banked
  2199  00100A  0772               	decf	sprintf@prec& (0+255),f,b
  2200  00100C  A0D8               	btfss	status,0,c
  2201  00100E  0773               	decf	(sprintf@prec+1)& (0+255),f,b
  2202  001010                     l3548:
  2203                           
  2204                           ; BSR set to: 0
  2205  001010  0100               	movlb	0	; () banked
  2206  001012  5172               	movf	sprintf@prec& (0+255),w,b
  2207  001014  0100               	movlb	0	; () banked
  2208  001016  1173               	iorwf	(sprintf@prec+1)& (0+255),w,b
  2209  001018  B4D8               	btfsc	status,2,c
  2210  00101A  D050               	goto	l3570
  2211  00101C  D7ED               	goto	l3542
  2212  00101E                     l3550:
  2213                           
  2214                           ; BSR set to: 0
  2215                           ;doprnt.c: 1246: }
  2216                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  2217  00101E  0100               	movlb	0	; () banked
  2218  001020  5172               	movf	sprintf@prec& (0+255),w,b
  2219  001022  0100               	movlb	0	; () banked
  2220  001024  1173               	iorwf	(sprintf@prec+1)& (0+255),w,b
  2221  001026  A4D8               	btfss	status,2,c
  2222  001028  D00D               	goto	l3556
  2223                           
  2224                           ; BSR set to: 0
  2225  00102A  0100               	movlb	0	; () banked
  2226  00102C  5168               	movf	sprintf@val& (0+255),w,b
  2227  00102E  0100               	movlb	0	; () banked
  2228  001030  1169               	iorwf	(sprintf@val+1)& (0+255),w,b
  2229  001032  0100               	movlb	0	; () banked
  2230  001034  116A               	iorwf	(sprintf@val+2)& (0+255),w,b
  2231  001036  0100               	movlb	0	; () banked
  2232  001038  116B               	iorwf	(sprintf@val+3)& (0+255),w,b
  2233  00103A  A4D8               	btfss	status,2,c
  2234  00103C  D003               	goto	l3556
  2235                           
  2236                           ; BSR set to: 0
  2237                           ;doprnt.c: 1291: prec++;
  2238  00103E  0100               	movlb	0	; () banked
  2239  001040  4B72               	infsnz	sprintf@prec& (0+255),f,b
  2240  001042  2B73               	incf	(sprintf@prec+1)& (0+255),f,b
  2241  001044                     l3556:
  2242                           
  2243                           ; BSR set to: 0
  2244                           ;doprnt.c: 1339: if(c < prec)
  2245  001044  0E80               	movlw	128
  2246  001046  0100               	movlb	0	; () banked
  2247  001048  BF78               	btfsc	sprintf@c& (0+255),7,b
  2248  00104A  0E7F               	movlw	127
  2249  00104C  6E59               	movwf	??_sprintf& (0+255),c
  2250  00104E  0100               	movlb	0	; () banked
  2251  001050  5172               	movf	sprintf@prec& (0+255),w,b
  2252  001052  0100               	movlb	0	; () banked
  2253  001054  5D78               	subwf	sprintf@c& (0+255),w,b
  2254  001056  0100               	movlb	0	; () banked
  2255  001058  5173               	movf	(sprintf@prec+1)& (0+255),w,b
  2256  00105A  0A80               	xorlw	128
  2257  00105C  5859               	subwfb	??_sprintf& (0+255),w,c
  2258  00105E  B0D8               	btfsc	status,0,c
  2259  001060  D003               	goto	l3560
  2260                           
  2261                           ; BSR set to: 0
  2262                           ;doprnt.c: 1340: c = prec;
  2263  001062  C072  F078         	movff	sprintf@prec,sprintf@c
  2264  001066  D016               	goto	l3564
  2265  001068                     l3560:
  2266                           
  2267                           ; BSR set to: 0
  2268                           ;doprnt.c: 1341: else if(prec < c)
  2269  001068  0100               	movlb	0	; () banked
  2270  00106A  5173               	movf	(sprintf@prec+1)& (0+255),w,b
  2271  00106C  0A80               	xorlw	128
  2272  00106E  6E59               	movwf	??_sprintf& (0+255),c
  2273  001070  0100               	movlb	0	; () banked
  2274  001072  5178               	movf	sprintf@c& (0+255),w,b
  2275  001074  0100               	movlb	0	; () banked
  2276  001076  5D72               	subwf	sprintf@prec& (0+255),w,b
  2277  001078  0E80               	movlw	128
  2278  00107A  0100               	movlb	0	; () banked
  2279  00107C  BF78               	btfsc	sprintf@c& (0+255),7,b
  2280  00107E  0E7F               	movlw	127
  2281  001080  5859               	subwfb	??_sprintf& (0+255),w,c
  2282  001082  B0D8               	btfsc	status,0,c
  2283  001084  D007               	goto	l3564
  2284                           
  2285                           ; BSR set to: 0
  2286                           ;doprnt.c: 1342: prec = c;
  2287  001086  0100               	movlb	0	; () banked
  2288  001088  5178               	movf	sprintf@c& (0+255),w,b
  2289  00108A  0100               	movlb	0	; () banked
  2290  00108C  6F72               	movwf	sprintf@prec& (0+255),b
  2291  00108E  6B73               	clrf	(sprintf@prec+1)& (0+255),b
  2292  001090  BF72               	btfsc	sprintf@prec& (0+255),7,b
  2293  001092  0773               	decf	(sprintf@prec+1)& (0+255),f,b
  2294  001094                     l3564:
  2295                           
  2296                           ; BSR set to: 0
  2297                           ;doprnt.c: 1422: {
  2298                           ;doprnt.c: 1438: if(flag & 0x03)
  2299  001094  0E03               	movlw	3
  2300  001096  0100               	movlb	0	; () banked
  2301  001098  1566               	andwf	sprintf@flag& (0+255),w,b
  2302  00109A  6E59               	movwf	??_sprintf& (0+255),c
  2303  00109C  0E00               	movlw	0
  2304  00109E  0100               	movlb	0	; () banked
  2305  0010A0  1567               	andwf	(sprintf@flag+1)& (0+255),w,b
  2306  0010A2  6E5A               	movwf	(??_sprintf+1)& (0+255),c
  2307  0010A4  5059               	movf	??_sprintf,w,c
  2308  0010A6  105A               	iorwf	??_sprintf+1,w,c
  2309  0010A8  B4D8               	btfsc	status,2,c
  2310  0010AA  D008               	goto	l3570
  2311                           
  2312                           ; BSR set to: 0
  2313                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  2314  0010AC  C051  FFD9         	movff	sprintf@sp,fsr2l
  2315  0010B0  C052  FFDA         	movff	sprintf@sp+1,fsr2h
  2316  0010B4  0E2D               	movlw	45
  2317  0010B6  6EDF               	movwf	indf2,c
  2318  0010B8                     l3568:
  2319                           
  2320                           ; BSR set to: 0
  2321  0010B8  4A51               	infsnz	sprintf@sp,f,c
  2322  0010BA  2A52               	incf	sprintf@sp+1,f,c
  2323  0010BC                     l3570:
  2324                           
  2325                           ; BSR set to: 0
  2326  0010BC  C053  FFF6         	movff	sprintf@f,tblptrl
  2327  0010C0  C054  FFF7         	movff	sprintf@f+1,tblptrh
  2328  0010C4  4A53               	infsnz	sprintf@f,f,c
  2329  0010C6  2A54               	incf	sprintf@f+1,f,c
  2330  0010C8                     	if	0	;tblptru may be non-zero
  2331  0010C8                     	endif
  2332  0010C8                     	if	0	;tblptru may be non-zero
  2333  0010C8                     	endif
  2334  0010C8  0008               	tblrd		*
  2335  0010CA  CFF5 F078          	movff	tablat,sprintf@c
  2336  0010CE  0100               	movlb	0	; () banked
  2337  0010D0  5178               	movf	sprintf@c& (0+255),w,b
  2338  0010D2  A4D8               	btfss	status,2,c
  2339  0010D4  D406               	goto	l3372
  2340  0010D6                     l3572:
  2341                           
  2342                           ; BSR set to: 0
  2343                           ;doprnt.c: 1538: *sp = 0;
  2344  0010D6  C051  FFD9         	movff	sprintf@sp,fsr2l
  2345  0010DA  C052  FFDA         	movff	sprintf@sp+1,fsr2h
  2346  0010DE  0E00               	movlw	0
  2347  0010E0  6EDF               	movwf	indf2,c
  2348  0010E2  0012               	return	
  2349  0010E4                     __end_of_sprintf:
  2350                           	opt stack 0
  2351                           tblptru	equ	0xFF8
  2352                           tblptrh	equ	0xFF7
  2353                           tblptrl	equ	0xFF6
  2354                           tablat	equ	0xFF5
  2355                           prodh	equ	0xFF4
  2356                           prodl	equ	0xFF3
  2357                           postinc0	equ	0xFEE
  2358                           wreg	equ	0xFE8
  2359                           indf2	equ	0xFDF
  2360                           postinc2	equ	0xFDE
  2361                           fsr2h	equ	0xFDA
  2362                           fsr2l	equ	0xFD9
  2363                           status	equ	0xFD8
  2364                           
  2365 ;; *************** function _scale *****************
  2366 ;; Defined at:
  2367 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\doprnt.c"
  2368 ;; Parameters:    Size  Location     Type
  2369 ;;  scl             1    wreg     char 
  2370 ;; Auto vars:     Size  Location     Type
  2371 ;;  scl             1   47[COMRAM] char 
  2372 ;; Return value:  Size  Location     Type
  2373 ;;                  4   39[COMRAM] char 
  2374 ;; Registers used:
  2375 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2376 ;; Tracked objects:
  2377 ;;		On entry : 0/0
  2378 ;;		On exit  : 0/0
  2379 ;;		Unchanged: 0/0
  2380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2381 ;;      Params:         4       0       0       0       0       0       0       0       0
  2382 ;;      Locals:         5       0       0       0       0       0       0       0       0
  2383 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2384 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2385 ;;Total ram usage:        9 bytes
  2386 ;; Hardware stack levels used:    1
  2387 ;; Hardware stack levels required when called:    1
  2388 ;; This function calls:
  2389 ;;		___awdiv
  2390 ;;		___awmod
  2391 ;;		___flmul
  2392 ;; This function is called by:
  2393 ;;		_sprintf
  2394 ;; This function uses a non-reentrant model
  2395 ;;
  2396                           
  2397                           	psect	text3
  2398  0010E4                     __ptext3:
  2399                           	opt stack 0
  2400  0010E4                     _scale:
  2401                           	opt stack 27
  2402                           
  2403                           ; BSR set to: 0
  2404                           ;incstack = 0
  2405                           ;scale@scl stored from wreg
  2406  0010E4  6E30               	movwf	scale@scl,c
  2407                           
  2408                           ;doprnt.c: 428: if(scl < 0) {
  2409  0010E6  AE30               	btfss	scale@scl,7,c
  2410  0010E8  D105               	goto	l2830
  2411                           
  2412                           ;doprnt.c: 429: scl = -scl;
  2413  0010EA  6C30               	negf	scale@scl,c
  2414                           
  2415                           ;doprnt.c: 430: if(scl>=110)
  2416  0010EC  5030               	movf	scale@scl,w,c
  2417  0010EE  0A80               	xorlw	128
  2418  0010F0  0F12               	addlw	-238
  2419  0010F2  A0D8               	btfss	status,0,c
  2420  0010F4  D098               	goto	l2820
  2421                           
  2422                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  2423  0010F6  0E00               	movlw	0
  2424  0010F8  6E0A               	movwf	___awdiv@divisor+1,c
  2425  0010FA  0E0A               	movlw	10
  2426  0010FC  6E09               	movwf	___awdiv@divisor,c
  2427  0010FE  0E00               	movlw	0
  2428  001100  6E04               	movwf	___awmod@divisor+1,c
  2429  001102  0E64               	movlw	100
  2430  001104  6E03               	movwf	___awmod@divisor,c
  2431  001106  5030               	movf	scale@scl,w,c
  2432  001108  6E01               	movwf	___awmod@dividend,c
  2433  00110A  6A02               	clrf	___awmod@dividend+1,c
  2434  00110C  BE01               	btfsc	___awmod@dividend,7,c
  2435  00110E  0602               	decf	___awmod@dividend+1,f,c
  2436  001110  EC15  F016         	call	___awmod	;wreg free
  2437  001114  C001  F007         	movff	?___awmod,___awdiv@dividend
  2438  001118  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  2439  00111C  EC92  F015         	call	___awdiv	;wreg free
  2440  001120  90D8               	bcf	status,0,c
  2441  001122  3607               	rlcf	?___awdiv,f,c
  2442  001124  3608               	rlcf	?___awdiv+1,f,c
  2443  001126  90D8               	bcf	status,0,c
  2444  001128  3607               	rlcf	?___awdiv,f,c
  2445  00112A  3608               	rlcf	?___awdiv+1,f,c
  2446  00112C  0E24               	movlw	36
  2447  00112E  2607               	addwf	?___awdiv,f,c
  2448  001130  0E00               	movlw	0
  2449  001132  2208               	addwfc	?___awdiv+1,f,c
  2450  001134  0E01               	movlw	low __npowers_
  2451  001136  2407               	addwf	?___awdiv,w,c
  2452  001138  6EF6               	movwf	tblptrl,c
  2453  00113A  0E08               	movlw	high __npowers_
  2454  00113C  2008               	addwfc	?___awdiv+1,w,c
  2455  00113E  6EF7               	movwf	tblptrh,c
  2456  001140                     	if	0	;There are less than 3 active tblptr bytes
  2457  001140                     	endif
  2458  001140  0009               	tblrd		*+
  2459  001142  CFF5 F013          	movff	tablat,___flmul@a
  2460  001146  0009               	tblrd		*+
  2461  001148  CFF5 F014          	movff	tablat,___flmul@a+1
  2462  00114C  0009               	tblrd		*+
  2463  00114E  CFF5 F015          	movff	tablat,___flmul@a+2
  2464  001152  000A               	tblrd		*-
  2465  001154  CFF5 F016          	movff	tablat,___flmul@a+3
  2466  001158  0E00               	movlw	0
  2467  00115A  6E0A               	movwf	___awdiv@divisor+1,c
  2468  00115C  0E64               	movlw	100
  2469  00115E  6E09               	movwf	___awdiv@divisor,c
  2470  001160  5030               	movf	scale@scl,w,c
  2471  001162  6E07               	movwf	___awdiv@dividend,c
  2472  001164  6A08               	clrf	___awdiv@dividend+1,c
  2473  001166  BE07               	btfsc	___awdiv@dividend,7,c
  2474  001168  0608               	decf	___awdiv@dividend+1,f,c
  2475  00116A  EC92  F015         	call	___awdiv	;wreg free
  2476  00116E  90D8               	bcf	status,0,c
  2477  001170  3607               	rlcf	?___awdiv,f,c
  2478  001172  3608               	rlcf	?___awdiv+1,f,c
  2479  001174  90D8               	bcf	status,0,c
  2480  001176  3607               	rlcf	?___awdiv,f,c
  2481  001178  3608               	rlcf	?___awdiv+1,f,c
  2482  00117A  0E48               	movlw	72
  2483  00117C  2607               	addwf	?___awdiv,f,c
  2484  00117E  0E00               	movlw	0
  2485  001180  2208               	addwfc	?___awdiv+1,f,c
  2486  001182  0E01               	movlw	low __npowers_
  2487  001184  2407               	addwf	?___awdiv,w,c
  2488  001186  6EF6               	movwf	tblptrl,c
  2489  001188  0E08               	movlw	high __npowers_
  2490  00118A  2008               	addwfc	?___awdiv+1,w,c
  2491  00118C  6EF7               	movwf	tblptrh,c
  2492  00118E                     	if	0	;There are less than 3 active tblptr bytes
  2493  00118E                     	endif
  2494  00118E  0009               	tblrd		*+
  2495  001190  CFF5 F00F          	movff	tablat,___flmul@b
  2496  001194  0009               	tblrd		*+
  2497  001196  CFF5 F010          	movff	tablat,___flmul@b+1
  2498  00119A  0009               	tblrd		*+
  2499  00119C  CFF5 F011          	movff	tablat,___flmul@b+2
  2500  0011A0  000A               	tblrd		*-
  2501  0011A2  CFF5 F012          	movff	tablat,___flmul@b+3
  2502  0011A6  EC7E  F00A         	call	___flmul	;wreg free
  2503  0011AA  C00F  F02C         	movff	?___flmul,_scale$1108
  2504  0011AE  C010  F02D         	movff	?___flmul+1,_scale$1108+1
  2505  0011B2  C011  F02E         	movff	?___flmul+2,_scale$1108+2
  2506  0011B6  C012  F02F         	movff	?___flmul+3,_scale$1108+3
  2507                           
  2508                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  2509  0011BA  C02C  F00F         	movff	_scale$1108,___flmul@b
  2510  0011BE  C02D  F010         	movff	_scale$1108+1,___flmul@b+1
  2511  0011C2  C02E  F011         	movff	_scale$1108+2,___flmul@b+2
  2512  0011C6  C02F  F012         	movff	_scale$1108+3,___flmul@b+3
  2513  0011CA  0E00               	movlw	0
  2514  0011CC  6E04               	movwf	___awmod@divisor+1,c
  2515  0011CE  0E0A               	movlw	10
  2516  0011D0  6E03               	movwf	___awmod@divisor,c
  2517  0011D2  5030               	movf	scale@scl,w,c
  2518  0011D4  6E01               	movwf	___awmod@dividend,c
  2519  0011D6  6A02               	clrf	___awmod@dividend+1,c
  2520  0011D8  BE01               	btfsc	___awmod@dividend,7,c
  2521  0011DA  0602               	decf	___awmod@dividend+1,f,c
  2522  0011DC  EC15  F016         	call	___awmod	;wreg free
  2523  0011E0  90D8               	bcf	status,0,c
  2524  0011E2  3601               	rlcf	?___awmod,f,c
  2525  0011E4  3602               	rlcf	?___awmod+1,f,c
  2526  0011E6  90D8               	bcf	status,0,c
  2527  0011E8  3601               	rlcf	?___awmod,f,c
  2528  0011EA  3602               	rlcf	?___awmod+1,f,c
  2529  0011EC  0E01               	movlw	low __npowers_
  2530  0011EE  2401               	addwf	?___awmod,w,c
  2531  0011F0  6EF6               	movwf	tblptrl,c
  2532  0011F2  0E08               	movlw	high __npowers_
  2533  0011F4  2002               	addwfc	?___awmod+1,w,c
  2534  0011F6  6EF7               	movwf	tblptrh,c
  2535  0011F8                     	if	0	;There are less than 3 active tblptr bytes
  2536  0011F8                     	endif
  2537  0011F8  0009               	tblrd		*+
  2538  0011FA  CFF5 F013          	movff	tablat,___flmul@a
  2539  0011FE  0009               	tblrd		*+
  2540  001200  CFF5 F014          	movff	tablat,___flmul@a+1
  2541  001204  0009               	tblrd		*+
  2542  001206  CFF5 F015          	movff	tablat,___flmul@a+2
  2543  00120A  000A               	tblrd		*-
  2544  00120C  CFF5 F016          	movff	tablat,___flmul@a+3
  2545  001210  EC7E  F00A         	call	___flmul	;wreg free
  2546  001214  C00F  F028         	movff	?___flmul,?_scale
  2547  001218  C010  F029         	movff	?___flmul+1,?_scale+1
  2548  00121C  C011  F02A         	movff	?___flmul+2,?_scale+2
  2549  001220  C012  F02B         	movff	?___flmul+3,?_scale+3
  2550  001224  0012               	return	
  2551  001226                     l2820:
  2552                           
  2553                           ;doprnt.c: 432: else if(scl > 10)
  2554  001226  5030               	movf	scale@scl,w,c
  2555  001228  0A80               	xorlw	128
  2556  00122A  0F75               	addlw	-139
  2557  00122C  A0D8               	btfss	status,0,c
  2558  00122E  D04D               	goto	l2826
  2559                           
  2560                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  2561  001230  0E00               	movlw	0
  2562  001232  6E0A               	movwf	___awdiv@divisor+1,c
  2563  001234  0E0A               	movlw	10
  2564  001236  6E09               	movwf	___awdiv@divisor,c
  2565  001238  5030               	movf	scale@scl,w,c
  2566  00123A  6E07               	movwf	___awdiv@dividend,c
  2567  00123C  6A08               	clrf	___awdiv@dividend+1,c
  2568  00123E  BE07               	btfsc	___awdiv@dividend,7,c
  2569  001240  0608               	decf	___awdiv@dividend+1,f,c
  2570  001242  EC92  F015         	call	___awdiv	;wreg free
  2571  001246  90D8               	bcf	status,0,c
  2572  001248  3607               	rlcf	?___awdiv,f,c
  2573  00124A  3608               	rlcf	?___awdiv+1,f,c
  2574  00124C  90D8               	bcf	status,0,c
  2575  00124E  3607               	rlcf	?___awdiv,f,c
  2576  001250  3608               	rlcf	?___awdiv+1,f,c
  2577  001252  0E24               	movlw	36
  2578  001254  2607               	addwf	?___awdiv,f,c
  2579  001256  0E00               	movlw	0
  2580  001258  2208               	addwfc	?___awdiv+1,f,c
  2581  00125A  0E01               	movlw	low __npowers_
  2582  00125C  2407               	addwf	?___awdiv,w,c
  2583  00125E  6EF6               	movwf	tblptrl,c
  2584  001260  0E08               	movlw	high __npowers_
  2585  001262  2008               	addwfc	?___awdiv+1,w,c
  2586  001264  6EF7               	movwf	tblptrh,c
  2587  001266                     	if	0	;There are less than 3 active tblptr bytes
  2588  001266                     	endif
  2589  001266  0009               	tblrd		*+
  2590  001268  CFF5 F00F          	movff	tablat,___flmul@b
  2591  00126C  0009               	tblrd		*+
  2592  00126E  CFF5 F010          	movff	tablat,___flmul@b+1
  2593  001272  0009               	tblrd		*+
  2594  001274  CFF5 F011          	movff	tablat,___flmul@b+2
  2595  001278  000A               	tblrd		*-
  2596  00127A  CFF5 F012          	movff	tablat,___flmul@b+3
  2597  00127E  0E00               	movlw	0
  2598  001280  6E04               	movwf	___awmod@divisor+1,c
  2599  001282  0E0A               	movlw	10
  2600  001284  6E03               	movwf	___awmod@divisor,c
  2601  001286  5030               	movf	scale@scl,w,c
  2602  001288  6E01               	movwf	___awmod@dividend,c
  2603  00128A  6A02               	clrf	___awmod@dividend+1,c
  2604  00128C  BE01               	btfsc	___awmod@dividend,7,c
  2605  00128E  0602               	decf	___awmod@dividend+1,f,c
  2606  001290  EC15  F016         	call	___awmod	;wreg free
  2607  001294  90D8               	bcf	status,0,c
  2608  001296  3601               	rlcf	?___awmod,f,c
  2609  001298  3602               	rlcf	?___awmod+1,f,c
  2610  00129A  90D8               	bcf	status,0,c
  2611  00129C  3601               	rlcf	?___awmod,f,c
  2612  00129E  3602               	rlcf	?___awmod+1,f,c
  2613  0012A0  0E01               	movlw	low __npowers_
  2614  0012A2  2401               	addwf	?___awmod,w,c
  2615  0012A4  6EF6               	movwf	tblptrl,c
  2616  0012A6  0E08               	movlw	high __npowers_
  2617  0012A8  2002               	addwfc	?___awmod+1,w,c
  2618  0012AA  6EF7               	movwf	tblptrh,c
  2619  0012AC                     	if	0	;There are less than 3 active tblptr bytes
  2620  0012AC                     	endif
  2621  0012AC  0009               	tblrd		*+
  2622  0012AE  CFF5 F013          	movff	tablat,___flmul@a
  2623  0012B2  0009               	tblrd		*+
  2624  0012B4  CFF5 F014          	movff	tablat,___flmul@a+1
  2625  0012B8  0009               	tblrd		*+
  2626  0012BA  CFF5 F015          	movff	tablat,___flmul@a+2
  2627  0012BE  000A               	tblrd		*-
  2628  0012C0  CFF5 F016          	movff	tablat,___flmul@a+3
  2629  0012C4  EC7E  F00A         	call	___flmul	;wreg free
  2630  0012C8  D7A5               	goto	L3
  2631  0012CA                     l2826:
  2632                           
  2633                           ;doprnt.c: 434: return _npowers_[scl];
  2634  0012CA  5030               	movf	scale@scl,w,c
  2635  0012CC  0D04               	mullw	4
  2636  0012CE  0E01               	movlw	low __npowers_
  2637  0012D0  24F3               	addwf	prodl,w,c
  2638  0012D2  6EF6               	movwf	tblptrl,c
  2639  0012D4  0E08               	movlw	high __npowers_
  2640  0012D6  20F4               	addwfc	prodh,w,c
  2641  0012D8  6EF7               	movwf	tblptrh,c
  2642  0012DA                     	if	0	;There are less than 3 active tblptr bytes
  2643  0012DA                     	endif
  2644  0012DA  0009               	tblrd		*+
  2645  0012DC  CFF5 F028          	movff	tablat,?_scale
  2646  0012E0  0009               	tblrd		*+
  2647  0012E2  CFF5 F029          	movff	tablat,?_scale+1
  2648  0012E6  0009               	tblrd		*+
  2649  0012E8  CFF5 F02A          	movff	tablat,?_scale+2
  2650  0012EC  000A               	tblrd		*-
  2651  0012EE  CFF5 F02B          	movff	tablat,?_scale+3
  2652  0012F2  0012               	return	
  2653  0012F4                     l2830:
  2654                           
  2655                           ;doprnt.c: 435: }
  2656                           ;doprnt.c: 436: if(scl>=110)
  2657  0012F4  5030               	movf	scale@scl,w,c
  2658  0012F6  0A80               	xorlw	128
  2659  0012F8  0F12               	addlw	-238
  2660  0012FA  A0D8               	btfss	status,0,c
  2661  0012FC  D098               	goto	l2838
  2662                           
  2663                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  2664  0012FE  0E00               	movlw	0
  2665  001300  6E0A               	movwf	___awdiv@divisor+1,c
  2666  001302  0E0A               	movlw	10
  2667  001304  6E09               	movwf	___awdiv@divisor,c
  2668  001306  0E00               	movlw	0
  2669  001308  6E04               	movwf	___awmod@divisor+1,c
  2670  00130A  0E64               	movlw	100
  2671  00130C  6E03               	movwf	___awmod@divisor,c
  2672  00130E  5030               	movf	scale@scl,w,c
  2673  001310  6E01               	movwf	___awmod@dividend,c
  2674  001312  6A02               	clrf	___awmod@dividend+1,c
  2675  001314  BE01               	btfsc	___awmod@dividend,7,c
  2676  001316  0602               	decf	___awmod@dividend+1,f,c
  2677  001318  EC15  F016         	call	___awmod	;wreg free
  2678  00131C  C001  F007         	movff	?___awmod,___awdiv@dividend
  2679  001320  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  2680  001324  EC92  F015         	call	___awdiv	;wreg free
  2681  001328  90D8               	bcf	status,0,c
  2682  00132A  3607               	rlcf	?___awdiv,f,c
  2683  00132C  3608               	rlcf	?___awdiv+1,f,c
  2684  00132E  90D8               	bcf	status,0,c
  2685  001330  3607               	rlcf	?___awdiv,f,c
  2686  001332  3608               	rlcf	?___awdiv+1,f,c
  2687  001334  0E24               	movlw	36
  2688  001336  2607               	addwf	?___awdiv,f,c
  2689  001338  0E00               	movlw	0
  2690  00133A  2208               	addwfc	?___awdiv+1,f,c
  2691  00133C  0E35               	movlw	low __powers_
  2692  00133E  2407               	addwf	?___awdiv,w,c
  2693  001340  6EF6               	movwf	tblptrl,c
  2694  001342  0E08               	movlw	high __powers_
  2695  001344  2008               	addwfc	?___awdiv+1,w,c
  2696  001346  6EF7               	movwf	tblptrh,c
  2697  001348                     	if	0	;There are less than 3 active tblptr bytes
  2698  001348                     	endif
  2699  001348  0009               	tblrd		*+
  2700  00134A  CFF5 F013          	movff	tablat,___flmul@a
  2701  00134E  0009               	tblrd		*+
  2702  001350  CFF5 F014          	movff	tablat,___flmul@a+1
  2703  001354  0009               	tblrd		*+
  2704  001356  CFF5 F015          	movff	tablat,___flmul@a+2
  2705  00135A  000A               	tblrd		*-
  2706  00135C  CFF5 F016          	movff	tablat,___flmul@a+3
  2707  001360  0E00               	movlw	0
  2708  001362  6E0A               	movwf	___awdiv@divisor+1,c
  2709  001364  0E64               	movlw	100
  2710  001366  6E09               	movwf	___awdiv@divisor,c
  2711  001368  5030               	movf	scale@scl,w,c
  2712  00136A  6E07               	movwf	___awdiv@dividend,c
  2713  00136C  6A08               	clrf	___awdiv@dividend+1,c
  2714  00136E  BE07               	btfsc	___awdiv@dividend,7,c
  2715  001370  0608               	decf	___awdiv@dividend+1,f,c
  2716  001372  EC92  F015         	call	___awdiv	;wreg free
  2717  001376  90D8               	bcf	status,0,c
  2718  001378  3607               	rlcf	?___awdiv,f,c
  2719  00137A  3608               	rlcf	?___awdiv+1,f,c
  2720  00137C  90D8               	bcf	status,0,c
  2721  00137E  3607               	rlcf	?___awdiv,f,c
  2722  001380  3608               	rlcf	?___awdiv+1,f,c
  2723  001382  0E48               	movlw	72
  2724  001384  2607               	addwf	?___awdiv,f,c
  2725  001386  0E00               	movlw	0
  2726  001388  2208               	addwfc	?___awdiv+1,f,c
  2727  00138A  0E35               	movlw	low __powers_
  2728  00138C  2407               	addwf	?___awdiv,w,c
  2729  00138E  6EF6               	movwf	tblptrl,c
  2730  001390  0E08               	movlw	high __powers_
  2731  001392  2008               	addwfc	?___awdiv+1,w,c
  2732  001394  6EF7               	movwf	tblptrh,c
  2733  001396                     	if	0	;There are less than 3 active tblptr bytes
  2734  001396                     	endif
  2735  001396  0009               	tblrd		*+
  2736  001398  CFF5 F00F          	movff	tablat,___flmul@b
  2737  00139C  0009               	tblrd		*+
  2738  00139E  CFF5 F010          	movff	tablat,___flmul@b+1
  2739  0013A2  0009               	tblrd		*+
  2740  0013A4  CFF5 F011          	movff	tablat,___flmul@b+2
  2741  0013A8  000A               	tblrd		*-
  2742  0013AA  CFF5 F012          	movff	tablat,___flmul@b+3
  2743  0013AE  EC7E  F00A         	call	___flmul	;wreg free
  2744  0013B2  C00F  F02C         	movff	?___flmul,_scale$1108
  2745  0013B6  C010  F02D         	movff	?___flmul+1,_scale$1108+1
  2746  0013BA  C011  F02E         	movff	?___flmul+2,_scale$1108+2
  2747  0013BE  C012  F02F         	movff	?___flmul+3,_scale$1108+3
  2748                           
  2749                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  2750  0013C2  C02C  F00F         	movff	_scale$1108,___flmul@b
  2751  0013C6  C02D  F010         	movff	_scale$1108+1,___flmul@b+1
  2752  0013CA  C02E  F011         	movff	_scale$1108+2,___flmul@b+2
  2753  0013CE  C02F  F012         	movff	_scale$1108+3,___flmul@b+3
  2754  0013D2  0E00               	movlw	0
  2755  0013D4  6E04               	movwf	___awmod@divisor+1,c
  2756  0013D6  0E0A               	movlw	10
  2757  0013D8  6E03               	movwf	___awmod@divisor,c
  2758  0013DA  5030               	movf	scale@scl,w,c
  2759  0013DC  6E01               	movwf	___awmod@dividend,c
  2760  0013DE  6A02               	clrf	___awmod@dividend+1,c
  2761  0013E0  BE01               	btfsc	___awmod@dividend,7,c
  2762  0013E2  0602               	decf	___awmod@dividend+1,f,c
  2763  0013E4  EC15  F016         	call	___awmod	;wreg free
  2764  0013E8  90D8               	bcf	status,0,c
  2765  0013EA  3601               	rlcf	?___awmod,f,c
  2766  0013EC  3602               	rlcf	?___awmod+1,f,c
  2767  0013EE  90D8               	bcf	status,0,c
  2768  0013F0  3601               	rlcf	?___awmod,f,c
  2769  0013F2  3602               	rlcf	?___awmod+1,f,c
  2770  0013F4  0E35               	movlw	low __powers_
  2771  0013F6  2401               	addwf	?___awmod,w,c
  2772  0013F8  6EF6               	movwf	tblptrl,c
  2773  0013FA  0E08               	movlw	high __powers_
  2774  0013FC  2002               	addwfc	?___awmod+1,w,c
  2775  0013FE  6EF7               	movwf	tblptrh,c
  2776  001400                     	if	0	;There are less than 3 active tblptr bytes
  2777  001400                     	endif
  2778  001400  0009               	tblrd		*+
  2779  001402  CFF5 F013          	movff	tablat,___flmul@a
  2780  001406  0009               	tblrd		*+
  2781  001408  CFF5 F014          	movff	tablat,___flmul@a+1
  2782  00140C  0009               	tblrd		*+
  2783  00140E  CFF5 F015          	movff	tablat,___flmul@a+2
  2784  001412  000A               	tblrd		*-
  2785  001414  CFF5 F016          	movff	tablat,___flmul@a+3
  2786  001418  EC7E  F00A         	call	___flmul	;wreg free
  2787  00141C  C00F  F028         	movff	?___flmul,?_scale
  2788  001420  C010  F029         	movff	?___flmul+1,?_scale+1
  2789  001424  C011  F02A         	movff	?___flmul+2,?_scale+2
  2790  001428  C012  F02B         	movff	?___flmul+3,?_scale+3
  2791  00142C  0012               	return	
  2792  00142E                     l2838:
  2793                           
  2794                           ;doprnt.c: 438: else if(scl > 10)
  2795  00142E  5030               	movf	scale@scl,w,c
  2796  001430  0A80               	xorlw	128
  2797  001432  0F75               	addlw	-139
  2798  001434  A0D8               	btfss	status,0,c
  2799  001436  D04D               	goto	l2844
  2800                           
  2801                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  2802  001438  0E00               	movlw	0
  2803  00143A  6E0A               	movwf	___awdiv@divisor+1,c
  2804  00143C  0E0A               	movlw	10
  2805  00143E  6E09               	movwf	___awdiv@divisor,c
  2806  001440  5030               	movf	scale@scl,w,c
  2807  001442  6E07               	movwf	___awdiv@dividend,c
  2808  001444  6A08               	clrf	___awdiv@dividend+1,c
  2809  001446  BE07               	btfsc	___awdiv@dividend,7,c
  2810  001448  0608               	decf	___awdiv@dividend+1,f,c
  2811  00144A  EC92  F015         	call	___awdiv	;wreg free
  2812  00144E  90D8               	bcf	status,0,c
  2813  001450  3607               	rlcf	?___awdiv,f,c
  2814  001452  3608               	rlcf	?___awdiv+1,f,c
  2815  001454  90D8               	bcf	status,0,c
  2816  001456  3607               	rlcf	?___awdiv,f,c
  2817  001458  3608               	rlcf	?___awdiv+1,f,c
  2818  00145A  0E24               	movlw	36
  2819  00145C  2607               	addwf	?___awdiv,f,c
  2820  00145E  0E00               	movlw	0
  2821  001460  2208               	addwfc	?___awdiv+1,f,c
  2822  001462  0E35               	movlw	low __powers_
  2823  001464  2407               	addwf	?___awdiv,w,c
  2824  001466  6EF6               	movwf	tblptrl,c
  2825  001468  0E08               	movlw	high __powers_
  2826  00146A  2008               	addwfc	?___awdiv+1,w,c
  2827  00146C  6EF7               	movwf	tblptrh,c
  2828  00146E                     	if	0	;There are less than 3 active tblptr bytes
  2829  00146E                     	endif
  2830  00146E  0009               	tblrd		*+
  2831  001470  CFF5 F00F          	movff	tablat,___flmul@b
  2832  001474  0009               	tblrd		*+
  2833  001476  CFF5 F010          	movff	tablat,___flmul@b+1
  2834  00147A  0009               	tblrd		*+
  2835  00147C  CFF5 F011          	movff	tablat,___flmul@b+2
  2836  001480  000A               	tblrd		*-
  2837  001482  CFF5 F012          	movff	tablat,___flmul@b+3
  2838  001486  0E00               	movlw	0
  2839  001488  6E04               	movwf	___awmod@divisor+1,c
  2840  00148A  0E0A               	movlw	10
  2841  00148C  6E03               	movwf	___awmod@divisor,c
  2842  00148E  5030               	movf	scale@scl,w,c
  2843  001490  6E01               	movwf	___awmod@dividend,c
  2844  001492  6A02               	clrf	___awmod@dividend+1,c
  2845  001494  BE01               	btfsc	___awmod@dividend,7,c
  2846  001496  0602               	decf	___awmod@dividend+1,f,c
  2847  001498  EC15  F016         	call	___awmod	;wreg free
  2848  00149C  90D8               	bcf	status,0,c
  2849  00149E  3601               	rlcf	?___awmod,f,c
  2850  0014A0  3602               	rlcf	?___awmod+1,f,c
  2851  0014A2  90D8               	bcf	status,0,c
  2852  0014A4  3601               	rlcf	?___awmod,f,c
  2853  0014A6  3602               	rlcf	?___awmod+1,f,c
  2854  0014A8  0E35               	movlw	low __powers_
  2855  0014AA  2401               	addwf	?___awmod,w,c
  2856  0014AC  6EF6               	movwf	tblptrl,c
  2857  0014AE  0E08               	movlw	high __powers_
  2858  0014B0  2002               	addwfc	?___awmod+1,w,c
  2859  0014B2  6EF7               	movwf	tblptrh,c
  2860  0014B4                     	if	0	;There are less than 3 active tblptr bytes
  2861  0014B4                     	endif
  2862  0014B4  0009               	tblrd		*+
  2863  0014B6  CFF5 F013          	movff	tablat,___flmul@a
  2864  0014BA  0009               	tblrd		*+
  2865  0014BC  CFF5 F014          	movff	tablat,___flmul@a+1
  2866  0014C0  0009               	tblrd		*+
  2867  0014C2  CFF5 F015          	movff	tablat,___flmul@a+2
  2868  0014C6  000A               	tblrd		*-
  2869  0014C8  CFF5 F016          	movff	tablat,___flmul@a+3
  2870  0014CC  EC7E  F00A         	call	___flmul	;wreg free
  2871  0014D0  D7A5               	goto	L4
  2872  0014D2                     l2844:
  2873                           
  2874                           ;doprnt.c: 440: return _powers_[scl];
  2875  0014D2  5030               	movf	scale@scl,w,c
  2876  0014D4  0D04               	mullw	4
  2877  0014D6  0E35               	movlw	low __powers_
  2878  0014D8  24F3               	addwf	prodl,w,c
  2879  0014DA  6EF6               	movwf	tblptrl,c
  2880  0014DC  0E08               	movlw	high __powers_
  2881  0014DE  20F4               	addwfc	prodh,w,c
  2882  0014E0  6EF7               	movwf	tblptrh,c
  2883  0014E2                     	if	0	;There are less than 3 active tblptr bytes
  2884  0014E2                     	endif
  2885  0014E2  0009               	tblrd		*+
  2886  0014E4  CFF5 F028          	movff	tablat,?_scale
  2887  0014E8  0009               	tblrd		*+
  2888  0014EA  CFF5 F029          	movff	tablat,?_scale+1
  2889  0014EE  0009               	tblrd		*+
  2890  0014F0  CFF5 F02A          	movff	tablat,?_scale+2
  2891  0014F4  000A               	tblrd		*-
  2892  0014F6  CFF5 F02B          	movff	tablat,?_scale+3
  2893  0014FA  0012               	return	
  2894  0014FC                     __end_of_scale:
  2895                           	opt stack 0
  2896                           tblptru	equ	0xFF8
  2897                           tblptrh	equ	0xFF7
  2898                           tblptrl	equ	0xFF6
  2899                           tablat	equ	0xFF5
  2900                           prodh	equ	0xFF4
  2901                           prodl	equ	0xFF3
  2902                           postinc0	equ	0xFEE
  2903                           wreg	equ	0xFE8
  2904                           indf2	equ	0xFDF
  2905                           postinc2	equ	0xFDE
  2906                           fsr2h	equ	0xFDA
  2907                           fsr2l	equ	0xFD9
  2908                           status	equ	0xFD8
  2909                           
  2910 ;; *************** function _isdigit *****************
  2911 ;; Defined at:
  2912 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\isdigit.c"
  2913 ;; Parameters:    Size  Location     Type
  2914 ;;  c               1    wreg     unsigned char 
  2915 ;; Auto vars:     Size  Location     Type
  2916 ;;  c               1    2[COMRAM] unsigned char 
  2917 ;; Return value:  Size  Location     Type
  2918 ;;		None               void
  2919 ;; Registers used:
  2920 ;;		wreg, status,2, status,0
  2921 ;; Tracked objects:
  2922 ;;		On entry : 0/0
  2923 ;;		On exit  : 0/0
  2924 ;;		Unchanged: 0/0
  2925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2926 ;;      Params:         0       0       0       0       0       0       0       0       0
  2927 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2928 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2929 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2930 ;;Total ram usage:        3 bytes
  2931 ;; Hardware stack levels used:    1
  2932 ;; This function calls:
  2933 ;;		Nothing
  2934 ;; This function is called by:
  2935 ;;		_sprintf
  2936 ;; This function uses a non-reentrant model
  2937 ;;
  2938                           
  2939                           	psect	text4
  2940  002FF8                     __ptext4:
  2941                           	opt stack 0
  2942  002FF8                     _isdigit:
  2943                           	opt stack 28
  2944                           
  2945                           ;incstack = 0
  2946                           ;isdigit@c stored from wreg
  2947  002FF8  6E03               	movwf	isdigit@c,c
  2948  002FFA  0E00               	movlw	0
  2949  002FFC  6E02               	movwf	_isdigit$733,c
  2950  002FFE  0E3A               	movlw	58
  2951  003000  6003               	cpfslt	isdigit@c,c
  2952  003002  D005               	goto	l2856
  2953  003004  0E2F               	movlw	47
  2954  003006  6403               	cpfsgt	isdigit@c,c
  2955  003008  D002               	goto	l2856
  2956  00300A  0E01               	movlw	1
  2957  00300C  6E02               	movwf	_isdigit$733,c
  2958  00300E                     l2856:
  2959  00300E  C002  F001         	movff	_isdigit$733,??_isdigit
  2960  003012  3001               	rrcf	??_isdigit,w,c
  2961  003014  0012               	return	
  2962  003016                     __end_of_isdigit:
  2963                           	opt stack 0
  2964                           tblptru	equ	0xFF8
  2965                           tblptrh	equ	0xFF7
  2966                           tblptrl	equ	0xFF6
  2967                           tablat	equ	0xFF5
  2968                           prodh	equ	0xFF4
  2969                           prodl	equ	0xFF3
  2970                           postinc0	equ	0xFEE
  2971                           wreg	equ	0xFE8
  2972                           indf2	equ	0xFDF
  2973                           postinc2	equ	0xFDE
  2974                           fsr2h	equ	0xFDA
  2975                           fsr2l	equ	0xFD9
  2976                           status	equ	0xFD8
  2977                           
  2978 ;; *************** function _fround *****************
  2979 ;; Defined at:
  2980 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\doprnt.c"
  2981 ;; Parameters:    Size  Location     Type
  2982 ;;  prec            1    wreg     unsigned char 
  2983 ;; Auto vars:     Size  Location     Type
  2984 ;;  prec            1   51[COMRAM] unsigned char 
  2985 ;; Return value:  Size  Location     Type
  2986 ;;                  4   39[COMRAM] unsigned char 
  2987 ;; Registers used:
  2988 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2989 ;; Tracked objects:
  2990 ;;		On entry : 0/0
  2991 ;;		On exit  : 0/0
  2992 ;;		Unchanged: 0/0
  2993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2994 ;;      Params:         4       0       0       0       0       0       0       0       0
  2995 ;;      Locals:         9       0       0       0       0       0       0       0       0
  2996 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2997 ;;      Totals:        13       0       0       0       0       0       0       0       0
  2998 ;;Total ram usage:       13 bytes
  2999 ;; Hardware stack levels used:    1
  3000 ;; Hardware stack levels required when called:    1
  3001 ;; This function calls:
  3002 ;;		___awdiv
  3003 ;;		___awmod
  3004 ;;		___flmul
  3005 ;; This function is called by:
  3006 ;;		_sprintf
  3007 ;; This function uses a non-reentrant model
  3008 ;;
  3009                           
  3010                           	psect	text5
  3011  001E3C                     __ptext5:
  3012                           	opt stack 0
  3013  001E3C                     _fround:
  3014                           	opt stack 27
  3015                           
  3016                           ;incstack = 0
  3017                           ;fround@prec stored from wreg
  3018  001E3C  6E34               	movwf	fround@prec,c
  3019                           
  3020                           ;doprnt.c: 413: if(prec>=110)
  3021  001E3E  0E6D               	movlw	109
  3022  001E40  6434               	cpfsgt	fround@prec,c
  3023  001E42  D0AC               	goto	l2798
  3024                           
  3025                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  3026  001E44  0E00               	movlw	0
  3027  001E46  6E0A               	movwf	___awdiv@divisor+1,c
  3028  001E48  0E0A               	movlw	10
  3029  001E4A  6E09               	movwf	___awdiv@divisor,c
  3030  001E4C  0E00               	movlw	0
  3031  001E4E  6E04               	movwf	___awmod@divisor+1,c
  3032  001E50  0E64               	movlw	100
  3033  001E52  6E03               	movwf	___awmod@divisor,c
  3034  001E54  C034  F001         	movff	fround@prec,___awmod@dividend
  3035  001E58  6A02               	clrf	___awmod@dividend+1,c
  3036  001E5A  EC15  F016         	call	___awmod	;wreg free
  3037  001E5E  C001  F007         	movff	?___awmod,___awdiv@dividend
  3038  001E62  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  3039  001E66  EC92  F015         	call	___awdiv	;wreg free
  3040  001E6A  90D8               	bcf	status,0,c
  3041  001E6C  3607               	rlcf	?___awdiv,f,c
  3042  001E6E  3608               	rlcf	?___awdiv+1,f,c
  3043  001E70  90D8               	bcf	status,0,c
  3044  001E72  3607               	rlcf	?___awdiv,f,c
  3045  001E74  3608               	rlcf	?___awdiv+1,f,c
  3046  001E76  0E24               	movlw	36
  3047  001E78  2607               	addwf	?___awdiv,f,c
  3048  001E7A  0E00               	movlw	0
  3049  001E7C  2208               	addwfc	?___awdiv+1,f,c
  3050  001E7E  0E01               	movlw	low __npowers_
  3051  001E80  2407               	addwf	?___awdiv,w,c
  3052  001E82  6EF6               	movwf	tblptrl,c
  3053  001E84  0E08               	movlw	high __npowers_
  3054  001E86  2008               	addwfc	?___awdiv+1,w,c
  3055  001E88  6EF7               	movwf	tblptrh,c
  3056  001E8A                     	if	0	;There are less than 3 active tblptr bytes
  3057  001E8A                     	endif
  3058  001E8A  0009               	tblrd		*+
  3059  001E8C  CFF5 F013          	movff	tablat,___flmul@a
  3060  001E90  0009               	tblrd		*+
  3061  001E92  CFF5 F014          	movff	tablat,___flmul@a+1
  3062  001E96  0009               	tblrd		*+
  3063  001E98  CFF5 F015          	movff	tablat,___flmul@a+2
  3064  001E9C  000A               	tblrd		*-
  3065  001E9E  CFF5 F016          	movff	tablat,___flmul@a+3
  3066  001EA2  0E00               	movlw	0
  3067  001EA4  6E0A               	movwf	___awdiv@divisor+1,c
  3068  001EA6  0E64               	movlw	100
  3069  001EA8  6E09               	movwf	___awdiv@divisor,c
  3070  001EAA  C034  F007         	movff	fround@prec,___awdiv@dividend
  3071  001EAE  6A08               	clrf	___awdiv@dividend+1,c
  3072  001EB0  EC92  F015         	call	___awdiv	;wreg free
  3073  001EB4  90D8               	bcf	status,0,c
  3074  001EB6  3607               	rlcf	?___awdiv,f,c
  3075  001EB8  3608               	rlcf	?___awdiv+1,f,c
  3076  001EBA  90D8               	bcf	status,0,c
  3077  001EBC  3607               	rlcf	?___awdiv,f,c
  3078  001EBE  3608               	rlcf	?___awdiv+1,f,c
  3079  001EC0  0E48               	movlw	72
  3080  001EC2  2607               	addwf	?___awdiv,f,c
  3081  001EC4  0E00               	movlw	0
  3082  001EC6  2208               	addwfc	?___awdiv+1,f,c
  3083  001EC8  0E01               	movlw	low __npowers_
  3084  001ECA  2407               	addwf	?___awdiv,w,c
  3085  001ECC  6EF6               	movwf	tblptrl,c
  3086  001ECE  0E08               	movlw	high __npowers_
  3087  001ED0  2008               	addwfc	?___awdiv+1,w,c
  3088  001ED2  6EF7               	movwf	tblptrh,c
  3089  001ED4                     	if	0	;There are less than 3 active tblptr bytes
  3090  001ED4                     	endif
  3091  001ED4  0009               	tblrd		*+
  3092  001ED6  CFF5 F00F          	movff	tablat,___flmul@b
  3093  001EDA  0009               	tblrd		*+
  3094  001EDC  CFF5 F010          	movff	tablat,___flmul@b+1
  3095  001EE0  0009               	tblrd		*+
  3096  001EE2  CFF5 F011          	movff	tablat,___flmul@b+2
  3097  001EE6  000A               	tblrd		*-
  3098  001EE8  CFF5 F012          	movff	tablat,___flmul@b+3
  3099  001EEC  EC7E  F00A         	call	___flmul	;wreg free
  3100  001EF0  C00F  F030         	movff	?___flmul,_fround$1106
  3101  001EF4  C010  F031         	movff	?___flmul+1,_fround$1106+1
  3102  001EF8  C011  F032         	movff	?___flmul+2,_fround$1106+2
  3103  001EFC  C012  F033         	movff	?___flmul+3,_fround$1106+3
  3104                           
  3105                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  3106  001F00  0E00               	movlw	0
  3107  001F02  6E04               	movwf	___awmod@divisor+1,c
  3108  001F04  0E0A               	movlw	10
  3109  001F06  6E03               	movwf	___awmod@divisor,c
  3110  001F08  C034  F001         	movff	fround@prec,___awmod@dividend
  3111  001F0C  6A02               	clrf	___awmod@dividend+1,c
  3112  001F0E  EC15  F016         	call	___awmod	;wreg free
  3113  001F12  90D8               	bcf	status,0,c
  3114  001F14  3601               	rlcf	?___awmod,f,c
  3115  001F16  3602               	rlcf	?___awmod+1,f,c
  3116  001F18  90D8               	bcf	status,0,c
  3117  001F1A  3601               	rlcf	?___awmod,f,c
  3118  001F1C  3602               	rlcf	?___awmod+1,f,c
  3119  001F1E  0E01               	movlw	low __npowers_
  3120  001F20  2401               	addwf	?___awmod,w,c
  3121  001F22  6EF6               	movwf	tblptrl,c
  3122  001F24  0E08               	movlw	high __npowers_
  3123  001F26  2002               	addwfc	?___awmod+1,w,c
  3124  001F28  6EF7               	movwf	tblptrh,c
  3125  001F2A                     	if	0	;There are less than 3 active tblptr bytes
  3126  001F2A                     	endif
  3127  001F2A  0009               	tblrd		*+
  3128  001F2C  CFF5 F013          	movff	tablat,___flmul@a
  3129  001F30  0009               	tblrd		*+
  3130  001F32  CFF5 F014          	movff	tablat,___flmul@a+1
  3131  001F36  0009               	tblrd		*+
  3132  001F38  CFF5 F015          	movff	tablat,___flmul@a+2
  3133  001F3C  000A               	tblrd		*-
  3134  001F3E  CFF5 F016          	movff	tablat,___flmul@a+3
  3135  001F42  C030  F00F         	movff	_fround$1106,___flmul@b
  3136  001F46  C031  F010         	movff	_fround$1106+1,___flmul@b+1
  3137  001F4A  C032  F011         	movff	_fround$1106+2,___flmul@b+2
  3138  001F4E  C033  F012         	movff	_fround$1106+3,___flmul@b+3
  3139  001F52  EC7E  F00A         	call	___flmul	;wreg free
  3140  001F56  C00F  F02C         	movff	?___flmul,_fround$1107
  3141  001F5A  C010  F02D         	movff	?___flmul+1,_fround$1107+1
  3142  001F5E  C011  F02E         	movff	?___flmul+2,_fround$1107+2
  3143  001F62  C012  F02F         	movff	?___flmul+3,_fround$1107+3
  3144                           
  3145                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  3146  001F66  C02C  F00F         	movff	_fround$1107,___flmul@b
  3147  001F6A  C02D  F010         	movff	_fround$1107+1,___flmul@b+1
  3148  001F6E  C02E  F011         	movff	_fround$1107+2,___flmul@b+2
  3149  001F72  C02F  F012         	movff	_fround$1107+3,___flmul@b+3
  3150  001F76  0E00               	movlw	0
  3151  001F78  6E13               	movwf	___flmul@a,c
  3152  001F7A  0E00               	movlw	0
  3153  001F7C  6E14               	movwf	___flmul@a+1,c
  3154  001F7E  0E00               	movlw	0
  3155  001F80  6E15               	movwf	___flmul@a+2,c
  3156  001F82  0E3F               	movlw	63
  3157  001F84  6E16               	movwf	___flmul@a+3,c
  3158  001F86  EC7E  F00A         	call	___flmul	;wreg free
  3159  001F8A  C00F  F028         	movff	?___flmul,?_fround
  3160  001F8E  C010  F029         	movff	?___flmul+1,?_fround+1
  3161  001F92  C011  F02A         	movff	?___flmul+2,?_fround+2
  3162  001F96  C012  F02B         	movff	?___flmul+3,?_fround+3
  3163  001F9A  0012               	return	
  3164  001F9C                     l2798:
  3165                           
  3166                           ;doprnt.c: 415: else if(prec > 10)
  3167  001F9C  0E0A               	movlw	10
  3168  001F9E  6434               	cpfsgt	fround@prec,c
  3169  001FA0  D063               	goto	l2806
  3170                           
  3171                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  3172  001FA2  0E00               	movlw	0
  3173  001FA4  6E04               	movwf	___awmod@divisor+1,c
  3174  001FA6  0E0A               	movlw	10
  3175  001FA8  6E03               	movwf	___awmod@divisor,c
  3176  001FAA  C034  F001         	movff	fround@prec,___awmod@dividend
  3177  001FAE  6A02               	clrf	___awmod@dividend+1,c
  3178  001FB0  EC15  F016         	call	___awmod	;wreg free
  3179  001FB4  90D8               	bcf	status,0,c
  3180  001FB6  3601               	rlcf	?___awmod,f,c
  3181  001FB8  3602               	rlcf	?___awmod+1,f,c
  3182  001FBA  90D8               	bcf	status,0,c
  3183  001FBC  3601               	rlcf	?___awmod,f,c
  3184  001FBE  3602               	rlcf	?___awmod+1,f,c
  3185  001FC0  0E01               	movlw	low __npowers_
  3186  001FC2  2401               	addwf	?___awmod,w,c
  3187  001FC4  6EF6               	movwf	tblptrl,c
  3188  001FC6  0E08               	movlw	high __npowers_
  3189  001FC8  2002               	addwfc	?___awmod+1,w,c
  3190  001FCA  6EF7               	movwf	tblptrh,c
  3191  001FCC                     	if	0	;There are less than 3 active tblptr bytes
  3192  001FCC                     	endif
  3193  001FCC  0009               	tblrd		*+
  3194  001FCE  CFF5 F013          	movff	tablat,___flmul@a
  3195  001FD2  0009               	tblrd		*+
  3196  001FD4  CFF5 F014          	movff	tablat,___flmul@a+1
  3197  001FD8  0009               	tblrd		*+
  3198  001FDA  CFF5 F015          	movff	tablat,___flmul@a+2
  3199  001FDE  000A               	tblrd		*-
  3200  001FE0  CFF5 F016          	movff	tablat,___flmul@a+3
  3201  001FE4  0E00               	movlw	0
  3202  001FE6  6E0A               	movwf	___awdiv@divisor+1,c
  3203  001FE8  0E0A               	movlw	10
  3204  001FEA  6E09               	movwf	___awdiv@divisor,c
  3205  001FEC  C034  F007         	movff	fround@prec,___awdiv@dividend
  3206  001FF0  6A08               	clrf	___awdiv@dividend+1,c
  3207  001FF2  EC92  F015         	call	___awdiv	;wreg free
  3208  001FF6  90D8               	bcf	status,0,c
  3209  001FF8  3607               	rlcf	?___awdiv,f,c
  3210  001FFA  3608               	rlcf	?___awdiv+1,f,c
  3211  001FFC  90D8               	bcf	status,0,c
  3212  001FFE  3607               	rlcf	?___awdiv,f,c
  3213  002000  3608               	rlcf	?___awdiv+1,f,c
  3214  002002  0E24               	movlw	36
  3215  002004  2607               	addwf	?___awdiv,f,c
  3216  002006  0E00               	movlw	0
  3217  002008  2208               	addwfc	?___awdiv+1,f,c
  3218  00200A  0E01               	movlw	low __npowers_
  3219  00200C  2407               	addwf	?___awdiv,w,c
  3220  00200E  6EF6               	movwf	tblptrl,c
  3221  002010  0E08               	movlw	high __npowers_
  3222  002012  2008               	addwfc	?___awdiv+1,w,c
  3223  002014  6EF7               	movwf	tblptrh,c
  3224  002016                     	if	0	;There are less than 3 active tblptr bytes
  3225  002016                     	endif
  3226  002016  0009               	tblrd		*+
  3227  002018  CFF5 F00F          	movff	tablat,___flmul@b
  3228  00201C  0009               	tblrd		*+
  3229  00201E  CFF5 F010          	movff	tablat,___flmul@b+1
  3230  002022  0009               	tblrd		*+
  3231  002024  CFF5 F011          	movff	tablat,___flmul@b+2
  3232  002028  000A               	tblrd		*-
  3233  00202A  CFF5 F012          	movff	tablat,___flmul@b+3
  3234  00202E  EC7E  F00A         	call	___flmul	;wreg free
  3235  002032  C00F  F030         	movff	?___flmul,_fround$1106
  3236  002036  C010  F031         	movff	?___flmul+1,_fround$1106+1
  3237  00203A  C011  F032         	movff	?___flmul+2,_fround$1106+2
  3238  00203E  C012  F033         	movff	?___flmul+3,_fround$1106+3
  3239                           
  3240                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  3241  002042  C030  F00F         	movff	_fround$1106,___flmul@b
  3242  002046  C031  F010         	movff	_fround$1106+1,___flmul@b+1
  3243  00204A  C032  F011         	movff	_fround$1106+2,___flmul@b+2
  3244  00204E  C033  F012         	movff	_fround$1106+3,___flmul@b+3
  3245  002052  0E00               	movlw	0
  3246  002054  6E13               	movwf	___flmul@a,c
  3247  002056  0E00               	movlw	0
  3248  002058  6E14               	movwf	___flmul@a+1,c
  3249  00205A  0E00               	movlw	0
  3250  00205C  6E15               	movwf	___flmul@a+2,c
  3251  00205E  0E3F               	movlw	63
  3252  002060  6E16               	movwf	___flmul@a+3,c
  3253  002062  EC7E  F00A         	call	___flmul	;wreg free
  3254  002066  D791               	goto	L5
  3255  002068                     l2806:
  3256                           
  3257                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  3258  002068  5034               	movf	fround@prec,w,c
  3259  00206A  0D04               	mullw	4
  3260  00206C  0E01               	movlw	low __npowers_
  3261  00206E  24F3               	addwf	prodl,w,c
  3262  002070  6EF6               	movwf	tblptrl,c
  3263  002072  0E08               	movlw	high __npowers_
  3264  002074  20F4               	addwfc	prodh,w,c
  3265  002076  6EF7               	movwf	tblptrh,c
  3266  002078                     	if	0	;There are less than 3 active tblptr bytes
  3267  002078                     	endif
  3268  002078  0009               	tblrd		*+
  3269  00207A  CFF5 F00F          	movff	tablat,___flmul@b
  3270  00207E  0009               	tblrd		*+
  3271  002080  CFF5 F010          	movff	tablat,___flmul@b+1
  3272  002084  0009               	tblrd		*+
  3273  002086  CFF5 F011          	movff	tablat,___flmul@b+2
  3274  00208A  000A               	tblrd		*-
  3275  00208C  CFF5 F012          	movff	tablat,___flmul@b+3
  3276  002090  0E00               	movlw	0
  3277  002092  6E13               	movwf	___flmul@a,c
  3278  002094  0E00               	movlw	0
  3279  002096  6E14               	movwf	___flmul@a+1,c
  3280  002098  0E00               	movlw	0
  3281  00209A  6E15               	movwf	___flmul@a+2,c
  3282  00209C  0E3F               	movlw	63
  3283  00209E  6E16               	movwf	___flmul@a+3,c
  3284  0020A0  EC7E  F00A         	call	___flmul	;wreg free
  3285  0020A4  C00F  F028         	movff	?___flmul,?_fround
  3286  0020A8  C010  F029         	movff	?___flmul+1,?_fround+1
  3287  0020AC  C011  F02A         	movff	?___flmul+2,?_fround+2
  3288  0020B0  C012  F02B         	movff	?___flmul+3,?_fround+3
  3289  0020B4  0012               	return	
  3290  0020B6                     __end_of_fround:
  3291                           	opt stack 0
  3292                           tblptru	equ	0xFF8
  3293                           tblptrh	equ	0xFF7
  3294                           tblptrl	equ	0xFF6
  3295                           tablat	equ	0xFF5
  3296                           prodh	equ	0xFF4
  3297                           prodl	equ	0xFF3
  3298                           postinc0	equ	0xFEE
  3299                           wreg	equ	0xFE8
  3300                           indf2	equ	0xFDF
  3301                           postinc2	equ	0xFDE
  3302                           fsr2h	equ	0xFDA
  3303                           fsr2l	equ	0xFD9
  3304                           status	equ	0xFD8
  3305                           
  3306 ;; *************** function ___awmod *****************
  3307 ;; Defined at:
  3308 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\awmod.c"
  3309 ;; Parameters:    Size  Location     Type
  3310 ;;  dividend        2    0[COMRAM] int 
  3311 ;;  divisor         2    2[COMRAM] int 
  3312 ;; Auto vars:     Size  Location     Type
  3313 ;;  sign            1    5[COMRAM] unsigned char 
  3314 ;;  counter         1    4[COMRAM] unsigned char 
  3315 ;; Return value:  Size  Location     Type
  3316 ;;                  2    0[COMRAM] int 
  3317 ;; Registers used:
  3318 ;;		wreg, status,2, status,0
  3319 ;; Tracked objects:
  3320 ;;		On entry : 0/0
  3321 ;;		On exit  : 0/0
  3322 ;;		Unchanged: 0/0
  3323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3324 ;;      Params:         4       0       0       0       0       0       0       0       0
  3325 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3326 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3327 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3328 ;;Total ram usage:        6 bytes
  3329 ;; Hardware stack levels used:    1
  3330 ;; This function calls:
  3331 ;;		Nothing
  3332 ;; This function is called by:
  3333 ;;		_fround
  3334 ;;		_scale
  3335 ;; This function uses a non-reentrant model
  3336 ;;
  3337                           
  3338                           	psect	text6
  3339  002C2A                     __ptext6:
  3340                           	opt stack 0
  3341  002C2A                     ___awmod:
  3342                           	opt stack 27
  3343                           
  3344                           ;incstack = 0
  3345  002C2A  0E00               	movlw	0
  3346  002C2C  6E06               	movwf	___awmod@sign,c
  3347  002C2E  AE02               	btfss	___awmod@dividend+1,7,c
  3348  002C30  D006               	goto	l2736
  3349  002C32  6C01               	negf	___awmod@dividend,c
  3350  002C34  1E02               	comf	___awmod@dividend+1,f,c
  3351  002C36  B0D8               	btfsc	status,0,c
  3352  002C38  2A02               	incf	___awmod@dividend+1,f,c
  3353  002C3A  0E01               	movlw	1
  3354  002C3C  6E06               	movwf	___awmod@sign,c
  3355  002C3E                     l2736:
  3356  002C3E  AE04               	btfss	___awmod@divisor+1,7,c
  3357  002C40  D004               	goto	l2740
  3358  002C42  6C03               	negf	___awmod@divisor,c
  3359  002C44  1E04               	comf	___awmod@divisor+1,f,c
  3360  002C46  B0D8               	btfsc	status,0,c
  3361  002C48  2A04               	incf	___awmod@divisor+1,f,c
  3362  002C4A                     l2740:
  3363  002C4A  5003               	movf	___awmod@divisor,w,c
  3364  002C4C  1004               	iorwf	___awmod@divisor+1,w,c
  3365  002C4E  B4D8               	btfsc	status,2,c
  3366  002C50  D018               	goto	l2756
  3367  002C52  0E01               	movlw	1
  3368  002C54  6E05               	movwf	___awmod@counter,c
  3369  002C56  D004               	goto	l2746
  3370  002C58                     l2744:
  3371  002C58  90D8               	bcf	status,0,c
  3372  002C5A  3603               	rlcf	___awmod@divisor,f,c
  3373  002C5C  3604               	rlcf	___awmod@divisor+1,f,c
  3374  002C5E  2A05               	incf	___awmod@counter,f,c
  3375  002C60                     l2746:
  3376  002C60  AE04               	btfss	___awmod@divisor+1,7,c
  3377  002C62  D7FA               	goto	l2744
  3378  002C64                     l2748:
  3379  002C64  5003               	movf	___awmod@divisor,w,c
  3380  002C66  5C01               	subwf	___awmod@dividend,w,c
  3381  002C68  5004               	movf	___awmod@divisor+1,w,c
  3382  002C6A  5802               	subwfb	___awmod@dividend+1,w,c
  3383  002C6C  A0D8               	btfss	status,0,c
  3384  002C6E  D004               	goto	l2752
  3385  002C70  5003               	movf	___awmod@divisor,w,c
  3386  002C72  5E01               	subwf	___awmod@dividend,f,c
  3387  002C74  5004               	movf	___awmod@divisor+1,w,c
  3388  002C76  5A02               	subwfb	___awmod@dividend+1,f,c
  3389  002C78                     l2752:
  3390  002C78  90D8               	bcf	status,0,c
  3391  002C7A  3204               	rrcf	___awmod@divisor+1,f,c
  3392  002C7C  3203               	rrcf	___awmod@divisor,f,c
  3393  002C7E  2E05               	decfsz	___awmod@counter,f,c
  3394  002C80  D7F1               	goto	l2748
  3395  002C82                     l2756:
  3396  002C82  5006               	movf	___awmod@sign,w,c
  3397  002C84  B4D8               	btfsc	status,2,c
  3398  002C86  D004               	goto	l2760
  3399  002C88  6C01               	negf	___awmod@dividend,c
  3400  002C8A  1E02               	comf	___awmod@dividend+1,f,c
  3401  002C8C  B0D8               	btfsc	status,0,c
  3402  002C8E  2A02               	incf	___awmod@dividend+1,f,c
  3403  002C90                     l2760:
  3404  002C90  C001  F001         	movff	___awmod@dividend,?___awmod
  3405  002C94  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  3406  002C98  0012               	return	
  3407  002C9A                     __end_of___awmod:
  3408                           	opt stack 0
  3409                           tblptru	equ	0xFF8
  3410                           tblptrh	equ	0xFF7
  3411                           tblptrl	equ	0xFF6
  3412                           tablat	equ	0xFF5
  3413                           prodh	equ	0xFF4
  3414                           prodl	equ	0xFF3
  3415                           postinc0	equ	0xFEE
  3416                           wreg	equ	0xFE8
  3417                           indf2	equ	0xFDF
  3418                           postinc2	equ	0xFDE
  3419                           fsr2h	equ	0xFDA
  3420                           fsr2l	equ	0xFD9
  3421                           status	equ	0xFD8
  3422                           
  3423 ;; *************** function __tdiv_to_l_ *****************
  3424 ;; Defined at:
  3425 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\ftdivl.c"
  3426 ;; Parameters:    Size  Location     Type
  3427 ;;  f1              4    0[COMRAM] float 
  3428 ;;  f2              4    4[COMRAM] float 
  3429 ;; Auto vars:     Size  Location     Type
  3430 ;;  quot            4   11[COMRAM] unsigned long 
  3431 ;;  exp1            1   16[COMRAM] unsigned char 
  3432 ;;  cntr            1   15[COMRAM] unsigned char 
  3433 ;; Return value:  Size  Location     Type
  3434 ;;                  4    0[COMRAM] unsigned long 
  3435 ;; Registers used:
  3436 ;;		wreg, status,2, status,0
  3437 ;; Tracked objects:
  3438 ;;		On entry : 0/0
  3439 ;;		On exit  : 0/0
  3440 ;;		Unchanged: 0/0
  3441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3442 ;;      Params:         8       0       0       0       0       0       0       0       0
  3443 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3444 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3445 ;;      Totals:        17       0       0       0       0       0       0       0       0
  3446 ;;Total ram usage:       17 bytes
  3447 ;; Hardware stack levels used:    1
  3448 ;; This function calls:
  3449 ;;		Nothing
  3450 ;; This function is called by:
  3451 ;;		_sprintf
  3452 ;; This function uses a non-reentrant model
  3453 ;;
  3454                           
  3455                           	psect	text7
  3456  0024FC                     __ptext7:
  3457                           	opt stack 0
  3458  0024FC                     __tdiv_to_l_:
  3459                           	opt stack 28
  3460                           
  3461                           ;incstack = 0
  3462  0024FC  C003  F009         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  3463  002500  6A0A               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  3464  002502  6A0B               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  3465  002504  3402               	rlcf	__tdiv_to_l_@f1+1,w,c
  3466  002506  3609               	rlcf	??__tdiv_to_l_& (0+255),f,c
  3467  002508  E301               	bnc	u2891
  3468  00250A  800A               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  3469  00250C                     u2891:
  3470  00250C  5009               	movf	??__tdiv_to_l_,w,c
  3471  00250E  6E11               	movwf	__tdiv_to_l_@exp1,c
  3472  002510  5011               	movf	__tdiv_to_l_@exp1,w,c
  3473  002512  A4D8               	btfss	status,2,c
  3474  002514  D009               	goto	l2866
  3475  002516  0E00               	movlw	0
  3476  002518  6E01               	movwf	?__tdiv_to_l_,c
  3477  00251A  0E00               	movlw	0
  3478  00251C  6E02               	movwf	?__tdiv_to_l_+1,c
  3479  00251E  0E00               	movlw	0
  3480  002520  6E03               	movwf	?__tdiv_to_l_+2,c
  3481  002522  0E00               	movlw	0
  3482  002524  6E04               	movwf	?__tdiv_to_l_+3,c
  3483  002526  0012               	return	
  3484  002528                     l2866:
  3485  002528  C007  F009         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  3486  00252C  6A0A               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  3487  00252E  6A0B               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  3488  002530  3406               	rlcf	__tdiv_to_l_@f2+1,w,c
  3489  002532  3609               	rlcf	??__tdiv_to_l_& (0+255),f,c
  3490  002534  E301               	bnc	u2911
  3491  002536  800A               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  3492  002538                     u2911:
  3493  002538  5009               	movf	??__tdiv_to_l_,w,c
  3494  00253A  6E10               	movwf	__tdiv_to_l_@cntr,c
  3495  00253C  5010               	movf	__tdiv_to_l_@cntr,w,c
  3496  00253E  A4D8               	btfss	status,2,c
  3497  002540  D009               	goto	l2872
  3498  002542  0E00               	movlw	0
  3499  002544  6E01               	movwf	?__tdiv_to_l_,c
  3500  002546  0E00               	movlw	0
  3501  002548  6E02               	movwf	?__tdiv_to_l_+1,c
  3502  00254A  0E00               	movlw	0
  3503  00254C  6E03               	movwf	?__tdiv_to_l_+2,c
  3504  00254E  0E00               	movlw	0
  3505  002550  6E04               	movwf	?__tdiv_to_l_+3,c
  3506  002552  0012               	return	
  3507  002554                     l2872:
  3508  002554  8E02               	bsf	__tdiv_to_l_@f1+1,7,c
  3509  002556  0EFF               	movlw	255
  3510  002558  1601               	andwf	__tdiv_to_l_@f1,f,c
  3511  00255A  0EFF               	movlw	255
  3512  00255C  1602               	andwf	__tdiv_to_l_@f1+1,f,c
  3513  00255E  0E00               	movlw	0
  3514  002560  1603               	andwf	__tdiv_to_l_@f1+2,f,c
  3515  002562  8E06               	bsf	__tdiv_to_l_@f2+1,7,c
  3516  002564  0EFF               	movlw	255
  3517  002566  1605               	andwf	__tdiv_to_l_@f2,f,c
  3518  002568  0EFF               	movlw	255
  3519  00256A  1606               	andwf	__tdiv_to_l_@f2+1,f,c
  3520  00256C  0E00               	movlw	0
  3521  00256E  1607               	andwf	__tdiv_to_l_@f2+2,f,c
  3522  002570  0E00               	movlw	0
  3523  002572  6E0C               	movwf	__tdiv_to_l_@quot,c
  3524  002574  0E00               	movlw	0
  3525  002576  6E0D               	movwf	__tdiv_to_l_@quot+1,c
  3526  002578  0E00               	movlw	0
  3527  00257A  6E0E               	movwf	__tdiv_to_l_@quot+2,c
  3528  00257C  0E00               	movlw	0
  3529  00257E  6E0F               	movwf	__tdiv_to_l_@quot+3,c
  3530  002580  0E7F               	movlw	127
  3531  002582  5E11               	subwf	__tdiv_to_l_@exp1,f,c
  3532  002584  5010               	movf	__tdiv_to_l_@cntr,w,c
  3533  002586  0F98               	addlw	152
  3534  002588  5E11               	subwf	__tdiv_to_l_@exp1,f,c
  3535  00258A  0E18               	movlw	24
  3536  00258C  6E10               	movwf	__tdiv_to_l_@cntr,c
  3537  00258E                     l576:
  3538  00258E  90D8               	bcf	status,0,c
  3539  002590  360C               	rlcf	__tdiv_to_l_@quot,f,c
  3540  002592  360D               	rlcf	__tdiv_to_l_@quot+1,f,c
  3541  002594  360E               	rlcf	__tdiv_to_l_@quot+2,f,c
  3542  002596  360F               	rlcf	__tdiv_to_l_@quot+3,f,c
  3543  002598  5005               	movf	__tdiv_to_l_@f2,w,c
  3544  00259A  5C01               	subwf	__tdiv_to_l_@f1,w,c
  3545  00259C  5006               	movf	__tdiv_to_l_@f2+1,w,c
  3546  00259E  5802               	subwfb	__tdiv_to_l_@f1+1,w,c
  3547  0025A0  5007               	movf	__tdiv_to_l_@f2+2,w,c
  3548  0025A2  5803               	subwfb	__tdiv_to_l_@f1+2,w,c
  3549  0025A4  A0D8               	btfss	status,0,c
  3550  0025A6  D007               	goto	l577
  3551  0025A8  5005               	movf	__tdiv_to_l_@f2,w,c
  3552  0025AA  5E01               	subwf	__tdiv_to_l_@f1,f,c
  3553  0025AC  5006               	movf	__tdiv_to_l_@f2+1,w,c
  3554  0025AE  5A02               	subwfb	__tdiv_to_l_@f1+1,f,c
  3555  0025B0  5007               	movf	__tdiv_to_l_@f2+2,w,c
  3556  0025B2  5A03               	subwfb	__tdiv_to_l_@f1+2,f,c
  3557  0025B4  800C               	bsf	__tdiv_to_l_@quot,0,c
  3558  0025B6                     l577:
  3559  0025B6  90D8               	bcf	status,0,c
  3560  0025B8  3601               	rlcf	__tdiv_to_l_@f1,f,c
  3561  0025BA  3602               	rlcf	__tdiv_to_l_@f1+1,f,c
  3562  0025BC  3603               	rlcf	__tdiv_to_l_@f1+2,f,c
  3563  0025BE  2E10               	decfsz	__tdiv_to_l_@cntr,f,c
  3564  0025C0  D7E6               	goto	l576
  3565  0025C2  AE11               	btfss	__tdiv_to_l_@exp1,7,c
  3566  0025C4  D016               	goto	l2906
  3567  0025C6  5011               	movf	__tdiv_to_l_@exp1,w,c
  3568  0025C8  0A80               	xorlw	128
  3569  0025CA  0F97               	addlw	151
  3570  0025CC  B0D8               	btfsc	status,0,c
  3571  0025CE  D009               	goto	l2902
  3572  0025D0  0E00               	movlw	0
  3573  0025D2  6E01               	movwf	?__tdiv_to_l_,c
  3574  0025D4  0E00               	movlw	0
  3575  0025D6  6E02               	movwf	?__tdiv_to_l_+1,c
  3576  0025D8  0E00               	movlw	0
  3577  0025DA  6E03               	movwf	?__tdiv_to_l_+2,c
  3578  0025DC  0E00               	movlw	0
  3579  0025DE  6E04               	movwf	?__tdiv_to_l_+3,c
  3580  0025E0  0012               	return	
  3581  0025E2                     l2902:
  3582  0025E2  90D8               	bcf	status,0,c
  3583  0025E4  320F               	rrcf	__tdiv_to_l_@quot+3,f,c
  3584  0025E6  320E               	rrcf	__tdiv_to_l_@quot+2,f,c
  3585  0025E8  320D               	rrcf	__tdiv_to_l_@quot+1,f,c
  3586  0025EA  320C               	rrcf	__tdiv_to_l_@quot,f,c
  3587  0025EC  3E11               	incfsz	__tdiv_to_l_@exp1,f,c
  3588  0025EE  D7F9               	goto	l2902
  3589  0025F0  D015               	goto	l583
  3590  0025F2                     l2906:
  3591  0025F2  0E17               	movlw	23
  3592  0025F4  6411               	cpfsgt	__tdiv_to_l_@exp1,c
  3593  0025F6  D00F               	goto	l2914
  3594  0025F8  0E00               	movlw	0
  3595  0025FA  6E01               	movwf	?__tdiv_to_l_,c
  3596  0025FC  0E00               	movlw	0
  3597  0025FE  6E02               	movwf	?__tdiv_to_l_+1,c
  3598  002600  0E00               	movlw	0
  3599  002602  6E03               	movwf	?__tdiv_to_l_+2,c
  3600  002604  0E00               	movlw	0
  3601  002606  6E04               	movwf	?__tdiv_to_l_+3,c
  3602  002608  0012               	return	
  3603  00260A                     l2912:
  3604  00260A  90D8               	bcf	status,0,c
  3605  00260C  360C               	rlcf	__tdiv_to_l_@quot,f,c
  3606  00260E  360D               	rlcf	__tdiv_to_l_@quot+1,f,c
  3607  002610  360E               	rlcf	__tdiv_to_l_@quot+2,f,c
  3608  002612  360F               	rlcf	__tdiv_to_l_@quot+3,f,c
  3609  002614  0611               	decf	__tdiv_to_l_@exp1,f,c
  3610  002616                     l2914:
  3611  002616  5011               	movf	__tdiv_to_l_@exp1,w,c
  3612  002618  A4D8               	btfss	status,2,c
  3613  00261A  D7F7               	goto	l2912
  3614  00261C                     l583:
  3615  00261C  C00C  F001         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  3616  002620  C00D  F002         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  3617  002624  C00E  F003         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  3618  002628  C00F  F004         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  3619  00262C  0012               	return		;funcret
  3620  00262E                     __end_of__tdiv_to_l_:
  3621                           	opt stack 0
  3622                           tblptru	equ	0xFF8
  3623                           tblptrh	equ	0xFF7
  3624                           tblptrl	equ	0xFF6
  3625                           tablat	equ	0xFF5
  3626                           prodh	equ	0xFF4
  3627                           prodl	equ	0xFF3
  3628                           postinc0	equ	0xFEE
  3629                           wreg	equ	0xFE8
  3630                           indf2	equ	0xFDF
  3631                           postinc2	equ	0xFDE
  3632                           fsr2h	equ	0xFDA
  3633                           fsr2l	equ	0xFD9
  3634                           status	equ	0xFD8
  3635                           
  3636 ;; *************** function __div_to_l_ *****************
  3637 ;; Defined at:
  3638 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\fldivl.c"
  3639 ;; Parameters:    Size  Location     Type
  3640 ;;  f1              4    0[COMRAM] unsigned long 
  3641 ;;  f2              4    4[COMRAM] unsigned long 
  3642 ;; Auto vars:     Size  Location     Type
  3643 ;;  quot            4    8[COMRAM] unsigned long 
  3644 ;;  exp1            1   13[COMRAM] unsigned char 
  3645 ;;  cntr            1   12[COMRAM] unsigned char 
  3646 ;; Return value:  Size  Location     Type
  3647 ;;                  4    0[COMRAM] unsigned long 
  3648 ;; Registers used:
  3649 ;;		wreg, status,2, status,0
  3650 ;; Tracked objects:
  3651 ;;		On entry : 0/0
  3652 ;;		On exit  : 0/0
  3653 ;;		Unchanged: 0/0
  3654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3655 ;;      Params:         8       0       0       0       0       0       0       0       0
  3656 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3657 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3658 ;;      Totals:        14       0       0       0       0       0       0       0       0
  3659 ;;Total ram usage:       14 bytes
  3660 ;; Hardware stack levels used:    1
  3661 ;; This function calls:
  3662 ;;		Nothing
  3663 ;; This function is called by:
  3664 ;;		_sprintf
  3665 ;; This function uses a non-reentrant model
  3666 ;;
  3667                           
  3668                           	psect	text8
  3669  00262E                     __ptext8:
  3670                           	opt stack 0
  3671  00262E                     __div_to_l_:
  3672                           	opt stack 28
  3673                           
  3674                           ;incstack = 0
  3675  00262E  3403               	rlcf	__div_to_l_@f1+2,w,c
  3676  002630  3404               	rlcf	__div_to_l_@f1+3,w,c
  3677  002632  6E0E               	movwf	__div_to_l_@exp1,c
  3678  002634  500E               	movf	__div_to_l_@exp1,w,c
  3679  002636  A4D8               	btfss	status,2,c
  3680  002638  D009               	goto	l2922
  3681  00263A  0E00               	movlw	0
  3682  00263C  6E01               	movwf	?__div_to_l_,c
  3683  00263E  0E00               	movlw	0
  3684  002640  6E02               	movwf	?__div_to_l_+1,c
  3685  002642  0E00               	movlw	0
  3686  002644  6E03               	movwf	?__div_to_l_+2,c
  3687  002646  0E00               	movlw	0
  3688  002648  6E04               	movwf	?__div_to_l_+3,c
  3689  00264A  0012               	return	
  3690  00264C                     l2922:
  3691  00264C  3407               	rlcf	__div_to_l_@f2+2,w,c
  3692  00264E  3408               	rlcf	__div_to_l_@f2+3,w,c
  3693  002650  6E0D               	movwf	__div_to_l_@cntr,c
  3694  002652  500D               	movf	__div_to_l_@cntr,w,c
  3695  002654  A4D8               	btfss	status,2,c
  3696  002656  D009               	goto	l2928
  3697  002658  0E00               	movlw	0
  3698  00265A  6E01               	movwf	?__div_to_l_,c
  3699  00265C  0E00               	movlw	0
  3700  00265E  6E02               	movwf	?__div_to_l_+1,c
  3701  002660  0E00               	movlw	0
  3702  002662  6E03               	movwf	?__div_to_l_+2,c
  3703  002664  0E00               	movlw	0
  3704  002666  6E04               	movwf	?__div_to_l_+3,c
  3705  002668  0012               	return	
  3706  00266A                     l2928:
  3707  00266A  8E03               	bsf	__div_to_l_@f1+2,7,c
  3708  00266C  0EFF               	movlw	255
  3709  00266E  1601               	andwf	__div_to_l_@f1,f,c
  3710  002670  0EFF               	movlw	255
  3711  002672  1602               	andwf	__div_to_l_@f1+1,f,c
  3712  002674  0EFF               	movlw	255
  3713  002676  1603               	andwf	__div_to_l_@f1+2,f,c
  3714  002678  0E00               	movlw	0
  3715  00267A  1604               	andwf	__div_to_l_@f1+3,f,c
  3716  00267C  8E07               	bsf	__div_to_l_@f2+2,7,c
  3717  00267E  0EFF               	movlw	255
  3718  002680  1605               	andwf	__div_to_l_@f2,f,c
  3719  002682  0EFF               	movlw	255
  3720  002684  1606               	andwf	__div_to_l_@f2+1,f,c
  3721  002686  0EFF               	movlw	255
  3722  002688  1607               	andwf	__div_to_l_@f2+2,f,c
  3723  00268A  0E00               	movlw	0
  3724  00268C  1608               	andwf	__div_to_l_@f2+3,f,c
  3725  00268E  0E00               	movlw	0
  3726  002690  6E09               	movwf	__div_to_l_@quot,c
  3727  002692  0E00               	movlw	0
  3728  002694  6E0A               	movwf	__div_to_l_@quot+1,c
  3729  002696  0E00               	movlw	0
  3730  002698  6E0B               	movwf	__div_to_l_@quot+2,c
  3731  00269A  0E00               	movlw	0
  3732  00269C  6E0C               	movwf	__div_to_l_@quot+3,c
  3733  00269E  0E7F               	movlw	127
  3734  0026A0  5E0E               	subwf	__div_to_l_@exp1,f,c
  3735  0026A2  500D               	movf	__div_to_l_@cntr,w,c
  3736  0026A4  0FA0               	addlw	160
  3737  0026A6  5E0E               	subwf	__div_to_l_@exp1,f,c
  3738  0026A8  0E20               	movlw	32
  3739  0026AA  6E0D               	movwf	__div_to_l_@cntr,c
  3740  0026AC                     l2942:
  3741  0026AC  90D8               	bcf	status,0,c
  3742  0026AE  3609               	rlcf	__div_to_l_@quot,f,c
  3743  0026B0  360A               	rlcf	__div_to_l_@quot+1,f,c
  3744  0026B2  360B               	rlcf	__div_to_l_@quot+2,f,c
  3745  0026B4  360C               	rlcf	__div_to_l_@quot+3,f,c
  3746  0026B6  5005               	movf	__div_to_l_@f2,w,c
  3747  0026B8  5C01               	subwf	__div_to_l_@f1,w,c
  3748  0026BA  5006               	movf	__div_to_l_@f2+1,w,c
  3749  0026BC  5802               	subwfb	__div_to_l_@f1+1,w,c
  3750  0026BE  5007               	movf	__div_to_l_@f2+2,w,c
  3751  0026C0  5803               	subwfb	__div_to_l_@f1+2,w,c
  3752  0026C2  5008               	movf	__div_to_l_@f2+3,w,c
  3753  0026C4  5804               	subwfb	__div_to_l_@f1+3,w,c
  3754  0026C6  A0D8               	btfss	status,0,c
  3755  0026C8  D009               	goto	l2950
  3756  0026CA  5005               	movf	__div_to_l_@f2,w,c
  3757  0026CC  5E01               	subwf	__div_to_l_@f1,f,c
  3758  0026CE  5006               	movf	__div_to_l_@f2+1,w,c
  3759  0026D0  5A02               	subwfb	__div_to_l_@f1+1,f,c
  3760  0026D2  5007               	movf	__div_to_l_@f2+2,w,c
  3761  0026D4  5A03               	subwfb	__div_to_l_@f1+2,f,c
  3762  0026D6  5008               	movf	__div_to_l_@f2+3,w,c
  3763  0026D8  5A04               	subwfb	__div_to_l_@f1+3,f,c
  3764  0026DA  8009               	bsf	__div_to_l_@quot,0,c
  3765  0026DC                     l2950:
  3766  0026DC  90D8               	bcf	status,0,c
  3767  0026DE  3601               	rlcf	__div_to_l_@f1,f,c
  3768  0026E0  3602               	rlcf	__div_to_l_@f1+1,f,c
  3769  0026E2  3603               	rlcf	__div_to_l_@f1+2,f,c
  3770  0026E4  3604               	rlcf	__div_to_l_@f1+3,f,c
  3771  0026E6  2E0D               	decfsz	__div_to_l_@cntr,f,c
  3772  0026E8  D7E1               	goto	l2942
  3773  0026EA  AE0E               	btfss	__div_to_l_@exp1,7,c
  3774  0026EC  D016               	goto	l2966
  3775  0026EE  500E               	movf	__div_to_l_@exp1,w,c
  3776  0026F0  0A80               	xorlw	128
  3777  0026F2  0F9F               	addlw	159
  3778  0026F4  B0D8               	btfsc	status,0,c
  3779  0026F6  D009               	goto	l2962
  3780  0026F8  0E00               	movlw	0
  3781  0026FA  6E01               	movwf	?__div_to_l_,c
  3782  0026FC  0E00               	movlw	0
  3783  0026FE  6E02               	movwf	?__div_to_l_+1,c
  3784  002700  0E00               	movlw	0
  3785  002702  6E03               	movwf	?__div_to_l_+2,c
  3786  002704  0E00               	movlw	0
  3787  002706  6E04               	movwf	?__div_to_l_+3,c
  3788  002708  0012               	return	
  3789  00270A                     l2962:
  3790  00270A  90D8               	bcf	status,0,c
  3791  00270C  320C               	rrcf	__div_to_l_@quot+3,f,c
  3792  00270E  320B               	rrcf	__div_to_l_@quot+2,f,c
  3793  002710  320A               	rrcf	__div_to_l_@quot+1,f,c
  3794  002712  3209               	rrcf	__div_to_l_@quot,f,c
  3795  002714  3E0E               	incfsz	__div_to_l_@exp1,f,c
  3796  002716  D7F9               	goto	l2962
  3797  002718  D015               	goto	l479
  3798  00271A                     l2966:
  3799  00271A  0E1F               	movlw	31
  3800  00271C  640E               	cpfsgt	__div_to_l_@exp1,c
  3801  00271E  D00F               	goto	l2974
  3802  002720  0E00               	movlw	0
  3803  002722  6E01               	movwf	?__div_to_l_,c
  3804  002724  0E00               	movlw	0
  3805  002726  6E02               	movwf	?__div_to_l_+1,c
  3806  002728  0E00               	movlw	0
  3807  00272A  6E03               	movwf	?__div_to_l_+2,c
  3808  00272C  0E00               	movlw	0
  3809  00272E  6E04               	movwf	?__div_to_l_+3,c
  3810  002730  0012               	return	
  3811  002732                     l2972:
  3812  002732  90D8               	bcf	status,0,c
  3813  002734  3609               	rlcf	__div_to_l_@quot,f,c
  3814  002736  360A               	rlcf	__div_to_l_@quot+1,f,c
  3815  002738  360B               	rlcf	__div_to_l_@quot+2,f,c
  3816  00273A  360C               	rlcf	__div_to_l_@quot+3,f,c
  3817  00273C  060E               	decf	__div_to_l_@exp1,f,c
  3818  00273E                     l2974:
  3819  00273E  500E               	movf	__div_to_l_@exp1,w,c
  3820  002740  A4D8               	btfss	status,2,c
  3821  002742  D7F7               	goto	l2972
  3822  002744                     l479:
  3823  002744  C009  F001         	movff	__div_to_l_@quot,?__div_to_l_
  3824  002748  C00A  F002         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  3825  00274C  C00B  F003         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  3826  002750  C00C  F004         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  3827  002754  0012               	return		;funcret
  3828  002756                     __end_of__div_to_l_:
  3829                           	opt stack 0
  3830                           tblptru	equ	0xFF8
  3831                           tblptrh	equ	0xFF7
  3832                           tblptrl	equ	0xFF6
  3833                           tablat	equ	0xFF5
  3834                           prodh	equ	0xFF4
  3835                           prodl	equ	0xFF3
  3836                           postinc0	equ	0xFEE
  3837                           wreg	equ	0xFE8
  3838                           indf2	equ	0xFDF
  3839                           postinc2	equ	0xFDE
  3840                           fsr2h	equ	0xFDA
  3841                           fsr2l	equ	0xFD9
  3842                           status	equ	0xFD8
  3843                           
  3844 ;; *************** function ___llmod *****************
  3845 ;; Defined at:
  3846 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\llmod.c"
  3847 ;; Parameters:    Size  Location     Type
  3848 ;;  dividend        4    0[COMRAM] unsigned long 
  3849 ;;  divisor         4    4[COMRAM] unsigned long 
  3850 ;; Auto vars:     Size  Location     Type
  3851 ;;  counter         1    8[COMRAM] unsigned char 
  3852 ;; Return value:  Size  Location     Type
  3853 ;;                  4    0[COMRAM] unsigned long 
  3854 ;; Registers used:
  3855 ;;		wreg, status,2, status,0
  3856 ;; Tracked objects:
  3857 ;;		On entry : 0/0
  3858 ;;		On exit  : 0/0
  3859 ;;		Unchanged: 0/0
  3860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3861 ;;      Params:         8       0       0       0       0       0       0       0       0
  3862 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3863 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3864 ;;      Totals:         9       0       0       0       0       0       0       0       0
  3865 ;;Total ram usage:        9 bytes
  3866 ;; Hardware stack levels used:    1
  3867 ;; This function calls:
  3868 ;;		Nothing
  3869 ;; This function is called by:
  3870 ;;		_sprintf
  3871 ;; This function uses a non-reentrant model
  3872 ;;
  3873                           
  3874                           	psect	text9
  3875  002D0A                     __ptext9:
  3876                           	opt stack 0
  3877  002D0A                     ___llmod:
  3878                           	opt stack 28
  3879                           
  3880                           ;incstack = 0
  3881  002D0A  5005               	movf	___llmod@divisor,w,c
  3882  002D0C  1006               	iorwf	___llmod@divisor+1,w,c
  3883  002D0E  1007               	iorwf	___llmod@divisor+2,w,c
  3884  002D10  1008               	iorwf	___llmod@divisor+3,w,c
  3885  002D12  B4D8               	btfsc	status,2,c
  3886  002D14  D024               	goto	l682
  3887  002D16  0E01               	movlw	1
  3888  002D18  6E09               	movwf	___llmod@counter,c
  3889  002D1A  D006               	goto	l3220
  3890  002D1C                     l3218:
  3891  002D1C  90D8               	bcf	status,0,c
  3892  002D1E  3605               	rlcf	___llmod@divisor,f,c
  3893  002D20  3606               	rlcf	___llmod@divisor+1,f,c
  3894  002D22  3607               	rlcf	___llmod@divisor+2,f,c
  3895  002D24  3608               	rlcf	___llmod@divisor+3,f,c
  3896  002D26  2A09               	incf	___llmod@counter,f,c
  3897  002D28                     l3220:
  3898  002D28  AE08               	btfss	___llmod@divisor+3,7,c
  3899  002D2A  D7F8               	goto	l3218
  3900  002D2C                     l3222:
  3901  002D2C  5005               	movf	___llmod@divisor,w,c
  3902  002D2E  5C01               	subwf	___llmod@dividend,w,c
  3903  002D30  5006               	movf	___llmod@divisor+1,w,c
  3904  002D32  5802               	subwfb	___llmod@dividend+1,w,c
  3905  002D34  5007               	movf	___llmod@divisor+2,w,c
  3906  002D36  5803               	subwfb	___llmod@dividend+2,w,c
  3907  002D38  5008               	movf	___llmod@divisor+3,w,c
  3908  002D3A  5804               	subwfb	___llmod@dividend+3,w,c
  3909  002D3C  A0D8               	btfss	status,0,c
  3910  002D3E  D008               	goto	l3226
  3911  002D40  5005               	movf	___llmod@divisor,w,c
  3912  002D42  5E01               	subwf	___llmod@dividend,f,c
  3913  002D44  5006               	movf	___llmod@divisor+1,w,c
  3914  002D46  5A02               	subwfb	___llmod@dividend+1,f,c
  3915  002D48  5007               	movf	___llmod@divisor+2,w,c
  3916  002D4A  5A03               	subwfb	___llmod@dividend+2,f,c
  3917  002D4C  5008               	movf	___llmod@divisor+3,w,c
  3918  002D4E  5A04               	subwfb	___llmod@dividend+3,f,c
  3919  002D50                     l3226:
  3920  002D50  90D8               	bcf	status,0,c
  3921  002D52  3208               	rrcf	___llmod@divisor+3,f,c
  3922  002D54  3207               	rrcf	___llmod@divisor+2,f,c
  3923  002D56  3206               	rrcf	___llmod@divisor+1,f,c
  3924  002D58  3205               	rrcf	___llmod@divisor,f,c
  3925  002D5A  2E09               	decfsz	___llmod@counter,f,c
  3926  002D5C  D7E7               	goto	l3222
  3927  002D5E                     l682:
  3928  002D5E  C001  F001         	movff	___llmod@dividend,?___llmod
  3929  002D62  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
  3930  002D66  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
  3931  002D6A  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
  3932  002D6E  0012               	return		;funcret
  3933  002D70                     __end_of___llmod:
  3934                           	opt stack 0
  3935                           tblptru	equ	0xFF8
  3936                           tblptrh	equ	0xFF7
  3937                           tblptrl	equ	0xFF6
  3938                           tablat	equ	0xFF5
  3939                           prodh	equ	0xFF4
  3940                           prodl	equ	0xFF3
  3941                           postinc0	equ	0xFEE
  3942                           wreg	equ	0xFE8
  3943                           indf2	equ	0xFDF
  3944                           postinc2	equ	0xFDE
  3945                           fsr2h	equ	0xFDA
  3946                           fsr2l	equ	0xFD9
  3947                           status	equ	0xFD8
  3948                           
  3949 ;; *************** function ___lldiv *****************
  3950 ;; Defined at:
  3951 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\lldiv.c"
  3952 ;; Parameters:    Size  Location     Type
  3953 ;;  dividend        4    0[COMRAM] unsigned long 
  3954 ;;  divisor         4    4[COMRAM] unsigned long 
  3955 ;; Auto vars:     Size  Location     Type
  3956 ;;  quotient        4    8[COMRAM] unsigned long 
  3957 ;;  counter         1   12[COMRAM] unsigned char 
  3958 ;; Return value:  Size  Location     Type
  3959 ;;                  4    0[COMRAM] unsigned long 
  3960 ;; Registers used:
  3961 ;;		wreg, status,2, status,0
  3962 ;; Tracked objects:
  3963 ;;		On entry : 0/0
  3964 ;;		On exit  : 0/0
  3965 ;;		Unchanged: 0/0
  3966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3967 ;;      Params:         8       0       0       0       0       0       0       0       0
  3968 ;;      Locals:         5       0       0       0       0       0       0       0       0
  3969 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3970 ;;      Totals:        13       0       0       0       0       0       0       0       0
  3971 ;;Total ram usage:       13 bytes
  3972 ;; Hardware stack levels used:    1
  3973 ;; This function calls:
  3974 ;;		Nothing
  3975 ;; This function is called by:
  3976 ;;		_sprintf
  3977 ;; This function uses a non-reentrant model
  3978 ;;
  3979                           
  3980                           	psect	text10
  3981  002BA8                     __ptext10:
  3982                           	opt stack 0
  3983  002BA8                     ___lldiv:
  3984                           	opt stack 28
  3985                           
  3986                           ;incstack = 0
  3987  002BA8  0E00               	movlw	0
  3988  002BAA  6E09               	movwf	___lldiv@quotient,c
  3989  002BAC  0E00               	movlw	0
  3990  002BAE  6E0A               	movwf	___lldiv@quotient+1,c
  3991  002BB0  0E00               	movlw	0
  3992  002BB2  6E0B               	movwf	___lldiv@quotient+2,c
  3993  002BB4  0E00               	movlw	0
  3994  002BB6  6E0C               	movwf	___lldiv@quotient+3,c
  3995  002BB8  5005               	movf	___lldiv@divisor,w,c
  3996  002BBA  1006               	iorwf	___lldiv@divisor+1,w,c
  3997  002BBC  1007               	iorwf	___lldiv@divisor+2,w,c
  3998  002BBE  1008               	iorwf	___lldiv@divisor+3,w,c
  3999  002BC0  B4D8               	btfsc	status,2,c
  4000  002BC2  D02A               	goto	l672
  4001  002BC4  0E01               	movlw	1
  4002  002BC6  6E0D               	movwf	___lldiv@counter,c
  4003  002BC8  D006               	goto	l3200
  4004  002BCA                     l3198:
  4005  002BCA  90D8               	bcf	status,0,c
  4006  002BCC  3605               	rlcf	___lldiv@divisor,f,c
  4007  002BCE  3606               	rlcf	___lldiv@divisor+1,f,c
  4008  002BD0  3607               	rlcf	___lldiv@divisor+2,f,c
  4009  002BD2  3608               	rlcf	___lldiv@divisor+3,f,c
  4010  002BD4  2A0D               	incf	___lldiv@counter,f,c
  4011  002BD6                     l3200:
  4012  002BD6  AE08               	btfss	___lldiv@divisor+3,7,c
  4013  002BD8  D7F8               	goto	l3198
  4014  002BDA                     l3202:
  4015  002BDA  90D8               	bcf	status,0,c
  4016  002BDC  3609               	rlcf	___lldiv@quotient,f,c
  4017  002BDE  360A               	rlcf	___lldiv@quotient+1,f,c
  4018  002BE0  360B               	rlcf	___lldiv@quotient+2,f,c
  4019  002BE2  360C               	rlcf	___lldiv@quotient+3,f,c
  4020  002BE4  5005               	movf	___lldiv@divisor,w,c
  4021  002BE6  5C01               	subwf	___lldiv@dividend,w,c
  4022  002BE8  5006               	movf	___lldiv@divisor+1,w,c
  4023  002BEA  5802               	subwfb	___lldiv@dividend+1,w,c
  4024  002BEC  5007               	movf	___lldiv@divisor+2,w,c
  4025  002BEE  5803               	subwfb	___lldiv@dividend+2,w,c
  4026  002BF0  5008               	movf	___lldiv@divisor+3,w,c
  4027  002BF2  5804               	subwfb	___lldiv@dividend+3,w,c
  4028  002BF4  A0D8               	btfss	status,0,c
  4029  002BF6  D009               	goto	l3210
  4030  002BF8  5005               	movf	___lldiv@divisor,w,c
  4031  002BFA  5E01               	subwf	___lldiv@dividend,f,c
  4032  002BFC  5006               	movf	___lldiv@divisor+1,w,c
  4033  002BFE  5A02               	subwfb	___lldiv@dividend+1,f,c
  4034  002C00  5007               	movf	___lldiv@divisor+2,w,c
  4035  002C02  5A03               	subwfb	___lldiv@dividend+2,f,c
  4036  002C04  5008               	movf	___lldiv@divisor+3,w,c
  4037  002C06  5A04               	subwfb	___lldiv@dividend+3,f,c
  4038  002C08  8009               	bsf	___lldiv@quotient,0,c
  4039  002C0A                     l3210:
  4040  002C0A  90D8               	bcf	status,0,c
  4041  002C0C  3208               	rrcf	___lldiv@divisor+3,f,c
  4042  002C0E  3207               	rrcf	___lldiv@divisor+2,f,c
  4043  002C10  3206               	rrcf	___lldiv@divisor+1,f,c
  4044  002C12  3205               	rrcf	___lldiv@divisor,f,c
  4045  002C14  2E0D               	decfsz	___lldiv@counter,f,c
  4046  002C16  D7E1               	goto	l3202
  4047  002C18                     l672:
  4048  002C18  C009  F001         	movff	___lldiv@quotient,?___lldiv
  4049  002C1C  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  4050  002C20  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  4051  002C24  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  4052  002C28  0012               	return		;funcret
  4053  002C2A                     __end_of___lldiv:
  4054                           	opt stack 0
  4055                           tblptru	equ	0xFF8
  4056                           tblptrh	equ	0xFF7
  4057                           tblptrl	equ	0xFF6
  4058                           tablat	equ	0xFF5
  4059                           prodh	equ	0xFF4
  4060                           prodl	equ	0xFF3
  4061                           postinc0	equ	0xFEE
  4062                           wreg	equ	0xFE8
  4063                           indf2	equ	0xFDF
  4064                           postinc2	equ	0xFDE
  4065                           fsr2h	equ	0xFDA
  4066                           fsr2l	equ	0xFD9
  4067                           status	equ	0xFD8
  4068                           
  4069 ;; *************** function ___fltol *****************
  4070 ;; Defined at:
  4071 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\fltol.c"
  4072 ;; Parameters:    Size  Location     Type
  4073 ;;  f1              4   48[COMRAM] unsigned long 
  4074 ;; Auto vars:     Size  Location     Type
  4075 ;;  exp1            1   57[COMRAM] unsigned char 
  4076 ;;  sign1           1   56[COMRAM] unsigned char 
  4077 ;; Return value:  Size  Location     Type
  4078 ;;                  4   48[COMRAM] long 
  4079 ;; Registers used:
  4080 ;;		wreg, status,2, status,0
  4081 ;; Tracked objects:
  4082 ;;		On entry : 0/0
  4083 ;;		On exit  : 0/0
  4084 ;;		Unchanged: 0/0
  4085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4086 ;;      Params:         4       0       0       0       0       0       0       0       0
  4087 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4088 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4089 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4090 ;;Total ram usage:       10 bytes
  4091 ;; Hardware stack levels used:    1
  4092 ;; This function calls:
  4093 ;;		Nothing
  4094 ;; This function is called by:
  4095 ;;		_sprintf
  4096 ;; This function uses a non-reentrant model
  4097 ;;
  4098                           
  4099                           	psect	text11
  4100  002990                     __ptext11:
  4101                           	opt stack 0
  4102  002990                     ___fltol:
  4103                           	opt stack 28
  4104                           
  4105                           ;incstack = 0
  4106  002990  3433               	rlcf	___fltol@f1+2,w,c
  4107  002992  3434               	rlcf	___fltol@f1+3,w,c
  4108  002994  6E3A               	movwf	___fltol@exp1,c
  4109  002996  503A               	movf	___fltol@exp1,w,c
  4110  002998  A4D8               	btfss	status,2,c
  4111  00299A  D009               	goto	l3154
  4112  00299C  0E00               	movlw	0
  4113  00299E  6E31               	movwf	?___fltol,c
  4114  0029A0  0E00               	movlw	0
  4115  0029A2  6E32               	movwf	?___fltol+1,c
  4116  0029A4  0E00               	movlw	0
  4117  0029A6  6E33               	movwf	?___fltol+2,c
  4118  0029A8  0E00               	movlw	0
  4119  0029AA  6E34               	movwf	?___fltol+3,c
  4120  0029AC  0012               	return	
  4121  0029AE                     l3154:
  4122  0029AE  C031  F035         	movff	___fltol@f1,??___fltol
  4123  0029B2  C032  F036         	movff	___fltol@f1+1,??___fltol+1
  4124  0029B6  C033  F037         	movff	___fltol@f1+2,??___fltol+2
  4125  0029BA  C034  F038         	movff	___fltol@f1+3,??___fltol+3
  4126  0029BE  0E20               	movlw	32
  4127  0029C0  D005               	goto	u3350
  4128  0029C2                     u3355:
  4129  0029C2  90D8               	bcf	status,0,c
  4130  0029C4  3238               	rrcf	??___fltol+3,f,c
  4131  0029C6  3237               	rrcf	??___fltol+2,f,c
  4132  0029C8  3236               	rrcf	??___fltol+1,f,c
  4133  0029CA  3235               	rrcf	??___fltol,f,c
  4134  0029CC                     u3350:
  4135  0029CC  2EE8               	decfsz	wreg,f,c
  4136  0029CE  D7F9               	goto	u3355
  4137  0029D0  5035               	movf	??___fltol,w,c
  4138  0029D2  6E39               	movwf	___fltol@sign1,c
  4139  0029D4  8E33               	bsf	___fltol@f1+2,7,c
  4140  0029D6  0EFF               	movlw	255
  4141  0029D8  1631               	andwf	___fltol@f1,f,c
  4142  0029DA  0EFF               	movlw	255
  4143  0029DC  1632               	andwf	___fltol@f1+1,f,c
  4144  0029DE  0EFF               	movlw	255
  4145  0029E0  1633               	andwf	___fltol@f1+2,f,c
  4146  0029E2  0E00               	movlw	0
  4147  0029E4  1634               	andwf	___fltol@f1+3,f,c
  4148  0029E6  0E96               	movlw	150
  4149  0029E8  5E3A               	subwf	___fltol@exp1,f,c
  4150  0029EA  AE3A               	btfss	___fltol@exp1,7,c
  4151  0029EC  D016               	goto	l3174
  4152  0029EE  503A               	movf	___fltol@exp1,w,c
  4153  0029F0  0A80               	xorlw	128
  4154  0029F2  0F97               	addlw	151
  4155  0029F4  B0D8               	btfsc	status,0,c
  4156  0029F6  D009               	goto	l3170
  4157  0029F8  0E00               	movlw	0
  4158  0029FA  6E31               	movwf	?___fltol,c
  4159  0029FC  0E00               	movlw	0
  4160  0029FE  6E32               	movwf	?___fltol+1,c
  4161  002A00  0E00               	movlw	0
  4162  002A02  6E33               	movwf	?___fltol+2,c
  4163  002A04  0E00               	movlw	0
  4164  002A06  6E34               	movwf	?___fltol+3,c
  4165  002A08  0012               	return	
  4166  002A0A                     l3170:
  4167  002A0A  90D8               	bcf	status,0,c
  4168  002A0C  3234               	rrcf	___fltol@f1+3,f,c
  4169  002A0E  3233               	rrcf	___fltol@f1+2,f,c
  4170  002A10  3232               	rrcf	___fltol@f1+1,f,c
  4171  002A12  3231               	rrcf	___fltol@f1,f,c
  4172  002A14  3E3A               	incfsz	___fltol@exp1,f,c
  4173  002A16  D7F9               	goto	l3170
  4174  002A18  D015               	goto	l3184
  4175  002A1A                     l3174:
  4176  002A1A  0E1F               	movlw	31
  4177  002A1C  643A               	cpfsgt	___fltol@exp1,c
  4178  002A1E  D00F               	goto	l3182
  4179  002A20  0E00               	movlw	0
  4180  002A22  6E31               	movwf	?___fltol,c
  4181  002A24  0E00               	movlw	0
  4182  002A26  6E32               	movwf	?___fltol+1,c
  4183  002A28  0E00               	movlw	0
  4184  002A2A  6E33               	movwf	?___fltol+2,c
  4185  002A2C  0E00               	movlw	0
  4186  002A2E  6E34               	movwf	?___fltol+3,c
  4187  002A30  0012               	return	
  4188  002A32                     l3180:
  4189  002A32  90D8               	bcf	status,0,c
  4190  002A34  3631               	rlcf	___fltol@f1,f,c
  4191  002A36  3632               	rlcf	___fltol@f1+1,f,c
  4192  002A38  3633               	rlcf	___fltol@f1+2,f,c
  4193  002A3A  3634               	rlcf	___fltol@f1+3,f,c
  4194  002A3C  063A               	decf	___fltol@exp1,f,c
  4195  002A3E                     l3182:
  4196  002A3E  503A               	movf	___fltol@exp1,w,c
  4197  002A40  A4D8               	btfss	status,2,c
  4198  002A42  D7F7               	goto	l3180
  4199  002A44                     l3184:
  4200  002A44  5039               	movf	___fltol@sign1,w,c
  4201  002A46  B4D8               	btfsc	status,2,c
  4202  002A48  D008               	goto	l3188
  4203  002A4A  1E34               	comf	___fltol@f1+3,f,c
  4204  002A4C  1E33               	comf	___fltol@f1+2,f,c
  4205  002A4E  1E32               	comf	___fltol@f1+1,f,c
  4206  002A50  6C31               	negf	___fltol@f1,c
  4207  002A52  0E00               	movlw	0
  4208  002A54  2232               	addwfc	___fltol@f1+1,f,c
  4209  002A56  2233               	addwfc	___fltol@f1+2,f,c
  4210  002A58  2234               	addwfc	___fltol@f1+3,f,c
  4211  002A5A                     l3188:
  4212  002A5A  C031  F031         	movff	___fltol@f1,?___fltol
  4213  002A5E  C032  F032         	movff	___fltol@f1+1,?___fltol+1
  4214  002A62  C033  F033         	movff	___fltol@f1+2,?___fltol+2
  4215  002A66  C034  F034         	movff	___fltol@f1+3,?___fltol+3
  4216  002A6A  0012               	return	
  4217  002A6C                     __end_of___fltol:
  4218                           	opt stack 0
  4219                           tblptru	equ	0xFF8
  4220                           tblptrh	equ	0xFF7
  4221                           tblptrl	equ	0xFF6
  4222                           tablat	equ	0xFF5
  4223                           prodh	equ	0xFF4
  4224                           prodl	equ	0xFF3
  4225                           postinc0	equ	0xFEE
  4226                           wreg	equ	0xFE8
  4227                           indf2	equ	0xFDF
  4228                           postinc2	equ	0xFDE
  4229                           fsr2h	equ	0xFDA
  4230                           fsr2l	equ	0xFD9
  4231                           status	equ	0xFD8
  4232                           
  4233 ;; *************** function ___flsub *****************
  4234 ;; Defined at:
  4235 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\sprcadd.c"
  4236 ;; Parameters:    Size  Location     Type
  4237 ;;  b               4   72[COMRAM] long 
  4238 ;;  a               4   76[COMRAM] long 
  4239 ;; Auto vars:     Size  Location     Type
  4240 ;;		None
  4241 ;; Return value:  Size  Location     Type
  4242 ;;                  4   72[COMRAM] long 
  4243 ;; Registers used:
  4244 ;;		wreg, status,2, status,0, cstack
  4245 ;; Tracked objects:
  4246 ;;		On entry : 0/0
  4247 ;;		On exit  : 0/0
  4248 ;;		Unchanged: 0/0
  4249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4250 ;;      Params:         8       0       0       0       0       0       0       0       0
  4251 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4252 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4253 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4254 ;;Total ram usage:        8 bytes
  4255 ;; Hardware stack levels used:    1
  4256 ;; Hardware stack levels required when called:    1
  4257 ;; This function calls:
  4258 ;;		___fladd
  4259 ;; This function is called by:
  4260 ;;		_sprintf
  4261 ;; This function uses a non-reentrant model
  4262 ;;
  4263                           
  4264                           	psect	text12
  4265  002E60                     __ptext12:
  4266                           	opt stack 0
  4267  002E60                     ___flsub:
  4268                           	opt stack 27
  4269                           
  4270                           ;incstack = 0
  4271  002E60  0E00               	movlw	0
  4272  002E62  1A4D               	xorwf	___flsub@a,f,c
  4273  002E64  0E00               	movlw	0
  4274  002E66  1A4E               	xorwf	___flsub@a+1,f,c
  4275  002E68  0E00               	movlw	0
  4276  002E6A  1A4F               	xorwf	___flsub@a+2,f,c
  4277  002E6C  0E80               	movlw	128
  4278  002E6E  1A50               	xorwf	___flsub@a+3,f,c
  4279  002E70  C049  F035         	movff	___flsub@b,___fladd@b
  4280  002E74  C04A  F036         	movff	___flsub@b+1,___fladd@b+1
  4281  002E78  C04B  F037         	movff	___flsub@b+2,___fladd@b+2
  4282  002E7C  C04C  F038         	movff	___flsub@b+3,___fladd@b+3
  4283  002E80  C04D  F039         	movff	___flsub@a,___fladd@a
  4284  002E84  C04E  F03A         	movff	___flsub@a+1,___fladd@a+1
  4285  002E88  C04F  F03B         	movff	___flsub@a+2,___fladd@a+2
  4286  002E8C  C050  F03C         	movff	___flsub@a+3,___fladd@a+3
  4287  002E90  EC26  F00C         	call	___fladd	;wreg free
  4288  002E94  C035  F049         	movff	?___fladd,?___flsub
  4289  002E98  C036  F04A         	movff	?___fladd+1,?___flsub+1
  4290  002E9C  C037  F04B         	movff	?___fladd+2,?___flsub+2
  4291  002EA0  C038  F04C         	movff	?___fladd+3,?___flsub+3
  4292  002EA4  0012               	return	
  4293  002EA6                     __end_of___flsub:
  4294                           	opt stack 0
  4295                           tblptru	equ	0xFF8
  4296                           tblptrh	equ	0xFF7
  4297                           tblptrl	equ	0xFF6
  4298                           tablat	equ	0xFF5
  4299                           prodh	equ	0xFF4
  4300                           prodl	equ	0xFF3
  4301                           postinc0	equ	0xFEE
  4302                           wreg	equ	0xFE8
  4303                           indf2	equ	0xFDF
  4304                           postinc2	equ	0xFDE
  4305                           fsr2h	equ	0xFDA
  4306                           fsr2l	equ	0xFD9
  4307                           status	equ	0xFD8
  4308                           
  4309 ;; *************** function ___fladd *****************
  4310 ;; Defined at:
  4311 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\sprcadd.c"
  4312 ;; Parameters:    Size  Location     Type
  4313 ;;  b               4   52[COMRAM] long 
  4314 ;;  a               4   56[COMRAM] long 
  4315 ;; Auto vars:     Size  Location     Type
  4316 ;;  grs             1   71[COMRAM] unsigned char 
  4317 ;;  bexp            1   70[COMRAM] unsigned char 
  4318 ;;  aexp            1   69[COMRAM] unsigned char 
  4319 ;;  signs           1   68[COMRAM] unsigned char 
  4320 ;; Return value:  Size  Location     Type
  4321 ;;                  4   52[COMRAM] unsigned char 
  4322 ;; Registers used:
  4323 ;;		wreg, status,2, status,0
  4324 ;; Tracked objects:
  4325 ;;		On entry : 0/0
  4326 ;;		On exit  : 0/0
  4327 ;;		Unchanged: 0/0
  4328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4329 ;;      Params:         8       0       0       0       0       0       0       0       0
  4330 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4331 ;;      Temps:          8       0       0       0       0       0       0       0       0
  4332 ;;      Totals:        20       0       0       0       0       0       0       0       0
  4333 ;;Total ram usage:       20 bytes
  4334 ;; Hardware stack levels used:    1
  4335 ;; This function calls:
  4336 ;;		Nothing
  4337 ;; This function is called by:
  4338 ;;		_sprintf
  4339 ;;		___flsub
  4340 ;; This function uses a non-reentrant model
  4341 ;;
  4342                           
  4343                           	psect	text13
  4344  00184C                     __ptext13:
  4345                           	opt stack 0
  4346  00184C                     ___fladd:
  4347                           	opt stack 27
  4348                           
  4349                           ;incstack = 0
  4350  00184C  5038               	movf	___fladd@b+3,w,c
  4351  00184E  0B80               	andlw	128
  4352  001850  6E45               	movwf	___fladd@signs,c
  4353  001852  5038               	movf	___fladd@b+3,w,c
  4354  001854  2438               	addwf	___fladd@b+3,w,c
  4355  001856  6E47               	movwf	___fladd@bexp,c
  4356  001858  BE37               	btfsc	___fladd@b+2,7,c
  4357  00185A  8047               	bsf	___fladd@bexp,0,c
  4358  00185C  5047               	movf	___fladd@bexp,w,c
  4359  00185E  B4D8               	btfsc	status,2,c
  4360  001860  D00D               	goto	l2368
  4361  001862  2847               	incf	___fladd@bexp,w,c
  4362  001864  A4D8               	btfss	status,2,c
  4363  001866  D008               	goto	l2364
  4364  001868  0E00               	movlw	0
  4365  00186A  6E35               	movwf	___fladd@b,c
  4366  00186C  0E00               	movlw	0
  4367  00186E  6E36               	movwf	___fladd@b+1,c
  4368  001870  0E00               	movlw	0
  4369  001872  6E37               	movwf	___fladd@b+2,c
  4370  001874  0E00               	movlw	0
  4371  001876  6E38               	movwf	___fladd@b+3,c
  4372  001878                     l2364:
  4373  001878  8E37               	bsf	___fladd@b+2,7,c
  4374  00187A  D006               	goto	L6
  4375  00187C                     l2368:
  4376  00187C  0E00               	movlw	0
  4377  00187E  6E35               	movwf	___fladd@b,c
  4378  001880  0E00               	movlw	0
  4379  001882  6E36               	movwf	___fladd@b+1,c
  4380  001884  0E00               	movlw	0
  4381  001886  6E37               	movwf	___fladd@b+2,c
  4382  001888                     L6:
  4383  001888  0E00               	movlw	0
  4384  00188A  6E38               	movwf	___fladd@b+3,c
  4385  00188C  503C               	movf	___fladd@a+3,w,c
  4386  00188E  0B80               	andlw	128
  4387  001890  6E46               	movwf	___fladd@aexp,c
  4388  001892  5045               	movf	___fladd@signs,w,c
  4389  001894  1846               	xorwf	___fladd@aexp,w,c
  4390  001896  A4D8               	btfss	status,2,c
  4391  001898  8C45               	bsf	___fladd@signs,6,c
  4392  00189A  503C               	movf	___fladd@a+3,w,c
  4393  00189C  243C               	addwf	___fladd@a+3,w,c
  4394  00189E  6E46               	movwf	___fladd@aexp,c
  4395  0018A0  BE3B               	btfsc	___fladd@a+2,7,c
  4396  0018A2  8046               	bsf	___fladd@aexp,0,c
  4397  0018A4  5046               	movf	___fladd@aexp,w,c
  4398  0018A6  B4D8               	btfsc	status,2,c
  4399  0018A8  D00D               	goto	l2392
  4400  0018AA  2846               	incf	___fladd@aexp,w,c
  4401  0018AC  A4D8               	btfss	status,2,c
  4402  0018AE  D008               	goto	l2388
  4403  0018B0  0E00               	movlw	0
  4404  0018B2  6E39               	movwf	___fladd@a,c
  4405  0018B4  0E00               	movlw	0
  4406  0018B6  6E3A               	movwf	___fladd@a+1,c
  4407  0018B8  0E00               	movlw	0
  4408  0018BA  6E3B               	movwf	___fladd@a+2,c
  4409  0018BC  0E00               	movlw	0
  4410  0018BE  6E3C               	movwf	___fladd@a+3,c
  4411  0018C0                     l2388:
  4412  0018C0  8E3B               	bsf	___fladd@a+2,7,c
  4413  0018C2  D006               	goto	L7
  4414  0018C4                     l2392:
  4415  0018C4  0E00               	movlw	0
  4416  0018C6  6E39               	movwf	___fladd@a,c
  4417  0018C8  0E00               	movlw	0
  4418  0018CA  6E3A               	movwf	___fladd@a+1,c
  4419  0018CC  0E00               	movlw	0
  4420  0018CE  6E3B               	movwf	___fladd@a+2,c
  4421  0018D0                     L7:
  4422  0018D0  0E00               	movlw	0
  4423  0018D2  6E3C               	movwf	___fladd@a+3,c
  4424  0018D4  5047               	movf	___fladd@bexp,w,c
  4425  0018D6  5C46               	subwf	___fladd@aexp,w,c
  4426  0018D8  B0D8               	btfsc	status,0,c
  4427  0018DA  D022               	goto	l2430
  4428  0018DC  AC45               	btfss	___fladd@signs,6,c
  4429  0018DE  D002               	goto	l2400
  4430  0018E0  0E80               	movlw	128
  4431  0018E2  1A45               	xorwf	___fladd@signs,f,c
  4432  0018E4                     l2400:
  4433  0018E4  C047  F048         	movff	___fladd@bexp,___fladd@grs
  4434  0018E8  C046  F047         	movff	___fladd@aexp,___fladd@bexp
  4435  0018EC  C048  F046         	movff	___fladd@grs,___fladd@aexp
  4436  0018F0  C035  F048         	movff	___fladd@b,___fladd@grs
  4437  0018F4  C039  F035         	movff	___fladd@a,___fladd@b
  4438  0018F8  C048  F039         	movff	___fladd@grs,___fladd@a
  4439  0018FC  C036  F048         	movff	___fladd@b+1,___fladd@grs
  4440  001900  C03A  F036         	movff	___fladd@a+1,___fladd@b+1
  4441  001904  C048  F03A         	movff	___fladd@grs,___fladd@a+1
  4442  001908  C037  F048         	movff	___fladd@b+2,___fladd@grs
  4443  00190C  C03B  F037         	movff	___fladd@a+2,___fladd@b+2
  4444  001910  C048  F03B         	movff	___fladd@grs,___fladd@a+2
  4445  001914  C038  F048         	movff	___fladd@b+3,___fladd@grs
  4446  001918  C03C  F038         	movff	___fladd@a+3,___fladd@b+3
  4447  00191C  C048  F03C         	movff	___fladd@grs,___fladd@a+3
  4448  001920                     l2430:
  4449  001920  0E00               	movlw	0
  4450  001922  6E48               	movwf	___fladd@grs,c
  4451  001924  5047               	movf	___fladd@bexp,w,c
  4452  001926  6E3D               	movwf	??___fladd& (0+255),c
  4453  001928  6A3E               	clrf	(??___fladd+1)& (0+255),c
  4454  00192A  1E3D               	comf	??___fladd,f,c
  4455  00192C  1E3E               	comf	??___fladd+1,f,c
  4456  00192E  4A3D               	infsnz	??___fladd,f,c
  4457  001930  2A3E               	incf	??___fladd+1,f,c
  4458  001932  5046               	movf	___fladd@aexp,w,c
  4459  001934  6E3F               	movwf	(??___fladd+2)& (0+255),c
  4460  001936  6A40               	clrf	(??___fladd+3)& (0+255),c
  4461  001938  503D               	movf	??___fladd,w,c
  4462  00193A  263F               	addwf	??___fladd+2,f,c
  4463  00193C  503E               	movf	??___fladd+1,w,c
  4464  00193E  2240               	addwfc	??___fladd+3,f,c
  4465  001940  BE40               	btfsc	??___fladd+3,7,c
  4466  001942  D02C               	goto	l767
  4467  001944  5040               	movf	??___fladd+3,w,c
  4468  001946  E104               	bnz	u2190
  4469  001948  0E1A               	movlw	26
  4470  00194A  5C3F               	subwf	??___fladd+2,w,c
  4471  00194C  A0D8               	btfss	status,0,c
  4472  00194E  D026               	goto	l767
  4473  001950                     u2190:
  4474  001950  5035               	movf	___fladd@b,w,c
  4475  001952  1036               	iorwf	___fladd@b+1,w,c
  4476  001954  1037               	iorwf	___fladd@b+2,w,c
  4477  001956  1038               	iorwf	___fladd@b+3,w,c
  4478  001958  B4D8               	btfsc	status,2,c
  4479  00195A  D002               	goto	u2200
  4480  00195C  0E01               	movlw	1
  4481  00195E  D001               	goto	u2210
  4482  001960                     u2200:
  4483  001960  0E00               	movlw	0
  4484  001962                     u2210:
  4485  001962  6E48               	movwf	___fladd@grs,c
  4486  001964  0E00               	movlw	0
  4487  001966  6E35               	movwf	___fladd@b,c
  4488  001968  0E00               	movlw	0
  4489  00196A  6E36               	movwf	___fladd@b+1,c
  4490  00196C  0E00               	movlw	0
  4491  00196E  6E37               	movwf	___fladd@b+2,c
  4492  001970  0E00               	movlw	0
  4493  001972  6E38               	movwf	___fladd@b+3,c
  4494  001974  C046  F047         	movff	___fladd@aexp,___fladd@bexp
  4495  001978  D015               	goto	l766
  4496  00197A                     l768:
  4497  00197A  A048               	btfss	___fladd@grs,0,c
  4498  00197C  D005               	goto	l2442
  4499  00197E  90D8               	bcf	status,0,c
  4500  001980  3048               	rrcf	___fladd@grs,w,c
  4501  001982  0901               	iorlw	1
  4502  001984  6E48               	movwf	___fladd@grs,c
  4503  001986  D002               	goto	l2444
  4504  001988                     l2442:
  4505  001988  90D8               	bcf	status,0,c
  4506  00198A  3248               	rrcf	___fladd@grs,f,c
  4507  00198C                     l2444:
  4508  00198C  B035               	btfsc	___fladd@b,0,c
  4509  00198E  8E48               	bsf	___fladd@grs,7,c
  4510  001990  3438               	rlcf	___fladd@b+3,w,c
  4511  001992  3238               	rrcf	___fladd@b+3,f,c
  4512  001994  3237               	rrcf	___fladd@b+2,f,c
  4513  001996  3236               	rrcf	___fladd@b+1,f,c
  4514  001998  3235               	rrcf	___fladd@b,f,c
  4515  00199A  2A47               	incf	___fladd@bexp,f,c
  4516  00199C                     l767:
  4517  00199C  5046               	movf	___fladd@aexp,w,c
  4518  00199E  5C47               	subwf	___fladd@bexp,w,c
  4519  0019A0  A0D8               	btfss	status,0,c
  4520  0019A2  D7EB               	goto	l768
  4521  0019A4                     l766:
  4522  0019A4  BC45               	btfsc	___fladd@signs,6,c
  4523  0019A6  D029               	goto	l2476
  4524  0019A8  5047               	movf	___fladd@bexp,w,c
  4525  0019AA  A4D8               	btfss	status,2,c
  4526  0019AC  D009               	goto	l2458
  4527  0019AE  0E00               	movlw	0
  4528  0019B0  6E35               	movwf	?___fladd,c
  4529  0019B2  0E00               	movlw	0
  4530  0019B4  6E36               	movwf	?___fladd+1,c
  4531  0019B6  0E00               	movlw	0
  4532  0019B8  6E37               	movwf	?___fladd+2,c
  4533  0019BA  0E00               	movlw	0
  4534  0019BC  6E38               	movwf	?___fladd+3,c
  4535  0019BE  0012               	return	
  4536  0019C0                     l2458:
  4537  0019C0  5039               	movf	___fladd@a,w,c
  4538  0019C2  2635               	addwf	___fladd@b,f,c
  4539  0019C4  503A               	movf	___fladd@a+1,w,c
  4540  0019C6  2236               	addwfc	___fladd@b+1,f,c
  4541  0019C8  503B               	movf	___fladd@a+2,w,c
  4542  0019CA  2237               	addwfc	___fladd@b+2,f,c
  4543  0019CC  503C               	movf	___fladd@a+3,w,c
  4544  0019CE  2238               	addwfc	___fladd@b+3,f,c
  4545  0019D0  A038               	btfss	___fladd@b+3,0,c
  4546  0019D2  D083               	goto	l2512
  4547  0019D4  A048               	btfss	___fladd@grs,0,c
  4548  0019D6  D006               	goto	l2466
  4549  0019D8  90D8               	bcf	status,0,c
  4550  0019DA  3248               	rrcf	___fladd@grs,f,c
  4551  0019DC  5048               	movf	___fladd@grs,w,c
  4552  0019DE  0901               	iorlw	1
  4553  0019E0  6E48               	movwf	___fladd@grs,c
  4554  0019E2  D002               	goto	l2468
  4555  0019E4                     l2466:
  4556  0019E4  90D8               	bcf	status,0,c
  4557  0019E6  3248               	rrcf	___fladd@grs,f,c
  4558  0019E8                     l2468:
  4559  0019E8  B035               	btfsc	___fladd@b,0,c
  4560  0019EA  8E48               	bsf	___fladd@grs,7,c
  4561  0019EC  3438               	rlcf	___fladd@b+3,w,c
  4562  0019EE  3238               	rrcf	___fladd@b+3,f,c
  4563  0019F0  3237               	rrcf	___fladd@b+2,f,c
  4564  0019F2  3236               	rrcf	___fladd@b+1,f,c
  4565  0019F4  3235               	rrcf	___fladd@b,f,c
  4566  0019F6  2A47               	incf	___fladd@bexp,f,c
  4567  0019F8  D070               	goto	l2512
  4568  0019FA                     l2476:
  4569  0019FA  5039               	movf	___fladd@a,w,c
  4570  0019FC  5C35               	subwf	___fladd@b,w,c
  4571  0019FE  503A               	movf	___fladd@a+1,w,c
  4572  001A00  5836               	subwfb	___fladd@b+1,w,c
  4573  001A02  503B               	movf	___fladd@a+2,w,c
  4574  001A04  5837               	subwfb	___fladd@b+2,w,c
  4575  001A06  5038               	movf	___fladd@b+3,w,c
  4576  001A08  0A80               	xorlw	128
  4577  001A0A  6E3D               	movwf	??___fladd& (0+255),c
  4578  001A0C  503C               	movf	___fladd@a+3,w,c
  4579  001A0E  0A80               	xorlw	128
  4580  001A10  583D               	subwfb	??___fladd& (0+255),w,c
  4581  001A12  B0D8               	btfsc	status,0,c
  4582  001A14  D036               	goto	l2486
  4583  001A16  C035  F03D         	movff	___fladd@b,??___fladd
  4584  001A1A  C036  F03E         	movff	___fladd@b+1,??___fladd+1
  4585  001A1E  C037  F03F         	movff	___fladd@b+2,??___fladd+2
  4586  001A22  C038  F040         	movff	___fladd@b+3,??___fladd+3
  4587  001A26  1E3D               	comf	??___fladd,f,c
  4588  001A28  1E3E               	comf	??___fladd+1,f,c
  4589  001A2A  1E3F               	comf	??___fladd+2,f,c
  4590  001A2C  1E40               	comf	??___fladd+3,f,c
  4591  001A2E  2A3D               	incf	??___fladd,f,c
  4592  001A30  0E00               	movlw	0
  4593  001A32  223E               	addwfc	??___fladd+1,f,c
  4594  001A34  223F               	addwfc	??___fladd+2,f,c
  4595  001A36  2240               	addwfc	??___fladd+3,f,c
  4596  001A38  5039               	movf	___fladd@a,w,c
  4597  001A3A  243D               	addwf	??___fladd,w,c
  4598  001A3C  6E41               	movwf	(??___fladd+4)& (0+255),c
  4599  001A3E  503A               	movf	___fladd@a+1,w,c
  4600  001A40  203E               	addwfc	??___fladd+1,w,c
  4601  001A42  6E42               	movwf	(??___fladd+5)& (0+255),c
  4602  001A44  503B               	movf	___fladd@a+2,w,c
  4603  001A46  203F               	addwfc	??___fladd+2,w,c
  4604  001A48  6E43               	movwf	(??___fladd+6)& (0+255),c
  4605  001A4A  503C               	movf	___fladd@a+3,w,c
  4606  001A4C  2040               	addwfc	??___fladd+3,w,c
  4607  001A4E  6E44               	movwf	(??___fladd+7)& (0+255),c
  4608  001A50  0EFF               	movlw	255
  4609  001A52  2441               	addwf	??___fladd+4,w,c
  4610  001A54  6E35               	movwf	___fladd@b,c
  4611  001A56  0EFF               	movlw	255
  4612  001A58  2042               	addwfc	??___fladd+5,w,c
  4613  001A5A  6E36               	movwf	___fladd@b+1,c
  4614  001A5C  0EFF               	movlw	255
  4615  001A5E  2043               	addwfc	??___fladd+6,w,c
  4616  001A60  6E37               	movwf	___fladd@b+2,c
  4617  001A62  0EFF               	movlw	255
  4618  001A64  2044               	addwfc	??___fladd+7,w,c
  4619  001A66  6E38               	movwf	___fladd@b+3,c
  4620  001A68  0E80               	movlw	128
  4621  001A6A  1A45               	xorwf	___fladd@signs,f,c
  4622  001A6C  6C48               	negf	___fladd@grs,c
  4623  001A6E  5048               	movf	___fladd@grs,w,c
  4624  001A70  A4D8               	btfss	status,2,c
  4625  001A72  D00F               	goto	l783
  4626  001A74  0E01               	movlw	1
  4627  001A76  2635               	addwf	___fladd@b,f,c
  4628  001A78  0E00               	movlw	0
  4629  001A7A  2236               	addwfc	___fladd@b+1,f,c
  4630  001A7C  2237               	addwfc	___fladd@b+2,f,c
  4631  001A7E  2238               	addwfc	___fladd@b+3,f,c
  4632  001A80  D008               	goto	l783
  4633  001A82                     l2486:
  4634  001A82  5039               	movf	___fladd@a,w,c
  4635  001A84  5E35               	subwf	___fladd@b,f,c
  4636  001A86  503A               	movf	___fladd@a+1,w,c
  4637  001A88  5A36               	subwfb	___fladd@b+1,f,c
  4638  001A8A  503B               	movf	___fladd@a+2,w,c
  4639  001A8C  5A37               	subwfb	___fladd@b+2,f,c
  4640  001A8E  503C               	movf	___fladd@a+3,w,c
  4641  001A90  5A38               	subwfb	___fladd@b+3,f,c
  4642  001A92                     l783:
  4643  001A92  5035               	movf	___fladd@b,w,c
  4644  001A94  1036               	iorwf	___fladd@b+1,w,c
  4645  001A96  1037               	iorwf	___fladd@b+2,w,c
  4646  001A98  1038               	iorwf	___fladd@b+3,w,c
  4647  001A9A  A4D8               	btfss	status,2,c
  4648  001A9C  D01C               	goto	l2510
  4649  001A9E  5048               	movf	___fladd@grs,w,c
  4650  001AA0  A4D8               	btfss	status,2,c
  4651  001AA2  D019               	goto	l2510
  4652  001AA4  0E00               	movlw	0
  4653  001AA6  6E35               	movwf	?___fladd,c
  4654  001AA8  0E00               	movlw	0
  4655  001AAA  6E36               	movwf	?___fladd+1,c
  4656  001AAC  0E00               	movlw	0
  4657  001AAE  6E37               	movwf	?___fladd+2,c
  4658  001AB0  0E00               	movlw	0
  4659  001AB2  6E38               	movwf	?___fladd+3,c
  4660  001AB4  0012               	return	
  4661  001AB6                     l2494:
  4662  001AB6  90D8               	bcf	status,0,c
  4663  001AB8  3635               	rlcf	___fladd@b,f,c
  4664  001ABA  3636               	rlcf	___fladd@b+1,f,c
  4665  001ABC  3637               	rlcf	___fladd@b+2,f,c
  4666  001ABE  3638               	rlcf	___fladd@b+3,f,c
  4667  001AC0  BE48               	btfsc	___fladd@grs,7,c
  4668  001AC2  8035               	bsf	___fladd@b,0,c
  4669  001AC4  A048               	btfss	___fladd@grs,0,c
  4670  001AC6  D002               	goto	l2504
  4671  001AC8  80D8               	bsf	status,0,c
  4672  001ACA  D001               	goto	L8
  4673  001ACC                     l2504:
  4674  001ACC  90D8               	bcf	status,0,c
  4675  001ACE                     L8:
  4676  001ACE  3648               	rlcf	___fladd@grs,f,c
  4677  001AD0  5047               	movf	___fladd@bexp,w,c
  4678  001AD2  A4D8               	btfss	status,2,c
  4679  001AD4  0647               	decf	___fladd@bexp,f,c
  4680  001AD6                     l2510:
  4681  001AD6  AE37               	btfss	___fladd@b+2,7,c
  4682  001AD8  D7EE               	goto	l2494
  4683  001ADA                     l2512:
  4684  001ADA  0E00               	movlw	0
  4685  001ADC  6E46               	movwf	___fladd@aexp,c
  4686  001ADE  AE48               	btfss	___fladd@grs,7,c
  4687  001AE0  D00A               	goto	l792
  4688  001AE2  C048  F03D         	movff	___fladd@grs,??___fladd
  4689  001AE6  0E7F               	movlw	127
  4690  001AE8  163D               	andwf	??___fladd,f,c
  4691  001AEA  A4D8               	btfss	status,2,c
  4692  001AEC  D002               	goto	l2520
  4693  001AEE  A035               	btfss	___fladd@b,0,c
  4694  001AF0  D002               	goto	l792
  4695  001AF2                     l2520:
  4696  001AF2  0E01               	movlw	1
  4697  001AF4  6E46               	movwf	___fladd@aexp,c
  4698  001AF6                     l792:
  4699  001AF6  5046               	movf	___fladd@aexp,w,c
  4700  001AF8  B4D8               	btfsc	status,2,c
  4701  001AFA  D020               	goto	l2530
  4702  001AFC  0E01               	movlw	1
  4703  001AFE  2635               	addwf	___fladd@b,f,c
  4704  001B00  0E00               	movlw	0
  4705  001B02  2236               	addwfc	___fladd@b+1,f,c
  4706  001B04  2237               	addwfc	___fladd@b+2,f,c
  4707  001B06  2238               	addwfc	___fladd@b+3,f,c
  4708  001B08  A038               	btfss	___fladd@b+3,0,c
  4709  001B0A  D018               	goto	l2530
  4710  001B0C  C035  F03D         	movff	___fladd@b,??___fladd
  4711  001B10  C036  F03E         	movff	___fladd@b+1,??___fladd+1
  4712  001B14  C037  F03F         	movff	___fladd@b+2,??___fladd+2
  4713  001B18  C038  F040         	movff	___fladd@b+3,??___fladd+3
  4714  001B1C  3440               	rlcf	??___fladd+3,w,c
  4715  001B1E  3240               	rrcf	??___fladd+3,f,c
  4716  001B20  323F               	rrcf	??___fladd+2,f,c
  4717  001B22  323E               	rrcf	??___fladd+1,f,c
  4718  001B24  323D               	rrcf	??___fladd,f,c
  4719  001B26  C03D  F035         	movff	??___fladd,___fladd@b
  4720  001B2A  C03E  F036         	movff	??___fladd+1,___fladd@b+1
  4721  001B2E  C03F  F037         	movff	??___fladd+2,___fladd@b+2
  4722  001B32  C040  F038         	movff	??___fladd+3,___fladd@b+3
  4723  001B36  2847               	incf	___fladd@bexp,w,c
  4724  001B38  A4D8               	btfss	status,2,c
  4725  001B3A  2A47               	incf	___fladd@bexp,f,c
  4726  001B3C                     l2530:
  4727  001B3C  2847               	incf	___fladd@bexp,w,c
  4728  001B3E  B4D8               	btfsc	status,2,c
  4729  001B40  D003               	goto	l2534
  4730  001B42  5047               	movf	___fladd@bexp,w,c
  4731  001B44  A4D8               	btfss	status,2,c
  4732  001B46  D00D               	goto	l2538
  4733  001B48                     l2534:
  4734  001B48  0E00               	movlw	0
  4735  001B4A  6E35               	movwf	___fladd@b,c
  4736  001B4C  0E00               	movlw	0
  4737  001B4E  6E36               	movwf	___fladd@b+1,c
  4738  001B50  0E00               	movlw	0
  4739  001B52  6E37               	movwf	___fladd@b+2,c
  4740  001B54  0E00               	movlw	0
  4741  001B56  6E38               	movwf	___fladd@b+3,c
  4742  001B58  5047               	movf	___fladd@bexp,w,c
  4743  001B5A  A4D8               	btfss	status,2,c
  4744  001B5C  D002               	goto	l2538
  4745  001B5E  0E00               	movlw	0
  4746  001B60  6E45               	movwf	___fladd@signs,c
  4747  001B62                     l2538:
  4748  001B62  A047               	btfss	___fladd@bexp,0,c
  4749  001B64  D002               	goto	l2542
  4750  001B66  8E37               	bsf	___fladd@b+2,7,c
  4751  001B68  D001               	goto	l2544
  4752  001B6A                     l2542:
  4753  001B6A  9E37               	bcf	___fladd@b+2,7,c
  4754  001B6C                     l2544:
  4755  001B6C  90D8               	bcf	status,0,c
  4756  001B6E  3047               	rrcf	___fladd@bexp,w,c
  4757  001B70  6E38               	movwf	___fladd@b+3,c
  4758  001B72  BE45               	btfsc	___fladd@signs,7,c
  4759  001B74  8E38               	bsf	___fladd@b+3,7,c
  4760  001B76  C035  F035         	movff	___fladd@b,?___fladd
  4761  001B7A  C036  F036         	movff	___fladd@b+1,?___fladd+1
  4762  001B7E  C037  F037         	movff	___fladd@b+2,?___fladd+2
  4763  001B82  C038  F038         	movff	___fladd@b+3,?___fladd+3
  4764  001B86  0012               	return	
  4765  001B88                     __end_of___fladd:
  4766                           	opt stack 0
  4767                           tblptru	equ	0xFF8
  4768                           tblptrh	equ	0xFF7
  4769                           tblptrl	equ	0xFF6
  4770                           tablat	equ	0xFF5
  4771                           prodh	equ	0xFF4
  4772                           prodl	equ	0xFF3
  4773                           postinc0	equ	0xFEE
  4774                           wreg	equ	0xFE8
  4775                           indf2	equ	0xFDF
  4776                           postinc2	equ	0xFDE
  4777                           fsr2h	equ	0xFDA
  4778                           fsr2l	equ	0xFD9
  4779                           status	equ	0xFD8
  4780                           
  4781 ;; *************** function ___flneg *****************
  4782 ;; Defined at:
  4783 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\flneg.c"
  4784 ;; Parameters:    Size  Location     Type
  4785 ;;  f1              4    0[COMRAM] unsigned char 
  4786 ;; Auto vars:     Size  Location     Type
  4787 ;;		None
  4788 ;; Return value:  Size  Location     Type
  4789 ;;                  4    0[COMRAM] unsigned char 
  4790 ;; Registers used:
  4791 ;;		wreg, status,2, status,0
  4792 ;; Tracked objects:
  4793 ;;		On entry : 0/0
  4794 ;;		On exit  : 0/0
  4795 ;;		Unchanged: 0/0
  4796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4797 ;;      Params:         4       0       0       0       0       0       0       0       0
  4798 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4799 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4800 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4801 ;;Total ram usage:        4 bytes
  4802 ;; Hardware stack levels used:    1
  4803 ;; This function calls:
  4804 ;;		Nothing
  4805 ;; This function is called by:
  4806 ;;		_sprintf
  4807 ;; This function uses a non-reentrant model
  4808 ;;
  4809                           
  4810                           	psect	text14
  4811  002F08                     __ptext14:
  4812                           	opt stack 0
  4813  002F08                     ___flneg:
  4814                           	opt stack 28
  4815                           
  4816                           ;incstack = 0
  4817  002F08  5001               	movf	___flneg@f1,w,c
  4818  002F0A  1002               	iorwf	___flneg@f1+1,w,c
  4819  002F0C  1003               	iorwf	___flneg@f1+2,w,c
  4820  002F0E  1004               	iorwf	___flneg@f1+3,w,c
  4821  002F10  B4D8               	btfsc	status,2,c
  4822  002F12  D008               	goto	l3144
  4823  002F14  0E00               	movlw	0
  4824  002F16  1A01               	xorwf	___flneg@f1,f,c
  4825  002F18  0E00               	movlw	0
  4826  002F1A  1A02               	xorwf	___flneg@f1+1,f,c
  4827  002F1C  0E00               	movlw	0
  4828  002F1E  1A03               	xorwf	___flneg@f1+2,f,c
  4829  002F20  0E80               	movlw	128
  4830  002F22  1A04               	xorwf	___flneg@f1+3,f,c
  4831  002F24                     l3144:
  4832  002F24  C001  F001         	movff	___flneg@f1,?___flneg
  4833  002F28  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  4834  002F2C  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  4835  002F30  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  4836  002F34  0012               	return	
  4837  002F36                     __end_of___flneg:
  4838                           	opt stack 0
  4839                           tblptru	equ	0xFF8
  4840                           tblptrh	equ	0xFF7
  4841                           tblptrl	equ	0xFF6
  4842                           tablat	equ	0xFF5
  4843                           prodh	equ	0xFF4
  4844                           prodl	equ	0xFF3
  4845                           postinc0	equ	0xFEE
  4846                           wreg	equ	0xFE8
  4847                           indf2	equ	0xFDF
  4848                           postinc2	equ	0xFDE
  4849                           fsr2h	equ	0xFDA
  4850                           fsr2l	equ	0xFD9
  4851                           status	equ	0xFD8
  4852                           
  4853 ;; *************** function ___flge *****************
  4854 ;; Defined at:
  4855 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\flge.c"
  4856 ;; Parameters:    Size  Location     Type
  4857 ;;  ff1             4    0[COMRAM] unsigned char 
  4858 ;;  ff2             4    4[COMRAM] unsigned char 
  4859 ;; Auto vars:     Size  Location     Type
  4860 ;;		None
  4861 ;; Return value:  Size  Location     Type
  4862 ;;		None               void
  4863 ;; Registers used:
  4864 ;;		wreg, status,2, status,0
  4865 ;; Tracked objects:
  4866 ;;		On entry : 0/0
  4867 ;;		On exit  : 0/0
  4868 ;;		Unchanged: 0/0
  4869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4870 ;;      Params:         8       0       0       0       0       0       0       0       0
  4871 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4872 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4873 ;;      Totals:        12       0       0       0       0       0       0       0       0
  4874 ;;Total ram usage:       12 bytes
  4875 ;; Hardware stack levels used:    1
  4876 ;; This function calls:
  4877 ;;		Nothing
  4878 ;; This function is called by:
  4879 ;;		_ricarica
  4880 ;;		_sprintf
  4881 ;; This function uses a non-reentrant model
  4882 ;;
  4883                           
  4884                           	psect	text15
  4885  002756                     __ptext15:
  4886                           	opt stack 0
  4887  002756                     ___flge:
  4888                           	opt stack 28
  4889                           
  4890                           ;incstack = 0
  4891  002756  0E00               	movlw	0
  4892  002758  1401               	andwf	___flge@ff1,w,c
  4893  00275A  6E09               	movwf	??___flge& (0+255),c
  4894  00275C  0E00               	movlw	0
  4895  00275E  1402               	andwf	___flge@ff1+1,w,c
  4896  002760  6E0A               	movwf	(??___flge+1)& (0+255),c
  4897  002762  0E80               	movlw	128
  4898  002764  1403               	andwf	___flge@ff1+2,w,c
  4899  002766  6E0B               	movwf	(??___flge+2)& (0+255),c
  4900  002768  0E7F               	movlw	127
  4901  00276A  1404               	andwf	___flge@ff1+3,w,c
  4902  00276C  6E0C               	movwf	(??___flge+3)& (0+255),c
  4903  00276E  5009               	movf	??___flge,w,c
  4904  002770  100A               	iorwf	??___flge+1,w,c
  4905  002772  100B               	iorwf	??___flge+2,w,c
  4906  002774  100C               	iorwf	??___flge+3,w,c
  4907  002776  A4D8               	btfss	status,2,c
  4908  002778  D008               	goto	l3122
  4909  00277A  0E00               	movlw	0
  4910  00277C  6E01               	movwf	___flge@ff1,c
  4911  00277E  0E00               	movlw	0
  4912  002780  6E02               	movwf	___flge@ff1+1,c
  4913  002782  0E00               	movlw	0
  4914  002784  6E03               	movwf	___flge@ff1+2,c
  4915  002786  0E00               	movlw	0
  4916  002788  6E04               	movwf	___flge@ff1+3,c
  4917  00278A                     l3122:
  4918  00278A  0E00               	movlw	0
  4919  00278C  1405               	andwf	___flge@ff2,w,c
  4920  00278E  6E09               	movwf	??___flge& (0+255),c
  4921  002790  0E00               	movlw	0
  4922  002792  1406               	andwf	___flge@ff2+1,w,c
  4923  002794  6E0A               	movwf	(??___flge+1)& (0+255),c
  4924  002796  0E80               	movlw	128
  4925  002798  1407               	andwf	___flge@ff2+2,w,c
  4926  00279A  6E0B               	movwf	(??___flge+2)& (0+255),c
  4927  00279C  0E7F               	movlw	127
  4928  00279E  1408               	andwf	___flge@ff2+3,w,c
  4929  0027A0  6E0C               	movwf	(??___flge+3)& (0+255),c
  4930  0027A2  5009               	movf	??___flge,w,c
  4931  0027A4  100A               	iorwf	??___flge+1,w,c
  4932  0027A6  100B               	iorwf	??___flge+2,w,c
  4933  0027A8  100C               	iorwf	??___flge+3,w,c
  4934  0027AA  A4D8               	btfss	status,2,c
  4935  0027AC  D008               	goto	l3126
  4936  0027AE  0E00               	movlw	0
  4937  0027B0  6E05               	movwf	___flge@ff2,c
  4938  0027B2  0E00               	movlw	0
  4939  0027B4  6E06               	movwf	___flge@ff2+1,c
  4940  0027B6  0E00               	movlw	0
  4941  0027B8  6E07               	movwf	___flge@ff2+2,c
  4942  0027BA  0E00               	movlw	0
  4943  0027BC  6E08               	movwf	___flge@ff2+3,c
  4944  0027BE                     l3126:
  4945  0027BE  AE04               	btfss	___flge@ff1+3,7,c
  4946  0027C0  D01D               	goto	l3130
  4947  0027C2  C001  F009         	movff	___flge@ff1,??___flge
  4948  0027C6  C002  F00A         	movff	___flge@ff1+1,??___flge+1
  4949  0027CA  C003  F00B         	movff	___flge@ff1+2,??___flge+2
  4950  0027CE  C004  F00C         	movff	___flge@ff1+3,??___flge+3
  4951  0027D2  1E09               	comf	??___flge,f,c
  4952  0027D4  1E0A               	comf	??___flge+1,f,c
  4953  0027D6  1E0B               	comf	??___flge+2,f,c
  4954  0027D8  1E0C               	comf	??___flge+3,f,c
  4955  0027DA  2A09               	incf	??___flge,f,c
  4956  0027DC  0E00               	movlw	0
  4957  0027DE  220A               	addwfc	??___flge+1,f,c
  4958  0027E0  220B               	addwfc	??___flge+2,f,c
  4959  0027E2  220C               	addwfc	??___flge+3,f,c
  4960  0027E4  0E00               	movlw	0
  4961  0027E6  2409               	addwf	??___flge,w,c
  4962  0027E8  6E01               	movwf	___flge@ff1,c
  4963  0027EA  0E00               	movlw	0
  4964  0027EC  200A               	addwfc	??___flge+1,w,c
  4965  0027EE  6E02               	movwf	___flge@ff1+1,c
  4966  0027F0  0E00               	movlw	0
  4967  0027F2  200B               	addwfc	??___flge+2,w,c
  4968  0027F4  6E03               	movwf	___flge@ff1+2,c
  4969  0027F6  0E80               	movlw	128
  4970  0027F8  200C               	addwfc	??___flge+3,w,c
  4971  0027FA  6E04               	movwf	___flge@ff1+3,c
  4972  0027FC                     l3130:
  4973  0027FC  AE08               	btfss	___flge@ff2+3,7,c
  4974  0027FE  D01D               	goto	l489
  4975  002800  C005  F009         	movff	___flge@ff2,??___flge
  4976  002804  C006  F00A         	movff	___flge@ff2+1,??___flge+1
  4977  002808  C007  F00B         	movff	___flge@ff2+2,??___flge+2
  4978  00280C  C008  F00C         	movff	___flge@ff2+3,??___flge+3
  4979  002810  1E09               	comf	??___flge,f,c
  4980  002812  1E0A               	comf	??___flge+1,f,c
  4981  002814  1E0B               	comf	??___flge+2,f,c
  4982  002816  1E0C               	comf	??___flge+3,f,c
  4983  002818  2A09               	incf	??___flge,f,c
  4984  00281A  0E00               	movlw	0
  4985  00281C  220A               	addwfc	??___flge+1,f,c
  4986  00281E  220B               	addwfc	??___flge+2,f,c
  4987  002820  220C               	addwfc	??___flge+3,f,c
  4988  002822  0E00               	movlw	0
  4989  002824  2409               	addwf	??___flge,w,c
  4990  002826  6E05               	movwf	___flge@ff2,c
  4991  002828  0E00               	movlw	0
  4992  00282A  200A               	addwfc	??___flge+1,w,c
  4993  00282C  6E06               	movwf	___flge@ff2+1,c
  4994  00282E  0E00               	movlw	0
  4995  002830  200B               	addwfc	??___flge+2,w,c
  4996  002832  6E07               	movwf	___flge@ff2+2,c
  4997  002834  0E80               	movlw	128
  4998  002836  200C               	addwfc	??___flge+3,w,c
  4999  002838  6E08               	movwf	___flge@ff2+3,c
  5000  00283A                     l489:
  5001  00283A  0E00               	movlw	0
  5002  00283C  1A01               	xorwf	___flge@ff1,f,c
  5003  00283E  0E00               	movlw	0
  5004  002840  1A02               	xorwf	___flge@ff1+1,f,c
  5005  002842  0E00               	movlw	0
  5006  002844  1A03               	xorwf	___flge@ff1+2,f,c
  5007  002846  0E80               	movlw	128
  5008  002848  1A04               	xorwf	___flge@ff1+3,f,c
  5009  00284A  0E00               	movlw	0
  5010  00284C  1A05               	xorwf	___flge@ff2,f,c
  5011  00284E  0E00               	movlw	0
  5012  002850  1A06               	xorwf	___flge@ff2+1,f,c
  5013  002852  0E00               	movlw	0
  5014  002854  1A07               	xorwf	___flge@ff2+2,f,c
  5015  002856  0E80               	movlw	128
  5016  002858  1A08               	xorwf	___flge@ff2+3,f,c
  5017  00285A  5005               	movf	___flge@ff2,w,c
  5018  00285C  5C01               	subwf	___flge@ff1,w,c
  5019  00285E  5006               	movf	___flge@ff2+1,w,c
  5020  002860  5802               	subwfb	___flge@ff1+1,w,c
  5021  002862  5007               	movf	___flge@ff2+2,w,c
  5022  002864  5803               	subwfb	___flge@ff1+2,w,c
  5023  002866  5008               	movf	___flge@ff2+3,w,c
  5024  002868  5804               	subwfb	___flge@ff1+3,w,c
  5025  00286A  B0D8               	btfsc	status,0,c
  5026  00286C  D002               	goto	l3136
  5027  00286E  90D8               	bcf	status,0,c
  5028  002870  0012               	return	
  5029  002872                     l3136:
  5030  002872  80D8               	bsf	status,0,c
  5031  002874  0012               	return	
  5032  002876                     __end_of___flge:
  5033                           	opt stack 0
  5034                           tblptru	equ	0xFF8
  5035                           tblptrh	equ	0xFF7
  5036                           tblptrl	equ	0xFF6
  5037                           tablat	equ	0xFF5
  5038                           prodh	equ	0xFF4
  5039                           prodl	equ	0xFF3
  5040                           postinc0	equ	0xFEE
  5041                           wreg	equ	0xFE8
  5042                           indf2	equ	0xFDF
  5043                           postinc2	equ	0xFDE
  5044                           fsr2h	equ	0xFDA
  5045                           fsr2l	equ	0xFD9
  5046                           status	equ	0xFD8
  5047                           
  5048 ;; *************** function _read_adc *****************
  5049 ;; Defined at:
  5050 ;;		line 76 in file "tester.c"
  5051 ;; Parameters:    Size  Location     Type
  5052 ;;		None
  5053 ;; Auto vars:     Size  Location     Type
  5054 ;;  i               1   41[COMRAM] unsigned char 
  5055 ;; Return value:  Size  Location     Type
  5056 ;;                  1    wreg      void 
  5057 ;; Registers used:
  5058 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5059 ;; Tracked objects:
  5060 ;;		On entry : 0/0
  5061 ;;		On exit  : 0/0
  5062 ;;		Unchanged: 0/0
  5063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5064 ;;      Params:         0       0       0       0       0       0       0       0       0
  5065 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5066 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5067 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5068 ;;Total ram usage:        3 bytes
  5069 ;; Hardware stack levels used:    1
  5070 ;; Hardware stack levels required when called:    2
  5071 ;; This function calls:
  5072 ;;		___awdiv
  5073 ;;		___fldiv
  5074 ;;		___flmul
  5075 ;;		___wmul
  5076 ;;		___xxtofl
  5077 ;;		_delay_ms
  5078 ;; This function is called by:
  5079 ;;		_main
  5080 ;;		_ricarica
  5081 ;; This function uses a non-reentrant model
  5082 ;;
  5083                           
  5084                           	psect	text16
  5085  0020B6                     __ptext16:
  5086                           	opt stack 0
  5087  0020B6                     _read_adc:
  5088                           	opt stack 27
  5089                           
  5090                           ;tester.c: 77: for (char i = 0; i < 3; i++) {
  5091                           
  5092                           ;incstack = 0
  5093  0020B6  0E00               	movlw	0
  5094  0020B8  6E2A               	movwf	read_adc@i,c
  5095  0020BA                     l3344:
  5096  0020BA  0E02               	movlw	2
  5097  0020BC  642A               	cpfsgt	read_adc@i,c
  5098  0020BE  D001               	goto	l3348
  5099  0020C0  D044               	goto	l3362
  5100  0020C2                     l3348:
  5101                           
  5102                           ;tester.c: 78: ADCON0 = combinazioni[i];
  5103  0020C2  502A               	movf	read_adc@i,w,c
  5104  0020C4  0D01               	mullw	1
  5105  0020C6  0E93               	movlw	low _combinazioni
  5106  0020C8  24F3               	addwf	prodl,w,c
  5107  0020CA  6ED9               	movwf	fsr2l,c
  5108  0020CC  0E00               	movlw	high _combinazioni
  5109  0020CE  20F4               	addwfc	prodh,w,c
  5110  0020D0  6EDA               	movwf	fsr2h,c
  5111  0020D2  50DF               	movf	indf2,w,c
  5112  0020D4  6EC2               	movwf	4034,c	;volatile
  5113                           
  5114                           ;tester.c: 79: ADCON0bits.ADON = 1;
  5115  0020D6  80C2               	bsf	4034,0,c	;volatile
  5116                           
  5117                           ;tester.c: 80: ADCON0bits.GO = 1;
  5118  0020D8  82C2               	bsf	4034,1,c	;volatile
  5119  0020DA                     l170:
  5120  0020DA  B2C2               	btfsc	4034,1,c	;volatile
  5121  0020DC  D7FE               	goto	l170
  5122                           
  5123                           ;tester.c: 82: lettura [i] = ADRESH;
  5124  0020DE  50C4               	movf	4036,w,c	;volatile
  5125  0020E0  6E28               	movwf	??_read_adc& (0+255),c
  5126  0020E2  6A29               	clrf	(??_read_adc+1)& (0+255),c
  5127  0020E4  502A               	movf	read_adc@i,w,c
  5128  0020E6  0D02               	mullw	2
  5129  0020E8  0E5D               	movlw	low _lettura
  5130  0020EA  24F3               	addwf	prodl,w,c
  5131  0020EC  6ED9               	movwf	fsr2l,c
  5132  0020EE  0E00               	movlw	high _lettura
  5133  0020F0  20F4               	addwfc	prodh,w,c
  5134  0020F2  6EDA               	movwf	fsr2h,c
  5135  0020F4  C028  FFDE         	movff	??_read_adc,postinc2
  5136  0020F8  C029  FFDD         	movff	??_read_adc+1,postdec2
  5137                           
  5138                           ;tester.c: 83: lettura [i] = ((lettura[i] << 8) | ADRESL);
  5139  0020FC  502A               	movf	read_adc@i,w,c
  5140  0020FE  0D02               	mullw	2
  5141  002100  0E5D               	movlw	low _lettura
  5142  002102  24F3               	addwf	prodl,w,c
  5143  002104  6ED9               	movwf	fsr2l,c
  5144  002106  0E00               	movlw	high _lettura
  5145  002108  20F4               	addwfc	prodh,w,c
  5146  00210A  6EDA               	movwf	fsr2h,c
  5147  00210C  CFDE F028          	movff	postinc2,??_read_adc
  5148  002110  CFDD F029          	movff	postdec2,??_read_adc+1
  5149  002114  C028  F029         	movff	??_read_adc,??_read_adc+1
  5150  002118  6A28               	clrf	??_read_adc,c
  5151  00211A  50C3               	movf	4035,w,c	;volatile
  5152  00211C  1228               	iorwf	??_read_adc,f,c
  5153  00211E  0E00               	movlw	0
  5154  002120  1229               	iorwf	??_read_adc+1,f,c
  5155  002122  502A               	movf	read_adc@i,w,c
  5156  002124  0D02               	mullw	2
  5157  002126  0E5D               	movlw	low _lettura
  5158  002128  24F3               	addwf	prodl,w,c
  5159  00212A  6ED9               	movwf	fsr2l,c
  5160  00212C  0E00               	movlw	high _lettura
  5161  00212E  20F4               	addwfc	prodh,w,c
  5162  002130  6EDA               	movwf	fsr2h,c
  5163  002132  C028  FFDE         	movff	??_read_adc,postinc2
  5164  002136  C029  FFDD         	movff	??_read_adc+1,postdec2
  5165                           
  5166                           ;tester.c: 84: delay_ms(5);
  5167  00213A  0E00               	movlw	0
  5168  00213C  6E08               	movwf	delay_ms@value_ms+1,c
  5169  00213E  0E05               	movlw	5
  5170  002140  6E07               	movwf	delay_ms@value_ms,c
  5171  002142  EC53  F017         	call	_delay_ms	;wreg free
  5172  002146  2A2A               	incf	read_adc@i,f,c
  5173  002148  D7B8               	goto	l3344
  5174  00214A                     l3362:
  5175                           
  5176                           ;tester.c: 85: }
  5177                           ;tester.c: 86: current = ((lettura[1] - lettura[0])*5) / 1024;
  5178  00214A  0E04               	movlw	4
  5179  00214C  6E0A               	movwf	___awdiv@divisor+1,c
  5180  00214E  0E00               	movlw	0
  5181  002150  6E09               	movwf	___awdiv@divisor,c
  5182  002152  C05D  F028         	movff	_lettura,??_read_adc
  5183  002156  C05E  F029         	movff	_lettura+1,??_read_adc+1
  5184  00215A  1E28               	comf	??_read_adc,f,c
  5185  00215C  1E29               	comf	??_read_adc+1,f,c
  5186  00215E  4A28               	infsnz	??_read_adc,f,c
  5187  002160  2A29               	incf	??_read_adc+1,f,c
  5188  002162  505F               	movf	_lettura+2,w,c
  5189  002164  2428               	addwf	??_read_adc,w,c
  5190  002166  6E01               	movwf	___wmul@multiplier,c
  5191  002168  5060               	movf	_lettura+3,w,c
  5192  00216A  2029               	addwfc	??_read_adc+1,w,c
  5193  00216C  6E02               	movwf	___wmul@multiplier+1,c
  5194  00216E  0E00               	movlw	0
  5195  002170  6E04               	movwf	___wmul@multiplicand+1,c
  5196  002172  0E05               	movlw	5
  5197  002174  6E03               	movwf	___wmul@multiplicand,c
  5198  002176  ECD7  F017         	call	___wmul	;wreg free
  5199  00217A  C001  F007         	movff	?___wmul,___awdiv@dividend
  5200  00217E  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
  5201  002182  EC92  F015         	call	___awdiv	;wreg free
  5202  002186  C007  F00F         	movff	?___awdiv,___xxtofl@val
  5203  00218A  C008  F010         	movff	?___awdiv+1,___xxtofl@val+1
  5204  00218E  0E00               	movlw	0
  5205  002190  BE10               	btfsc	___xxtofl@val+1,7,c
  5206  002192  0EFF               	movlw	-1
  5207  002194  6E11               	movwf	___xxtofl@val+2,c
  5208  002196  6E12               	movwf	___xxtofl@val+3,c
  5209  002198  0E01               	movlw	1
  5210  00219A  EC34  F011         	call	___xxtofl
  5211  00219E  C00F  F07F         	movff	?___xxtofl,_current
  5212  0021A2  C010  F080         	movff	?___xxtofl+1,_current+1
  5213  0021A6  C011  F081         	movff	?___xxtofl+2,_current+2
  5214  0021AA  C012  F082         	movff	?___xxtofl+3,_current+3
  5215                           
  5216                           ;tester.c: 87: current = current/0.200;
  5217  0021AE  C07F  F001         	movff	_current,___fldiv@b
  5218  0021B2  C080  F002         	movff	_current+1,___fldiv@b+1
  5219  0021B6  C081  F003         	movff	_current+2,___fldiv@b+2
  5220  0021BA  C082  F004         	movff	_current+3,___fldiv@b+3
  5221  0021BE  0ECD               	movlw	205
  5222  0021C0  6E05               	movwf	___fldiv@a,c
  5223  0021C2  0ECC               	movlw	204
  5224  0021C4  6E06               	movwf	___fldiv@a+1,c
  5225  0021C6  0E4C               	movlw	76
  5226  0021C8  6E07               	movwf	___fldiv@a+2,c
  5227  0021CA  0E3E               	movlw	62
  5228  0021CC  6E08               	movwf	___fldiv@a+3,c
  5229  0021CE  ECC4  F00D         	call	___fldiv	;wreg free
  5230  0021D2  C001  F07F         	movff	?___fldiv,_current
  5231  0021D6  C002  F080         	movff	?___fldiv+1,_current+1
  5232  0021DA  C003  F081         	movff	?___fldiv+2,_current+2
  5233  0021DE  C004  F082         	movff	?___fldiv+3,_current+3
  5234                           
  5235                           ;tester.c: 88: voltage = (lettura[2]*5) / 1024;
  5236  0021E2  0E04               	movlw	4
  5237  0021E4  6E0A               	movwf	___awdiv@divisor+1,c
  5238  0021E6  0E00               	movlw	0
  5239  0021E8  6E09               	movwf	___awdiv@divisor,c
  5240  0021EA  C061  F001         	movff	_lettura+4,___wmul@multiplier
  5241  0021EE  C062  F002         	movff	_lettura+5,___wmul@multiplier+1
  5242  0021F2  0E00               	movlw	0
  5243  0021F4  6E04               	movwf	___wmul@multiplicand+1,c
  5244  0021F6  0E05               	movlw	5
  5245  0021F8  6E03               	movwf	___wmul@multiplicand,c
  5246  0021FA  ECD7  F017         	call	___wmul	;wreg free
  5247  0021FE  C001  F007         	movff	?___wmul,___awdiv@dividend
  5248  002202  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
  5249  002206  EC92  F015         	call	___awdiv	;wreg free
  5250  00220A  C007  F00F         	movff	?___awdiv,___xxtofl@val
  5251  00220E  C008  F010         	movff	?___awdiv+1,___xxtofl@val+1
  5252  002212  0E00               	movlw	0
  5253  002214  BE10               	btfsc	___xxtofl@val+1,7,c
  5254  002216  0EFF               	movlw	-1
  5255  002218  6E11               	movwf	___xxtofl@val+2,c
  5256  00221A  6E12               	movwf	___xxtofl@val+3,c
  5257  00221C  0E01               	movlw	1
  5258  00221E  EC34  F011         	call	___xxtofl
  5259  002222  C00F  F083         	movff	?___xxtofl,_voltage
  5260  002226  C010  F084         	movff	?___xxtofl+1,_voltage+1
  5261  00222A  C011  F085         	movff	?___xxtofl+2,_voltage+2
  5262  00222E  C012  F086         	movff	?___xxtofl+3,_voltage+3
  5263                           
  5264                           ;tester.c: 89: voltage = voltage * rapporto;
  5265  002232  C083  F00F         	movff	_voltage,___flmul@b
  5266  002236  C084  F010         	movff	_voltage+1,___flmul@b+1
  5267  00223A  C085  F011         	movff	_voltage+2,___flmul@b+2
  5268  00223E  C086  F012         	movff	_voltage+3,___flmul@b+3
  5269  002242  C08F  F013         	movff	_rapporto,___flmul@a
  5270  002246  C090  F014         	movff	_rapporto+1,___flmul@a+1
  5271  00224A  C091  F015         	movff	_rapporto+2,___flmul@a+2
  5272  00224E  C092  F016         	movff	_rapporto+3,___flmul@a+3
  5273  002252  EC7E  F00A         	call	___flmul	;wreg free
  5274  002256  C00F  F083         	movff	?___flmul,_voltage
  5275  00225A  C010  F084         	movff	?___flmul+1,_voltage+1
  5276  00225E  C011  F085         	movff	?___flmul+2,_voltage+2
  5277  002262  C012  F086         	movff	?___flmul+3,_voltage+3
  5278  002266  0012               	return		;funcret
  5279  002268                     __end_of_read_adc:
  5280                           	opt stack 0
  5281                           tblptru	equ	0xFF8
  5282                           tblptrh	equ	0xFF7
  5283                           tblptrl	equ	0xFF6
  5284                           tablat	equ	0xFF5
  5285                           prodh	equ	0xFF4
  5286                           prodl	equ	0xFF3
  5287                           postinc0	equ	0xFEE
  5288                           wreg	equ	0xFE8
  5289                           indf2	equ	0xFDF
  5290                           postinc2	equ	0xFDE
  5291                           postdec2	equ	0xFDD
  5292                           fsr2h	equ	0xFDA
  5293                           fsr2l	equ	0xFD9
  5294                           status	equ	0xFD8
  5295                           
  5296 ;; *************** function ___xxtofl *****************
  5297 ;; Defined at:
  5298 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\xxtofl.c"
  5299 ;; Parameters:    Size  Location     Type
  5300 ;;  sign            1    wreg     unsigned char 
  5301 ;;  val             4   14[COMRAM] long 
  5302 ;; Auto vars:     Size  Location     Type
  5303 ;;  sign            1   22[COMRAM] unsigned char 
  5304 ;;  arg             4   24[COMRAM] unsigned long 
  5305 ;;  exp             1   23[COMRAM] unsigned char 
  5306 ;; Return value:  Size  Location     Type
  5307 ;;                  4   14[COMRAM] unsigned char 
  5308 ;; Registers used:
  5309 ;;		wreg, status,2, status,0
  5310 ;; Tracked objects:
  5311 ;;		On entry : 0/0
  5312 ;;		On exit  : 0/0
  5313 ;;		Unchanged: 0/0
  5314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5315 ;;      Params:         4       0       0       0       0       0       0       0       0
  5316 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5317 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5318 ;;      Totals:        14       0       0       0       0       0       0       0       0
  5319 ;;Total ram usage:       14 bytes
  5320 ;; Hardware stack levels used:    1
  5321 ;; This function calls:
  5322 ;;		Nothing
  5323 ;; This function is called by:
  5324 ;;		_read_adc
  5325 ;;		_sprintf
  5326 ;; This function uses a non-reentrant model
  5327 ;;
  5328                           
  5329                           	psect	text17
  5330  002268                     __ptext17:
  5331                           	opt stack 0
  5332  002268                     ___xxtofl:
  5333                           	opt stack 28
  5334                           
  5335                           ;incstack = 0
  5336                           ;___xxtofl@sign stored from wreg
  5337  002268  6E17               	movwf	___xxtofl@sign,c
  5338  00226A  5017               	movf	___xxtofl@sign,w,c
  5339  00226C  A4D8               	btfss	status,2,c
  5340  00226E  AE12               	btfss	___xxtofl@val+3,7,c
  5341  002270  D01A               	goto	l874
  5342  002272  C00F  F013         	movff	___xxtofl@val,??___xxtofl
  5343  002276  C010  F014         	movff	___xxtofl@val+1,??___xxtofl+1
  5344  00227A  C011  F015         	movff	___xxtofl@val+2,??___xxtofl+2
  5345  00227E  C012  F016         	movff	___xxtofl@val+3,??___xxtofl+3
  5346  002282  1E13               	comf	??___xxtofl,f,c
  5347  002284  1E14               	comf	??___xxtofl+1,f,c
  5348  002286  1E15               	comf	??___xxtofl+2,f,c
  5349  002288  1E16               	comf	??___xxtofl+3,f,c
  5350  00228A  2A13               	incf	??___xxtofl,f,c
  5351  00228C  0E00               	movlw	0
  5352  00228E  2214               	addwfc	??___xxtofl+1,f,c
  5353  002290  2215               	addwfc	??___xxtofl+2,f,c
  5354  002292  2216               	addwfc	??___xxtofl+3,f,c
  5355  002294  C013  F019         	movff	??___xxtofl,___xxtofl@arg
  5356  002298  C014  F01A         	movff	??___xxtofl+1,___xxtofl@arg+1
  5357  00229C  C015  F01B         	movff	??___xxtofl+2,___xxtofl@arg+2
  5358  0022A0  C016  F01C         	movff	??___xxtofl+3,___xxtofl@arg+3
  5359  0022A4  D008               	goto	l3236
  5360  0022A6                     l874:
  5361  0022A6  C00F  F019         	movff	___xxtofl@val,___xxtofl@arg
  5362  0022AA  C010  F01A         	movff	___xxtofl@val+1,___xxtofl@arg+1
  5363  0022AE  C011  F01B         	movff	___xxtofl@val+2,___xxtofl@arg+2
  5364  0022B2  C012  F01C         	movff	___xxtofl@val+3,___xxtofl@arg+3
  5365  0022B6                     l3236:
  5366  0022B6  500F               	movf	___xxtofl@val,w,c
  5367  0022B8  1010               	iorwf	___xxtofl@val+1,w,c
  5368  0022BA  1011               	iorwf	___xxtofl@val+2,w,c
  5369  0022BC  1012               	iorwf	___xxtofl@val+3,w,c
  5370  0022BE  A4D8               	btfss	status,2,c
  5371  0022C0  D009               	goto	l3242
  5372  0022C2  0E00               	movlw	0
  5373  0022C4  6E0F               	movwf	?___xxtofl,c
  5374  0022C6  0E00               	movlw	0
  5375  0022C8  6E10               	movwf	?___xxtofl+1,c
  5376  0022CA  0E00               	movlw	0
  5377  0022CC  6E11               	movwf	?___xxtofl+2,c
  5378  0022CE  0E00               	movlw	0
  5379  0022D0  6E12               	movwf	?___xxtofl+3,c
  5380  0022D2  0012               	return	
  5381  0022D4                     l3242:
  5382  0022D4  0E96               	movlw	150
  5383  0022D6  6E18               	movwf	___xxtofl@exp,c
  5384  0022D8  D006               	goto	l3246
  5385  0022DA                     l3244:
  5386  0022DA  2A18               	incf	___xxtofl@exp,f,c
  5387  0022DC  90D8               	bcf	status,0,c
  5388  0022DE  321C               	rrcf	___xxtofl@arg+3,f,c
  5389  0022E0  321B               	rrcf	___xxtofl@arg+2,f,c
  5390  0022E2  321A               	rrcf	___xxtofl@arg+1,f,c
  5391  0022E4  3219               	rrcf	___xxtofl@arg,f,c
  5392  0022E6                     l3246:
  5393  0022E6  0E00               	movlw	0
  5394  0022E8  1419               	andwf	___xxtofl@arg,w,c
  5395  0022EA  6E13               	movwf	??___xxtofl& (0+255),c
  5396  0022EC  0E00               	movlw	0
  5397  0022EE  141A               	andwf	___xxtofl@arg+1,w,c
  5398  0022F0  6E14               	movwf	(??___xxtofl+1)& (0+255),c
  5399  0022F2  0E00               	movlw	0
  5400  0022F4  141B               	andwf	___xxtofl@arg+2,w,c
  5401  0022F6  6E15               	movwf	(??___xxtofl+2)& (0+255),c
  5402  0022F8  0EFE               	movlw	254
  5403  0022FA  141C               	andwf	___xxtofl@arg+3,w,c
  5404  0022FC  6E16               	movwf	(??___xxtofl+3)& (0+255),c
  5405  0022FE  5013               	movf	??___xxtofl,w,c
  5406  002300  1014               	iorwf	??___xxtofl+1,w,c
  5407  002302  1015               	iorwf	??___xxtofl+2,w,c
  5408  002304  1016               	iorwf	??___xxtofl+3,w,c
  5409  002306  B4D8               	btfsc	status,2,c
  5410  002308  D00D               	goto	l881
  5411  00230A  D7E7               	goto	l3244
  5412  00230C                     l3248:
  5413  00230C  2A18               	incf	___xxtofl@exp,f,c
  5414  00230E  0E01               	movlw	1
  5415  002310  2619               	addwf	___xxtofl@arg,f,c
  5416  002312  0E00               	movlw	0
  5417  002314  221A               	addwfc	___xxtofl@arg+1,f,c
  5418  002316  221B               	addwfc	___xxtofl@arg+2,f,c
  5419  002318  221C               	addwfc	___xxtofl@arg+3,f,c
  5420  00231A  90D8               	bcf	status,0,c
  5421  00231C  321C               	rrcf	___xxtofl@arg+3,f,c
  5422  00231E  321B               	rrcf	___xxtofl@arg+2,f,c
  5423  002320  321A               	rrcf	___xxtofl@arg+1,f,c
  5424  002322  3219               	rrcf	___xxtofl@arg,f,c
  5425  002324                     l881:
  5426  002324  0E00               	movlw	0
  5427  002326  1419               	andwf	___xxtofl@arg,w,c
  5428  002328  6E13               	movwf	??___xxtofl& (0+255),c
  5429  00232A  0E00               	movlw	0
  5430  00232C  141A               	andwf	___xxtofl@arg+1,w,c
  5431  00232E  6E14               	movwf	(??___xxtofl+1)& (0+255),c
  5432  002330  0E00               	movlw	0
  5433  002332  141B               	andwf	___xxtofl@arg+2,w,c
  5434  002334  6E15               	movwf	(??___xxtofl+2)& (0+255),c
  5435  002336  0EFF               	movlw	255
  5436  002338  141C               	andwf	___xxtofl@arg+3,w,c
  5437  00233A  6E16               	movwf	(??___xxtofl+3)& (0+255),c
  5438  00233C  5013               	movf	??___xxtofl,w,c
  5439  00233E  1014               	iorwf	??___xxtofl+1,w,c
  5440  002340  1015               	iorwf	??___xxtofl+2,w,c
  5441  002342  1016               	iorwf	??___xxtofl+3,w,c
  5442  002344  B4D8               	btfsc	status,2,c
  5443  002346  D007               	goto	l3256
  5444  002348  D7E1               	goto	l3248
  5445  00234A                     l3254:
  5446  00234A  0618               	decf	___xxtofl@exp,f,c
  5447  00234C  90D8               	bcf	status,0,c
  5448  00234E  3619               	rlcf	___xxtofl@arg,f,c
  5449  002350  361A               	rlcf	___xxtofl@arg+1,f,c
  5450  002352  361B               	rlcf	___xxtofl@arg+2,f,c
  5451  002354  361C               	rlcf	___xxtofl@arg+3,f,c
  5452  002356                     l3256:
  5453  002356  BE1B               	btfsc	___xxtofl@arg+2,7,c
  5454  002358  D003               	goto	l888
  5455  00235A  0E02               	movlw	2
  5456  00235C  6018               	cpfslt	___xxtofl@exp,c
  5457  00235E  D7F5               	goto	l3254
  5458  002360                     l888:
  5459  002360  B018               	btfsc	___xxtofl@exp,0,c
  5460  002362  D008               	goto	l889
  5461  002364  0EFF               	movlw	255
  5462  002366  1619               	andwf	___xxtofl@arg,f,c
  5463  002368  0EFF               	movlw	255
  5464  00236A  161A               	andwf	___xxtofl@arg+1,f,c
  5465  00236C  0E7F               	movlw	127
  5466  00236E  161B               	andwf	___xxtofl@arg+2,f,c
  5467  002370  0EFF               	movlw	255
  5468  002372  161C               	andwf	___xxtofl@arg+3,f,c
  5469  002374                     l889:
  5470  002374  90D8               	bcf	status,0,c
  5471  002376  3218               	rrcf	___xxtofl@exp,f,c
  5472  002378  C018  F013         	movff	___xxtofl@exp,??___xxtofl
  5473  00237C  6A14               	clrf	(??___xxtofl+1)& (0+255),c
  5474  00237E  6A15               	clrf	(??___xxtofl+2)& (0+255),c
  5475  002380  6A16               	clrf	(??___xxtofl+3)& (0+255),c
  5476  002382  C013  F016         	movff	??___xxtofl,??___xxtofl+3
  5477  002386  6A15               	clrf	??___xxtofl+2,c
  5478  002388  6A14               	clrf	??___xxtofl+1,c
  5479  00238A  6A13               	clrf	??___xxtofl,c
  5480  00238C  5013               	movf	??___xxtofl,w,c
  5481  00238E  1219               	iorwf	___xxtofl@arg,f,c
  5482  002390  5014               	movf	??___xxtofl+1,w,c
  5483  002392  121A               	iorwf	___xxtofl@arg+1,f,c
  5484  002394  5015               	movf	??___xxtofl+2,w,c
  5485  002396  121B               	iorwf	___xxtofl@arg+2,f,c
  5486  002398  5016               	movf	??___xxtofl+3,w,c
  5487  00239A  121C               	iorwf	___xxtofl@arg+3,f,c
  5488  00239C  5017               	movf	___xxtofl@sign,w,c
  5489  00239E  A4D8               	btfss	status,2,c
  5490  0023A0  AE12               	btfss	___xxtofl@val+3,7,c
  5491  0023A2  D001               	goto	l3268
  5492  0023A4  8E1C               	bsf	___xxtofl@arg+3,7,c
  5493  0023A6                     l3268:
  5494  0023A6  C019  F00F         	movff	___xxtofl@arg,?___xxtofl
  5495  0023AA  C01A  F010         	movff	___xxtofl@arg+1,?___xxtofl+1
  5496  0023AE  C01B  F011         	movff	___xxtofl@arg+2,?___xxtofl+2
  5497  0023B2  C01C  F012         	movff	___xxtofl@arg+3,?___xxtofl+3
  5498  0023B6  0012               	return	
  5499  0023B8                     __end_of___xxtofl:
  5500                           	opt stack 0
  5501                           tblptru	equ	0xFF8
  5502                           tblptrh	equ	0xFF7
  5503                           tblptrl	equ	0xFF6
  5504                           tablat	equ	0xFF5
  5505                           prodh	equ	0xFF4
  5506                           prodl	equ	0xFF3
  5507                           postinc0	equ	0xFEE
  5508                           wreg	equ	0xFE8
  5509                           indf2	equ	0xFDF
  5510                           postinc2	equ	0xFDE
  5511                           postdec2	equ	0xFDD
  5512                           fsr2h	equ	0xFDA
  5513                           fsr2l	equ	0xFD9
  5514                           status	equ	0xFD8
  5515                           
  5516 ;; *************** function ___flmul *****************
  5517 ;; Defined at:
  5518 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\sprcmul.c"
  5519 ;; Parameters:    Size  Location     Type
  5520 ;;  b               4   14[COMRAM] unsigned char 
  5521 ;;  a               4   18[COMRAM] unsigned char 
  5522 ;; Auto vars:     Size  Location     Type
  5523 ;;  prod            4   33[COMRAM] struct .
  5524 ;;  grs             4   27[COMRAM] unsigned long 
  5525 ;;  temp            2   37[COMRAM] struct .
  5526 ;;  bexp            1   32[COMRAM] unsigned char 
  5527 ;;  aexp            1   31[COMRAM] unsigned char 
  5528 ;;  sign            1   26[COMRAM] unsigned char 
  5529 ;; Return value:  Size  Location     Type
  5530 ;;                  4   14[COMRAM] unsigned char 
  5531 ;; Registers used:
  5532 ;;		wreg, status,2, status,0, prodl, prodh
  5533 ;; Tracked objects:
  5534 ;;		On entry : 0/0
  5535 ;;		On exit  : 0/0
  5536 ;;		Unchanged: 0/0
  5537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5538 ;;      Params:         8       0       0       0       0       0       0       0       0
  5539 ;;      Locals:        13       0       0       0       0       0       0       0       0
  5540 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5541 ;;      Totals:        25       0       0       0       0       0       0       0       0
  5542 ;;Total ram usage:       25 bytes
  5543 ;; Hardware stack levels used:    1
  5544 ;; This function calls:
  5545 ;;		Nothing
  5546 ;; This function is called by:
  5547 ;;		_read_adc
  5548 ;;		_fround
  5549 ;;		_scale
  5550 ;;		_sprintf
  5551 ;; This function uses a non-reentrant model
  5552 ;;
  5553                           
  5554                           	psect	text18
  5555  0014FC                     __ptext18:
  5556                           	opt stack 0
  5557  0014FC                     ___flmul:
  5558                           	opt stack 27
  5559                           
  5560                           ;incstack = 0
  5561  0014FC  5012               	movf	___flmul@b+3,w,c
  5562  0014FE  0B80               	andlw	128
  5563  001500  6E1B               	movwf	___flmul@sign,c
  5564  001502  5012               	movf	___flmul@b+3,w,c
  5565  001504  2412               	addwf	___flmul@b+3,w,c
  5566  001506  6E21               	movwf	___flmul@bexp,c
  5567  001508  BE11               	btfsc	___flmul@b+2,7,c
  5568  00150A  8021               	bsf	___flmul@bexp,0,c
  5569  00150C  5021               	movf	___flmul@bexp,w,c
  5570  00150E  B4D8               	btfsc	status,2,c
  5571  001510  D00D               	goto	l2568
  5572  001512  2821               	incf	___flmul@bexp,w,c
  5573  001514  A4D8               	btfss	status,2,c
  5574  001516  D008               	goto	l2566
  5575  001518  0E00               	movlw	0
  5576  00151A  6E0F               	movwf	___flmul@b,c
  5577  00151C  0E00               	movlw	0
  5578  00151E  6E10               	movwf	___flmul@b+1,c
  5579  001520  0E00               	movlw	0
  5580  001522  6E11               	movwf	___flmul@b+2,c
  5581  001524  0E00               	movlw	0
  5582  001526  6E12               	movwf	___flmul@b+3,c
  5583  001528                     l2566:
  5584  001528  8E11               	bsf	___flmul@b+2,7,c
  5585  00152A  D008               	goto	l2570
  5586  00152C                     l2568:
  5587  00152C  0E00               	movlw	0
  5588  00152E  6E0F               	movwf	___flmul@b,c
  5589  001530  0E00               	movlw	0
  5590  001532  6E10               	movwf	___flmul@b+1,c
  5591  001534  0E00               	movlw	0
  5592  001536  6E11               	movwf	___flmul@b+2,c
  5593  001538  0E00               	movlw	0
  5594  00153A  6E12               	movwf	___flmul@b+3,c
  5595  00153C                     l2570:
  5596  00153C  5016               	movf	___flmul@a+3,w,c
  5597  00153E  0B80               	andlw	128
  5598  001540  1A1B               	xorwf	___flmul@sign,f,c
  5599  001542  5016               	movf	___flmul@a+3,w,c
  5600  001544  2416               	addwf	___flmul@a+3,w,c
  5601  001546  6E20               	movwf	___flmul@aexp,c
  5602  001548  BE15               	btfsc	___flmul@a+2,7,c
  5603  00154A  8020               	bsf	___flmul@aexp,0,c
  5604  00154C  5020               	movf	___flmul@aexp,w,c
  5605  00154E  B4D8               	btfsc	status,2,c
  5606  001550  D00D               	goto	l2586
  5607  001552  2820               	incf	___flmul@aexp,w,c
  5608  001554  A4D8               	btfss	status,2,c
  5609  001556  D008               	goto	l2584
  5610  001558  0E00               	movlw	0
  5611  00155A  6E13               	movwf	___flmul@a,c
  5612  00155C  0E00               	movlw	0
  5613  00155E  6E14               	movwf	___flmul@a+1,c
  5614  001560  0E00               	movlw	0
  5615  001562  6E15               	movwf	___flmul@a+2,c
  5616  001564  0E00               	movlw	0
  5617  001566  6E16               	movwf	___flmul@a+3,c
  5618  001568                     l2584:
  5619  001568  8E15               	bsf	___flmul@a+2,7,c
  5620  00156A  D008               	goto	l852
  5621  00156C                     l2586:
  5622  00156C  0E00               	movlw	0
  5623  00156E  6E13               	movwf	___flmul@a,c
  5624  001570  0E00               	movlw	0
  5625  001572  6E14               	movwf	___flmul@a+1,c
  5626  001574  0E00               	movlw	0
  5627  001576  6E15               	movwf	___flmul@a+2,c
  5628  001578  0E00               	movlw	0
  5629  00157A  6E16               	movwf	___flmul@a+3,c
  5630  00157C                     l852:
  5631  00157C  5020               	movf	___flmul@aexp,w,c
  5632  00157E  B4D8               	btfsc	status,2,c
  5633  001580  D003               	goto	l2590
  5634  001582  5021               	movf	___flmul@bexp,w,c
  5635  001584  A4D8               	btfss	status,2,c
  5636  001586  D009               	goto	l2594
  5637  001588                     l2590:
  5638  001588  0E00               	movlw	0
  5639  00158A  6E0F               	movwf	?___flmul,c
  5640  00158C  0E00               	movlw	0
  5641  00158E  6E10               	movwf	?___flmul+1,c
  5642  001590  0E00               	movlw	0
  5643  001592  6E11               	movwf	?___flmul+2,c
  5644  001594  0E00               	movlw	0
  5645  001596  6E12               	movwf	?___flmul+3,c
  5646  001598  0012               	return	
  5647  00159A                     l2594:
  5648  00159A  5015               	movf	___flmul@a+2,w,c
  5649  00159C  020F               	mulwf	___flmul@b,c
  5650  00159E  CFF3 F026          	movff	prodl,___flmul@temp
  5651  0015A2  CFF4 F027          	movff	prodh,___flmul@temp+1
  5652  0015A6  5026               	movf	___flmul@temp,w,c
  5653  0015A8  6E1C               	movwf	___flmul@grs,c
  5654  0015AA  6A1D               	clrf	___flmul@grs+1,c
  5655  0015AC  6A1E               	clrf	___flmul@grs+2,c
  5656  0015AE  6A1F               	clrf	___flmul@grs+3,c
  5657  0015B0  5027               	movf	___flmul@temp+1,w,c
  5658  0015B2  6E22               	movwf	___flmul@prod,c
  5659  0015B4  6A23               	clrf	___flmul@prod+1,c
  5660  0015B6  6A24               	clrf	___flmul@prod+2,c
  5661  0015B8  6A25               	clrf	___flmul@prod+3,c
  5662  0015BA  5014               	movf	___flmul@a+1,w,c
  5663  0015BC  0210               	mulwf	___flmul@b+1,c
  5664  0015BE  CFF3 F026          	movff	prodl,___flmul@temp
  5665  0015C2  CFF4 F027          	movff	prodh,___flmul@temp+1
  5666  0015C6  5026               	movf	___flmul@temp,w,c
  5667  0015C8  261C               	addwf	___flmul@grs,f,c
  5668  0015CA  0E00               	movlw	0
  5669  0015CC  221D               	addwfc	___flmul@grs+1,f,c
  5670  0015CE  221E               	addwfc	___flmul@grs+2,f,c
  5671  0015D0  221F               	addwfc	___flmul@grs+3,f,c
  5672  0015D2  5027               	movf	___flmul@temp+1,w,c
  5673  0015D4  2622               	addwf	___flmul@prod,f,c
  5674  0015D6  0E00               	movlw	0
  5675  0015D8  2223               	addwfc	___flmul@prod+1,f,c
  5676  0015DA  2224               	addwfc	___flmul@prod+2,f,c
  5677  0015DC  2225               	addwfc	___flmul@prod+3,f,c
  5678  0015DE  5013               	movf	___flmul@a,w,c
  5679  0015E0  0211               	mulwf	___flmul@b+2,c
  5680  0015E2  CFF3 F026          	movff	prodl,___flmul@temp
  5681  0015E6  CFF4 F027          	movff	prodh,___flmul@temp+1
  5682  0015EA  5026               	movf	___flmul@temp,w,c
  5683  0015EC  261C               	addwf	___flmul@grs,f,c
  5684  0015EE  0E00               	movlw	0
  5685  0015F0  221D               	addwfc	___flmul@grs+1,f,c
  5686  0015F2  221E               	addwfc	___flmul@grs+2,f,c
  5687  0015F4  221F               	addwfc	___flmul@grs+3,f,c
  5688  0015F6  5027               	movf	___flmul@temp+1,w,c
  5689  0015F8  2622               	addwf	___flmul@prod,f,c
  5690  0015FA  0E00               	movlw	0
  5691  0015FC  2223               	addwfc	___flmul@prod+1,f,c
  5692  0015FE  2224               	addwfc	___flmul@prod+2,f,c
  5693  001600  2225               	addwfc	___flmul@prod+3,f,c
  5694  001602  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5695  001606  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5696  00160A  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5697  00160E  6A1C               	clrf	___flmul@grs,c
  5698  001610  5013               	movf	___flmul@a,w,c
  5699  001612  0210               	mulwf	___flmul@b+1,c
  5700  001614  CFF3 F026          	movff	prodl,___flmul@temp
  5701  001618  CFF4 F027          	movff	prodh,___flmul@temp+1
  5702  00161C  5026               	movf	___flmul@temp,w,c
  5703  00161E  261C               	addwf	___flmul@grs,f,c
  5704  001620  5027               	movf	___flmul@temp+1,w,c
  5705  001622  221D               	addwfc	___flmul@grs+1,f,c
  5706  001624  0E00               	movlw	0
  5707  001626  221E               	addwfc	___flmul@grs+2,f,c
  5708  001628  0E00               	movlw	0
  5709  00162A  221F               	addwfc	___flmul@grs+3,f,c
  5710  00162C  5014               	movf	___flmul@a+1,w,c
  5711  00162E  020F               	mulwf	___flmul@b,c
  5712  001630  CFF3 F026          	movff	prodl,___flmul@temp
  5713  001634  CFF4 F027          	movff	prodh,___flmul@temp+1
  5714  001638  5026               	movf	___flmul@temp,w,c
  5715  00163A  261C               	addwf	___flmul@grs,f,c
  5716  00163C  5027               	movf	___flmul@temp+1,w,c
  5717  00163E  221D               	addwfc	___flmul@grs+1,f,c
  5718  001640  0E00               	movlw	0
  5719  001642  221E               	addwfc	___flmul@grs+2,f,c
  5720  001644  0E00               	movlw	0
  5721  001646  221F               	addwfc	___flmul@grs+3,f,c
  5722  001648  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5723  00164C  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5724  001650  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5725  001654  6A1C               	clrf	___flmul@grs,c
  5726  001656  5013               	movf	___flmul@a,w,c
  5727  001658  020F               	mulwf	___flmul@b,c
  5728  00165A  CFF3 F026          	movff	prodl,___flmul@temp
  5729  00165E  CFF4 F027          	movff	prodh,___flmul@temp+1
  5730  001662  5026               	movf	___flmul@temp,w,c
  5731  001664  261C               	addwf	___flmul@grs,f,c
  5732  001666  5027               	movf	___flmul@temp+1,w,c
  5733  001668  221D               	addwfc	___flmul@grs+1,f,c
  5734  00166A  0E00               	movlw	0
  5735  00166C  221E               	addwfc	___flmul@grs+2,f,c
  5736  00166E  0E00               	movlw	0
  5737  001670  221F               	addwfc	___flmul@grs+3,f,c
  5738  001672  5015               	movf	___flmul@a+2,w,c
  5739  001674  0210               	mulwf	___flmul@b+1,c
  5740  001676  CFF3 F026          	movff	prodl,___flmul@temp
  5741  00167A  CFF4 F027          	movff	prodh,___flmul@temp+1
  5742  00167E  5026               	movf	___flmul@temp,w,c
  5743  001680  2622               	addwf	___flmul@prod,f,c
  5744  001682  5027               	movf	___flmul@temp+1,w,c
  5745  001684  2223               	addwfc	___flmul@prod+1,f,c
  5746  001686  0E00               	movlw	0
  5747  001688  2224               	addwfc	___flmul@prod+2,f,c
  5748  00168A  0E00               	movlw	0
  5749  00168C  2225               	addwfc	___flmul@prod+3,f,c
  5750  00168E  5014               	movf	___flmul@a+1,w,c
  5751  001690  0211               	mulwf	___flmul@b+2,c
  5752  001692  CFF3 F026          	movff	prodl,___flmul@temp
  5753  001696  CFF4 F027          	movff	prodh,___flmul@temp+1
  5754  00169A  5026               	movf	___flmul@temp,w,c
  5755  00169C  2622               	addwf	___flmul@prod,f,c
  5756  00169E  5027               	movf	___flmul@temp+1,w,c
  5757  0016A0  2223               	addwfc	___flmul@prod+1,f,c
  5758  0016A2  0E00               	movlw	0
  5759  0016A4  2224               	addwfc	___flmul@prod+2,f,c
  5760  0016A6  0E00               	movlw	0
  5761  0016A8  2225               	addwfc	___flmul@prod+3,f,c
  5762  0016AA  5015               	movf	___flmul@a+2,w,c
  5763  0016AC  0211               	mulwf	___flmul@b+2,c
  5764  0016AE  CFF3 F026          	movff	prodl,___flmul@temp
  5765  0016B2  CFF4 F027          	movff	prodh,___flmul@temp+1
  5766  0016B6  5026               	movf	___flmul@temp,w,c
  5767  0016B8  6E17               	movwf	??___flmul& (0+255),c
  5768  0016BA  5027               	movf	___flmul@temp+1,w,c
  5769  0016BC  6E18               	movwf	(??___flmul+1)& (0+255),c
  5770  0016BE  6A19               	clrf	(??___flmul+2)& (0+255),c
  5771  0016C0  6A1A               	clrf	(??___flmul+3)& (0+255),c
  5772  0016C2  C019  F01A         	movff	??___flmul+2,??___flmul+3
  5773  0016C6  C018  F019         	movff	??___flmul+1,??___flmul+2
  5774  0016CA  C017  F018         	movff	??___flmul,??___flmul+1
  5775  0016CE  6A17               	clrf	??___flmul,c
  5776  0016D0  5017               	movf	??___flmul,w,c
  5777  0016D2  2622               	addwf	___flmul@prod,f,c
  5778  0016D4  5018               	movf	??___flmul+1,w,c
  5779  0016D6  2223               	addwfc	___flmul@prod+1,f,c
  5780  0016D8  5019               	movf	??___flmul+2,w,c
  5781  0016DA  2224               	addwfc	___flmul@prod+2,f,c
  5782  0016DC  501A               	movf	??___flmul+3,w,c
  5783  0016DE  2225               	addwfc	___flmul@prod+3,f,c
  5784  0016E0  C01C  F017         	movff	___flmul@grs,??___flmul
  5785  0016E4  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  5786  0016E8  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  5787  0016EC  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  5788  0016F0  0E19               	movlw	25
  5789  0016F2  D005               	goto	u2570
  5790  0016F4                     u2575:
  5791  0016F4  90D8               	bcf	status,0,c
  5792  0016F6  321A               	rrcf	??___flmul+3,f,c
  5793  0016F8  3219               	rrcf	??___flmul+2,f,c
  5794  0016FA  3218               	rrcf	??___flmul+1,f,c
  5795  0016FC  3217               	rrcf	??___flmul,f,c
  5796  0016FE                     u2570:
  5797  0016FE  2EE8               	decfsz	wreg,f,c
  5798  001700  D7F9               	goto	u2575
  5799  001702  5017               	movf	??___flmul,w,c
  5800  001704  2622               	addwf	___flmul@prod,f,c
  5801  001706  5018               	movf	??___flmul+1,w,c
  5802  001708  2223               	addwfc	___flmul@prod+1,f,c
  5803  00170A  5019               	movf	??___flmul+2,w,c
  5804  00170C  2224               	addwfc	___flmul@prod+2,f,c
  5805  00170E  501A               	movf	??___flmul+3,w,c
  5806  001710  2225               	addwfc	___flmul@prod+3,f,c
  5807  001712  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5808  001716  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5809  00171A  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5810  00171E  6A1C               	clrf	___flmul@grs,c
  5811  001720  5020               	movf	___flmul@aexp,w,c
  5812  001722  C021  F017         	movff	___flmul@bexp,??___flmul
  5813  001726  6A18               	clrf	(??___flmul+1)& (0+255),c
  5814  001728  2617               	addwf	??___flmul,f,c
  5815  00172A  0E00               	movlw	0
  5816  00172C  2218               	addwfc	??___flmul+1,f,c
  5817  00172E  0E82               	movlw	130
  5818  001730  2417               	addwf	??___flmul,w,c
  5819  001732  6E26               	movwf	___flmul@temp,c
  5820  001734  0EFF               	movlw	255
  5821  001736  2018               	addwfc	??___flmul+1,w,c
  5822  001738  6E27               	movwf	___flmul@temp+1,c
  5823  00173A  D00F               	goto	l2642
  5824  00173C                     l2636:
  5825  00173C  90D8               	bcf	status,0,c
  5826  00173E  3622               	rlcf	___flmul@prod,f,c
  5827  001740  3623               	rlcf	___flmul@prod+1,f,c
  5828  001742  3624               	rlcf	___flmul@prod+2,f,c
  5829  001744  3625               	rlcf	___flmul@prod+3,f,c
  5830  001746  BE1F               	btfsc	___flmul@grs+3,7,c
  5831  001748  8022               	bsf	___flmul@prod,0,c
  5832  00174A  90D8               	bcf	status,0,c
  5833  00174C  361C               	rlcf	___flmul@grs,f,c
  5834  00174E  361D               	rlcf	___flmul@grs+1,f,c
  5835  001750  361E               	rlcf	___flmul@grs+2,f,c
  5836  001752  361F               	rlcf	___flmul@grs+3,f,c
  5837  001754  0626               	decf	___flmul@temp,f,c
  5838  001756  A0D8               	btfss	status,0,c
  5839  001758  0627               	decf	___flmul@temp+1,f,c
  5840  00175A                     l2642:
  5841  00175A  AE24               	btfss	___flmul@prod+2,7,c
  5842  00175C  D7EF               	goto	l2636
  5843  00175E  0E00               	movlw	0
  5844  001760  6E20               	movwf	___flmul@aexp,c
  5845  001762  AE1F               	btfss	___flmul@grs+3,7,c
  5846  001764  D016               	goto	l861
  5847  001766  0EFF               	movlw	255
  5848  001768  141C               	andwf	___flmul@grs,w,c
  5849  00176A  6E17               	movwf	??___flmul& (0+255),c
  5850  00176C  0EFF               	movlw	255
  5851  00176E  141D               	andwf	___flmul@grs+1,w,c
  5852  001770  6E18               	movwf	(??___flmul+1)& (0+255),c
  5853  001772  0EFF               	movlw	255
  5854  001774  141E               	andwf	___flmul@grs+2,w,c
  5855  001776  6E19               	movwf	(??___flmul+2)& (0+255),c
  5856  001778  0E7F               	movlw	127
  5857  00177A  141F               	andwf	___flmul@grs+3,w,c
  5858  00177C  6E1A               	movwf	(??___flmul+3)& (0+255),c
  5859  00177E  5017               	movf	??___flmul,w,c
  5860  001780  1018               	iorwf	??___flmul+1,w,c
  5861  001782  1019               	iorwf	??___flmul+2,w,c
  5862  001784  101A               	iorwf	??___flmul+3,w,c
  5863  001786  A4D8               	btfss	status,2,c
  5864  001788  D002               	goto	l2652
  5865  00178A  A022               	btfss	___flmul@prod,0,c
  5866  00178C  D002               	goto	l861
  5867  00178E                     l2652:
  5868  00178E  0E01               	movlw	1
  5869  001790  6E20               	movwf	___flmul@aexp,c
  5870  001792                     l861:
  5871  001792  5020               	movf	___flmul@aexp,w,c
  5872  001794  B4D8               	btfsc	status,2,c
  5873  001796  D01F               	goto	l2662
  5874  001798  0E01               	movlw	1
  5875  00179A  2622               	addwf	___flmul@prod,f,c
  5876  00179C  0E00               	movlw	0
  5877  00179E  2223               	addwfc	___flmul@prod+1,f,c
  5878  0017A0  2224               	addwfc	___flmul@prod+2,f,c
  5879  0017A2  2225               	addwfc	___flmul@prod+3,f,c
  5880  0017A4  A025               	btfss	___flmul@prod+3,0,c
  5881  0017A6  D017               	goto	l2662
  5882  0017A8  C022  F017         	movff	___flmul@prod,??___flmul
  5883  0017AC  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  5884  0017B0  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  5885  0017B4  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  5886  0017B8  341A               	rlcf	??___flmul+3,w,c
  5887  0017BA  321A               	rrcf	??___flmul+3,f,c
  5888  0017BC  3219               	rrcf	??___flmul+2,f,c
  5889  0017BE  3218               	rrcf	??___flmul+1,f,c
  5890  0017C0  3217               	rrcf	??___flmul,f,c
  5891  0017C2  C017  F022         	movff	??___flmul,___flmul@prod
  5892  0017C6  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  5893  0017CA  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  5894  0017CE  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  5895  0017D2  4A26               	infsnz	___flmul@temp,f,c
  5896  0017D4  2A27               	incf	___flmul@temp+1,f,c
  5897  0017D6                     l2662:
  5898  0017D6  BE27               	btfsc	___flmul@temp+1,7,c
  5899  0017D8  D00D               	goto	l2666
  5900  0017DA  5027               	movf	___flmul@temp+1,w,c
  5901  0017DC  E103               	bnz	u2650
  5902  0017DE  2826               	incf	___flmul@temp,w,c
  5903  0017E0  A0D8               	btfss	status,0,c
  5904  0017E2  D008               	goto	l2666
  5905  0017E4                     u2650:
  5906  0017E4  0E00               	movlw	0
  5907  0017E6  6E22               	movwf	___flmul@prod,c
  5908  0017E8  0E00               	movlw	0
  5909  0017EA  6E23               	movwf	___flmul@prod+1,c
  5910  0017EC  0E80               	movlw	128
  5911  0017EE  6E24               	movwf	___flmul@prod+2,c
  5912  0017F0  0E7F               	movlw	127
  5913  0017F2  D020               	goto	L9
  5914  0017F4                     l2666:
  5915  0017F4  BE27               	btfsc	___flmul@temp+1,7,c
  5916  0017F6  D005               	goto	l2668
  5917  0017F8  5027               	movf	___flmul@temp+1,w,c
  5918  0017FA  E10E               	bnz	l869
  5919  0017FC  0426               	decf	___flmul@temp,w,c
  5920  0017FE  B0D8               	btfsc	status,0,c
  5921  001800  D00B               	goto	l869
  5922  001802                     l2668:
  5923  001802  0E00               	movlw	0
  5924  001804  6E22               	movwf	___flmul@prod,c
  5925  001806  0E00               	movlw	0
  5926  001808  6E23               	movwf	___flmul@prod+1,c
  5927  00180A  0E00               	movlw	0
  5928  00180C  6E24               	movwf	___flmul@prod+2,c
  5929  00180E  0E00               	movlw	0
  5930  001810  6E25               	movwf	___flmul@prod+3,c
  5931  001812  0E00               	movlw	0
  5932  001814  6E1B               	movwf	___flmul@sign,c
  5933  001816  D00F               	goto	l2678
  5934  001818                     l869:
  5935  001818  C026  F021         	movff	___flmul@temp,___flmul@bexp
  5936  00181C  0EFF               	movlw	255
  5937  00181E  1622               	andwf	___flmul@prod,f,c
  5938  001820  0EFF               	movlw	255
  5939  001822  1623               	andwf	___flmul@prod+1,f,c
  5940  001824  0E7F               	movlw	127
  5941  001826  1624               	andwf	___flmul@prod+2,f,c
  5942  001828  0E00               	movlw	0
  5943  00182A  1625               	andwf	___flmul@prod+3,f,c
  5944  00182C  B021               	btfsc	___flmul@bexp,0,c
  5945  00182E  8E24               	bsf	___flmul@prod+2,7,c
  5946  001830  90D8               	bcf	status,0,c
  5947  001832  3021               	rrcf	___flmul@bexp,w,c
  5948  001834                     L9:
  5949  001834  6E25               	movwf	___flmul@prod+3,c
  5950  001836                     l2678:
  5951  001836  501B               	movf	___flmul@sign,w,c
  5952  001838  1225               	iorwf	___flmul@prod+3,f,c
  5953  00183A  C022  F00F         	movff	___flmul@prod,?___flmul
  5954  00183E  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  5955  001842  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  5956  001846  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  5957  00184A  0012               	return	
  5958  00184C                     __end_of___flmul:
  5959                           	opt stack 0
  5960                           tblptru	equ	0xFF8
  5961                           tblptrh	equ	0xFF7
  5962                           tblptrl	equ	0xFF6
  5963                           tablat	equ	0xFF5
  5964                           prodh	equ	0xFF4
  5965                           prodl	equ	0xFF3
  5966                           postinc0	equ	0xFEE
  5967                           wreg	equ	0xFE8
  5968                           indf2	equ	0xFDF
  5969                           postinc2	equ	0xFDE
  5970                           postdec2	equ	0xFDD
  5971                           fsr2h	equ	0xFDA
  5972                           fsr2l	equ	0xFD9
  5973                           status	equ	0xFD8
  5974                           
  5975 ;; *************** function ___fldiv *****************
  5976 ;; Defined at:
  5977 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\sprcdiv.c"
  5978 ;; Parameters:    Size  Location     Type
  5979 ;;  b               4    0[COMRAM] unsigned char 
  5980 ;;  a               4    4[COMRAM] unsigned char 
  5981 ;; Auto vars:     Size  Location     Type
  5982 ;;  grs             4   19[COMRAM] unsigned long 
  5983 ;;  rem             4   13[COMRAM] unsigned long 
  5984 ;;  new_exp         2   17[COMRAM] int 
  5985 ;;  aexp            1   24[COMRAM] unsigned char 
  5986 ;;  bexp            1   23[COMRAM] unsigned char 
  5987 ;;  sign            1   12[COMRAM] unsigned char 
  5988 ;; Return value:  Size  Location     Type
  5989 ;;                  4    0[COMRAM] unsigned char 
  5990 ;; Registers used:
  5991 ;;		wreg, status,2, status,0
  5992 ;; Tracked objects:
  5993 ;;		On entry : 0/0
  5994 ;;		On exit  : 0/0
  5995 ;;		Unchanged: 0/0
  5996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5997 ;;      Params:         8       0       0       0       0       0       0       0       0
  5998 ;;      Locals:        13       0       0       0       0       0       0       0       0
  5999 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6000 ;;      Totals:        25       0       0       0       0       0       0       0       0
  6001 ;;Total ram usage:       25 bytes
  6002 ;; Hardware stack levels used:    1
  6003 ;; This function calls:
  6004 ;;		Nothing
  6005 ;; This function is called by:
  6006 ;;		_main
  6007 ;;		_read_adc
  6008 ;; This function uses a non-reentrant model
  6009 ;;
  6010                           
  6011                           	psect	text19
  6012  001B88                     __ptext19:
  6013                           	opt stack 0
  6014  001B88                     ___fldiv:
  6015                           	opt stack 28
  6016                           
  6017                           ;incstack = 0
  6018  001B88  5004               	movf	___fldiv@b+3,w,c
  6019  001B8A  0B80               	andlw	128
  6020  001B8C  6E0D               	movwf	___fldiv@sign,c
  6021  001B8E  5004               	movf	___fldiv@b+3,w,c
  6022  001B90  2404               	addwf	___fldiv@b+3,w,c
  6023  001B92  6E18               	movwf	___fldiv@bexp,c
  6024  001B94  BE03               	btfsc	___fldiv@b+2,7,c
  6025  001B96  8018               	bsf	___fldiv@bexp,0,c
  6026  001B98  5018               	movf	___fldiv@bexp,w,c
  6027  001B9A  B4D8               	btfsc	status,2,c
  6028  001B9C  D00D               	goto	l2992
  6029  001B9E  2818               	incf	___fldiv@bexp,w,c
  6030  001BA0  A4D8               	btfss	status,2,c
  6031  001BA2  D008               	goto	l2988
  6032  001BA4  0E00               	movlw	0
  6033  001BA6  6E01               	movwf	___fldiv@b,c
  6034  001BA8  0E00               	movlw	0
  6035  001BAA  6E02               	movwf	___fldiv@b+1,c
  6036  001BAC  0E00               	movlw	0
  6037  001BAE  6E03               	movwf	___fldiv@b+2,c
  6038  001BB0  0E00               	movlw	0
  6039  001BB2  6E04               	movwf	___fldiv@b+3,c
  6040  001BB4                     l2988:
  6041  001BB4  8E03               	bsf	___fldiv@b+2,7,c
  6042  001BB6  D006               	goto	L10
  6043  001BB8                     l2992:
  6044  001BB8  0E00               	movlw	0
  6045  001BBA  6E01               	movwf	___fldiv@b,c
  6046  001BBC  0E00               	movlw	0
  6047  001BBE  6E02               	movwf	___fldiv@b+1,c
  6048  001BC0  0E00               	movlw	0
  6049  001BC2  6E03               	movwf	___fldiv@b+2,c
  6050  001BC4                     L10:
  6051  001BC4  0E00               	movlw	0
  6052  001BC6  6E04               	movwf	___fldiv@b+3,c
  6053  001BC8  5008               	movf	___fldiv@a+3,w,c
  6054  001BCA  0B80               	andlw	128
  6055  001BCC  1A0D               	xorwf	___fldiv@sign,f,c
  6056  001BCE  5008               	movf	___fldiv@a+3,w,c
  6057  001BD0  2408               	addwf	___fldiv@a+3,w,c
  6058  001BD2  6E19               	movwf	___fldiv@aexp,c
  6059  001BD4  BE07               	btfsc	___fldiv@a+2,7,c
  6060  001BD6  8019               	bsf	___fldiv@aexp,0,c
  6061  001BD8  5019               	movf	___fldiv@aexp,w,c
  6062  001BDA  B4D8               	btfsc	status,2,c
  6063  001BDC  D00D               	goto	l3012
  6064  001BDE  2819               	incf	___fldiv@aexp,w,c
  6065  001BE0  A4D8               	btfss	status,2,c
  6066  001BE2  D008               	goto	l3008
  6067  001BE4  0E00               	movlw	0
  6068  001BE6  6E05               	movwf	___fldiv@a,c
  6069  001BE8  0E00               	movlw	0
  6070  001BEA  6E06               	movwf	___fldiv@a+1,c
  6071  001BEC  0E00               	movlw	0
  6072  001BEE  6E07               	movwf	___fldiv@a+2,c
  6073  001BF0  0E00               	movlw	0
  6074  001BF2  6E08               	movwf	___fldiv@a+3,c
  6075  001BF4                     l3008:
  6076  001BF4  8E07               	bsf	___fldiv@a+2,7,c
  6077  001BF6  D006               	goto	L11
  6078  001BF8                     l3012:
  6079  001BF8  0E00               	movlw	0
  6080  001BFA  6E05               	movwf	___fldiv@a,c
  6081  001BFC  0E00               	movlw	0
  6082  001BFE  6E06               	movwf	___fldiv@a+1,c
  6083  001C00  0E00               	movlw	0
  6084  001C02  6E07               	movwf	___fldiv@a+2,c
  6085  001C04                     L11:
  6086  001C04  0E00               	movlw	0
  6087  001C06  6E08               	movwf	___fldiv@a+3,c
  6088  001C08  5005               	movf	___fldiv@a,w,c
  6089  001C0A  1006               	iorwf	___fldiv@a+1,w,c
  6090  001C0C  1007               	iorwf	___fldiv@a+2,w,c
  6091  001C0E  1008               	iorwf	___fldiv@a+3,w,c
  6092  001C10  A4D8               	btfss	status,2,c
  6093  001C12  D015               	goto	l3024
  6094  001C14  0E00               	movlw	0
  6095  001C16  6E01               	movwf	___fldiv@b,c
  6096  001C18  0E00               	movlw	0
  6097  001C1A  6E02               	movwf	___fldiv@b+1,c
  6098  001C1C  0E00               	movlw	0
  6099  001C1E  6E03               	movwf	___fldiv@b+2,c
  6100  001C20  0E00               	movlw	0
  6101  001C22  6E04               	movwf	___fldiv@b+3,c
  6102  001C24  0E80               	movlw	128
  6103  001C26  1203               	iorwf	___fldiv@b+2,f,c
  6104  001C28  0E7F               	movlw	127
  6105  001C2A  1204               	iorwf	___fldiv@b+3,f,c
  6106  001C2C  C001  F001         	movff	___fldiv@b,?___fldiv
  6107  001C30  C002  F002         	movff	___fldiv@b+1,?___fldiv+1
  6108  001C34  C003  F003         	movff	___fldiv@b+2,?___fldiv+2
  6109  001C38  C004  F004         	movff	___fldiv@b+3,?___fldiv+3
  6110  001C3C  0012               	return	
  6111  001C3E                     l3024:
  6112  001C3E  5018               	movf	___fldiv@bexp,w,c
  6113  001C40  A4D8               	btfss	status,2,c
  6114  001C42  D011               	goto	l3032
  6115  001C44  0E00               	movlw	0
  6116  001C46  6E01               	movwf	___fldiv@b,c
  6117  001C48  0E00               	movlw	0
  6118  001C4A  6E02               	movwf	___fldiv@b+1,c
  6119  001C4C  0E00               	movlw	0
  6120  001C4E  6E03               	movwf	___fldiv@b+2,c
  6121  001C50  0E00               	movlw	0
  6122  001C52  6E04               	movwf	___fldiv@b+3,c
  6123  001C54  C001  F001         	movff	___fldiv@b,?___fldiv
  6124  001C58  C002  F002         	movff	___fldiv@b+1,?___fldiv+1
  6125  001C5C  C003  F003         	movff	___fldiv@b+2,?___fldiv+2
  6126  001C60  C004  F004         	movff	___fldiv@b+3,?___fldiv+3
  6127  001C64  0012               	return	
  6128  001C66                     l3032:
  6129  001C66  5019               	movf	___fldiv@aexp,w,c
  6130  001C68  6E09               	movwf	??___fldiv& (0+255),c
  6131  001C6A  6A0A               	clrf	(??___fldiv+1)& (0+255),c
  6132  001C6C  1E09               	comf	??___fldiv,f,c
  6133  001C6E  1E0A               	comf	??___fldiv+1,f,c
  6134  001C70  4A09               	infsnz	??___fldiv,f,c
  6135  001C72  2A0A               	incf	??___fldiv+1,f,c
  6136  001C74  5018               	movf	___fldiv@bexp,w,c
  6137  001C76  6E0B               	movwf	(??___fldiv+2)& (0+255),c
  6138  001C78  6A0C               	clrf	(??___fldiv+3)& (0+255),c
  6139  001C7A  5009               	movf	??___fldiv,w,c
  6140  001C7C  260B               	addwf	??___fldiv+2,f,c
  6141  001C7E  500A               	movf	??___fldiv+1,w,c
  6142  001C80  220C               	addwfc	??___fldiv+3,f,c
  6143  001C82  0E7F               	movlw	127
  6144  001C84  240B               	addwf	??___fldiv+2,w,c
  6145  001C86  6E12               	movwf	___fldiv@new_exp,c
  6146  001C88  0E00               	movlw	0
  6147  001C8A  200C               	addwfc	??___fldiv+3,w,c
  6148  001C8C  6E13               	movwf	___fldiv@new_exp+1,c
  6149  001C8E  C001  F00E         	movff	___fldiv@b,___fldiv@rem
  6150  001C92  C002  F00F         	movff	___fldiv@b+1,___fldiv@rem+1
  6151  001C96  C003  F010         	movff	___fldiv@b+2,___fldiv@rem+2
  6152  001C9A  C004  F011         	movff	___fldiv@b+3,___fldiv@rem+3
  6153  001C9E  0E00               	movlw	0
  6154  001CA0  6E01               	movwf	___fldiv@b,c
  6155  001CA2  0E00               	movlw	0
  6156  001CA4  6E02               	movwf	___fldiv@b+1,c
  6157  001CA6  0E00               	movlw	0
  6158  001CA8  6E03               	movwf	___fldiv@b+2,c
  6159  001CAA  0E00               	movlw	0
  6160  001CAC  6E04               	movwf	___fldiv@b+3,c
  6161  001CAE  0E00               	movlw	0
  6162  001CB0  6E14               	movwf	___fldiv@grs,c
  6163  001CB2  0E00               	movlw	0
  6164  001CB4  6E15               	movwf	___fldiv@grs+1,c
  6165  001CB6  0E00               	movlw	0
  6166  001CB8  6E16               	movwf	___fldiv@grs+2,c
  6167  001CBA  0E00               	movlw	0
  6168  001CBC  6E17               	movwf	___fldiv@grs+3,c
  6169  001CBE  0E00               	movlw	0
  6170  001CC0  6E19               	movwf	___fldiv@aexp,c
  6171  001CC2  D028               	goto	l822
  6172  001CC4                     l3042:
  6173  001CC4  5019               	movf	___fldiv@aexp,w,c
  6174  001CC6  B4D8               	btfsc	status,2,c
  6175  001CC8  D011               	goto	l3050
  6176  001CCA  90D8               	bcf	status,0,c
  6177  001CCC  360E               	rlcf	___fldiv@rem,f,c
  6178  001CCE  360F               	rlcf	___fldiv@rem+1,f,c
  6179  001CD0  3610               	rlcf	___fldiv@rem+2,f,c
  6180  001CD2  3611               	rlcf	___fldiv@rem+3,f,c
  6181  001CD4  90D8               	bcf	status,0,c
  6182  001CD6  3601               	rlcf	___fldiv@b,f,c
  6183  001CD8  3602               	rlcf	___fldiv@b+1,f,c
  6184  001CDA  3603               	rlcf	___fldiv@b+2,f,c
  6185  001CDC  3604               	rlcf	___fldiv@b+3,f,c
  6186  001CDE  BE17               	btfsc	___fldiv@grs+3,7,c
  6187  001CE0  8001               	bsf	___fldiv@b,0,c
  6188  001CE2  90D8               	bcf	status,0,c
  6189  001CE4  3614               	rlcf	___fldiv@grs,f,c
  6190  001CE6  3615               	rlcf	___fldiv@grs+1,f,c
  6191  001CE8  3616               	rlcf	___fldiv@grs+2,f,c
  6192  001CEA  3617               	rlcf	___fldiv@grs+3,f,c
  6193  001CEC                     l3050:
  6194  001CEC  5005               	movf	___fldiv@a,w,c
  6195  001CEE  5C0E               	subwf	___fldiv@rem,w,c
  6196  001CF0  5006               	movf	___fldiv@a+1,w,c
  6197  001CF2  580F               	subwfb	___fldiv@rem+1,w,c
  6198  001CF4  5007               	movf	___fldiv@a+2,w,c
  6199  001CF6  5810               	subwfb	___fldiv@rem+2,w,c
  6200  001CF8  5008               	movf	___fldiv@a+3,w,c
  6201  001CFA  5811               	subwfb	___fldiv@rem+3,w,c
  6202  001CFC  A0D8               	btfss	status,0,c
  6203  001CFE  D009               	goto	l3056
  6204  001D00  8C17               	bsf	___fldiv@grs+3,6,c
  6205  001D02  5005               	movf	___fldiv@a,w,c
  6206  001D04  5E0E               	subwf	___fldiv@rem,f,c
  6207  001D06  5006               	movf	___fldiv@a+1,w,c
  6208  001D08  5A0F               	subwfb	___fldiv@rem+1,f,c
  6209  001D0A  5007               	movf	___fldiv@a+2,w,c
  6210  001D0C  5A10               	subwfb	___fldiv@rem+2,f,c
  6211  001D0E  5008               	movf	___fldiv@a+3,w,c
  6212  001D10  5A11               	subwfb	___fldiv@rem+3,f,c
  6213  001D12                     l3056:
  6214  001D12  2A19               	incf	___fldiv@aexp,f,c
  6215  001D14                     l822:
  6216  001D14  0E19               	movlw	25
  6217  001D16  6419               	cpfsgt	___fldiv@aexp,c
  6218  001D18  D7D5               	goto	l3042
  6219  001D1A  500E               	movf	___fldiv@rem,w,c
  6220  001D1C  100F               	iorwf	___fldiv@rem+1,w,c
  6221  001D1E  1010               	iorwf	___fldiv@rem+2,w,c
  6222  001D20  1011               	iorwf	___fldiv@rem+3,w,c
  6223  001D22  B4D8               	btfsc	status,2,c
  6224  001D24  D011               	goto	l3068
  6225  001D26  8014               	bsf	___fldiv@grs,0,c
  6226  001D28  D00F               	goto	l3068
  6227  001D2A                     l3062:
  6228  001D2A  90D8               	bcf	status,0,c
  6229  001D2C  3601               	rlcf	___fldiv@b,f,c
  6230  001D2E  3602               	rlcf	___fldiv@b+1,f,c
  6231  001D30  3603               	rlcf	___fldiv@b+2,f,c
  6232  001D32  3604               	rlcf	___fldiv@b+3,f,c
  6233  001D34  BE17               	btfsc	___fldiv@grs+3,7,c
  6234  001D36  8001               	bsf	___fldiv@b,0,c
  6235  001D38  90D8               	bcf	status,0,c
  6236  001D3A  3614               	rlcf	___fldiv@grs,f,c
  6237  001D3C  3615               	rlcf	___fldiv@grs+1,f,c
  6238  001D3E  3616               	rlcf	___fldiv@grs+2,f,c
  6239  001D40  3617               	rlcf	___fldiv@grs+3,f,c
  6240  001D42  0612               	decf	___fldiv@new_exp,f,c
  6241  001D44  A0D8               	btfss	status,0,c
  6242  001D46  0613               	decf	___fldiv@new_exp+1,f,c
  6243  001D48                     l3068:
  6244  001D48  AE03               	btfss	___fldiv@b+2,7,c
  6245  001D4A  D7EF               	goto	l3062
  6246  001D4C  0E00               	movlw	0
  6247  001D4E  6E19               	movwf	___fldiv@aexp,c
  6248  001D50  AE17               	btfss	___fldiv@grs+3,7,c
  6249  001D52  D016               	goto	l833
  6250  001D54  0EFF               	movlw	255
  6251  001D56  1414               	andwf	___fldiv@grs,w,c
  6252  001D58  6E09               	movwf	??___fldiv& (0+255),c
  6253  001D5A  0EFF               	movlw	255
  6254  001D5C  1415               	andwf	___fldiv@grs+1,w,c
  6255  001D5E  6E0A               	movwf	(??___fldiv+1)& (0+255),c
  6256  001D60  0EFF               	movlw	255
  6257  001D62  1416               	andwf	___fldiv@grs+2,w,c
  6258  001D64  6E0B               	movwf	(??___fldiv+2)& (0+255),c
  6259  001D66  0E7F               	movlw	127
  6260  001D68  1417               	andwf	___fldiv@grs+3,w,c
  6261  001D6A  6E0C               	movwf	(??___fldiv+3)& (0+255),c
  6262  001D6C  5009               	movf	??___fldiv,w,c
  6263  001D6E  100A               	iorwf	??___fldiv+1,w,c
  6264  001D70  100B               	iorwf	??___fldiv+2,w,c
  6265  001D72  100C               	iorwf	??___fldiv+3,w,c
  6266  001D74  A4D8               	btfss	status,2,c
  6267  001D76  D002               	goto	l3078
  6268  001D78  A001               	btfss	___fldiv@b,0,c
  6269  001D7A  D002               	goto	l833
  6270  001D7C                     l3078:
  6271  001D7C  0E01               	movlw	1
  6272  001D7E  6E19               	movwf	___fldiv@aexp,c
  6273  001D80                     l833:
  6274  001D80  5019               	movf	___fldiv@aexp,w,c
  6275  001D82  B4D8               	btfsc	status,2,c
  6276  001D84  D01F               	goto	l3088
  6277  001D86  0E01               	movlw	1
  6278  001D88  2601               	addwf	___fldiv@b,f,c
  6279  001D8A  0E00               	movlw	0
  6280  001D8C  2202               	addwfc	___fldiv@b+1,f,c
  6281  001D8E  2203               	addwfc	___fldiv@b+2,f,c
  6282  001D90  2204               	addwfc	___fldiv@b+3,f,c
  6283  001D92  A004               	btfss	___fldiv@b+3,0,c
  6284  001D94  D017               	goto	l3088
  6285  001D96  C001  F009         	movff	___fldiv@b,??___fldiv
  6286  001D9A  C002  F00A         	movff	___fldiv@b+1,??___fldiv+1
  6287  001D9E  C003  F00B         	movff	___fldiv@b+2,??___fldiv+2
  6288  001DA2  C004  F00C         	movff	___fldiv@b+3,??___fldiv+3
  6289  001DA6  340C               	rlcf	??___fldiv+3,w,c
  6290  001DA8  320C               	rrcf	??___fldiv+3,f,c
  6291  001DAA  320B               	rrcf	??___fldiv+2,f,c
  6292  001DAC  320A               	rrcf	??___fldiv+1,f,c
  6293  001DAE  3209               	rrcf	??___fldiv,f,c
  6294  001DB0  C009  F001         	movff	??___fldiv,___fldiv@b
  6295  001DB4  C00A  F002         	movff	??___fldiv+1,___fldiv@b+1
  6296  001DB8  C00B  F003         	movff	??___fldiv+2,___fldiv@b+2
  6297  001DBC  C00C  F004         	movff	??___fldiv+3,___fldiv@b+3
  6298  001DC0  4A12               	infsnz	___fldiv@new_exp,f,c
  6299  001DC2  2A13               	incf	___fldiv@new_exp+1,f,c
  6300  001DC4                     l3088:
  6301  001DC4  BE13               	btfsc	___fldiv@new_exp+1,7,c
  6302  001DC6  D010               	goto	l3092
  6303  001DC8  5013               	movf	___fldiv@new_exp+1,w,c
  6304  001DCA  E103               	bnz	u3250
  6305  001DCC  2812               	incf	___fldiv@new_exp,w,c
  6306  001DCE  A0D8               	btfss	status,0,c
  6307  001DD0  D00B               	goto	l3092
  6308  001DD2                     u3250:
  6309  001DD2  0E00               	movlw	0
  6310  001DD4  6E13               	movwf	___fldiv@new_exp+1,c
  6311  001DD6  6812               	setf	___fldiv@new_exp,c
  6312  001DD8  0E00               	movlw	0
  6313  001DDA  6E01               	movwf	___fldiv@b,c
  6314  001DDC  0E00               	movlw	0
  6315  001DDE  6E02               	movwf	___fldiv@b+1,c
  6316  001DE0  0E00               	movlw	0
  6317  001DE2  6E03               	movwf	___fldiv@b+2,c
  6318  001DE4  0E00               	movlw	0
  6319  001DE6  6E04               	movwf	___fldiv@b+3,c
  6320  001DE8                     l3092:
  6321  001DE8  BE13               	btfsc	___fldiv@new_exp+1,7,c
  6322  001DEA  D005               	goto	l3094
  6323  001DEC  5013               	movf	___fldiv@new_exp+1,w,c
  6324  001DEE  E111               	bnz	l3096
  6325  001DF0  0412               	decf	___fldiv@new_exp,w,c
  6326  001DF2  B0D8               	btfsc	status,0,c
  6327  001DF4  D00E               	goto	l3096
  6328  001DF6                     l3094:
  6329  001DF6  0E00               	movlw	0
  6330  001DF8  6E13               	movwf	___fldiv@new_exp+1,c
  6331  001DFA  0E00               	movlw	0
  6332  001DFC  6E12               	movwf	___fldiv@new_exp,c
  6333  001DFE  0E00               	movlw	0
  6334  001E00  6E01               	movwf	___fldiv@b,c
  6335  001E02  0E00               	movlw	0
  6336  001E04  6E02               	movwf	___fldiv@b+1,c
  6337  001E06  0E00               	movlw	0
  6338  001E08  6E03               	movwf	___fldiv@b+2,c
  6339  001E0A  0E00               	movlw	0
  6340  001E0C  6E04               	movwf	___fldiv@b+3,c
  6341  001E0E  0E00               	movlw	0
  6342  001E10  6E0D               	movwf	___fldiv@sign,c
  6343  001E12                     l3096:
  6344  001E12  C012  F018         	movff	___fldiv@new_exp,___fldiv@bexp
  6345  001E16  A018               	btfss	___fldiv@bexp,0,c
  6346  001E18  D002               	goto	l3102
  6347  001E1A  8E03               	bsf	___fldiv@b+2,7,c
  6348  001E1C  D001               	goto	l3104
  6349  001E1E                     l3102:
  6350  001E1E  9E03               	bcf	___fldiv@b+2,7,c
  6351  001E20                     l3104:
  6352  001E20  90D8               	bcf	status,0,c
  6353  001E22  3018               	rrcf	___fldiv@bexp,w,c
  6354  001E24  6E04               	movwf	___fldiv@b+3,c
  6355  001E26  500D               	movf	___fldiv@sign,w,c
  6356  001E28  1204               	iorwf	___fldiv@b+3,f,c
  6357  001E2A  C001  F001         	movff	___fldiv@b,?___fldiv
  6358  001E2E  C002  F002         	movff	___fldiv@b+1,?___fldiv+1
  6359  001E32  C003  F003         	movff	___fldiv@b+2,?___fldiv+2
  6360  001E36  C004  F004         	movff	___fldiv@b+3,?___fldiv+3
  6361  001E3A  0012               	return	
  6362  001E3C                     __end_of___fldiv:
  6363                           	opt stack 0
  6364                           tblptru	equ	0xFF8
  6365                           tblptrh	equ	0xFF7
  6366                           tblptrl	equ	0xFF6
  6367                           tablat	equ	0xFF5
  6368                           prodh	equ	0xFF4
  6369                           prodl	equ	0xFF3
  6370                           postinc0	equ	0xFEE
  6371                           wreg	equ	0xFE8
  6372                           indf2	equ	0xFDF
  6373                           postinc2	equ	0xFDE
  6374                           postdec2	equ	0xFDD
  6375                           fsr2h	equ	0xFDA
  6376                           fsr2l	equ	0xFD9
  6377                           status	equ	0xFD8
  6378                           
  6379 ;; *************** function ___awdiv *****************
  6380 ;; Defined at:
  6381 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\awdiv.c"
  6382 ;; Parameters:    Size  Location     Type
  6383 ;;  dividend        2    6[COMRAM] int 
  6384 ;;  divisor         2    8[COMRAM] int 
  6385 ;; Auto vars:     Size  Location     Type
  6386 ;;  quotient        2   12[COMRAM] int 
  6387 ;;  sign            1   11[COMRAM] unsigned char 
  6388 ;;  counter         1   10[COMRAM] unsigned char 
  6389 ;; Return value:  Size  Location     Type
  6390 ;;                  2    6[COMRAM] int 
  6391 ;; Registers used:
  6392 ;;		wreg, status,2, status,0
  6393 ;; Tracked objects:
  6394 ;;		On entry : 0/0
  6395 ;;		On exit  : 0/0
  6396 ;;		Unchanged: 0/0
  6397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6398 ;;      Params:         4       0       0       0       0       0       0       0       0
  6399 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6400 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6401 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6402 ;;Total ram usage:        8 bytes
  6403 ;; Hardware stack levels used:    1
  6404 ;; This function calls:
  6405 ;;		Nothing
  6406 ;; This function is called by:
  6407 ;;		_read_adc
  6408 ;;		_fround
  6409 ;;		_scale
  6410 ;;		_sprintf
  6411 ;; This function uses a non-reentrant model
  6412 ;;
  6413                           
  6414                           	psect	text20
  6415  002B24                     __ptext20:
  6416                           	opt stack 0
  6417  002B24                     ___awdiv:
  6418                           	opt stack 27
  6419                           
  6420                           ;incstack = 0
  6421  002B24  0E00               	movlw	0
  6422  002B26  6E0C               	movwf	___awdiv@sign,c
  6423  002B28  AE0A               	btfss	___awdiv@divisor+1,7,c
  6424  002B2A  D006               	goto	l2692
  6425  002B2C  6C09               	negf	___awdiv@divisor,c
  6426  002B2E  1E0A               	comf	___awdiv@divisor+1,f,c
  6427  002B30  B0D8               	btfsc	status,0,c
  6428  002B32  2A0A               	incf	___awdiv@divisor+1,f,c
  6429  002B34  0E01               	movlw	1
  6430  002B36  6E0C               	movwf	___awdiv@sign,c
  6431  002B38                     l2692:
  6432  002B38  AE08               	btfss	___awdiv@dividend+1,7,c
  6433  002B3A  D006               	goto	l2698
  6434  002B3C  6C07               	negf	___awdiv@dividend,c
  6435  002B3E  1E08               	comf	___awdiv@dividend+1,f,c
  6436  002B40  B0D8               	btfsc	status,0,c
  6437  002B42  2A08               	incf	___awdiv@dividend+1,f,c
  6438  002B44  0E01               	movlw	1
  6439  002B46  1A0C               	xorwf	___awdiv@sign,f,c
  6440  002B48                     l2698:
  6441  002B48  0E00               	movlw	0
  6442  002B4A  6E0E               	movwf	___awdiv@quotient+1,c
  6443  002B4C  0E00               	movlw	0
  6444  002B4E  6E0D               	movwf	___awdiv@quotient,c
  6445  002B50  5009               	movf	___awdiv@divisor,w,c
  6446  002B52  100A               	iorwf	___awdiv@divisor+1,w,c
  6447  002B54  B4D8               	btfsc	status,2,c
  6448  002B56  D01C               	goto	l2720
  6449  002B58  0E01               	movlw	1
  6450  002B5A  6E0B               	movwf	___awdiv@counter,c
  6451  002B5C  D004               	goto	l2706
  6452  002B5E                     l2704:
  6453  002B5E  90D8               	bcf	status,0,c
  6454  002B60  3609               	rlcf	___awdiv@divisor,f,c
  6455  002B62  360A               	rlcf	___awdiv@divisor+1,f,c
  6456  002B64  2A0B               	incf	___awdiv@counter,f,c
  6457  002B66                     l2706:
  6458  002B66  AE0A               	btfss	___awdiv@divisor+1,7,c
  6459  002B68  D7FA               	goto	l2704
  6460  002B6A                     l2708:
  6461  002B6A  90D8               	bcf	status,0,c
  6462  002B6C  360D               	rlcf	___awdiv@quotient,f,c
  6463  002B6E  360E               	rlcf	___awdiv@quotient+1,f,c
  6464  002B70  5009               	movf	___awdiv@divisor,w,c
  6465  002B72  5C07               	subwf	___awdiv@dividend,w,c
  6466  002B74  500A               	movf	___awdiv@divisor+1,w,c
  6467  002B76  5808               	subwfb	___awdiv@dividend+1,w,c
  6468  002B78  A0D8               	btfss	status,0,c
  6469  002B7A  D005               	goto	l2716
  6470  002B7C  5009               	movf	___awdiv@divisor,w,c
  6471  002B7E  5E07               	subwf	___awdiv@dividend,f,c
  6472  002B80  500A               	movf	___awdiv@divisor+1,w,c
  6473  002B82  5A08               	subwfb	___awdiv@dividend+1,f,c
  6474  002B84  800D               	bsf	___awdiv@quotient,0,c
  6475  002B86                     l2716:
  6476  002B86  90D8               	bcf	status,0,c
  6477  002B88  320A               	rrcf	___awdiv@divisor+1,f,c
  6478  002B8A  3209               	rrcf	___awdiv@divisor,f,c
  6479  002B8C  2E0B               	decfsz	___awdiv@counter,f,c
  6480  002B8E  D7ED               	goto	l2708
  6481  002B90                     l2720:
  6482  002B90  500C               	movf	___awdiv@sign,w,c
  6483  002B92  B4D8               	btfsc	status,2,c
  6484  002B94  D004               	goto	l2724
  6485  002B96  6C0D               	negf	___awdiv@quotient,c
  6486  002B98  1E0E               	comf	___awdiv@quotient+1,f,c
  6487  002B9A  B0D8               	btfsc	status,0,c
  6488  002B9C  2A0E               	incf	___awdiv@quotient+1,f,c
  6489  002B9E                     l2724:
  6490  002B9E  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  6491  002BA2  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  6492  002BA6  0012               	return	
  6493  002BA8                     __end_of___awdiv:
  6494                           	opt stack 0
  6495                           tblptru	equ	0xFF8
  6496                           tblptrh	equ	0xFF7
  6497                           tblptrl	equ	0xFF6
  6498                           tablat	equ	0xFF5
  6499                           prodh	equ	0xFF4
  6500                           prodl	equ	0xFF3
  6501                           postinc0	equ	0xFEE
  6502                           wreg	equ	0xFE8
  6503                           indf2	equ	0xFDF
  6504                           postinc2	equ	0xFDE
  6505                           postdec2	equ	0xFDD
  6506                           fsr2h	equ	0xFDA
  6507                           fsr2l	equ	0xFD9
  6508                           status	equ	0xFD8
  6509                           
  6510 ;; *************** function _LCD_write_string *****************
  6511 ;; Defined at:
  6512 ;;		line 194 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  6513 ;; Parameters:    Size  Location     Type
  6514 ;;  buffer          2   17[COMRAM] PTR unsigned char 
  6515 ;;		 -> str(8), LCD_write_integer@convertedInt(6), 
  6516 ;; Auto vars:     Size  Location     Type
  6517 ;;		None
  6518 ;; Return value:  Size  Location     Type
  6519 ;;                  1    wreg      void 
  6520 ;; Registers used:
  6521 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6522 ;; Tracked objects:
  6523 ;;		On entry : 0/0
  6524 ;;		On exit  : 0/0
  6525 ;;		Unchanged: 0/0
  6526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6527 ;;      Params:         2       0       0       0       0       0       0       0       0
  6528 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6529 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6530 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6531 ;;Total ram usage:        2 bytes
  6532 ;; Hardware stack levels used:    1
  6533 ;; Hardware stack levels required when called:    5
  6534 ;; This function calls:
  6535 ;;		_LCD_write_char
  6536 ;; This function is called by:
  6537 ;;		_ricarica
  6538 ;;		_LCD_write_integer
  6539 ;; This function uses a non-reentrant model
  6540 ;;
  6541                           
  6542                           	psect	text21
  6543  002FD4                     __ptext21:
  6544                           	opt stack 0
  6545  002FD4                     _LCD_write_string:
  6546                           	opt stack 24
  6547                           
  6548                           ;src\LCD_44780.c: 197: while(*buffer){
  6549                           
  6550                           ;incstack = 0
  6551  002FD4  D009               	goto	l3298
  6552  002FD6                     l3294:
  6553                           
  6554                           ;src\LCD_44780.c: 200: LCD_write_char(*buffer);
  6555  002FD6  C012  FFD9         	movff	LCD_write_string@buffer,fsr2l
  6556  002FDA  C013  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
  6557  002FDE  50DF               	movf	indf2,w,c
  6558  002FE0  EC4D  F016         	call	_LCD_write_char
  6559                           
  6560                           ;src\LCD_44780.c: 202: buffer++;
  6561  002FE4  4A12               	infsnz	LCD_write_string@buffer,f,c
  6562  002FE6  2A13               	incf	LCD_write_string@buffer+1,f,c
  6563  002FE8                     l3298:
  6564  002FE8  C012  FFD9         	movff	LCD_write_string@buffer,fsr2l
  6565  002FEC  C013  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
  6566  002FF0  50DF               	movf	indf2,w,c
  6567  002FF2  B4D8               	btfsc	status,2,c
  6568  002FF4  0012               	return	
  6569  002FF6  D7EF               	goto	l3294
  6570  002FF8                     __end_of_LCD_write_string:
  6571                           	opt stack 0
  6572                           tblptru	equ	0xFF8
  6573                           tblptrh	equ	0xFF7
  6574                           tblptrl	equ	0xFF6
  6575                           tablat	equ	0xFF5
  6576                           prodh	equ	0xFF4
  6577                           prodl	equ	0xFF3
  6578                           postinc0	equ	0xFEE
  6579                           wreg	equ	0xFE8
  6580                           indf2	equ	0xFDF
  6581                           postinc2	equ	0xFDE
  6582                           postdec2	equ	0xFDD
  6583                           fsr2h	equ	0xFDA
  6584                           fsr2l	equ	0xFD9
  6585                           status	equ	0xFD8
  6586                           
  6587 ;; *************** function _LCD_goto_line *****************
  6588 ;; Defined at:
  6589 ;;		line 111 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  6590 ;; Parameters:    Size  Location     Type
  6591 ;;  line            1    wreg     unsigned char 
  6592 ;; Auto vars:     Size  Location     Type
  6593 ;;  line            1   12[COMRAM] unsigned char 
  6594 ;; Return value:  Size  Location     Type
  6595 ;;                  1    wreg      void 
  6596 ;; Registers used:
  6597 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6598 ;; Tracked objects:
  6599 ;;		On entry : 0/0
  6600 ;;		On exit  : 0/0
  6601 ;;		Unchanged: 0/0
  6602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6603 ;;      Params:         0       0       0       0       0       0       0       0       0
  6604 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6605 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6606 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6607 ;;Total ram usage:        1 bytes
  6608 ;; Hardware stack levels used:    1
  6609 ;; Hardware stack levels required when called:    4
  6610 ;; This function calls:
  6611 ;;		_LCD_send_command
  6612 ;; This function is called by:
  6613 ;;		_ricarica
  6614 ;;		_LCD_goto_xy
  6615 ;; This function uses a non-reentrant model
  6616 ;;
  6617                           
  6618                           	psect	text22
  6619  002A6C                     __ptext22:
  6620                           	opt stack 0
  6621  002A6C                     _LCD_goto_line:
  6622                           	opt stack 25
  6623                           
  6624                           ;incstack = 0
  6625                           ;LCD_goto_line@line stored from wreg
  6626  002A6C  6E0D               	movwf	LCD_goto_line@line,c
  6627                           
  6628                           ;src\LCD_44780.c: 113: switch(line) {
  6629  002A6E  D04C               	goto	l3282
  6630  002A70                     l3274:
  6631  002A70  0E00               	movlw	0
  6632  002A72  6E09               	movwf	LCD_send_command@D2,c
  6633  002A74  0E00               	movlw	0
  6634  002A76  6E0A               	movwf	LCD_send_command@D1,c
  6635  002A78  0E00               	movlw	0
  6636  002A7A  6E0B               	movwf	LCD_send_command@D0,c
  6637  002A7C  0E01               	movlw	1
  6638  002A7E  EC6C  F017         	call	_LCD_send_command
  6639                           
  6640                           ;src\LCD_44780.c: 116: LCD_send_command(0,0,0,0);
  6641  002A82  0E00               	movlw	0
  6642  002A84  6E09               	movwf	LCD_send_command@D2,c
  6643  002A86  0E00               	movlw	0
  6644  002A88  6E0A               	movwf	LCD_send_command@D1,c
  6645  002A8A  0E00               	movlw	0
  6646  002A8C  6E0B               	movwf	LCD_send_command@D0,c
  6647  002A8E  0E00               	movlw	0
  6648  002A90  EC6C  F017         	call	_LCD_send_command
  6649                           
  6650                           ;src\LCD_44780.c: 117: break;
  6651  002A94  0012               	return	
  6652  002A96                     l3276:
  6653  002A96  0E01               	movlw	1
  6654  002A98  6E09               	movwf	LCD_send_command@D2,c
  6655  002A9A  0E00               	movlw	0
  6656  002A9C  6E0A               	movwf	LCD_send_command@D1,c
  6657  002A9E  0E00               	movlw	0
  6658  002AA0  6E0B               	movwf	LCD_send_command@D0,c
  6659  002AA2  0E01               	movlw	1
  6660  002AA4  EC6C  F017         	call	_LCD_send_command
  6661                           
  6662                           ;src\LCD_44780.c: 120: LCD_send_command(0,0,0,0);
  6663  002AA8  0E00               	movlw	0
  6664  002AAA  6E09               	movwf	LCD_send_command@D2,c
  6665  002AAC  0E00               	movlw	0
  6666  002AAE  6E0A               	movwf	LCD_send_command@D1,c
  6667  002AB0  0E00               	movlw	0
  6668  002AB2  6E0B               	movwf	LCD_send_command@D0,c
  6669  002AB4  0E00               	movlw	0
  6670  002AB6  EC6C  F017         	call	_LCD_send_command
  6671                           
  6672                           ;src\LCD_44780.c: 121: break;
  6673  002ABA  0012               	return	
  6674  002ABC                     l3278:
  6675  002ABC  0E00               	movlw	0
  6676  002ABE  6E09               	movwf	LCD_send_command@D2,c
  6677  002AC0  0E00               	movlw	0
  6678  002AC2  6E0A               	movwf	LCD_send_command@D1,c
  6679  002AC4  0E01               	movlw	1
  6680  002AC6  6E0B               	movwf	LCD_send_command@D0,c
  6681  002AC8  0E01               	movlw	1
  6682  002ACA  EC6C  F017         	call	_LCD_send_command
  6683                           
  6684                           ;src\LCD_44780.c: 124: LCD_send_command(0,1,0,0);
  6685  002ACE  0E01               	movlw	1
  6686  002AD0  6E09               	movwf	LCD_send_command@D2,c
  6687  002AD2  0E00               	movlw	0
  6688  002AD4  6E0A               	movwf	LCD_send_command@D1,c
  6689  002AD6  0E00               	movlw	0
  6690  002AD8  6E0B               	movwf	LCD_send_command@D0,c
  6691  002ADA  0E00               	movlw	0
  6692  002ADC  EC6C  F017         	call	_LCD_send_command
  6693                           
  6694                           ;src\LCD_44780.c: 125: break;
  6695  002AE0  0012               	return	
  6696  002AE2                     l3280:
  6697  002AE2  0E01               	movlw	1
  6698  002AE4  6E09               	movwf	LCD_send_command@D2,c
  6699  002AE6  0E00               	movlw	0
  6700  002AE8  6E0A               	movwf	LCD_send_command@D1,c
  6701  002AEA  0E01               	movlw	1
  6702  002AEC  6E0B               	movwf	LCD_send_command@D0,c
  6703  002AEE  0E01               	movlw	1
  6704  002AF0  EC6C  F017         	call	_LCD_send_command
  6705                           
  6706                           ;src\LCD_44780.c: 128: LCD_send_command(0,1,0,0);
  6707  002AF4  0E01               	movlw	1
  6708  002AF6  6E09               	movwf	LCD_send_command@D2,c
  6709  002AF8  0E00               	movlw	0
  6710  002AFA  6E0A               	movwf	LCD_send_command@D1,c
  6711  002AFC  0E00               	movlw	0
  6712  002AFE  6E0B               	movwf	LCD_send_command@D0,c
  6713  002B00  0E00               	movlw	0
  6714  002B02  EC6C  F017         	call	_LCD_send_command
  6715                           
  6716                           ;src\LCD_44780.c: 129: }
  6717  002B06  0012               	return	
  6718  002B08                     l3282:
  6719  002B08  500D               	movf	LCD_goto_line@line,w,c
  6720                           
  6721                           ; Switch size 1, requested type "space"
  6722                           ; Number of cases is 4, Range of values is 1 to 4
  6723                           ; switch strategies available:
  6724                           ; Name         Instructions Cycles
  6725                           ; simple_byte           13     7 (average)
  6726                           ;	Chosen strategy is simple_byte
  6727  002B0A  0A01               	xorlw	1	; case 1
  6728  002B0C  B4D8               	btfsc	status,2,c
  6729  002B0E  D7B0               	goto	l3274
  6730  002B10  0A03               	xorlw	3	; case 2
  6731  002B12  B4D8               	btfsc	status,2,c
  6732  002B14  D7C0               	goto	l3276
  6733  002B16  0A01               	xorlw	1	; case 3
  6734  002B18  B4D8               	btfsc	status,2,c
  6735  002B1A  D7D0               	goto	l3278
  6736  002B1C  0A07               	xorlw	7	; case 4
  6737  002B1E  A4D8               	btfss	status,2,c
  6738  002B20  0012               	return	
  6739  002B22  D7DF               	goto	l3280
  6740  002B24                     __end_of_LCD_goto_line:
  6741                           	opt stack 0
  6742                           tblptru	equ	0xFF8
  6743                           tblptrh	equ	0xFF7
  6744                           tblptrl	equ	0xFF6
  6745                           tablat	equ	0xFF5
  6746                           prodh	equ	0xFF4
  6747                           prodl	equ	0xFF3
  6748                           postinc0	equ	0xFEE
  6749                           wreg	equ	0xFE8
  6750                           indf2	equ	0xFDF
  6751                           postinc2	equ	0xFDE
  6752                           postdec2	equ	0xFDD
  6753                           fsr2h	equ	0xFDA
  6754                           fsr2l	equ	0xFD9
  6755                           status	equ	0xFD8
  6756                           
  6757 ;; *************** function _inizializzazione *****************
  6758 ;; Defined at:
  6759 ;;		line 92 in file "tester.c"
  6760 ;; Parameters:    Size  Location     Type
  6761 ;;		None
  6762 ;; Auto vars:     Size  Location     Type
  6763 ;;		None
  6764 ;; Return value:  Size  Location     Type
  6765 ;;                  1    wreg      void 
  6766 ;; Registers used:
  6767 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6768 ;; Tracked objects:
  6769 ;;		On entry : 0/0
  6770 ;;		On exit  : 0/0
  6771 ;;		Unchanged: 0/0
  6772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6773 ;;      Params:         0       0       0       0       0       0       0       0       0
  6774 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6775 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6776 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6777 ;;Total ram usage:        0 bytes
  6778 ;; Hardware stack levels used:    1
  6779 ;; Hardware stack levels required when called:    6
  6780 ;; This function calls:
  6781 ;;		_LCD_clear
  6782 ;;		_LCD_initialize
  6783 ;;		_LCD_write_message
  6784 ;;		_delay_ms
  6785 ;; This function is called by:
  6786 ;;		_main
  6787 ;; This function uses a non-reentrant model
  6788 ;;
  6789                           
  6790                           	psect	text23
  6791  002DC8                     __ptext23:
  6792                           	opt stack 0
  6793  002DC8                     _inizializzazione:
  6794                           	opt stack 24
  6795                           
  6796                           ;tester.c: 93: LATA = 0x00;
  6797                           
  6798                           ;incstack = 0
  6799  002DC8  0E00               	movlw	0
  6800  002DCA  6E89               	movwf	3977,c	;volatile
  6801                           
  6802                           ;tester.c: 94: TRISA = 0b11111011;
  6803  002DCC  0EFB               	movlw	251
  6804  002DCE  6E92               	movwf	3986,c	;volatile
  6805                           
  6806                           ;tester.c: 96: LATB = 0x00;
  6807  002DD0  0E00               	movlw	0
  6808  002DD2  6E8A               	movwf	3978,c	;volatile
  6809                           
  6810                           ;tester.c: 97: TRISB = 0b00;
  6811  002DD4  0E00               	movlw	0
  6812  002DD6  6E93               	movwf	3987,c	;volatile
  6813                           
  6814                           ;tester.c: 99: LATC = 0x00;
  6815  002DD8  0E00               	movlw	0
  6816  002DDA  6E8B               	movwf	3979,c	;volatile
  6817                           
  6818                           ;tester.c: 100: TRISC = 0b11011111;
  6819  002DDC  0EDF               	movlw	223
  6820  002DDE  6E94               	movwf	3988,c	;volatile
  6821                           
  6822                           ;tester.c: 102: LCD_initialize(16);
  6823  002DE0  0E10               	movlw	16
  6824  002DE2  EC3B  F014         	call	_LCD_initialize
  6825                           
  6826                           ;tester.c: 103: LCD_write_message("inizializzazione");
  6827  002DE6  0EB3               	movlw	low STR_5
  6828  002DE8  6E12               	movwf	LCD_write_message@buffer,c
  6829  002DEA  0E08               	movlw	high STR_5
  6830  002DEC  6E13               	movwf	LCD_write_message@buffer+1,c
  6831  002DEE  EC9B  F017         	call	_LCD_write_message	;wreg free
  6832                           
  6833                           ;tester.c: 104: delay_ms(1000);
  6834  002DF2  0E03               	movlw	3
  6835  002DF4  6E08               	movwf	delay_ms@value_ms+1,c
  6836  002DF6  0EE8               	movlw	232
  6837  002DF8  6E07               	movwf	delay_ms@value_ms,c
  6838  002DFA  EC53  F017         	call	_delay_ms	;wreg free
  6839                           
  6840                           ;tester.c: 105: LCD_clear();
  6841  002DFE  ECC4  F017         	call	_LCD_clear	;wreg free
  6842                           
  6843                           ;tester.c: 107: ADCON0 = 0b00000000;
  6844  002E02  0E00               	movlw	0
  6845  002E04  6EC2               	movwf	4034,c	;volatile
  6846                           
  6847                           ;tester.c: 108: ADCON1 = 0b00001011;
  6848  002E06  0E0B               	movlw	11
  6849  002E08  6EC1               	movwf	4033,c	;volatile
  6850                           
  6851                           ;tester.c: 109: ADCON2 = 0b10110010;
  6852  002E0A  0EB2               	movlw	178
  6853  002E0C  6EC0               	movwf	4032,c	;volatile
  6854                           
  6855                           ;tester.c: 110: ADCON0bits.CHS3 = 0;
  6856  002E0E  9AC2               	bcf	4034,5,c	;volatile
  6857                           
  6858                           ;tester.c: 111: ADCON0bits.CHS2 = 0;
  6859  002E10  98C2               	bcf	4034,4,c	;volatile
  6860                           
  6861                           ;tester.c: 112: ADCON0bits.CHS1 = 0;
  6862  002E12  96C2               	bcf	4034,3,c	;volatile
  6863  002E14  0012               	return		;funcret
  6864  002E16                     __end_of_inizializzazione:
  6865                           	opt stack 0
  6866                           tblptru	equ	0xFF8
  6867                           tblptrh	equ	0xFF7
  6868                           tblptrl	equ	0xFF6
  6869                           tablat	equ	0xFF5
  6870                           prodh	equ	0xFF4
  6871                           prodl	equ	0xFF3
  6872                           postinc0	equ	0xFEE
  6873                           wreg	equ	0xFE8
  6874                           indf2	equ	0xFDF
  6875                           postinc2	equ	0xFDE
  6876                           postdec2	equ	0xFDD
  6877                           fsr2h	equ	0xFDA
  6878                           fsr2l	equ	0xFD9
  6879                           status	equ	0xFD8
  6880                           
  6881 ;; *************** function _LCD_write_message *****************
  6882 ;; Defined at:
  6883 ;;		line 178 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  6884 ;; Parameters:    Size  Location     Type
  6885 ;;  buffer          2   17[COMRAM] PTR const unsigned char 
  6886 ;;		 -> STR_5(17), STR_4(17), STR_1(17), 
  6887 ;; Auto vars:     Size  Location     Type
  6888 ;;		None
  6889 ;; Return value:  Size  Location     Type
  6890 ;;                  1    wreg      void 
  6891 ;; Registers used:
  6892 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6893 ;; Tracked objects:
  6894 ;;		On entry : 0/0
  6895 ;;		On exit  : 0/0
  6896 ;;		Unchanged: 0/0
  6897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6898 ;;      Params:         2       0       0       0       0       0       0       0       0
  6899 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6900 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6901 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6902 ;;Total ram usage:        2 bytes
  6903 ;; Hardware stack levels used:    1
  6904 ;; Hardware stack levels required when called:    5
  6905 ;; This function calls:
  6906 ;;		_LCD_write_char
  6907 ;; This function is called by:
  6908 ;;		_ricarica
  6909 ;;		_inizializzazione
  6910 ;; This function uses a non-reentrant model
  6911 ;;
  6912                           
  6913                           	psect	text24
  6914  002F36                     __ptext24:
  6915                           	opt stack 0
  6916  002F36                     _LCD_write_message:
  6917                           	opt stack 24
  6918                           
  6919                           ;src\LCD_44780.c: 181: while(*buffer) {
  6920                           
  6921                           ;incstack = 0
  6922  002F36  D00A               	goto	l3290
  6923  002F38                     l3286:
  6924                           
  6925                           ;src\LCD_44780.c: 184: LCD_write_char(*buffer);
  6926  002F38  C012  FFF6         	movff	LCD_write_message@buffer,tblptrl
  6927  002F3C  C013  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
  6928  002F40                     	if	0	;tblptru may be non-zero
  6929  002F40                     	endif
  6930  002F40                     	if	0	;tblptru may be non-zero
  6931  002F40                     	endif
  6932  002F40  0008               	tblrd		*
  6933  002F42  50F5               	movf	tablat,w,c
  6934  002F44  EC4D  F016         	call	_LCD_write_char
  6935                           
  6936                           ;src\LCD_44780.c: 186: buffer++;
  6937  002F48  4A12               	infsnz	LCD_write_message@buffer,f,c
  6938  002F4A  2A13               	incf	LCD_write_message@buffer+1,f,c
  6939  002F4C                     l3290:
  6940  002F4C  C012  FFF6         	movff	LCD_write_message@buffer,tblptrl
  6941  002F50  C013  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
  6942  002F54                     	if	0	;tblptru may be non-zero
  6943  002F54                     	endif
  6944  002F54                     	if	0	;tblptru may be non-zero
  6945  002F54                     	endif
  6946  002F54  0008               	tblrd		*
  6947  002F56  50F5               	movf	tablat,w,c
  6948  002F58  0900               	iorlw	0
  6949  002F5A  B4D8               	btfsc	status,2,c
  6950  002F5C  0012               	return	
  6951  002F5E  D7EC               	goto	l3286
  6952  002F60                     __end_of_LCD_write_message:
  6953                           	opt stack 0
  6954                           tblptru	equ	0xFF8
  6955                           tblptrh	equ	0xFF7
  6956                           tblptrl	equ	0xFF6
  6957                           tablat	equ	0xFF5
  6958                           prodh	equ	0xFF4
  6959                           prodl	equ	0xFF3
  6960                           postinc0	equ	0xFEE
  6961                           wreg	equ	0xFE8
  6962                           indf2	equ	0xFDF
  6963                           postinc2	equ	0xFDE
  6964                           postdec2	equ	0xFDD
  6965                           fsr2h	equ	0xFDA
  6966                           fsr2l	equ	0xFD9
  6967                           status	equ	0xFD8
  6968                           
  6969 ;; *************** function _LCD_write_char *****************
  6970 ;; Defined at:
  6971 ;;		line 145 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  6972 ;; Parameters:    Size  Location     Type
  6973 ;;  value           1    wreg     unsigned char 
  6974 ;; Auto vars:     Size  Location     Type
  6975 ;;  value           1   16[COMRAM] unsigned char 
  6976 ;;  D0              1   15[COMRAM] unsigned char 
  6977 ;;  D1              1   14[COMRAM] unsigned char 
  6978 ;;  D2              1   13[COMRAM] unsigned char 
  6979 ;;  D3              1   12[COMRAM] unsigned char 
  6980 ;; Return value:  Size  Location     Type
  6981 ;;                  1    wreg      void 
  6982 ;; Registers used:
  6983 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6984 ;; Tracked objects:
  6985 ;;		On entry : 0/0
  6986 ;;		On exit  : 0/0
  6987 ;;		Unchanged: 0/0
  6988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6989 ;;      Params:         0       0       0       0       0       0       0       0       0
  6990 ;;      Locals:         5       0       0       0       0       0       0       0       0
  6991 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6992 ;;      Totals:         5       0       0       0       0       0       0       0       0
  6993 ;;Total ram usage:        5 bytes
  6994 ;; Hardware stack levels used:    1
  6995 ;; Hardware stack levels required when called:    4
  6996 ;; This function calls:
  6997 ;;		_LCD_send_command
  6998 ;; This function is called by:
  6999 ;;		_LCD_write_message
  7000 ;;		_LCD_write_string
  7001 ;; This function uses a non-reentrant model
  7002 ;;
  7003                           
  7004                           	psect	text25
  7005  002C9A                     __ptext25:
  7006                           	opt stack 0
  7007  002C9A                     _LCD_write_char:
  7008                           	opt stack 24
  7009                           
  7010                           ;incstack = 0
  7011                           ;LCD_write_char@value stored from wreg
  7012  002C9A  6E11               	movwf	LCD_write_char@value,c
  7013                           
  7014                           ;src\LCD_44780.c: 147: unsigned char D3,D2,D1,D0;
  7015                           ;src\LCD_44780.c: 149: LATBbits.LATB1 = 1;
  7016  002C9C  828A               	bsf	3978,1,c	;volatile
  7017                           
  7018                           ;src\LCD_44780.c: 152: D3 = (value & 0b10000000) >> 7;
  7019  002C9E  4411               	rlncf	LCD_write_char@value,w,c
  7020  002CA0  0B01               	andlw	1
  7021  002CA2  6E0D               	movwf	LCD_write_char@D3,c
  7022                           
  7023                           ;src\LCD_44780.c: 153: D2 = (value & 0b01000000) >> 6;
  7024  002CA4  4411               	rlncf	LCD_write_char@value,w,c
  7025  002CA6  46E8               	rlncf	wreg,f,c
  7026  002CA8  0B03               	andlw	3
  7027  002CAA  0B01               	andlw	1
  7028  002CAC  6E0E               	movwf	LCD_write_char@D2,c
  7029                           
  7030                           ;src\LCD_44780.c: 154: D1 = (value & 0b00100000) >> 5;
  7031  002CAE  3811               	swapf	LCD_write_char@value,w,c
  7032  002CB0  42E8               	rrncf	wreg,f,c
  7033  002CB2  0B07               	andlw	7
  7034  002CB4  0B01               	andlw	1
  7035  002CB6  6E0F               	movwf	LCD_write_char@D1,c
  7036                           
  7037                           ;src\LCD_44780.c: 155: D0 = (value & 0b00010000) >> 4;
  7038  002CB8  3811               	swapf	LCD_write_char@value,w,c
  7039  002CBA  0B0F               	andlw	15
  7040  002CBC  0B01               	andlw	1
  7041  002CBE  6E10               	movwf	LCD_write_char@D0,c
  7042                           
  7043                           ;src\LCD_44780.c: 157: LCD_send_command (D3,D2,D1,D0);
  7044  002CC0  C00E  F009         	movff	LCD_write_char@D2,LCD_send_command@D2
  7045  002CC4  C00F  F00A         	movff	LCD_write_char@D1,LCD_send_command@D1
  7046  002CC8  C010  F00B         	movff	LCD_write_char@D0,LCD_send_command@D0
  7047  002CCC  500D               	movf	LCD_write_char@D3,w,c
  7048  002CCE  EC6C  F017         	call	_LCD_send_command
  7049                           
  7050                           ;src\LCD_44780.c: 160: D3 = (value & 0b00001000) >> 3;
  7051  002CD2  3811               	swapf	LCD_write_char@value,w,c
  7052  002CD4  46E8               	rlncf	wreg,f,c
  7053  002CD6  0B1F               	andlw	31
  7054  002CD8  0B01               	andlw	1
  7055  002CDA  6E0D               	movwf	LCD_write_char@D3,c
  7056                           
  7057                           ;src\LCD_44780.c: 161: D2 = (value & 0b00000100) >> 2;
  7058  002CDC  4011               	rrncf	LCD_write_char@value,w,c
  7059  002CDE  42E8               	rrncf	wreg,f,c
  7060  002CE0  0B3F               	andlw	63
  7061  002CE2  0B01               	andlw	1
  7062  002CE4  6E0E               	movwf	LCD_write_char@D2,c
  7063                           
  7064                           ;src\LCD_44780.c: 162: D1 = (value & 0b00000010) >> 1;
  7065  002CE6  90D8               	bcf	status,0,c
  7066  002CE8  3011               	rrcf	LCD_write_char@value,w,c
  7067  002CEA  0B01               	andlw	1
  7068  002CEC  6E0F               	movwf	LCD_write_char@D1,c
  7069                           
  7070                           ;src\LCD_44780.c: 163: D0 = (value & 0b00000001);
  7071  002CEE  5011               	movf	LCD_write_char@value,w,c
  7072  002CF0  0B01               	andlw	1
  7073  002CF2  6E10               	movwf	LCD_write_char@D0,c
  7074                           
  7075                           ;src\LCD_44780.c: 165: LCD_send_command (D3,D2,D1,D0);
  7076  002CF4  C00E  F009         	movff	LCD_write_char@D2,LCD_send_command@D2
  7077  002CF8  C00F  F00A         	movff	LCD_write_char@D1,LCD_send_command@D1
  7078  002CFC  C010  F00B         	movff	LCD_write_char@D0,LCD_send_command@D0
  7079  002D00  500D               	movf	LCD_write_char@D3,w,c
  7080  002D02  EC6C  F017         	call	_LCD_send_command
  7081                           
  7082                           ;src\LCD_44780.c: 167: LATBbits.LATB1 = 0;
  7083  002D06  928A               	bcf	3978,1,c	;volatile
  7084  002D08  0012               	return		;funcret
  7085  002D0A                     __end_of_LCD_write_char:
  7086                           	opt stack 0
  7087                           tblptru	equ	0xFF8
  7088                           tblptrh	equ	0xFF7
  7089                           tblptrl	equ	0xFF6
  7090                           tablat	equ	0xFF5
  7091                           prodh	equ	0xFF4
  7092                           prodl	equ	0xFF3
  7093                           postinc0	equ	0xFEE
  7094                           wreg	equ	0xFE8
  7095                           indf2	equ	0xFDF
  7096                           postinc2	equ	0xFDE
  7097                           postdec2	equ	0xFDD
  7098                           fsr2h	equ	0xFDA
  7099                           fsr2l	equ	0xFD9
  7100                           status	equ	0xFD8
  7101                           
  7102 ;; *************** function _LCD_initialize *****************
  7103 ;; Defined at:
  7104 ;;		line 283 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  7105 ;; Parameters:    Size  Location     Type
  7106 ;;  quartz_frequ    1    wreg     unsigned char 
  7107 ;; Auto vars:     Size  Location     Type
  7108 ;;  quartz_frequ    1   14[COMRAM] unsigned char 
  7109 ;; Return value:  Size  Location     Type
  7110 ;;                  1    wreg      void 
  7111 ;; Registers used:
  7112 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7113 ;; Tracked objects:
  7114 ;;		On entry : 0/0
  7115 ;;		On exit  : 0/0
  7116 ;;		Unchanged: 0/0
  7117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7118 ;;      Params:         0       0       0       0       0       0       0       0       0
  7119 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7120 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7121 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7122 ;;Total ram usage:        1 bytes
  7123 ;; Hardware stack levels used:    1
  7124 ;; Hardware stack levels required when called:    5
  7125 ;; This function calls:
  7126 ;;		_LCD_clear
  7127 ;;		_LCD_cursor
  7128 ;;		_LCD_send_command
  7129 ;;		_delay_ms
  7130 ;;		_delay_set_quartz
  7131 ;; This function is called by:
  7132 ;;		_inizializzazione
  7133 ;; This function uses a non-reentrant model
  7134 ;;
  7135                           
  7136                           	psect	text26
  7137  002876                     __ptext26:
  7138                           	opt stack 0
  7139  002876                     _LCD_initialize:
  7140                           	opt stack 24
  7141                           
  7142                           ;incstack = 0
  7143                           ;LCD_initialize@quartz_frequency stored from wreg
  7144  002876  6E0F               	movwf	LCD_initialize@quartz_frequency,c
  7145                           
  7146                           ;src\LCD_44780.c: 285: delay_set_quartz (quartz_frequency);
  7147  002878  500F               	movf	LCD_initialize@quartz_frequency,w,c
  7148  00287A  EC1A  F018         	call	_delay_set_quartz
  7149                           
  7150                           ;src\LCD_44780.c: 287: LATBbits.LATB1 = 0x00;
  7151  00287E  928A               	bcf	3978,1,c	;volatile
  7152                           
  7153                           ;src\LCD_44780.c: 288: LATBbits.LATB3 = 0x00;
  7154  002880  968A               	bcf	3978,3,c	;volatile
  7155                           
  7156                           ;src\LCD_44780.c: 289: LATBbits.LATB2 = 0x00;
  7157  002882  948A               	bcf	3978,2,c	;volatile
  7158                           
  7159                           ;src\LCD_44780.c: 291: delay_ms (100);
  7160  002884  0E00               	movlw	0
  7161  002886  6E08               	movwf	delay_ms@value_ms+1,c
  7162  002888  0E64               	movlw	100
  7163  00288A  6E07               	movwf	delay_ms@value_ms,c
  7164  00288C  EC53  F017         	call	_delay_ms	;wreg free
  7165                           
  7166                           ;src\LCD_44780.c: 292: LCD_send_command (0,0,1,1);
  7167  002890  0E00               	movlw	0
  7168  002892  6E09               	movwf	LCD_send_command@D2,c
  7169  002894  0E01               	movlw	1
  7170  002896  6E0A               	movwf	LCD_send_command@D1,c
  7171  002898  0E01               	movlw	1
  7172  00289A  6E0B               	movwf	LCD_send_command@D0,c
  7173  00289C  0E00               	movlw	0
  7174  00289E  EC6C  F017         	call	_LCD_send_command
  7175                           
  7176                           ;src\LCD_44780.c: 293: delay_ms (100);
  7177  0028A2  0E00               	movlw	0
  7178  0028A4  6E08               	movwf	delay_ms@value_ms+1,c
  7179  0028A6  0E64               	movlw	100
  7180  0028A8  6E07               	movwf	delay_ms@value_ms,c
  7181  0028AA  EC53  F017         	call	_delay_ms	;wreg free
  7182                           
  7183                           ;src\LCD_44780.c: 294: LCD_send_command (0,0,1,1);
  7184  0028AE  0E00               	movlw	0
  7185  0028B0  6E09               	movwf	LCD_send_command@D2,c
  7186  0028B2  0E01               	movlw	1
  7187  0028B4  6E0A               	movwf	LCD_send_command@D1,c
  7188  0028B6  0E01               	movlw	1
  7189  0028B8  6E0B               	movwf	LCD_send_command@D0,c
  7190  0028BA  0E00               	movlw	0
  7191  0028BC  EC6C  F017         	call	_LCD_send_command
  7192                           
  7193                           ;src\LCD_44780.c: 295: delay_ms (10);
  7194  0028C0  0E00               	movlw	0
  7195  0028C2  6E08               	movwf	delay_ms@value_ms+1,c
  7196  0028C4  0E0A               	movlw	10
  7197  0028C6  6E07               	movwf	delay_ms@value_ms,c
  7198  0028C8  EC53  F017         	call	_delay_ms	;wreg free
  7199                           
  7200                           ;src\LCD_44780.c: 296: LCD_send_command (0,0,1,1);
  7201  0028CC  0E00               	movlw	0
  7202  0028CE  6E09               	movwf	LCD_send_command@D2,c
  7203  0028D0  0E01               	movlw	1
  7204  0028D2  6E0A               	movwf	LCD_send_command@D1,c
  7205  0028D4  0E01               	movlw	1
  7206  0028D6  6E0B               	movwf	LCD_send_command@D0,c
  7207  0028D8  0E00               	movlw	0
  7208  0028DA  EC6C  F017         	call	_LCD_send_command
  7209                           
  7210                           ;src\LCD_44780.c: 298: LCD_send_command (0,0,1,0);
  7211  0028DE  0E00               	movlw	0
  7212  0028E0  6E09               	movwf	LCD_send_command@D2,c
  7213  0028E2  0E01               	movlw	1
  7214  0028E4  6E0A               	movwf	LCD_send_command@D1,c
  7215  0028E6  0E00               	movlw	0
  7216  0028E8  6E0B               	movwf	LCD_send_command@D0,c
  7217  0028EA  0E00               	movlw	0
  7218  0028EC  EC6C  F017         	call	_LCD_send_command
  7219                           
  7220                           ;src\LCD_44780.c: 300: LCD_send_command (0,0,1,0);
  7221  0028F0  0E00               	movlw	0
  7222  0028F2  6E09               	movwf	LCD_send_command@D2,c
  7223  0028F4  0E01               	movlw	1
  7224  0028F6  6E0A               	movwf	LCD_send_command@D1,c
  7225  0028F8  0E00               	movlw	0
  7226  0028FA  6E0B               	movwf	LCD_send_command@D0,c
  7227  0028FC  0E00               	movlw	0
  7228  0028FE  EC6C  F017         	call	_LCD_send_command
  7229                           
  7230                           ;src\LCD_44780.c: 301: LCD_send_command (1,0,0,0);
  7231  002902  0E00               	movlw	0
  7232  002904  6E09               	movwf	LCD_send_command@D2,c
  7233  002906  0E00               	movlw	0
  7234  002908  6E0A               	movwf	LCD_send_command@D1,c
  7235  00290A  0E00               	movlw	0
  7236  00290C  6E0B               	movwf	LCD_send_command@D0,c
  7237  00290E  0E01               	movlw	1
  7238  002910  EC6C  F017         	call	_LCD_send_command
  7239                           
  7240                           ;src\LCD_44780.c: 303: LCD_send_command (0,0,0,0);
  7241  002914  0E00               	movlw	0
  7242  002916  6E09               	movwf	LCD_send_command@D2,c
  7243  002918  0E00               	movlw	0
  7244  00291A  6E0A               	movwf	LCD_send_command@D1,c
  7245  00291C  0E00               	movlw	0
  7246  00291E  6E0B               	movwf	LCD_send_command@D0,c
  7247  002920  0E00               	movlw	0
  7248  002922  EC6C  F017         	call	_LCD_send_command
  7249                           
  7250                           ;src\LCD_44780.c: 304: LCD_send_command (1,0,0,0);
  7251  002926  0E00               	movlw	0
  7252  002928  6E09               	movwf	LCD_send_command@D2,c
  7253  00292A  0E00               	movlw	0
  7254  00292C  6E0A               	movwf	LCD_send_command@D1,c
  7255  00292E  0E00               	movlw	0
  7256  002930  6E0B               	movwf	LCD_send_command@D0,c
  7257  002932  0E01               	movlw	1
  7258  002934  EC6C  F017         	call	_LCD_send_command
  7259                           
  7260                           ;src\LCD_44780.c: 306: LCD_send_command (0,0,0,0);
  7261  002938  0E00               	movlw	0
  7262  00293A  6E09               	movwf	LCD_send_command@D2,c
  7263  00293C  0E00               	movlw	0
  7264  00293E  6E0A               	movwf	LCD_send_command@D1,c
  7265  002940  0E00               	movlw	0
  7266  002942  6E0B               	movwf	LCD_send_command@D0,c
  7267  002944  0E00               	movlw	0
  7268  002946  EC6C  F017         	call	_LCD_send_command
  7269                           
  7270                           ;src\LCD_44780.c: 307: LCD_send_command (0,0,0,1);
  7271  00294A  0E00               	movlw	0
  7272  00294C  6E09               	movwf	LCD_send_command@D2,c
  7273  00294E  0E00               	movlw	0
  7274  002950  6E0A               	movwf	LCD_send_command@D1,c
  7275  002952  0E01               	movlw	1
  7276  002954  6E0B               	movwf	LCD_send_command@D0,c
  7277  002956  0E00               	movlw	0
  7278  002958  EC6C  F017         	call	_LCD_send_command
  7279                           
  7280                           ;src\LCD_44780.c: 309: LCD_send_command (0,0,0,0);
  7281  00295C  0E00               	movlw	0
  7282  00295E  6E09               	movwf	LCD_send_command@D2,c
  7283  002960  0E00               	movlw	0
  7284  002962  6E0A               	movwf	LCD_send_command@D1,c
  7285  002964  0E00               	movlw	0
  7286  002966  6E0B               	movwf	LCD_send_command@D0,c
  7287  002968  0E00               	movlw	0
  7288  00296A  EC6C  F017         	call	_LCD_send_command
  7289                           
  7290                           ;src\LCD_44780.c: 310: LCD_send_command (0,1,1,0);
  7291  00296E  0E01               	movlw	1
  7292  002970  6E09               	movwf	LCD_send_command@D2,c
  7293  002972  0E01               	movlw	1
  7294  002974  6E0A               	movwf	LCD_send_command@D1,c
  7295  002976  0E00               	movlw	0
  7296  002978  6E0B               	movwf	LCD_send_command@D0,c
  7297  00297A  0E00               	movlw	0
  7298  00297C  EC6C  F017         	call	_LCD_send_command
  7299                           
  7300                           ;src\LCD_44780.c: 312: LCD_clear ();
  7301  002980  ECC4  F017         	call	_LCD_clear	;wreg free
  7302                           
  7303                           ;src\LCD_44780.c: 314: LCD_cursor (0,0);
  7304  002984  0E00               	movlw	0
  7305  002986  6E0D               	movwf	LCD_cursor@blinking,c
  7306  002988  0E00               	movlw	0
  7307  00298A  ECB0  F017         	call	_LCD_cursor
  7308  00298E  0012               	return		;funcret
  7309  002990                     __end_of_LCD_initialize:
  7310                           	opt stack 0
  7311                           tblptru	equ	0xFF8
  7312                           tblptrh	equ	0xFF7
  7313                           tblptrl	equ	0xFF6
  7314                           tablat	equ	0xFF5
  7315                           prodh	equ	0xFF4
  7316                           prodl	equ	0xFF3
  7317                           postinc0	equ	0xFEE
  7318                           wreg	equ	0xFE8
  7319                           indf2	equ	0xFDF
  7320                           postinc2	equ	0xFDE
  7321                           postdec2	equ	0xFDD
  7322                           fsr2h	equ	0xFDA
  7323                           fsr2l	equ	0xFD9
  7324                           status	equ	0xFD8
  7325                           
  7326 ;; *************** function _delay_set_quartz *****************
  7327 ;; Defined at:
  7328 ;;		line 115 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
  7329 ;; Parameters:    Size  Location     Type
  7330 ;;  frequency       1    wreg     unsigned char 
  7331 ;; Auto vars:     Size  Location     Type
  7332 ;;  frequency       1    0[COMRAM] unsigned char 
  7333 ;; Return value:  Size  Location     Type
  7334 ;;                  1    wreg      void 
  7335 ;; Registers used:
  7336 ;;		wreg
  7337 ;; Tracked objects:
  7338 ;;		On entry : 0/0
  7339 ;;		On exit  : 0/0
  7340 ;;		Unchanged: 0/0
  7341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7342 ;;      Params:         0       0       0       0       0       0       0       0       0
  7343 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7344 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7345 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7346 ;;Total ram usage:        1 bytes
  7347 ;; Hardware stack levels used:    1
  7348 ;; This function calls:
  7349 ;;		Nothing
  7350 ;; This function is called by:
  7351 ;;		_LCD_initialize
  7352 ;; This function uses a non-reentrant model
  7353 ;;
  7354                           
  7355                           	psect	text27
  7356  003034                     __ptext27:
  7357                           	opt stack 0
  7358  003034                     _delay_set_quartz:
  7359                           	opt stack 28
  7360                           
  7361                           ;incstack = 0
  7362                           ;delay_set_quartz@frequency stored from wreg
  7363  003034  6E01               	movwf	delay_set_quartz@frequency,c
  7364                           
  7365                           ;src\delay.c: 117: delay_quartz_frequency_value = frequency;
  7366  003036  C001  F05F         	movff	delay_set_quartz@frequency,_delay_quartz_frequency_value	;volatile
  7367  00303A  0012               	return		;funcret
  7368  00303C                     __end_of_delay_set_quartz:
  7369                           	opt stack 0
  7370                           tblptru	equ	0xFF8
  7371                           tblptrh	equ	0xFF7
  7372                           tblptrl	equ	0xFF6
  7373                           tablat	equ	0xFF5
  7374                           prodh	equ	0xFF4
  7375                           prodl	equ	0xFF3
  7376                           postinc0	equ	0xFEE
  7377                           wreg	equ	0xFE8
  7378                           indf2	equ	0xFDF
  7379                           postinc2	equ	0xFDE
  7380                           postdec2	equ	0xFDD
  7381                           fsr2h	equ	0xFDA
  7382                           fsr2l	equ	0xFD9
  7383                           status	equ	0xFD8
  7384                           
  7385 ;; *************** function _LCD_cursor *****************
  7386 ;; Defined at:
  7387 ;;		line 266 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  7388 ;; Parameters:    Size  Location     Type
  7389 ;;  active          1    wreg     unsigned char 
  7390 ;;  blinking        1   12[COMRAM] unsigned char 
  7391 ;; Auto vars:     Size  Location     Type
  7392 ;;  active          1   13[COMRAM] unsigned char 
  7393 ;; Return value:  Size  Location     Type
  7394 ;;                  1    wreg      void 
  7395 ;; Registers used:
  7396 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7397 ;; Tracked objects:
  7398 ;;		On entry : 0/0
  7399 ;;		On exit  : 0/0
  7400 ;;		Unchanged: 0/0
  7401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7402 ;;      Params:         1       0       0       0       0       0       0       0       0
  7403 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7404 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7405 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7406 ;;Total ram usage:        2 bytes
  7407 ;; Hardware stack levels used:    1
  7408 ;; Hardware stack levels required when called:    4
  7409 ;; This function calls:
  7410 ;;		_LCD_send_command
  7411 ;; This function is called by:
  7412 ;;		_LCD_initialize
  7413 ;; This function uses a non-reentrant model
  7414 ;;
  7415                           
  7416                           	psect	text28
  7417  002F60                     __ptext28:
  7418                           	opt stack 0
  7419  002F60                     _LCD_cursor:
  7420                           	opt stack 24
  7421                           
  7422                           ;incstack = 0
  7423                           ;LCD_cursor@active stored from wreg
  7424  002F60  6E0E               	movwf	LCD_cursor@active,c
  7425                           
  7426                           ;src\LCD_44780.c: 268: LCD_send_command (0,0,0,0);
  7427  002F62  0E00               	movlw	0
  7428  002F64  6E09               	movwf	LCD_send_command@D2,c
  7429  002F66  0E00               	movlw	0
  7430  002F68  6E0A               	movwf	LCD_send_command@D1,c
  7431  002F6A  0E00               	movlw	0
  7432  002F6C  6E0B               	movwf	LCD_send_command@D0,c
  7433  002F6E  0E00               	movlw	0
  7434  002F70  EC6C  F017         	call	_LCD_send_command
  7435                           
  7436                           ;src\LCD_44780.c: 269: LCD_send_command (1,1,active,blinking);
  7437  002F74  0E01               	movlw	1
  7438  002F76  6E09               	movwf	LCD_send_command@D2,c
  7439  002F78  C00E  F00A         	movff	LCD_cursor@active,LCD_send_command@D1
  7440  002F7C  C00D  F00B         	movff	LCD_cursor@blinking,LCD_send_command@D0
  7441  002F80  0E01               	movlw	1
  7442  002F82  EC6C  F017         	call	_LCD_send_command
  7443  002F86  0012               	return		;funcret
  7444  002F88                     __end_of_LCD_cursor:
  7445                           	opt stack 0
  7446                           tblptru	equ	0xFF8
  7447                           tblptrh	equ	0xFF7
  7448                           tblptrl	equ	0xFF6
  7449                           tablat	equ	0xFF5
  7450                           prodh	equ	0xFF4
  7451                           prodl	equ	0xFF3
  7452                           postinc0	equ	0xFEE
  7453                           wreg	equ	0xFE8
  7454                           indf2	equ	0xFDF
  7455                           postinc2	equ	0xFDE
  7456                           postdec2	equ	0xFDD
  7457                           fsr2h	equ	0xFDA
  7458                           fsr2l	equ	0xFD9
  7459                           status	equ	0xFD8
  7460                           
  7461 ;; *************** function _LCD_clear *****************
  7462 ;; Defined at:
  7463 ;;		line 257 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  7464 ;; Parameters:    Size  Location     Type
  7465 ;;		None
  7466 ;; Auto vars:     Size  Location     Type
  7467 ;;		None
  7468 ;; Return value:  Size  Location     Type
  7469 ;;                  1    wreg      void 
  7470 ;; Registers used:
  7471 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7472 ;; Tracked objects:
  7473 ;;		On entry : 0/0
  7474 ;;		On exit  : 0/0
  7475 ;;		Unchanged: 0/0
  7476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7477 ;;      Params:         0       0       0       0       0       0       0       0       0
  7478 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7479 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7480 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7481 ;;Total ram usage:        0 bytes
  7482 ;; Hardware stack levels used:    1
  7483 ;; Hardware stack levels required when called:    4
  7484 ;; This function calls:
  7485 ;;		_LCD_send_command
  7486 ;; This function is called by:
  7487 ;;		_LCD_initialize
  7488 ;;		_inizializzazione
  7489 ;; This function uses a non-reentrant model
  7490 ;;
  7491                           
  7492                           	psect	text29
  7493  002F88                     __ptext29:
  7494                           	opt stack 0
  7495  002F88                     _LCD_clear:
  7496                           	opt stack 24
  7497                           
  7498                           ;src\LCD_44780.c: 259: LCD_send_command (0,0,0,0);
  7499                           
  7500                           ;incstack = 0
  7501  002F88  0E00               	movlw	0
  7502  002F8A  6E09               	movwf	LCD_send_command@D2,c
  7503  002F8C  0E00               	movlw	0
  7504  002F8E  6E0A               	movwf	LCD_send_command@D1,c
  7505  002F90  0E00               	movlw	0
  7506  002F92  6E0B               	movwf	LCD_send_command@D0,c
  7507  002F94  0E00               	movlw	0
  7508  002F96  EC6C  F017         	call	_LCD_send_command
  7509                           
  7510                           ;src\LCD_44780.c: 260: LCD_send_command (0,0,0,1);
  7511  002F9A  0E00               	movlw	0
  7512  002F9C  6E09               	movwf	LCD_send_command@D2,c
  7513  002F9E  0E00               	movlw	0
  7514  002FA0  6E0A               	movwf	LCD_send_command@D1,c
  7515  002FA2  0E01               	movlw	1
  7516  002FA4  6E0B               	movwf	LCD_send_command@D0,c
  7517  002FA6  0E00               	movlw	0
  7518  002FA8  EC6C  F017         	call	_LCD_send_command
  7519  002FAC  0012               	return		;funcret
  7520  002FAE                     __end_of_LCD_clear:
  7521                           	opt stack 0
  7522                           tblptru	equ	0xFF8
  7523                           tblptrh	equ	0xFF7
  7524                           tblptrl	equ	0xFF6
  7525                           tablat	equ	0xFF5
  7526                           prodh	equ	0xFF4
  7527                           prodl	equ	0xFF3
  7528                           postinc0	equ	0xFEE
  7529                           wreg	equ	0xFE8
  7530                           indf2	equ	0xFDF
  7531                           postinc2	equ	0xFDE
  7532                           postdec2	equ	0xFDD
  7533                           fsr2h	equ	0xFDA
  7534                           fsr2l	equ	0xFD9
  7535                           status	equ	0xFD8
  7536                           
  7537 ;; *************** function _LCD_send_command *****************
  7538 ;; Defined at:
  7539 ;;		line 61 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  7540 ;; Parameters:    Size  Location     Type
  7541 ;;  D3              1    wreg     unsigned char 
  7542 ;;  D2              1    8[COMRAM] unsigned char 
  7543 ;;  D1              1    9[COMRAM] unsigned char 
  7544 ;;  D0              1   10[COMRAM] unsigned char 
  7545 ;; Auto vars:     Size  Location     Type
  7546 ;;  D3              1   11[COMRAM] unsigned char 
  7547 ;; Return value:  Size  Location     Type
  7548 ;;                  1    wreg      void 
  7549 ;; Registers used:
  7550 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7551 ;; Tracked objects:
  7552 ;;		On entry : 0/0
  7553 ;;		On exit  : 0/0
  7554 ;;		Unchanged: 0/0
  7555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7556 ;;      Params:         3       0       0       0       0       0       0       0       0
  7557 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7558 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7559 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7560 ;;Total ram usage:        4 bytes
  7561 ;; Hardware stack levels used:    1
  7562 ;; Hardware stack levels required when called:    3
  7563 ;; This function calls:
  7564 ;;		_LCD_enable_pulse
  7565 ;; This function is called by:
  7566 ;;		_LCD_goto_line
  7567 ;;		_LCD_write_char
  7568 ;;		_LCD_clear
  7569 ;;		_LCD_cursor
  7570 ;;		_LCD_initialize
  7571 ;;		_LCD_home
  7572 ;;		_LCD_shift
  7573 ;;		_LCD_shift_cursor
  7574 ;; This function uses a non-reentrant model
  7575 ;;
  7576                           
  7577                           	psect	text30
  7578  002ED8                     __ptext30:
  7579                           	opt stack 0
  7580  002ED8                     _LCD_send_command:
  7581                           	opt stack 24
  7582                           
  7583                           ;incstack = 0
  7584                           ;LCD_send_command@D3 stored from wreg
  7585  002ED8  6E0C               	movwf	LCD_send_command@D3,c
  7586                           
  7587                           ;src\LCD_44780.c: 63: LATBbits.LATB4 = D0;
  7588  002EDA  B00B               	btfsc	LCD_send_command@D0,0,c
  7589  002EDC  D002               	bra	u2065
  7590  002EDE  988A               	bcf	3978,4,c	;volatile
  7591  002EE0  D001               	bra	u2066
  7592  002EE2                     u2065:
  7593  002EE2  888A               	bsf	3978,4,c	;volatile
  7594  002EE4                     u2066:
  7595                           
  7596                           ;src\LCD_44780.c: 64: LATBbits.LATB5 = D1;
  7597  002EE4  B00A               	btfsc	LCD_send_command@D1,0,c
  7598  002EE6  D002               	bra	u2075
  7599  002EE8  9A8A               	bcf	3978,5,c	;volatile
  7600  002EEA  D001               	bra	u2076
  7601  002EEC                     u2075:
  7602  002EEC  8A8A               	bsf	3978,5,c	;volatile
  7603  002EEE                     u2076:
  7604                           
  7605                           ;src\LCD_44780.c: 65: LATBbits.LATB6 = D2;
  7606  002EEE  B009               	btfsc	LCD_send_command@D2,0,c
  7607  002EF0  D002               	bra	u2085
  7608  002EF2  9C8A               	bcf	3978,6,c	;volatile
  7609  002EF4  D001               	bra	u2086
  7610  002EF6                     u2085:
  7611  002EF6  8C8A               	bsf	3978,6,c	;volatile
  7612  002EF8                     u2086:
  7613                           
  7614                           ;src\LCD_44780.c: 66: LATBbits.LATB7 = D3;
  7615  002EF8  B00C               	btfsc	LCD_send_command@D3,0,c
  7616  002EFA  D002               	bra	u2095
  7617  002EFC  9E8A               	bcf	3978,7,c	;volatile
  7618  002EFE  D001               	bra	u2096
  7619  002F00                     u2095:
  7620  002F00  8E8A               	bsf	3978,7,c	;volatile
  7621  002F02                     u2096:
  7622                           
  7623                           ;src\LCD_44780.c: 67: LCD_enable_pulse ();
  7624  002F02  EC0B  F018         	call	_LCD_enable_pulse	;wreg free
  7625  002F06  0012               	return		;funcret
  7626  002F08                     __end_of_LCD_send_command:
  7627                           	opt stack 0
  7628                           tblptru	equ	0xFF8
  7629                           tblptrh	equ	0xFF7
  7630                           tblptrl	equ	0xFF6
  7631                           tablat	equ	0xFF5
  7632                           prodh	equ	0xFF4
  7633                           prodl	equ	0xFF3
  7634                           postinc0	equ	0xFEE
  7635                           wreg	equ	0xFE8
  7636                           indf2	equ	0xFDF
  7637                           postinc2	equ	0xFDE
  7638                           postdec2	equ	0xFDD
  7639                           fsr2h	equ	0xFDA
  7640                           fsr2l	equ	0xFD9
  7641                           status	equ	0xFD8
  7642                           
  7643 ;; *************** function _LCD_enable_pulse *****************
  7644 ;; Defined at:
  7645 ;;		line 49 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  7646 ;; Parameters:    Size  Location     Type
  7647 ;;		None
  7648 ;; Auto vars:     Size  Location     Type
  7649 ;;		None
  7650 ;; Return value:  Size  Location     Type
  7651 ;;                  1    wreg      void 
  7652 ;; Registers used:
  7653 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7654 ;; Tracked objects:
  7655 ;;		On entry : 0/0
  7656 ;;		On exit  : 0/0
  7657 ;;		Unchanged: 0/0
  7658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7659 ;;      Params:         0       0       0       0       0       0       0       0       0
  7660 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7661 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7662 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7663 ;;Total ram usage:        0 bytes
  7664 ;; Hardware stack levels used:    1
  7665 ;; Hardware stack levels required when called:    2
  7666 ;; This function calls:
  7667 ;;		_delay_ms
  7668 ;; This function is called by:
  7669 ;;		_LCD_send_command
  7670 ;; This function uses a non-reentrant model
  7671 ;;
  7672                           
  7673                           	psect	text31
  7674  003016                     __ptext31:
  7675                           	opt stack 0
  7676  003016                     _LCD_enable_pulse:
  7677                           	opt stack 24
  7678                           
  7679                           ;src\LCD_44780.c: 51: LATBbits.LATB3 = 1;
  7680                           
  7681                           ;incstack = 0
  7682  003016  868A               	bsf	3978,3,c	;volatile
  7683                           
  7684                           ;src\LCD_44780.c: 52: delay_ms (1);
  7685  003018  0E00               	movlw	0
  7686  00301A  6E08               	movwf	delay_ms@value_ms+1,c
  7687  00301C  0E01               	movlw	1
  7688  00301E  6E07               	movwf	delay_ms@value_ms,c
  7689  003020  EC53  F017         	call	_delay_ms	;wreg free
  7690                           
  7691                           ;src\LCD_44780.c: 53: LATBbits.LATB3 = 0;
  7692  003024  968A               	bcf	3978,3,c	;volatile
  7693                           
  7694                           ;src\LCD_44780.c: 54: delay_ms (1);
  7695  003026  0E00               	movlw	0
  7696  003028  6E08               	movwf	delay_ms@value_ms+1,c
  7697  00302A  0E01               	movlw	1
  7698  00302C  6E07               	movwf	delay_ms@value_ms,c
  7699  00302E  EC53  F017         	call	_delay_ms	;wreg free
  7700  003032  0012               	return		;funcret
  7701  003034                     __end_of_LCD_enable_pulse:
  7702                           	opt stack 0
  7703                           tblptru	equ	0xFF8
  7704                           tblptrh	equ	0xFF7
  7705                           tblptrl	equ	0xFF6
  7706                           tablat	equ	0xFF5
  7707                           prodh	equ	0xFF4
  7708                           prodl	equ	0xFF3
  7709                           postinc0	equ	0xFEE
  7710                           wreg	equ	0xFE8
  7711                           indf2	equ	0xFDF
  7712                           postinc2	equ	0xFDE
  7713                           postdec2	equ	0xFDD
  7714                           fsr2h	equ	0xFDA
  7715                           fsr2l	equ	0xFD9
  7716                           status	equ	0xFD8
  7717                           
  7718 ;; *************** function _delay_ms *****************
  7719 ;; Defined at:
  7720 ;;		line 61 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
  7721 ;; Parameters:    Size  Location     Type
  7722 ;;  value_ms        2    6[COMRAM] unsigned int 
  7723 ;; Auto vars:     Size  Location     Type
  7724 ;;		None
  7725 ;; Return value:  Size  Location     Type
  7726 ;;                  1    wreg      void 
  7727 ;; Registers used:
  7728 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7729 ;; Tracked objects:
  7730 ;;		On entry : 0/0
  7731 ;;		On exit  : 0/0
  7732 ;;		Unchanged: 0/0
  7733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7734 ;;      Params:         2       0       0       0       0       0       0       0       0
  7735 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7736 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7737 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7738 ;;Total ram usage:        2 bytes
  7739 ;; Hardware stack levels used:    1
  7740 ;; Hardware stack levels required when called:    1
  7741 ;; This function calls:
  7742 ;;		___wmul
  7743 ;; This function is called by:
  7744 ;;		_LCD_enable_pulse
  7745 ;;		_LCD_initialize
  7746 ;;		_ricarica
  7747 ;;		_read_adc
  7748 ;;		_inizializzazione
  7749 ;;		_delay_s
  7750 ;; This function uses a non-reentrant model
  7751 ;;
  7752                           
  7753                           	psect	text32
  7754  002EA6                     __ptext32:
  7755                           	opt stack 0
  7756  002EA6                     _delay_ms:
  7757                           	opt stack 27
  7758                           
  7759                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
  7760                           
  7761                           ;incstack = 0
  7762  002EA6  C05F  F001         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
  7763  002EAA  6A02               	clrf	___wmul@multiplier+1,c
  7764  002EAC  C007  F003         	movff	delay_ms@value_ms,___wmul@multiplicand
  7765  002EB0  C008  F004         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
  7766  002EB4  ECD7  F017         	call	___wmul	;wreg free
  7767  002EB8  C001  F05B         	movff	?___wmul,_clock_counter_reference	;volatile
  7768  002EBC  C002  F05C         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
  7769                           
  7770                           ;src\delay.c: 75: while (clock_counter_reference) {
  7771  002EC0  D006               	goto	l126
  7772  002EC2                     l2336:
  7773                           
  7774                           ;src\delay.c: 85: _delay(240);
  7775  002EC2  0E50               	movlw	80
  7776  002EC4                     u4187:
  7777  002EC4  2EE8               	decfsz	wreg,f,c
  7778  002EC6  D7FE               	goto	u4187
  7779                           
  7780                           ;src\delay.c: 88: clock_counter_reference--;
  7781  002EC8  065B               	decf	_clock_counter_reference,f,c	;volatile
  7782  002ECA  A0D8               	btfss	status,0,c
  7783  002ECC  065C               	decf	_clock_counter_reference+1,f,c	;volatile
  7784  002ECE                     l126:
  7785  002ECE  505B               	movf	_clock_counter_reference,w,c	;volatile
  7786  002ED0  105C               	iorwf	_clock_counter_reference+1,w,c	;volatile
  7787  002ED2  B4D8               	btfsc	status,2,c
  7788  002ED4  0012               	return	
  7789  002ED6  D7F5               	goto	l2336
  7790  002ED8                     __end_of_delay_ms:
  7791                           	opt stack 0
  7792                           tblptru	equ	0xFF8
  7793                           tblptrh	equ	0xFF7
  7794                           tblptrl	equ	0xFF6
  7795                           tablat	equ	0xFF5
  7796                           prodh	equ	0xFF4
  7797                           prodl	equ	0xFF3
  7798                           postinc0	equ	0xFEE
  7799                           wreg	equ	0xFE8
  7800                           indf2	equ	0xFDF
  7801                           postinc2	equ	0xFDE
  7802                           postdec2	equ	0xFDD
  7803                           fsr2h	equ	0xFDA
  7804                           fsr2l	equ	0xFD9
  7805                           status	equ	0xFD8
  7806                           
  7807 ;; *************** function ___wmul *****************
  7808 ;; Defined at:
  7809 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\Umul16.c"
  7810 ;; Parameters:    Size  Location     Type
  7811 ;;  multiplier      2    0[COMRAM] unsigned int 
  7812 ;;  multiplicand    2    2[COMRAM] unsigned int 
  7813 ;; Auto vars:     Size  Location     Type
  7814 ;;  product         2    4[COMRAM] unsigned int 
  7815 ;; Return value:  Size  Location     Type
  7816 ;;                  2    0[COMRAM] unsigned int 
  7817 ;; Registers used:
  7818 ;;		wreg, status,2, status,0, prodl, prodh
  7819 ;; Tracked objects:
  7820 ;;		On entry : 0/0
  7821 ;;		On exit  : 0/0
  7822 ;;		Unchanged: 0/0
  7823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7824 ;;      Params:         4       0       0       0       0       0       0       0       0
  7825 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7826 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7827 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7828 ;;Total ram usage:        6 bytes
  7829 ;; Hardware stack levels used:    1
  7830 ;; This function calls:
  7831 ;;		Nothing
  7832 ;; This function is called by:
  7833 ;;		_delay_ms
  7834 ;;		_read_adc
  7835 ;;		_sprintf
  7836 ;; This function uses a non-reentrant model
  7837 ;;
  7838                           
  7839                           	psect	text33
  7840  002FAE                     __ptext33:
  7841                           	opt stack 0
  7842  002FAE                     ___wmul:
  7843                           	opt stack 28
  7844                           
  7845                           ;incstack = 0
  7846  002FAE  5001               	movf	___wmul@multiplier,w,c
  7847  002FB0  0203               	mulwf	___wmul@multiplicand,c
  7848  002FB2  CFF3 F005          	movff	prodl,___wmul@product
  7849  002FB6  CFF4 F006          	movff	prodh,___wmul@product+1
  7850  002FBA  5001               	movf	___wmul@multiplier,w,c
  7851  002FBC  0204               	mulwf	___wmul@multiplicand+1,c
  7852  002FBE  50F3               	movf	prodl,w,c
  7853  002FC0  2606               	addwf	___wmul@product+1,f,c
  7854  002FC2  5002               	movf	___wmul@multiplier+1,w,c
  7855  002FC4  0203               	mulwf	___wmul@multiplicand,c
  7856  002FC6  50F3               	movf	prodl,w,c
  7857  002FC8  2606               	addwf	___wmul@product+1,f,c
  7858  002FCA  C005  F001         	movff	___wmul@product,?___wmul
  7859  002FCE  C006  F002         	movff	___wmul@product+1,?___wmul+1
  7860  002FD2  0012               	return	
  7861  002FD4                     __end_of___wmul:
  7862                           	opt stack 0
  7863                           tblptru	equ	0xFF8
  7864                           tblptrh	equ	0xFF7
  7865                           tblptrl	equ	0xFF6
  7866                           tablat	equ	0xFF5
  7867                           prodh	equ	0xFF4
  7868                           prodl	equ	0xFF3
  7869                           postinc0	equ	0xFEE
  7870                           wreg	equ	0xFE8
  7871                           indf2	equ	0xFDF
  7872                           postinc2	equ	0xFDE
  7873                           postdec2	equ	0xFDD
  7874                           fsr2h	equ	0xFDA
  7875                           fsr2l	equ	0xFD9
  7876                           status	equ	0xFD8
  7877                           tblptru	equ	0xFF8
  7878                           tblptrh	equ	0xFF7
  7879                           tblptrl	equ	0xFF6
  7880                           tablat	equ	0xFF5
  7881                           prodh	equ	0xFF4
  7882                           prodl	equ	0xFF3
  7883                           postinc0	equ	0xFEE
  7884                           wreg	equ	0xFE8
  7885                           indf2	equ	0xFDF
  7886                           postinc2	equ	0xFDE
  7887                           postdec2	equ	0xFDD
  7888                           fsr2h	equ	0xFDA
  7889                           fsr2l	equ	0xFD9
  7890                           status	equ	0xFD8
  7891                           
  7892                           	psect	rparam
  7893  0000                     tblptru	equ	0xFF8
  7894                           tblptrh	equ	0xFF7
  7895                           tblptrl	equ	0xFF6
  7896                           tablat	equ	0xFF5
  7897                           prodh	equ	0xFF4
  7898                           prodl	equ	0xFF3
  7899                           postinc0	equ	0xFEE
  7900                           wreg	equ	0xFE8
  7901                           indf2	equ	0xFDF
  7902                           postinc2	equ	0xFDE
  7903                           postdec2	equ	0xFDD
  7904                           fsr2h	equ	0xFDA
  7905                           fsr2l	equ	0xFD9
  7906                           status	equ	0xFD8


Data Sizes:
    Strings     66
    Constant    144
    Data        4
    BSS         24
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     90      95
    BANK0           160     25      54
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    sp__utoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(COMRAM[6]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_3(CODE[7]), STR_2(CODE[8]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 8
		 -> str(BANK0[8]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(COMRAM[6]), 

    LCD_write_string@buffer	PTR unsigned char  size(2) Largest target is 8
		 -> str(BANK0[8]), LCD_write_integer@convertedInt(COMRAM[6]), 

    LCD_write_message@buffer	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    _ricarica->_sprintf
    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _read_adc->___flmul
    ___xxtofl->___awdiv
    ___flmul->___awdiv
    ___awdiv->___awmod
    ___awdiv->___wmul
    _LCD_write_string->_LCD_write_char
    _LCD_goto_line->_LCD_send_command
    _inizializzazione->_LCD_write_message
    _LCD_write_message->_LCD_write_char
    _LCD_write_char->_LCD_send_command
    _LCD_initialize->_LCD_cursor
    _LCD_cursor->_LCD_send_command
    _LCD_clear->_LCD_send_command
    _LCD_enable_pulse->_delay_ms
    _delay_ms->___wmul

Critical Paths under _main in BANK0

    _ricarica->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  121296
                            ___fldiv
                   _inizializzazione
                           _read_adc
                           _ricarica
 ---------------------------------------------------------------------------------
 (1) _ricarica                                             0     0      0   68062
                      _LCD_goto_line
                  _LCD_write_message
                   _LCD_write_string
                             ___flge
                           _delay_ms
                           _read_adc
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             43    35      8   31563
                                             80 COMRAM    10     2      8
                                              0 BANK0     25    25      0
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               13     9      4    7261
                                             39 COMRAM     9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              17    13      4    7063
                                             39 COMRAM    13     9      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         17     9      8     431
                                              0 COMRAM    17     9      8
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          14     6      8     431
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     543
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     418
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     421
                                             48 COMRAM    10     6      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    2617
                                             72 COMRAM     8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    2342
                                             52 COMRAM    20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     109
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8    1078
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) _read_adc                                             3     3      0    9665
                                             39 COMRAM     3     3      0
                            ___awdiv
                            ___fldiv
                            ___flmul
                             ___wmul
                           ___xxtofl
                           _delay_ms
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     514
                                             14 COMRAM    14    10      4
                            ___awdiv (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    3488
                                             14 COMRAM    25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    1433
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1836
                                              6 COMRAM     8     4      4
                            ___awmod (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCD_write_string                                     2     0      2    8290
                                             17 COMRAM     2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (2) _LCD_goto_line                                        1     1      0    7715
                                             12 COMRAM     1     1      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (1) _inizializzazione                                     0     0      0   42136
                          _LCD_clear
                     _LCD_initialize
                  _LCD_write_message
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _LCD_write_message                                    2     0      2    8290
                                             17 COMRAM     2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (3) _LCD_write_char                                       5     5      0    8053
                                             12 COMRAM     5     5      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_initialize                                       1     1      0   24692
                                             14 COMRAM     1     1      0
                          _LCD_clear
                         _LCD_cursor
                   _LCD_send_command
                           _delay_ms
                   _delay_set_quartz
 ---------------------------------------------------------------------------------
 (3) _delay_set_quartz                                     1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _LCD_cursor                                           2     1      1    7801
                                             12 COMRAM     2     1      1
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (3) _LCD_clear                                            0     0      0    7693
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (4) _LCD_send_command                                     4     1      3    7693
                                              8 COMRAM     4     1      3
                   _LCD_enable_pulse
 ---------------------------------------------------------------------------------
 (5) _LCD_enable_pulse                                     0     0      0    1461
                           _delay_ms
 ---------------------------------------------------------------------------------
 (3) _delay_ms                                             2     0      2    1461
                                              6 COMRAM     2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     799
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___fldiv
   _inizializzazione
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _delay_ms
       ___wmul
   _read_adc
     ___awdiv
       ___awmod (ARG)
       ___wmul (ARG)
     ___fldiv
     ___flmul
       ___awdiv (ARG)
         ___awmod (ARG)
         ___wmul (ARG)
       ___awmod (ARG)
     ___wmul
     ___xxtofl
       ___awdiv (ARG)
         ___awmod (ARG)
         ___wmul (ARG)
       ___wmul (ARG)
     _delay_ms
       ___wmul
   _ricarica
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _LCD_write_string
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     ___flge
     _delay_ms
       ___wmul
     _read_adc
       ___awdiv
         ___awmod (ARG)
         ___wmul (ARG)
       ___fldiv
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
         ___awmod (ARG)
       ___wmul
       ___xxtofl
         ___awdiv (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       _delay_ms
         ___wmul
     _sprintf
       ___awdiv
         ___awmod (ARG)
         ___wmul (ARG)
       ___fladd
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
             ___wmul (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
               ___wmul (ARG)
             ___awmod (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
         ___awmod (ARG)
       ___flneg
       ___flsub
         ___fladd
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
               ___wmul (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
                 ___wmul (ARG)
               ___awmod (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
       ___fltol
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
             ___wmul (ARG)
           ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
             ___wmul (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
               ___wmul (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
       ___wmul
       ___xxtofl
         ___awdiv (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
           ___wmul (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
             ___wmul (ARG)
           ___awmod (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
           ___wmul (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
             ___wmul (ARG)
           ___awmod (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     19      36       5       33.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5A      5F       1      100.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      95      20        0.0%
DATA                 0      0      95       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Sun Feb 28 11:00:20 2016

                  ___fldiv@aexp 0019                    ___fldiv@bexp 0018       __size_of_delay_set_quartz 0008  
                  ___fldiv@sign 000D                    ___awdiv@sign 000C                     __CFG_BOR$ON 000000  
           ___wmul@multiplicand 0003                     __CFG_BORV$3 000000                    __CFG_CP0$OFF 000000  
                  __CFG_CP1$OFF 000000                    __CFG_CP2$OFF 000000                    __CFG_CP3$OFF 000000  
                           l126 2ECE                             l160 23BE                             l170 20DA  
                           l254 0E72                             l822 1D14                             l479 2744  
                           l583 261C                             l672 2C18                             l576 258E  
                           l833 1D80                             l489 283A                             l577 25B6  
                           l682 2D5E                             l852 157C                             l861 1792  
                           l766 19A4                             l783 1A92                             l767 199C  
                           l792 1AF6                             l768 197A                             l881 2324  
                           l874 22A6                             l869 1818                             l888 2360  
                           l889 2374                    __CFG_CPB$OFF 000000                    __CFG_CPD$OFF 000000  
                   ?_LCD_cursor 000D                             _str 0087                    ___awmod@sign 0006  
                           prod 000FF3                             wreg 000FE8                    __CFG_FOSC$HS 000000  
                  ___flmul@aexp 0020                    ___flmul@bexp 0021                    ___flmul@sign 001B  
                  ___flmul@temp 0026                    ___flmul@prod 0022                    __CFG_LVP$OFF 000000  
        __size_of_LCD_goto_line 00B8                    ___fltol@exp1 003A                    __CFG_WDT$OFF 000000  
                          l3012 1BF8                            l3102 1E1E                            l3104 1E20  
                          l3032 1C66                            l3024 1C3E                            l3008 1BF4  
                          l2400 18E4                            l3200 2BD6                            l3050 1CEC  
                          l3042 1CC4                            l3130 27FC                            l3122 278A  
                          l3210 2C0A                            l3202 2BDA                            l3220 2D28  
                          l3062 1D2A                            l3126 27BE                            l2510 1AD6  
                          l2430 1920                            l3222 2D2C                            l2336 2EC2  
                          l3056 1D12                            l3136 2872                            l3144 2F24  
                          l2520 1AF2                            l2504 1ACC                            l2512 1ADA  
                          l3400 0990                            l3242 22D4                            l2530 1B3C  
                          l2442 1988                            l3170 2A0A                            l3154 29AE  
                          l3226 2D50                            l3218 2D1C                            l3402 09B4  
                          l3092 1DE8                            l3068 1D48                            l3244 22DA  
                          l3236 22B6                            l2444 198C                            l2364 1878  
                          l3180 2A32                            l3094 1DF6                            l3078 1D7C  
                          l3254 234A                            l3246 22E6                            l2542 1B6A  
                          l2534 1B48                            l3182 2A3E                            l3174 2A1A  
                          l3280 2AE2                            l2704 2B5E                            l2720 2B90  
                          l3096 1E12                            l3088 1DC4                            l3256 2356  
                          l3248 230C                            l3344 20BA                            l2544 1B6C  
                          l2392 18C4                            l2368 187C                            l3184 2A44  
                          l3512 0E40                            l3504 0E1A                            l3408 09CE  
                          l3290 2F4C                            l3274 2A70                            l3282 2B08  
                          l2706 2B66                            l2642 175A                            l2570 153C  
                          l3362 214A                            l2538 1B62                            l2466 19E4  
                          l2458 19C0                            l3530 0F06                            l3514 0E54  
                          l3506 0E28                            l3450 0BA0                            l3442 0B20  
                          l3434 0AA0                            l3418 0A20                            l3276 2A96  
                          l2724 2B9E                            l2716 2B86                            l2708 2B6A  
                          l2652 178E                            l2636 173C                            l3268 23A6  
                          l3348 20C2                            l2468 19E8                            l2476 19FA  
                          l2388 18C0                            l3188 2A5A                            l2740 2C4A  
                          l2820 1226                            l3540 0FEA                            l3452 0BB6  
                          l3372 08E2                            l3286 2F38                            l3278 2ABC  
                          l3294 2FD6                            l2662 17D6                            l2590 1588  
                          l2566 1528                            l2494 1AB6                            l2486 1A82  
                          l3198 2BCA                            l2902 25E2                            l2806 2068  
                          l2830 12F4                            l3542 0FF8                            l3526 0EA4  
                          l3518 0E76                            l3462 0C2E                            l3446 0B4E  
                          l3550 101E                            l3390 0964                            l3622 2442  
                          l2584 1568                            l2568 152C                            l2912 260A  
                          l2760 2C90                            l2752 2C78                            l2744 2C58  
                          l2736 2C3E                            l3560 1068                            l3472 0C98  
                          l3448 0B64                            l3392 097A                            l3298 2FE8  
                          l2666 17F4                            l2594 159A                            l2586 156C  
                          l2922 264C                            l2914 2616                            l2906 25F2  
                          l2746 2C60                            l2826 12CA                            l3490 0D5C  
                          l3458 0C00                            l3386 092A                            l3378 08FA  
                          l3570 10BC                            l3626 2492                            l3706 2DBE  
                          l2692 2B38                            l2668 1802                            l2748 2C64  
                          l2756 2C82                            l2844 14D2                            l3564 1094  
                          l3556 1044                            l3548 1010                            l3476 0D10  
                          l3396 098A                            l3572 10D6                            l2678 1836  
                          l2950 26DC                            l2942 26AC                            l2838 142E  
                          l3494 0D80                            l3478 0D16                            l2928 266A  
                          l2872 2554                            l2856 300E                            l3568 10B8  
                          l3496 0D86                            l2698 2B48                            l2962 270A  
                          l2866 2528                            l2972 2732                            l2974 273E  
                          l2966 271A                            l2798 1F9C                            l2992 1BB8  
                          l2988 1BB4                            STR_1 0891                            STR_2 08C4  
                          STR_3 08CC                            STR_4 08A2                            STR_5 08B3  
                          u2200 1960                            u2210 1962                            _LATA 000F89  
                          _LATB 000F8A                            _LATC 000F8B                            u2065 2EE2  
                          u2066 2EE4                            u2075 2EEC                            u2076 2EEE  
                          u2085 2EF6                            u2086 2EF8                            u2190 1950  
                          u2095 2F00                            u2096 2F02                            u3250 1DD2  
                          u3350 29CC                            u2650 17E4                            u2570 16FE  
                          u3355 29C2                            u2575 16F4                            u2911 2538  
                          u4187 2EC4                            u3840 0E6A                            u2891 250C  
                          _main 2D70       __size_of_LCD_send_command 0030                            fsr2h 000FDA  
                          indf2 000FDF                            fsr2l 000FD9                            prodh 000FF4  
                          prodl 000FF3                            start 0000                   __CFG_IESO$OFF 000000  
               ___fldiv@new_exp 0012              __size_of_LCD_clear 0026                    _sprintf$1109 0060  
                 __CFG_MCLRE$ON 000000                    ___param_bank 000010        __end_of_LCD_enable_pulse 3034  
       __size_of_LCD_initialize 011A                   __CFG_PLLDIV$1 000000                  __CFG_CCP2MX$ON 000000  
                 ___fltol@sign1 0039                 __end_of___fladd 1B88                           ?_main 0001  
               __end_of___fldiv 1E3C                 __end_of___awdiv 2BA8                 __end_of___flneg 2F36  
               __end_of___awmod 2C9A                 __end_of___flmul 184C                 __end_of___flsub 2EA6  
               __end_of___fltol 2A6C                 __end_of___lldiv 2C2A                 ___awdiv@divisor 0009  
               __end_of___llmod 2D70                 ___awdiv@counter 000B                   __CFG_USBDIV$1 000000  
                         _TRISA 000F92                           _TRISB 000F93                           _TRISC 000F94  
                 __CFG_PWRT$OFF 000000                   __CFG_WRT0$OFF 000000                   __CFG_WRT1$OFF 000000  
                 __CFG_WRT2$OFF 000000                   __CFG_WRT3$OFF 000000                  __CFG_EBTR0$OFF 000000  
                __CFG_FCMEN$OFF 000000                  __CFG_EBTR1$OFF 000000                  __CFG_EBTR2$OFF 000000  
                __CFG_EBTR3$OFF 000000                   __CFG_WRTB$OFF 000000                   __CFG_WRTC$OFF 000000  
                 __CFG_WRTD$OFF 000000                  __CFG_EBTRB$OFF 000000                 __end_of_dpowers 0891  
                         _scale 10E4                 __end_of_isdigit 3016                           tablat 000FF5  
                         status 000FD8                 __end_of_sprintf 10E4                _inizializzazione 2DC8  
                __CFG_PBADEN$ON 000000             __size_of_LCD_cursor 0028                 __initialization 2E16  
                  __end_of_main 2DC8                   _LCD_goto_line 2A6C               ?_LCD_write_string 0012  
                        ??_main 005B                   __activetblptr 000002              ??_LCD_write_string 0014  
          __size_of__tdiv_to_l_ 0132               __end_of_LCD_clear 2FAE          LCD_write_string@buffer 0012  
                        _ADCON0 000FC2                          _ADCON1 000FC1                          _ADCON2 000FC0  
              ___llmod@dividend 0001                          ?_scale 0028                          _ADRESH 000FC4  
                        _ADRESL 000FC3                ___awdiv@dividend 0007                __end_of___xxtofl 23B8  
              __end_of_delay_ms 2ED8                  __CFG_XINST$OFF 000000                __end_of__powers_ 0869  
                ?_LCD_goto_line 0001                          ___flge 2756                       ??___fladd 003D  
              _delay_set_quartz 3034                          ___wmul 2FAE                       ??___fldiv 0009  
                     ??___awdiv 000B                       ??___flneg 0005                  __CFG_STVREN$ON 000000  
                     ??___awmod 0005                       ??___flmul 0017                       ??___flsub 0051  
                     ??___fltol 0035                       ??___lldiv 0009                       ??___llmod 0009  
       __size_of_LCD_write_char 0070                __end_of_read_adc 2268                          _fround 1E3C  
LCD_initialize@quartz_frequency 000F                          clear_0 2E1C                ___awdiv@quotient 000D  
               ___awmod@divisor 0003                 ___awmod@counter 0005                __end_of_ricarica 24FC  
                  __pdataCOMRAM 005F                       ??_isdigit 0001                    __mediumconst 0000  
                        tblptrh 000FF7                          tblptrl 000FF6                          tblptru 000FF8  
                     ??_sprintf 0059                      ___flge@ff1 0001                      ___flge@ff2 0005  
                  ___xxtofl@arg 0019                    ___xxtofl@exp 0018                    ___xxtofl@val 000F  
                    __accesstop 0060         __end_of__initialization 2E56                      ___flneg@f1 0001  
              _LCD_send_command 2ED8                   ___rparam_used 000001                      ___fltol@f1 0031  
        LCD_write_integer@F4700 0079                  __pcstackCOMRAM 0001                    __pidataBANK0 303C  
                 __end_of_scale 14FC                  _LCD_initialize 2876               _LCD_write_message 2F36  
            ?_LCD_write_message 0012                      __div_to_l_ 262E                    ??_LCD_cursor 000E  
               __div_to_l_@exp1 000E             ??_LCD_write_message 0014                 __div_to_l_@cntr 000D  
                       ??_scale 002C                 __div_to_l_@quot 0009                      __pbssBANK0 0079  
                    __pnvCOMRAM 005B                   __div_to_l_@f1 0001                   __div_to_l_@f2 0005  
               ??_LCD_goto_line 000D              __end_of_LCD_cursor 2F88          __end_of_LCD_initialize 2990  
                       ?___flge 0001                         ?___wmul 0001       __end_of_LCD_write_message 2F60  
             ?_LCD_enable_pulse 0001                         ?_fround 0028              ??_LCD_enable_pulse 0009  
      __end_of_inizializzazione 2E16                       ?___xxtofl 000F                LCD_cursor@active 000E  
                     ?_delay_ms 0007                 __CFG_VREGEN$OFF 000000                       ?_read_adc 0001  
                     ?_ricarica 0001               __end_of__npowers_ 0835                         __Hparam 0000  
                    _scale$1108 002C                         __Lparam 0000                delay_ms@value_ms 0007  
               ?_LCD_initialize 0001                 __size_of___flge 0120                         ___fladd 184C  
                       ___fldiv 1B88                         ___awdiv 2B24                         ___flneg 2F08  
                       ___awmod 2C2A                         ___flmul 14FC                         ___flsub 2E60  
                       ___fltol 2990                         ___lldiv 2BA8                 __size_of___wmul 0026  
                _LCD_write_char 2C9A                         ___llmod 2D0A                    __psmallconst 0800  
                       __pcinit 2E16                 __size_of_fround 027A                         __ramtop 0800  
           LCD_write_char@value 0011                         __ptext0 2D70                         __ptext1 23B8  
                       __ptext2 08D4                         __ptext3 10E4                         __ptext4 2FF8  
                       __ptext5 1E3C                         __ptext6 2C2A                         __ptext7 24FC  
                       __ptext8 262E                         __ptext9 2D0A                     ?__div_to_l_ 0001  
              LCD_write_char@D0 0010                LCD_write_char@D1 000F                LCD_write_char@D2 000E  
              LCD_write_char@D3 000D                         _dpowers 0869                         _current 007F  
                       _isdigit 2FF8                      ??___xxtofl 0013                ___awmod@dividend 0001  
                       _lettura 005D                      ??_delay_ms 0009        __end_of_delay_set_quartz 303C  
                       _sprintf 08D4                         _voltage 0083                       _LCD_clear 2F88  
          end_of_initialization 2E56       __size_of_LCD_write_string 0024                    _combinazioni 0093  
                 __Lmediumconst 0000                      ??_read_adc 0028                      ??_ricarica 005B  
               ___lldiv@divisor 0005              LCD_cursor@blinking 000D                 ___lldiv@counter 000D  
        __end_of_LCD_write_char 2D0A                         postdec2 000FDD                         postinc0 000FEE  
                       postinc2 000FDE      __size_of_LCD_write_message 002A                  __tdiv_to_l_@f1 0001  
                __tdiv_to_l_@f2 0005                   ??__tdiv_to_l_ 0009                       _PORTCbits 000F82  
      __end_of_LCD_send_command 2F08                     ___fladd@grs 0048                   ___xxtofl@sign 0017  
                   ___fldiv@grs 0014                     ___fldiv@rem 000E                      ?_LCD_clear 0001  
       _clock_counter_reference 005B                     ___flmul@grs 001C             __size_of__div_to_l_ 0128  
               ?_LCD_write_char 0001                  __end_of___flge 2876                  __end_of___wmul 2FD4  
                 __pidataCOMRAM 303F                  __end_of_fround 20B6             start_initialization 2E16  
           __end_of__tdiv_to_l_ 262E                 ___llmod@divisor 0005                 ___llmod@counter 0009  
                      ??___flge 0009                        ??___wmul 0005                     __pdataBANK0 0093  
              __CFG_LPT1OSC$OFF 000000                        ??_fround 002C                   sprintf@tmpval 006E  
                     ___fladd@a 0039                       ___fladd@b 0035                      fround@prec 0034  
                     ___fldiv@a 0005                       ___fldiv@b 0001               ?_inizializzazione 0001  
                     ___flmul@a 0013                       ___flmul@b 000F                     __pbssCOMRAM 005D  
                     ___flsub@a 004D                       ___flsub@b 0049                   __pcstackBANK0 0060  
            ??_inizializzazione 0014               __size_of___xxtofl 0150       __size_of_LCD_enable_pulse 001E  
             __size_of_delay_ms 0032                     ??_LCD_clear 000D         LCD_write_message@buffer 0012  
              _LCD_write_string 2FD4                     sprintf@flag 0066                     sprintf@fval 0074  
                   sprintf@prec 0072                ??_LCD_initialize 000F                       __pnvBANK0 008F  
     delay_set_quartz@frequency 0001               __size_of_read_adc 01B2              LCD_send_command@D0 000B  
            LCD_send_command@D1 000A              LCD_send_command@D2 0009              LCD_send_command@D3 000C  
         __end_of_LCD_goto_line 2B24               __size_of_ricarica 0144                        ?___fladd 0035  
                      ?___fldiv 0001                        ?___awdiv 0007                        ?___flneg 0001  
                      ?___awmod 0001                        ?___flmul 000F                        ?___flsub 0049  
                      ?___fltol 0031                        ?___lldiv 0001                        ?___llmod 0001  
                     __npowers_ 0801                     __tdiv_to_l_ 24FC                    ??__div_to_l_ 0009  
                   __smallconst 0800                        ?_isdigit 0001                        ?_sprintf 0051  
                __size_of_scale 0418               ?_delay_set_quartz 0001              ??_delay_set_quartz 0001  
                ___wmul@product 0005                        _LATBbits 000F8A                        _LATCbits 000F8B  
  _delay_quartz_frequency_value 005F              __end_of__div_to_l_ 2756                __CFG_WDTPS$32768 000000  
                    _ADCON0bits 000FC2               ___wmul@multiplier 0001               ?_LCD_send_command 0009  
            ??_LCD_send_command 000C                ??_LCD_write_char 000D               LCD_goto_line@line 000D  
                      __Hrparam 0000                        __Lrparam 0000                       read_adc@i 002A  
              __size_of___fladd 033C                __size_of___fldiv 02B4                __size_of___awdiv 0084  
              __size_of___flneg 002E                __size_of___awmod 0070                __size_of___flmul 0350  
              __size_of___flsub 0046                __size_of___fltol 00DC                __size_of___lldiv 0082  
              __size_of___llmod 0066                     _fround$1106 0030                     _fround$1107 002C  
                   _isdigit$733 0002                      sprintf@exp 006C                      sprintf@val 0068  
                      ___xxtofl 2268                __size_of_isdigit 001E                        _delay_ms 2EA6  
              _LCD_enable_pulse 3016                        __ptext10 2BA8                        __ptext11 2990  
                      __ptext20 2B24                        __ptext12 2E60                        __ptext21 2FD4  
                      __ptext13 184C                        __ptext30 2ED8                        __ptext22 2A6C  
                      __ptext14 2F08                        __ptext31 3016                        __ptext23 2DC8  
                      __ptext15 2756                        __ptext32 2EA6                        __ptext24 2F36  
                      __ptext16 20B6                        __ptext33 2FAE                        __ptext25 2C9A  
                      __ptext17 2268                        __ptext26 2876                        __ptext18 14FC  
                      __ptext27 3034                        __ptext19 1B88                        __ptext28 2F60  
                      __ptext29 2F88                        __powers_ 0835                __size_of_sprintf 0810  
                      _read_adc 20B6                   __size_of_main 0058                        _ricarica 23B8  
                      _rapporto 008F        __end_of_LCD_write_string 2FF8           __CFG_CPUDIV$OSC1_PLL2 000000  
                    _LCD_cursor 2F60                        isdigit@c 0003                        scale@scl 0030  
                     sprintf@ap 0064                __tdiv_to_l_@exp1 0011                       sprintf@sp 0051  
              __tdiv_to_l_@cntr 0010                __tdiv_to_l_@quot 000C                ___lldiv@dividend 0001  
     __size_of_inizializzazione 004E                    ?__tdiv_to_l_ 0001                        sprintf@c 0078  
                      sprintf@f 0053                ___lldiv@quotient 0009                   ___fladd@signs 0045  
                  ___fladd@aexp 0046                    ___fladd@bexp 0047  
