

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sun Feb 28 21:23:10 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    59                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    60                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    61                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    62  0000                     
    63                           	psect	idataCOMRAM
    64  003A35                     __pidataCOMRAM:
    65                           	opt stack 0
    66                           
    67                           ;initializer for _delay_quartz_frequency_value
    68  003A35  14                 	db	20
    69                           
    70                           	psect	idataBANK0
    71  003A32                     __pidataBANK0:
    72                           	opt stack 0
    73                           
    74                           ;initializer for _combinazioni
    75  003A32  01                 	db	1
    76  003A33  05                 	db	5
    77  003A34  0D                 	db	13
    78                           
    79                           	psect	smallconst
    80  000800                     __psmallconst:
    81                           	opt stack 0
    82  000800  00                 	db	0
    83  000801                     __npowers_:
    84                           	opt stack 0
    85  000801  0000               	dw	0
    86  000803  3F80               	dw	16256
    87  000805  CCCD               	dw	52429
    88  000807  3DCC               	dw	15820
    89  000809  D70A               	dw	55050
    90  00080B  3C23               	dw	15395
    91  00080D  126F               	dw	4719
    92  00080F  3A83               	dw	14979
    93  000811  B717               	dw	46871
    94  000813  38D1               	dw	14545
    95  000815  C5AC               	dw	50604
    96  000817  3727               	dw	14119
    97  000819  37BD               	dw	14269
    98  00081B  3586               	dw	13702
    99  00081D  BF95               	dw	49045
   100  00081F  33D6               	dw	13270
   101  000821  CC77               	dw	52343
   102  000823  322B               	dw	12843
   103  000825  705F               	dw	28767
   104  000827  3089               	dw	12425
   105  000829  E6FF               	dw	59135
   106  00082B  2EDB               	dw	11995
   107  00082D  E508               	dw	58632
   108  00082F  1E3C               	dw	7740
   109  000831  4260               	dw	16992
   110  000833  0DA2               	dw	3490
   111  000835                     __end_of__npowers_:
   112                           	opt stack 0
   113  000835                     __powers_:
   114                           	opt stack 0
   115  000835  0000               	dw	0
   116  000837  3F80               	dw	16256
   117  000839  0000               	dw	0
   118  00083B  4120               	dw	16672
   119  00083D  0000               	dw	0
   120  00083F  42C8               	dw	17096
   121  000841  0000               	dw	0
   122  000843  447A               	dw	17530
   123  000845  4000               	dw	16384
   124  000847  461C               	dw	17948
   125  000849  5000               	dw	20480
   126  00084B  47C3               	dw	18371
   127  00084D  2400               	dw	9216
   128  00084F  4974               	dw	18804
   129  000851  9680               	dw	38528
   130  000853  4B18               	dw	19224
   131  000855  BC20               	dw	48160
   132  000857  4CBE               	dw	19646
   133  000859  6B28               	dw	27432
   134  00085B  4E6E               	dw	20078
   135  00085D  02F9               	dw	761
   136  00085F  5015               	dw	20501
   137  000861  78EC               	dw	30956
   138  000863  60AD               	dw	24749
   139  000865  F2CA               	dw	62154
   140  000867  7149               	dw	29001
   141  000869                     __end_of__powers_:
   142                           	opt stack 0
   143  000869                     _dpowers:
   144                           	opt stack 0
   145  000869  0001               	dw	1
   146  00086B  0000               	dw	0
   147  00086D  000A               	dw	10
   148  00086F  0000               	dw	0
   149  000871  0064               	dw	100
   150  000873  0000               	dw	0
   151  000875  03E8               	dw	1000
   152  000877  0000               	dw	0
   153  000879  2710               	dw	10000
   154  00087B  0000               	dw	0
   155  00087D  86A0               	dw	34464
   156  00087F  0001               	dw	1
   157  000881  4240               	dw	16960
   158  000883  000F               	dw	15
   159  000885  9680               	dw	38528
   160  000887  0098               	dw	152
   161  000889  E100               	dw	57600
   162  00088B  05F5               	dw	1525
   163  00088D  CA00               	dw	51712
   164  00088F  3B9A               	dw	15258
   165  000891                     __end_of_dpowers:
   166                           	opt stack 0
   167  000891                     STR_9:
   168                           
   169                           ; BSR set to: 0
   170  000891  43                 	db	67	;'C'
   171  000892  69                 	db	105	;'i'
   172  000893  63                 	db	99	;'c'
   173  000894  6C                 	db	108	;'l'
   174  000895  6F                 	db	111	;'o'
   175  000896  20                 	db	32
   176  000897  72                 	db	114	;'r'
   177  000898  69                 	db	105	;'i'
   178  000899  63                 	db	99	;'c'
   179  00089A  61                 	db	97	;'a'
   180  00089B  72                 	db	114	;'r'
   181  00089C  69                 	db	105	;'i'
   182  00089D  63                 	db	99	;'c'
   183  00089E  61                 	db	97	;'a'
   184  00089F  2E                 	db	46
   185  0008A0  2E                 	db	46
   186  0008A1  00                 	db	0
   187  0008A2                     STR_5:
   188                           
   189                           ; BSR set to: 0
   190  0008A2  62                 	db	98	;'b'
   191  0008A3  61                 	db	97	;'a'
   192  0008A4  74                 	db	116	;'t'
   193  0008A5  74                 	db	116	;'t'
   194  0008A6  65                 	db	101	;'e'
   195  0008A7  72                 	db	114	;'r'
   196  0008A8  69                 	db	105	;'i'
   197  0008A9  61                 	db	97	;'a'
   198  0008AA  20                 	db	32
   199  0008AB  73                 	db	115	;'s'
   200  0008AC  63                 	db	99	;'c'
   201  0008AD  61                 	db	97	;'a'
   202  0008AE  72                 	db	114	;'r'
   203  0008AF  69                 	db	105	;'i'
   204  0008B0  63                 	db	99	;'c'
   205  0008B1  61                 	db	97	;'a'
   206  0008B2  00                 	db	0
   207  0008B3                     STR_12:
   208                           
   209                           ; BSR set to: 0
   210  0008B3  43                 	db	67	;'C'
   211  0008B4  61                 	db	97	;'a'
   212  0008B5  72                 	db	114	;'r'
   213  0008B6  69                 	db	105	;'i'
   214  0008B7  63                 	db	99	;'c'
   215  0008B8  61                 	db	97	;'a'
   216  0008B9  20                 	db	32
   217  0008BA  74                 	db	116	;'t'
   218  0008BB  65                 	db	101	;'e'
   219  0008BC  72                 	db	114	;'r'
   220  0008BD  6D                 	db	109	;'m'
   221  0008BE  69                 	db	105	;'i'
   222  0008BF  6E                 	db	110	;'n'
   223  0008C0  61                 	db	97	;'a'
   224  0008C1  74                 	db	116	;'t'
   225  0008C2  61                 	db	97	;'a'
   226  0008C3  00                 	db	0
   227  0008C4                     STR_1:
   228                           
   229                           ; BSR set to: 0
   230  0008C4  73                 	db	115	;'s'
   231  0008C5  63                 	db	99	;'c'
   232  0008C6  61                 	db	97	;'a'
   233  0008C7  72                 	db	114	;'r'
   234  0008C8  69                 	db	105	;'i'
   235  0008C9  63                 	db	99	;'c'
   236  0008CA  61                 	db	97	;'a'
   237  0008CB  20                 	db	32
   238  0008CC  64                 	db	100	;'d'
   239  0008CD  61                 	db	97	;'a'
   240  0008CE  3A                 	db	58	;':'
   241  0008CF  00                 	db	0
   242  0008D0                     STR_6:
   243                           
   244                           ; BSR set to: 0
   245  0008D0  63                 	db	99	;'c'
   246  0008D1  61                 	db	97	;'a'
   247  0008D2  70                 	db	112	;'p'
   248  0008D3  61                 	db	97	;'a'
   249  0008D4  63                 	db	99	;'c'
   250  0008D5  69                 	db	105	;'i'
   251  0008D6  74                 	db	116	;'t'
   252  0008D7  61                 	db	97	;'a'
   253  0008D8  27                 	db	39
   254  0008D9  3A                 	db	58	;':'
   255  0008DA  00                 	db	0
   256  0008DB                     STR_4:
   257                           
   258                           ; BSR set to: 0
   259  0008DB  20                 	db	32
   260  0008DC  49                 	db	73	;'I'
   261  0008DD  3A                 	db	58	;':'
   262  0008DE  25                 	db	37
   263  0008DF  2E                 	db	46
   264  0008E0  33                 	db	51	;'3'
   265  0008E1  66                 	db	102	;'f'
   266  0008E2  00                 	db	0
   267  0008E3                     STR_13:
   268                           
   269                           ; BSR set to: 0
   270  0008E3  63                 	db	99	;'c'
   271  0008E4  69                 	db	105	;'i'
   272  0008E5  61                 	db	97	;'a'
   273  0008E6  6F                 	db	111	;'o'
   274  0008E7  6E                 	db	110	;'n'
   275  0008E8  65                 	db	101	;'e'
   276  0008E9  00                 	db	0
   277  0008EA                     STR_3:
   278                           
   279                           ; BSR set to: 0
   280  0008EA  56                 	db	86	;'V'
   281  0008EB  3A                 	db	58	;':'
   282  0008EC  25                 	db	37
   283  0008ED  2E                 	db	46
   284  0008EE  33                 	db	51	;'3'
   285  0008EF  66                 	db	102	;'f'
   286  0008F0  00                 	db	0
   287  0008F1                     STR_7:
   288                           
   289                           ; BSR set to: 0
   290  0008F1  25                 	db	37
   291  0008F2  2E                 	db	46
   292  0008F3  34                 	db	52	;'4'
   293  0008F4  66                 	db	102	;'f'
   294  0008F5  00                 	db	0
   295  0008F6                     STR_8:
   296                           
   297                           ; BSR set to: 0
   298  0008F6  41                 	db	65	;'A'
   299  0008F7  68                 	db	104	;'h'
   300  0008F8  00                 	db	0
   301  0000                     
   302                           ; #config settings
   303  0008F9  00                 	db	0	; dummy byte at the end
   304  0000                     
   305                           	psect	nvCOMRAM
   306  000044                     __pnvCOMRAM:
   307                           	opt stack 0
   308  000044                     _clock_counter_reference:
   309                           	opt stack 0
   310  000044                     	ds	2
   311  000046                     _rapporto:
   312                           	opt stack 0
   313  000046                     	ds	4
   314  0000                     _ADCON0	set	4034
   315  0000                     _ADCON0bits	set	4034
   316  0000                     _ADCON1	set	4033
   317  0000                     _ADCON2	set	4032
   318  0000                     _ADRESH	set	4036
   319  0000                     _ADRESL	set	4035
   320  0000                     _INTCONbits	set	4082
   321  0000                     _LATA	set	3977
   322  0000                     _LATB	set	3978
   323  0000                     _LATBbits	set	3978
   324  0000                     _LATC	set	3979
   325  0000                     _LATCbits	set	3979
   326  0000                     _PORTAbits	set	3968
   327  0000                     _PORTCbits	set	3970
   328  0000                     _T0CON	set	4053
   329  0000                     _TMR0H	set	4055
   330  0000                     _TMR0L	set	4054
   331  0000                     _TRISA	set	3986
   332  0000                     _TRISB	set	3987
   333  0000                     _TRISC	set	3988
   334                           
   335                           	psect	cinit
   336  003708                     __pcinit:
   337                           	opt stack 0
   338  003708                     start_initialization:
   339                           	opt stack 0
   340  003708                     __initialization:
   341                           	opt stack 0
   342                           
   343                           ; Clear objects allocated to BANK0 (40 bytes)
   344  003708  EE00  F0A7         	lfsr	0,__pbssBANK0
   345  00370C  0E28               	movlw	40
   346  00370E                     clear_0:
   347  00370E  6AEE               	clrf	postinc0,c
   348  003710  06E8               	decf	wreg,f,c
   349  003712  E1FD               	bnz	clear_0
   350                           
   351                           ; Clear objects allocated to COMRAM (6 bytes)
   352  003714  6A4F               	clrf	(__pbssCOMRAM+5)& (0+255),c
   353  003716  6A4E               	clrf	(__pbssCOMRAM+4)& (0+255),c
   354  003718  6A4D               	clrf	(__pbssCOMRAM+3)& (0+255),c
   355  00371A  6A4C               	clrf	(__pbssCOMRAM+2)& (0+255),c
   356  00371C  6A4B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   357  00371E  6A4A               	clrf	__pbssCOMRAM& (0+255),c
   358                           
   359                           ; Initialize objects allocated to BANK0 (3 bytes)
   360                           ; load TBLPTR registers with __pidataBANK0
   361  003720  0E32               	movlw	low __pidataBANK0
   362  003722  6EF6               	movwf	tblptrl,c
   363  003724  0E3A               	movlw	high __pidataBANK0
   364  003726  6EF7               	movwf	tblptrh,c
   365  003728  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   366  00372A  6EF8               	movwf	tblptru,c
   367  00372C  0009               	tblrd		*+	;fetch initializer
   368  00372E  CFF5 F0CF          	movff	tablat,__pdataBANK0
   369  003732  0009               	tblrd		*+	;fetch initializer
   370  003734  CFF5 F0D0          	movff	tablat,__pdataBANK0+1
   371  003738  0009               	tblrd		*+	;fetch initializer
   372  00373A  CFF5 F0D1          	movff	tablat,__pdataBANK0+2
   373                           
   374                           ; Initialize objects allocated to COMRAM (1 bytes)
   375                           ; load TBLPTR registers with __pidataCOMRAM
   376  00373E  0E35               	movlw	low __pidataCOMRAM
   377  003740  6EF6               	movwf	tblptrl,c
   378  003742  0E3A               	movlw	high __pidataCOMRAM
   379  003744  6EF7               	movwf	tblptrh,c
   380  003746  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   381  003748  6EF8               	movwf	tblptru,c
   382  00374A  0009               	tblrd		*+	;fetch initializer
   383  00374C  CFF5 F050          	movff	tablat,__pdataCOMRAM
   384  003750                     end_of_initialization:
   385                           	opt stack 0
   386  003750                     __end_of__initialization:
   387                           	opt stack 0
   388  003750  9051               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   389  003752  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   390  003754  0E00               	movlw	low (__Lmediumconst shr (0+16))
   391  003756  6EF8               	movwf	tblptru,c
   392  003758  0100               	movlb	0
   393  00375A  EF56  F01B         	goto	_main	;jump to C main() function
   394                           tblptru	equ	0xFF8
   395                           tblptrh	equ	0xFF7
   396                           tblptrl	equ	0xFF6
   397                           tablat	equ	0xFF5
   398                           postinc0	equ	0xFEE
   399                           wreg	equ	0xFE8
   400                           
   401                           	psect	bssCOMRAM
   402  00004A                     __pbssCOMRAM:
   403                           	opt stack 0
   404  00004A                     LCD_write_integer@F4919:
   405                           	opt stack 0
   406  00004A                     	ds	6
   407                           tblptru	equ	0xFF8
   408                           tblptrh	equ	0xFF7
   409                           tblptrl	equ	0xFF6
   410                           tablat	equ	0xFF5
   411                           postinc0	equ	0xFEE
   412                           wreg	equ	0xFE8
   413                           
   414                           	psect	dataCOMRAM
   415  000050                     __pdataCOMRAM:
   416                           	opt stack 0
   417  000050                     _delay_quartz_frequency_value:
   418                           	opt stack 0
   419  000050                     	ds	1
   420                           tblptru	equ	0xFF8
   421                           tblptrh	equ	0xFF7
   422                           tblptrl	equ	0xFF6
   423                           tablat	equ	0xFF5
   424                           postinc0	equ	0xFEE
   425                           wreg	equ	0xFE8
   426                           
   427                           	psect	bssBANK0
   428  0000A7                     __pbssBANK0:
   429                           	opt stack 0
   430  0000A7                     _lettura:
   431                           	opt stack 0
   432  0000A7                     	ds	6
   433  0000AD                     _current:
   434                           	opt stack 0
   435  0000AD                     	ds	4
   436  0000B1                     _sommatoriaCorrente:
   437                           	opt stack 0
   438  0000B1                     	ds	4
   439  0000B5                     _tempo:
   440                           	opt stack 0
   441  0000B5                     	ds	4
   442  0000B9                     _tempo_old:
   443                           	opt stack 0
   444  0000B9                     	ds	4
   445  0000BD                     _voltage:
   446                           	opt stack 0
   447  0000BD                     	ds	4
   448  0000C1                     _minuti:
   449                           	opt stack 0
   450  0000C1                     	ds	2
   451  0000C3                     _ore:
   452                           	opt stack 0
   453  0000C3                     	ds	2
   454  0000C5                     _secondi:
   455                           	opt stack 0
   456  0000C5                     	ds	2
   457  0000C7                     _str:
   458                           	opt stack 0
   459  0000C7                     	ds	8
   460                           tblptru	equ	0xFF8
   461                           tblptrh	equ	0xFF7
   462                           tblptrl	equ	0xFF6
   463                           tablat	equ	0xFF5
   464                           postinc0	equ	0xFEE
   465                           wreg	equ	0xFE8
   466                           
   467                           	psect	dataBANK0
   468  0000CF                     __pdataBANK0:
   469                           	opt stack 0
   470  0000CF                     _combinazioni:
   471                           	opt stack 0
   472  0000CF                     	ds	3
   473                           tblptru	equ	0xFF8
   474                           tblptrh	equ	0xFF7
   475                           tblptrl	equ	0xFF6
   476                           tablat	equ	0xFF5
   477                           postinc0	equ	0xFEE
   478                           wreg	equ	0xFE8
   479                           
   480                           	psect	cstackBANK0
   481  000060                     __pcstackBANK0:
   482                           	opt stack 0
   483  000060                     ??___fltol:
   484  000060                     ?___fladd:
   485                           	opt stack 0
   486  000060                     ___fldiv@sign:
   487                           	opt stack 0
   488  000060                     ___fladd@b:
   489                           	opt stack 0
   490                           
   491                           ; 4 bytes @ 0x0
   492  000060                     	ds	1
   493  000061                     ___fldiv@rem:
   494                           	opt stack 0
   495                           
   496                           ; 4 bytes @ 0x1
   497  000061                     	ds	3
   498  000064                     ___fltol@sign1:
   499                           	opt stack 0
   500  000064                     ___fladd@a:
   501                           	opt stack 0
   502                           
   503                           ; 4 bytes @ 0x4
   504  000064                     	ds	1
   505  000065                     ___fltol@exp1:
   506                           	opt stack 0
   507  000065                     ___fldiv@new_exp:
   508                           	opt stack 0
   509                           
   510                           ; 2 bytes @ 0x5
   511  000065                     	ds	2
   512  000067                     ___fldiv@grs:
   513                           	opt stack 0
   514                           
   515                           ; 4 bytes @ 0x7
   516  000067                     	ds	1
   517  000068                     ??___fladd:
   518                           
   519                           ; 0 bytes @ 0x8
   520  000068                     	ds	3
   521  00006B                     ___fldiv@bexp:
   522                           	opt stack 0
   523                           
   524                           ; 1 bytes @ 0xB
   525  00006B                     	ds	1
   526  00006C                     ___fldiv@aexp:
   527                           	opt stack 0
   528                           
   529                           ; 1 bytes @ 0xC
   530  00006C                     	ds	1
   531  00006D                     read_adc@i:
   532                           	opt stack 0
   533                           
   534                           ; 1 bytes @ 0xD
   535  00006D                     	ds	3
   536  000070                     ___fladd@signs:
   537                           	opt stack 0
   538                           
   539                           ; 1 bytes @ 0x10
   540  000070                     	ds	1
   541  000071                     ___fladd@aexp:
   542                           	opt stack 0
   543                           
   544                           ; 1 bytes @ 0x11
   545  000071                     	ds	1
   546  000072                     ___fladd@bexp:
   547                           	opt stack 0
   548                           
   549                           ; 1 bytes @ 0x12
   550  000072                     	ds	1
   551  000073                     ___fladd@grs:
   552                           	opt stack 0
   553                           
   554                           ; 1 bytes @ 0x13
   555  000073                     	ds	1
   556  000074                     ?___flsub:
   557                           	opt stack 0
   558  000074                     ___flsub@b:
   559                           	opt stack 0
   560                           
   561                           ; 4 bytes @ 0x14
   562  000074                     	ds	4
   563  000078                     ___flsub@a:
   564                           	opt stack 0
   565                           
   566                           ; 4 bytes @ 0x18
   567  000078                     	ds	4
   568  00007C                     ?_sprintf:
   569                           	opt stack 0
   570  00007C                     sprintf@sp:
   571                           	opt stack 0
   572                           
   573                           ; 2 bytes @ 0x1C
   574  00007C                     	ds	2
   575  00007E                     sprintf@f:
   576                           	opt stack 0
   577                           
   578                           ; 2 bytes @ 0x1E
   579  00007E                     	ds	6
   580  000084                     ??_sprintf:
   581                           
   582                           ; 0 bytes @ 0x24
   583  000084                     	ds	2
   584  000086                     _sprintf$1356:
   585                           	opt stack 0
   586                           
   587                           ; 4 bytes @ 0x26
   588  000086                     	ds	4
   589  00008A                     sprintf@ap:
   590                           	opt stack 0
   591                           
   592                           ; 2 bytes @ 0x2A
   593  00008A                     	ds	2
   594  00008C                     sprintf@flag:
   595                           	opt stack 0
   596                           
   597                           ; 2 bytes @ 0x2C
   598  00008C                     	ds	2
   599  00008E                     sprintf@val:
   600                           	opt stack 0
   601                           
   602                           ; 4 bytes @ 0x2E
   603  00008E                     	ds	4
   604  000092                     sprintf@exp:
   605                           	opt stack 0
   606                           
   607                           ; 2 bytes @ 0x32
   608  000092                     	ds	2
   609  000094                     sprintf@tmpval:
   610                           	opt stack 0
   611                           
   612                           ; 4 bytes @ 0x34
   613  000094                     	ds	4
   614  000098                     sprintf@prec:
   615                           	opt stack 0
   616                           
   617                           ; 2 bytes @ 0x38
   618  000098                     	ds	2
   619  00009A                     sprintf@fval:
   620                           	opt stack 0
   621                           
   622                           ; 4 bytes @ 0x3A
   623  00009A                     	ds	4
   624  00009E                     sprintf@c:
   625                           	opt stack 0
   626                           
   627                           ; 1 bytes @ 0x3E
   628  00009E                     	ds	1
   629  00009F                     ??_scarica:
   630                           
   631                           ; 0 bytes @ 0x3F
   632  00009F                     	ds	8
   633                           tblptru	equ	0xFF8
   634                           tblptrh	equ	0xFF7
   635                           tblptrl	equ	0xFF6
   636                           tablat	equ	0xFF5
   637                           postinc0	equ	0xFEE
   638                           wreg	equ	0xFE8
   639                           
   640                           	psect	cstackCOMRAM
   641  000001                     __pcstackCOMRAM:
   642                           	opt stack 0
   643  000001                     ??_isr_alta:
   644  000001                     
   645                           ; 0 bytes @ 0x0
   646  000001                     	ds	14
   647  00000F                     ??_isdigit:
   648  00000F                     ?___wmul:
   649                           	opt stack 0
   650  00000F                     ?___awmod:
   651                           	opt stack 0
   652  00000F                     ?___lwdiv:
   653                           	opt stack 0
   654  00000F                     ?___lwmod:
   655                           	opt stack 0
   656  00000F                     ?__tdiv_to_l_:
   657                           	opt stack 0
   658  00000F                     ?__div_to_l_:
   659                           	opt stack 0
   660  00000F                     ?___flneg:
   661                           	opt stack 0
   662  00000F                     ?___lldiv:
   663                           	opt stack 0
   664  00000F                     ?___llmod:
   665                           	opt stack 0
   666  00000F                     ?___xxtofl:
   667                           	opt stack 0
   668  00000F                     delay_set_quartz@frequency:
   669                           	opt stack 0
   670  00000F                     ___wmul@multiplier:
   671                           	opt stack 0
   672  00000F                     ___awmod@dividend:
   673                           	opt stack 0
   674  00000F                     ___lwdiv@dividend:
   675                           	opt stack 0
   676  00000F                     ___lwmod@dividend:
   677                           	opt stack 0
   678  00000F                     __div_to_l_@f1:
   679                           	opt stack 0
   680  00000F                     ___flge@ff1:
   681                           	opt stack 0
   682  00000F                     ___flneg@f1:
   683                           	opt stack 0
   684  00000F                     __tdiv_to_l_@f1:
   685                           	opt stack 0
   686  00000F                     ___lldiv@dividend:
   687                           	opt stack 0
   688  00000F                     ___llmod@dividend:
   689                           	opt stack 0
   690  00000F                     ___xxtofl@val:
   691                           	opt stack 0
   692                           
   693                           ; 4 bytes @ 0xE
   694  00000F                     	ds	1
   695  000010                     _isdigit$979:
   696                           	opt stack 0
   697                           
   698                           ; 1 bytes @ 0xF
   699  000010                     	ds	1
   700  000011                     isdigit@c:
   701                           	opt stack 0
   702  000011                     ___wmul@multiplicand:
   703                           	opt stack 0
   704  000011                     ___awmod@divisor:
   705                           	opt stack 0
   706  000011                     ___lwdiv@divisor:
   707                           	opt stack 0
   708  000011                     ___lwmod@divisor:
   709                           	opt stack 0
   710                           
   711                           ; 2 bytes @ 0x10
   712  000011                     	ds	2
   713  000013                     ??___xxtofl:
   714  000013                     ___awmod@counter:
   715                           	opt stack 0
   716  000013                     ___lwmod@counter:
   717                           	opt stack 0
   718  000013                     ___wmul@product:
   719                           	opt stack 0
   720  000013                     ___lwdiv@quotient:
   721                           	opt stack 0
   722  000013                     __div_to_l_@f2:
   723                           	opt stack 0
   724  000013                     ___flge@ff2:
   725                           	opt stack 0
   726  000013                     __tdiv_to_l_@f2:
   727                           	opt stack 0
   728  000013                     ___lldiv@divisor:
   729                           	opt stack 0
   730  000013                     ___llmod@divisor:
   731                           	opt stack 0
   732                           
   733                           ; 4 bytes @ 0x12
   734  000013                     	ds	1
   735  000014                     ___awmod@sign:
   736                           	opt stack 0
   737                           
   738                           ; 1 bytes @ 0x13
   739  000014                     	ds	1
   740  000015                     ?___awdiv:
   741                           	opt stack 0
   742  000015                     ___lwdiv@counter:
   743                           	opt stack 0
   744  000015                     delay_ms@value_ms:
   745                           	opt stack 0
   746  000015                     ___awdiv@dividend:
   747                           	opt stack 0
   748                           
   749                           ; 2 bytes @ 0x14
   750  000015                     	ds	1
   751  000016                     utoa@buf:
   752                           	opt stack 0
   753                           
   754                           ; 2 bytes @ 0x15
   755  000016                     	ds	1
   756  000017                     ??__tdiv_to_l_:
   757  000017                     ??___flge:
   758  000017                     LCD_send_command@D2:
   759                           	opt stack 0
   760  000017                     delay_s@value_s:
   761                           	opt stack 0
   762  000017                     ___llmod@counter:
   763                           	opt stack 0
   764  000017                     ___xxtofl@sign:
   765                           	opt stack 0
   766  000017                     ___awdiv@divisor:
   767                           	opt stack 0
   768  000017                     __div_to_l_@quot:
   769                           	opt stack 0
   770  000017                     ___lldiv@quotient:
   771                           	opt stack 0
   772                           
   773                           ; 4 bytes @ 0x16
   774  000017                     	ds	1
   775  000018                     LCD_send_command@D1:
   776                           	opt stack 0
   777  000018                     delay_s@repeat_loop:
   778                           	opt stack 0
   779  000018                     ___xxtofl@exp:
   780                           	opt stack 0
   781  000018                     utoa@val:
   782                           	opt stack 0
   783                           
   784                           ; 2 bytes @ 0x17
   785  000018                     	ds	1
   786  000019                     LCD_send_command@D0:
   787                           	opt stack 0
   788  000019                     ___awdiv@counter:
   789                           	opt stack 0
   790  000019                     ___xxtofl@arg:
   791                           	opt stack 0
   792                           
   793                           ; 4 bytes @ 0x18
   794  000019                     	ds	1
   795  00001A                     LCD_send_command@D3:
   796                           	opt stack 0
   797  00001A                     ___awdiv@sign:
   798                           	opt stack 0
   799  00001A                     utoa@base:
   800                           	opt stack 0
   801  00001A                     __tdiv_to_l_@quot:
   802                           	opt stack 0
   803                           
   804                           ; 4 bytes @ 0x19
   805  00001A                     	ds	1
   806  00001B                     LCD_goto_line@line:
   807                           	opt stack 0
   808  00001B                     LCD_write_char@D3:
   809                           	opt stack 0
   810  00001B                     LCD_cursor@blinking:
   811                           	opt stack 0
   812  00001B                     __div_to_l_@cntr:
   813                           	opt stack 0
   814  00001B                     ___lldiv@counter:
   815                           	opt stack 0
   816  00001B                     ___awdiv@quotient:
   817                           	opt stack 0
   818                           
   819                           ; 2 bytes @ 0x1A
   820  00001B                     	ds	1
   821  00001C                     LCD_write_char@D2:
   822                           	opt stack 0
   823  00001C                     LCD_cursor@active:
   824                           	opt stack 0
   825  00001C                     __div_to_l_@exp1:
   826                           	opt stack 0
   827  00001C                     utoa@v:
   828                           	opt stack 0
   829                           
   830                           ; 2 bytes @ 0x1B
   831  00001C                     	ds	1
   832  00001D                     ?___flmul:
   833                           	opt stack 0
   834  00001D                     LCD_write_char@D1:
   835                           	opt stack 0
   836  00001D                     LCD_initialize@quartz_frequency:
   837                           	opt stack 0
   838  00001D                     ___flmul@b:
   839                           	opt stack 0
   840                           
   841                           ; 4 bytes @ 0x1C
   842  00001D                     	ds	1
   843  00001E                     LCD_write_char@D0:
   844                           	opt stack 0
   845  00001E                     __tdiv_to_l_@cntr:
   846                           	opt stack 0
   847  00001E                     utoa@c:
   848                           	opt stack 0
   849                           
   850                           ; 1 bytes @ 0x1D
   851  00001E                     	ds	1
   852  00001F                     LCD_write_char@value:
   853                           	opt stack 0
   854  00001F                     __tdiv_to_l_@exp1:
   855                           	opt stack 0
   856  00001F                     itoa@buf:
   857                           	opt stack 0
   858                           
   859                           ; 2 bytes @ 0x1E
   860  00001F                     	ds	1
   861  000020                     LCD_write_message@buffer:
   862                           	opt stack 0
   863  000020                     LCD_write_string@buffer:
   864                           	opt stack 0
   865                           
   866                           ; 2 bytes @ 0x1F
   867  000020                     	ds	1
   868  000021                     itoa@val:
   869                           	opt stack 0
   870  000021                     ___flmul@a:
   871                           	opt stack 0
   872                           
   873                           ; 4 bytes @ 0x20
   874  000021                     	ds	1
   875  000022                     
   876                           ; 0 bytes @ 0x21
   877  000022                     	ds	1
   878  000023                     itoa@base:
   879                           	opt stack 0
   880                           
   881                           ; 2 bytes @ 0x22
   882  000023                     	ds	2
   883  000025                     ??___flmul:
   884  000025                     itoa@cp:
   885                           	opt stack 0
   886                           
   887                           ; 2 bytes @ 0x24
   888  000025                     	ds	2
   889  000027                     LCD_write_integer@value:
   890                           	opt stack 0
   891                           
   892                           ; 2 bytes @ 0x26
   893  000027                     	ds	2
   894  000029                     LCD_write_integer@number_of_digits:
   895                           	opt stack 0
   896  000029                     ___flmul@sign:
   897                           	opt stack 0
   898                           
   899                           ; 1 bytes @ 0x28
   900  000029                     	ds	1
   901  00002A                     LCD_write_integer@zero_cleaning:
   902                           	opt stack 0
   903  00002A                     ___flmul@grs:
   904                           	opt stack 0
   905                           
   906                           ; 4 bytes @ 0x29
   907  00002A                     	ds	1
   908  00002B                     ??_LCD_write_integer:
   909                           
   910                           ; 0 bytes @ 0x2A
   911  00002B                     	ds	3
   912  00002E                     ___flmul@aexp:
   913                           	opt stack 0
   914                           
   915                           ; 1 bytes @ 0x2D
   916  00002E                     	ds	1
   917  00002F                     ___flmul@bexp:
   918                           	opt stack 0
   919                           
   920                           ; 1 bytes @ 0x2E
   921  00002F                     	ds	1
   922  000030                     ___flmul@prod:
   923                           	opt stack 0
   924  000030                     LCD_write_integer@convertedInt:
   925                           	opt stack 0
   926                           
   927                           ; 6 bytes @ 0x2F
   928  000030                     	ds	4
   929  000034                     ___flmul@temp:
   930                           	opt stack 0
   931                           
   932                           ; 2 bytes @ 0x33
   933  000034                     	ds	2
   934  000036                     ?___fldiv:
   935                           	opt stack 0
   936  000036                     ?_fround:
   937                           	opt stack 0
   938  000036                     ?_scale:
   939                           	opt stack 0
   940  000036                     LCD_write_integer@index:
   941                           	opt stack 0
   942  000036                     ___fldiv@b:
   943                           	opt stack 0
   944                           
   945                           ; 4 bytes @ 0x35
   946  000036                     	ds	4
   947  00003A                     ___fldiv@a:
   948                           	opt stack 0
   949  00003A                     _fround$1354:
   950                           	opt stack 0
   951  00003A                     _scale$1355:
   952                           	opt stack 0
   953                           
   954                           ; 4 bytes @ 0x39
   955  00003A                     	ds	4
   956  00003E                     ??___fldiv:
   957  00003E                     scale@scl:
   958                           	opt stack 0
   959  00003E                     _fround$1353:
   960                           	opt stack 0
   961                           
   962                           ; 4 bytes @ 0x3D
   963  00003E                     	ds	1
   964  00003F                     ?___fltol:
   965                           	opt stack 0
   966  00003F                     ___fltol@f1:
   967                           	opt stack 0
   968                           
   969                           ; 4 bytes @ 0x3E
   970  00003F                     	ds	3
   971  000042                     ??_read_adc:
   972  000042                     fround@prec:
   973                           	opt stack 0
   974                           
   975                           ; 1 bytes @ 0x41
   976  000042                     	ds	1
   977  000043                     
   978                           ; 0 bytes @ 0x42
   979  000043                     	ds	1
   980  000044                     tblptru	equ	0xFF8
   981                           tblptrh	equ	0xFF7
   982                           tblptrl	equ	0xFF6
   983                           tablat	equ	0xFF5
   984                           postinc0	equ	0xFEE
   985                           wreg	equ	0xFE8
   986                           
   987                           ; 0 bytes @ 0x43
   988 ;;
   989 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   990 ;;
   991 ;; *************** function _main *****************
   992 ;; Defined at:
   993 ;;		line 67 in file "tester.c"
   994 ;; Parameters:    Size  Location     Type
   995 ;;		None
   996 ;; Auto vars:     Size  Location     Type
   997 ;;		None
   998 ;; Return value:  Size  Location     Type
   999 ;;		None               void
  1000 ;; Registers used:
  1001 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1002 ;; Tracked objects:
  1003 ;;		On entry : 0/0
  1004 ;;		On exit  : 0/0
  1005 ;;		Unchanged: 0/0
  1006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1007 ;;      Params:         0       0       0       0       0       0       0       0       0
  1008 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1009 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1010 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1011 ;;Total ram usage:        0 bytes
  1012 ;; Hardware stack levels required when called:    9
  1013 ;; This function calls:
  1014 ;;		___fldiv
  1015 ;;		_delay_set_quartz
  1016 ;;		_inizializzazione
  1017 ;;		_read_adc
  1018 ;;		_ricarica
  1019 ;;		_scarica
  1020 ;; This function is called by:
  1021 ;;		Startup code after reset
  1022 ;; This function uses a non-reentrant model
  1023 ;;
  1024                           
  1025                           	psect	text0
  1026  0036AC                     __ptext0:
  1027                           	opt stack 0
  1028  0036AC                     _main:
  1029                           	opt stack 22
  1030                           
  1031                           ;tester.c: 68: delay_set_quartz(16);
  1032                           
  1033                           ; BSR set to: 0
  1034                           ;incstack = 0
  1035  0036AC  0E10               	movlw	16
  1036  0036AE  EC15  F01D         	call	_delay_set_quartz
  1037                           
  1038                           ;tester.c: 69: rapporto = (17825 + 8111);
  1039  0036B2  0E00               	movlw	0
  1040  0036B4  6E46               	movwf	_rapporto,c
  1041  0036B6  0EA0               	movlw	160
  1042  0036B8  6E47               	movwf	_rapporto+1,c
  1043  0036BA  0ECA               	movlw	202
  1044  0036BC  6E48               	movwf	_rapporto+2,c
  1045  0036BE  0E46               	movlw	70
  1046  0036C0  6E49               	movwf	_rapporto+3,c
  1047                           
  1048                           ;tester.c: 70: rapporto = 8111 / rapporto;
  1049  0036C2  0E00               	movlw	0
  1050  0036C4  6E36               	movwf	___fldiv@b,c
  1051  0036C6  0E78               	movlw	120
  1052  0036C8  6E37               	movwf	___fldiv@b+1,c
  1053  0036CA  0EFD               	movlw	253
  1054  0036CC  6E38               	movwf	___fldiv@b+2,c
  1055  0036CE  0E45               	movlw	69
  1056  0036D0  6E39               	movwf	___fldiv@b+3,c
  1057  0036D2  C046  F03A         	movff	_rapporto,___fldiv@a
  1058  0036D6  C047  F03B         	movff	_rapporto+1,___fldiv@a+1
  1059  0036DA  C048  F03C         	movff	_rapporto+2,___fldiv@a+2
  1060  0036DE  C049  F03D         	movff	_rapporto+3,___fldiv@a+3
  1061  0036E2  ECA5  F00E         	call	___fldiv	;wreg free
  1062  0036E6  C036  F046         	movff	?___fldiv,_rapporto
  1063  0036EA  C037  F047         	movff	?___fldiv+1,_rapporto+1
  1064  0036EE  C038  F048         	movff	?___fldiv+2,_rapporto+2
  1065  0036F2  C039  F049         	movff	?___fldiv+3,_rapporto+3
  1066                           
  1067                           ;tester.c: 71: inizializzazione();
  1068  0036F6  EC27  F01B         	call	_inizializzazione	;wreg free
  1069                           
  1070                           ;tester.c: 72: read_adc();
  1071  0036FA  EC06  F013         	call	_read_adc	;wreg free
  1072  0036FE                     l4858:
  1073                           
  1074                           ;tester.c: 74: ricarica();
  1075  0036FE  EC26  F014         	call	_ricarica	;wreg free
  1076                           
  1077                           ;tester.c: 75: scarica();
  1078  003702  EC43  F010         	call	_scarica	;wreg free
  1079  003706  D7FB               	goto	l4858
  1080  003708                     __end_of_main:
  1081                           	opt stack 0
  1082                           tblptru	equ	0xFF8
  1083                           tblptrh	equ	0xFF7
  1084                           tblptrl	equ	0xFF6
  1085                           tablat	equ	0xFF5
  1086                           postinc0	equ	0xFEE
  1087                           wreg	equ	0xFE8
  1088                           
  1089 ;; *************** function _scarica *****************
  1090 ;; Defined at:
  1091 ;;		line 79 in file "tester.c"
  1092 ;; Parameters:    Size  Location     Type
  1093 ;;		None
  1094 ;; Auto vars:     Size  Location     Type
  1095 ;;		None
  1096 ;; Return value:  Size  Location     Type
  1097 ;;		None               void
  1098 ;; Registers used:
  1099 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1100 ;; Tracked objects:
  1101 ;;		On entry : 0/0
  1102 ;;		On exit  : 0/0
  1103 ;;		Unchanged: 0/0
  1104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1105 ;;      Params:         0       0       0       0       0       0       0       0       0
  1106 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1107 ;;      Temps:          0       8       0       0       0       0       0       0       0
  1108 ;;      Totals:         0       8       0       0       0       0       0       0       0
  1109 ;;Total ram usage:        8 bytes
  1110 ;; Hardware stack levels used:    1
  1111 ;; Hardware stack levels required when called:    8
  1112 ;; This function calls:
  1113 ;;		_LCD_clear
  1114 ;;		_LCD_goto_line
  1115 ;;		_LCD_write_integer
  1116 ;;		_LCD_write_message
  1117 ;;		_LCD_write_string
  1118 ;;		___fladd
  1119 ;;		___fldiv
  1120 ;;		___flge
  1121 ;;		___xxtofl
  1122 ;;		_delay_s
  1123 ;;		_read_adc
  1124 ;;		_sprintf
  1125 ;; This function is called by:
  1126 ;;		_main
  1127 ;; This function uses a non-reentrant model
  1128 ;;
  1129                           
  1130                           	psect	text1
  1131  002086                     __ptext1:
  1132                           	opt stack 0
  1133  002086                     _scarica:
  1134                           	opt stack 22
  1135                           
  1136                           ;tester.c: 80: tempo = 0;
  1137                           
  1138                           ;incstack = 0
  1139  002086  0E00               	movlw	0
  1140  002088  0100               	movlb	0	; () banked
  1141  00208A  6FB5               	movwf	_tempo& (0+255),b
  1142  00208C  0E00               	movlw	0
  1143  00208E  6FB6               	movwf	(_tempo+1)& (0+255),b
  1144  002090  0E00               	movlw	0
  1145  002092  6FB7               	movwf	(_tempo+2)& (0+255),b
  1146  002094  0E00               	movlw	0
  1147  002096  6FB8               	movwf	(_tempo+3)& (0+255),b
  1148                           
  1149                           ;tester.c: 81: T0CON = 0x85;
  1150  002098  0E85               	movlw	133
  1151  00209A  6ED5               	movwf	4053,c	;volatile
  1152                           
  1153                           ;tester.c: 82: TMR0H = 0x0B;
  1154  00209C  0E0B               	movlw	11
  1155  00209E  6ED7               	movwf	4055,c	;volatile
  1156                           
  1157                           ;tester.c: 83: TMR0L = 0xDC;
  1158  0020A0  0EDC               	movlw	220
  1159  0020A2  6ED6               	movwf	4054,c	;volatile
  1160                           
  1161                           ; BSR set to: 0
  1162                           ;tester.c: 84: INTCONbits.GIE = 1;
  1163  0020A4  8EF2               	bsf	intcon,7,c	;volatile
  1164                           
  1165                           ; BSR set to: 0
  1166                           ;tester.c: 85: INTCONbits.TMR0IF = 0;
  1167  0020A6  94F2               	bcf	intcon,2,c	;volatile
  1168                           
  1169                           ; BSR set to: 0
  1170                           ;tester.c: 86: INTCONbits.TMR0IE = 1;
  1171  0020A8  8AF2               	bsf	intcon,5,c	;volatile
  1172                           
  1173                           ;tester.c: 87: secondi = 0;
  1174  0020AA  0E00               	movlw	0
  1175  0020AC  0100               	movlb	0	; () banked
  1176  0020AE  6FC6               	movwf	(_secondi+1)& (0+255),b
  1177  0020B0  0E00               	movlw	0
  1178  0020B2  6FC5               	movwf	_secondi& (0+255),b
  1179                           
  1180                           ;tester.c: 88: minuti = 0;
  1181  0020B4  0E00               	movlw	0
  1182  0020B6  0100               	movlb	0	; () banked
  1183  0020B8  6FC2               	movwf	(_minuti+1)& (0+255),b
  1184  0020BA  0E00               	movlw	0
  1185  0020BC  6FC1               	movwf	_minuti& (0+255),b
  1186                           
  1187                           ;tester.c: 89: ore = 0;
  1188  0020BE  0E00               	movlw	0
  1189  0020C0  0100               	movlb	0	; () banked
  1190  0020C2  6FC4               	movwf	(_ore+1)& (0+255),b
  1191  0020C4  0E00               	movlw	0
  1192  0020C6  6FC3               	movwf	_ore& (0+255),b
  1193                           
  1194                           ;tester.c: 90: while (voltage > 10) {
  1195  0020C8  D0DC               	goto	l188
  1196  0020CA                     l4794:
  1197                           
  1198                           ;tester.c: 91: LCD_clear();
  1199  0020CA  ECAF  F01C         	call	_LCD_clear	;wreg free
  1200                           
  1201                           ;tester.c: 92: PORTAbits.RA2 = 1;
  1202  0020CE  8480               	bsf	3968,2,c	;volatile
  1203                           
  1204                           ;tester.c: 93: LCD_write_message("scarica da:");
  1205  0020D0  0EC4               	movlw	low STR_1
  1206  0020D2  6E20               	movwf	LCD_write_message@buffer,c
  1207  0020D4  0E08               	movlw	high STR_1
  1208  0020D6  6E21               	movwf	LCD_write_message@buffer+1,c
  1209  0020D8  EC86  F01C         	call	_LCD_write_message	;wreg free
  1210                           
  1211                           ;tester.c: 94: if (ore == 0) {
  1212  0020DC  0100               	movlb	0	; () banked
  1213  0020DE  51C3               	movf	_ore& (0+255),w,b
  1214  0020E0  0100               	movlb	0	; () banked
  1215  0020E2  11C4               	iorwf	(_ore+1)& (0+255),w,b
  1216  0020E4  A4D8               	btfss	status,2,c
  1217  0020E6  D015               	goto	l4804
  1218                           
  1219                           ; BSR set to: 0
  1220                           ;tester.c: 95: LCD_write_integer(minuti, 2, 0x01);
  1221  0020E8  C0C1  F027         	movff	_minuti,LCD_write_integer@value
  1222  0020EC  C0C2  F028         	movff	_minuti+1,LCD_write_integer@value+1
  1223  0020F0  0E02               	movlw	2
  1224  0020F2  6E29               	movwf	LCD_write_integer@number_of_digits,c
  1225  0020F4  0E01               	movlw	1
  1226  0020F6  6E2A               	movwf	LCD_write_integer@zero_cleaning,c
  1227  0020F8  EC89  F015         	call	_LCD_write_integer	;wreg free
  1228                           
  1229                           ;tester.c: 96: LCD_write_integer(secondi, 2, 0x01);
  1230  0020FC  C0C5  F027         	movff	_secondi,LCD_write_integer@value
  1231  002100  C0C6  F028         	movff	_secondi+1,LCD_write_integer@value+1
  1232  002104  0E02               	movlw	2
  1233  002106  6E29               	movwf	LCD_write_integer@number_of_digits,c
  1234  002108  0E01               	movlw	1
  1235  00210A  6E2A               	movwf	LCD_write_integer@zero_cleaning,c
  1236  00210C  EC89  F015         	call	_LCD_write_integer	;wreg free
  1237                           
  1238                           ;tester.c: 97: } else {
  1239  002110  D01A               	goto	l4810
  1240  002112                     l4804:
  1241                           
  1242                           ;tester.c: 98: LCD_write_integer(ore, 2, 0x01);
  1243  002112  C0C3  F027         	movff	_ore,LCD_write_integer@value
  1244  002116  C0C4  F028         	movff	_ore+1,LCD_write_integer@value+1
  1245  00211A  0E02               	movlw	2
  1246  00211C  6E29               	movwf	LCD_write_integer@number_of_digits,c
  1247  00211E  0E01               	movlw	1
  1248  002120  6E2A               	movwf	LCD_write_integer@zero_cleaning,c
  1249  002122  EC89  F015         	call	_LCD_write_integer	;wreg free
  1250                           
  1251                           ;tester.c: 99: LCD_write_message(":");
  1252  002126  0ED9               	movlw	low (STR_6+9)
  1253  002128  6E20               	movwf	LCD_write_message@buffer,c
  1254  00212A  0E08               	movlw	high (STR_6+9)
  1255  00212C  6E21               	movwf	LCD_write_message@buffer+1,c
  1256  00212E  EC86  F01C         	call	_LCD_write_message	;wreg free
  1257                           
  1258                           ;tester.c: 100: LCD_write_integer(minuti, 2, 0x01);
  1259  002132  C0C1  F027         	movff	_minuti,LCD_write_integer@value
  1260  002136  C0C2  F028         	movff	_minuti+1,LCD_write_integer@value+1
  1261  00213A  0E02               	movlw	2
  1262  00213C  6E29               	movwf	LCD_write_integer@number_of_digits,c
  1263  00213E  0E01               	movlw	1
  1264  002140  6E2A               	movwf	LCD_write_integer@zero_cleaning,c
  1265  002142  EC89  F015         	call	_LCD_write_integer	;wreg free
  1266  002146                     l4810:
  1267                           
  1268                           ;tester.c: 101: }
  1269                           ;tester.c: 102: read_adc();
  1270  002146  EC06  F013         	call	_read_adc	;wreg free
  1271                           
  1272                           ;tester.c: 103: LCD_goto_line(2);
  1273  00214A  0E02               	movlw	2
  1274  00214C  EC53  F019         	call	_LCD_goto_line
  1275                           
  1276                           ;tester.c: 104: sprintf(str, "V:%.3f", voltage);
  1277  002150  0EC7               	movlw	low _str
  1278  002152  0100               	movlb	0	; () banked
  1279  002154  6F7C               	movwf	sprintf@sp& (0+255),b
  1280  002156  0E00               	movlw	high _str
  1281  002158  0100               	movlb	0	; () banked
  1282  00215A  6F7D               	movwf	(sprintf@sp+1)& (0+255),b
  1283  00215C  0EEA               	movlw	low STR_3
  1284  00215E  0100               	movlb	0	; () banked
  1285  002160  6F7E               	movwf	sprintf@f& (0+255),b
  1286  002162  0E08               	movlw	high STR_3
  1287  002164  0100               	movlb	0	; () banked
  1288  002166  6F7F               	movwf	(sprintf@f+1)& (0+255),b
  1289  002168  C0BD  F080         	movff	_voltage,?_sprintf+4
  1290  00216C  C0BE  F081         	movff	_voltage+1,?_sprintf+5
  1291  002170  C0BF  F082         	movff	_voltage+2,?_sprintf+6
  1292  002174  C0C0  F083         	movff	_voltage+3,?_sprintf+7
  1293  002178  EC7D  F004         	call	_sprintf	;wreg free
  1294                           
  1295                           ;tester.c: 105: str[7] = '\0';
  1296  00217C  0E00               	movlw	0
  1297  00217E  0100               	movlb	0	; () banked
  1298  002180  6FCE               	movwf	(_str+7)& (0+255),b
  1299                           
  1300                           ; BSR set to: 0
  1301                           ;tester.c: 106: LCD_write_string(str);
  1302  002182  0EC7               	movlw	low _str
  1303  002184  6E20               	movwf	LCD_write_string@buffer,c
  1304  002186  0E00               	movlw	high _str
  1305  002188  6E21               	movwf	LCD_write_string@buffer+1,c
  1306  00218A  ECD5  F01C         	call	_LCD_write_string	;wreg free
  1307                           
  1308                           ;tester.c: 107: sprintf(str, " I:%.3f", current);
  1309  00218E  0EC7               	movlw	low _str
  1310  002190  0100               	movlb	0	; () banked
  1311  002192  6F7C               	movwf	sprintf@sp& (0+255),b
  1312  002194  0E00               	movlw	high _str
  1313  002196  0100               	movlb	0	; () banked
  1314  002198  6F7D               	movwf	(sprintf@sp+1)& (0+255),b
  1315  00219A  0EDB               	movlw	low STR_4
  1316  00219C  0100               	movlb	0	; () banked
  1317  00219E  6F7E               	movwf	sprintf@f& (0+255),b
  1318  0021A0  0E08               	movlw	high STR_4
  1319  0021A2  0100               	movlb	0	; () banked
  1320  0021A4  6F7F               	movwf	(sprintf@f+1)& (0+255),b
  1321  0021A6  C0AD  F080         	movff	_current,?_sprintf+4
  1322  0021AA  C0AE  F081         	movff	_current+1,?_sprintf+5
  1323  0021AE  C0AF  F082         	movff	_current+2,?_sprintf+6
  1324  0021B2  C0B0  F083         	movff	_current+3,?_sprintf+7
  1325  0021B6  EC7D  F004         	call	_sprintf	;wreg free
  1326                           
  1327                           ;tester.c: 108: str[7] = '\0';
  1328  0021BA  0E00               	movlw	0
  1329  0021BC  0100               	movlb	0	; () banked
  1330  0021BE  6FCE               	movwf	(_str+7)& (0+255),b
  1331                           
  1332                           ;tester.c: 109: LCD_write_string(str);
  1333  0021C0  0EC7               	movlw	low _str
  1334  0021C2  6E20               	movwf	LCD_write_string@buffer,c
  1335  0021C4  0E00               	movlw	high _str
  1336  0021C6  6E21               	movwf	LCD_write_string@buffer+1,c
  1337  0021C8  ECD5  F01C         	call	_LCD_write_string	;wreg free
  1338                           
  1339                           ;tester.c: 110: delay_s(10);
  1340  0021CC  0E0A               	movlw	10
  1341  0021CE  ECE7  F01C         	call	_delay_s
  1342                           
  1343                           ;tester.c: 111: if (tempo - tempo_old >= 59) {
  1344  0021D2  C0B9  F09F         	movff	_tempo_old,??_scarica
  1345  0021D6  C0BA  F0A0         	movff	_tempo_old+1,??_scarica+1
  1346  0021DA  C0BB  F0A1         	movff	_tempo_old+2,??_scarica+2
  1347  0021DE  C0BC  F0A2         	movff	_tempo_old+3,??_scarica+3
  1348  0021E2  0100               	movlb	0	; () banked
  1349  0021E4  1F9F               	comf	??_scarica& (0+255),f,b
  1350  0021E6  1FA0               	comf	(??_scarica+1)& (0+255),f,b
  1351  0021E8  1FA1               	comf	(??_scarica+2)& (0+255),f,b
  1352  0021EA  1FA2               	comf	(??_scarica+3)& (0+255),f,b
  1353  0021EC  2B9F               	incf	??_scarica& (0+255),f,b
  1354  0021EE  0E00               	movlw	0
  1355  0021F0  23A0               	addwfc	(??_scarica+1)& (0+255),f,b
  1356  0021F2  23A1               	addwfc	(??_scarica+2)& (0+255),f,b
  1357  0021F4  23A2               	addwfc	(??_scarica+3)& (0+255),f,b
  1358  0021F6  0100               	movlb	0	; () banked
  1359  0021F8  51B5               	movf	_tempo& (0+255),w,b
  1360  0021FA  0100               	movlb	0	; () banked
  1361  0021FC  259F               	addwf	??_scarica& (0+255),w,b
  1362  0021FE  0100               	movlb	0	; () banked
  1363  002200  6FA3               	movwf	(??_scarica+4)& (0+255),b
  1364  002202  0100               	movlb	0	; () banked
  1365  002204  51B6               	movf	(_tempo+1)& (0+255),w,b
  1366  002206  0100               	movlb	0	; () banked
  1367  002208  21A0               	addwfc	(??_scarica+1)& (0+255),w,b
  1368  00220A  0100               	movlb	0	; () banked
  1369  00220C  6FA4               	movwf	(??_scarica+5)& (0+255),b
  1370  00220E  0100               	movlb	0	; () banked
  1371  002210  51B7               	movf	(_tempo+2)& (0+255),w,b
  1372  002212  0100               	movlb	0	; () banked
  1373  002214  21A1               	addwfc	(??_scarica+2)& (0+255),w,b
  1374  002216  0100               	movlb	0	; () banked
  1375  002218  6FA5               	movwf	(??_scarica+6)& (0+255),b
  1376  00221A  0100               	movlb	0	; () banked
  1377  00221C  51B8               	movf	(_tempo+3)& (0+255),w,b
  1378  00221E  0100               	movlb	0	; () banked
  1379  002220  21A2               	addwfc	(??_scarica+3)& (0+255),w,b
  1380  002222  0100               	movlb	0	; () banked
  1381  002224  6FA6               	movwf	(??_scarica+7)& (0+255),b
  1382  002226  0100               	movlb	0	; () banked
  1383  002228  51A6               	movf	(??_scarica+7)& (0+255),w,b
  1384  00222A  0100               	movlb	0	; () banked
  1385  00222C  11A5               	iorwf	(??_scarica+6)& (0+255),w,b
  1386  00222E  0100               	movlb	0	; () banked
  1387  002230  11A4               	iorwf	(??_scarica+5)& (0+255),w,b
  1388  002232  E105               	bnz	u5470
  1389  002234  0E3B               	movlw	59
  1390  002236  0100               	movlb	0	; () banked
  1391  002238  5DA3               	subwf	(??_scarica+4)& (0+255),w,b
  1392  00223A  A0D8               	btfss	status,0,c
  1393  00223C  D022               	goto	l188
  1394  00223E                     u5470:
  1395                           
  1396                           ; BSR set to: 0
  1397                           ;tester.c: 112: tempo_old = tempo;
  1398  00223E  C0B5  F0B9         	movff	_tempo,_tempo_old
  1399  002242  C0B6  F0BA         	movff	_tempo+1,_tempo_old+1
  1400  002246  C0B7  F0BB         	movff	_tempo+2,_tempo_old+2
  1401  00224A  C0B8  F0BC         	movff	_tempo+3,_tempo_old+3
  1402                           
  1403                           ; BSR set to: 0
  1404                           ;tester.c: 113: sommatoriaCorrente = current + sommatoriaCorrente;
  1405  00224E  C0AD  F060         	movff	_current,___fladd@b
  1406  002252  C0AE  F061         	movff	_current+1,___fladd@b+1
  1407  002256  C0AF  F062         	movff	_current+2,___fladd@b+2
  1408  00225A  C0B0  F063         	movff	_current+3,___fladd@b+3
  1409  00225E  C0B1  F064         	movff	_sommatoriaCorrente,___fladd@a
  1410  002262  C0B2  F065         	movff	_sommatoriaCorrente+1,___fladd@a+1
  1411  002266  C0B3  F066         	movff	_sommatoriaCorrente+2,___fladd@a+2
  1412  00226A  C0B4  F067         	movff	_sommatoriaCorrente+3,___fladd@a+3
  1413  00226E  EC9D  F008         	call	___fladd	;wreg free
  1414  002272  C060  F0B1         	movff	?___fladd,_sommatoriaCorrente
  1415  002276  C061  F0B2         	movff	?___fladd+1,_sommatoriaCorrente+1
  1416  00227A  C062  F0B3         	movff	?___fladd+2,_sommatoriaCorrente+2
  1417  00227E  C063  F0B4         	movff	?___fladd+3,_sommatoriaCorrente+3
  1418  002282                     l188:
  1419  002282  0E00               	movlw	0
  1420  002284  6E0F               	movwf	___flge@ff1,c
  1421  002286  0E00               	movlw	0
  1422  002288  6E10               	movwf	___flge@ff1+1,c
  1423  00228A  0E20               	movlw	32
  1424  00228C  6E11               	movwf	___flge@ff1+2,c
  1425  00228E  0E41               	movlw	65
  1426  002290  6E12               	movwf	___flge@ff1+3,c
  1427  002292  C0BD  F013         	movff	_voltage,___flge@ff2
  1428  002296  C0BE  F014         	movff	_voltage+1,___flge@ff2+1
  1429  00229A  C0BF  F015         	movff	_voltage+2,___flge@ff2+2
  1430  00229E  C0C0  F016         	movff	_voltage+3,___flge@ff2+3
  1431  0022A2  EC55  F017         	call	___flge	;wreg free
  1432  0022A6  A0D8               	btfss	status,0,c
  1433  0022A8  D710               	goto	l4794
  1434                           
  1435                           ;tester.c: 114: }
  1436                           ;tester.c: 115: }
  1437                           ;tester.c: 116: LCD_clear();
  1438  0022AA  ECAF  F01C         	call	_LCD_clear	;wreg free
  1439                           
  1440                           ;tester.c: 117: LCD_write_message("batteria scarica");
  1441  0022AE  0EA2               	movlw	low STR_5
  1442  0022B0  6E20               	movwf	LCD_write_message@buffer,c
  1443  0022B2  0E08               	movlw	high STR_5
  1444  0022B4  6E21               	movwf	LCD_write_message@buffer+1,c
  1445  0022B6  EC86  F01C         	call	_LCD_write_message	;wreg free
  1446                           
  1447                           ;tester.c: 118: LCD_goto_line(2);
  1448  0022BA  0E02               	movlw	2
  1449  0022BC  EC53  F019         	call	_LCD_goto_line
  1450                           
  1451                           ;tester.c: 119: LCD_write_message("capacita':");
  1452  0022C0  0ED0               	movlw	low STR_6
  1453  0022C2  6E20               	movwf	LCD_write_message@buffer,c
  1454  0022C4  0E08               	movlw	high STR_6
  1455  0022C6  6E21               	movwf	LCD_write_message@buffer+1,c
  1456  0022C8  EC86  F01C         	call	_LCD_write_message	;wreg free
  1457                           
  1458                           ;tester.c: 120: sommatoriaCorrente = sommatoriaCorrente / 60;
  1459  0022CC  C0B1  F036         	movff	_sommatoriaCorrente,___fldiv@b
  1460  0022D0  C0B2  F037         	movff	_sommatoriaCorrente+1,___fldiv@b+1
  1461  0022D4  C0B3  F038         	movff	_sommatoriaCorrente+2,___fldiv@b+2
  1462  0022D8  C0B4  F039         	movff	_sommatoriaCorrente+3,___fldiv@b+3
  1463  0022DC  0E00               	movlw	0
  1464  0022DE  6E3A               	movwf	___fldiv@a,c
  1465  0022E0  0E00               	movlw	0
  1466  0022E2  6E3B               	movwf	___fldiv@a+1,c
  1467  0022E4  0E70               	movlw	112
  1468  0022E6  6E3C               	movwf	___fldiv@a+2,c
  1469  0022E8  0E42               	movlw	66
  1470  0022EA  6E3D               	movwf	___fldiv@a+3,c
  1471  0022EC  ECA5  F00E         	call	___fldiv	;wreg free
  1472  0022F0  C036  F0B1         	movff	?___fldiv,_sommatoriaCorrente
  1473  0022F4  C037  F0B2         	movff	?___fldiv+1,_sommatoriaCorrente+1
  1474  0022F8  C038  F0B3         	movff	?___fldiv+2,_sommatoriaCorrente+2
  1475  0022FC  C039  F0B4         	movff	?___fldiv+3,_sommatoriaCorrente+3
  1476                           
  1477                           ;tester.c: 121: sommatoriaCorrente = sommatoriaCorrente / ore;
  1478  002300  C0B1  F036         	movff	_sommatoriaCorrente,___fldiv@b
  1479  002304  C0B2  F037         	movff	_sommatoriaCorrente+1,___fldiv@b+1
  1480  002308  C0B3  F038         	movff	_sommatoriaCorrente+2,___fldiv@b+2
  1481  00230C  C0B4  F039         	movff	_sommatoriaCorrente+3,___fldiv@b+3
  1482  002310  C0C3  F00F         	movff	_ore,___xxtofl@val
  1483  002314  C0C4  F010         	movff	_ore+1,___xxtofl@val+1
  1484  002318  6A11               	clrf	___xxtofl@val+2,c
  1485  00231A  6A12               	clrf	___xxtofl@val+3,c
  1486  00231C  0E00               	movlw	0
  1487  00231E  ECE1  F014         	call	___xxtofl
  1488  002322  C00F  F03A         	movff	?___xxtofl,___fldiv@a
  1489  002326  C010  F03B         	movff	?___xxtofl+1,___fldiv@a+1
  1490  00232A  C011  F03C         	movff	?___xxtofl+2,___fldiv@a+2
  1491  00232E  C012  F03D         	movff	?___xxtofl+3,___fldiv@a+3
  1492  002332  ECA5  F00E         	call	___fldiv	;wreg free
  1493  002336  C036  F0B1         	movff	?___fldiv,_sommatoriaCorrente
  1494  00233A  C037  F0B2         	movff	?___fldiv+1,_sommatoriaCorrente+1
  1495  00233E  C038  F0B3         	movff	?___fldiv+2,_sommatoriaCorrente+2
  1496  002342  C039  F0B4         	movff	?___fldiv+3,_sommatoriaCorrente+3
  1497                           
  1498                           ;tester.c: 122: sprintf(str, "%.4f", sommatoriaCorrente);
  1499  002346  0EC7               	movlw	low _str
  1500  002348  0100               	movlb	0	; () banked
  1501  00234A  6F7C               	movwf	sprintf@sp& (0+255),b
  1502  00234C  0E00               	movlw	high _str
  1503  00234E  0100               	movlb	0	; () banked
  1504  002350  6F7D               	movwf	(sprintf@sp+1)& (0+255),b
  1505  002352  0EF1               	movlw	low STR_7
  1506  002354  0100               	movlb	0	; () banked
  1507  002356  6F7E               	movwf	sprintf@f& (0+255),b
  1508  002358  0E08               	movlw	high STR_7
  1509  00235A  0100               	movlb	0	; () banked
  1510  00235C  6F7F               	movwf	(sprintf@f+1)& (0+255),b
  1511  00235E  C0B1  F080         	movff	_sommatoriaCorrente,?_sprintf+4
  1512  002362  C0B2  F081         	movff	_sommatoriaCorrente+1,?_sprintf+5
  1513  002366  C0B3  F082         	movff	_sommatoriaCorrente+2,?_sprintf+6
  1514  00236A  C0B4  F083         	movff	_sommatoriaCorrente+3,?_sprintf+7
  1515  00236E  EC7D  F004         	call	_sprintf	;wreg free
  1516                           
  1517                           ;tester.c: 123: str[7] = '\0';
  1518  002372  0E00               	movlw	0
  1519  002374  0100               	movlb	0	; () banked
  1520  002376  6FCE               	movwf	(_str+7)& (0+255),b
  1521                           
  1522                           ; BSR set to: 0
  1523                           ;tester.c: 124: LCD_write_string(str);
  1524  002378  0EC7               	movlw	low _str
  1525  00237A  6E20               	movwf	LCD_write_string@buffer,c
  1526  00237C  0E00               	movlw	high _str
  1527  00237E  6E21               	movwf	LCD_write_string@buffer+1,c
  1528  002380  ECD5  F01C         	call	_LCD_write_string	;wreg free
  1529                           
  1530                           ;tester.c: 125: LCD_write_message("Ah");
  1531  002384  0EF6               	movlw	low STR_8
  1532  002386  6E20               	movwf	LCD_write_message@buffer,c
  1533  002388  0E08               	movlw	high STR_8
  1534  00238A  6E21               	movwf	LCD_write_message@buffer+1,c
  1535  00238C  EC86  F01C         	call	_LCD_write_message	;wreg free
  1536  002390  0012               	return		;funcret
  1537  002392                     __end_of_scarica:
  1538                           	opt stack 0
  1539                           tblptru	equ	0xFF8
  1540                           tblptrh	equ	0xFF7
  1541                           tblptrl	equ	0xFF6
  1542                           tablat	equ	0xFF5
  1543                           intcon	equ	0xFF2
  1544                           postinc0	equ	0xFEE
  1545                           wreg	equ	0xFE8
  1546                           status	equ	0xFD8
  1547                           
  1548 ;; *************** function _delay_s *****************
  1549 ;; Defined at:
  1550 ;;		line 102 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
  1551 ;; Parameters:    Size  Location     Type
  1552 ;;  value_s         1    wreg     unsigned char 
  1553 ;; Auto vars:     Size  Location     Type
  1554 ;;  value_s         1   22[COMRAM] unsigned char 
  1555 ;;  repeat_loop     1   23[COMRAM] unsigned char 
  1556 ;; Return value:  Size  Location     Type
  1557 ;;		None               void
  1558 ;; Registers used:
  1559 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1560 ;; Tracked objects:
  1561 ;;		On entry : 0/0
  1562 ;;		On exit  : 0/0
  1563 ;;		Unchanged: 0/0
  1564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1565 ;;      Params:         0       0       0       0       0       0       0       0       0
  1566 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1567 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1568 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1569 ;;Total ram usage:        2 bytes
  1570 ;; Hardware stack levels used:    1
  1571 ;; Hardware stack levels required when called:    3
  1572 ;; This function calls:
  1573 ;;		_delay_ms
  1574 ;; This function is called by:
  1575 ;;		_scarica
  1576 ;; This function uses a non-reentrant model
  1577 ;;
  1578                           
  1579                           	psect	text2
  1580  0039CE                     __ptext2:
  1581                           	opt stack 0
  1582  0039CE                     _delay_s:
  1583                           	opt stack 26
  1584                           
  1585                           ;incstack = 0
  1586                           ;delay_s@value_s stored from wreg
  1587  0039CE  6E17               	movwf	delay_s@value_s,c
  1588                           
  1589                           ;src\delay.c: 104: unsigned char repeat_loop;
  1590                           ;src\delay.c: 106: for (repeat_loop = 0; repeat_loop < value_s; repeat_loop++)
  1591  0039D0  0E00               	movlw	0
  1592  0039D2  6E18               	movwf	delay_s@repeat_loop,c
  1593  0039D4  D007               	goto	l3688
  1594  0039D6                     l3684:
  1595                           
  1596                           ;src\delay.c: 107: delay_ms (1000);
  1597  0039D6  0E03               	movlw	3
  1598  0039D8  6E16               	movwf	delay_ms@value_ms+1,c
  1599  0039DA  0EE8               	movlw	232
  1600  0039DC  6E15               	movwf	delay_ms@value_ms,c
  1601  0039DE  EC3E  F01C         	call	_delay_ms	;wreg free
  1602  0039E2  2A18               	incf	delay_s@repeat_loop,f,c
  1603  0039E4                     l3688:
  1604  0039E4  5017               	movf	delay_s@value_s,w,c
  1605  0039E6  5C18               	subwf	delay_s@repeat_loop,w,c
  1606  0039E8  B0D8               	btfsc	status,0,c
  1607  0039EA  0012               	return	
  1608  0039EC  D7F4               	goto	l3684
  1609  0039EE                     __end_of_delay_s:
  1610                           	opt stack 0
  1611                           tblptru	equ	0xFF8
  1612                           tblptrh	equ	0xFF7
  1613                           tblptrl	equ	0xFF6
  1614                           tablat	equ	0xFF5
  1615                           intcon	equ	0xFF2
  1616                           postinc0	equ	0xFEE
  1617                           wreg	equ	0xFE8
  1618                           status	equ	0xFD8
  1619                           
  1620 ;; *************** function _LCD_write_integer *****************
  1621 ;; Defined at:
  1622 ;;		line 210 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  1623 ;; Parameters:    Size  Location     Type
  1624 ;;  value           2   38[COMRAM] int 
  1625 ;;  number_of_di    1   40[COMRAM] unsigned char 
  1626 ;;  zero_cleanin    1   41[COMRAM] unsigned char 
  1627 ;; Auto vars:     Size  Location     Type
  1628 ;;  convertedInt    6   47[COMRAM] unsigned char [6]
  1629 ;;  index           1   53[COMRAM] unsigned char 
  1630 ;; Return value:  Size  Location     Type
  1631 ;;		None               void
  1632 ;; Registers used:
  1633 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1634 ;; Tracked objects:
  1635 ;;		On entry : 0/0
  1636 ;;		On exit  : 0/0
  1637 ;;		Unchanged: 0/0
  1638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1639 ;;      Params:         4       0       0       0       0       0       0       0       0
  1640 ;;      Locals:         7       0       0       0       0       0       0       0       0
  1641 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1642 ;;      Totals:        16       0       0       0       0       0       0       0       0
  1643 ;;Total ram usage:       16 bytes
  1644 ;; Hardware stack levels used:    1
  1645 ;; Hardware stack levels required when called:    7
  1646 ;; This function calls:
  1647 ;;		_LCD_write_string
  1648 ;;		_itoa
  1649 ;; This function is called by:
  1650 ;;		_scarica
  1651 ;; This function uses a non-reentrant model
  1652 ;;
  1653                           
  1654                           	psect	text3
  1655  002B12                     __ptext3:
  1656                           	opt stack 0
  1657  002B12                     _LCD_write_integer:
  1658                           	opt stack 22
  1659                           
  1660                           ;src\LCD_44780.c: 213: unsigned char convertedInt [6] = {0,0,0,0,0,0};
  1661                           
  1662                           ;incstack = 0
  1663  002B12  EE20  F04A         	lfsr	2,LCD_write_integer@F4919
  1664  002B16  EE10  F030         	lfsr	1,LCD_write_integer@convertedInt
  1665  002B1A  0E05               	movlw	5
  1666  002B1C                     u3841:
  1667  002B1C  CFDB FFE3          	movff	plusw2,plusw1
  1668  002B20  06E8               	decf	wreg,f,c
  1669  002B22  E2FC               	bc	u3841
  1670                           
  1671                           ;src\LCD_44780.c: 216: unsigned char index;
  1672                           ;src\LCD_44780.c: 224: itoa ((unsigned char*) convertedInt, value,10);
  1673  002B24  0E30               	movlw	low LCD_write_integer@convertedInt
  1674  002B26  6E1F               	movwf	itoa@buf,c
  1675  002B28  0E00               	movlw	high LCD_write_integer@convertedInt
  1676  002B2A  6E20               	movwf	itoa@buf+1,c
  1677  002B2C  C027  F021         	movff	LCD_write_integer@value,itoa@val
  1678  002B30  C028  F022         	movff	LCD_write_integer@value+1,itoa@val+1
  1679  002B34  0E00               	movlw	0
  1680  002B36  6E24               	movwf	itoa@base+1,c
  1681  002B38  0E0A               	movlw	10
  1682  002B3A  6E23               	movwf	itoa@base,c
  1683  002B3C  ECFC  F01B         	call	_itoa	;wreg free
  1684                           
  1685                           ;src\LCD_44780.c: 228: if (number_of_digits >0 ) {
  1686  002B40  5029               	movf	LCD_write_integer@number_of_digits,w,c
  1687  002B42  B4D8               	btfsc	status,2,c
  1688  002B44  D07E               	goto	l3638
  1689                           
  1690                           ;src\LCD_44780.c: 230: convertedInt[number_of_digits] = '\0';
  1691  002B46  5029               	movf	LCD_write_integer@number_of_digits,w,c
  1692  002B48  0D01               	mullw	1
  1693  002B4A  0E30               	movlw	low LCD_write_integer@convertedInt
  1694  002B4C  24F3               	addwf	prodl,w,c
  1695  002B4E  6ED9               	movwf	fsr2l,c
  1696  002B50  0E00               	movlw	high LCD_write_integer@convertedInt
  1697  002B52  20F4               	addwfc	prodh,w,c
  1698  002B54  6EDA               	movwf	fsr2h,c
  1699  002B56  0E00               	movlw	0
  1700  002B58  6EDF               	movwf	indf2,c
  1701                           
  1702                           ;src\LCD_44780.c: 234: while (!(convertedInt[number_of_digits-1] <= '9' && convertedInt[
      +                          number_of_digits-1] >= '0')){
  1703  002B5A  D04B               	goto	l3634
  1704  002B5C                     l3616:
  1705                           
  1706                           ;src\LCD_44780.c: 236: for (index = number_of_digits-1; index > 0; index--){
  1707  002B5C  0429               	decf	LCD_write_integer@number_of_digits,w,c
  1708  002B5E  6E36               	movwf	LCD_write_integer@index,c
  1709  002B60                     l3618:
  1710  002B60  5036               	movf	LCD_write_integer@index,w,c
  1711  002B62  B4D8               	btfsc	status,2,c
  1712  002B64  D046               	goto	l3634
  1713                           
  1714                           ;src\LCD_44780.c: 237: convertedInt[index] = convertedInt[index-1];
  1715  002B66  0EFF               	movlw	255
  1716  002B68  6E2B               	movwf	??_LCD_write_integer& (0+255),c
  1717  002B6A  0EFF               	movlw	255
  1718  002B6C  6E2C               	movwf	(??_LCD_write_integer+1)& (0+255),c
  1719  002B6E  5036               	movf	LCD_write_integer@index,w,c
  1720  002B70  6E2D               	movwf	(??_LCD_write_integer+2)& (0+255),c
  1721  002B72  6A2E               	clrf	(??_LCD_write_integer+3)& (0+255),c
  1722  002B74  502B               	movf	??_LCD_write_integer,w,c
  1723  002B76  262D               	addwf	??_LCD_write_integer+2,f,c
  1724  002B78  502C               	movf	??_LCD_write_integer+1,w,c
  1725  002B7A  222E               	addwfc	??_LCD_write_integer+3,f,c
  1726  002B7C  0E30               	movlw	low LCD_write_integer@convertedInt
  1727  002B7E  242D               	addwf	??_LCD_write_integer+2,w,c
  1728  002B80  6ED9               	movwf	fsr2l,c
  1729  002B82  0E00               	movlw	high LCD_write_integer@convertedInt
  1730  002B84  202E               	addwfc	??_LCD_write_integer+3,w,c
  1731  002B86  6EDA               	movwf	fsr2h,c
  1732  002B88  5036               	movf	LCD_write_integer@index,w,c
  1733  002B8A  0D01               	mullw	1
  1734  002B8C  0E30               	movlw	low LCD_write_integer@convertedInt
  1735  002B8E  24F3               	addwf	prodl,w,c
  1736  002B90  6EE1               	movwf	fsr1l,c
  1737  002B92  0E00               	movlw	high LCD_write_integer@convertedInt
  1738  002B94  20F4               	addwfc	prodh,w,c
  1739  002B96  6EE2               	movwf	fsr1h,c
  1740  002B98  CFDF FFE7          	movff	indf2,indf1
  1741                           
  1742                           ;src\LCD_44780.c: 239: if (zero_cleaning == 0x01) {
  1743  002B9C  042A               	decf	LCD_write_integer@zero_cleaning,w,c
  1744  002B9E  A4D8               	btfss	status,2,c
  1745  002BA0  D013               	goto	l3628
  1746                           
  1747                           ;src\LCD_44780.c: 240: convertedInt[index-1] = ' ';
  1748  002BA2  0EFF               	movlw	255
  1749  002BA4  6E2B               	movwf	??_LCD_write_integer& (0+255),c
  1750  002BA6  0EFF               	movlw	255
  1751  002BA8  6E2C               	movwf	(??_LCD_write_integer+1)& (0+255),c
  1752  002BAA  5036               	movf	LCD_write_integer@index,w,c
  1753  002BAC  6E2D               	movwf	(??_LCD_write_integer+2)& (0+255),c
  1754  002BAE  6A2E               	clrf	(??_LCD_write_integer+3)& (0+255),c
  1755  002BB0  502B               	movf	??_LCD_write_integer,w,c
  1756  002BB2  262D               	addwf	??_LCD_write_integer+2,f,c
  1757  002BB4  502C               	movf	??_LCD_write_integer+1,w,c
  1758  002BB6  222E               	addwfc	??_LCD_write_integer+3,f,c
  1759  002BB8  0E30               	movlw	low LCD_write_integer@convertedInt
  1760  002BBA  242D               	addwf	??_LCD_write_integer+2,w,c
  1761  002BBC  6ED9               	movwf	fsr2l,c
  1762  002BBE  0E00               	movlw	high LCD_write_integer@convertedInt
  1763  002BC0  202E               	addwfc	??_LCD_write_integer+3,w,c
  1764  002BC2  6EDA               	movwf	fsr2h,c
  1765  002BC4  0E20               	movlw	32
  1766  002BC6  D012               	goto	L1
  1767  002BC8                     l3628:
  1768                           
  1769                           ;src\LCD_44780.c: 242: convertedInt[index-1] = '0';
  1770  002BC8  0EFF               	movlw	255
  1771  002BCA  6E2B               	movwf	??_LCD_write_integer& (0+255),c
  1772  002BCC  0EFF               	movlw	255
  1773  002BCE  6E2C               	movwf	(??_LCD_write_integer+1)& (0+255),c
  1774  002BD0  5036               	movf	LCD_write_integer@index,w,c
  1775  002BD2  6E2D               	movwf	(??_LCD_write_integer+2)& (0+255),c
  1776  002BD4  6A2E               	clrf	(??_LCD_write_integer+3)& (0+255),c
  1777  002BD6  502B               	movf	??_LCD_write_integer,w,c
  1778  002BD8  262D               	addwf	??_LCD_write_integer+2,f,c
  1779  002BDA  502C               	movf	??_LCD_write_integer+1,w,c
  1780  002BDC  222E               	addwfc	??_LCD_write_integer+3,f,c
  1781  002BDE  0E30               	movlw	low LCD_write_integer@convertedInt
  1782  002BE0  242D               	addwf	??_LCD_write_integer+2,w,c
  1783  002BE2  6ED9               	movwf	fsr2l,c
  1784  002BE4  0E00               	movlw	high LCD_write_integer@convertedInt
  1785  002BE6  202E               	addwfc	??_LCD_write_integer+3,w,c
  1786  002BE8  6EDA               	movwf	fsr2h,c
  1787  002BEA  0E30               	movlw	48
  1788  002BEC                     L1:
  1789  002BEC  6EDF               	movwf	indf2,c
  1790  002BEE  0636               	decf	LCD_write_integer@index,f,c
  1791  002BF0  D7B7               	goto	l3618
  1792  002BF2                     l3634:
  1793  002BF2  0EFF               	movlw	255
  1794  002BF4  6E2B               	movwf	??_LCD_write_integer& (0+255),c
  1795  002BF6  0EFF               	movlw	255
  1796  002BF8  6E2C               	movwf	(??_LCD_write_integer+1)& (0+255),c
  1797  002BFA  5029               	movf	LCD_write_integer@number_of_digits,w,c
  1798  002BFC  6E2D               	movwf	(??_LCD_write_integer+2)& (0+255),c
  1799  002BFE  6A2E               	clrf	(??_LCD_write_integer+3)& (0+255),c
  1800  002C00  502B               	movf	??_LCD_write_integer,w,c
  1801  002C02  262D               	addwf	??_LCD_write_integer+2,f,c
  1802  002C04  502C               	movf	??_LCD_write_integer+1,w,c
  1803  002C06  222E               	addwfc	??_LCD_write_integer+3,f,c
  1804  002C08  0E30               	movlw	low LCD_write_integer@convertedInt
  1805  002C0A  242D               	addwf	??_LCD_write_integer+2,w,c
  1806  002C0C  6ED9               	movwf	fsr2l,c
  1807  002C0E  0E00               	movlw	high LCD_write_integer@convertedInt
  1808  002C10  202E               	addwfc	??_LCD_write_integer+3,w,c
  1809  002C12  6EDA               	movwf	fsr2h,c
  1810  002C14  0E3A               	movlw	58
  1811  002C16  60DF               	cpfslt	indf2,c
  1812  002C18  D7A1               	goto	l3616
  1813  002C1A  0EFF               	movlw	255
  1814  002C1C  6E2B               	movwf	??_LCD_write_integer& (0+255),c
  1815  002C1E  0EFF               	movlw	255
  1816  002C20  6E2C               	movwf	(??_LCD_write_integer+1)& (0+255),c
  1817  002C22  5029               	movf	LCD_write_integer@number_of_digits,w,c
  1818  002C24  6E2D               	movwf	(??_LCD_write_integer+2)& (0+255),c
  1819  002C26  6A2E               	clrf	(??_LCD_write_integer+3)& (0+255),c
  1820  002C28  502B               	movf	??_LCD_write_integer,w,c
  1821  002C2A  262D               	addwf	??_LCD_write_integer+2,f,c
  1822  002C2C  502C               	movf	??_LCD_write_integer+1,w,c
  1823  002C2E  222E               	addwfc	??_LCD_write_integer+3,f,c
  1824  002C30  0E30               	movlw	low LCD_write_integer@convertedInt
  1825  002C32  242D               	addwf	??_LCD_write_integer+2,w,c
  1826  002C34  6ED9               	movwf	fsr2l,c
  1827  002C36  0E00               	movlw	high LCD_write_integer@convertedInt
  1828  002C38  202E               	addwfc	??_LCD_write_integer+3,w,c
  1829  002C3A  6EDA               	movwf	fsr2h,c
  1830  002C3C  0E2F               	movlw	47
  1831  002C3E  64DF               	cpfsgt	indf2,c
  1832  002C40  D78D               	goto	l3616
  1833  002C42                     l3638:
  1834                           
  1835                           ;src\LCD_44780.c: 243: }
  1836                           ;src\LCD_44780.c: 245: }
  1837                           ;src\LCD_44780.c: 246: }
  1838                           ;src\LCD_44780.c: 247: }
  1839                           ;src\LCD_44780.c: 249: LCD_write_string (convertedInt);
  1840  002C42  0E30               	movlw	low LCD_write_integer@convertedInt
  1841  002C44  6E20               	movwf	LCD_write_string@buffer,c
  1842  002C46  0E00               	movlw	high LCD_write_integer@convertedInt
  1843  002C48  6E21               	movwf	LCD_write_string@buffer+1,c
  1844  002C4A  ECD5  F01C         	call	_LCD_write_string	;wreg free
  1845  002C4E  0012               	return		;funcret
  1846  002C50                     __end_of_LCD_write_integer:
  1847                           	opt stack 0
  1848                           tblptru	equ	0xFF8
  1849                           tblptrh	equ	0xFF7
  1850                           tblptrl	equ	0xFF6
  1851                           tablat	equ	0xFF5
  1852                           prodh	equ	0xFF4
  1853                           prodl	equ	0xFF3
  1854                           intcon	equ	0xFF2
  1855                           postinc0	equ	0xFEE
  1856                           wreg	equ	0xFE8
  1857                           indf1	equ	0xFE7
  1858                           plusw1	equ	0xFE3
  1859                           fsr1h	equ	0xFE2
  1860                           fsr1l	equ	0xFE1
  1861                           indf2	equ	0xFDF
  1862                           plusw2	equ	0xFDB
  1863                           fsr2h	equ	0xFDA
  1864                           fsr2l	equ	0xFD9
  1865                           status	equ	0xFD8
  1866                           
  1867 ;; *************** function _itoa *****************
  1868 ;; Defined at:
  1869 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\itoa.c"
  1870 ;; Parameters:    Size  Location     Type
  1871 ;;  buf             2   30[COMRAM] PTR unsigned char 
  1872 ;;		 -> LCD_write_integer@convertedInt(6), 
  1873 ;;  val             2   32[COMRAM] int 
  1874 ;;  base            2   34[COMRAM] int 
  1875 ;; Auto vars:     Size  Location     Type
  1876 ;;  cp              2   36[COMRAM] PTR unsigned char 
  1877 ;;		 -> LCD_write_integer@convertedInt(6), 
  1878 ;; Return value:  Size  Location     Type
  1879 ;;                  2   30[COMRAM] PTR unsigned char 
  1880 ;; Registers used:
  1881 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1882 ;; Tracked objects:
  1883 ;;		On entry : 0/0
  1884 ;;		On exit  : 0/0
  1885 ;;		Unchanged: 0/0
  1886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1887 ;;      Params:         6       0       0       0       0       0       0       0       0
  1888 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1889 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1890 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1891 ;;Total ram usage:        8 bytes
  1892 ;; Hardware stack levels used:    1
  1893 ;; Hardware stack levels required when called:    3
  1894 ;; This function calls:
  1895 ;;		_utoa
  1896 ;; This function is called by:
  1897 ;;		_LCD_write_integer
  1898 ;; This function uses a non-reentrant model
  1899 ;;
  1900                           
  1901                           	psect	text4
  1902  0037F8                     __ptext4:
  1903                           	opt stack 0
  1904  0037F8                     _itoa:
  1905                           	opt stack 25
  1906                           
  1907                           ;incstack = 0
  1908  0037F8  C01F  F025         	movff	itoa@buf,itoa@cp
  1909  0037FC  C020  F026         	movff	itoa@buf+1,itoa@cp+1
  1910  003800  AE22               	btfss	itoa@val+1,7,c
  1911  003802  D00C               	goto	l3096
  1912  003804  C01F  FFD9         	movff	itoa@buf,fsr2l
  1913  003808  C020  FFDA         	movff	itoa@buf+1,fsr2h
  1914  00380C  0E2D               	movlw	45
  1915  00380E  6EDF               	movwf	indf2,c
  1916  003810  4A1F               	infsnz	itoa@buf,f,c
  1917  003812  2A20               	incf	itoa@buf+1,f,c
  1918  003814  6C21               	negf	itoa@val,c
  1919  003816  1E22               	comf	itoa@val+1,f,c
  1920  003818  B0D8               	btfsc	status,0,c
  1921  00381A  2A22               	incf	itoa@val+1,f,c
  1922  00381C                     l3096:
  1923  00381C  C01F  F016         	movff	itoa@buf,utoa@buf
  1924  003820  C020  F017         	movff	itoa@buf+1,utoa@buf+1
  1925  003824  C021  F018         	movff	itoa@val,utoa@val
  1926  003828  C022  F019         	movff	itoa@val+1,utoa@val+1
  1927  00382C  C023  F01A         	movff	itoa@base,utoa@base
  1928  003830  C024  F01B         	movff	itoa@base+1,utoa@base+1
  1929  003834  ECAF  F019         	call	_utoa	;wreg free
  1930  003838  0012               	return	
  1931  00383A                     __end_of_itoa:
  1932                           	opt stack 0
  1933                           tblptru	equ	0xFF8
  1934                           tblptrh	equ	0xFF7
  1935                           tblptrl	equ	0xFF6
  1936                           tablat	equ	0xFF5
  1937                           prodh	equ	0xFF4
  1938                           prodl	equ	0xFF3
  1939                           intcon	equ	0xFF2
  1940                           postinc0	equ	0xFEE
  1941                           wreg	equ	0xFE8
  1942                           indf1	equ	0xFE7
  1943                           plusw1	equ	0xFE3
  1944                           fsr1h	equ	0xFE2
  1945                           fsr1l	equ	0xFE1
  1946                           indf2	equ	0xFDF
  1947                           plusw2	equ	0xFDB
  1948                           fsr2h	equ	0xFDA
  1949                           fsr2l	equ	0xFD9
  1950                           status	equ	0xFD8
  1951                           
  1952 ;; *************** function _utoa *****************
  1953 ;; Defined at:
  1954 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\itoa.c"
  1955 ;; Parameters:    Size  Location     Type
  1956 ;;  buf             2   21[COMRAM] PTR unsigned char 
  1957 ;;		 -> LCD_write_integer@convertedInt(6), 
  1958 ;;  val             2   23[COMRAM] unsigned int 
  1959 ;;  base            2   25[COMRAM] int 
  1960 ;; Auto vars:     Size  Location     Type
  1961 ;;  v               2   27[COMRAM] unsigned int 
  1962 ;;  c               1   29[COMRAM] unsigned char 
  1963 ;; Return value:  Size  Location     Type
  1964 ;;                  2   21[COMRAM] PTR unsigned char 
  1965 ;; Registers used:
  1966 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1967 ;; Tracked objects:
  1968 ;;		On entry : 0/0
  1969 ;;		On exit  : 0/0
  1970 ;;		Unchanged: 0/0
  1971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1972 ;;      Params:         6       0       0       0       0       0       0       0       0
  1973 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1974 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1975 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1976 ;;Total ram usage:        9 bytes
  1977 ;; Hardware stack levels used:    1
  1978 ;; Hardware stack levels required when called:    2
  1979 ;; This function calls:
  1980 ;;		___lwdiv
  1981 ;;		___lwmod
  1982 ;; This function is called by:
  1983 ;;		_itoa
  1984 ;; This function uses a non-reentrant model
  1985 ;;
  1986                           
  1987                           	psect	text5
  1988  00335E                     __ptext5:
  1989                           	opt stack 0
  1990  00335E                     _utoa:
  1991                           	opt stack 25
  1992                           
  1993                           ;incstack = 0
  1994  00335E  C018  F01C         	movff	utoa@val,utoa@v
  1995  003362  C019  F01D         	movff	utoa@val+1,utoa@v+1
  1996  003366                     l3052:
  1997  003366  C01C  F00F         	movff	utoa@v,___lwdiv@dividend
  1998  00336A  C01D  F010         	movff	utoa@v+1,___lwdiv@dividend+1
  1999  00336E  C01A  F011         	movff	utoa@base,___lwdiv@divisor
  2000  003372  C01B  F012         	movff	utoa@base+1,___lwdiv@divisor+1
  2001  003376  ECAF  F01B         	call	___lwdiv	;wreg free
  2002  00337A  C00F  F01C         	movff	?___lwdiv,utoa@v
  2003  00337E  C010  F01D         	movff	?___lwdiv+1,utoa@v+1
  2004  003382  4A16               	infsnz	utoa@buf,f,c
  2005  003384  2A17               	incf	utoa@buf+1,f,c
  2006  003386  501C               	movf	utoa@v,w,c
  2007  003388  101D               	iorwf	utoa@v+1,w,c
  2008  00338A  A4D8               	btfss	status,2,c
  2009  00338C  D7EC               	goto	l3052
  2010  00338E  C016  FFD9         	movff	utoa@buf,fsr2l
  2011  003392  C017  FFDA         	movff	utoa@buf+1,fsr2h
  2012  003396  0E00               	movlw	0
  2013  003398  6EDF               	movwf	indf2,c
  2014  00339A  0616               	decf	utoa@buf,f,c
  2015  00339C  A0D8               	btfss	status,0,c
  2016  00339E  0617               	decf	utoa@buf+1,f,c
  2017  0033A0                     l3062:
  2018  0033A0  C018  F00F         	movff	utoa@val,___lwmod@dividend
  2019  0033A4  C019  F010         	movff	utoa@val+1,___lwmod@dividend+1
  2020  0033A8  C01A  F011         	movff	utoa@base,___lwmod@divisor
  2021  0033AC  C01B  F012         	movff	utoa@base+1,___lwmod@divisor+1
  2022  0033B0  EC1D  F01C         	call	___lwmod	;wreg free
  2023  0033B4  500F               	movf	?___lwmod,w,c
  2024  0033B6  6E1E               	movwf	utoa@c,c
  2025  0033B8  C018  F00F         	movff	utoa@val,___lwdiv@dividend
  2026  0033BC  C019  F010         	movff	utoa@val+1,___lwdiv@dividend+1
  2027  0033C0  C01A  F011         	movff	utoa@base,___lwdiv@divisor
  2028  0033C4  C01B  F012         	movff	utoa@base+1,___lwdiv@divisor+1
  2029  0033C8  ECAF  F01B         	call	___lwdiv	;wreg free
  2030  0033CC  C00F  F018         	movff	?___lwdiv,utoa@val
  2031  0033D0  C010  F019         	movff	?___lwdiv+1,utoa@val+1
  2032  0033D4  0E09               	movlw	9
  2033  0033D6  641E               	cpfsgt	utoa@c,c
  2034  0033D8  D002               	goto	l682
  2035  0033DA  0E07               	movlw	7
  2036  0033DC  261E               	addwf	utoa@c,f,c
  2037  0033DE                     l682:
  2038  0033DE  0E30               	movlw	48
  2039  0033E0  261E               	addwf	utoa@c,f,c
  2040  0033E2  C016  FFD9         	movff	utoa@buf,fsr2l
  2041  0033E6  C017  FFDA         	movff	utoa@buf+1,fsr2h
  2042  0033EA  C01E  FFDF         	movff	utoa@c,indf2
  2043  0033EE  0616               	decf	utoa@buf,f,c
  2044  0033F0  A0D8               	btfss	status,0,c
  2045  0033F2  0617               	decf	utoa@buf+1,f,c
  2046  0033F4  5018               	movf	utoa@val,w,c
  2047  0033F6  1019               	iorwf	utoa@val+1,w,c
  2048  0033F8  A4D8               	btfss	status,2,c
  2049  0033FA  D7D2               	goto	l3062
  2050                           
  2051                           ;	Return value of _utoa is never used
  2052  0033FC  4A16               	infsnz	utoa@buf,f,c
  2053  0033FE  2A17               	incf	utoa@buf+1,f,c
  2054  003400  0012               	return	
  2055  003402                     __end_of_utoa:
  2056                           	opt stack 0
  2057                           tblptru	equ	0xFF8
  2058                           tblptrh	equ	0xFF7
  2059                           tblptrl	equ	0xFF6
  2060                           tablat	equ	0xFF5
  2061                           prodh	equ	0xFF4
  2062                           prodl	equ	0xFF3
  2063                           intcon	equ	0xFF2
  2064                           postinc0	equ	0xFEE
  2065                           wreg	equ	0xFE8
  2066                           indf1	equ	0xFE7
  2067                           plusw1	equ	0xFE3
  2068                           fsr1h	equ	0xFE2
  2069                           fsr1l	equ	0xFE1
  2070                           indf2	equ	0xFDF
  2071                           plusw2	equ	0xFDB
  2072                           fsr2h	equ	0xFDA
  2073                           fsr2l	equ	0xFD9
  2074                           status	equ	0xFD8
  2075                           
  2076 ;; *************** function ___lwmod *****************
  2077 ;; Defined at:
  2078 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
  2079 ;; Parameters:    Size  Location     Type
  2080 ;;  dividend        2   14[COMRAM] unsigned int 
  2081 ;;  divisor         2   16[COMRAM] unsigned int 
  2082 ;; Auto vars:     Size  Location     Type
  2083 ;;  counter         1   18[COMRAM] unsigned char 
  2084 ;; Return value:  Size  Location     Type
  2085 ;;                  2   14[COMRAM] unsigned int 
  2086 ;; Registers used:
  2087 ;;		wreg, status,2, status,0
  2088 ;; Tracked objects:
  2089 ;;		On entry : 0/0
  2090 ;;		On exit  : 0/0
  2091 ;;		Unchanged: 0/0
  2092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2093 ;;      Params:         4       0       0       0       0       0       0       0       0
  2094 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2095 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2096 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2097 ;;Total ram usage:        5 bytes
  2098 ;; Hardware stack levels used:    1
  2099 ;; Hardware stack levels required when called:    1
  2100 ;; This function calls:
  2101 ;;		Nothing
  2102 ;; This function is called by:
  2103 ;;		_utoa
  2104 ;; This function uses a non-reentrant model
  2105 ;;
  2106                           
  2107                           	psect	text6
  2108  00383A                     __ptext6:
  2109                           	opt stack 0
  2110  00383A                     ___lwmod:
  2111                           	opt stack 25
  2112                           
  2113                           ;incstack = 0
  2114  00383A  5011               	movf	___lwmod@divisor,w,c
  2115  00383C  1012               	iorwf	___lwmod@divisor+1,w,c
  2116  00383E  B4D8               	btfsc	status,2,c
  2117  003840  D018               	goto	l771
  2118  003842  0E01               	movlw	1
  2119  003844  6E13               	movwf	___lwmod@counter,c
  2120  003846  D004               	goto	l2610
  2121  003848                     l2608:
  2122  003848  90D8               	bcf	status,0,c
  2123  00384A  3611               	rlcf	___lwmod@divisor,f,c
  2124  00384C  3612               	rlcf	___lwmod@divisor+1,f,c
  2125  00384E  2A13               	incf	___lwmod@counter,f,c
  2126  003850                     l2610:
  2127  003850  AE12               	btfss	___lwmod@divisor+1,7,c
  2128  003852  D7FA               	goto	l2608
  2129  003854                     l2612:
  2130  003854  5011               	movf	___lwmod@divisor,w,c
  2131  003856  5C0F               	subwf	___lwmod@dividend,w,c
  2132  003858  5012               	movf	___lwmod@divisor+1,w,c
  2133  00385A  5810               	subwfb	___lwmod@dividend+1,w,c
  2134  00385C  A0D8               	btfss	status,0,c
  2135  00385E  D004               	goto	l2616
  2136  003860  5011               	movf	___lwmod@divisor,w,c
  2137  003862  5E0F               	subwf	___lwmod@dividend,f,c
  2138  003864  5012               	movf	___lwmod@divisor+1,w,c
  2139  003866  5A10               	subwfb	___lwmod@dividend+1,f,c
  2140  003868                     l2616:
  2141  003868  90D8               	bcf	status,0,c
  2142  00386A  3212               	rrcf	___lwmod@divisor+1,f,c
  2143  00386C  3211               	rrcf	___lwmod@divisor,f,c
  2144  00386E  2E13               	decfsz	___lwmod@counter,f,c
  2145  003870  D7F1               	goto	l2612
  2146  003872                     l771:
  2147  003872  C00F  F00F         	movff	___lwmod@dividend,?___lwmod
  2148  003876  C010  F010         	movff	___lwmod@dividend+1,?___lwmod+1
  2149  00387A  0012               	return		;funcret
  2150  00387C                     __end_of___lwmod:
  2151                           	opt stack 0
  2152                           tblptru	equ	0xFF8
  2153                           tblptrh	equ	0xFF7
  2154                           tblptrl	equ	0xFF6
  2155                           tablat	equ	0xFF5
  2156                           prodh	equ	0xFF4
  2157                           prodl	equ	0xFF3
  2158                           intcon	equ	0xFF2
  2159                           postinc0	equ	0xFEE
  2160                           wreg	equ	0xFE8
  2161                           indf1	equ	0xFE7
  2162                           plusw1	equ	0xFE3
  2163                           fsr1h	equ	0xFE2
  2164                           fsr1l	equ	0xFE1
  2165                           indf2	equ	0xFDF
  2166                           plusw2	equ	0xFDB
  2167                           fsr2h	equ	0xFDA
  2168                           fsr2l	equ	0xFD9
  2169                           status	equ	0xFD8
  2170                           
  2171 ;; *************** function ___lwdiv *****************
  2172 ;; Defined at:
  2173 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  2174 ;; Parameters:    Size  Location     Type
  2175 ;;  dividend        2   14[COMRAM] unsigned int 
  2176 ;;  divisor         2   16[COMRAM] unsigned int 
  2177 ;; Auto vars:     Size  Location     Type
  2178 ;;  quotient        2   18[COMRAM] unsigned int 
  2179 ;;  counter         1   20[COMRAM] unsigned char 
  2180 ;; Return value:  Size  Location     Type
  2181 ;;                  2   14[COMRAM] unsigned int 
  2182 ;; Registers used:
  2183 ;;		wreg, status,2, status,0
  2184 ;; Tracked objects:
  2185 ;;		On entry : 0/0
  2186 ;;		On exit  : 0/0
  2187 ;;		Unchanged: 0/0
  2188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2189 ;;      Params:         4       0       0       0       0       0       0       0       0
  2190 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2191 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2192 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2193 ;;Total ram usage:        7 bytes
  2194 ;; Hardware stack levels used:    1
  2195 ;; Hardware stack levels required when called:    1
  2196 ;; This function calls:
  2197 ;;		Nothing
  2198 ;; This function is called by:
  2199 ;;		_utoa
  2200 ;; This function uses a non-reentrant model
  2201 ;;
  2202                           
  2203                           	psect	text7
  2204  00375E                     __ptext7:
  2205                           	opt stack 0
  2206  00375E                     ___lwdiv:
  2207                           	opt stack 25
  2208                           
  2209                           ;incstack = 0
  2210  00375E  0E00               	movlw	0
  2211  003760  6E14               	movwf	___lwdiv@quotient+1,c
  2212  003762  0E00               	movlw	0
  2213  003764  6E13               	movwf	___lwdiv@quotient,c
  2214  003766  5011               	movf	___lwdiv@divisor,w,c
  2215  003768  1012               	iorwf	___lwdiv@divisor+1,w,c
  2216  00376A  B4D8               	btfsc	status,2,c
  2217  00376C  D01C               	goto	l761
  2218  00376E  0E01               	movlw	1
  2219  003770  6E15               	movwf	___lwdiv@counter,c
  2220  003772  D004               	goto	l2590
  2221  003774                     l2588:
  2222  003774  90D8               	bcf	status,0,c
  2223  003776  3611               	rlcf	___lwdiv@divisor,f,c
  2224  003778  3612               	rlcf	___lwdiv@divisor+1,f,c
  2225  00377A  2A15               	incf	___lwdiv@counter,f,c
  2226  00377C                     l2590:
  2227  00377C  AE12               	btfss	___lwdiv@divisor+1,7,c
  2228  00377E  D7FA               	goto	l2588
  2229  003780                     l2592:
  2230  003780  90D8               	bcf	status,0,c
  2231  003782  3613               	rlcf	___lwdiv@quotient,f,c
  2232  003784  3614               	rlcf	___lwdiv@quotient+1,f,c
  2233  003786  5011               	movf	___lwdiv@divisor,w,c
  2234  003788  5C0F               	subwf	___lwdiv@dividend,w,c
  2235  00378A  5012               	movf	___lwdiv@divisor+1,w,c
  2236  00378C  5810               	subwfb	___lwdiv@dividend+1,w,c
  2237  00378E  A0D8               	btfss	status,0,c
  2238  003790  D005               	goto	l2600
  2239  003792  5011               	movf	___lwdiv@divisor,w,c
  2240  003794  5E0F               	subwf	___lwdiv@dividend,f,c
  2241  003796  5012               	movf	___lwdiv@divisor+1,w,c
  2242  003798  5A10               	subwfb	___lwdiv@dividend+1,f,c
  2243  00379A  8013               	bsf	___lwdiv@quotient,0,c
  2244  00379C                     l2600:
  2245  00379C  90D8               	bcf	status,0,c
  2246  00379E  3212               	rrcf	___lwdiv@divisor+1,f,c
  2247  0037A0  3211               	rrcf	___lwdiv@divisor,f,c
  2248  0037A2  2E15               	decfsz	___lwdiv@counter,f,c
  2249  0037A4  D7ED               	goto	l2592
  2250  0037A6                     l761:
  2251  0037A6  C013  F00F         	movff	___lwdiv@quotient,?___lwdiv
  2252  0037AA  C014  F010         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2253  0037AE  0012               	return		;funcret
  2254  0037B0                     __end_of___lwdiv:
  2255                           	opt stack 0
  2256                           tblptru	equ	0xFF8
  2257                           tblptrh	equ	0xFF7
  2258                           tblptrl	equ	0xFF6
  2259                           tablat	equ	0xFF5
  2260                           prodh	equ	0xFF4
  2261                           prodl	equ	0xFF3
  2262                           intcon	equ	0xFF2
  2263                           postinc0	equ	0xFEE
  2264                           wreg	equ	0xFE8
  2265                           indf1	equ	0xFE7
  2266                           plusw1	equ	0xFE3
  2267                           fsr1h	equ	0xFE2
  2268                           fsr1l	equ	0xFE1
  2269                           indf2	equ	0xFDF
  2270                           plusw2	equ	0xFDB
  2271                           fsr2h	equ	0xFDA
  2272                           fsr2l	equ	0xFD9
  2273                           status	equ	0xFD8
  2274                           
  2275 ;; *************** function _ricarica *****************
  2276 ;; Defined at:
  2277 ;;		line 128 in file "tester.c"
  2278 ;; Parameters:    Size  Location     Type
  2279 ;;		None
  2280 ;; Auto vars:     Size  Location     Type
  2281 ;;		None
  2282 ;; Return value:  Size  Location     Type
  2283 ;;		None               void
  2284 ;; Registers used:
  2285 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2286 ;; Tracked objects:
  2287 ;;		On entry : 0/0
  2288 ;;		On exit  : 0/0
  2289 ;;		Unchanged: 0/0
  2290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2291 ;;      Params:         0       0       0       0       0       0       0       0       0
  2292 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2293 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2294 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2295 ;;Total ram usage:        0 bytes
  2296 ;; Hardware stack levels used:    1
  2297 ;; Hardware stack levels required when called:    7
  2298 ;; This function calls:
  2299 ;;		_LCD_clear
  2300 ;;		_LCD_goto_line
  2301 ;;		_LCD_write_message
  2302 ;;		_LCD_write_string
  2303 ;;		___flge
  2304 ;;		_delay_ms
  2305 ;;		_read_adc
  2306 ;;		_sprintf
  2307 ;; This function is called by:
  2308 ;;		_main
  2309 ;; This function uses a non-reentrant model
  2310 ;;
  2311                           
  2312                           	psect	text8
  2313  00284C                     __ptext8:
  2314                           	opt stack 0
  2315  00284C                     _ricarica:
  2316                           	opt stack 23
  2317                           
  2318                           ;tester.c: 129: read_adc();
  2319                           
  2320                           ;incstack = 0
  2321  00284C  EC06  F013         	call	_read_adc	;wreg free
  2322                           
  2323                           ;tester.c: 130: while ((current < 1) || (voltage < 13.5)) {
  2324  002850  D05B               	goto	l4774
  2325  002852                     l198:
  2326                           
  2327                           ;tester.c: 131: PORTCbits.RC6 = 1;
  2328  002852  8C82               	bsf	3970,6,c	;volatile
  2329                           
  2330                           ;tester.c: 132: LCD_goto_line(1);
  2331  002854  0E01               	movlw	1
  2332  002856  EC53  F019         	call	_LCD_goto_line
  2333                           
  2334                           ;tester.c: 133: LCD_write_message("Ciclo ricarica..");
  2335  00285A  0E91               	movlw	low STR_9
  2336  00285C  6E20               	movwf	LCD_write_message@buffer,c
  2337  00285E  0E08               	movlw	high STR_9
  2338  002860  6E21               	movwf	LCD_write_message@buffer+1,c
  2339  002862  EC86  F01C         	call	_LCD_write_message	;wreg free
  2340                           
  2341                           ;tester.c: 134: LCD_goto_line(2);
  2342  002866  0E02               	movlw	2
  2343  002868  EC53  F019         	call	_LCD_goto_line
  2344                           
  2345                           ;tester.c: 135: sprintf(str, "V:%.3f", voltage);
  2346  00286C  0EC7               	movlw	low _str
  2347  00286E  0100               	movlb	0	; () banked
  2348  002870  6F7C               	movwf	sprintf@sp& (0+255),b
  2349  002872  0E00               	movlw	high _str
  2350  002874  0100               	movlb	0	; () banked
  2351  002876  6F7D               	movwf	(sprintf@sp+1)& (0+255),b
  2352  002878  0EEA               	movlw	low STR_3
  2353  00287A  0100               	movlb	0	; () banked
  2354  00287C  6F7E               	movwf	sprintf@f& (0+255),b
  2355  00287E  0E08               	movlw	high STR_3
  2356  002880  0100               	movlb	0	; () banked
  2357  002882  6F7F               	movwf	(sprintf@f+1)& (0+255),b
  2358  002884  C0BD  F080         	movff	_voltage,?_sprintf+4
  2359  002888  C0BE  F081         	movff	_voltage+1,?_sprintf+5
  2360  00288C  C0BF  F082         	movff	_voltage+2,?_sprintf+6
  2361  002890  C0C0  F083         	movff	_voltage+3,?_sprintf+7
  2362  002894  EC7D  F004         	call	_sprintf	;wreg free
  2363                           
  2364                           ;tester.c: 136: str[7] = '\0';
  2365  002898  0E00               	movlw	0
  2366  00289A  0100               	movlb	0	; () banked
  2367  00289C  6FCE               	movwf	(_str+7)& (0+255),b
  2368                           
  2369                           ; BSR set to: 0
  2370                           ;tester.c: 137: LCD_write_string(str);
  2371  00289E  0EC7               	movlw	low _str
  2372  0028A0  6E20               	movwf	LCD_write_string@buffer,c
  2373  0028A2  0E00               	movlw	high _str
  2374  0028A4  6E21               	movwf	LCD_write_string@buffer+1,c
  2375  0028A6  ECD5  F01C         	call	_LCD_write_string	;wreg free
  2376                           
  2377                           ;tester.c: 138: sprintf(str, " I:%.3f", current);
  2378  0028AA  0EC7               	movlw	low _str
  2379  0028AC  0100               	movlb	0	; () banked
  2380  0028AE  6F7C               	movwf	sprintf@sp& (0+255),b
  2381  0028B0  0E00               	movlw	high _str
  2382  0028B2  0100               	movlb	0	; () banked
  2383  0028B4  6F7D               	movwf	(sprintf@sp+1)& (0+255),b
  2384  0028B6  0EDB               	movlw	low STR_4
  2385  0028B8  0100               	movlb	0	; () banked
  2386  0028BA  6F7E               	movwf	sprintf@f& (0+255),b
  2387  0028BC  0E08               	movlw	high STR_4
  2388  0028BE  0100               	movlb	0	; () banked
  2389  0028C0  6F7F               	movwf	(sprintf@f+1)& (0+255),b
  2390  0028C2  C0AD  F080         	movff	_current,?_sprintf+4
  2391  0028C6  C0AE  F081         	movff	_current+1,?_sprintf+5
  2392  0028CA  C0AF  F082         	movff	_current+2,?_sprintf+6
  2393  0028CE  C0B0  F083         	movff	_current+3,?_sprintf+7
  2394  0028D2  EC7D  F004         	call	_sprintf	;wreg free
  2395                           
  2396                           ;tester.c: 139: str[7] = '\0';
  2397  0028D6  0E00               	movlw	0
  2398  0028D8  0100               	movlb	0	; () banked
  2399  0028DA  6FCE               	movwf	(_str+7)& (0+255),b
  2400                           
  2401                           ; BSR set to: 0
  2402                           ;tester.c: 140: LCD_write_string(str);
  2403  0028DC  0EC7               	movlw	low _str
  2404  0028DE  6E20               	movwf	LCD_write_string@buffer,c
  2405  0028E0  0E00               	movlw	high _str
  2406  0028E2  6E21               	movwf	LCD_write_string@buffer+1,c
  2407  0028E4  ECD5  F01C         	call	_LCD_write_string	;wreg free
  2408                           
  2409                           ;tester.c: 141: read_adc();
  2410  0028E8  EC06  F013         	call	_read_adc	;wreg free
  2411                           
  2412                           ;tester.c: 142: delay_ms(1000);
  2413  0028EC  0E03               	movlw	3
  2414  0028EE  6E16               	movwf	delay_ms@value_ms+1,c
  2415  0028F0  0EE8               	movlw	232
  2416  0028F2  6E15               	movwf	delay_ms@value_ms,c
  2417  0028F4  EC3E  F01C         	call	_delay_ms	;wreg free
  2418                           
  2419                           ;tester.c: 143: LCD_clear();
  2420  0028F8  ECAF  F01C         	call	_LCD_clear	;wreg free
  2421                           
  2422                           ;tester.c: 144: delay_ms(10);
  2423  0028FC  0E00               	movlw	0
  2424  0028FE  6E16               	movwf	delay_ms@value_ms+1,c
  2425  002900  0E0A               	movlw	10
  2426  002902  6E15               	movwf	delay_ms@value_ms,c
  2427  002904  EC3E  F01C         	call	_delay_ms	;wreg free
  2428  002908                     l4774:
  2429  002908  C0AD  F00F         	movff	_current,___flge@ff1
  2430  00290C  C0AE  F010         	movff	_current+1,___flge@ff1+1
  2431  002910  C0AF  F011         	movff	_current+2,___flge@ff1+2
  2432  002914  C0B0  F012         	movff	_current+3,___flge@ff1+3
  2433  002918  0E00               	movlw	0
  2434  00291A  6E13               	movwf	___flge@ff2,c
  2435  00291C  0E00               	movlw	0
  2436  00291E  6E14               	movwf	___flge@ff2+1,c
  2437  002920  0E80               	movlw	128
  2438  002922  6E15               	movwf	___flge@ff2+2,c
  2439  002924  0E3F               	movlw	63
  2440  002926  6E16               	movwf	___flge@ff2+3,c
  2441  002928  EC55  F017         	call	___flge	;wreg free
  2442  00292C  A0D8               	btfss	status,0,c
  2443  00292E  D791               	goto	l198
  2444  002930  C0BD  F00F         	movff	_voltage,___flge@ff1
  2445  002934  C0BE  F010         	movff	_voltage+1,___flge@ff1+1
  2446  002938  C0BF  F011         	movff	_voltage+2,___flge@ff1+2
  2447  00293C  C0C0  F012         	movff	_voltage+3,___flge@ff1+3
  2448  002940  0E00               	movlw	0
  2449  002942  6E13               	movwf	___flge@ff2,c
  2450  002944  0E00               	movlw	0
  2451  002946  6E14               	movwf	___flge@ff2+1,c
  2452  002948  0E58               	movlw	88
  2453  00294A  6E15               	movwf	___flge@ff2+2,c
  2454  00294C  0E41               	movlw	65
  2455  00294E  6E16               	movwf	___flge@ff2+3,c
  2456  002950  EC55  F017         	call	___flge	;wreg free
  2457  002954  A0D8               	btfss	status,0,c
  2458  002956  D77D               	goto	l198
  2459                           
  2460                           ;tester.c: 145: }
  2461                           ;tester.c: 146: if ((current > -1)&&(voltage > 14.5)) {
  2462  002958  0E00               	movlw	0
  2463  00295A  6E0F               	movwf	___flge@ff1,c
  2464  00295C  0E00               	movlw	0
  2465  00295E  6E10               	movwf	___flge@ff1+1,c
  2466  002960  0E80               	movlw	128
  2467  002962  6E11               	movwf	___flge@ff1+2,c
  2468  002964  0EBF               	movlw	191
  2469  002966  6E12               	movwf	___flge@ff1+3,c
  2470  002968  C0AD  F013         	movff	_current,___flge@ff2
  2471  00296C  C0AE  F014         	movff	_current+1,___flge@ff2+1
  2472  002970  C0AF  F015         	movff	_current+2,___flge@ff2+2
  2473  002974  C0B0  F016         	movff	_current+3,___flge@ff2+3
  2474  002978  EC55  F017         	call	___flge	;wreg free
  2475  00297C  B0D8               	btfsc	status,0,c
  2476  00297E  0012               	return	
  2477  002980  0E00               	movlw	0
  2478  002982  6E0F               	movwf	___flge@ff1,c
  2479  002984  0E00               	movlw	0
  2480  002986  6E10               	movwf	___flge@ff1+1,c
  2481  002988  0E68               	movlw	104
  2482  00298A  6E11               	movwf	___flge@ff1+2,c
  2483  00298C  0E41               	movlw	65
  2484  00298E  6E12               	movwf	___flge@ff1+3,c
  2485  002990  C0BD  F013         	movff	_voltage,___flge@ff2
  2486  002994  C0BE  F014         	movff	_voltage+1,___flge@ff2+1
  2487  002998  C0BF  F015         	movff	_voltage+2,___flge@ff2+2
  2488  00299C  C0C0  F016         	movff	_voltage+3,___flge@ff2+3
  2489  0029A0  EC55  F017         	call	___flge	;wreg free
  2490  0029A4  B0D8               	btfsc	status,0,c
  2491  0029A6  0012               	return	
  2492                           
  2493                           ;tester.c: 147: LCD_write_message("Carica terminata");
  2494  0029A8  0EB3               	movlw	low STR_12
  2495  0029AA  6E20               	movwf	LCD_write_message@buffer,c
  2496  0029AC  0E08               	movlw	high STR_12
  2497  0029AE  6E21               	movwf	LCD_write_message@buffer+1,c
  2498  0029B0  EC86  F01C         	call	_LCD_write_message	;wreg free
  2499                           
  2500                           ;tester.c: 148: delay_ms(5000);
  2501  0029B4  0E13               	movlw	19
  2502  0029B6  6E16               	movwf	delay_ms@value_ms+1,c
  2503  0029B8  0E88               	movlw	136
  2504  0029BA  6E15               	movwf	delay_ms@value_ms,c
  2505  0029BC  EC3E  F01C         	call	_delay_ms	;wreg free
  2506  0029C0  0012               	return	
  2507  0029C2                     __end_of_ricarica:
  2508                           	opt stack 0
  2509                           tblptru	equ	0xFF8
  2510                           tblptrh	equ	0xFF7
  2511                           tblptrl	equ	0xFF6
  2512                           tablat	equ	0xFF5
  2513                           prodh	equ	0xFF4
  2514                           prodl	equ	0xFF3
  2515                           intcon	equ	0xFF2
  2516                           postinc0	equ	0xFEE
  2517                           wreg	equ	0xFE8
  2518                           indf1	equ	0xFE7
  2519                           plusw1	equ	0xFE3
  2520                           fsr1h	equ	0xFE2
  2521                           fsr1l	equ	0xFE1
  2522                           indf2	equ	0xFDF
  2523                           plusw2	equ	0xFDB
  2524                           fsr2h	equ	0xFDA
  2525                           fsr2l	equ	0xFD9
  2526                           status	equ	0xFD8
  2527                           
  2528 ;; *************** function _sprintf *****************
  2529 ;; Defined at:
  2530 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  2531 ;; Parameters:    Size  Location     Type
  2532 ;;  sp              2   28[BANK0 ] PTR unsigned char 
  2533 ;;		 -> str(8), 
  2534 ;;  f               2   30[BANK0 ] PTR const unsigned char 
  2535 ;;		 -> STR_11(8), STR_10(7), STR_7(5), STR_4(8), 
  2536 ;;		 -> STR_3(7), 
  2537 ;; Auto vars:     Size  Location     Type
  2538 ;;  fval            4   58[BANK0 ] PTR const unsigned char 
  2539 ;;  tmpval          4   52[BANK0 ] struct .
  2540 ;;  val             4   46[BANK0 ] unsigned long 
  2541 ;;  cp              3    0        PTR const unsigned char 
  2542 ;;  prec            2   56[BANK0 ] int 
  2543 ;;  exp             2   50[BANK0 ] int 
  2544 ;;  flag            2   44[BANK0 ] unsigned short 
  2545 ;;  ap              2   42[BANK0 ] PTR void [1]
  2546 ;;		 -> ?_sprintf(2), 
  2547 ;;  len             2    0        unsigned int 
  2548 ;;  width           2    0        int 
  2549 ;;  c               1   62[BANK0 ] char 
  2550 ;;  d               1    0        unsigned char 
  2551 ;; Return value:  Size  Location     Type
  2552 ;;                  2   28[BANK0 ] int 
  2553 ;; Registers used:
  2554 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2555 ;; Tracked objects:
  2556 ;;		On entry : 0/0
  2557 ;;		On exit  : 0/0
  2558 ;;		Unchanged: 0/0
  2559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2560 ;;      Params:         0       8       0       0       0       0       0       0       0
  2561 ;;      Locals:         0      25       0       0       0       0       0       0       0
  2562 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2563 ;;      Totals:         0      35       0       0       0       0       0       0       0
  2564 ;;Total ram usage:       35 bytes
  2565 ;; Hardware stack levels used:    1
  2566 ;; Hardware stack levels required when called:    3
  2567 ;; This function calls:
  2568 ;;		___awdiv
  2569 ;;		___fladd
  2570 ;;		___flge
  2571 ;;		___flmul
  2572 ;;		___flneg
  2573 ;;		___flsub
  2574 ;;		___fltol
  2575 ;;		___lldiv
  2576 ;;		___llmod
  2577 ;;		___wmul
  2578 ;;		___xxtofl
  2579 ;;		__div_to_l_
  2580 ;;		__tdiv_to_l_
  2581 ;;		_fround
  2582 ;;		_isdigit
  2583 ;;		_scale
  2584 ;; This function is called by:
  2585 ;;		_scarica
  2586 ;;		_ricarica
  2587 ;; This function uses a non-reentrant model
  2588 ;;
  2589                           
  2590                           	psect	text9
  2591  0008FA                     __ptext9:
  2592                           	opt stack 0
  2593  0008FA                     _sprintf:
  2594                           	opt stack 26
  2595                           
  2596                           ;doprnt.c: 494: va_list ap;
  2597                           ;doprnt.c: 499: signed char c;
  2598                           ;doprnt.c: 501: int width;
  2599                           ;doprnt.c: 504: int prec;
  2600                           ;doprnt.c: 508: unsigned short flag;
  2601                           ;doprnt.c: 515: char d;
  2602                           ;doprnt.c: 516: double fval;
  2603                           ;doprnt.c: 517: int exp;
  2604                           ;doprnt.c: 523: union {
  2605                           ;doprnt.c: 524: unsigned long vd;
  2606                           ;doprnt.c: 525: double integ;
  2607                           ;doprnt.c: 526: } tmpval;
  2608                           ;doprnt.c: 528: unsigned long val;
  2609                           ;doprnt.c: 529: unsigned len;
  2610                           ;doprnt.c: 530: const char * cp;
  2611                           ;doprnt.c: 533: *ap = __va_start();
  2612                           
  2613                           ;incstack = 0
  2614  0008FA  0E80               	movlw	low (?_sprintf+4)
  2615  0008FC  0100               	movlb	0	; () banked
  2616  0008FE  6F8A               	movwf	sprintf@ap& (0+255),b
  2617  000900  0E00               	movlw	high (?_sprintf+4)
  2618  000902  0100               	movlb	0	; () banked
  2619  000904  6F8B               	movwf	(sprintf@ap+1)& (0+255),b
  2620                           
  2621                           ;doprnt.c: 536: while(c = *f++) {
  2622  000906  EF87  F008         	goto	l4740
  2623  00090A                     l4542:
  2624                           
  2625                           ; BSR set to: 0
  2626                           ;doprnt.c: 538: if(c != '%')
  2627  00090A  0E25               	movlw	37
  2628  00090C  0100               	movlb	0	; () banked
  2629  00090E  199E               	xorwf	sprintf@c& (0+255),w,b
  2630  000910  B4D8               	btfsc	status,2,c
  2631  000912  D007               	goto	l4548
  2632                           
  2633                           ; BSR set to: 0
  2634                           ;doprnt.c: 540: {
  2635                           ;doprnt.c: 541: ((*sp++ = (c)));
  2636  000914  C07C  FFD9         	movff	sprintf@sp,fsr2l
  2637  000918  C07D  FFDA         	movff	sprintf@sp+1,fsr2h
  2638  00091C  C09E  FFDF         	movff	sprintf@c,indf2
  2639  000920  D3F3               	goto	l4738
  2640  000922                     l4548:
  2641                           
  2642                           ; BSR set to: 0
  2643                           ;doprnt.c: 543: }
  2644                           ;doprnt.c: 548: flag = 0;
  2645  000922  0E00               	movlw	0
  2646  000924  0100               	movlb	0	; () banked
  2647  000926  6F8D               	movwf	(sprintf@flag+1)& (0+255),b
  2648  000928  0E00               	movlw	0
  2649  00092A  6F8C               	movwf	sprintf@flag& (0+255),b
  2650                           
  2651                           ; BSR set to: 0
  2652                           ;doprnt.c: 611: if(*f == '.') {
  2653  00092C  C07E  FFF6         	movff	sprintf@f,tblptrl
  2654  000930  C07F  FFF7         	movff	sprintf@f+1,tblptrh
  2655  000934                     	if	0	;tblptru may be non-zero
  2656  000934                     	endif
  2657  000934                     	if	0	;tblptru may be non-zero
  2658  000934                     	endif
  2659  000934  0008               	tblrd		*
  2660  000936  50F5               	movf	tablat,w,c
  2661  000938  0A2E               	xorlw	46
  2662  00093A  A4D8               	btfss	status,2,c
  2663  00093C  D034               	goto	l4562
  2664                           
  2665                           ; BSR set to: 0
  2666                           ;doprnt.c: 612: flag |= 0x4000;
  2667  00093E  0100               	movlb	0	; () banked
  2668  000940  8D8D               	bsf	(sprintf@flag+1)& (0+255),6,b
  2669                           
  2670                           ;doprnt.c: 613: f++;
  2671  000942  0100               	movlb	0	; () banked
  2672  000944  4B7E               	infsnz	sprintf@f& (0+255),f,b
  2673  000946  2B7F               	incf	(sprintf@f+1)& (0+255),f,b
  2674                           
  2675                           ; BSR set to: 0
  2676                           ;doprnt.c: 620: {
  2677                           ;doprnt.c: 621: prec = 0;
  2678  000948  0E00               	movlw	0
  2679  00094A  0100               	movlb	0	; () banked
  2680  00094C  6F99               	movwf	(sprintf@prec+1)& (0+255),b
  2681  00094E  0E00               	movlw	0
  2682  000950  6F98               	movwf	sprintf@prec& (0+255),b
  2683                           
  2684                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  2685  000952  D01E               	goto	l4560
  2686  000954                     l4556:
  2687                           
  2688                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  2689  000954  C098  F00F         	movff	sprintf@prec,___wmul@multiplier
  2690  000958  C099  F010         	movff	sprintf@prec+1,___wmul@multiplier+1
  2691  00095C  0E00               	movlw	0
  2692  00095E  6E12               	movwf	___wmul@multiplicand+1,c
  2693  000960  0E0A               	movlw	10
  2694  000962  6E11               	movwf	___wmul@multiplicand,c
  2695  000964  ECC2  F01C         	call	___wmul	;wreg free
  2696  000968  C07E  FFF6         	movff	sprintf@f,tblptrl
  2697  00096C  C07F  FFF7         	movff	sprintf@f+1,tblptrh
  2698  000970                     	if	0	;tblptru may be non-zero
  2699  000970                     	endif
  2700  000970                     	if	0	;tblptru may be non-zero
  2701  000970                     	endif
  2702  000970  0008               	tblrd		*
  2703  000972  50F5               	movf	tablat,w,c
  2704  000974  260F               	addwf	?___wmul,f,c
  2705  000976  0E00               	movlw	0
  2706  000978  2210               	addwfc	?___wmul+1,f,c
  2707  00097A  0ED0               	movlw	208
  2708  00097C  240F               	addwf	?___wmul,w,c
  2709  00097E  0100               	movlb	0	; () banked
  2710  000980  6F98               	movwf	sprintf@prec& (0+255),b
  2711  000982  0EFF               	movlw	255
  2712  000984  2010               	addwfc	?___wmul+1,w,c
  2713  000986  0100               	movlb	0	; () banked
  2714  000988  6F99               	movwf	(sprintf@prec+1)& (0+255),b
  2715                           
  2716                           ; BSR set to: 0
  2717  00098A  0100               	movlb	0	; () banked
  2718  00098C  4B7E               	infsnz	sprintf@f& (0+255),f,b
  2719  00098E  2B7F               	incf	(sprintf@f+1)& (0+255),f,b
  2720  000990                     l4560:
  2721                           
  2722                           ; BSR set to: 0
  2723  000990  C07E  FFF6         	movff	sprintf@f,tblptrl
  2724  000994  C07F  FFF7         	movff	sprintf@f+1,tblptrh
  2725  000998                     	if	0	;tblptru may be non-zero
  2726  000998                     	endif
  2727  000998                     	if	0	;tblptru may be non-zero
  2728  000998                     	endif
  2729  000998  0008               	tblrd		*
  2730  00099A  50F5               	movf	tablat,w,c
  2731  00099C  ECF7  F01C         	call	_isdigit
  2732  0009A0  A0D8               	btfss	status,0,c
  2733  0009A2  D00C               	goto	l4570
  2734  0009A4  D7D7               	goto	l4556
  2735  0009A6                     l4562:
  2736                           
  2737                           ;doprnt.c: 626: prec = 0;
  2738  0009A6  0E00               	movlw	0
  2739  0009A8  0100               	movlb	0	; () banked
  2740  0009AA  6F99               	movwf	(sprintf@prec+1)& (0+255),b
  2741  0009AC  0E00               	movlw	0
  2742  0009AE  6F98               	movwf	sprintf@prec& (0+255),b
  2743                           
  2744                           ; BSR set to: 0
  2745                           ;doprnt.c: 628: flag |= 0x1000;
  2746  0009B0  0100               	movlb	0	; () banked
  2747  0009B2  898D               	bsf	(sprintf@flag+1)& (0+255),4,b
  2748                           
  2749                           ; BSR set to: 0
  2750                           ;doprnt.c: 630: }
  2751                           ;doprnt.c: 635: switch(c = *f++) {
  2752  0009B4  D003               	goto	l4570
  2753  0009B6                     l4566:
  2754                           
  2755                           ; BSR set to: 0
  2756                           ;doprnt.c: 663: flag |= 0x400;
  2757  0009B6  0100               	movlb	0	; () banked
  2758  0009B8  858D               	bsf	(sprintf@flag+1)& (0+255),2,b
  2759                           
  2760                           ;doprnt.c: 664: break;
  2761  0009BA  D013               	goto	l4572
  2762  0009BC                     l4570:
  2763  0009BC  C07E  FFF6         	movff	sprintf@f,tblptrl
  2764  0009C0  C07F  FFF7         	movff	sprintf@f+1,tblptrh
  2765  0009C4  0100               	movlb	0	; () banked
  2766  0009C6  4B7E               	infsnz	sprintf@f& (0+255),f,b
  2767  0009C8  2B7F               	incf	(sprintf@f+1)& (0+255),f,b
  2768  0009CA                     	if	0	;tblptru may be non-zero
  2769  0009CA                     	endif
  2770  0009CA                     	if	0	;tblptru may be non-zero
  2771  0009CA                     	endif
  2772  0009CA  0008               	tblrd		*
  2773  0009CC  CFF5 F09E          	movff	tablat,sprintf@c
  2774  0009D0  0100               	movlb	0	; () banked
  2775  0009D2  519E               	movf	sprintf@c& (0+255),w,b
  2776                           
  2777                           ; Switch size 1, requested type "space"
  2778                           ; Number of cases is 2, Range of values is 0 to 102
  2779                           ; switch strategies available:
  2780                           ; Name         Instructions Cycles
  2781                           ; simple_byte            7     4 (average)
  2782                           ;	Chosen strategy is simple_byte
  2783  0009D4  0A00               	xorlw	0	; case 0
  2784  0009D6  B4D8               	btfsc	status,2,c
  2785  0009D8  D3A9               	goto	l4742
  2786  0009DA  0A66               	xorlw	102	; case 102
  2787  0009DC  B4D8               	btfsc	status,2,c
  2788  0009DE  D7EB               	goto	l4566
  2789  0009E0  D396               	goto	l4740
  2790  0009E2                     l4572:
  2791                           
  2792                           ; BSR set to: 0
  2793                           ;doprnt.c: 825: if(flag & (0x700)) {
  2794  0009E2  0E07               	movlw	7
  2795  0009E4  0100               	movlb	0	; () banked
  2796  0009E6  158D               	andwf	(sprintf@flag+1)& (0+255),w,b
  2797  0009E8  B4D8               	btfsc	status,2,c
  2798  0009EA  D339               	goto	l4720
  2799                           
  2800                           ; BSR set to: 0
  2801                           ;doprnt.c: 827: if(flag & 0x1000)
  2802  0009EC  0100               	movlb	0	; () banked
  2803  0009EE  A98D               	btfss	(sprintf@flag+1)& (0+255),4,b
  2804  0009F0  D005               	goto	l4578
  2805                           
  2806                           ; BSR set to: 0
  2807                           ;doprnt.c: 829: prec = 6;
  2808  0009F2  0E00               	movlw	0
  2809  0009F4  0100               	movlb	0	; () banked
  2810  0009F6  6F99               	movwf	(sprintf@prec+1)& (0+255),b
  2811  0009F8  0E06               	movlw	6
  2812  0009FA  6F98               	movwf	sprintf@prec& (0+255),b
  2813  0009FC                     l4578:
  2814                           
  2815                           ; BSR set to: 0
  2816                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  2817  0009FC  C08A  FFD9         	movff	sprintf@ap,fsr2l
  2818  000A00  C08B  FFDA         	movff	sprintf@ap+1,fsr2h
  2819  000A04  CFDE F09A          	movff	postinc2,sprintf@fval
  2820  000A08  CFDE F09B          	movff	postinc2,sprintf@fval+1
  2821  000A0C  CFDE F09C          	movff	postinc2,sprintf@fval+2
  2822  000A10  CFDE F09D          	movff	postinc2,sprintf@fval+3
  2823                           
  2824                           ; BSR set to: 0
  2825  000A14  0E04               	movlw	4
  2826  000A16  0100               	movlb	0	; () banked
  2827  000A18  278A               	addwf	sprintf@ap& (0+255),f,b
  2828  000A1A  0E00               	movlw	0
  2829  000A1C  238B               	addwfc	(sprintf@ap+1)& (0+255),f,b
  2830                           
  2831                           ; BSR set to: 0
  2832                           ;doprnt.c: 831: if(fval < 0.0) {
  2833  000A1E  0100               	movlb	0	; () banked
  2834  000A20  AF9D               	btfss	(sprintf@fval+3)& (0+255),7,b
  2835  000A22  D015               	goto	l4588
  2836                           
  2837                           ; BSR set to: 0
  2838                           ;doprnt.c: 832: fval = -fval;
  2839  000A24  C09A  F00F         	movff	sprintf@fval,___flneg@f1
  2840  000A28  C09B  F010         	movff	sprintf@fval+1,___flneg@f1+1
  2841  000A2C  C09C  F011         	movff	sprintf@fval+2,___flneg@f1+2
  2842  000A30  C09D  F012         	movff	sprintf@fval+3,___flneg@f1+3
  2843  000A34  EC6F  F01C         	call	___flneg	;wreg free
  2844  000A38  C00F  F09A         	movff	?___flneg,sprintf@fval
  2845  000A3C  C010  F09B         	movff	?___flneg+1,sprintf@fval+1
  2846  000A40  C011  F09C         	movff	?___flneg+2,sprintf@fval+2
  2847  000A44  C012  F09D         	movff	?___flneg+3,sprintf@fval+3
  2848                           
  2849                           ;doprnt.c: 833: flag |= 0x03;
  2850  000A48  0E03               	movlw	3
  2851  000A4A  0100               	movlb	0	; () banked
  2852  000A4C  138C               	iorwf	sprintf@flag& (0+255),f,b
  2853  000A4E                     l4588:
  2854                           
  2855                           ; BSR set to: 0
  2856                           ;doprnt.c: 834: }
  2857                           ;doprnt.c: 835: exp = 0;
  2858  000A4E  0E00               	movlw	0
  2859  000A50  0100               	movlb	0	; () banked
  2860  000A52  6F93               	movwf	(sprintf@exp+1)& (0+255),b
  2861  000A54  0E00               	movlw	0
  2862  000A56  6F92               	movwf	sprintf@exp& (0+255),b
  2863                           
  2864                           ; BSR set to: 0
  2865                           ;doprnt.c: 836: if( fval!=0) {
  2866  000A58  0100               	movlb	0	; () banked
  2867  000A5A  519A               	movf	sprintf@fval& (0+255),w,b
  2868  000A5C  0100               	movlb	0	; () banked
  2869  000A5E  119B               	iorwf	(sprintf@fval+1)& (0+255),w,b
  2870  000A60  0100               	movlb	0	; () banked
  2871  000A62  119C               	iorwf	(sprintf@fval+2)& (0+255),w,b
  2872  000A64  0100               	movlb	0	; () banked
  2873  000A66  119D               	iorwf	(sprintf@fval+3)& (0+255),w,b
  2874  000A68  B4D8               	btfsc	status,2,c
  2875  000A6A  D088               	goto	l4616
  2876                           
  2877                           ; BSR set to: 0
  2878                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
  2879  000A6C  0100               	movlb	0	; () banked
  2880  000A6E  359C               	rlcf	(sprintf@fval+2)& (0+255),w,b
  2881  000A70  359D               	rlcf	(sprintf@fval+3)& (0+255),w,b
  2882  000A72  0F82               	addlw	130
  2883  000A74  0100               	movlb	0	; () banked
  2884  000A76  6F92               	movwf	sprintf@exp& (0+255),b
  2885  000A78  0100               	movlb	0	; () banked
  2886  000A7A  6B93               	clrf	(sprintf@exp+1)& (0+255),b
  2887  000A7C  0EFF               	movlw	255
  2888  000A7E  2393               	addwfc	(sprintf@exp+1)& (0+255),f,b
  2889                           
  2890                           ; BSR set to: 0
  2891                           ;doprnt.c: 838: exp--;
  2892  000A80  0100               	movlb	0	; () banked
  2893  000A82  0792               	decf	sprintf@exp& (0+255),f,b
  2894  000A84  A0D8               	btfss	status,0,c
  2895  000A86  0793               	decf	(sprintf@exp+1)& (0+255),f,b
  2896                           
  2897                           ; BSR set to: 0
  2898                           ;doprnt.c: 839: exp *= 3;
  2899  000A88  C092  F00F         	movff	sprintf@exp,___wmul@multiplier
  2900  000A8C  C093  F010         	movff	sprintf@exp+1,___wmul@multiplier+1
  2901  000A90  0E00               	movlw	0
  2902  000A92  6E12               	movwf	___wmul@multiplicand+1,c
  2903  000A94  0E03               	movlw	3
  2904  000A96  6E11               	movwf	___wmul@multiplicand,c
  2905  000A98  ECC2  F01C         	call	___wmul	;wreg free
  2906  000A9C  C00F  F092         	movff	?___wmul,sprintf@exp
  2907  000AA0  C010  F093         	movff	?___wmul+1,sprintf@exp+1
  2908                           
  2909                           ;doprnt.c: 840: exp /= 10;
  2910  000AA4  C092  F015         	movff	sprintf@exp,___awdiv@dividend
  2911  000AA8  C093  F016         	movff	sprintf@exp+1,___awdiv@dividend+1
  2912  000AAC  0E00               	movlw	0
  2913  000AAE  6E18               	movwf	___awdiv@divisor+1,c
  2914  000AB0  0E0A               	movlw	10
  2915  000AB2  6E17               	movwf	___awdiv@divisor,c
  2916  000AB4  EC01  F01A         	call	___awdiv	;wreg free
  2917  000AB8  C015  F092         	movff	?___awdiv,sprintf@exp
  2918  000ABC  C016  F093         	movff	?___awdiv+1,sprintf@exp+1
  2919                           
  2920                           ;doprnt.c: 841: if(exp < 0)
  2921  000AC0  0100               	movlb	0	; () banked
  2922  000AC2  AF93               	btfss	(sprintf@exp+1)& (0+255),7,b
  2923  000AC4  D004               	goto	l4604
  2924                           
  2925                           ; BSR set to: 0
  2926                           ;doprnt.c: 842: exp--;
  2927  000AC6  0100               	movlb	0	; () banked
  2928  000AC8  0792               	decf	sprintf@exp& (0+255),f,b
  2929  000ACA  A0D8               	btfss	status,0,c
  2930  000ACC  0793               	decf	(sprintf@exp+1)& (0+255),f,b
  2931  000ACE                     l4604:
  2932                           
  2933                           ; BSR set to: 0
  2934                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  2935  000ACE  0100               	movlb	0	; () banked
  2936  000AD0  5192               	movf	sprintf@exp& (0+255),w,b
  2937  000AD2  0800               	sublw	0
  2938  000AD4  ECF1  F00A         	call	_scale
  2939  000AD8  C036  F094         	movff	?_scale,sprintf@tmpval
  2940  000ADC  C037  F095         	movff	?_scale+1,sprintf@tmpval+1
  2941  000AE0  C038  F096         	movff	?_scale+2,sprintf@tmpval+2
  2942  000AE4  C039  F097         	movff	?_scale+3,sprintf@tmpval+3
  2943                           
  2944                           ;doprnt.c: 847: tmpval.integ *= fval;
  2945  000AE8  C094  F01D         	movff	sprintf@tmpval,___flmul@b
  2946  000AEC  C095  F01E         	movff	sprintf@tmpval+1,___flmul@b+1
  2947  000AF0  C096  F01F         	movff	sprintf@tmpval+2,___flmul@b+2
  2948  000AF4  C097  F020         	movff	sprintf@tmpval+3,___flmul@b+3
  2949  000AF8  C09A  F021         	movff	sprintf@fval,___flmul@a
  2950  000AFC  C09B  F022         	movff	sprintf@fval+1,___flmul@a+1
  2951  000B00  C09C  F023         	movff	sprintf@fval+2,___flmul@a+2
  2952  000B04  C09D  F024         	movff	sprintf@fval+3,___flmul@a+3
  2953  000B08  ECFD  F00C         	call	___flmul	;wreg free
  2954  000B0C  C01D  F094         	movff	?___flmul,sprintf@tmpval
  2955  000B10  C01E  F095         	movff	?___flmul+1,sprintf@tmpval+1
  2956  000B14  C01F  F096         	movff	?___flmul+2,sprintf@tmpval+2
  2957  000B18  C020  F097         	movff	?___flmul+3,sprintf@tmpval+3
  2958                           
  2959                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  2960  000B1C  C094  F00F         	movff	sprintf@tmpval,___flge@ff1
  2961  000B20  C095  F010         	movff	sprintf@tmpval+1,___flge@ff1+1
  2962  000B24  C096  F011         	movff	sprintf@tmpval+2,___flge@ff1+2
  2963  000B28  C097  F012         	movff	sprintf@tmpval+3,___flge@ff1+3
  2964  000B2C  0E00               	movlw	0
  2965  000B2E  6E13               	movwf	___flge@ff2,c
  2966  000B30  0E00               	movlw	0
  2967  000B32  6E14               	movwf	___flge@ff2+1,c
  2968  000B34  0E80               	movlw	128
  2969  000B36  6E15               	movwf	___flge@ff2+2,c
  2970  000B38  0E3F               	movlw	63
  2971  000B3A  6E16               	movwf	___flge@ff2+3,c
  2972  000B3C  EC55  F017         	call	___flge	;wreg free
  2973  000B40  B0D8               	btfsc	status,0,c
  2974  000B42  D005               	goto	l4612
  2975                           
  2976                           ;doprnt.c: 849: exp--;
  2977  000B44  0100               	movlb	0	; () banked
  2978  000B46  0792               	decf	sprintf@exp& (0+255),f,b
  2979  000B48  A0D8               	btfss	status,0,c
  2980  000B4A  0793               	decf	(sprintf@exp+1)& (0+255),f,b
  2981  000B4C  D017               	goto	l4616
  2982  000B4E                     l4612:
  2983                           
  2984                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  2985  000B4E  C094  F00F         	movff	sprintf@tmpval,___flge@ff1
  2986  000B52  C095  F010         	movff	sprintf@tmpval+1,___flge@ff1+1
  2987  000B56  C096  F011         	movff	sprintf@tmpval+2,___flge@ff1+2
  2988  000B5A  C097  F012         	movff	sprintf@tmpval+3,___flge@ff1+3
  2989  000B5E  0E00               	movlw	0
  2990  000B60  6E13               	movwf	___flge@ff2,c
  2991  000B62  0E00               	movlw	0
  2992  000B64  6E14               	movwf	___flge@ff2+1,c
  2993  000B66  0E20               	movlw	32
  2994  000B68  6E15               	movwf	___flge@ff2+2,c
  2995  000B6A  0E41               	movlw	65
  2996  000B6C  6E16               	movwf	___flge@ff2+3,c
  2997  000B6E  EC55  F017         	call	___flge	;wreg free
  2998  000B72  A0D8               	btfss	status,0,c
  2999  000B74  D003               	goto	l4616
  3000                           
  3001                           ;doprnt.c: 851: exp++;
  3002  000B76  0100               	movlb	0	; () banked
  3003  000B78  4B92               	infsnz	sprintf@exp& (0+255),f,b
  3004  000B7A  2B93               	incf	(sprintf@exp+1)& (0+255),f,b
  3005  000B7C                     l4616:
  3006                           
  3007                           ;doprnt.c: 852: }
  3008                           ;doprnt.c: 1112: if(prec <= 12)
  3009  000B7C  0100               	movlb	0	; () banked
  3010  000B7E  BF99               	btfsc	(sprintf@prec+1)& (0+255),7,b
  3011  000B80  D008               	goto	l4618
  3012  000B82  0100               	movlb	0	; () banked
  3013  000B84  5199               	movf	(sprintf@prec+1)& (0+255),w,b
  3014  000B86  E123               	bnz	l4620
  3015  000B88  0E0D               	movlw	13
  3016  000B8A  0100               	movlb	0	; () banked
  3017  000B8C  5D98               	subwf	sprintf@prec& (0+255),w,b
  3018  000B8E  B0D8               	btfsc	status,0,c
  3019  000B90  D01E               	goto	l4620
  3020  000B92                     l4618:
  3021                           
  3022                           ; BSR set to: 0
  3023                           ;doprnt.c: 1113: fval += fround(prec);
  3024  000B92  C09A  F060         	movff	sprintf@fval,___fladd@b
  3025  000B96  C09B  F061         	movff	sprintf@fval+1,___fladd@b+1
  3026  000B9A  C09C  F062         	movff	sprintf@fval+2,___fladd@b+2
  3027  000B9E  C09D  F063         	movff	sprintf@fval+3,___fladd@b+3
  3028  000BA2  0100               	movlb	0	; () banked
  3029  000BA4  5198               	movf	sprintf@prec& (0+255),w,b
  3030  000BA6  ECC9  F011         	call	_fround
  3031  000BAA  C036  F064         	movff	?_fround,___fladd@a
  3032  000BAE  C037  F065         	movff	?_fround+1,___fladd@a+1
  3033  000BB2  C038  F066         	movff	?_fround+2,___fladd@a+2
  3034  000BB6  C039  F067         	movff	?_fround+3,___fladd@a+3
  3035  000BBA  EC9D  F008         	call	___fladd	;wreg free
  3036  000BBE  C060  F09A         	movff	?___fladd,sprintf@fval
  3037  000BC2  C061  F09B         	movff	?___fladd+1,sprintf@fval+1
  3038  000BC6  C062  F09C         	movff	?___fladd+2,sprintf@fval+2
  3039  000BCA  C063  F09D         	movff	?___fladd+3,sprintf@fval+3
  3040  000BCE                     l4620:
  3041                           
  3042                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  3043  000BCE  0100               	movlb	0	; () banked
  3044  000BD0  BF93               	btfsc	(sprintf@exp+1)& (0+255),7,b
  3045  000BD2  D008               	goto	l4622
  3046  000BD4  0100               	movlb	0	; () banked
  3047  000BD6  5193               	movf	(sprintf@exp+1)& (0+255),w,b
  3048  000BD8  E12A               	bnz	l4628
  3049  000BDA  0E0A               	movlw	10
  3050  000BDC  0100               	movlb	0	; () banked
  3051  000BDE  5D92               	subwf	sprintf@exp& (0+255),w,b
  3052  000BE0  B0D8               	btfsc	status,0,c
  3053  000BE2  D025               	goto	l4628
  3054  000BE4                     l4622:
  3055                           
  3056                           ; BSR set to: 0
  3057  000BE4  0100               	movlb	0	; () banked
  3058  000BE6  519A               	movf	sprintf@fval& (0+255),w,b
  3059  000BE8  0100               	movlb	0	; () banked
  3060  000BEA  119B               	iorwf	(sprintf@fval+1)& (0+255),w,b
  3061  000BEC  0100               	movlb	0	; () banked
  3062  000BEE  119C               	iorwf	(sprintf@fval+2)& (0+255),w,b
  3063  000BF0  0100               	movlb	0	; () banked
  3064  000BF2  119D               	iorwf	(sprintf@fval+3)& (0+255),w,b
  3065  000BF4  B4D8               	btfsc	status,2,c
  3066  000BF6  D067               	goto	l4642
  3067                           
  3068                           ; BSR set to: 0
  3069  000BF8  C09A  F03F         	movff	sprintf@fval,___fltol@f1
  3070  000BFC  C09B  F040         	movff	sprintf@fval+1,___fltol@f1+1
  3071  000C00  C09C  F041         	movff	sprintf@fval+2,___fltol@f1+2
  3072  000C04  C09D  F042         	movff	sprintf@fval+3,___fltol@f1+3
  3073  000C08  EC72  F018         	call	___fltol	;wreg free
  3074  000C0C  503F               	movf	?___fltol,w,c
  3075  000C0E  1040               	iorwf	?___fltol+1,w,c
  3076  000C10  1041               	iorwf	?___fltol+2,w,c
  3077  000C12  1042               	iorwf	?___fltol+3,w,c
  3078  000C14  A4D8               	btfss	status,2,c
  3079  000C16  D057               	goto	l4642
  3080  000C18  0100               	movlb	0	; () banked
  3081  000C1A  BF93               	btfsc	(sprintf@exp+1)& (0+255),7,b
  3082  000C1C  D054               	goto	l4642
  3083  000C1E  0100               	movlb	0	; () banked
  3084  000C20  5193               	movf	(sprintf@exp+1)& (0+255),w,b
  3085  000C22  E105               	bnz	l4628
  3086  000C24  0E02               	movlw	2
  3087  000C26  0100               	movlb	0	; () banked
  3088  000C28  5D92               	subwf	sprintf@exp& (0+255),w,b
  3089  000C2A  A0D8               	btfss	status,0,c
  3090  000C2C  D04C               	goto	l4642
  3091  000C2E                     l4628:
  3092                           
  3093                           ; BSR set to: 0
  3094                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  3095  000C2E  C094  F00F         	movff	sprintf@tmpval,___flge@ff1
  3096  000C32  C095  F010         	movff	sprintf@tmpval+1,___flge@ff1+1
  3097  000C36  C096  F011         	movff	sprintf@tmpval+2,___flge@ff1+2
  3098  000C3A  C097  F012         	movff	sprintf@tmpval+3,___flge@ff1+3
  3099  000C3E  0E5F               	movlw	95
  3100  000C40  6E13               	movwf	___flge@ff2,c
  3101  000C42  0E70               	movlw	112
  3102  000C44  6E14               	movwf	___flge@ff2+1,c
  3103  000C46  0E89               	movlw	137
  3104  000C48  6E15               	movwf	___flge@ff2+2,c
  3105  000C4A  0E40               	movlw	64
  3106  000C4C  6E16               	movwf	___flge@ff2+3,c
  3107  000C4E  EC55  F017         	call	___flge	;wreg free
  3108  000C52  B0D8               	btfsc	status,0,c
  3109  000C54  D003               	goto	l4632
  3110                           
  3111                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  3112  000C56  0100               	movlb	0	; () banked
  3113  000C58  0EF7               	movlw	247
  3114  000C5A  D002               	goto	L2
  3115  000C5C                     l4632:
  3116                           
  3117                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  3118  000C5C  0100               	movlb	0	; () banked
  3119  000C5E  0EF8               	movlw	248
  3120  000C60                     L2:
  3121  000C60  2792               	addwf	sprintf@exp& (0+255),f,b
  3122  000C62  0EFF               	movlw	255
  3123  000C64  2393               	addwfc	(sprintf@exp+1)& (0+255),f,b
  3124                           
  3125                           ; BSR set to: 0
  3126                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  3127                           
  3128                           ; BSR set to: 0
  3129  000C66  0100               	movlb	0	; () banked
  3130  000C68  5192               	movf	sprintf@exp& (0+255),w,b
  3131  000C6A  ECF1  F00A         	call	_scale
  3132  000C6E  C036  F094         	movff	?_scale,sprintf@tmpval
  3133  000C72  C037  F095         	movff	?_scale+1,sprintf@tmpval+1
  3134  000C76  C038  F096         	movff	?_scale+2,sprintf@tmpval+2
  3135  000C7A  C039  F097         	movff	?_scale+3,sprintf@tmpval+3
  3136  000C7E  C09A  F00F         	movff	sprintf@fval,__div_to_l_@f1
  3137  000C82  C09B  F010         	movff	sprintf@fval+1,__div_to_l_@f1+1
  3138  000C86  C09C  F011         	movff	sprintf@fval+2,__div_to_l_@f1+2
  3139  000C8A  C09D  F012         	movff	sprintf@fval+3,__div_to_l_@f1+3
  3140  000C8E  C094  F013         	movff	sprintf@tmpval,__div_to_l_@f2
  3141  000C92  C095  F014         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
  3142  000C96  C096  F015         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
  3143  000C9A  C097  F016         	movff	sprintf@tmpval+3,__div_to_l_@f2+3
  3144  000C9E  ECC1  F016         	call	__div_to_l_	;wreg free
  3145  000CA2  C00F  F08E         	movff	?__div_to_l_,sprintf@val
  3146  000CA6  C010  F08F         	movff	?__div_to_l_+1,sprintf@val+1
  3147  000CAA  C011  F090         	movff	?__div_to_l_+2,sprintf@val+2
  3148  000CAE  C012  F091         	movff	?__div_to_l_+3,sprintf@val+3
  3149                           
  3150                           ;doprnt.c: 1129: fval = 0.0;
  3151  000CB2  0E00               	movlw	0
  3152  000CB4  0100               	movlb	0	; () banked
  3153  000CB6  6F9A               	movwf	sprintf@fval& (0+255),b
  3154  000CB8  0E00               	movlw	0
  3155  000CBA  6F9B               	movwf	(sprintf@fval+1)& (0+255),b
  3156  000CBC  0E00               	movlw	0
  3157  000CBE  6F9C               	movwf	(sprintf@fval+2)& (0+255),b
  3158  000CC0  0E00               	movlw	0
  3159  000CC2  6F9D               	movwf	(sprintf@fval+3)& (0+255),b
  3160                           
  3161                           ;doprnt.c: 1130: } else {
  3162  000CC4  D03C               	goto	l4646
  3163  000CC6                     l4642:
  3164                           
  3165                           ;doprnt.c: 1131: val = (unsigned long)fval;
  3166  000CC6  C09A  F03F         	movff	sprintf@fval,___fltol@f1
  3167  000CCA  C09B  F040         	movff	sprintf@fval+1,___fltol@f1+1
  3168  000CCE  C09C  F041         	movff	sprintf@fval+2,___fltol@f1+2
  3169  000CD2  C09D  F042         	movff	sprintf@fval+3,___fltol@f1+3
  3170  000CD6  EC72  F018         	call	___fltol	;wreg free
  3171  000CDA  C03F  F08E         	movff	?___fltol,sprintf@val
  3172  000CDE  C040  F08F         	movff	?___fltol+1,sprintf@val+1
  3173  000CE2  C041  F090         	movff	?___fltol+2,sprintf@val+2
  3174  000CE6  C042  F091         	movff	?___fltol+3,sprintf@val+3
  3175                           
  3176                           ;doprnt.c: 1132: fval -= (double)val;
  3177  000CEA  C09A  F074         	movff	sprintf@fval,___flsub@b
  3178  000CEE  C09B  F075         	movff	sprintf@fval+1,___flsub@b+1
  3179  000CF2  C09C  F076         	movff	sprintf@fval+2,___flsub@b+2
  3180  000CF6  C09D  F077         	movff	sprintf@fval+3,___flsub@b+3
  3181  000CFA  C08E  F00F         	movff	sprintf@val,___xxtofl@val
  3182  000CFE  C08F  F010         	movff	sprintf@val+1,___xxtofl@val+1
  3183  000D02  C090  F011         	movff	sprintf@val+2,___xxtofl@val+2
  3184  000D06  C091  F012         	movff	sprintf@val+3,___xxtofl@val+3
  3185  000D0A  0E00               	movlw	0
  3186  000D0C  ECE1  F014         	call	___xxtofl
  3187  000D10  C00F  F078         	movff	?___xxtofl,___flsub@a
  3188  000D14  C010  F079         	movff	?___xxtofl+1,___flsub@a+1
  3189  000D18  C011  F07A         	movff	?___xxtofl+2,___flsub@a+2
  3190  000D1C  C012  F07B         	movff	?___xxtofl+3,___flsub@a+3
  3191  000D20  ECD8  F01B         	call	___flsub	;wreg free
  3192  000D24  C074  F09A         	movff	?___flsub,sprintf@fval
  3193  000D28  C075  F09B         	movff	?___flsub+1,sprintf@fval+1
  3194  000D2C  C076  F09C         	movff	?___flsub+2,sprintf@fval+2
  3195  000D30  C077  F09D         	movff	?___flsub+3,sprintf@fval+3
  3196                           
  3197                           ;doprnt.c: 1133: exp = 0;
  3198  000D34  0E00               	movlw	0
  3199  000D36  0100               	movlb	0	; () banked
  3200  000D38  6F93               	movwf	(sprintf@exp+1)& (0+255),b
  3201  000D3A  0E00               	movlw	0
  3202  000D3C  6F92               	movwf	sprintf@exp& (0+255),b
  3203  000D3E                     l4646:
  3204                           
  3205                           ; BSR set to: 0
  3206                           ;doprnt.c: 1134: }
  3207                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  3208  000D3E  0E01               	movlw	1
  3209  000D40  0100               	movlb	0	; () banked
  3210  000D42  6F9E               	movwf	sprintf@c& (0+255),b
  3211  000D44                     l4648:
  3212                           
  3213                           ; BSR set to: 0
  3214  000D44  0E0A               	movlw	10
  3215  000D46  0100               	movlb	0	; () banked
  3216  000D48  199E               	xorwf	sprintf@c& (0+255),w,b
  3217  000D4A  B4D8               	btfsc	status,2,c
  3218  000D4C  D01E               	goto	l4660
  3219                           
  3220                           ; BSR set to: 0
  3221                           ;doprnt.c: 1137: if(val < dpowers[c])
  3222                           
  3223                           ; BSR set to: 0
  3224                           
  3225                           ; BSR set to: 0
  3226  000D4E  0100               	movlb	0	; () banked
  3227  000D50  519E               	movf	sprintf@c& (0+255),w,b
  3228  000D52  0D04               	mullw	4
  3229  000D54  0E69               	movlw	low _dpowers
  3230  000D56  24F3               	addwf	prodl,w,c
  3231  000D58  6EF6               	movwf	tblptrl,c
  3232  000D5A  0E08               	movlw	high _dpowers
  3233  000D5C  20F4               	addwfc	prodh,w,c
  3234  000D5E  6EF7               	movwf	tblptrh,c
  3235  000D60                     	if	0	;There are less than 3 active tblptr bytes
  3236  000D60                     	endif
  3237  000D60  0009               	tblrd		*+
  3238  000D62  50F5               	movf	tablat,w,c
  3239  000D64  0100               	movlb	0	; () banked
  3240  000D66  5D8E               	subwf	sprintf@val& (0+255),w,b
  3241  000D68  0009               	tblrd		*+
  3242  000D6A  50F5               	movf	tablat,w,c
  3243  000D6C  0100               	movlb	0	; () banked
  3244  000D6E  598F               	subwfb	(sprintf@val+1)& (0+255),w,b
  3245  000D70  0009               	tblrd		*+
  3246  000D72  50F5               	movf	tablat,w,c
  3247  000D74  0100               	movlb	0	; () banked
  3248  000D76  5990               	subwfb	(sprintf@val+2)& (0+255),w,b
  3249  000D78  0009               	tblrd		*+
  3250  000D7A  50F5               	movf	tablat,w,c
  3251  000D7C  0100               	movlb	0	; () banked
  3252  000D7E  5991               	subwfb	(sprintf@val+3)& (0+255),w,b
  3253  000D80  A0D8               	btfss	status,0,c
  3254  000D82  D003               	goto	l4660
  3255                           
  3256                           ; BSR set to: 0
  3257                           
  3258                           ; BSR set to: 0
  3259                           
  3260                           ; BSR set to: 0
  3261                           ;doprnt.c: 1138: break;
  3262  000D84  0100               	movlb	0	; () banked
  3263  000D86  2B9E               	incf	sprintf@c& (0+255),f,b
  3264  000D88  D7DD               	goto	l4648
  3265  000D8A                     l4660:
  3266                           
  3267                           ; BSR set to: 0
  3268                           ;doprnt.c: 1175: {
  3269                           ;doprnt.c: 1188: if(flag & 0x03)
  3270  000D8A  0E03               	movlw	3
  3271  000D8C  0100               	movlb	0	; () banked
  3272  000D8E  158C               	andwf	sprintf@flag& (0+255),w,b
  3273  000D90  0100               	movlb	0	; () banked
  3274  000D92  6F84               	movwf	??_sprintf& (0+255),b
  3275  000D94  0E00               	movlw	0
  3276  000D96  0100               	movlb	0	; () banked
  3277  000D98  158D               	andwf	(sprintf@flag+1)& (0+255),w,b
  3278  000D9A  0100               	movlb	0	; () banked
  3279  000D9C  6F85               	movwf	(??_sprintf+1)& (0+255),b
  3280  000D9E  0100               	movlb	0	; () banked
  3281  000DA0  5184               	movf	??_sprintf& (0+255),w,b
  3282  000DA2  0100               	movlb	0	; () banked
  3283  000DA4  1185               	iorwf	(??_sprintf+1)& (0+255),w,b
  3284  000DA6  B4D8               	btfsc	status,2,c
  3285  000DA8  D054               	goto	l4674
  3286                           
  3287                           ; BSR set to: 0
  3288                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  3289  000DAA  C07C  FFD9         	movff	sprintf@sp,fsr2l
  3290  000DAE  C07D  FFDA         	movff	sprintf@sp+1,fsr2h
  3291  000DB2  0E2D               	movlw	45
  3292  000DB4  D04C               	goto	L3
  3293  000DB6                     l4664:
  3294                           
  3295                           ; BSR set to: 0
  3296  000DB6  0100               	movlb	0	; () banked
  3297  000DB8  4B7C               	infsnz	sprintf@sp& (0+255),f,b
  3298  000DBA  2B7D               	incf	(sprintf@sp+1)& (0+255),f,b
  3299                           
  3300                           ; BSR set to: 0
  3301                           ;doprnt.c: 1195: }
  3302                           ;doprnt.c: 1196: while(c--) {
  3303  000DBC  D04A               	goto	l4674
  3304  000DBE                     l4666:
  3305                           
  3306                           ; BSR set to: 0
  3307                           ;doprnt.c: 1200: {
  3308                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  3309  000DBE  C08E  F00F         	movff	sprintf@val,___lldiv@dividend
  3310  000DC2  C08F  F010         	movff	sprintf@val+1,___lldiv@dividend+1
  3311  000DC6  C090  F011         	movff	sprintf@val+2,___lldiv@dividend+2
  3312  000DCA  C091  F012         	movff	sprintf@val+3,___lldiv@dividend+3
  3313  000DCE  0100               	movlb	0	; () banked
  3314  000DD0  519E               	movf	sprintf@c& (0+255),w,b
  3315  000DD2  0D04               	mullw	4
  3316  000DD4  0E69               	movlw	low _dpowers
  3317  000DD6  24F3               	addwf	prodl,w,c
  3318  000DD8  6EF6               	movwf	tblptrl,c
  3319  000DDA  0E08               	movlw	high _dpowers
  3320  000DDC  20F4               	addwfc	prodh,w,c
  3321  000DDE  6EF7               	movwf	tblptrh,c
  3322  000DE0                     	if	0	;There are less than 3 active tblptr bytes
  3323  000DE0                     	endif
  3324  000DE0  0009               	tblrd		*+
  3325  000DE2  CFF5 F013          	movff	tablat,___lldiv@divisor
  3326  000DE6  0009               	tblrd		*+
  3327  000DE8  CFF5 F014          	movff	tablat,___lldiv@divisor+1
  3328  000DEC  0009               	tblrd		*+
  3329  000DEE  CFF5 F015          	movff	tablat,___lldiv@divisor+2
  3330  000DF2  000A               	tblrd		*-
  3331  000DF4  CFF5 F016          	movff	tablat,___lldiv@divisor+3
  3332  000DF8  EC43  F01A         	call	___lldiv	;wreg free
  3333  000DFC  C00F  F094         	movff	?___lldiv,sprintf@tmpval
  3334  000E00  C010  F095         	movff	?___lldiv+1,sprintf@tmpval+1
  3335  000E04  C011  F096         	movff	?___lldiv+2,sprintf@tmpval+2
  3336  000E08  C012  F097         	movff	?___lldiv+3,sprintf@tmpval+3
  3337                           
  3338                           ;doprnt.c: 1202: tmpval.vd %= 10;
  3339  000E0C  C094  F00F         	movff	sprintf@tmpval,___llmod@dividend
  3340  000E10  C095  F010         	movff	sprintf@tmpval+1,___llmod@dividend+1
  3341  000E14  C096  F011         	movff	sprintf@tmpval+2,___llmod@dividend+2
  3342  000E18  C097  F012         	movff	sprintf@tmpval+3,___llmod@dividend+3
  3343  000E1C  0E0A               	movlw	10
  3344  000E1E  6E13               	movwf	___llmod@divisor,c
  3345  000E20  0E00               	movlw	0
  3346  000E22  6E14               	movwf	___llmod@divisor+1,c
  3347  000E24  0E00               	movlw	0
  3348  000E26  6E15               	movwf	___llmod@divisor+2,c
  3349  000E28  0E00               	movlw	0
  3350  000E2A  6E16               	movwf	___llmod@divisor+3,c
  3351  000E2C  ECF4  F01A         	call	___llmod	;wreg free
  3352  000E30  C00F  F094         	movff	?___llmod,sprintf@tmpval
  3353  000E34  C010  F095         	movff	?___llmod+1,sprintf@tmpval+1
  3354  000E38  C011  F096         	movff	?___llmod+2,sprintf@tmpval+2
  3355  000E3C  C012  F097         	movff	?___llmod+3,sprintf@tmpval+3
  3356                           
  3357                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  3358  000E40  0100               	movlb	0	; () banked
  3359  000E42  5194               	movf	sprintf@tmpval& (0+255),w,b
  3360  000E44  0F30               	addlw	48
  3361  000E46  C07C  FFD9         	movff	sprintf@sp,fsr2l
  3362  000E4A  C07D  FFDA         	movff	sprintf@sp+1,fsr2h
  3363  000E4E                     L3:
  3364  000E4E  6EDF               	movwf	indf2,c
  3365  000E50  D7B2               	goto	l4664
  3366  000E52                     l4674:
  3367                           
  3368                           ; BSR set to: 0
  3369  000E52  0100               	movlb	0	; () banked
  3370  000E54  079E               	decf	sprintf@c& (0+255),f,b
  3371  000E56  0100               	movlb	0	; () banked
  3372  000E58  299E               	incf	sprintf@c& (0+255),w,b
  3373  000E5A  B4D8               	btfsc	status,2,c
  3374  000E5C  D00E               	goto	l4682
  3375  000E5E  D7AF               	goto	l4666
  3376  000E60                     l4676:
  3377                           
  3378                           ; BSR set to: 0
  3379                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  3380  000E60  C07C  FFD9         	movff	sprintf@sp,fsr2l
  3381  000E64  C07D  FFDA         	movff	sprintf@sp+1,fsr2h
  3382  000E68  0E30               	movlw	48
  3383  000E6A  6EDF               	movwf	indf2,c
  3384                           
  3385                           ; BSR set to: 0
  3386  000E6C  0100               	movlb	0	; () banked
  3387  000E6E  4B7C               	infsnz	sprintf@sp& (0+255),f,b
  3388  000E70  2B7D               	incf	(sprintf@sp+1)& (0+255),f,b
  3389                           
  3390                           ; BSR set to: 0
  3391                           ;doprnt.c: 1209: exp--;
  3392  000E72  0100               	movlb	0	; () banked
  3393  000E74  0792               	decf	sprintf@exp& (0+255),f,b
  3394  000E76  A0D8               	btfss	status,0,c
  3395  000E78  0793               	decf	(sprintf@exp+1)& (0+255),f,b
  3396  000E7A                     l4682:
  3397                           
  3398                           ; BSR set to: 0
  3399  000E7A  0100               	movlb	0	; () banked
  3400  000E7C  BF93               	btfsc	(sprintf@exp+1)& (0+255),7,b
  3401  000E7E  D007               	goto	l4684
  3402  000E80  0100               	movlb	0	; () banked
  3403  000E82  5193               	movf	(sprintf@exp+1)& (0+255),w,b
  3404  000E84  E1ED               	bnz	l4676
  3405  000E86  0100               	movlb	0	; () banked
  3406  000E88  0592               	decf	sprintf@exp& (0+255),w,b
  3407  000E8A  B0D8               	btfsc	status,0,c
  3408  000E8C  D7E9               	goto	l4676
  3409  000E8E                     l4684:
  3410                           
  3411                           ; BSR set to: 0
  3412                           ;doprnt.c: 1210: }
  3413                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3414  000E8E  0100               	movlb	0	; () banked
  3415  000E90  BF99               	btfsc	(sprintf@prec+1)& (0+255),7,b
  3416  000E92  D00C               	goto	l290
  3417  000E94  0100               	movlb	0	; () banked
  3418  000E96  5199               	movf	(sprintf@prec+1)& (0+255),w,b
  3419  000E98  E105               	bnz	u5320
  3420  000E9A  0E09               	movlw	9
  3421  000E9C  0100               	movlb	0	; () banked
  3422  000E9E  5D98               	subwf	sprintf@prec& (0+255),w,b
  3423  000EA0  A0D8               	btfss	status,0,c
  3424  000EA2  D004               	goto	l290
  3425  000EA4                     u5320:
  3426                           
  3427                           ; BSR set to: 0
  3428                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  3429  000EA4  0E08               	movlw	8
  3430  000EA6  0100               	movlb	0	; () banked
  3431  000EA8  6F9E               	movwf	sprintf@c& (0+255),b
  3432  000EAA  D002               	goto	l4688
  3433  000EAC                     l290:
  3434                           
  3435                           ; BSR set to: 0
  3436                           ;doprnt.c: 1213: else
  3437                           ;doprnt.c: 1214: c = prec;
  3438  000EAC  C098  F09E         	movff	sprintf@prec,sprintf@c
  3439  000EB0                     l4688:
  3440                           
  3441                           ; BSR set to: 0
  3442                           ;doprnt.c: 1215: prec -= c;
  3443  000EB0  0100               	movlb	0	; () banked
  3444  000EB2  519E               	movf	sprintf@c& (0+255),w,b
  3445  000EB4  0100               	movlb	0	; () banked
  3446  000EB6  5F98               	subwf	sprintf@prec& (0+255),f,b
  3447  000EB8  0E00               	movlw	0
  3448  000EBA  0100               	movlb	0	; () banked
  3449  000EBC  BF9E               	btfsc	sprintf@c& (0+255),7,b
  3450  000EBE  0EFF               	movlw	255
  3451  000EC0  0100               	movlb	0	; () banked
  3452  000EC2  5B99               	subwfb	(sprintf@prec+1)& (0+255),f,b
  3453                           
  3454                           ; BSR set to: 0
  3455                           ;doprnt.c: 1219: if(c)
  3456  000EC4  0100               	movlb	0	; () banked
  3457  000EC6  519E               	movf	sprintf@c& (0+255),w,b
  3458  000EC8  0100               	movlb	0	; () banked
  3459  000ECA  B4D8               	btfsc	status,2,c
  3460  000ECC  D009               	goto	l4696
  3461                           
  3462                           ; BSR set to: 0
  3463                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  3464  000ECE  C07C  FFD9         	movff	sprintf@sp,fsr2l
  3465  000ED2  C07D  FFDA         	movff	sprintf@sp+1,fsr2h
  3466  000ED6  0E2E               	movlw	46
  3467  000ED8  6EDF               	movwf	indf2,c
  3468                           
  3469                           ; BSR set to: 0
  3470  000EDA  0100               	movlb	0	; () banked
  3471  000EDC  4B7C               	infsnz	sprintf@sp& (0+255),f,b
  3472  000EDE  2B7D               	incf	(sprintf@sp+1)& (0+255),f,b
  3473  000EE0                     l4696:
  3474                           
  3475                           ; BSR set to: 0
  3476                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  3477  000EE0  0100               	movlb	0	; () banked
  3478  000EE2  519E               	movf	sprintf@c& (0+255),w,b
  3479  000EE4  ECF1  F00A         	call	_scale
  3480  000EE8  C036  F086         	movff	?_scale,_sprintf$1356
  3481  000EEC  C037  F087         	movff	?_scale+1,_sprintf$1356+1
  3482  000EF0  C038  F088         	movff	?_scale+2,_sprintf$1356+2
  3483  000EF4  C039  F089         	movff	?_scale+3,_sprintf$1356+3
  3484                           
  3485                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  3486  000EF8  C09A  F021         	movff	sprintf@fval,___flmul@a
  3487  000EFC  C09B  F022         	movff	sprintf@fval+1,___flmul@a+1
  3488  000F00  C09C  F023         	movff	sprintf@fval+2,___flmul@a+2
  3489  000F04  C09D  F024         	movff	sprintf@fval+3,___flmul@a+3
  3490  000F08  C086  F01D         	movff	_sprintf$1356,___flmul@b
  3491  000F0C  C087  F01E         	movff	_sprintf$1356+1,___flmul@b+1
  3492  000F10  C088  F01F         	movff	_sprintf$1356+2,___flmul@b+2
  3493  000F14  C089  F020         	movff	_sprintf$1356+3,___flmul@b+3
  3494  000F18  ECFD  F00C         	call	___flmul	;wreg free
  3495  000F1C  C01D  F03F         	movff	?___flmul,___fltol@f1
  3496  000F20  C01E  F040         	movff	?___flmul+1,___fltol@f1+1
  3497  000F24  C01F  F041         	movff	?___flmul+2,___fltol@f1+2
  3498  000F28  C020  F042         	movff	?___flmul+3,___fltol@f1+3
  3499  000F2C  EC72  F018         	call	___fltol	;wreg free
  3500  000F30  C03F  F08E         	movff	?___fltol,sprintf@val
  3501  000F34  C040  F08F         	movff	?___fltol+1,sprintf@val+1
  3502  000F38  C041  F090         	movff	?___fltol+2,sprintf@val+2
  3503  000F3C  C042  F091         	movff	?___fltol+3,sprintf@val+3
  3504                           
  3505                           ;doprnt.c: 1228: while(c--) {
  3506  000F40  D073               	goto	l4710
  3507  000F42                     l4700:
  3508                           
  3509                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  3510  000F42  C08E  F00F         	movff	sprintf@val,___lldiv@dividend
  3511  000F46  C08F  F010         	movff	sprintf@val+1,___lldiv@dividend+1
  3512  000F4A  C090  F011         	movff	sprintf@val+2,___lldiv@dividend+2
  3513  000F4E  C091  F012         	movff	sprintf@val+3,___lldiv@dividend+3
  3514  000F52  0100               	movlb	0	; () banked
  3515  000F54  519E               	movf	sprintf@c& (0+255),w,b
  3516  000F56  0D04               	mullw	4
  3517  000F58  0E69               	movlw	low _dpowers
  3518  000F5A  24F3               	addwf	prodl,w,c
  3519  000F5C  6EF6               	movwf	tblptrl,c
  3520  000F5E  0E08               	movlw	high _dpowers
  3521  000F60  20F4               	addwfc	prodh,w,c
  3522  000F62  6EF7               	movwf	tblptrh,c
  3523  000F64                     	if	0	;There are less than 3 active tblptr bytes
  3524  000F64                     	endif
  3525  000F64  0009               	tblrd		*+
  3526  000F66  CFF5 F013          	movff	tablat,___lldiv@divisor
  3527  000F6A  0009               	tblrd		*+
  3528  000F6C  CFF5 F014          	movff	tablat,___lldiv@divisor+1
  3529  000F70  0009               	tblrd		*+
  3530  000F72  CFF5 F015          	movff	tablat,___lldiv@divisor+2
  3531  000F76  000A               	tblrd		*-
  3532  000F78  CFF5 F016          	movff	tablat,___lldiv@divisor+3
  3533  000F7C  EC43  F01A         	call	___lldiv	;wreg free
  3534  000F80  C00F  F094         	movff	?___lldiv,sprintf@tmpval
  3535  000F84  C010  F095         	movff	?___lldiv+1,sprintf@tmpval+1
  3536  000F88  C011  F096         	movff	?___lldiv+2,sprintf@tmpval+2
  3537  000F8C  C012  F097         	movff	?___lldiv+3,sprintf@tmpval+3
  3538                           
  3539                           ;doprnt.c: 1230: tmpval.vd %= 10;
  3540  000F90  C094  F00F         	movff	sprintf@tmpval,___llmod@dividend
  3541  000F94  C095  F010         	movff	sprintf@tmpval+1,___llmod@dividend+1
  3542  000F98  C096  F011         	movff	sprintf@tmpval+2,___llmod@dividend+2
  3543  000F9C  C097  F012         	movff	sprintf@tmpval+3,___llmod@dividend+3
  3544  000FA0  0E0A               	movlw	10
  3545  000FA2  6E13               	movwf	___llmod@divisor,c
  3546  000FA4  0E00               	movlw	0
  3547  000FA6  6E14               	movwf	___llmod@divisor+1,c
  3548  000FA8  0E00               	movlw	0
  3549  000FAA  6E15               	movwf	___llmod@divisor+2,c
  3550  000FAC  0E00               	movlw	0
  3551  000FAE  6E16               	movwf	___llmod@divisor+3,c
  3552  000FB0  ECF4  F01A         	call	___llmod	;wreg free
  3553  000FB4  C00F  F094         	movff	?___llmod,sprintf@tmpval
  3554  000FB8  C010  F095         	movff	?___llmod+1,sprintf@tmpval+1
  3555  000FBC  C011  F096         	movff	?___llmod+2,sprintf@tmpval+2
  3556  000FC0  C012  F097         	movff	?___llmod+3,sprintf@tmpval+3
  3557                           
  3558                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  3559  000FC4  0100               	movlb	0	; () banked
  3560  000FC6  5194               	movf	sprintf@tmpval& (0+255),w,b
  3561  000FC8  0F30               	addlw	48
  3562  000FCA  C07C  FFD9         	movff	sprintf@sp,fsr2l
  3563  000FCE  C07D  FFDA         	movff	sprintf@sp+1,fsr2h
  3564  000FD2  6EDF               	movwf	indf2,c
  3565                           
  3566                           ; BSR set to: 0
  3567  000FD4  0100               	movlb	0	; () banked
  3568  000FD6  4B7C               	infsnz	sprintf@sp& (0+255),f,b
  3569  000FD8  2B7D               	incf	(sprintf@sp+1)& (0+255),f,b
  3570                           
  3571                           ; BSR set to: 0
  3572                           ;doprnt.c: 1232: val %= dpowers[c];
  3573  000FDA  C08E  F00F         	movff	sprintf@val,___llmod@dividend
  3574  000FDE  C08F  F010         	movff	sprintf@val+1,___llmod@dividend+1
  3575  000FE2  C090  F011         	movff	sprintf@val+2,___llmod@dividend+2
  3576  000FE6  C091  F012         	movff	sprintf@val+3,___llmod@dividend+3
  3577  000FEA  0100               	movlb	0	; () banked
  3578  000FEC  519E               	movf	sprintf@c& (0+255),w,b
  3579  000FEE  0D04               	mullw	4
  3580  000FF0  0E69               	movlw	low _dpowers
  3581  000FF2  24F3               	addwf	prodl,w,c
  3582  000FF4  6EF6               	movwf	tblptrl,c
  3583  000FF6  0E08               	movlw	high _dpowers
  3584  000FF8  20F4               	addwfc	prodh,w,c
  3585  000FFA  6EF7               	movwf	tblptrh,c
  3586  000FFC                     	if	0	;There are less than 3 active tblptr bytes
  3587  000FFC                     	endif
  3588  000FFC  0009               	tblrd		*+
  3589  000FFE  CFF5 F013          	movff	tablat,___llmod@divisor
  3590  001002  0009               	tblrd		*+
  3591  001004  CFF5 F014          	movff	tablat,___llmod@divisor+1
  3592  001008  0009               	tblrd		*+
  3593  00100A  CFF5 F015          	movff	tablat,___llmod@divisor+2
  3594  00100E  000A               	tblrd		*-
  3595  001010  CFF5 F016          	movff	tablat,___llmod@divisor+3
  3596  001014  ECF4  F01A         	call	___llmod	;wreg free
  3597  001018  C00F  F08E         	movff	?___llmod,sprintf@val
  3598  00101C  C010  F08F         	movff	?___llmod+1,sprintf@val+1
  3599  001020  C011  F090         	movff	?___llmod+2,sprintf@val+2
  3600  001024  C012  F091         	movff	?___llmod+3,sprintf@val+3
  3601  001028                     l4710:
  3602  001028  0100               	movlb	0	; () banked
  3603  00102A  079E               	decf	sprintf@c& (0+255),f,b
  3604  00102C  0100               	movlb	0	; () banked
  3605  00102E  299E               	incf	sprintf@c& (0+255),w,b
  3606  001030  B4D8               	btfsc	status,2,c
  3607  001032  D00E               	goto	l4718
  3608  001034  D786               	goto	l4700
  3609  001036                     l4712:
  3610                           
  3611                           ; BSR set to: 0
  3612                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  3613  001036  C07C  FFD9         	movff	sprintf@sp,fsr2l
  3614  00103A  C07D  FFDA         	movff	sprintf@sp+1,fsr2h
  3615  00103E  0E30               	movlw	48
  3616  001040  6EDF               	movwf	indf2,c
  3617                           
  3618                           ; BSR set to: 0
  3619  001042  0100               	movlb	0	; () banked
  3620  001044  4B7C               	infsnz	sprintf@sp& (0+255),f,b
  3621  001046  2B7D               	incf	(sprintf@sp+1)& (0+255),f,b
  3622                           
  3623                           ; BSR set to: 0
  3624                           ;doprnt.c: 1237: prec--;
  3625  001048  0100               	movlb	0	; () banked
  3626  00104A  0798               	decf	sprintf@prec& (0+255),f,b
  3627  00104C  A0D8               	btfss	status,0,c
  3628  00104E  0799               	decf	(sprintf@prec+1)& (0+255),f,b
  3629  001050                     l4718:
  3630                           
  3631                           ; BSR set to: 0
  3632  001050  0100               	movlb	0	; () banked
  3633  001052  5198               	movf	sprintf@prec& (0+255),w,b
  3634  001054  0100               	movlb	0	; () banked
  3635  001056  1199               	iorwf	(sprintf@prec+1)& (0+255),w,b
  3636  001058  B4D8               	btfsc	status,2,c
  3637  00105A  D059               	goto	l4740
  3638  00105C  D7EC               	goto	l4712
  3639  00105E                     l4720:
  3640                           
  3641                           ; BSR set to: 0
  3642                           ;doprnt.c: 1246: }
  3643                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  3644  00105E  0100               	movlb	0	; () banked
  3645  001060  5198               	movf	sprintf@prec& (0+255),w,b
  3646  001062  0100               	movlb	0	; () banked
  3647  001064  1199               	iorwf	(sprintf@prec+1)& (0+255),w,b
  3648  001066  A4D8               	btfss	status,2,c
  3649  001068  D00D               	goto	l4726
  3650                           
  3651                           ; BSR set to: 0
  3652  00106A  0100               	movlb	0	; () banked
  3653  00106C  518E               	movf	sprintf@val& (0+255),w,b
  3654  00106E  0100               	movlb	0	; () banked
  3655  001070  118F               	iorwf	(sprintf@val+1)& (0+255),w,b
  3656  001072  0100               	movlb	0	; () banked
  3657  001074  1190               	iorwf	(sprintf@val+2)& (0+255),w,b
  3658  001076  0100               	movlb	0	; () banked
  3659  001078  1191               	iorwf	(sprintf@val+3)& (0+255),w,b
  3660  00107A  A4D8               	btfss	status,2,c
  3661  00107C  D003               	goto	l4726
  3662                           
  3663                           ; BSR set to: 0
  3664                           ;doprnt.c: 1291: prec++;
  3665  00107E  0100               	movlb	0	; () banked
  3666  001080  4B98               	infsnz	sprintf@prec& (0+255),f,b
  3667  001082  2B99               	incf	(sprintf@prec+1)& (0+255),f,b
  3668  001084                     l4726:
  3669                           
  3670                           ; BSR set to: 0
  3671                           ;doprnt.c: 1339: if(c < prec)
  3672  001084  0E80               	movlw	128
  3673  001086  0100               	movlb	0	; () banked
  3674  001088  BF9E               	btfsc	sprintf@c& (0+255),7,b
  3675  00108A  0E7F               	movlw	127
  3676  00108C  0100               	movlb	0	; () banked
  3677  00108E  6F84               	movwf	??_sprintf& (0+255),b
  3678  001090  0100               	movlb	0	; () banked
  3679  001092  5198               	movf	sprintf@prec& (0+255),w,b
  3680  001094  0100               	movlb	0	; () banked
  3681  001096  5D9E               	subwf	sprintf@c& (0+255),w,b
  3682  001098  0100               	movlb	0	; () banked
  3683  00109A  5199               	movf	(sprintf@prec+1)& (0+255),w,b
  3684  00109C  0A80               	xorlw	128
  3685  00109E  0100               	movlb	0	; () banked
  3686  0010A0  5984               	subwfb	??_sprintf& (0+255),w,b
  3687  0010A2  B0D8               	btfsc	status,0,c
  3688  0010A4  D003               	goto	l4730
  3689                           
  3690                           ; BSR set to: 0
  3691                           ;doprnt.c: 1340: c = prec;
  3692  0010A6  C098  F09E         	movff	sprintf@prec,sprintf@c
  3693  0010AA  D018               	goto	l4734
  3694  0010AC                     l4730:
  3695                           
  3696                           ; BSR set to: 0
  3697                           ;doprnt.c: 1341: else if(prec < c)
  3698  0010AC  0100               	movlb	0	; () banked
  3699  0010AE  5199               	movf	(sprintf@prec+1)& (0+255),w,b
  3700  0010B0  0A80               	xorlw	128
  3701  0010B2  0100               	movlb	0	; () banked
  3702  0010B4  6F84               	movwf	??_sprintf& (0+255),b
  3703  0010B6  0100               	movlb	0	; () banked
  3704  0010B8  519E               	movf	sprintf@c& (0+255),w,b
  3705  0010BA  0100               	movlb	0	; () banked
  3706  0010BC  5D98               	subwf	sprintf@prec& (0+255),w,b
  3707  0010BE  0E80               	movlw	128
  3708  0010C0  0100               	movlb	0	; () banked
  3709  0010C2  BF9E               	btfsc	sprintf@c& (0+255),7,b
  3710  0010C4  0E7F               	movlw	127
  3711  0010C6  0100               	movlb	0	; () banked
  3712  0010C8  5984               	subwfb	??_sprintf& (0+255),w,b
  3713  0010CA  B0D8               	btfsc	status,0,c
  3714  0010CC  D007               	goto	l4734
  3715                           
  3716                           ; BSR set to: 0
  3717                           ;doprnt.c: 1342: prec = c;
  3718  0010CE  0100               	movlb	0	; () banked
  3719  0010D0  519E               	movf	sprintf@c& (0+255),w,b
  3720  0010D2  0100               	movlb	0	; () banked
  3721  0010D4  6F98               	movwf	sprintf@prec& (0+255),b
  3722  0010D6  6B99               	clrf	(sprintf@prec+1)& (0+255),b
  3723  0010D8  BF98               	btfsc	sprintf@prec& (0+255),7,b
  3724  0010DA  0799               	decf	(sprintf@prec+1)& (0+255),f,b
  3725  0010DC                     l4734:
  3726                           
  3727                           ; BSR set to: 0
  3728                           ;doprnt.c: 1422: {
  3729                           ;doprnt.c: 1438: if(flag & 0x03)
  3730  0010DC  0E03               	movlw	3
  3731  0010DE  0100               	movlb	0	; () banked
  3732  0010E0  158C               	andwf	sprintf@flag& (0+255),w,b
  3733  0010E2  0100               	movlb	0	; () banked
  3734  0010E4  6F84               	movwf	??_sprintf& (0+255),b
  3735  0010E6  0E00               	movlw	0
  3736  0010E8  0100               	movlb	0	; () banked
  3737  0010EA  158D               	andwf	(sprintf@flag+1)& (0+255),w,b
  3738  0010EC  0100               	movlb	0	; () banked
  3739  0010EE  6F85               	movwf	(??_sprintf+1)& (0+255),b
  3740  0010F0  0100               	movlb	0	; () banked
  3741  0010F2  5184               	movf	??_sprintf& (0+255),w,b
  3742  0010F4  0100               	movlb	0	; () banked
  3743  0010F6  1185               	iorwf	(??_sprintf+1)& (0+255),w,b
  3744  0010F8  B4D8               	btfsc	status,2,c
  3745  0010FA  D009               	goto	l4740
  3746                           
  3747                           ; BSR set to: 0
  3748                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  3749  0010FC  C07C  FFD9         	movff	sprintf@sp,fsr2l
  3750  001100  C07D  FFDA         	movff	sprintf@sp+1,fsr2h
  3751  001104  0E2D               	movlw	45
  3752  001106  6EDF               	movwf	indf2,c
  3753  001108                     l4738:
  3754                           
  3755                           ; BSR set to: 0
  3756  001108  0100               	movlb	0	; () banked
  3757  00110A  4B7C               	infsnz	sprintf@sp& (0+255),f,b
  3758  00110C  2B7D               	incf	(sprintf@sp+1)& (0+255),f,b
  3759  00110E                     l4740:
  3760                           
  3761                           ; BSR set to: 0
  3762  00110E  C07E  FFF6         	movff	sprintf@f,tblptrl
  3763  001112  C07F  FFF7         	movff	sprintf@f+1,tblptrh
  3764  001116  0100               	movlb	0	; () banked
  3765  001118  4B7E               	infsnz	sprintf@f& (0+255),f,b
  3766  00111A  2B7F               	incf	(sprintf@f+1)& (0+255),f,b
  3767  00111C                     	if	0	;tblptru may be non-zero
  3768  00111C                     	endif
  3769  00111C                     	if	0	;tblptru may be non-zero
  3770  00111C                     	endif
  3771  00111C  0008               	tblrd		*
  3772  00111E  CFF5 F09E          	movff	tablat,sprintf@c
  3773  001122  0100               	movlb	0	; () banked
  3774  001124  519E               	movf	sprintf@c& (0+255),w,b
  3775  001126  A4D8               	btfss	status,2,c
  3776  001128  EF85  F004         	goto	l4542
  3777  00112C                     l4742:
  3778                           
  3779                           ; BSR set to: 0
  3780                           ;doprnt.c: 1538: *sp = 0;
  3781  00112C  C07C  FFD9         	movff	sprintf@sp,fsr2l
  3782  001130  C07D  FFDA         	movff	sprintf@sp+1,fsr2h
  3783  001134  0E00               	movlw	0
  3784  001136  6EDF               	movwf	indf2,c
  3785  001138  0012               	return	
  3786  00113A                     __end_of_sprintf:
  3787                           	opt stack 0
  3788                           tblptru	equ	0xFF8
  3789                           tblptrh	equ	0xFF7
  3790                           tblptrl	equ	0xFF6
  3791                           tablat	equ	0xFF5
  3792                           prodh	equ	0xFF4
  3793                           prodl	equ	0xFF3
  3794                           intcon	equ	0xFF2
  3795                           postinc0	equ	0xFEE
  3796                           wreg	equ	0xFE8
  3797                           indf1	equ	0xFE7
  3798                           plusw1	equ	0xFE3
  3799                           fsr1h	equ	0xFE2
  3800                           fsr1l	equ	0xFE1
  3801                           indf2	equ	0xFDF
  3802                           postinc2	equ	0xFDE
  3803                           plusw2	equ	0xFDB
  3804                           fsr2h	equ	0xFDA
  3805                           fsr2l	equ	0xFD9
  3806                           status	equ	0xFD8
  3807                           
  3808 ;; *************** function _scale *****************
  3809 ;; Defined at:
  3810 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  3811 ;; Parameters:    Size  Location     Type
  3812 ;;  scl             1    wreg     char 
  3813 ;; Auto vars:     Size  Location     Type
  3814 ;;  scl             1   61[COMRAM] char 
  3815 ;; Return value:  Size  Location     Type
  3816 ;;                  4   53[COMRAM] char 
  3817 ;; Registers used:
  3818 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3819 ;; Tracked objects:
  3820 ;;		On entry : 0/0
  3821 ;;		On exit  : 0/0
  3822 ;;		Unchanged: 0/0
  3823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3824 ;;      Params:         4       0       0       0       0       0       0       0       0
  3825 ;;      Locals:         5       0       0       0       0       0       0       0       0
  3826 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3827 ;;      Totals:         9       0       0       0       0       0       0       0       0
  3828 ;;Total ram usage:        9 bytes
  3829 ;; Hardware stack levels used:    1
  3830 ;; Hardware stack levels required when called:    2
  3831 ;; This function calls:
  3832 ;;		___awdiv
  3833 ;;		___awmod
  3834 ;;		___flmul
  3835 ;; This function is called by:
  3836 ;;		_sprintf
  3837 ;; This function uses a non-reentrant model
  3838 ;;
  3839                           
  3840                           	psect	text10
  3841  0015E2                     __ptext10:
  3842                           	opt stack 0
  3843  0015E2                     _scale:
  3844                           	opt stack 26
  3845                           
  3846                           ; BSR set to: 0
  3847                           ;incstack = 0
  3848                           ;scale@scl stored from wreg
  3849  0015E2  6E3E               	movwf	scale@scl,c
  3850                           
  3851                           ;doprnt.c: 428: if(scl < 0) {
  3852  0015E4  AE3E               	btfss	scale@scl,7,c
  3853  0015E6  D105               	goto	l3146
  3854                           
  3855                           ;doprnt.c: 429: scl = -scl;
  3856  0015E8  6C3E               	negf	scale@scl,c
  3857                           
  3858                           ;doprnt.c: 430: if(scl>=110)
  3859  0015EA  503E               	movf	scale@scl,w,c
  3860  0015EC  0A80               	xorlw	128
  3861  0015EE  0F12               	addlw	-238
  3862  0015F0  A0D8               	btfss	status,0,c
  3863  0015F2  D098               	goto	l3136
  3864                           
  3865                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  3866  0015F4  0E00               	movlw	0
  3867  0015F6  6E18               	movwf	___awdiv@divisor+1,c
  3868  0015F8  0E0A               	movlw	10
  3869  0015FA  6E17               	movwf	___awdiv@divisor,c
  3870  0015FC  0E00               	movlw	0
  3871  0015FE  6E12               	movwf	___awmod@divisor+1,c
  3872  001600  0E64               	movlw	100
  3873  001602  6E11               	movwf	___awmod@divisor,c
  3874  001604  503E               	movf	scale@scl,w,c
  3875  001606  6E0F               	movwf	___awmod@dividend,c
  3876  001608  6A10               	clrf	___awmod@dividend+1,c
  3877  00160A  BE0F               	btfsc	___awmod@dividend,7,c
  3878  00160C  0610               	decf	___awmod@dividend+1,f,c
  3879  00160E  EC84  F01A         	call	___awmod	;wreg free
  3880  001612  C00F  F015         	movff	?___awmod,___awdiv@dividend
  3881  001616  C010  F016         	movff	?___awmod+1,___awdiv@dividend+1
  3882  00161A  EC01  F01A         	call	___awdiv	;wreg free
  3883  00161E  90D8               	bcf	status,0,c
  3884  001620  3615               	rlcf	?___awdiv,f,c
  3885  001622  3616               	rlcf	?___awdiv+1,f,c
  3886  001624  90D8               	bcf	status,0,c
  3887  001626  3615               	rlcf	?___awdiv,f,c
  3888  001628  3616               	rlcf	?___awdiv+1,f,c
  3889  00162A  0E24               	movlw	36
  3890  00162C  2615               	addwf	?___awdiv,f,c
  3891  00162E  0E00               	movlw	0
  3892  001630  2216               	addwfc	?___awdiv+1,f,c
  3893  001632  0E01               	movlw	low __npowers_
  3894  001634  2415               	addwf	?___awdiv,w,c
  3895  001636  6EF6               	movwf	tblptrl,c
  3896  001638  0E08               	movlw	high __npowers_
  3897  00163A  2016               	addwfc	?___awdiv+1,w,c
  3898  00163C  6EF7               	movwf	tblptrh,c
  3899  00163E                     	if	0	;There are less than 3 active tblptr bytes
  3900  00163E                     	endif
  3901  00163E  0009               	tblrd		*+
  3902  001640  CFF5 F021          	movff	tablat,___flmul@a
  3903  001644  0009               	tblrd		*+
  3904  001646  CFF5 F022          	movff	tablat,___flmul@a+1
  3905  00164A  0009               	tblrd		*+
  3906  00164C  CFF5 F023          	movff	tablat,___flmul@a+2
  3907  001650  000A               	tblrd		*-
  3908  001652  CFF5 F024          	movff	tablat,___flmul@a+3
  3909  001656  0E00               	movlw	0
  3910  001658  6E18               	movwf	___awdiv@divisor+1,c
  3911  00165A  0E64               	movlw	100
  3912  00165C  6E17               	movwf	___awdiv@divisor,c
  3913  00165E  503E               	movf	scale@scl,w,c
  3914  001660  6E15               	movwf	___awdiv@dividend,c
  3915  001662  6A16               	clrf	___awdiv@dividend+1,c
  3916  001664  BE15               	btfsc	___awdiv@dividend,7,c
  3917  001666  0616               	decf	___awdiv@dividend+1,f,c
  3918  001668  EC01  F01A         	call	___awdiv	;wreg free
  3919  00166C  90D8               	bcf	status,0,c
  3920  00166E  3615               	rlcf	?___awdiv,f,c
  3921  001670  3616               	rlcf	?___awdiv+1,f,c
  3922  001672  90D8               	bcf	status,0,c
  3923  001674  3615               	rlcf	?___awdiv,f,c
  3924  001676  3616               	rlcf	?___awdiv+1,f,c
  3925  001678  0E48               	movlw	72
  3926  00167A  2615               	addwf	?___awdiv,f,c
  3927  00167C  0E00               	movlw	0
  3928  00167E  2216               	addwfc	?___awdiv+1,f,c
  3929  001680  0E01               	movlw	low __npowers_
  3930  001682  2415               	addwf	?___awdiv,w,c
  3931  001684  6EF6               	movwf	tblptrl,c
  3932  001686  0E08               	movlw	high __npowers_
  3933  001688  2016               	addwfc	?___awdiv+1,w,c
  3934  00168A  6EF7               	movwf	tblptrh,c
  3935  00168C                     	if	0	;There are less than 3 active tblptr bytes
  3936  00168C                     	endif
  3937  00168C  0009               	tblrd		*+
  3938  00168E  CFF5 F01D          	movff	tablat,___flmul@b
  3939  001692  0009               	tblrd		*+
  3940  001694  CFF5 F01E          	movff	tablat,___flmul@b+1
  3941  001698  0009               	tblrd		*+
  3942  00169A  CFF5 F01F          	movff	tablat,___flmul@b+2
  3943  00169E  000A               	tblrd		*-
  3944  0016A0  CFF5 F020          	movff	tablat,___flmul@b+3
  3945  0016A4  ECFD  F00C         	call	___flmul	;wreg free
  3946  0016A8  C01D  F03A         	movff	?___flmul,_scale$1355
  3947  0016AC  C01E  F03B         	movff	?___flmul+1,_scale$1355+1
  3948  0016B0  C01F  F03C         	movff	?___flmul+2,_scale$1355+2
  3949  0016B4  C020  F03D         	movff	?___flmul+3,_scale$1355+3
  3950                           
  3951                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  3952  0016B8  C03A  F01D         	movff	_scale$1355,___flmul@b
  3953  0016BC  C03B  F01E         	movff	_scale$1355+1,___flmul@b+1
  3954  0016C0  C03C  F01F         	movff	_scale$1355+2,___flmul@b+2
  3955  0016C4  C03D  F020         	movff	_scale$1355+3,___flmul@b+3
  3956  0016C8  0E00               	movlw	0
  3957  0016CA  6E12               	movwf	___awmod@divisor+1,c
  3958  0016CC  0E0A               	movlw	10
  3959  0016CE  6E11               	movwf	___awmod@divisor,c
  3960  0016D0  503E               	movf	scale@scl,w,c
  3961  0016D2  6E0F               	movwf	___awmod@dividend,c
  3962  0016D4  6A10               	clrf	___awmod@dividend+1,c
  3963  0016D6  BE0F               	btfsc	___awmod@dividend,7,c
  3964  0016D8  0610               	decf	___awmod@dividend+1,f,c
  3965  0016DA  EC84  F01A         	call	___awmod	;wreg free
  3966  0016DE  90D8               	bcf	status,0,c
  3967  0016E0  360F               	rlcf	?___awmod,f,c
  3968  0016E2  3610               	rlcf	?___awmod+1,f,c
  3969  0016E4  90D8               	bcf	status,0,c
  3970  0016E6  360F               	rlcf	?___awmod,f,c
  3971  0016E8  3610               	rlcf	?___awmod+1,f,c
  3972  0016EA  0E01               	movlw	low __npowers_
  3973  0016EC  240F               	addwf	?___awmod,w,c
  3974  0016EE  6EF6               	movwf	tblptrl,c
  3975  0016F0  0E08               	movlw	high __npowers_
  3976  0016F2  2010               	addwfc	?___awmod+1,w,c
  3977  0016F4  6EF7               	movwf	tblptrh,c
  3978  0016F6                     	if	0	;There are less than 3 active tblptr bytes
  3979  0016F6                     	endif
  3980  0016F6  0009               	tblrd		*+
  3981  0016F8  CFF5 F021          	movff	tablat,___flmul@a
  3982  0016FC  0009               	tblrd		*+
  3983  0016FE  CFF5 F022          	movff	tablat,___flmul@a+1
  3984  001702  0009               	tblrd		*+
  3985  001704  CFF5 F023          	movff	tablat,___flmul@a+2
  3986  001708  000A               	tblrd		*-
  3987  00170A  CFF5 F024          	movff	tablat,___flmul@a+3
  3988  00170E  ECFD  F00C         	call	___flmul	;wreg free
  3989  001712  C01D  F036         	movff	?___flmul,?_scale
  3990  001716  C01E  F037         	movff	?___flmul+1,?_scale+1
  3991  00171A  C01F  F038         	movff	?___flmul+2,?_scale+2
  3992  00171E  C020  F039         	movff	?___flmul+3,?_scale+3
  3993  001722  0012               	return	
  3994  001724                     l3136:
  3995                           
  3996                           ;doprnt.c: 432: else if(scl > 10)
  3997  001724  503E               	movf	scale@scl,w,c
  3998  001726  0A80               	xorlw	128
  3999  001728  0F75               	addlw	-139
  4000  00172A  A0D8               	btfss	status,0,c
  4001  00172C  D04D               	goto	l3142
  4002                           
  4003                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  4004  00172E  0E00               	movlw	0
  4005  001730  6E18               	movwf	___awdiv@divisor+1,c
  4006  001732  0E0A               	movlw	10
  4007  001734  6E17               	movwf	___awdiv@divisor,c
  4008  001736  503E               	movf	scale@scl,w,c
  4009  001738  6E15               	movwf	___awdiv@dividend,c
  4010  00173A  6A16               	clrf	___awdiv@dividend+1,c
  4011  00173C  BE15               	btfsc	___awdiv@dividend,7,c
  4012  00173E  0616               	decf	___awdiv@dividend+1,f,c
  4013  001740  EC01  F01A         	call	___awdiv	;wreg free
  4014  001744  90D8               	bcf	status,0,c
  4015  001746  3615               	rlcf	?___awdiv,f,c
  4016  001748  3616               	rlcf	?___awdiv+1,f,c
  4017  00174A  90D8               	bcf	status,0,c
  4018  00174C  3615               	rlcf	?___awdiv,f,c
  4019  00174E  3616               	rlcf	?___awdiv+1,f,c
  4020  001750  0E24               	movlw	36
  4021  001752  2615               	addwf	?___awdiv,f,c
  4022  001754  0E00               	movlw	0
  4023  001756  2216               	addwfc	?___awdiv+1,f,c
  4024  001758  0E01               	movlw	low __npowers_
  4025  00175A  2415               	addwf	?___awdiv,w,c
  4026  00175C  6EF6               	movwf	tblptrl,c
  4027  00175E  0E08               	movlw	high __npowers_
  4028  001760  2016               	addwfc	?___awdiv+1,w,c
  4029  001762  6EF7               	movwf	tblptrh,c
  4030  001764                     	if	0	;There are less than 3 active tblptr bytes
  4031  001764                     	endif
  4032  001764  0009               	tblrd		*+
  4033  001766  CFF5 F01D          	movff	tablat,___flmul@b
  4034  00176A  0009               	tblrd		*+
  4035  00176C  CFF5 F01E          	movff	tablat,___flmul@b+1
  4036  001770  0009               	tblrd		*+
  4037  001772  CFF5 F01F          	movff	tablat,___flmul@b+2
  4038  001776  000A               	tblrd		*-
  4039  001778  CFF5 F020          	movff	tablat,___flmul@b+3
  4040  00177C  0E00               	movlw	0
  4041  00177E  6E12               	movwf	___awmod@divisor+1,c
  4042  001780  0E0A               	movlw	10
  4043  001782  6E11               	movwf	___awmod@divisor,c
  4044  001784  503E               	movf	scale@scl,w,c
  4045  001786  6E0F               	movwf	___awmod@dividend,c
  4046  001788  6A10               	clrf	___awmod@dividend+1,c
  4047  00178A  BE0F               	btfsc	___awmod@dividend,7,c
  4048  00178C  0610               	decf	___awmod@dividend+1,f,c
  4049  00178E  EC84  F01A         	call	___awmod	;wreg free
  4050  001792  90D8               	bcf	status,0,c
  4051  001794  360F               	rlcf	?___awmod,f,c
  4052  001796  3610               	rlcf	?___awmod+1,f,c
  4053  001798  90D8               	bcf	status,0,c
  4054  00179A  360F               	rlcf	?___awmod,f,c
  4055  00179C  3610               	rlcf	?___awmod+1,f,c
  4056  00179E  0E01               	movlw	low __npowers_
  4057  0017A0  240F               	addwf	?___awmod,w,c
  4058  0017A2  6EF6               	movwf	tblptrl,c
  4059  0017A4  0E08               	movlw	high __npowers_
  4060  0017A6  2010               	addwfc	?___awmod+1,w,c
  4061  0017A8  6EF7               	movwf	tblptrh,c
  4062  0017AA                     	if	0	;There are less than 3 active tblptr bytes
  4063  0017AA                     	endif
  4064  0017AA  0009               	tblrd		*+
  4065  0017AC  CFF5 F021          	movff	tablat,___flmul@a
  4066  0017B0  0009               	tblrd		*+
  4067  0017B2  CFF5 F022          	movff	tablat,___flmul@a+1
  4068  0017B6  0009               	tblrd		*+
  4069  0017B8  CFF5 F023          	movff	tablat,___flmul@a+2
  4070  0017BC  000A               	tblrd		*-
  4071  0017BE  CFF5 F024          	movff	tablat,___flmul@a+3
  4072  0017C2  ECFD  F00C         	call	___flmul	;wreg free
  4073  0017C6  D7A5               	goto	L4
  4074  0017C8                     l3142:
  4075                           
  4076                           ;doprnt.c: 434: return _npowers_[scl];
  4077  0017C8  503E               	movf	scale@scl,w,c
  4078  0017CA  0D04               	mullw	4
  4079  0017CC  0E01               	movlw	low __npowers_
  4080  0017CE  24F3               	addwf	prodl,w,c
  4081  0017D0  6EF6               	movwf	tblptrl,c
  4082  0017D2  0E08               	movlw	high __npowers_
  4083  0017D4  20F4               	addwfc	prodh,w,c
  4084  0017D6  6EF7               	movwf	tblptrh,c
  4085  0017D8                     	if	0	;There are less than 3 active tblptr bytes
  4086  0017D8                     	endif
  4087  0017D8  0009               	tblrd		*+
  4088  0017DA  CFF5 F036          	movff	tablat,?_scale
  4089  0017DE  0009               	tblrd		*+
  4090  0017E0  CFF5 F037          	movff	tablat,?_scale+1
  4091  0017E4  0009               	tblrd		*+
  4092  0017E6  CFF5 F038          	movff	tablat,?_scale+2
  4093  0017EA  000A               	tblrd		*-
  4094  0017EC  CFF5 F039          	movff	tablat,?_scale+3
  4095  0017F0  0012               	return	
  4096  0017F2                     l3146:
  4097                           
  4098                           ;doprnt.c: 435: }
  4099                           ;doprnt.c: 436: if(scl>=110)
  4100  0017F2  503E               	movf	scale@scl,w,c
  4101  0017F4  0A80               	xorlw	128
  4102  0017F6  0F12               	addlw	-238
  4103  0017F8  A0D8               	btfss	status,0,c
  4104  0017FA  D098               	goto	l3154
  4105                           
  4106                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  4107  0017FC  0E00               	movlw	0
  4108  0017FE  6E18               	movwf	___awdiv@divisor+1,c
  4109  001800  0E0A               	movlw	10
  4110  001802  6E17               	movwf	___awdiv@divisor,c
  4111  001804  0E00               	movlw	0
  4112  001806  6E12               	movwf	___awmod@divisor+1,c
  4113  001808  0E64               	movlw	100
  4114  00180A  6E11               	movwf	___awmod@divisor,c
  4115  00180C  503E               	movf	scale@scl,w,c
  4116  00180E  6E0F               	movwf	___awmod@dividend,c
  4117  001810  6A10               	clrf	___awmod@dividend+1,c
  4118  001812  BE0F               	btfsc	___awmod@dividend,7,c
  4119  001814  0610               	decf	___awmod@dividend+1,f,c
  4120  001816  EC84  F01A         	call	___awmod	;wreg free
  4121  00181A  C00F  F015         	movff	?___awmod,___awdiv@dividend
  4122  00181E  C010  F016         	movff	?___awmod+1,___awdiv@dividend+1
  4123  001822  EC01  F01A         	call	___awdiv	;wreg free
  4124  001826  90D8               	bcf	status,0,c
  4125  001828  3615               	rlcf	?___awdiv,f,c
  4126  00182A  3616               	rlcf	?___awdiv+1,f,c
  4127  00182C  90D8               	bcf	status,0,c
  4128  00182E  3615               	rlcf	?___awdiv,f,c
  4129  001830  3616               	rlcf	?___awdiv+1,f,c
  4130  001832  0E24               	movlw	36
  4131  001834  2615               	addwf	?___awdiv,f,c
  4132  001836  0E00               	movlw	0
  4133  001838  2216               	addwfc	?___awdiv+1,f,c
  4134  00183A  0E35               	movlw	low __powers_
  4135  00183C  2415               	addwf	?___awdiv,w,c
  4136  00183E  6EF6               	movwf	tblptrl,c
  4137  001840  0E08               	movlw	high __powers_
  4138  001842  2016               	addwfc	?___awdiv+1,w,c
  4139  001844  6EF7               	movwf	tblptrh,c
  4140  001846                     	if	0	;There are less than 3 active tblptr bytes
  4141  001846                     	endif
  4142  001846  0009               	tblrd		*+
  4143  001848  CFF5 F021          	movff	tablat,___flmul@a
  4144  00184C  0009               	tblrd		*+
  4145  00184E  CFF5 F022          	movff	tablat,___flmul@a+1
  4146  001852  0009               	tblrd		*+
  4147  001854  CFF5 F023          	movff	tablat,___flmul@a+2
  4148  001858  000A               	tblrd		*-
  4149  00185A  CFF5 F024          	movff	tablat,___flmul@a+3
  4150  00185E  0E00               	movlw	0
  4151  001860  6E18               	movwf	___awdiv@divisor+1,c
  4152  001862  0E64               	movlw	100
  4153  001864  6E17               	movwf	___awdiv@divisor,c
  4154  001866  503E               	movf	scale@scl,w,c
  4155  001868  6E15               	movwf	___awdiv@dividend,c
  4156  00186A  6A16               	clrf	___awdiv@dividend+1,c
  4157  00186C  BE15               	btfsc	___awdiv@dividend,7,c
  4158  00186E  0616               	decf	___awdiv@dividend+1,f,c
  4159  001870  EC01  F01A         	call	___awdiv	;wreg free
  4160  001874  90D8               	bcf	status,0,c
  4161  001876  3615               	rlcf	?___awdiv,f,c
  4162  001878  3616               	rlcf	?___awdiv+1,f,c
  4163  00187A  90D8               	bcf	status,0,c
  4164  00187C  3615               	rlcf	?___awdiv,f,c
  4165  00187E  3616               	rlcf	?___awdiv+1,f,c
  4166  001880  0E48               	movlw	72
  4167  001882  2615               	addwf	?___awdiv,f,c
  4168  001884  0E00               	movlw	0
  4169  001886  2216               	addwfc	?___awdiv+1,f,c
  4170  001888  0E35               	movlw	low __powers_
  4171  00188A  2415               	addwf	?___awdiv,w,c
  4172  00188C  6EF6               	movwf	tblptrl,c
  4173  00188E  0E08               	movlw	high __powers_
  4174  001890  2016               	addwfc	?___awdiv+1,w,c
  4175  001892  6EF7               	movwf	tblptrh,c
  4176  001894                     	if	0	;There are less than 3 active tblptr bytes
  4177  001894                     	endif
  4178  001894  0009               	tblrd		*+
  4179  001896  CFF5 F01D          	movff	tablat,___flmul@b
  4180  00189A  0009               	tblrd		*+
  4181  00189C  CFF5 F01E          	movff	tablat,___flmul@b+1
  4182  0018A0  0009               	tblrd		*+
  4183  0018A2  CFF5 F01F          	movff	tablat,___flmul@b+2
  4184  0018A6  000A               	tblrd		*-
  4185  0018A8  CFF5 F020          	movff	tablat,___flmul@b+3
  4186  0018AC  ECFD  F00C         	call	___flmul	;wreg free
  4187  0018B0  C01D  F03A         	movff	?___flmul,_scale$1355
  4188  0018B4  C01E  F03B         	movff	?___flmul+1,_scale$1355+1
  4189  0018B8  C01F  F03C         	movff	?___flmul+2,_scale$1355+2
  4190  0018BC  C020  F03D         	movff	?___flmul+3,_scale$1355+3
  4191                           
  4192                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  4193  0018C0  C03A  F01D         	movff	_scale$1355,___flmul@b
  4194  0018C4  C03B  F01E         	movff	_scale$1355+1,___flmul@b+1
  4195  0018C8  C03C  F01F         	movff	_scale$1355+2,___flmul@b+2
  4196  0018CC  C03D  F020         	movff	_scale$1355+3,___flmul@b+3
  4197  0018D0  0E00               	movlw	0
  4198  0018D2  6E12               	movwf	___awmod@divisor+1,c
  4199  0018D4  0E0A               	movlw	10
  4200  0018D6  6E11               	movwf	___awmod@divisor,c
  4201  0018D8  503E               	movf	scale@scl,w,c
  4202  0018DA  6E0F               	movwf	___awmod@dividend,c
  4203  0018DC  6A10               	clrf	___awmod@dividend+1,c
  4204  0018DE  BE0F               	btfsc	___awmod@dividend,7,c
  4205  0018E0  0610               	decf	___awmod@dividend+1,f,c
  4206  0018E2  EC84  F01A         	call	___awmod	;wreg free
  4207  0018E6  90D8               	bcf	status,0,c
  4208  0018E8  360F               	rlcf	?___awmod,f,c
  4209  0018EA  3610               	rlcf	?___awmod+1,f,c
  4210  0018EC  90D8               	bcf	status,0,c
  4211  0018EE  360F               	rlcf	?___awmod,f,c
  4212  0018F0  3610               	rlcf	?___awmod+1,f,c
  4213  0018F2  0E35               	movlw	low __powers_
  4214  0018F4  240F               	addwf	?___awmod,w,c
  4215  0018F6  6EF6               	movwf	tblptrl,c
  4216  0018F8  0E08               	movlw	high __powers_
  4217  0018FA  2010               	addwfc	?___awmod+1,w,c
  4218  0018FC  6EF7               	movwf	tblptrh,c
  4219  0018FE                     	if	0	;There are less than 3 active tblptr bytes
  4220  0018FE                     	endif
  4221  0018FE  0009               	tblrd		*+
  4222  001900  CFF5 F021          	movff	tablat,___flmul@a
  4223  001904  0009               	tblrd		*+
  4224  001906  CFF5 F022          	movff	tablat,___flmul@a+1
  4225  00190A  0009               	tblrd		*+
  4226  00190C  CFF5 F023          	movff	tablat,___flmul@a+2
  4227  001910  000A               	tblrd		*-
  4228  001912  CFF5 F024          	movff	tablat,___flmul@a+3
  4229  001916  ECFD  F00C         	call	___flmul	;wreg free
  4230  00191A  C01D  F036         	movff	?___flmul,?_scale
  4231  00191E  C01E  F037         	movff	?___flmul+1,?_scale+1
  4232  001922  C01F  F038         	movff	?___flmul+2,?_scale+2
  4233  001926  C020  F039         	movff	?___flmul+3,?_scale+3
  4234  00192A  0012               	return	
  4235  00192C                     l3154:
  4236                           
  4237                           ;doprnt.c: 438: else if(scl > 10)
  4238  00192C  503E               	movf	scale@scl,w,c
  4239  00192E  0A80               	xorlw	128
  4240  001930  0F75               	addlw	-139
  4241  001932  A0D8               	btfss	status,0,c
  4242  001934  D04D               	goto	l3160
  4243                           
  4244                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  4245  001936  0E00               	movlw	0
  4246  001938  6E18               	movwf	___awdiv@divisor+1,c
  4247  00193A  0E0A               	movlw	10
  4248  00193C  6E17               	movwf	___awdiv@divisor,c
  4249  00193E  503E               	movf	scale@scl,w,c
  4250  001940  6E15               	movwf	___awdiv@dividend,c
  4251  001942  6A16               	clrf	___awdiv@dividend+1,c
  4252  001944  BE15               	btfsc	___awdiv@dividend,7,c
  4253  001946  0616               	decf	___awdiv@dividend+1,f,c
  4254  001948  EC01  F01A         	call	___awdiv	;wreg free
  4255  00194C  90D8               	bcf	status,0,c
  4256  00194E  3615               	rlcf	?___awdiv,f,c
  4257  001950  3616               	rlcf	?___awdiv+1,f,c
  4258  001952  90D8               	bcf	status,0,c
  4259  001954  3615               	rlcf	?___awdiv,f,c
  4260  001956  3616               	rlcf	?___awdiv+1,f,c
  4261  001958  0E24               	movlw	36
  4262  00195A  2615               	addwf	?___awdiv,f,c
  4263  00195C  0E00               	movlw	0
  4264  00195E  2216               	addwfc	?___awdiv+1,f,c
  4265  001960  0E35               	movlw	low __powers_
  4266  001962  2415               	addwf	?___awdiv,w,c
  4267  001964  6EF6               	movwf	tblptrl,c
  4268  001966  0E08               	movlw	high __powers_
  4269  001968  2016               	addwfc	?___awdiv+1,w,c
  4270  00196A  6EF7               	movwf	tblptrh,c
  4271  00196C                     	if	0	;There are less than 3 active tblptr bytes
  4272  00196C                     	endif
  4273  00196C  0009               	tblrd		*+
  4274  00196E  CFF5 F01D          	movff	tablat,___flmul@b
  4275  001972  0009               	tblrd		*+
  4276  001974  CFF5 F01E          	movff	tablat,___flmul@b+1
  4277  001978  0009               	tblrd		*+
  4278  00197A  CFF5 F01F          	movff	tablat,___flmul@b+2
  4279  00197E  000A               	tblrd		*-
  4280  001980  CFF5 F020          	movff	tablat,___flmul@b+3
  4281  001984  0E00               	movlw	0
  4282  001986  6E12               	movwf	___awmod@divisor+1,c
  4283  001988  0E0A               	movlw	10
  4284  00198A  6E11               	movwf	___awmod@divisor,c
  4285  00198C  503E               	movf	scale@scl,w,c
  4286  00198E  6E0F               	movwf	___awmod@dividend,c
  4287  001990  6A10               	clrf	___awmod@dividend+1,c
  4288  001992  BE0F               	btfsc	___awmod@dividend,7,c
  4289  001994  0610               	decf	___awmod@dividend+1,f,c
  4290  001996  EC84  F01A         	call	___awmod	;wreg free
  4291  00199A  90D8               	bcf	status,0,c
  4292  00199C  360F               	rlcf	?___awmod,f,c
  4293  00199E  3610               	rlcf	?___awmod+1,f,c
  4294  0019A0  90D8               	bcf	status,0,c
  4295  0019A2  360F               	rlcf	?___awmod,f,c
  4296  0019A4  3610               	rlcf	?___awmod+1,f,c
  4297  0019A6  0E35               	movlw	low __powers_
  4298  0019A8  240F               	addwf	?___awmod,w,c
  4299  0019AA  6EF6               	movwf	tblptrl,c
  4300  0019AC  0E08               	movlw	high __powers_
  4301  0019AE  2010               	addwfc	?___awmod+1,w,c
  4302  0019B0  6EF7               	movwf	tblptrh,c
  4303  0019B2                     	if	0	;There are less than 3 active tblptr bytes
  4304  0019B2                     	endif
  4305  0019B2  0009               	tblrd		*+
  4306  0019B4  CFF5 F021          	movff	tablat,___flmul@a
  4307  0019B8  0009               	tblrd		*+
  4308  0019BA  CFF5 F022          	movff	tablat,___flmul@a+1
  4309  0019BE  0009               	tblrd		*+
  4310  0019C0  CFF5 F023          	movff	tablat,___flmul@a+2
  4311  0019C4  000A               	tblrd		*-
  4312  0019C6  CFF5 F024          	movff	tablat,___flmul@a+3
  4313  0019CA  ECFD  F00C         	call	___flmul	;wreg free
  4314  0019CE  D7A5               	goto	L5
  4315  0019D0                     l3160:
  4316                           
  4317                           ;doprnt.c: 440: return _powers_[scl];
  4318  0019D0  503E               	movf	scale@scl,w,c
  4319  0019D2  0D04               	mullw	4
  4320  0019D4  0E35               	movlw	low __powers_
  4321  0019D6  24F3               	addwf	prodl,w,c
  4322  0019D8  6EF6               	movwf	tblptrl,c
  4323  0019DA  0E08               	movlw	high __powers_
  4324  0019DC  20F4               	addwfc	prodh,w,c
  4325  0019DE  6EF7               	movwf	tblptrh,c
  4326  0019E0                     	if	0	;There are less than 3 active tblptr bytes
  4327  0019E0                     	endif
  4328  0019E0  0009               	tblrd		*+
  4329  0019E2  CFF5 F036          	movff	tablat,?_scale
  4330  0019E6  0009               	tblrd		*+
  4331  0019E8  CFF5 F037          	movff	tablat,?_scale+1
  4332  0019EC  0009               	tblrd		*+
  4333  0019EE  CFF5 F038          	movff	tablat,?_scale+2
  4334  0019F2  000A               	tblrd		*-
  4335  0019F4  CFF5 F039          	movff	tablat,?_scale+3
  4336  0019F8  0012               	return	
  4337  0019FA                     __end_of_scale:
  4338                           	opt stack 0
  4339                           tblptru	equ	0xFF8
  4340                           tblptrh	equ	0xFF7
  4341                           tblptrl	equ	0xFF6
  4342                           tablat	equ	0xFF5
  4343                           prodh	equ	0xFF4
  4344                           prodl	equ	0xFF3
  4345                           intcon	equ	0xFF2
  4346                           postinc0	equ	0xFEE
  4347                           wreg	equ	0xFE8
  4348                           indf1	equ	0xFE7
  4349                           plusw1	equ	0xFE3
  4350                           fsr1h	equ	0xFE2
  4351                           fsr1l	equ	0xFE1
  4352                           indf2	equ	0xFDF
  4353                           postinc2	equ	0xFDE
  4354                           plusw2	equ	0xFDB
  4355                           fsr2h	equ	0xFDA
  4356                           fsr2l	equ	0xFD9
  4357                           status	equ	0xFD8
  4358                           
  4359 ;; *************** function _isdigit *****************
  4360 ;; Defined at:
  4361 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
  4362 ;; Parameters:    Size  Location     Type
  4363 ;;  c               1    wreg     unsigned char 
  4364 ;; Auto vars:     Size  Location     Type
  4365 ;;  c               1   16[COMRAM] unsigned char 
  4366 ;; Return value:  Size  Location     Type
  4367 ;;		None               void
  4368 ;; Registers used:
  4369 ;;		wreg, status,2, status,0
  4370 ;; Tracked objects:
  4371 ;;		On entry : 0/0
  4372 ;;		On exit  : 0/0
  4373 ;;		Unchanged: 0/0
  4374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4375 ;;      Params:         0       0       0       0       0       0       0       0       0
  4376 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4377 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4378 ;;      Totals:         3       0       0       0       0       0       0       0       0
  4379 ;;Total ram usage:        3 bytes
  4380 ;; Hardware stack levels used:    1
  4381 ;; Hardware stack levels required when called:    1
  4382 ;; This function calls:
  4383 ;;		Nothing
  4384 ;; This function is called by:
  4385 ;;		_sprintf
  4386 ;; This function uses a non-reentrant model
  4387 ;;
  4388                           
  4389                           	psect	text11
  4390  0039EE                     __ptext11:
  4391                           	opt stack 0
  4392  0039EE                     _isdigit:
  4393                           	opt stack 27
  4394                           
  4395                           ;incstack = 0
  4396                           ;isdigit@c stored from wreg
  4397  0039EE  6E11               	movwf	isdigit@c,c
  4398  0039F0  0E00               	movlw	0
  4399  0039F2  6E10               	movwf	_isdigit$979,c
  4400  0039F4  0E3A               	movlw	58
  4401  0039F6  6011               	cpfslt	isdigit@c,c
  4402  0039F8  D005               	goto	l3172
  4403  0039FA  0E2F               	movlw	47
  4404  0039FC  6411               	cpfsgt	isdigit@c,c
  4405  0039FE  D002               	goto	l3172
  4406  003A00  0E01               	movlw	1
  4407  003A02  6E10               	movwf	_isdigit$979,c
  4408  003A04                     l3172:
  4409  003A04  C010  F00F         	movff	_isdigit$979,??_isdigit
  4410  003A08  300F               	rrcf	??_isdigit,w,c
  4411  003A0A  0012               	return	
  4412  003A0C                     __end_of_isdigit:
  4413                           	opt stack 0
  4414                           tblptru	equ	0xFF8
  4415                           tblptrh	equ	0xFF7
  4416                           tblptrl	equ	0xFF6
  4417                           tablat	equ	0xFF5
  4418                           prodh	equ	0xFF4
  4419                           prodl	equ	0xFF3
  4420                           intcon	equ	0xFF2
  4421                           postinc0	equ	0xFEE
  4422                           wreg	equ	0xFE8
  4423                           indf1	equ	0xFE7
  4424                           plusw1	equ	0xFE3
  4425                           fsr1h	equ	0xFE2
  4426                           fsr1l	equ	0xFE1
  4427                           indf2	equ	0xFDF
  4428                           postinc2	equ	0xFDE
  4429                           plusw2	equ	0xFDB
  4430                           fsr2h	equ	0xFDA
  4431                           fsr2l	equ	0xFD9
  4432                           status	equ	0xFD8
  4433                           
  4434 ;; *************** function _fround *****************
  4435 ;; Defined at:
  4436 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  4437 ;; Parameters:    Size  Location     Type
  4438 ;;  prec            1    wreg     unsigned char 
  4439 ;; Auto vars:     Size  Location     Type
  4440 ;;  prec            1   65[COMRAM] unsigned char 
  4441 ;; Return value:  Size  Location     Type
  4442 ;;                  4   53[COMRAM] unsigned char 
  4443 ;; Registers used:
  4444 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4445 ;; Tracked objects:
  4446 ;;		On entry : 0/0
  4447 ;;		On exit  : 0/0
  4448 ;;		Unchanged: 0/0
  4449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4450 ;;      Params:         4       0       0       0       0       0       0       0       0
  4451 ;;      Locals:         9       0       0       0       0       0       0       0       0
  4452 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4453 ;;      Totals:        13       0       0       0       0       0       0       0       0
  4454 ;;Total ram usage:       13 bytes
  4455 ;; Hardware stack levels used:    1
  4456 ;; Hardware stack levels required when called:    2
  4457 ;; This function calls:
  4458 ;;		___awdiv
  4459 ;;		___awmod
  4460 ;;		___flmul
  4461 ;; This function is called by:
  4462 ;;		_sprintf
  4463 ;; This function uses a non-reentrant model
  4464 ;;
  4465                           
  4466                           	psect	text12
  4467  002392                     __ptext12:
  4468                           	opt stack 0
  4469  002392                     _fround:
  4470                           	opt stack 26
  4471                           
  4472                           ;incstack = 0
  4473                           ;fround@prec stored from wreg
  4474  002392  6E42               	movwf	fround@prec,c
  4475                           
  4476                           ;doprnt.c: 413: if(prec>=110)
  4477  002394  0E6D               	movlw	109
  4478  002396  6442               	cpfsgt	fround@prec,c
  4479  002398  D0AC               	goto	l3114
  4480                           
  4481                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  4482  00239A  0E00               	movlw	0
  4483  00239C  6E18               	movwf	___awdiv@divisor+1,c
  4484  00239E  0E0A               	movlw	10
  4485  0023A0  6E17               	movwf	___awdiv@divisor,c
  4486  0023A2  0E00               	movlw	0
  4487  0023A4  6E12               	movwf	___awmod@divisor+1,c
  4488  0023A6  0E64               	movlw	100
  4489  0023A8  6E11               	movwf	___awmod@divisor,c
  4490  0023AA  C042  F00F         	movff	fround@prec,___awmod@dividend
  4491  0023AE  6A10               	clrf	___awmod@dividend+1,c
  4492  0023B0  EC84  F01A         	call	___awmod	;wreg free
  4493  0023B4  C00F  F015         	movff	?___awmod,___awdiv@dividend
  4494  0023B8  C010  F016         	movff	?___awmod+1,___awdiv@dividend+1
  4495  0023BC  EC01  F01A         	call	___awdiv	;wreg free
  4496  0023C0  90D8               	bcf	status,0,c
  4497  0023C2  3615               	rlcf	?___awdiv,f,c
  4498  0023C4  3616               	rlcf	?___awdiv+1,f,c
  4499  0023C6  90D8               	bcf	status,0,c
  4500  0023C8  3615               	rlcf	?___awdiv,f,c
  4501  0023CA  3616               	rlcf	?___awdiv+1,f,c
  4502  0023CC  0E24               	movlw	36
  4503  0023CE  2615               	addwf	?___awdiv,f,c
  4504  0023D0  0E00               	movlw	0
  4505  0023D2  2216               	addwfc	?___awdiv+1,f,c
  4506  0023D4  0E01               	movlw	low __npowers_
  4507  0023D6  2415               	addwf	?___awdiv,w,c
  4508  0023D8  6EF6               	movwf	tblptrl,c
  4509  0023DA  0E08               	movlw	high __npowers_
  4510  0023DC  2016               	addwfc	?___awdiv+1,w,c
  4511  0023DE  6EF7               	movwf	tblptrh,c
  4512  0023E0                     	if	0	;There are less than 3 active tblptr bytes
  4513  0023E0                     	endif
  4514  0023E0  0009               	tblrd		*+
  4515  0023E2  CFF5 F021          	movff	tablat,___flmul@a
  4516  0023E6  0009               	tblrd		*+
  4517  0023E8  CFF5 F022          	movff	tablat,___flmul@a+1
  4518  0023EC  0009               	tblrd		*+
  4519  0023EE  CFF5 F023          	movff	tablat,___flmul@a+2
  4520  0023F2  000A               	tblrd		*-
  4521  0023F4  CFF5 F024          	movff	tablat,___flmul@a+3
  4522  0023F8  0E00               	movlw	0
  4523  0023FA  6E18               	movwf	___awdiv@divisor+1,c
  4524  0023FC  0E64               	movlw	100
  4525  0023FE  6E17               	movwf	___awdiv@divisor,c
  4526  002400  C042  F015         	movff	fround@prec,___awdiv@dividend
  4527  002404  6A16               	clrf	___awdiv@dividend+1,c
  4528  002406  EC01  F01A         	call	___awdiv	;wreg free
  4529  00240A  90D8               	bcf	status,0,c
  4530  00240C  3615               	rlcf	?___awdiv,f,c
  4531  00240E  3616               	rlcf	?___awdiv+1,f,c
  4532  002410  90D8               	bcf	status,0,c
  4533  002412  3615               	rlcf	?___awdiv,f,c
  4534  002414  3616               	rlcf	?___awdiv+1,f,c
  4535  002416  0E48               	movlw	72
  4536  002418  2615               	addwf	?___awdiv,f,c
  4537  00241A  0E00               	movlw	0
  4538  00241C  2216               	addwfc	?___awdiv+1,f,c
  4539  00241E  0E01               	movlw	low __npowers_
  4540  002420  2415               	addwf	?___awdiv,w,c
  4541  002422  6EF6               	movwf	tblptrl,c
  4542  002424  0E08               	movlw	high __npowers_
  4543  002426  2016               	addwfc	?___awdiv+1,w,c
  4544  002428  6EF7               	movwf	tblptrh,c
  4545  00242A                     	if	0	;There are less than 3 active tblptr bytes
  4546  00242A                     	endif
  4547  00242A  0009               	tblrd		*+
  4548  00242C  CFF5 F01D          	movff	tablat,___flmul@b
  4549  002430  0009               	tblrd		*+
  4550  002432  CFF5 F01E          	movff	tablat,___flmul@b+1
  4551  002436  0009               	tblrd		*+
  4552  002438  CFF5 F01F          	movff	tablat,___flmul@b+2
  4553  00243C  000A               	tblrd		*-
  4554  00243E  CFF5 F020          	movff	tablat,___flmul@b+3
  4555  002442  ECFD  F00C         	call	___flmul	;wreg free
  4556  002446  C01D  F03E         	movff	?___flmul,_fround$1353
  4557  00244A  C01E  F03F         	movff	?___flmul+1,_fround$1353+1
  4558  00244E  C01F  F040         	movff	?___flmul+2,_fround$1353+2
  4559  002452  C020  F041         	movff	?___flmul+3,_fround$1353+3
  4560                           
  4561                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  4562  002456  0E00               	movlw	0
  4563  002458  6E12               	movwf	___awmod@divisor+1,c
  4564  00245A  0E0A               	movlw	10
  4565  00245C  6E11               	movwf	___awmod@divisor,c
  4566  00245E  C042  F00F         	movff	fround@prec,___awmod@dividend
  4567  002462  6A10               	clrf	___awmod@dividend+1,c
  4568  002464  EC84  F01A         	call	___awmod	;wreg free
  4569  002468  90D8               	bcf	status,0,c
  4570  00246A  360F               	rlcf	?___awmod,f,c
  4571  00246C  3610               	rlcf	?___awmod+1,f,c
  4572  00246E  90D8               	bcf	status,0,c
  4573  002470  360F               	rlcf	?___awmod,f,c
  4574  002472  3610               	rlcf	?___awmod+1,f,c
  4575  002474  0E01               	movlw	low __npowers_
  4576  002476  240F               	addwf	?___awmod,w,c
  4577  002478  6EF6               	movwf	tblptrl,c
  4578  00247A  0E08               	movlw	high __npowers_
  4579  00247C  2010               	addwfc	?___awmod+1,w,c
  4580  00247E  6EF7               	movwf	tblptrh,c
  4581  002480                     	if	0	;There are less than 3 active tblptr bytes
  4582  002480                     	endif
  4583  002480  0009               	tblrd		*+
  4584  002482  CFF5 F021          	movff	tablat,___flmul@a
  4585  002486  0009               	tblrd		*+
  4586  002488  CFF5 F022          	movff	tablat,___flmul@a+1
  4587  00248C  0009               	tblrd		*+
  4588  00248E  CFF5 F023          	movff	tablat,___flmul@a+2
  4589  002492  000A               	tblrd		*-
  4590  002494  CFF5 F024          	movff	tablat,___flmul@a+3
  4591  002498  C03E  F01D         	movff	_fround$1353,___flmul@b
  4592  00249C  C03F  F01E         	movff	_fround$1353+1,___flmul@b+1
  4593  0024A0  C040  F01F         	movff	_fround$1353+2,___flmul@b+2
  4594  0024A4  C041  F020         	movff	_fround$1353+3,___flmul@b+3
  4595  0024A8  ECFD  F00C         	call	___flmul	;wreg free
  4596  0024AC  C01D  F03A         	movff	?___flmul,_fround$1354
  4597  0024B0  C01E  F03B         	movff	?___flmul+1,_fround$1354+1
  4598  0024B4  C01F  F03C         	movff	?___flmul+2,_fround$1354+2
  4599  0024B8  C020  F03D         	movff	?___flmul+3,_fround$1354+3
  4600                           
  4601                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  4602  0024BC  C03A  F01D         	movff	_fround$1354,___flmul@b
  4603  0024C0  C03B  F01E         	movff	_fround$1354+1,___flmul@b+1
  4604  0024C4  C03C  F01F         	movff	_fround$1354+2,___flmul@b+2
  4605  0024C8  C03D  F020         	movff	_fround$1354+3,___flmul@b+3
  4606  0024CC  0E00               	movlw	0
  4607  0024CE  6E21               	movwf	___flmul@a,c
  4608  0024D0  0E00               	movlw	0
  4609  0024D2  6E22               	movwf	___flmul@a+1,c
  4610  0024D4  0E00               	movlw	0
  4611  0024D6  6E23               	movwf	___flmul@a+2,c
  4612  0024D8  0E3F               	movlw	63
  4613  0024DA  6E24               	movwf	___flmul@a+3,c
  4614  0024DC  ECFD  F00C         	call	___flmul	;wreg free
  4615  0024E0  C01D  F036         	movff	?___flmul,?_fround
  4616  0024E4  C01E  F037         	movff	?___flmul+1,?_fround+1
  4617  0024E8  C01F  F038         	movff	?___flmul+2,?_fround+2
  4618  0024EC  C020  F039         	movff	?___flmul+3,?_fround+3
  4619  0024F0  0012               	return	
  4620  0024F2                     l3114:
  4621                           
  4622                           ;doprnt.c: 415: else if(prec > 10)
  4623  0024F2  0E0A               	movlw	10
  4624  0024F4  6442               	cpfsgt	fround@prec,c
  4625  0024F6  D063               	goto	l3122
  4626                           
  4627                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  4628  0024F8  0E00               	movlw	0
  4629  0024FA  6E12               	movwf	___awmod@divisor+1,c
  4630  0024FC  0E0A               	movlw	10
  4631  0024FE  6E11               	movwf	___awmod@divisor,c
  4632  002500  C042  F00F         	movff	fround@prec,___awmod@dividend
  4633  002504  6A10               	clrf	___awmod@dividend+1,c
  4634  002506  EC84  F01A         	call	___awmod	;wreg free
  4635  00250A  90D8               	bcf	status,0,c
  4636  00250C  360F               	rlcf	?___awmod,f,c
  4637  00250E  3610               	rlcf	?___awmod+1,f,c
  4638  002510  90D8               	bcf	status,0,c
  4639  002512  360F               	rlcf	?___awmod,f,c
  4640  002514  3610               	rlcf	?___awmod+1,f,c
  4641  002516  0E01               	movlw	low __npowers_
  4642  002518  240F               	addwf	?___awmod,w,c
  4643  00251A  6EF6               	movwf	tblptrl,c
  4644  00251C  0E08               	movlw	high __npowers_
  4645  00251E  2010               	addwfc	?___awmod+1,w,c
  4646  002520  6EF7               	movwf	tblptrh,c
  4647  002522                     	if	0	;There are less than 3 active tblptr bytes
  4648  002522                     	endif
  4649  002522  0009               	tblrd		*+
  4650  002524  CFF5 F021          	movff	tablat,___flmul@a
  4651  002528  0009               	tblrd		*+
  4652  00252A  CFF5 F022          	movff	tablat,___flmul@a+1
  4653  00252E  0009               	tblrd		*+
  4654  002530  CFF5 F023          	movff	tablat,___flmul@a+2
  4655  002534  000A               	tblrd		*-
  4656  002536  CFF5 F024          	movff	tablat,___flmul@a+3
  4657  00253A  0E00               	movlw	0
  4658  00253C  6E18               	movwf	___awdiv@divisor+1,c
  4659  00253E  0E0A               	movlw	10
  4660  002540  6E17               	movwf	___awdiv@divisor,c
  4661  002542  C042  F015         	movff	fround@prec,___awdiv@dividend
  4662  002546  6A16               	clrf	___awdiv@dividend+1,c
  4663  002548  EC01  F01A         	call	___awdiv	;wreg free
  4664  00254C  90D8               	bcf	status,0,c
  4665  00254E  3615               	rlcf	?___awdiv,f,c
  4666  002550  3616               	rlcf	?___awdiv+1,f,c
  4667  002552  90D8               	bcf	status,0,c
  4668  002554  3615               	rlcf	?___awdiv,f,c
  4669  002556  3616               	rlcf	?___awdiv+1,f,c
  4670  002558  0E24               	movlw	36
  4671  00255A  2615               	addwf	?___awdiv,f,c
  4672  00255C  0E00               	movlw	0
  4673  00255E  2216               	addwfc	?___awdiv+1,f,c
  4674  002560  0E01               	movlw	low __npowers_
  4675  002562  2415               	addwf	?___awdiv,w,c
  4676  002564  6EF6               	movwf	tblptrl,c
  4677  002566  0E08               	movlw	high __npowers_
  4678  002568  2016               	addwfc	?___awdiv+1,w,c
  4679  00256A  6EF7               	movwf	tblptrh,c
  4680  00256C                     	if	0	;There are less than 3 active tblptr bytes
  4681  00256C                     	endif
  4682  00256C  0009               	tblrd		*+
  4683  00256E  CFF5 F01D          	movff	tablat,___flmul@b
  4684  002572  0009               	tblrd		*+
  4685  002574  CFF5 F01E          	movff	tablat,___flmul@b+1
  4686  002578  0009               	tblrd		*+
  4687  00257A  CFF5 F01F          	movff	tablat,___flmul@b+2
  4688  00257E  000A               	tblrd		*-
  4689  002580  CFF5 F020          	movff	tablat,___flmul@b+3
  4690  002584  ECFD  F00C         	call	___flmul	;wreg free
  4691  002588  C01D  F03E         	movff	?___flmul,_fround$1353
  4692  00258C  C01E  F03F         	movff	?___flmul+1,_fround$1353+1
  4693  002590  C01F  F040         	movff	?___flmul+2,_fround$1353+2
  4694  002594  C020  F041         	movff	?___flmul+3,_fround$1353+3
  4695                           
  4696                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  4697  002598  C03E  F01D         	movff	_fround$1353,___flmul@b
  4698  00259C  C03F  F01E         	movff	_fround$1353+1,___flmul@b+1
  4699  0025A0  C040  F01F         	movff	_fround$1353+2,___flmul@b+2
  4700  0025A4  C041  F020         	movff	_fround$1353+3,___flmul@b+3
  4701  0025A8  0E00               	movlw	0
  4702  0025AA  6E21               	movwf	___flmul@a,c
  4703  0025AC  0E00               	movlw	0
  4704  0025AE  6E22               	movwf	___flmul@a+1,c
  4705  0025B0  0E00               	movlw	0
  4706  0025B2  6E23               	movwf	___flmul@a+2,c
  4707  0025B4  0E3F               	movlw	63
  4708  0025B6  6E24               	movwf	___flmul@a+3,c
  4709  0025B8  ECFD  F00C         	call	___flmul	;wreg free
  4710  0025BC  D791               	goto	L6
  4711  0025BE                     l3122:
  4712                           
  4713                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  4714  0025BE  5042               	movf	fround@prec,w,c
  4715  0025C0  0D04               	mullw	4
  4716  0025C2  0E01               	movlw	low __npowers_
  4717  0025C4  24F3               	addwf	prodl,w,c
  4718  0025C6  6EF6               	movwf	tblptrl,c
  4719  0025C8  0E08               	movlw	high __npowers_
  4720  0025CA  20F4               	addwfc	prodh,w,c
  4721  0025CC  6EF7               	movwf	tblptrh,c
  4722  0025CE                     	if	0	;There are less than 3 active tblptr bytes
  4723  0025CE                     	endif
  4724  0025CE  0009               	tblrd		*+
  4725  0025D0  CFF5 F01D          	movff	tablat,___flmul@b
  4726  0025D4  0009               	tblrd		*+
  4727  0025D6  CFF5 F01E          	movff	tablat,___flmul@b+1
  4728  0025DA  0009               	tblrd		*+
  4729  0025DC  CFF5 F01F          	movff	tablat,___flmul@b+2
  4730  0025E0  000A               	tblrd		*-
  4731  0025E2  CFF5 F020          	movff	tablat,___flmul@b+3
  4732  0025E6  0E00               	movlw	0
  4733  0025E8  6E21               	movwf	___flmul@a,c
  4734  0025EA  0E00               	movlw	0
  4735  0025EC  6E22               	movwf	___flmul@a+1,c
  4736  0025EE  0E00               	movlw	0
  4737  0025F0  6E23               	movwf	___flmul@a+2,c
  4738  0025F2  0E3F               	movlw	63
  4739  0025F4  6E24               	movwf	___flmul@a+3,c
  4740  0025F6  ECFD  F00C         	call	___flmul	;wreg free
  4741  0025FA  C01D  F036         	movff	?___flmul,?_fround
  4742  0025FE  C01E  F037         	movff	?___flmul+1,?_fround+1
  4743  002602  C01F  F038         	movff	?___flmul+2,?_fround+2
  4744  002606  C020  F039         	movff	?___flmul+3,?_fround+3
  4745  00260A  0012               	return	
  4746  00260C                     __end_of_fround:
  4747                           	opt stack 0
  4748                           tblptru	equ	0xFF8
  4749                           tblptrh	equ	0xFF7
  4750                           tblptrl	equ	0xFF6
  4751                           tablat	equ	0xFF5
  4752                           prodh	equ	0xFF4
  4753                           prodl	equ	0xFF3
  4754                           intcon	equ	0xFF2
  4755                           postinc0	equ	0xFEE
  4756                           wreg	equ	0xFE8
  4757                           indf1	equ	0xFE7
  4758                           plusw1	equ	0xFE3
  4759                           fsr1h	equ	0xFE2
  4760                           fsr1l	equ	0xFE1
  4761                           indf2	equ	0xFDF
  4762                           postinc2	equ	0xFDE
  4763                           plusw2	equ	0xFDB
  4764                           fsr2h	equ	0xFDA
  4765                           fsr2l	equ	0xFD9
  4766                           status	equ	0xFD8
  4767                           
  4768 ;; *************** function ___awmod *****************
  4769 ;; Defined at:
  4770 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
  4771 ;; Parameters:    Size  Location     Type
  4772 ;;  dividend        2   14[COMRAM] int 
  4773 ;;  divisor         2   16[COMRAM] int 
  4774 ;; Auto vars:     Size  Location     Type
  4775 ;;  sign            1   19[COMRAM] unsigned char 
  4776 ;;  counter         1   18[COMRAM] unsigned char 
  4777 ;; Return value:  Size  Location     Type
  4778 ;;                  2   14[COMRAM] int 
  4779 ;; Registers used:
  4780 ;;		wreg, status,2, status,0
  4781 ;; Tracked objects:
  4782 ;;		On entry : 0/0
  4783 ;;		On exit  : 0/0
  4784 ;;		Unchanged: 0/0
  4785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4786 ;;      Params:         4       0       0       0       0       0       0       0       0
  4787 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4788 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4789 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4790 ;;Total ram usage:        6 bytes
  4791 ;; Hardware stack levels used:    1
  4792 ;; Hardware stack levels required when called:    1
  4793 ;; This function calls:
  4794 ;;		Nothing
  4795 ;; This function is called by:
  4796 ;;		_fround
  4797 ;;		_scale
  4798 ;; This function uses a non-reentrant model
  4799 ;;
  4800                           
  4801                           	psect	text13
  4802  003508                     __ptext13:
  4803                           	opt stack 0
  4804  003508                     ___awmod:
  4805                           	opt stack 26
  4806                           
  4807                           ;incstack = 0
  4808  003508  0E00               	movlw	0
  4809  00350A  6E14               	movwf	___awmod@sign,c
  4810  00350C  AE10               	btfss	___awmod@dividend+1,7,c
  4811  00350E  D006               	goto	l3022
  4812  003510  6C0F               	negf	___awmod@dividend,c
  4813  003512  1E10               	comf	___awmod@dividend+1,f,c
  4814  003514  B0D8               	btfsc	status,0,c
  4815  003516  2A10               	incf	___awmod@dividend+1,f,c
  4816  003518  0E01               	movlw	1
  4817  00351A  6E14               	movwf	___awmod@sign,c
  4818  00351C                     l3022:
  4819  00351C  AE12               	btfss	___awmod@divisor+1,7,c
  4820  00351E  D004               	goto	l3026
  4821  003520  6C11               	negf	___awmod@divisor,c
  4822  003522  1E12               	comf	___awmod@divisor+1,f,c
  4823  003524  B0D8               	btfsc	status,0,c
  4824  003526  2A12               	incf	___awmod@divisor+1,f,c
  4825  003528                     l3026:
  4826  003528  5011               	movf	___awmod@divisor,w,c
  4827  00352A  1012               	iorwf	___awmod@divisor+1,w,c
  4828  00352C  B4D8               	btfsc	status,2,c
  4829  00352E  D018               	goto	l3042
  4830  003530  0E01               	movlw	1
  4831  003532  6E13               	movwf	___awmod@counter,c
  4832  003534  D004               	goto	l3032
  4833  003536                     l3030:
  4834  003536  90D8               	bcf	status,0,c
  4835  003538  3611               	rlcf	___awmod@divisor,f,c
  4836  00353A  3612               	rlcf	___awmod@divisor+1,f,c
  4837  00353C  2A13               	incf	___awmod@counter,f,c
  4838  00353E                     l3032:
  4839  00353E  AE12               	btfss	___awmod@divisor+1,7,c
  4840  003540  D7FA               	goto	l3030
  4841  003542                     l3034:
  4842  003542  5011               	movf	___awmod@divisor,w,c
  4843  003544  5C0F               	subwf	___awmod@dividend,w,c
  4844  003546  5012               	movf	___awmod@divisor+1,w,c
  4845  003548  5810               	subwfb	___awmod@dividend+1,w,c
  4846  00354A  A0D8               	btfss	status,0,c
  4847  00354C  D004               	goto	l3038
  4848  00354E  5011               	movf	___awmod@divisor,w,c
  4849  003550  5E0F               	subwf	___awmod@dividend,f,c
  4850  003552  5012               	movf	___awmod@divisor+1,w,c
  4851  003554  5A10               	subwfb	___awmod@dividend+1,f,c
  4852  003556                     l3038:
  4853  003556  90D8               	bcf	status,0,c
  4854  003558  3212               	rrcf	___awmod@divisor+1,f,c
  4855  00355A  3211               	rrcf	___awmod@divisor,f,c
  4856  00355C  2E13               	decfsz	___awmod@counter,f,c
  4857  00355E  D7F1               	goto	l3034
  4858  003560                     l3042:
  4859  003560  5014               	movf	___awmod@sign,w,c
  4860  003562  B4D8               	btfsc	status,2,c
  4861  003564  D004               	goto	l3046
  4862  003566  6C0F               	negf	___awmod@dividend,c
  4863  003568  1E10               	comf	___awmod@dividend+1,f,c
  4864  00356A  B0D8               	btfsc	status,0,c
  4865  00356C  2A10               	incf	___awmod@dividend+1,f,c
  4866  00356E                     l3046:
  4867  00356E  C00F  F00F         	movff	___awmod@dividend,?___awmod
  4868  003572  C010  F010         	movff	___awmod@dividend+1,?___awmod+1
  4869  003576  0012               	return	
  4870  003578                     __end_of___awmod:
  4871                           	opt stack 0
  4872                           tblptru	equ	0xFF8
  4873                           tblptrh	equ	0xFF7
  4874                           tblptrl	equ	0xFF6
  4875                           tablat	equ	0xFF5
  4876                           prodh	equ	0xFF4
  4877                           prodl	equ	0xFF3
  4878                           intcon	equ	0xFF2
  4879                           postinc0	equ	0xFEE
  4880                           wreg	equ	0xFE8
  4881                           indf1	equ	0xFE7
  4882                           plusw1	equ	0xFE3
  4883                           fsr1h	equ	0xFE2
  4884                           fsr1l	equ	0xFE1
  4885                           indf2	equ	0xFDF
  4886                           postinc2	equ	0xFDE
  4887                           plusw2	equ	0xFDB
  4888                           fsr2h	equ	0xFDA
  4889                           fsr2l	equ	0xFD9
  4890                           status	equ	0xFD8
  4891                           
  4892 ;; *************** function ___awdiv *****************
  4893 ;; Defined at:
  4894 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  4895 ;; Parameters:    Size  Location     Type
  4896 ;;  dividend        2   20[COMRAM] int 
  4897 ;;  divisor         2   22[COMRAM] int 
  4898 ;; Auto vars:     Size  Location     Type
  4899 ;;  quotient        2   26[COMRAM] int 
  4900 ;;  sign            1   25[COMRAM] unsigned char 
  4901 ;;  counter         1   24[COMRAM] unsigned char 
  4902 ;; Return value:  Size  Location     Type
  4903 ;;                  2   20[COMRAM] int 
  4904 ;; Registers used:
  4905 ;;		wreg, status,2, status,0
  4906 ;; Tracked objects:
  4907 ;;		On entry : 0/0
  4908 ;;		On exit  : 0/0
  4909 ;;		Unchanged: 0/0
  4910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4911 ;;      Params:         4       0       0       0       0       0       0       0       0
  4912 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4913 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4914 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4915 ;;Total ram usage:        8 bytes
  4916 ;; Hardware stack levels used:    1
  4917 ;; Hardware stack levels required when called:    1
  4918 ;; This function calls:
  4919 ;;		Nothing
  4920 ;; This function is called by:
  4921 ;;		_fround
  4922 ;;		_scale
  4923 ;;		_sprintf
  4924 ;; This function uses a non-reentrant model
  4925 ;;
  4926                           
  4927                           	psect	text14
  4928  003402                     __ptext14:
  4929                           	opt stack 0
  4930  003402                     ___awdiv:
  4931                           	opt stack 26
  4932                           
  4933                           ;incstack = 0
  4934  003402  0E00               	movlw	0
  4935  003404  6E1A               	movwf	___awdiv@sign,c
  4936  003406  AE18               	btfss	___awdiv@divisor+1,7,c
  4937  003408  D006               	goto	l2978
  4938  00340A  6C17               	negf	___awdiv@divisor,c
  4939  00340C  1E18               	comf	___awdiv@divisor+1,f,c
  4940  00340E  B0D8               	btfsc	status,0,c
  4941  003410  2A18               	incf	___awdiv@divisor+1,f,c
  4942  003412  0E01               	movlw	1
  4943  003414  6E1A               	movwf	___awdiv@sign,c
  4944  003416                     l2978:
  4945  003416  AE16               	btfss	___awdiv@dividend+1,7,c
  4946  003418  D006               	goto	l2984
  4947  00341A  6C15               	negf	___awdiv@dividend,c
  4948  00341C  1E16               	comf	___awdiv@dividend+1,f,c
  4949  00341E  B0D8               	btfsc	status,0,c
  4950  003420  2A16               	incf	___awdiv@dividend+1,f,c
  4951  003422  0E01               	movlw	1
  4952  003424  1A1A               	xorwf	___awdiv@sign,f,c
  4953  003426                     l2984:
  4954  003426  0E00               	movlw	0
  4955  003428  6E1C               	movwf	___awdiv@quotient+1,c
  4956  00342A  0E00               	movlw	0
  4957  00342C  6E1B               	movwf	___awdiv@quotient,c
  4958  00342E  5017               	movf	___awdiv@divisor,w,c
  4959  003430  1018               	iorwf	___awdiv@divisor+1,w,c
  4960  003432  B4D8               	btfsc	status,2,c
  4961  003434  D01C               	goto	l3006
  4962  003436  0E01               	movlw	1
  4963  003438  6E19               	movwf	___awdiv@counter,c
  4964  00343A  D004               	goto	l2992
  4965  00343C                     l2990:
  4966  00343C  90D8               	bcf	status,0,c
  4967  00343E  3617               	rlcf	___awdiv@divisor,f,c
  4968  003440  3618               	rlcf	___awdiv@divisor+1,f,c
  4969  003442  2A19               	incf	___awdiv@counter,f,c
  4970  003444                     l2992:
  4971  003444  AE18               	btfss	___awdiv@divisor+1,7,c
  4972  003446  D7FA               	goto	l2990
  4973  003448                     l2994:
  4974  003448  90D8               	bcf	status,0,c
  4975  00344A  361B               	rlcf	___awdiv@quotient,f,c
  4976  00344C  361C               	rlcf	___awdiv@quotient+1,f,c
  4977  00344E  5017               	movf	___awdiv@divisor,w,c
  4978  003450  5C15               	subwf	___awdiv@dividend,w,c
  4979  003452  5018               	movf	___awdiv@divisor+1,w,c
  4980  003454  5816               	subwfb	___awdiv@dividend+1,w,c
  4981  003456  A0D8               	btfss	status,0,c
  4982  003458  D005               	goto	l3002
  4983  00345A  5017               	movf	___awdiv@divisor,w,c
  4984  00345C  5E15               	subwf	___awdiv@dividend,f,c
  4985  00345E  5018               	movf	___awdiv@divisor+1,w,c
  4986  003460  5A16               	subwfb	___awdiv@dividend+1,f,c
  4987  003462  801B               	bsf	___awdiv@quotient,0,c
  4988  003464                     l3002:
  4989  003464  90D8               	bcf	status,0,c
  4990  003466  3218               	rrcf	___awdiv@divisor+1,f,c
  4991  003468  3217               	rrcf	___awdiv@divisor,f,c
  4992  00346A  2E19               	decfsz	___awdiv@counter,f,c
  4993  00346C  D7ED               	goto	l2994
  4994  00346E                     l3006:
  4995  00346E  501A               	movf	___awdiv@sign,w,c
  4996  003470  B4D8               	btfsc	status,2,c
  4997  003472  D004               	goto	l3010
  4998  003474  6C1B               	negf	___awdiv@quotient,c
  4999  003476  1E1C               	comf	___awdiv@quotient+1,f,c
  5000  003478  B0D8               	btfsc	status,0,c
  5001  00347A  2A1C               	incf	___awdiv@quotient+1,f,c
  5002  00347C                     l3010:
  5003  00347C  C01B  F015         	movff	___awdiv@quotient,?___awdiv
  5004  003480  C01C  F016         	movff	___awdiv@quotient+1,?___awdiv+1
  5005  003484  0012               	return	
  5006  003486                     __end_of___awdiv:
  5007                           	opt stack 0
  5008                           tblptru	equ	0xFF8
  5009                           tblptrh	equ	0xFF7
  5010                           tblptrl	equ	0xFF6
  5011                           tablat	equ	0xFF5
  5012                           prodh	equ	0xFF4
  5013                           prodl	equ	0xFF3
  5014                           intcon	equ	0xFF2
  5015                           postinc0	equ	0xFEE
  5016                           wreg	equ	0xFE8
  5017                           indf1	equ	0xFE7
  5018                           plusw1	equ	0xFE3
  5019                           fsr1h	equ	0xFE2
  5020                           fsr1l	equ	0xFE1
  5021                           indf2	equ	0xFDF
  5022                           postinc2	equ	0xFDE
  5023                           plusw2	equ	0xFDB
  5024                           fsr2h	equ	0xFDA
  5025                           fsr2l	equ	0xFD9
  5026                           status	equ	0xFD8
  5027                           
  5028 ;; *************** function __tdiv_to_l_ *****************
  5029 ;; Defined at:
  5030 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftdivl.c"
  5031 ;; Parameters:    Size  Location     Type
  5032 ;;  f1              4   14[COMRAM] float 
  5033 ;;  f2              4   18[COMRAM] float 
  5034 ;; Auto vars:     Size  Location     Type
  5035 ;;  quot            4   25[COMRAM] unsigned long 
  5036 ;;  exp1            1   30[COMRAM] unsigned char 
  5037 ;;  cntr            1   29[COMRAM] unsigned char 
  5038 ;; Return value:  Size  Location     Type
  5039 ;;                  4   14[COMRAM] unsigned long 
  5040 ;; Registers used:
  5041 ;;		wreg, status,2, status,0
  5042 ;; Tracked objects:
  5043 ;;		On entry : 0/0
  5044 ;;		On exit  : 0/0
  5045 ;;		Unchanged: 0/0
  5046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5047 ;;      Params:         8       0       0       0       0       0       0       0       0
  5048 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5049 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5050 ;;      Totals:        17       0       0       0       0       0       0       0       0
  5051 ;;Total ram usage:       17 bytes
  5052 ;; Hardware stack levels used:    1
  5053 ;; Hardware stack levels required when called:    1
  5054 ;; This function calls:
  5055 ;;		Nothing
  5056 ;; This function is called by:
  5057 ;;		_sprintf
  5058 ;; This function uses a non-reentrant model
  5059 ;;
  5060                           
  5061                           	psect	text15
  5062  002C50                     __ptext15:
  5063                           	opt stack 0
  5064  002C50                     __tdiv_to_l_:
  5065                           	opt stack 27
  5066                           
  5067                           ;incstack = 0
  5068  002C50  C011  F017         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  5069  002C54  6A18               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  5070  002C56  6A19               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  5071  002C58  3410               	rlcf	__tdiv_to_l_@f1+1,w,c
  5072  002C5A  3617               	rlcf	??__tdiv_to_l_& (0+255),f,c
  5073  002C5C  E301               	bnc	u3151
  5074  002C5E  8018               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  5075  002C60                     u3151:
  5076  002C60  5017               	movf	??__tdiv_to_l_,w,c
  5077  002C62  6E1F               	movwf	__tdiv_to_l_@exp1,c
  5078  002C64  501F               	movf	__tdiv_to_l_@exp1,w,c
  5079  002C66  A4D8               	btfss	status,2,c
  5080  002C68  D009               	goto	l3182
  5081  002C6A  0E00               	movlw	0
  5082  002C6C  6E0F               	movwf	?__tdiv_to_l_,c
  5083  002C6E  0E00               	movlw	0
  5084  002C70  6E10               	movwf	?__tdiv_to_l_+1,c
  5085  002C72  0E00               	movlw	0
  5086  002C74  6E11               	movwf	?__tdiv_to_l_+2,c
  5087  002C76  0E00               	movlw	0
  5088  002C78  6E12               	movwf	?__tdiv_to_l_+3,c
  5089  002C7A  0012               	return	
  5090  002C7C                     l3182:
  5091  002C7C  C015  F017         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  5092  002C80  6A18               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  5093  002C82  6A19               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  5094  002C84  3414               	rlcf	__tdiv_to_l_@f2+1,w,c
  5095  002C86  3617               	rlcf	??__tdiv_to_l_& (0+255),f,c
  5096  002C88  E301               	bnc	u3171
  5097  002C8A  8018               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  5098  002C8C                     u3171:
  5099  002C8C  5017               	movf	??__tdiv_to_l_,w,c
  5100  002C8E  6E1E               	movwf	__tdiv_to_l_@cntr,c
  5101  002C90  501E               	movf	__tdiv_to_l_@cntr,w,c
  5102  002C92  A4D8               	btfss	status,2,c
  5103  002C94  D009               	goto	l3188
  5104  002C96  0E00               	movlw	0
  5105  002C98  6E0F               	movwf	?__tdiv_to_l_,c
  5106  002C9A  0E00               	movlw	0
  5107  002C9C  6E10               	movwf	?__tdiv_to_l_+1,c
  5108  002C9E  0E00               	movlw	0
  5109  002CA0  6E11               	movwf	?__tdiv_to_l_+2,c
  5110  002CA2  0E00               	movlw	0
  5111  002CA4  6E12               	movwf	?__tdiv_to_l_+3,c
  5112  002CA6  0012               	return	
  5113  002CA8                     l3188:
  5114  002CA8  8E10               	bsf	__tdiv_to_l_@f1+1,7,c
  5115  002CAA  0EFF               	movlw	255
  5116  002CAC  160F               	andwf	__tdiv_to_l_@f1,f,c
  5117  002CAE  0EFF               	movlw	255
  5118  002CB0  1610               	andwf	__tdiv_to_l_@f1+1,f,c
  5119  002CB2  0E00               	movlw	0
  5120  002CB4  1611               	andwf	__tdiv_to_l_@f1+2,f,c
  5121  002CB6  8E14               	bsf	__tdiv_to_l_@f2+1,7,c
  5122  002CB8  0EFF               	movlw	255
  5123  002CBA  1613               	andwf	__tdiv_to_l_@f2,f,c
  5124  002CBC  0EFF               	movlw	255
  5125  002CBE  1614               	andwf	__tdiv_to_l_@f2+1,f,c
  5126  002CC0  0E00               	movlw	0
  5127  002CC2  1615               	andwf	__tdiv_to_l_@f2+2,f,c
  5128  002CC4  0E00               	movlw	0
  5129  002CC6  6E1A               	movwf	__tdiv_to_l_@quot,c
  5130  002CC8  0E00               	movlw	0
  5131  002CCA  6E1B               	movwf	__tdiv_to_l_@quot+1,c
  5132  002CCC  0E00               	movlw	0
  5133  002CCE  6E1C               	movwf	__tdiv_to_l_@quot+2,c
  5134  002CD0  0E00               	movlw	0
  5135  002CD2  6E1D               	movwf	__tdiv_to_l_@quot+3,c
  5136  002CD4  0E7F               	movlw	127
  5137  002CD6  5E1F               	subwf	__tdiv_to_l_@exp1,f,c
  5138  002CD8  501E               	movf	__tdiv_to_l_@cntr,w,c
  5139  002CDA  0F98               	addlw	152
  5140  002CDC  5E1F               	subwf	__tdiv_to_l_@exp1,f,c
  5141  002CDE  0E18               	movlw	24
  5142  002CE0  6E1E               	movwf	__tdiv_to_l_@cntr,c
  5143  002CE2                     l612:
  5144  002CE2  90D8               	bcf	status,0,c
  5145  002CE4  361A               	rlcf	__tdiv_to_l_@quot,f,c
  5146  002CE6  361B               	rlcf	__tdiv_to_l_@quot+1,f,c
  5147  002CE8  361C               	rlcf	__tdiv_to_l_@quot+2,f,c
  5148  002CEA  361D               	rlcf	__tdiv_to_l_@quot+3,f,c
  5149  002CEC  5013               	movf	__tdiv_to_l_@f2,w,c
  5150  002CEE  5C0F               	subwf	__tdiv_to_l_@f1,w,c
  5151  002CF0  5014               	movf	__tdiv_to_l_@f2+1,w,c
  5152  002CF2  5810               	subwfb	__tdiv_to_l_@f1+1,w,c
  5153  002CF4  5015               	movf	__tdiv_to_l_@f2+2,w,c
  5154  002CF6  5811               	subwfb	__tdiv_to_l_@f1+2,w,c
  5155  002CF8  A0D8               	btfss	status,0,c
  5156  002CFA  D007               	goto	l613
  5157  002CFC  5013               	movf	__tdiv_to_l_@f2,w,c
  5158  002CFE  5E0F               	subwf	__tdiv_to_l_@f1,f,c
  5159  002D00  5014               	movf	__tdiv_to_l_@f2+1,w,c
  5160  002D02  5A10               	subwfb	__tdiv_to_l_@f1+1,f,c
  5161  002D04  5015               	movf	__tdiv_to_l_@f2+2,w,c
  5162  002D06  5A11               	subwfb	__tdiv_to_l_@f1+2,f,c
  5163  002D08  801A               	bsf	__tdiv_to_l_@quot,0,c
  5164  002D0A                     l613:
  5165  002D0A  90D8               	bcf	status,0,c
  5166  002D0C  360F               	rlcf	__tdiv_to_l_@f1,f,c
  5167  002D0E  3610               	rlcf	__tdiv_to_l_@f1+1,f,c
  5168  002D10  3611               	rlcf	__tdiv_to_l_@f1+2,f,c
  5169  002D12  2E1E               	decfsz	__tdiv_to_l_@cntr,f,c
  5170  002D14  D7E6               	goto	l612
  5171  002D16  AE1F               	btfss	__tdiv_to_l_@exp1,7,c
  5172  002D18  D016               	goto	l3222
  5173  002D1A  501F               	movf	__tdiv_to_l_@exp1,w,c
  5174  002D1C  0A80               	xorlw	128
  5175  002D1E  0F97               	addlw	151
  5176  002D20  B0D8               	btfsc	status,0,c
  5177  002D22  D009               	goto	l3218
  5178  002D24  0E00               	movlw	0
  5179  002D26  6E0F               	movwf	?__tdiv_to_l_,c
  5180  002D28  0E00               	movlw	0
  5181  002D2A  6E10               	movwf	?__tdiv_to_l_+1,c
  5182  002D2C  0E00               	movlw	0
  5183  002D2E  6E11               	movwf	?__tdiv_to_l_+2,c
  5184  002D30  0E00               	movlw	0
  5185  002D32  6E12               	movwf	?__tdiv_to_l_+3,c
  5186  002D34  0012               	return	
  5187  002D36                     l3218:
  5188  002D36  90D8               	bcf	status,0,c
  5189  002D38  321D               	rrcf	__tdiv_to_l_@quot+3,f,c
  5190  002D3A  321C               	rrcf	__tdiv_to_l_@quot+2,f,c
  5191  002D3C  321B               	rrcf	__tdiv_to_l_@quot+1,f,c
  5192  002D3E  321A               	rrcf	__tdiv_to_l_@quot,f,c
  5193  002D40  3E1F               	incfsz	__tdiv_to_l_@exp1,f,c
  5194  002D42  D7F9               	goto	l3218
  5195  002D44  D015               	goto	l619
  5196  002D46                     l3222:
  5197  002D46  0E17               	movlw	23
  5198  002D48  641F               	cpfsgt	__tdiv_to_l_@exp1,c
  5199  002D4A  D00F               	goto	l3230
  5200  002D4C  0E00               	movlw	0
  5201  002D4E  6E0F               	movwf	?__tdiv_to_l_,c
  5202  002D50  0E00               	movlw	0
  5203  002D52  6E10               	movwf	?__tdiv_to_l_+1,c
  5204  002D54  0E00               	movlw	0
  5205  002D56  6E11               	movwf	?__tdiv_to_l_+2,c
  5206  002D58  0E00               	movlw	0
  5207  002D5A  6E12               	movwf	?__tdiv_to_l_+3,c
  5208  002D5C  0012               	return	
  5209  002D5E                     l3228:
  5210  002D5E  90D8               	bcf	status,0,c
  5211  002D60  361A               	rlcf	__tdiv_to_l_@quot,f,c
  5212  002D62  361B               	rlcf	__tdiv_to_l_@quot+1,f,c
  5213  002D64  361C               	rlcf	__tdiv_to_l_@quot+2,f,c
  5214  002D66  361D               	rlcf	__tdiv_to_l_@quot+3,f,c
  5215  002D68  061F               	decf	__tdiv_to_l_@exp1,f,c
  5216  002D6A                     l3230:
  5217  002D6A  501F               	movf	__tdiv_to_l_@exp1,w,c
  5218  002D6C  A4D8               	btfss	status,2,c
  5219  002D6E  D7F7               	goto	l3228
  5220  002D70                     l619:
  5221  002D70  C01A  F00F         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  5222  002D74  C01B  F010         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  5223  002D78  C01C  F011         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  5224  002D7C  C01D  F012         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  5225  002D80  0012               	return		;funcret
  5226  002D82                     __end_of__tdiv_to_l_:
  5227                           	opt stack 0
  5228                           tblptru	equ	0xFF8
  5229                           tblptrh	equ	0xFF7
  5230                           tblptrl	equ	0xFF6
  5231                           tablat	equ	0xFF5
  5232                           prodh	equ	0xFF4
  5233                           prodl	equ	0xFF3
  5234                           intcon	equ	0xFF2
  5235                           postinc0	equ	0xFEE
  5236                           wreg	equ	0xFE8
  5237                           indf1	equ	0xFE7
  5238                           plusw1	equ	0xFE3
  5239                           fsr1h	equ	0xFE2
  5240                           fsr1l	equ	0xFE1
  5241                           indf2	equ	0xFDF
  5242                           postinc2	equ	0xFDE
  5243                           plusw2	equ	0xFDB
  5244                           fsr2h	equ	0xFDA
  5245                           fsr2l	equ	0xFD9
  5246                           status	equ	0xFD8
  5247                           
  5248 ;; *************** function __div_to_l_ *****************
  5249 ;; Defined at:
  5250 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fldivl.c"
  5251 ;; Parameters:    Size  Location     Type
  5252 ;;  f1              4   14[COMRAM] unsigned long 
  5253 ;;  f2              4   18[COMRAM] unsigned long 
  5254 ;; Auto vars:     Size  Location     Type
  5255 ;;  quot            4   22[COMRAM] unsigned long 
  5256 ;;  exp1            1   27[COMRAM] unsigned char 
  5257 ;;  cntr            1   26[COMRAM] unsigned char 
  5258 ;; Return value:  Size  Location     Type
  5259 ;;                  4   14[COMRAM] unsigned long 
  5260 ;; Registers used:
  5261 ;;		wreg, status,2, status,0
  5262 ;; Tracked objects:
  5263 ;;		On entry : 0/0
  5264 ;;		On exit  : 0/0
  5265 ;;		Unchanged: 0/0
  5266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5267 ;;      Params:         8       0       0       0       0       0       0       0       0
  5268 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5269 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5270 ;;      Totals:        14       0       0       0       0       0       0       0       0
  5271 ;;Total ram usage:       14 bytes
  5272 ;; Hardware stack levels used:    1
  5273 ;; Hardware stack levels required when called:    1
  5274 ;; This function calls:
  5275 ;;		Nothing
  5276 ;; This function is called by:
  5277 ;;		_sprintf
  5278 ;; This function uses a non-reentrant model
  5279 ;;
  5280                           
  5281                           	psect	text16
  5282  002D82                     __ptext16:
  5283                           	opt stack 0
  5284  002D82                     __div_to_l_:
  5285                           	opt stack 27
  5286                           
  5287                           ;incstack = 0
  5288  002D82  3411               	rlcf	__div_to_l_@f1+2,w,c
  5289  002D84  3412               	rlcf	__div_to_l_@f1+3,w,c
  5290  002D86  6E1C               	movwf	__div_to_l_@exp1,c
  5291  002D88  501C               	movf	__div_to_l_@exp1,w,c
  5292  002D8A  A4D8               	btfss	status,2,c
  5293  002D8C  D009               	goto	l3238
  5294  002D8E  0E00               	movlw	0
  5295  002D90  6E0F               	movwf	?__div_to_l_,c
  5296  002D92  0E00               	movlw	0
  5297  002D94  6E10               	movwf	?__div_to_l_+1,c
  5298  002D96  0E00               	movlw	0
  5299  002D98  6E11               	movwf	?__div_to_l_+2,c
  5300  002D9A  0E00               	movlw	0
  5301  002D9C  6E12               	movwf	?__div_to_l_+3,c
  5302  002D9E  0012               	return	
  5303  002DA0                     l3238:
  5304  002DA0  3415               	rlcf	__div_to_l_@f2+2,w,c
  5305  002DA2  3416               	rlcf	__div_to_l_@f2+3,w,c
  5306  002DA4  6E1B               	movwf	__div_to_l_@cntr,c
  5307  002DA6  501B               	movf	__div_to_l_@cntr,w,c
  5308  002DA8  A4D8               	btfss	status,2,c
  5309  002DAA  D009               	goto	l3244
  5310  002DAC  0E00               	movlw	0
  5311  002DAE  6E0F               	movwf	?__div_to_l_,c
  5312  002DB0  0E00               	movlw	0
  5313  002DB2  6E10               	movwf	?__div_to_l_+1,c
  5314  002DB4  0E00               	movlw	0
  5315  002DB6  6E11               	movwf	?__div_to_l_+2,c
  5316  002DB8  0E00               	movlw	0
  5317  002DBA  6E12               	movwf	?__div_to_l_+3,c
  5318  002DBC  0012               	return	
  5319  002DBE                     l3244:
  5320  002DBE  8E11               	bsf	__div_to_l_@f1+2,7,c
  5321  002DC0  0EFF               	movlw	255
  5322  002DC2  160F               	andwf	__div_to_l_@f1,f,c
  5323  002DC4  0EFF               	movlw	255
  5324  002DC6  1610               	andwf	__div_to_l_@f1+1,f,c
  5325  002DC8  0EFF               	movlw	255
  5326  002DCA  1611               	andwf	__div_to_l_@f1+2,f,c
  5327  002DCC  0E00               	movlw	0
  5328  002DCE  1612               	andwf	__div_to_l_@f1+3,f,c
  5329  002DD0  8E15               	bsf	__div_to_l_@f2+2,7,c
  5330  002DD2  0EFF               	movlw	255
  5331  002DD4  1613               	andwf	__div_to_l_@f2,f,c
  5332  002DD6  0EFF               	movlw	255
  5333  002DD8  1614               	andwf	__div_to_l_@f2+1,f,c
  5334  002DDA  0EFF               	movlw	255
  5335  002DDC  1615               	andwf	__div_to_l_@f2+2,f,c
  5336  002DDE  0E00               	movlw	0
  5337  002DE0  1616               	andwf	__div_to_l_@f2+3,f,c
  5338  002DE2  0E00               	movlw	0
  5339  002DE4  6E17               	movwf	__div_to_l_@quot,c
  5340  002DE6  0E00               	movlw	0
  5341  002DE8  6E18               	movwf	__div_to_l_@quot+1,c
  5342  002DEA  0E00               	movlw	0
  5343  002DEC  6E19               	movwf	__div_to_l_@quot+2,c
  5344  002DEE  0E00               	movlw	0
  5345  002DF0  6E1A               	movwf	__div_to_l_@quot+3,c
  5346  002DF2  0E7F               	movlw	127
  5347  002DF4  5E1C               	subwf	__div_to_l_@exp1,f,c
  5348  002DF6  501B               	movf	__div_to_l_@cntr,w,c
  5349  002DF8  0FA0               	addlw	160
  5350  002DFA  5E1C               	subwf	__div_to_l_@exp1,f,c
  5351  002DFC  0E20               	movlw	32
  5352  002DFE  6E1B               	movwf	__div_to_l_@cntr,c
  5353  002E00                     l3258:
  5354  002E00  90D8               	bcf	status,0,c
  5355  002E02  3617               	rlcf	__div_to_l_@quot,f,c
  5356  002E04  3618               	rlcf	__div_to_l_@quot+1,f,c
  5357  002E06  3619               	rlcf	__div_to_l_@quot+2,f,c
  5358  002E08  361A               	rlcf	__div_to_l_@quot+3,f,c
  5359  002E0A  5013               	movf	__div_to_l_@f2,w,c
  5360  002E0C  5C0F               	subwf	__div_to_l_@f1,w,c
  5361  002E0E  5014               	movf	__div_to_l_@f2+1,w,c
  5362  002E10  5810               	subwfb	__div_to_l_@f1+1,w,c
  5363  002E12  5015               	movf	__div_to_l_@f2+2,w,c
  5364  002E14  5811               	subwfb	__div_to_l_@f1+2,w,c
  5365  002E16  5016               	movf	__div_to_l_@f2+3,w,c
  5366  002E18  5812               	subwfb	__div_to_l_@f1+3,w,c
  5367  002E1A  A0D8               	btfss	status,0,c
  5368  002E1C  D009               	goto	l3266
  5369  002E1E  5013               	movf	__div_to_l_@f2,w,c
  5370  002E20  5E0F               	subwf	__div_to_l_@f1,f,c
  5371  002E22  5014               	movf	__div_to_l_@f2+1,w,c
  5372  002E24  5A10               	subwfb	__div_to_l_@f1+1,f,c
  5373  002E26  5015               	movf	__div_to_l_@f2+2,w,c
  5374  002E28  5A11               	subwfb	__div_to_l_@f1+2,f,c
  5375  002E2A  5016               	movf	__div_to_l_@f2+3,w,c
  5376  002E2C  5A12               	subwfb	__div_to_l_@f1+3,f,c
  5377  002E2E  8017               	bsf	__div_to_l_@quot,0,c
  5378  002E30                     l3266:
  5379  002E30  90D8               	bcf	status,0,c
  5380  002E32  360F               	rlcf	__div_to_l_@f1,f,c
  5381  002E34  3610               	rlcf	__div_to_l_@f1+1,f,c
  5382  002E36  3611               	rlcf	__div_to_l_@f1+2,f,c
  5383  002E38  3612               	rlcf	__div_to_l_@f1+3,f,c
  5384  002E3A  2E1B               	decfsz	__div_to_l_@cntr,f,c
  5385  002E3C  D7E1               	goto	l3258
  5386  002E3E  AE1C               	btfss	__div_to_l_@exp1,7,c
  5387  002E40  D016               	goto	l3282
  5388  002E42  501C               	movf	__div_to_l_@exp1,w,c
  5389  002E44  0A80               	xorlw	128
  5390  002E46  0F9F               	addlw	159
  5391  002E48  B0D8               	btfsc	status,0,c
  5392  002E4A  D009               	goto	l3278
  5393  002E4C  0E00               	movlw	0
  5394  002E4E  6E0F               	movwf	?__div_to_l_,c
  5395  002E50  0E00               	movlw	0
  5396  002E52  6E10               	movwf	?__div_to_l_+1,c
  5397  002E54  0E00               	movlw	0
  5398  002E56  6E11               	movwf	?__div_to_l_+2,c
  5399  002E58  0E00               	movlw	0
  5400  002E5A  6E12               	movwf	?__div_to_l_+3,c
  5401  002E5C  0012               	return	
  5402  002E5E                     l3278:
  5403  002E5E  90D8               	bcf	status,0,c
  5404  002E60  321A               	rrcf	__div_to_l_@quot+3,f,c
  5405  002E62  3219               	rrcf	__div_to_l_@quot+2,f,c
  5406  002E64  3218               	rrcf	__div_to_l_@quot+1,f,c
  5407  002E66  3217               	rrcf	__div_to_l_@quot,f,c
  5408  002E68  3E1C               	incfsz	__div_to_l_@exp1,f,c
  5409  002E6A  D7F9               	goto	l3278
  5410  002E6C  D015               	goto	l515
  5411  002E6E                     l3282:
  5412  002E6E  0E1F               	movlw	31
  5413  002E70  641C               	cpfsgt	__div_to_l_@exp1,c
  5414  002E72  D00F               	goto	l3290
  5415  002E74  0E00               	movlw	0
  5416  002E76  6E0F               	movwf	?__div_to_l_,c
  5417  002E78  0E00               	movlw	0
  5418  002E7A  6E10               	movwf	?__div_to_l_+1,c
  5419  002E7C  0E00               	movlw	0
  5420  002E7E  6E11               	movwf	?__div_to_l_+2,c
  5421  002E80  0E00               	movlw	0
  5422  002E82  6E12               	movwf	?__div_to_l_+3,c
  5423  002E84  0012               	return	
  5424  002E86                     l3288:
  5425  002E86  90D8               	bcf	status,0,c
  5426  002E88  3617               	rlcf	__div_to_l_@quot,f,c
  5427  002E8A  3618               	rlcf	__div_to_l_@quot+1,f,c
  5428  002E8C  3619               	rlcf	__div_to_l_@quot+2,f,c
  5429  002E8E  361A               	rlcf	__div_to_l_@quot+3,f,c
  5430  002E90  061C               	decf	__div_to_l_@exp1,f,c
  5431  002E92                     l3290:
  5432  002E92  501C               	movf	__div_to_l_@exp1,w,c
  5433  002E94  A4D8               	btfss	status,2,c
  5434  002E96  D7F7               	goto	l3288
  5435  002E98                     l515:
  5436  002E98  C017  F00F         	movff	__div_to_l_@quot,?__div_to_l_
  5437  002E9C  C018  F010         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  5438  002EA0  C019  F011         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  5439  002EA4  C01A  F012         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  5440  002EA8  0012               	return		;funcret
  5441  002EAA                     __end_of__div_to_l_:
  5442                           	opt stack 0
  5443                           tblptru	equ	0xFF8
  5444                           tblptrh	equ	0xFF7
  5445                           tblptrl	equ	0xFF6
  5446                           tablat	equ	0xFF5
  5447                           prodh	equ	0xFF4
  5448                           prodl	equ	0xFF3
  5449                           intcon	equ	0xFF2
  5450                           postinc0	equ	0xFEE
  5451                           wreg	equ	0xFE8
  5452                           indf1	equ	0xFE7
  5453                           plusw1	equ	0xFE3
  5454                           fsr1h	equ	0xFE2
  5455                           fsr1l	equ	0xFE1
  5456                           indf2	equ	0xFDF
  5457                           postinc2	equ	0xFDE
  5458                           plusw2	equ	0xFDB
  5459                           fsr2h	equ	0xFDA
  5460                           fsr2l	equ	0xFD9
  5461                           status	equ	0xFD8
  5462                           
  5463 ;; *************** function ___llmod *****************
  5464 ;; Defined at:
  5465 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\llmod.c"
  5466 ;; Parameters:    Size  Location     Type
  5467 ;;  dividend        4   14[COMRAM] unsigned long 
  5468 ;;  divisor         4   18[COMRAM] unsigned long 
  5469 ;; Auto vars:     Size  Location     Type
  5470 ;;  counter         1   22[COMRAM] unsigned char 
  5471 ;; Return value:  Size  Location     Type
  5472 ;;                  4   14[COMRAM] unsigned long 
  5473 ;; Registers used:
  5474 ;;		wreg, status,2, status,0
  5475 ;; Tracked objects:
  5476 ;;		On entry : 0/0
  5477 ;;		On exit  : 0/0
  5478 ;;		Unchanged: 0/0
  5479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5480 ;;      Params:         8       0       0       0       0       0       0       0       0
  5481 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5482 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5483 ;;      Totals:         9       0       0       0       0       0       0       0       0
  5484 ;;Total ram usage:        9 bytes
  5485 ;; Hardware stack levels used:    1
  5486 ;; Hardware stack levels required when called:    1
  5487 ;; This function calls:
  5488 ;;		Nothing
  5489 ;; This function is called by:
  5490 ;;		_sprintf
  5491 ;; This function uses a non-reentrant model
  5492 ;;
  5493                           
  5494                           	psect	text17
  5495  0035E8                     __ptext17:
  5496                           	opt stack 0
  5497  0035E8                     ___llmod:
  5498                           	opt stack 27
  5499                           
  5500                           ;incstack = 0
  5501  0035E8  5013               	movf	___llmod@divisor,w,c
  5502  0035EA  1014               	iorwf	___llmod@divisor+1,w,c
  5503  0035EC  1015               	iorwf	___llmod@divisor+2,w,c
  5504  0035EE  1016               	iorwf	___llmod@divisor+3,w,c
  5505  0035F0  B4D8               	btfsc	status,2,c
  5506  0035F2  D024               	goto	l718
  5507  0035F4  0E01               	movlw	1
  5508  0035F6  6E17               	movwf	___llmod@counter,c
  5509  0035F8  D006               	goto	l3536
  5510  0035FA                     l3534:
  5511  0035FA  90D8               	bcf	status,0,c
  5512  0035FC  3613               	rlcf	___llmod@divisor,f,c
  5513  0035FE  3614               	rlcf	___llmod@divisor+1,f,c
  5514  003600  3615               	rlcf	___llmod@divisor+2,f,c
  5515  003602  3616               	rlcf	___llmod@divisor+3,f,c
  5516  003604  2A17               	incf	___llmod@counter,f,c
  5517  003606                     l3536:
  5518  003606  AE16               	btfss	___llmod@divisor+3,7,c
  5519  003608  D7F8               	goto	l3534
  5520  00360A                     l3538:
  5521  00360A  5013               	movf	___llmod@divisor,w,c
  5522  00360C  5C0F               	subwf	___llmod@dividend,w,c
  5523  00360E  5014               	movf	___llmod@divisor+1,w,c
  5524  003610  5810               	subwfb	___llmod@dividend+1,w,c
  5525  003612  5015               	movf	___llmod@divisor+2,w,c
  5526  003614  5811               	subwfb	___llmod@dividend+2,w,c
  5527  003616  5016               	movf	___llmod@divisor+3,w,c
  5528  003618  5812               	subwfb	___llmod@dividend+3,w,c
  5529  00361A  A0D8               	btfss	status,0,c
  5530  00361C  D008               	goto	l3542
  5531  00361E  5013               	movf	___llmod@divisor,w,c
  5532  003620  5E0F               	subwf	___llmod@dividend,f,c
  5533  003622  5014               	movf	___llmod@divisor+1,w,c
  5534  003624  5A10               	subwfb	___llmod@dividend+1,f,c
  5535  003626  5015               	movf	___llmod@divisor+2,w,c
  5536  003628  5A11               	subwfb	___llmod@dividend+2,f,c
  5537  00362A  5016               	movf	___llmod@divisor+3,w,c
  5538  00362C  5A12               	subwfb	___llmod@dividend+3,f,c
  5539  00362E                     l3542:
  5540  00362E  90D8               	bcf	status,0,c
  5541  003630  3216               	rrcf	___llmod@divisor+3,f,c
  5542  003632  3215               	rrcf	___llmod@divisor+2,f,c
  5543  003634  3214               	rrcf	___llmod@divisor+1,f,c
  5544  003636  3213               	rrcf	___llmod@divisor,f,c
  5545  003638  2E17               	decfsz	___llmod@counter,f,c
  5546  00363A  D7E7               	goto	l3538
  5547  00363C                     l718:
  5548  00363C  C00F  F00F         	movff	___llmod@dividend,?___llmod
  5549  003640  C010  F010         	movff	___llmod@dividend+1,?___llmod+1
  5550  003644  C011  F011         	movff	___llmod@dividend+2,?___llmod+2
  5551  003648  C012  F012         	movff	___llmod@dividend+3,?___llmod+3
  5552  00364C  0012               	return		;funcret
  5553  00364E                     __end_of___llmod:
  5554                           	opt stack 0
  5555                           tblptru	equ	0xFF8
  5556                           tblptrh	equ	0xFF7
  5557                           tblptrl	equ	0xFF6
  5558                           tablat	equ	0xFF5
  5559                           prodh	equ	0xFF4
  5560                           prodl	equ	0xFF3
  5561                           intcon	equ	0xFF2
  5562                           postinc0	equ	0xFEE
  5563                           wreg	equ	0xFE8
  5564                           indf1	equ	0xFE7
  5565                           plusw1	equ	0xFE3
  5566                           fsr1h	equ	0xFE2
  5567                           fsr1l	equ	0xFE1
  5568                           indf2	equ	0xFDF
  5569                           postinc2	equ	0xFDE
  5570                           plusw2	equ	0xFDB
  5571                           fsr2h	equ	0xFDA
  5572                           fsr2l	equ	0xFD9
  5573                           status	equ	0xFD8
  5574                           
  5575 ;; *************** function ___lldiv *****************
  5576 ;; Defined at:
  5577 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
  5578 ;; Parameters:    Size  Location     Type
  5579 ;;  dividend        4   14[COMRAM] unsigned long 
  5580 ;;  divisor         4   18[COMRAM] unsigned long 
  5581 ;; Auto vars:     Size  Location     Type
  5582 ;;  quotient        4   22[COMRAM] unsigned long 
  5583 ;;  counter         1   26[COMRAM] unsigned char 
  5584 ;; Return value:  Size  Location     Type
  5585 ;;                  4   14[COMRAM] unsigned long 
  5586 ;; Registers used:
  5587 ;;		wreg, status,2, status,0
  5588 ;; Tracked objects:
  5589 ;;		On entry : 0/0
  5590 ;;		On exit  : 0/0
  5591 ;;		Unchanged: 0/0
  5592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5593 ;;      Params:         8       0       0       0       0       0       0       0       0
  5594 ;;      Locals:         5       0       0       0       0       0       0       0       0
  5595 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5596 ;;      Totals:        13       0       0       0       0       0       0       0       0
  5597 ;;Total ram usage:       13 bytes
  5598 ;; Hardware stack levels used:    1
  5599 ;; Hardware stack levels required when called:    1
  5600 ;; This function calls:
  5601 ;;		Nothing
  5602 ;; This function is called by:
  5603 ;;		_sprintf
  5604 ;; This function uses a non-reentrant model
  5605 ;;
  5606                           
  5607                           	psect	text18
  5608  003486                     __ptext18:
  5609                           	opt stack 0
  5610  003486                     ___lldiv:
  5611                           	opt stack 27
  5612                           
  5613                           ;incstack = 0
  5614  003486  0E00               	movlw	0
  5615  003488  6E17               	movwf	___lldiv@quotient,c
  5616  00348A  0E00               	movlw	0
  5617  00348C  6E18               	movwf	___lldiv@quotient+1,c
  5618  00348E  0E00               	movlw	0
  5619  003490  6E19               	movwf	___lldiv@quotient+2,c
  5620  003492  0E00               	movlw	0
  5621  003494  6E1A               	movwf	___lldiv@quotient+3,c
  5622  003496  5013               	movf	___lldiv@divisor,w,c
  5623  003498  1014               	iorwf	___lldiv@divisor+1,w,c
  5624  00349A  1015               	iorwf	___lldiv@divisor+2,w,c
  5625  00349C  1016               	iorwf	___lldiv@divisor+3,w,c
  5626  00349E  B4D8               	btfsc	status,2,c
  5627  0034A0  D02A               	goto	l708
  5628  0034A2  0E01               	movlw	1
  5629  0034A4  6E1B               	movwf	___lldiv@counter,c
  5630  0034A6  D006               	goto	l3516
  5631  0034A8                     l3514:
  5632  0034A8  90D8               	bcf	status,0,c
  5633  0034AA  3613               	rlcf	___lldiv@divisor,f,c
  5634  0034AC  3614               	rlcf	___lldiv@divisor+1,f,c
  5635  0034AE  3615               	rlcf	___lldiv@divisor+2,f,c
  5636  0034B0  3616               	rlcf	___lldiv@divisor+3,f,c
  5637  0034B2  2A1B               	incf	___lldiv@counter,f,c
  5638  0034B4                     l3516:
  5639  0034B4  AE16               	btfss	___lldiv@divisor+3,7,c
  5640  0034B6  D7F8               	goto	l3514
  5641  0034B8                     l3518:
  5642  0034B8  90D8               	bcf	status,0,c
  5643  0034BA  3617               	rlcf	___lldiv@quotient,f,c
  5644  0034BC  3618               	rlcf	___lldiv@quotient+1,f,c
  5645  0034BE  3619               	rlcf	___lldiv@quotient+2,f,c
  5646  0034C0  361A               	rlcf	___lldiv@quotient+3,f,c
  5647  0034C2  5013               	movf	___lldiv@divisor,w,c
  5648  0034C4  5C0F               	subwf	___lldiv@dividend,w,c
  5649  0034C6  5014               	movf	___lldiv@divisor+1,w,c
  5650  0034C8  5810               	subwfb	___lldiv@dividend+1,w,c
  5651  0034CA  5015               	movf	___lldiv@divisor+2,w,c
  5652  0034CC  5811               	subwfb	___lldiv@dividend+2,w,c
  5653  0034CE  5016               	movf	___lldiv@divisor+3,w,c
  5654  0034D0  5812               	subwfb	___lldiv@dividend+3,w,c
  5655  0034D2  A0D8               	btfss	status,0,c
  5656  0034D4  D009               	goto	l3526
  5657  0034D6  5013               	movf	___lldiv@divisor,w,c
  5658  0034D8  5E0F               	subwf	___lldiv@dividend,f,c
  5659  0034DA  5014               	movf	___lldiv@divisor+1,w,c
  5660  0034DC  5A10               	subwfb	___lldiv@dividend+1,f,c
  5661  0034DE  5015               	movf	___lldiv@divisor+2,w,c
  5662  0034E0  5A11               	subwfb	___lldiv@dividend+2,f,c
  5663  0034E2  5016               	movf	___lldiv@divisor+3,w,c
  5664  0034E4  5A12               	subwfb	___lldiv@dividend+3,f,c
  5665  0034E6  8017               	bsf	___lldiv@quotient,0,c
  5666  0034E8                     l3526:
  5667  0034E8  90D8               	bcf	status,0,c
  5668  0034EA  3216               	rrcf	___lldiv@divisor+3,f,c
  5669  0034EC  3215               	rrcf	___lldiv@divisor+2,f,c
  5670  0034EE  3214               	rrcf	___lldiv@divisor+1,f,c
  5671  0034F0  3213               	rrcf	___lldiv@divisor,f,c
  5672  0034F2  2E1B               	decfsz	___lldiv@counter,f,c
  5673  0034F4  D7E1               	goto	l3518
  5674  0034F6                     l708:
  5675  0034F6  C017  F00F         	movff	___lldiv@quotient,?___lldiv
  5676  0034FA  C018  F010         	movff	___lldiv@quotient+1,?___lldiv+1
  5677  0034FE  C019  F011         	movff	___lldiv@quotient+2,?___lldiv+2
  5678  003502  C01A  F012         	movff	___lldiv@quotient+3,?___lldiv+3
  5679  003506  0012               	return		;funcret
  5680  003508                     __end_of___lldiv:
  5681                           	opt stack 0
  5682                           tblptru	equ	0xFF8
  5683                           tblptrh	equ	0xFF7
  5684                           tblptrl	equ	0xFF6
  5685                           tablat	equ	0xFF5
  5686                           prodh	equ	0xFF4
  5687                           prodl	equ	0xFF3
  5688                           intcon	equ	0xFF2
  5689                           postinc0	equ	0xFEE
  5690                           wreg	equ	0xFE8
  5691                           indf1	equ	0xFE7
  5692                           plusw1	equ	0xFE3
  5693                           fsr1h	equ	0xFE2
  5694                           fsr1l	equ	0xFE1
  5695                           indf2	equ	0xFDF
  5696                           postinc2	equ	0xFDE
  5697                           plusw2	equ	0xFDB
  5698                           fsr2h	equ	0xFDA
  5699                           fsr2l	equ	0xFD9
  5700                           status	equ	0xFD8
  5701                           
  5702 ;; *************** function ___fltol *****************
  5703 ;; Defined at:
  5704 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fltol.c"
  5705 ;; Parameters:    Size  Location     Type
  5706 ;;  f1              4   62[COMRAM] unsigned long 
  5707 ;; Auto vars:     Size  Location     Type
  5708 ;;  exp1            1    5[BANK0 ] unsigned char 
  5709 ;;  sign1           1    4[BANK0 ] unsigned char 
  5710 ;; Return value:  Size  Location     Type
  5711 ;;                  4   62[COMRAM] long 
  5712 ;; Registers used:
  5713 ;;		wreg, status,2, status,0
  5714 ;; Tracked objects:
  5715 ;;		On entry : 0/0
  5716 ;;		On exit  : 0/0
  5717 ;;		Unchanged: 0/0
  5718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5719 ;;      Params:         4       0       0       0       0       0       0       0       0
  5720 ;;      Locals:         0       2       0       0       0       0       0       0       0
  5721 ;;      Temps:          0       4       0       0       0       0       0       0       0
  5722 ;;      Totals:         4       6       0       0       0       0       0       0       0
  5723 ;;Total ram usage:       10 bytes
  5724 ;; Hardware stack levels used:    1
  5725 ;; Hardware stack levels required when called:    1
  5726 ;; This function calls:
  5727 ;;		Nothing
  5728 ;; This function is called by:
  5729 ;;		_sprintf
  5730 ;; This function uses a non-reentrant model
  5731 ;;
  5732                           
  5733                           	psect	text19
  5734  0030E4                     __ptext19:
  5735                           	opt stack 0
  5736  0030E4                     ___fltol:
  5737                           	opt stack 27
  5738                           
  5739                           ;incstack = 0
  5740  0030E4  3441               	rlcf	___fltol@f1+2,w,c
  5741  0030E6  3442               	rlcf	___fltol@f1+3,w,c
  5742  0030E8  0100               	movlb	0	; () banked
  5743  0030EA  6F65               	movwf	___fltol@exp1& (0+255),b
  5744  0030EC  0100               	movlb	0	; () banked
  5745  0030EE  5165               	movf	___fltol@exp1& (0+255),w,b
  5746  0030F0  A4D8               	btfss	status,2,c
  5747  0030F2  D009               	goto	l4470
  5748                           
  5749                           ; BSR set to: 0
  5750  0030F4  0E00               	movlw	0
  5751  0030F6  6E3F               	movwf	?___fltol,c
  5752  0030F8  0E00               	movlw	0
  5753  0030FA  6E40               	movwf	?___fltol+1,c
  5754  0030FC  0E00               	movlw	0
  5755  0030FE  6E41               	movwf	?___fltol+2,c
  5756  003100  0E00               	movlw	0
  5757  003102  6E42               	movwf	?___fltol+3,c
  5758                           
  5759                           ; BSR set to: 0
  5760  003104  0012               	return	
  5761  003106                     l4470:
  5762                           
  5763                           ; BSR set to: 0
  5764  003106  C03F  F060         	movff	___fltol@f1,??___fltol
  5765  00310A  C040  F061         	movff	___fltol@f1+1,??___fltol+1
  5766  00310E  C041  F062         	movff	___fltol@f1+2,??___fltol+2
  5767  003112  C042  F063         	movff	___fltol@f1+3,??___fltol+3
  5768  003116  0E20               	movlw	32
  5769  003118  D006               	goto	u5010
  5770  00311A                     u5015:
  5771  00311A  0100               	movlb	0	; () banked
  5772  00311C  90D8               	bcf	status,0,c
  5773  00311E  3363               	rrcf	(??___fltol+3)& (0+255),f,b
  5774  003120  3362               	rrcf	(??___fltol+2)& (0+255),f,b
  5775  003122  3361               	rrcf	(??___fltol+1)& (0+255),f,b
  5776  003124  3360               	rrcf	??___fltol& (0+255),f,b
  5777  003126                     u5010:
  5778  003126  2EE8               	decfsz	wreg,f,c
  5779  003128  D7F8               	goto	u5015
  5780  00312A  0100               	movlb	0	; () banked
  5781  00312C  5160               	movf	??___fltol& (0+255),w,b
  5782  00312E  0100               	movlb	0	; () banked
  5783  003130  6F64               	movwf	___fltol@sign1& (0+255),b
  5784                           
  5785                           ; BSR set to: 0
  5786  003132  8E41               	bsf	___fltol@f1+2,7,c
  5787                           
  5788                           ; BSR set to: 0
  5789  003134  0EFF               	movlw	255
  5790  003136  163F               	andwf	___fltol@f1,f,c
  5791  003138  0EFF               	movlw	255
  5792  00313A  1640               	andwf	___fltol@f1+1,f,c
  5793  00313C  0EFF               	movlw	255
  5794  00313E  1641               	andwf	___fltol@f1+2,f,c
  5795  003140  0E00               	movlw	0
  5796  003142  1642               	andwf	___fltol@f1+3,f,c
  5797                           
  5798                           ; BSR set to: 0
  5799  003144  0E96               	movlw	150
  5800  003146  0100               	movlb	0	; () banked
  5801  003148  5F65               	subwf	___fltol@exp1& (0+255),f,b
  5802                           
  5803                           ; BSR set to: 0
  5804  00314A  0100               	movlb	0	; () banked
  5805  00314C  AF65               	btfss	___fltol@exp1& (0+255),7,b
  5806  00314E  D018               	goto	l4490
  5807                           
  5808                           ; BSR set to: 0
  5809  003150  0100               	movlb	0	; () banked
  5810  003152  5165               	movf	___fltol@exp1& (0+255),w,b
  5811  003154  0A80               	xorlw	128
  5812  003156  0F97               	addlw	151
  5813  003158  B0D8               	btfsc	status,0,c
  5814  00315A  D009               	goto	l4486
  5815                           
  5816                           ; BSR set to: 0
  5817  00315C  0E00               	movlw	0
  5818  00315E  6E3F               	movwf	?___fltol,c
  5819  003160  0E00               	movlw	0
  5820  003162  6E40               	movwf	?___fltol+1,c
  5821  003164  0E00               	movlw	0
  5822  003166  6E41               	movwf	?___fltol+2,c
  5823  003168  0E00               	movlw	0
  5824  00316A  6E42               	movwf	?___fltol+3,c
  5825                           
  5826                           ; BSR set to: 0
  5827  00316C  0012               	return	
  5828  00316E                     l4486:
  5829                           
  5830                           ; BSR set to: 0
  5831  00316E  90D8               	bcf	status,0,c
  5832  003170  3242               	rrcf	___fltol@f1+3,f,c
  5833  003172  3241               	rrcf	___fltol@f1+2,f,c
  5834  003174  3240               	rrcf	___fltol@f1+1,f,c
  5835  003176  323F               	rrcf	___fltol@f1,f,c
  5836                           
  5837                           ; BSR set to: 0
  5838  003178  0100               	movlb	0	; () banked
  5839  00317A  3F65               	incfsz	___fltol@exp1& (0+255),f,b
  5840  00317C  D7F8               	goto	l4486
  5841                           
  5842                           ; BSR set to: 0
  5843  00317E  D019               	goto	l4500
  5844  003180                     l4490:
  5845                           
  5846                           ; BSR set to: 0
  5847  003180  0E1F               	movlw	31
  5848  003182  0100               	movlb	0	; () banked
  5849  003184  6565               	cpfsgt	___fltol@exp1& (0+255),b
  5850  003186  D010               	goto	l4498
  5851                           
  5852                           ; BSR set to: 0
  5853  003188  0E00               	movlw	0
  5854  00318A  6E3F               	movwf	?___fltol,c
  5855  00318C  0E00               	movlw	0
  5856  00318E  6E40               	movwf	?___fltol+1,c
  5857  003190  0E00               	movlw	0
  5858  003192  6E41               	movwf	?___fltol+2,c
  5859  003194  0E00               	movlw	0
  5860  003196  6E42               	movwf	?___fltol+3,c
  5861                           
  5862                           ; BSR set to: 0
  5863  003198  0012               	return	
  5864  00319A                     l4496:
  5865                           
  5866                           ; BSR set to: 0
  5867  00319A  90D8               	bcf	status,0,c
  5868  00319C  363F               	rlcf	___fltol@f1,f,c
  5869  00319E  3640               	rlcf	___fltol@f1+1,f,c
  5870  0031A0  3641               	rlcf	___fltol@f1+2,f,c
  5871  0031A2  3642               	rlcf	___fltol@f1+3,f,c
  5872  0031A4  0100               	movlb	0	; () banked
  5873  0031A6  0765               	decf	___fltol@exp1& (0+255),f,b
  5874  0031A8                     l4498:
  5875                           
  5876                           ; BSR set to: 0
  5877  0031A8  0100               	movlb	0	; () banked
  5878  0031AA  5165               	movf	___fltol@exp1& (0+255),w,b
  5879  0031AC  0100               	movlb	0	; () banked
  5880  0031AE  A4D8               	btfss	status,2,c
  5881  0031B0  D7F4               	goto	l4496
  5882  0031B2                     l4500:
  5883                           
  5884                           ; BSR set to: 0
  5885  0031B2  0100               	movlb	0	; () banked
  5886  0031B4  5164               	movf	___fltol@sign1& (0+255),w,b
  5887  0031B6  0100               	movlb	0	; () banked
  5888  0031B8  B4D8               	btfsc	status,2,c
  5889  0031BA  D008               	goto	l4504
  5890                           
  5891                           ; BSR set to: 0
  5892  0031BC  1E42               	comf	___fltol@f1+3,f,c
  5893  0031BE  1E41               	comf	___fltol@f1+2,f,c
  5894  0031C0  1E40               	comf	___fltol@f1+1,f,c
  5895  0031C2  6C3F               	negf	___fltol@f1,c
  5896  0031C4  0E00               	movlw	0
  5897  0031C6  2240               	addwfc	___fltol@f1+1,f,c
  5898  0031C8  2241               	addwfc	___fltol@f1+2,f,c
  5899  0031CA  2242               	addwfc	___fltol@f1+3,f,c
  5900  0031CC                     l4504:
  5901                           
  5902                           ; BSR set to: 0
  5903  0031CC  C03F  F03F         	movff	___fltol@f1,?___fltol
  5904  0031D0  C040  F040         	movff	___fltol@f1+1,?___fltol+1
  5905  0031D4  C041  F041         	movff	___fltol@f1+2,?___fltol+2
  5906  0031D8  C042  F042         	movff	___fltol@f1+3,?___fltol+3
  5907  0031DC  0012               	return	
  5908  0031DE                     __end_of___fltol:
  5909                           	opt stack 0
  5910                           tblptru	equ	0xFF8
  5911                           tblptrh	equ	0xFF7
  5912                           tblptrl	equ	0xFF6
  5913                           tablat	equ	0xFF5
  5914                           prodh	equ	0xFF4
  5915                           prodl	equ	0xFF3
  5916                           intcon	equ	0xFF2
  5917                           postinc0	equ	0xFEE
  5918                           wreg	equ	0xFE8
  5919                           indf1	equ	0xFE7
  5920                           plusw1	equ	0xFE3
  5921                           fsr1h	equ	0xFE2
  5922                           fsr1l	equ	0xFE1
  5923                           indf2	equ	0xFDF
  5924                           postinc2	equ	0xFDE
  5925                           plusw2	equ	0xFDB
  5926                           fsr2h	equ	0xFDA
  5927                           fsr2l	equ	0xFD9
  5928                           status	equ	0xFD8
  5929                           
  5930 ;; *************** function ___flsub *****************
  5931 ;; Defined at:
  5932 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
  5933 ;; Parameters:    Size  Location     Type
  5934 ;;  b               4   20[BANK0 ] long 
  5935 ;;  a               4   24[BANK0 ] long 
  5936 ;; Auto vars:     Size  Location     Type
  5937 ;;		None
  5938 ;; Return value:  Size  Location     Type
  5939 ;;                  4   20[BANK0 ] long 
  5940 ;; Registers used:
  5941 ;;		wreg, status,2, status,0, cstack
  5942 ;; Tracked objects:
  5943 ;;		On entry : 0/0
  5944 ;;		On exit  : 0/0
  5945 ;;		Unchanged: 0/0
  5946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5947 ;;      Params:         0       8       0       0       0       0       0       0       0
  5948 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5949 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5950 ;;      Totals:         0       8       0       0       0       0       0       0       0
  5951 ;;Total ram usage:        8 bytes
  5952 ;; Hardware stack levels used:    1
  5953 ;; Hardware stack levels required when called:    2
  5954 ;; This function calls:
  5955 ;;		___fladd
  5956 ;; This function is called by:
  5957 ;;		_sprintf
  5958 ;; This function uses a non-reentrant model
  5959 ;;
  5960                           
  5961                           	psect	text20
  5962  0037B0                     __ptext20:
  5963                           	opt stack 0
  5964  0037B0                     ___flsub:
  5965                           	opt stack 26
  5966                           
  5967                           ; BSR set to: 0
  5968                           ;incstack = 0
  5969  0037B0  0E00               	movlw	0
  5970  0037B2  0100               	movlb	0	; () banked
  5971  0037B4  1B78               	xorwf	___flsub@a& (0+255),f,b
  5972  0037B6  0E00               	movlw	0
  5973  0037B8  1B79               	xorwf	(___flsub@a+1)& (0+255),f,b
  5974  0037BA  0E00               	movlw	0
  5975  0037BC  1B7A               	xorwf	(___flsub@a+2)& (0+255),f,b
  5976  0037BE  0E80               	movlw	128
  5977  0037C0  1B7B               	xorwf	(___flsub@a+3)& (0+255),f,b
  5978                           
  5979                           ; BSR set to: 0
  5980  0037C2  C074  F060         	movff	___flsub@b,___fladd@b
  5981  0037C6  C075  F061         	movff	___flsub@b+1,___fladd@b+1
  5982  0037CA  C076  F062         	movff	___flsub@b+2,___fladd@b+2
  5983  0037CE  C077  F063         	movff	___flsub@b+3,___fladd@b+3
  5984  0037D2  C078  F064         	movff	___flsub@a,___fladd@a
  5985  0037D6  C079  F065         	movff	___flsub@a+1,___fladd@a+1
  5986  0037DA  C07A  F066         	movff	___flsub@a+2,___fladd@a+2
  5987  0037DE  C07B  F067         	movff	___flsub@a+3,___fladd@a+3
  5988  0037E2  EC9D  F008         	call	___fladd	;wreg free
  5989  0037E6  C060  F074         	movff	?___fladd,?___flsub
  5990  0037EA  C061  F075         	movff	?___fladd+1,?___flsub+1
  5991  0037EE  C062  F076         	movff	?___fladd+2,?___flsub+2
  5992  0037F2  C063  F077         	movff	?___fladd+3,?___flsub+3
  5993  0037F6  0012               	return	
  5994  0037F8                     __end_of___flsub:
  5995                           	opt stack 0
  5996                           tblptru	equ	0xFF8
  5997                           tblptrh	equ	0xFF7
  5998                           tblptrl	equ	0xFF6
  5999                           tablat	equ	0xFF5
  6000                           prodh	equ	0xFF4
  6001                           prodl	equ	0xFF3
  6002                           intcon	equ	0xFF2
  6003                           postinc0	equ	0xFEE
  6004                           wreg	equ	0xFE8
  6005                           indf1	equ	0xFE7
  6006                           plusw1	equ	0xFE3
  6007                           fsr1h	equ	0xFE2
  6008                           fsr1l	equ	0xFE1
  6009                           indf2	equ	0xFDF
  6010                           postinc2	equ	0xFDE
  6011                           plusw2	equ	0xFDB
  6012                           fsr2h	equ	0xFDA
  6013                           fsr2l	equ	0xFD9
  6014                           status	equ	0xFD8
  6015                           
  6016 ;; *************** function ___fladd *****************
  6017 ;; Defined at:
  6018 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
  6019 ;; Parameters:    Size  Location     Type
  6020 ;;  b               4    0[BANK0 ] long 
  6021 ;;  a               4    4[BANK0 ] long 
  6022 ;; Auto vars:     Size  Location     Type
  6023 ;;  grs             1   19[BANK0 ] unsigned char 
  6024 ;;  bexp            1   18[BANK0 ] unsigned char 
  6025 ;;  aexp            1   17[BANK0 ] unsigned char 
  6026 ;;  signs           1   16[BANK0 ] unsigned char 
  6027 ;; Return value:  Size  Location     Type
  6028 ;;                  4    0[BANK0 ] unsigned char 
  6029 ;; Registers used:
  6030 ;;		wreg, status,2, status,0
  6031 ;; Tracked objects:
  6032 ;;		On entry : 0/0
  6033 ;;		On exit  : 0/0
  6034 ;;		Unchanged: 0/0
  6035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6036 ;;      Params:         0       8       0       0       0       0       0       0       0
  6037 ;;      Locals:         0       4       0       0       0       0       0       0       0
  6038 ;;      Temps:          0       8       0       0       0       0       0       0       0
  6039 ;;      Totals:         0      20       0       0       0       0       0       0       0
  6040 ;;Total ram usage:       20 bytes
  6041 ;; Hardware stack levels used:    1
  6042 ;; Hardware stack levels required when called:    1
  6043 ;; This function calls:
  6044 ;;		Nothing
  6045 ;; This function is called by:
  6046 ;;		_scarica
  6047 ;;		_sprintf
  6048 ;;		___flsub
  6049 ;; This function uses a non-reentrant model
  6050 ;;
  6051                           
  6052                           	psect	text21
  6053  00113A                     __ptext21:
  6054                           	opt stack 0
  6055  00113A                     ___fladd:
  6056                           	opt stack 26
  6057                           
  6058                           ;incstack = 0
  6059  00113A  0100               	movlb	0	; () banked
  6060  00113C  5163               	movf	(___fladd@b+3)& (0+255),w,b
  6061  00113E  0B80               	andlw	128
  6062  001140  0100               	movlb	0	; () banked
  6063  001142  6F70               	movwf	___fladd@signs& (0+255),b
  6064  001144  0100               	movlb	0	; () banked
  6065  001146  5163               	movf	(___fladd@b+3)& (0+255),w,b
  6066  001148  2563               	addwf	(___fladd@b+3)& (0+255),w,b
  6067  00114A  0100               	movlb	0	; () banked
  6068  00114C  6F72               	movwf	___fladd@bexp& (0+255),b
  6069                           
  6070                           ; BSR set to: 0
  6071  00114E  0100               	movlb	0	; () banked
  6072  001150  AF62               	btfss	(___fladd@b+2)& (0+255),7,b
  6073  001152  D002               	goto	l4126
  6074                           
  6075                           ; BSR set to: 0
  6076  001154  0100               	movlb	0	; () banked
  6077  001156  8172               	bsf	___fladd@bexp& (0+255),0,b
  6078  001158                     l4126:
  6079                           
  6080                           ; BSR set to: 0
  6081  001158  0100               	movlb	0	; () banked
  6082  00115A  5172               	movf	___fladd@bexp& (0+255),w,b
  6083  00115C  0100               	movlb	0	; () banked
  6084  00115E  B4D8               	btfsc	status,2,c
  6085  001160  D012               	goto	l4136
  6086                           
  6087                           ; BSR set to: 0
  6088  001162  0100               	movlb	0	; () banked
  6089  001164  2972               	incf	___fladd@bexp& (0+255),w,b
  6090  001166  A4D8               	btfss	status,2,c
  6091  001168  D009               	goto	l4132
  6092                           
  6093                           ; BSR set to: 0
  6094  00116A  0E00               	movlw	0
  6095  00116C  0100               	movlb	0	; () banked
  6096  00116E  6F60               	movwf	___fladd@b& (0+255),b
  6097  001170  0E00               	movlw	0
  6098  001172  6F61               	movwf	(___fladd@b+1)& (0+255),b
  6099  001174  0E00               	movlw	0
  6100  001176  6F62               	movwf	(___fladd@b+2)& (0+255),b
  6101  001178  0E00               	movlw	0
  6102  00117A  6F63               	movwf	(___fladd@b+3)& (0+255),b
  6103  00117C                     l4132:
  6104                           
  6105                           ; BSR set to: 0
  6106  00117C  0100               	movlb	0	; () banked
  6107  00117E  8F62               	bsf	(___fladd@b+2)& (0+255),7,b
  6108                           
  6109                           ; BSR set to: 0
  6110  001180  0E00               	movlw	0
  6111  001182  0100               	movlb	0	; () banked
  6112  001184  D008               	goto	L7
  6113  001186                     l4136:
  6114                           
  6115                           ; BSR set to: 0
  6116  001186  0E00               	movlw	0
  6117  001188  0100               	movlb	0	; () banked
  6118  00118A  6F60               	movwf	___fladd@b& (0+255),b
  6119  00118C  0E00               	movlw	0
  6120  00118E  6F61               	movwf	(___fladd@b+1)& (0+255),b
  6121  001190  0E00               	movlw	0
  6122  001192  6F62               	movwf	(___fladd@b+2)& (0+255),b
  6123  001194  0E00               	movlw	0
  6124  001196                     L7:
  6125  001196  6F63               	movwf	(___fladd@b+3)& (0+255),b
  6126                           
  6127                           ; BSR set to: 0
  6128                           
  6129                           ; BSR set to: 0
  6130  001198  0100               	movlb	0	; () banked
  6131  00119A  5167               	movf	(___fladd@a+3)& (0+255),w,b
  6132  00119C  0B80               	andlw	128
  6133  00119E  0100               	movlb	0	; () banked
  6134  0011A0  6F71               	movwf	___fladd@aexp& (0+255),b
  6135                           
  6136                           ; BSR set to: 0
  6137  0011A2  0100               	movlb	0	; () banked
  6138  0011A4  5170               	movf	___fladd@signs& (0+255),w,b
  6139  0011A6  0100               	movlb	0	; () banked
  6140  0011A8  1971               	xorwf	___fladd@aexp& (0+255),w,b
  6141  0011AA  B4D8               	btfsc	status,2,c
  6142  0011AC  D002               	goto	l4144
  6143                           
  6144                           ; BSR set to: 0
  6145  0011AE  0100               	movlb	0	; () banked
  6146  0011B0  8D70               	bsf	___fladd@signs& (0+255),6,b
  6147  0011B2                     l4144:
  6148                           
  6149                           ; BSR set to: 0
  6150  0011B2  0100               	movlb	0	; () banked
  6151  0011B4  5167               	movf	(___fladd@a+3)& (0+255),w,b
  6152  0011B6  2567               	addwf	(___fladd@a+3)& (0+255),w,b
  6153  0011B8  0100               	movlb	0	; () banked
  6154  0011BA  6F71               	movwf	___fladd@aexp& (0+255),b
  6155                           
  6156                           ; BSR set to: 0
  6157  0011BC  0100               	movlb	0	; () banked
  6158  0011BE  AF66               	btfss	(___fladd@a+2)& (0+255),7,b
  6159  0011C0  D002               	goto	l4150
  6160                           
  6161                           ; BSR set to: 0
  6162  0011C2  0100               	movlb	0	; () banked
  6163  0011C4  8171               	bsf	___fladd@aexp& (0+255),0,b
  6164  0011C6                     l4150:
  6165                           
  6166                           ; BSR set to: 0
  6167  0011C6  0100               	movlb	0	; () banked
  6168  0011C8  5171               	movf	___fladd@aexp& (0+255),w,b
  6169  0011CA  0100               	movlb	0	; () banked
  6170  0011CC  B4D8               	btfsc	status,2,c
  6171  0011CE  D012               	goto	l4160
  6172                           
  6173                           ; BSR set to: 0
  6174  0011D0  0100               	movlb	0	; () banked
  6175  0011D2  2971               	incf	___fladd@aexp& (0+255),w,b
  6176  0011D4  A4D8               	btfss	status,2,c
  6177  0011D6  D009               	goto	l4156
  6178                           
  6179                           ; BSR set to: 0
  6180  0011D8  0E00               	movlw	0
  6181  0011DA  0100               	movlb	0	; () banked
  6182  0011DC  6F64               	movwf	___fladd@a& (0+255),b
  6183  0011DE  0E00               	movlw	0
  6184  0011E0  6F65               	movwf	(___fladd@a+1)& (0+255),b
  6185  0011E2  0E00               	movlw	0
  6186  0011E4  6F66               	movwf	(___fladd@a+2)& (0+255),b
  6187  0011E6  0E00               	movlw	0
  6188  0011E8  6F67               	movwf	(___fladd@a+3)& (0+255),b
  6189  0011EA                     l4156:
  6190                           
  6191                           ; BSR set to: 0
  6192  0011EA  0100               	movlb	0	; () banked
  6193  0011EC  8F66               	bsf	(___fladd@a+2)& (0+255),7,b
  6194                           
  6195                           ; BSR set to: 0
  6196  0011EE  0E00               	movlw	0
  6197  0011F0  0100               	movlb	0	; () banked
  6198  0011F2  D008               	goto	L8
  6199  0011F4                     l4160:
  6200                           
  6201                           ; BSR set to: 0
  6202  0011F4  0E00               	movlw	0
  6203  0011F6  0100               	movlb	0	; () banked
  6204  0011F8  6F64               	movwf	___fladd@a& (0+255),b
  6205  0011FA  0E00               	movlw	0
  6206  0011FC  6F65               	movwf	(___fladd@a+1)& (0+255),b
  6207  0011FE  0E00               	movlw	0
  6208  001200  6F66               	movwf	(___fladd@a+2)& (0+255),b
  6209  001202  0E00               	movlw	0
  6210  001204                     L8:
  6211  001204  6F67               	movwf	(___fladd@a+3)& (0+255),b
  6212                           
  6213                           ; BSR set to: 0
  6214                           
  6215                           ; BSR set to: 0
  6216  001206  0100               	movlb	0	; () banked
  6217  001208  5172               	movf	___fladd@bexp& (0+255),w,b
  6218  00120A  0100               	movlb	0	; () banked
  6219  00120C  5D71               	subwf	___fladd@aexp& (0+255),w,b
  6220  00120E  B0D8               	btfsc	status,0,c
  6221  001210  D024               	goto	l4198
  6222                           
  6223                           ; BSR set to: 0
  6224  001212  0100               	movlb	0	; () banked
  6225  001214  AD70               	btfss	___fladd@signs& (0+255),6,b
  6226  001216  D003               	goto	l4168
  6227                           
  6228                           ; BSR set to: 0
  6229  001218  0E80               	movlw	128
  6230  00121A  0100               	movlb	0	; () banked
  6231  00121C  1B70               	xorwf	___fladd@signs& (0+255),f,b
  6232  00121E                     l4168:
  6233                           
  6234                           ; BSR set to: 0
  6235  00121E  C072  F073         	movff	___fladd@bexp,___fladd@grs
  6236                           
  6237                           ; BSR set to: 0
  6238  001222  C071  F072         	movff	___fladd@aexp,___fladd@bexp
  6239                           
  6240                           ; BSR set to: 0
  6241  001226  C073  F071         	movff	___fladd@grs,___fladd@aexp
  6242                           
  6243                           ; BSR set to: 0
  6244  00122A  C060  F073         	movff	___fladd@b,___fladd@grs
  6245                           
  6246                           ; BSR set to: 0
  6247  00122E  C064  F060         	movff	___fladd@a,___fladd@b
  6248                           
  6249                           ; BSR set to: 0
  6250  001232  C073  F064         	movff	___fladd@grs,___fladd@a
  6251                           
  6252                           ; BSR set to: 0
  6253  001236  C061  F073         	movff	___fladd@b+1,___fladd@grs
  6254                           
  6255                           ; BSR set to: 0
  6256  00123A  C065  F061         	movff	___fladd@a+1,___fladd@b+1
  6257                           
  6258                           ; BSR set to: 0
  6259  00123E  C073  F065         	movff	___fladd@grs,___fladd@a+1
  6260                           
  6261                           ; BSR set to: 0
  6262  001242  C062  F073         	movff	___fladd@b+2,___fladd@grs
  6263                           
  6264                           ; BSR set to: 0
  6265  001246  C066  F062         	movff	___fladd@a+2,___fladd@b+2
  6266                           
  6267                           ; BSR set to: 0
  6268  00124A  C073  F066         	movff	___fladd@grs,___fladd@a+2
  6269                           
  6270                           ; BSR set to: 0
  6271  00124E  C063  F073         	movff	___fladd@b+3,___fladd@grs
  6272                           
  6273                           ; BSR set to: 0
  6274  001252  C067  F063         	movff	___fladd@a+3,___fladd@b+3
  6275                           
  6276                           ; BSR set to: 0
  6277  001256  C073  F067         	movff	___fladd@grs,___fladd@a+3
  6278  00125A                     l4198:
  6279                           
  6280                           ; BSR set to: 0
  6281  00125A  0E00               	movlw	0
  6282  00125C  0100               	movlb	0	; () banked
  6283  00125E  6F73               	movwf	___fladd@grs& (0+255),b
  6284                           
  6285                           ; BSR set to: 0
  6286  001260  0100               	movlb	0	; () banked
  6287  001262  5172               	movf	___fladd@bexp& (0+255),w,b
  6288  001264  0100               	movlb	0	; () banked
  6289  001266  6F68               	movwf	??___fladd& (0+255),b
  6290  001268  6B69               	clrf	(??___fladd+1)& (0+255),b
  6291  00126A  0100               	movlb	0	; () banked
  6292  00126C  1F68               	comf	??___fladd& (0+255),f,b
  6293  00126E  1F69               	comf	(??___fladd+1)& (0+255),f,b
  6294  001270  4B68               	infsnz	??___fladd& (0+255),f,b
  6295  001272  2B69               	incf	(??___fladd+1)& (0+255),f,b
  6296  001274  0100               	movlb	0	; () banked
  6297  001276  5171               	movf	___fladd@aexp& (0+255),w,b
  6298  001278  0100               	movlb	0	; () banked
  6299  00127A  6F6A               	movwf	(??___fladd+2)& (0+255),b
  6300  00127C  6B6B               	clrf	(??___fladd+3)& (0+255),b
  6301  00127E  0100               	movlb	0	; () banked
  6302  001280  5168               	movf	??___fladd& (0+255),w,b
  6303  001282  0100               	movlb	0	; () banked
  6304  001284  276A               	addwf	(??___fladd+2)& (0+255),f,b
  6305  001286  0100               	movlb	0	; () banked
  6306  001288  5169               	movf	(??___fladd+1)& (0+255),w,b
  6307  00128A  0100               	movlb	0	; () banked
  6308  00128C  236B               	addwfc	(??___fladd+3)& (0+255),f,b
  6309  00128E  0100               	movlb	0	; () banked
  6310  001290  BF6B               	btfsc	(??___fladd+3)& (0+255),7,b
  6311  001292  D03D               	goto	l803
  6312  001294  0100               	movlb	0	; () banked
  6313  001296  516B               	movf	(??___fladd+3)& (0+255),w,b
  6314  001298  E105               	bnz	u4470
  6315  00129A  0E1A               	movlw	26
  6316  00129C  0100               	movlb	0	; () banked
  6317  00129E  5D6A               	subwf	(??___fladd+2)& (0+255),w,b
  6318  0012A0  A0D8               	btfss	status,0,c
  6319  0012A2  D035               	goto	l803
  6320  0012A4                     u4470:
  6321                           
  6322                           ; BSR set to: 0
  6323  0012A4  0100               	movlb	0	; () banked
  6324  0012A6  5160               	movf	___fladd@b& (0+255),w,b
  6325  0012A8  0100               	movlb	0	; () banked
  6326  0012AA  1161               	iorwf	(___fladd@b+1)& (0+255),w,b
  6327  0012AC  0100               	movlb	0	; () banked
  6328  0012AE  1162               	iorwf	(___fladd@b+2)& (0+255),w,b
  6329  0012B0  0100               	movlb	0	; () banked
  6330  0012B2  1163               	iorwf	(___fladd@b+3)& (0+255),w,b
  6331  0012B4  B4D8               	btfsc	status,2,c
  6332  0012B6  D002               	goto	u4480
  6333  0012B8  0E01               	movlw	1
  6334  0012BA  D001               	goto	u4490
  6335  0012BC                     u4480:
  6336  0012BC  0E00               	movlw	0
  6337  0012BE                     u4490:
  6338  0012BE  0100               	movlb	0	; () banked
  6339  0012C0  6F73               	movwf	___fladd@grs& (0+255),b
  6340                           
  6341                           ; BSR set to: 0
  6342  0012C2  0E00               	movlw	0
  6343  0012C4  0100               	movlb	0	; () banked
  6344  0012C6  6F60               	movwf	___fladd@b& (0+255),b
  6345  0012C8  0E00               	movlw	0
  6346  0012CA  6F61               	movwf	(___fladd@b+1)& (0+255),b
  6347  0012CC  0E00               	movlw	0
  6348  0012CE  6F62               	movwf	(___fladd@b+2)& (0+255),b
  6349  0012D0  0E00               	movlw	0
  6350  0012D2  6F63               	movwf	(___fladd@b+3)& (0+255),b
  6351                           
  6352                           ; BSR set to: 0
  6353  0012D4  C071  F072         	movff	___fladd@aexp,___fladd@bexp
  6354  0012D8  D020               	goto	l802
  6355  0012DA                     l804:
  6356                           
  6357                           ; BSR set to: 0
  6358  0012DA  0100               	movlb	0	; () banked
  6359  0012DC  A173               	btfss	___fladd@grs& (0+255),0,b
  6360  0012DE  D007               	goto	l4210
  6361                           
  6362                           ; BSR set to: 0
  6363  0012E0  0100               	movlb	0	; () banked
  6364  0012E2  90D8               	bcf	status,0,c
  6365  0012E4  3173               	rrcf	___fladd@grs& (0+255),w,b
  6366  0012E6  0901               	iorlw	1
  6367  0012E8  0100               	movlb	0	; () banked
  6368  0012EA  6F73               	movwf	___fladd@grs& (0+255),b
  6369  0012EC  D003               	goto	l4212
  6370  0012EE                     l4210:
  6371                           
  6372                           ; BSR set to: 0
  6373  0012EE  0100               	movlb	0	; () banked
  6374  0012F0  90D8               	bcf	status,0,c
  6375  0012F2  3373               	rrcf	___fladd@grs& (0+255),f,b
  6376  0012F4                     l4212:
  6377                           
  6378                           ; BSR set to: 0
  6379  0012F4  0100               	movlb	0	; () banked
  6380  0012F6  A160               	btfss	___fladd@b& (0+255),0,b
  6381  0012F8  D002               	goto	l4216
  6382                           
  6383                           ; BSR set to: 0
  6384  0012FA  0100               	movlb	0	; () banked
  6385  0012FC  8F73               	bsf	___fladd@grs& (0+255),7,b
  6386  0012FE                     l4216:
  6387                           
  6388                           ; BSR set to: 0
  6389  0012FE  0100               	movlb	0	; () banked
  6390  001300  3563               	rlcf	(___fladd@b+3)& (0+255),w,b
  6391  001302  3363               	rrcf	(___fladd@b+3)& (0+255),f,b
  6392  001304  3362               	rrcf	(___fladd@b+2)& (0+255),f,b
  6393  001306  3361               	rrcf	(___fladd@b+1)& (0+255),f,b
  6394  001308  3360               	rrcf	___fladd@b& (0+255),f,b
  6395                           
  6396                           ; BSR set to: 0
  6397  00130A  0100               	movlb	0	; () banked
  6398  00130C  2B72               	incf	___fladd@bexp& (0+255),f,b
  6399  00130E                     l803:
  6400                           
  6401                           ; BSR set to: 0
  6402  00130E  0100               	movlb	0	; () banked
  6403  001310  5171               	movf	___fladd@aexp& (0+255),w,b
  6404  001312  0100               	movlb	0	; () banked
  6405  001314  5D72               	subwf	___fladd@bexp& (0+255),w,b
  6406  001316  A0D8               	btfss	status,0,c
  6407  001318  D7E0               	goto	l804
  6408  00131A                     l802:
  6409                           
  6410                           ; BSR set to: 0
  6411  00131A  0100               	movlb	0	; () banked
  6412  00131C  BD70               	btfsc	___fladd@signs& (0+255),6,b
  6413  00131E  D03F               	goto	l4244
  6414                           
  6415                           ; BSR set to: 0
  6416  001320  0100               	movlb	0	; () banked
  6417  001322  5172               	movf	___fladd@bexp& (0+255),w,b
  6418  001324  0100               	movlb	0	; () banked
  6419  001326  A4D8               	btfss	status,2,c
  6420  001328  D00A               	goto	l4226
  6421                           
  6422                           ; BSR set to: 0
  6423  00132A  0E00               	movlw	0
  6424  00132C  0100               	movlb	0	; () banked
  6425  00132E  6F60               	movwf	?___fladd& (0+255),b
  6426  001330  0E00               	movlw	0
  6427  001332  6F61               	movwf	(?___fladd+1)& (0+255),b
  6428  001334  0E00               	movlw	0
  6429  001336  6F62               	movwf	(?___fladd+2)& (0+255),b
  6430  001338  0E00               	movlw	0
  6431  00133A  6F63               	movwf	(?___fladd+3)& (0+255),b
  6432                           
  6433                           ; BSR set to: 0
  6434  00133C  0012               	return	
  6435  00133E                     l4226:
  6436                           
  6437                           ; BSR set to: 0
  6438  00133E  0100               	movlb	0	; () banked
  6439  001340  5164               	movf	___fladd@a& (0+255),w,b
  6440  001342  0100               	movlb	0	; () banked
  6441  001344  2760               	addwf	___fladd@b& (0+255),f,b
  6442  001346  0100               	movlb	0	; () banked
  6443  001348  5165               	movf	(___fladd@a+1)& (0+255),w,b
  6444  00134A  0100               	movlb	0	; () banked
  6445  00134C  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
  6446  00134E  0100               	movlb	0	; () banked
  6447  001350  5166               	movf	(___fladd@a+2)& (0+255),w,b
  6448  001352  0100               	movlb	0	; () banked
  6449  001354  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
  6450  001356  0100               	movlb	0	; () banked
  6451  001358  5167               	movf	(___fladd@a+3)& (0+255),w,b
  6452  00135A  0100               	movlb	0	; () banked
  6453  00135C  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
  6454                           
  6455                           ; BSR set to: 0
  6456  00135E  0100               	movlb	0	; () banked
  6457  001360  A163               	btfss	(___fladd@b+3)& (0+255),0,b
  6458  001362  D0CC               	goto	l4280
  6459                           
  6460                           ; BSR set to: 0
  6461  001364  0100               	movlb	0	; () banked
  6462  001366  A173               	btfss	___fladd@grs& (0+255),0,b
  6463  001368  D009               	goto	l4234
  6464                           
  6465                           ; BSR set to: 0
  6466  00136A  0100               	movlb	0	; () banked
  6467  00136C  90D8               	bcf	status,0,c
  6468  00136E  3373               	rrcf	___fladd@grs& (0+255),f,b
  6469  001370  0100               	movlb	0	; () banked
  6470  001372  5173               	movf	___fladd@grs& (0+255),w,b
  6471  001374  0901               	iorlw	1
  6472  001376  0100               	movlb	0	; () banked
  6473  001378  6F73               	movwf	___fladd@grs& (0+255),b
  6474  00137A  D003               	goto	l4236
  6475  00137C                     l4234:
  6476                           
  6477                           ; BSR set to: 0
  6478  00137C  0100               	movlb	0	; () banked
  6479  00137E  90D8               	bcf	status,0,c
  6480  001380  3373               	rrcf	___fladd@grs& (0+255),f,b
  6481  001382                     l4236:
  6482                           
  6483                           ; BSR set to: 0
  6484  001382  0100               	movlb	0	; () banked
  6485  001384  A160               	btfss	___fladd@b& (0+255),0,b
  6486  001386  D002               	goto	l4240
  6487                           
  6488                           ; BSR set to: 0
  6489  001388  0100               	movlb	0	; () banked
  6490  00138A  8F73               	bsf	___fladd@grs& (0+255),7,b
  6491  00138C                     l4240:
  6492                           
  6493                           ; BSR set to: 0
  6494  00138C  0100               	movlb	0	; () banked
  6495  00138E  3563               	rlcf	(___fladd@b+3)& (0+255),w,b
  6496  001390  3363               	rrcf	(___fladd@b+3)& (0+255),f,b
  6497  001392  3362               	rrcf	(___fladd@b+2)& (0+255),f,b
  6498  001394  3361               	rrcf	(___fladd@b+1)& (0+255),f,b
  6499  001396  3360               	rrcf	___fladd@b& (0+255),f,b
  6500                           
  6501                           ; BSR set to: 0
  6502  001398  0100               	movlb	0	; () banked
  6503  00139A  2B72               	incf	___fladd@bexp& (0+255),f,b
  6504                           
  6505                           ; BSR set to: 0
  6506  00139C  D0AF               	goto	l4280
  6507  00139E                     l4244:
  6508                           
  6509                           ; BSR set to: 0
  6510  00139E  0100               	movlb	0	; () banked
  6511  0013A0  5164               	movf	___fladd@a& (0+255),w,b
  6512  0013A2  0100               	movlb	0	; () banked
  6513  0013A4  5D60               	subwf	___fladd@b& (0+255),w,b
  6514  0013A6  0100               	movlb	0	; () banked
  6515  0013A8  5165               	movf	(___fladd@a+1)& (0+255),w,b
  6516  0013AA  0100               	movlb	0	; () banked
  6517  0013AC  5961               	subwfb	(___fladd@b+1)& (0+255),w,b
  6518  0013AE  0100               	movlb	0	; () banked
  6519  0013B0  5166               	movf	(___fladd@a+2)& (0+255),w,b
  6520  0013B2  0100               	movlb	0	; () banked
  6521  0013B4  5962               	subwfb	(___fladd@b+2)& (0+255),w,b
  6522  0013B6  0100               	movlb	0	; () banked
  6523  0013B8  5163               	movf	(___fladd@b+3)& (0+255),w,b
  6524  0013BA  0A80               	xorlw	128
  6525  0013BC  0100               	movlb	0	; () banked
  6526  0013BE  6F68               	movwf	??___fladd& (0+255),b
  6527  0013C0  0100               	movlb	0	; () banked
  6528  0013C2  5167               	movf	(___fladd@a+3)& (0+255),w,b
  6529  0013C4  0A80               	xorlw	128
  6530  0013C6  0100               	movlb	0	; () banked
  6531  0013C8  5968               	subwfb	??___fladd& (0+255),w,b
  6532  0013CA  B0D8               	btfsc	status,0,c
  6533  0013CC  D050               	goto	l4254
  6534                           
  6535                           ; BSR set to: 0
  6536  0013CE  C060  F068         	movff	___fladd@b,??___fladd
  6537  0013D2  C061  F069         	movff	___fladd@b+1,??___fladd+1
  6538  0013D6  C062  F06A         	movff	___fladd@b+2,??___fladd+2
  6539  0013DA  C063  F06B         	movff	___fladd@b+3,??___fladd+3
  6540  0013DE  0100               	movlb	0	; () banked
  6541  0013E0  1F68               	comf	??___fladd& (0+255),f,b
  6542  0013E2  1F69               	comf	(??___fladd+1)& (0+255),f,b
  6543  0013E4  1F6A               	comf	(??___fladd+2)& (0+255),f,b
  6544  0013E6  1F6B               	comf	(??___fladd+3)& (0+255),f,b
  6545  0013E8  2B68               	incf	??___fladd& (0+255),f,b
  6546  0013EA  0E00               	movlw	0
  6547  0013EC  2369               	addwfc	(??___fladd+1)& (0+255),f,b
  6548  0013EE  236A               	addwfc	(??___fladd+2)& (0+255),f,b
  6549  0013F0  236B               	addwfc	(??___fladd+3)& (0+255),f,b
  6550  0013F2  0100               	movlb	0	; () banked
  6551  0013F4  5164               	movf	___fladd@a& (0+255),w,b
  6552  0013F6  0100               	movlb	0	; () banked
  6553  0013F8  2568               	addwf	??___fladd& (0+255),w,b
  6554  0013FA  0100               	movlb	0	; () banked
  6555  0013FC  6F6C               	movwf	(??___fladd+4)& (0+255),b
  6556  0013FE  0100               	movlb	0	; () banked
  6557  001400  5165               	movf	(___fladd@a+1)& (0+255),w,b
  6558  001402  0100               	movlb	0	; () banked
  6559  001404  2169               	addwfc	(??___fladd+1)& (0+255),w,b
  6560  001406  0100               	movlb	0	; () banked
  6561  001408  6F6D               	movwf	(??___fladd+5)& (0+255),b
  6562  00140A  0100               	movlb	0	; () banked
  6563  00140C  5166               	movf	(___fladd@a+2)& (0+255),w,b
  6564  00140E  0100               	movlb	0	; () banked
  6565  001410  216A               	addwfc	(??___fladd+2)& (0+255),w,b
  6566  001412  0100               	movlb	0	; () banked
  6567  001414  6F6E               	movwf	(??___fladd+6)& (0+255),b
  6568  001416  0100               	movlb	0	; () banked
  6569  001418  5167               	movf	(___fladd@a+3)& (0+255),w,b
  6570  00141A  0100               	movlb	0	; () banked
  6571  00141C  216B               	addwfc	(??___fladd+3)& (0+255),w,b
  6572  00141E  0100               	movlb	0	; () banked
  6573  001420  6F6F               	movwf	(??___fladd+7)& (0+255),b
  6574  001422  0EFF               	movlw	255
  6575  001424  0100               	movlb	0	; () banked
  6576  001426  256C               	addwf	(??___fladd+4)& (0+255),w,b
  6577  001428  0100               	movlb	0	; () banked
  6578  00142A  6F60               	movwf	___fladd@b& (0+255),b
  6579  00142C  0EFF               	movlw	255
  6580  00142E  0100               	movlb	0	; () banked
  6581  001430  216D               	addwfc	(??___fladd+5)& (0+255),w,b
  6582  001432  0100               	movlb	0	; () banked
  6583  001434  6F61               	movwf	(___fladd@b+1)& (0+255),b
  6584  001436  0EFF               	movlw	255
  6585  001438  0100               	movlb	0	; () banked
  6586  00143A  216E               	addwfc	(??___fladd+6)& (0+255),w,b
  6587  00143C  0100               	movlb	0	; () banked
  6588  00143E  6F62               	movwf	(___fladd@b+2)& (0+255),b
  6589  001440  0EFF               	movlw	255
  6590  001442  0100               	movlb	0	; () banked
  6591  001444  216F               	addwfc	(??___fladd+7)& (0+255),w,b
  6592  001446  0100               	movlb	0	; () banked
  6593  001448  6F63               	movwf	(___fladd@b+3)& (0+255),b
  6594  00144A  0E80               	movlw	128
  6595  00144C  0100               	movlb	0	; () banked
  6596  00144E  1B70               	xorwf	___fladd@signs& (0+255),f,b
  6597                           
  6598                           ; BSR set to: 0
  6599  001450  0100               	movlb	0	; () banked
  6600  001452  6D73               	negf	___fladd@grs& (0+255),b
  6601                           
  6602                           ; BSR set to: 0
  6603  001454  0100               	movlb	0	; () banked
  6604  001456  5173               	movf	___fladd@grs& (0+255),w,b
  6605  001458  0100               	movlb	0	; () banked
  6606  00145A  A4D8               	btfss	status,2,c
  6607  00145C  D018               	goto	l819
  6608                           
  6609                           ; BSR set to: 0
  6610  00145E  0E01               	movlw	1
  6611  001460  0100               	movlb	0	; () banked
  6612  001462  2760               	addwf	___fladd@b& (0+255),f,b
  6613  001464  0E00               	movlw	0
  6614  001466  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
  6615  001468  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
  6616  00146A  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
  6617                           
  6618                           ; BSR set to: 0
  6619  00146C  D010               	goto	l819
  6620  00146E                     l4254:
  6621                           
  6622                           ; BSR set to: 0
  6623  00146E  0100               	movlb	0	; () banked
  6624  001470  5164               	movf	___fladd@a& (0+255),w,b
  6625  001472  0100               	movlb	0	; () banked
  6626  001474  5F60               	subwf	___fladd@b& (0+255),f,b
  6627  001476  0100               	movlb	0	; () banked
  6628  001478  5165               	movf	(___fladd@a+1)& (0+255),w,b
  6629  00147A  0100               	movlb	0	; () banked
  6630  00147C  5B61               	subwfb	(___fladd@b+1)& (0+255),f,b
  6631  00147E  0100               	movlb	0	; () banked
  6632  001480  5166               	movf	(___fladd@a+2)& (0+255),w,b
  6633  001482  0100               	movlb	0	; () banked
  6634  001484  5B62               	subwfb	(___fladd@b+2)& (0+255),f,b
  6635  001486  0100               	movlb	0	; () banked
  6636  001488  5167               	movf	(___fladd@a+3)& (0+255),w,b
  6637  00148A  0100               	movlb	0	; () banked
  6638  00148C  5B63               	subwfb	(___fladd@b+3)& (0+255),f,b
  6639  00148E                     l819:
  6640                           
  6641                           ; BSR set to: 0
  6642  00148E  0100               	movlb	0	; () banked
  6643  001490  5160               	movf	___fladd@b& (0+255),w,b
  6644  001492  0100               	movlb	0	; () banked
  6645  001494  1161               	iorwf	(___fladd@b+1)& (0+255),w,b
  6646  001496  0100               	movlb	0	; () banked
  6647  001498  1162               	iorwf	(___fladd@b+2)& (0+255),w,b
  6648  00149A  0100               	movlb	0	; () banked
  6649  00149C  1163               	iorwf	(___fladd@b+3)& (0+255),w,b
  6650  00149E  A4D8               	btfss	status,2,c
  6651  0014A0  D02A               	goto	l4278
  6652                           
  6653                           ; BSR set to: 0
  6654  0014A2  0100               	movlb	0	; () banked
  6655  0014A4  5173               	movf	___fladd@grs& (0+255),w,b
  6656  0014A6  0100               	movlb	0	; () banked
  6657  0014A8  A4D8               	btfss	status,2,c
  6658  0014AA  D025               	goto	l4278
  6659                           
  6660                           ; BSR set to: 0
  6661  0014AC  0E00               	movlw	0
  6662  0014AE  0100               	movlb	0	; () banked
  6663  0014B0  6F60               	movwf	?___fladd& (0+255),b
  6664  0014B2  0E00               	movlw	0
  6665  0014B4  6F61               	movwf	(?___fladd+1)& (0+255),b
  6666  0014B6  0E00               	movlw	0
  6667  0014B8  6F62               	movwf	(?___fladd+2)& (0+255),b
  6668  0014BA  0E00               	movlw	0
  6669  0014BC  6F63               	movwf	(?___fladd+3)& (0+255),b
  6670                           
  6671                           ; BSR set to: 0
  6672  0014BE  0012               	return	
  6673  0014C0                     l4262:
  6674                           
  6675                           ; BSR set to: 0
  6676  0014C0  0100               	movlb	0	; () banked
  6677  0014C2  90D8               	bcf	status,0,c
  6678  0014C4  3760               	rlcf	___fladd@b& (0+255),f,b
  6679  0014C6  3761               	rlcf	(___fladd@b+1)& (0+255),f,b
  6680  0014C8  3762               	rlcf	(___fladd@b+2)& (0+255),f,b
  6681  0014CA  3763               	rlcf	(___fladd@b+3)& (0+255),f,b
  6682                           
  6683                           ; BSR set to: 0
  6684  0014CC  0100               	movlb	0	; () banked
  6685  0014CE  AF73               	btfss	___fladd@grs& (0+255),7,b
  6686  0014D0  D002               	goto	l4268
  6687                           
  6688                           ; BSR set to: 0
  6689  0014D2  0100               	movlb	0	; () banked
  6690  0014D4  8160               	bsf	___fladd@b& (0+255),0,b
  6691  0014D6                     l4268:
  6692                           
  6693                           ; BSR set to: 0
  6694  0014D6  0100               	movlb	0	; () banked
  6695  0014D8  A173               	btfss	___fladd@grs& (0+255),0,b
  6696  0014DA  D003               	goto	l4272
  6697                           
  6698                           ; BSR set to: 0
  6699  0014DC  80D8               	bsf	status,0,c
  6700  0014DE  0100               	movlb	0	; () banked
  6701  0014E0  D002               	goto	L9
  6702  0014E2                     l4272:
  6703                           
  6704                           ; BSR set to: 0
  6705  0014E2  0100               	movlb	0	; () banked
  6706  0014E4  90D8               	bcf	status,0,c
  6707  0014E6                     L9:
  6708  0014E6  3773               	rlcf	___fladd@grs& (0+255),f,b
  6709                           
  6710                           ; BSR set to: 0
  6711                           
  6712                           ; BSR set to: 0
  6713  0014E8  0100               	movlb	0	; () banked
  6714  0014EA  5172               	movf	___fladd@bexp& (0+255),w,b
  6715  0014EC  0100               	movlb	0	; () banked
  6716  0014EE  B4D8               	btfsc	status,2,c
  6717  0014F0  D002               	goto	l4278
  6718                           
  6719                           ; BSR set to: 0
  6720  0014F2  0100               	movlb	0	; () banked
  6721  0014F4  0772               	decf	___fladd@bexp& (0+255),f,b
  6722  0014F6                     l4278:
  6723                           
  6724                           ; BSR set to: 0
  6725  0014F6  0100               	movlb	0	; () banked
  6726  0014F8  AF62               	btfss	(___fladd@b+2)& (0+255),7,b
  6727  0014FA  D7E2               	goto	l4262
  6728  0014FC                     l4280:
  6729                           
  6730                           ; BSR set to: 0
  6731  0014FC  0E00               	movlw	0
  6732  0014FE  0100               	movlb	0	; () banked
  6733  001500  6F71               	movwf	___fladd@aexp& (0+255),b
  6734                           
  6735                           ; BSR set to: 0
  6736  001502  0100               	movlb	0	; () banked
  6737  001504  AF73               	btfss	___fladd@grs& (0+255),7,b
  6738  001506  D00D               	goto	l828
  6739                           
  6740                           ; BSR set to: 0
  6741  001508  C073  F068         	movff	___fladd@grs,??___fladd
  6742  00150C  0E7F               	movlw	127
  6743  00150E  0100               	movlb	0	; () banked
  6744  001510  1768               	andwf	??___fladd& (0+255),f,b
  6745  001512  A4D8               	btfss	status,2,c
  6746  001514  D003               	goto	l4288
  6747                           
  6748                           ; BSR set to: 0
  6749                           
  6750                           ; BSR set to: 0
  6751  001516  0100               	movlb	0	; () banked
  6752  001518  A160               	btfss	___fladd@b& (0+255),0,b
  6753  00151A  D003               	goto	l828
  6754  00151C                     l4288:
  6755                           
  6756                           ; BSR set to: 0
  6757  00151C  0E01               	movlw	1
  6758  00151E  0100               	movlb	0	; () banked
  6759  001520  6F71               	movwf	___fladd@aexp& (0+255),b
  6760  001522                     l828:
  6761                           
  6762                           ; BSR set to: 0
  6763  001522  0100               	movlb	0	; () banked
  6764  001524  5171               	movf	___fladd@aexp& (0+255),w,b
  6765  001526  0100               	movlb	0	; () banked
  6766  001528  B4D8               	btfsc	status,2,c
  6767  00152A  D026               	goto	l4298
  6768                           
  6769                           ; BSR set to: 0
  6770  00152C  0E01               	movlw	1
  6771  00152E  0100               	movlb	0	; () banked
  6772  001530  2760               	addwf	___fladd@b& (0+255),f,b
  6773  001532  0E00               	movlw	0
  6774  001534  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
  6775  001536  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
  6776  001538  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
  6777                           
  6778                           ; BSR set to: 0
  6779  00153A  0100               	movlb	0	; () banked
  6780  00153C  A163               	btfss	(___fladd@b+3)& (0+255),0,b
  6781  00153E  D01C               	goto	l4298
  6782                           
  6783                           ; BSR set to: 0
  6784  001540  C060  F068         	movff	___fladd@b,??___fladd
  6785  001544  C061  F069         	movff	___fladd@b+1,??___fladd+1
  6786  001548  C062  F06A         	movff	___fladd@b+2,??___fladd+2
  6787  00154C  C063  F06B         	movff	___fladd@b+3,??___fladd+3
  6788  001550  0100               	movlb	0	; () banked
  6789  001552  356B               	rlcf	(??___fladd+3)& (0+255),w,b
  6790  001554  336B               	rrcf	(??___fladd+3)& (0+255),f,b
  6791  001556  336A               	rrcf	(??___fladd+2)& (0+255),f,b
  6792  001558  3369               	rrcf	(??___fladd+1)& (0+255),f,b
  6793  00155A  3368               	rrcf	??___fladd& (0+255),f,b
  6794  00155C  C068  F060         	movff	??___fladd,___fladd@b
  6795  001560  C069  F061         	movff	??___fladd+1,___fladd@b+1
  6796  001564  C06A  F062         	movff	??___fladd+2,___fladd@b+2
  6797  001568  C06B  F063         	movff	??___fladd+3,___fladd@b+3
  6798  00156C  0100               	movlb	0	; () banked
  6799  00156E  2972               	incf	___fladd@bexp& (0+255),w,b
  6800  001570  B4D8               	btfsc	status,2,c
  6801  001572  D002               	goto	l4298
  6802                           
  6803                           ; BSR set to: 0
  6804  001574  0100               	movlb	0	; () banked
  6805  001576  2B72               	incf	___fladd@bexp& (0+255),f,b
  6806  001578                     l4298:
  6807                           
  6808                           ; BSR set to: 0
  6809  001578  0100               	movlb	0	; () banked
  6810  00157A  2972               	incf	___fladd@bexp& (0+255),w,b
  6811  00157C  B4D8               	btfsc	status,2,c
  6812  00157E  D005               	goto	l4302
  6813                           
  6814                           ; BSR set to: 0
  6815  001580  0100               	movlb	0	; () banked
  6816  001582  5172               	movf	___fladd@bexp& (0+255),w,b
  6817  001584  0100               	movlb	0	; () banked
  6818  001586  A4D8               	btfss	status,2,c
  6819  001588  D011               	goto	l4306
  6820  00158A                     l4302:
  6821                           
  6822                           ; BSR set to: 0
  6823  00158A  0E00               	movlw	0
  6824  00158C  0100               	movlb	0	; () banked
  6825  00158E  6F60               	movwf	___fladd@b& (0+255),b
  6826  001590  0E00               	movlw	0
  6827  001592  6F61               	movwf	(___fladd@b+1)& (0+255),b
  6828  001594  0E00               	movlw	0
  6829  001596  6F62               	movwf	(___fladd@b+2)& (0+255),b
  6830  001598  0E00               	movlw	0
  6831  00159A  6F63               	movwf	(___fladd@b+3)& (0+255),b
  6832  00159C  0100               	movlb	0	; () banked
  6833  00159E  5172               	movf	___fladd@bexp& (0+255),w,b
  6834  0015A0  0100               	movlb	0	; () banked
  6835  0015A2  A4D8               	btfss	status,2,c
  6836  0015A4  D003               	goto	l4306
  6837                           
  6838                           ; BSR set to: 0
  6839  0015A6  0E00               	movlw	0
  6840  0015A8  0100               	movlb	0	; () banked
  6841  0015AA  6F70               	movwf	___fladd@signs& (0+255),b
  6842  0015AC                     l4306:
  6843                           
  6844                           ; BSR set to: 0
  6845  0015AC  0100               	movlb	0	; () banked
  6846  0015AE  A172               	btfss	___fladd@bexp& (0+255),0,b
  6847  0015B0  D003               	goto	l4310
  6848                           
  6849                           ; BSR set to: 0
  6850  0015B2  0100               	movlb	0	; () banked
  6851  0015B4  8F62               	bsf	(___fladd@b+2)& (0+255),7,b
  6852  0015B6  D002               	goto	l4312
  6853  0015B8                     l4310:
  6854                           
  6855                           ; BSR set to: 0
  6856  0015B8  0100               	movlb	0	; () banked
  6857  0015BA  9F62               	bcf	(___fladd@b+2)& (0+255),7,b
  6858  0015BC                     l4312:
  6859                           
  6860                           ; BSR set to: 0
  6861  0015BC  0100               	movlb	0	; () banked
  6862  0015BE  90D8               	bcf	status,0,c
  6863  0015C0  3172               	rrcf	___fladd@bexp& (0+255),w,b
  6864  0015C2  0100               	movlb	0	; () banked
  6865  0015C4  6F63               	movwf	(___fladd@b+3)& (0+255),b
  6866                           
  6867                           ; BSR set to: 0
  6868  0015C6  0100               	movlb	0	; () banked
  6869  0015C8  AF70               	btfss	___fladd@signs& (0+255),7,b
  6870  0015CA  D002               	goto	l4318
  6871                           
  6872                           ; BSR set to: 0
  6873  0015CC  0100               	movlb	0	; () banked
  6874  0015CE  8F63               	bsf	(___fladd@b+3)& (0+255),7,b
  6875  0015D0                     l4318:
  6876                           
  6877                           ; BSR set to: 0
  6878  0015D0  C060  F060         	movff	___fladd@b,?___fladd
  6879  0015D4  C061  F061         	movff	___fladd@b+1,?___fladd+1
  6880  0015D8  C062  F062         	movff	___fladd@b+2,?___fladd+2
  6881  0015DC  C063  F063         	movff	___fladd@b+3,?___fladd+3
  6882  0015E0  0012               	return	
  6883  0015E2                     __end_of___fladd:
  6884                           	opt stack 0
  6885                           tblptru	equ	0xFF8
  6886                           tblptrh	equ	0xFF7
  6887                           tblptrl	equ	0xFF6
  6888                           tablat	equ	0xFF5
  6889                           prodh	equ	0xFF4
  6890                           prodl	equ	0xFF3
  6891                           intcon	equ	0xFF2
  6892                           postinc0	equ	0xFEE
  6893                           wreg	equ	0xFE8
  6894                           indf1	equ	0xFE7
  6895                           plusw1	equ	0xFE3
  6896                           fsr1h	equ	0xFE2
  6897                           fsr1l	equ	0xFE1
  6898                           indf2	equ	0xFDF
  6899                           postinc2	equ	0xFDE
  6900                           plusw2	equ	0xFDB
  6901                           fsr2h	equ	0xFDA
  6902                           fsr2l	equ	0xFD9
  6903                           status	equ	0xFD8
  6904                           
  6905 ;; *************** function ___flneg *****************
  6906 ;; Defined at:
  6907 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flneg.c"
  6908 ;; Parameters:    Size  Location     Type
  6909 ;;  f1              4   14[COMRAM] unsigned char 
  6910 ;; Auto vars:     Size  Location     Type
  6911 ;;		None
  6912 ;; Return value:  Size  Location     Type
  6913 ;;                  4   14[COMRAM] unsigned char 
  6914 ;; Registers used:
  6915 ;;		wreg, status,2, status,0
  6916 ;; Tracked objects:
  6917 ;;		On entry : 0/0
  6918 ;;		On exit  : 0/0
  6919 ;;		Unchanged: 0/0
  6920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6921 ;;      Params:         4       0       0       0       0       0       0       0       0
  6922 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6923 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6924 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6925 ;;Total ram usage:        4 bytes
  6926 ;; Hardware stack levels used:    1
  6927 ;; Hardware stack levels required when called:    1
  6928 ;; This function calls:
  6929 ;;		Nothing
  6930 ;; This function is called by:
  6931 ;;		_sprintf
  6932 ;; This function uses a non-reentrant model
  6933 ;;
  6934                           
  6935                           	psect	text22
  6936  0038DE                     __ptext22:
  6937                           	opt stack 0
  6938  0038DE                     ___flneg:
  6939                           	opt stack 27
  6940                           
  6941                           ; BSR set to: 0
  6942                           ;incstack = 0
  6943  0038DE  500F               	movf	___flneg@f1,w,c
  6944  0038E0  1010               	iorwf	___flneg@f1+1,w,c
  6945  0038E2  1011               	iorwf	___flneg@f1+2,w,c
  6946  0038E4  1012               	iorwf	___flneg@f1+3,w,c
  6947  0038E6  B4D8               	btfsc	status,2,c
  6948  0038E8  D008               	goto	l3460
  6949  0038EA  0E00               	movlw	0
  6950  0038EC  1A0F               	xorwf	___flneg@f1,f,c
  6951  0038EE  0E00               	movlw	0
  6952  0038F0  1A10               	xorwf	___flneg@f1+1,f,c
  6953  0038F2  0E00               	movlw	0
  6954  0038F4  1A11               	xorwf	___flneg@f1+2,f,c
  6955  0038F6  0E80               	movlw	128
  6956  0038F8  1A12               	xorwf	___flneg@f1+3,f,c
  6957  0038FA                     l3460:
  6958  0038FA  C00F  F00F         	movff	___flneg@f1,?___flneg
  6959  0038FE  C010  F010         	movff	___flneg@f1+1,?___flneg+1
  6960  003902  C011  F011         	movff	___flneg@f1+2,?___flneg+2
  6961  003906  C012  F012         	movff	___flneg@f1+3,?___flneg+3
  6962  00390A  0012               	return	
  6963  00390C                     __end_of___flneg:
  6964                           	opt stack 0
  6965                           tblptru	equ	0xFF8
  6966                           tblptrh	equ	0xFF7
  6967                           tblptrl	equ	0xFF6
  6968                           tablat	equ	0xFF5
  6969                           prodh	equ	0xFF4
  6970                           prodl	equ	0xFF3
  6971                           intcon	equ	0xFF2
  6972                           postinc0	equ	0xFEE
  6973                           wreg	equ	0xFE8
  6974                           indf1	equ	0xFE7
  6975                           plusw1	equ	0xFE3
  6976                           fsr1h	equ	0xFE2
  6977                           fsr1l	equ	0xFE1
  6978                           indf2	equ	0xFDF
  6979                           postinc2	equ	0xFDE
  6980                           plusw2	equ	0xFDB
  6981                           fsr2h	equ	0xFDA
  6982                           fsr2l	equ	0xFD9
  6983                           status	equ	0xFD8
  6984                           
  6985 ;; *************** function ___flge *****************
  6986 ;; Defined at:
  6987 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flge.c"
  6988 ;; Parameters:    Size  Location     Type
  6989 ;;  ff1             4   14[COMRAM] unsigned char 
  6990 ;;  ff2             4   18[COMRAM] unsigned char 
  6991 ;; Auto vars:     Size  Location     Type
  6992 ;;		None
  6993 ;; Return value:  Size  Location     Type
  6994 ;;		None               void
  6995 ;; Registers used:
  6996 ;;		wreg, status,2, status,0
  6997 ;; Tracked objects:
  6998 ;;		On entry : 0/0
  6999 ;;		On exit  : 0/0
  7000 ;;		Unchanged: 0/0
  7001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7002 ;;      Params:         8       0       0       0       0       0       0       0       0
  7003 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7004 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7005 ;;      Totals:        12       0       0       0       0       0       0       0       0
  7006 ;;Total ram usage:       12 bytes
  7007 ;; Hardware stack levels used:    1
  7008 ;; Hardware stack levels required when called:    1
  7009 ;; This function calls:
  7010 ;;		Nothing
  7011 ;; This function is called by:
  7012 ;;		_scarica
  7013 ;;		_ricarica
  7014 ;;		_sprintf
  7015 ;; This function uses a non-reentrant model
  7016 ;;
  7017                           
  7018                           	psect	text23
  7019  002EAA                     __ptext23:
  7020                           	opt stack 0
  7021  002EAA                     ___flge:
  7022                           	opt stack 27
  7023                           
  7024                           ;incstack = 0
  7025  002EAA  0E00               	movlw	0
  7026  002EAC  140F               	andwf	___flge@ff1,w,c
  7027  002EAE  6E17               	movwf	??___flge& (0+255),c
  7028  002EB0  0E00               	movlw	0
  7029  002EB2  1410               	andwf	___flge@ff1+1,w,c
  7030  002EB4  6E18               	movwf	(??___flge+1)& (0+255),c
  7031  002EB6  0E80               	movlw	128
  7032  002EB8  1411               	andwf	___flge@ff1+2,w,c
  7033  002EBA  6E19               	movwf	(??___flge+2)& (0+255),c
  7034  002EBC  0E7F               	movlw	127
  7035  002EBE  1412               	andwf	___flge@ff1+3,w,c
  7036  002EC0  6E1A               	movwf	(??___flge+3)& (0+255),c
  7037  002EC2  5017               	movf	??___flge,w,c
  7038  002EC4  1018               	iorwf	??___flge+1,w,c
  7039  002EC6  1019               	iorwf	??___flge+2,w,c
  7040  002EC8  101A               	iorwf	??___flge+3,w,c
  7041  002ECA  A4D8               	btfss	status,2,c
  7042  002ECC  D008               	goto	l3438
  7043  002ECE  0E00               	movlw	0
  7044  002ED0  6E0F               	movwf	___flge@ff1,c
  7045  002ED2  0E00               	movlw	0
  7046  002ED4  6E10               	movwf	___flge@ff1+1,c
  7047  002ED6  0E00               	movlw	0
  7048  002ED8  6E11               	movwf	___flge@ff1+2,c
  7049  002EDA  0E00               	movlw	0
  7050  002EDC  6E12               	movwf	___flge@ff1+3,c
  7051  002EDE                     l3438:
  7052  002EDE  0E00               	movlw	0
  7053  002EE0  1413               	andwf	___flge@ff2,w,c
  7054  002EE2  6E17               	movwf	??___flge& (0+255),c
  7055  002EE4  0E00               	movlw	0
  7056  002EE6  1414               	andwf	___flge@ff2+1,w,c
  7057  002EE8  6E18               	movwf	(??___flge+1)& (0+255),c
  7058  002EEA  0E80               	movlw	128
  7059  002EEC  1415               	andwf	___flge@ff2+2,w,c
  7060  002EEE  6E19               	movwf	(??___flge+2)& (0+255),c
  7061  002EF0  0E7F               	movlw	127
  7062  002EF2  1416               	andwf	___flge@ff2+3,w,c
  7063  002EF4  6E1A               	movwf	(??___flge+3)& (0+255),c
  7064  002EF6  5017               	movf	??___flge,w,c
  7065  002EF8  1018               	iorwf	??___flge+1,w,c
  7066  002EFA  1019               	iorwf	??___flge+2,w,c
  7067  002EFC  101A               	iorwf	??___flge+3,w,c
  7068  002EFE  A4D8               	btfss	status,2,c
  7069  002F00  D008               	goto	l3442
  7070  002F02  0E00               	movlw	0
  7071  002F04  6E13               	movwf	___flge@ff2,c
  7072  002F06  0E00               	movlw	0
  7073  002F08  6E14               	movwf	___flge@ff2+1,c
  7074  002F0A  0E00               	movlw	0
  7075  002F0C  6E15               	movwf	___flge@ff2+2,c
  7076  002F0E  0E00               	movlw	0
  7077  002F10  6E16               	movwf	___flge@ff2+3,c
  7078  002F12                     l3442:
  7079  002F12  AE12               	btfss	___flge@ff1+3,7,c
  7080  002F14  D01D               	goto	l3446
  7081  002F16  C00F  F017         	movff	___flge@ff1,??___flge
  7082  002F1A  C010  F018         	movff	___flge@ff1+1,??___flge+1
  7083  002F1E  C011  F019         	movff	___flge@ff1+2,??___flge+2
  7084  002F22  C012  F01A         	movff	___flge@ff1+3,??___flge+3
  7085  002F26  1E17               	comf	??___flge,f,c
  7086  002F28  1E18               	comf	??___flge+1,f,c
  7087  002F2A  1E19               	comf	??___flge+2,f,c
  7088  002F2C  1E1A               	comf	??___flge+3,f,c
  7089  002F2E  2A17               	incf	??___flge,f,c
  7090  002F30  0E00               	movlw	0
  7091  002F32  2218               	addwfc	??___flge+1,f,c
  7092  002F34  2219               	addwfc	??___flge+2,f,c
  7093  002F36  221A               	addwfc	??___flge+3,f,c
  7094  002F38  0E00               	movlw	0
  7095  002F3A  2417               	addwf	??___flge,w,c
  7096  002F3C  6E0F               	movwf	___flge@ff1,c
  7097  002F3E  0E00               	movlw	0
  7098  002F40  2018               	addwfc	??___flge+1,w,c
  7099  002F42  6E10               	movwf	___flge@ff1+1,c
  7100  002F44  0E00               	movlw	0
  7101  002F46  2019               	addwfc	??___flge+2,w,c
  7102  002F48  6E11               	movwf	___flge@ff1+2,c
  7103  002F4A  0E80               	movlw	128
  7104  002F4C  201A               	addwfc	??___flge+3,w,c
  7105  002F4E  6E12               	movwf	___flge@ff1+3,c
  7106  002F50                     l3446:
  7107  002F50  AE16               	btfss	___flge@ff2+3,7,c
  7108  002F52  D01D               	goto	l525
  7109  002F54  C013  F017         	movff	___flge@ff2,??___flge
  7110  002F58  C014  F018         	movff	___flge@ff2+1,??___flge+1
  7111  002F5C  C015  F019         	movff	___flge@ff2+2,??___flge+2
  7112  002F60  C016  F01A         	movff	___flge@ff2+3,??___flge+3
  7113  002F64  1E17               	comf	??___flge,f,c
  7114  002F66  1E18               	comf	??___flge+1,f,c
  7115  002F68  1E19               	comf	??___flge+2,f,c
  7116  002F6A  1E1A               	comf	??___flge+3,f,c
  7117  002F6C  2A17               	incf	??___flge,f,c
  7118  002F6E  0E00               	movlw	0
  7119  002F70  2218               	addwfc	??___flge+1,f,c
  7120  002F72  2219               	addwfc	??___flge+2,f,c
  7121  002F74  221A               	addwfc	??___flge+3,f,c
  7122  002F76  0E00               	movlw	0
  7123  002F78  2417               	addwf	??___flge,w,c
  7124  002F7A  6E13               	movwf	___flge@ff2,c
  7125  002F7C  0E00               	movlw	0
  7126  002F7E  2018               	addwfc	??___flge+1,w,c
  7127  002F80  6E14               	movwf	___flge@ff2+1,c
  7128  002F82  0E00               	movlw	0
  7129  002F84  2019               	addwfc	??___flge+2,w,c
  7130  002F86  6E15               	movwf	___flge@ff2+2,c
  7131  002F88  0E80               	movlw	128
  7132  002F8A  201A               	addwfc	??___flge+3,w,c
  7133  002F8C  6E16               	movwf	___flge@ff2+3,c
  7134  002F8E                     l525:
  7135  002F8E  0E00               	movlw	0
  7136  002F90  1A0F               	xorwf	___flge@ff1,f,c
  7137  002F92  0E00               	movlw	0
  7138  002F94  1A10               	xorwf	___flge@ff1+1,f,c
  7139  002F96  0E00               	movlw	0
  7140  002F98  1A11               	xorwf	___flge@ff1+2,f,c
  7141  002F9A  0E80               	movlw	128
  7142  002F9C  1A12               	xorwf	___flge@ff1+3,f,c
  7143  002F9E  0E00               	movlw	0
  7144  002FA0  1A13               	xorwf	___flge@ff2,f,c
  7145  002FA2  0E00               	movlw	0
  7146  002FA4  1A14               	xorwf	___flge@ff2+1,f,c
  7147  002FA6  0E00               	movlw	0
  7148  002FA8  1A15               	xorwf	___flge@ff2+2,f,c
  7149  002FAA  0E80               	movlw	128
  7150  002FAC  1A16               	xorwf	___flge@ff2+3,f,c
  7151  002FAE  5013               	movf	___flge@ff2,w,c
  7152  002FB0  5C0F               	subwf	___flge@ff1,w,c
  7153  002FB2  5014               	movf	___flge@ff2+1,w,c
  7154  002FB4  5810               	subwfb	___flge@ff1+1,w,c
  7155  002FB6  5015               	movf	___flge@ff2+2,w,c
  7156  002FB8  5811               	subwfb	___flge@ff1+2,w,c
  7157  002FBA  5016               	movf	___flge@ff2+3,w,c
  7158  002FBC  5812               	subwfb	___flge@ff1+3,w,c
  7159  002FBE  B0D8               	btfsc	status,0,c
  7160  002FC0  D002               	goto	l3452
  7161  002FC2  90D8               	bcf	status,0,c
  7162  002FC4  0012               	return	
  7163  002FC6                     l3452:
  7164  002FC6  80D8               	bsf	status,0,c
  7165  002FC8  0012               	return	
  7166  002FCA                     __end_of___flge:
  7167                           	opt stack 0
  7168                           tblptru	equ	0xFF8
  7169                           tblptrh	equ	0xFF7
  7170                           tblptrl	equ	0xFF6
  7171                           tablat	equ	0xFF5
  7172                           prodh	equ	0xFF4
  7173                           prodl	equ	0xFF3
  7174                           intcon	equ	0xFF2
  7175                           postinc0	equ	0xFEE
  7176                           wreg	equ	0xFE8
  7177                           indf1	equ	0xFE7
  7178                           plusw1	equ	0xFE3
  7179                           fsr1h	equ	0xFE2
  7180                           fsr1l	equ	0xFE1
  7181                           indf2	equ	0xFDF
  7182                           postinc2	equ	0xFDE
  7183                           plusw2	equ	0xFDB
  7184                           fsr2h	equ	0xFDA
  7185                           fsr2l	equ	0xFD9
  7186                           status	equ	0xFD8
  7187                           
  7188 ;; *************** function _read_adc *****************
  7189 ;; Defined at:
  7190 ;;		line 152 in file "tester.c"
  7191 ;; Parameters:    Size  Location     Type
  7192 ;;		None
  7193 ;; Auto vars:     Size  Location     Type
  7194 ;;  i               1   13[BANK0 ] unsigned char 
  7195 ;; Return value:  Size  Location     Type
  7196 ;;		None               void
  7197 ;; Registers used:
  7198 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7199 ;; Tracked objects:
  7200 ;;		On entry : 0/0
  7201 ;;		On exit  : 0/0
  7202 ;;		Unchanged: 0/0
  7203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7204 ;;      Params:         0       0       0       0       0       0       0       0       0
  7205 ;;      Locals:         0       1       0       0       0       0       0       0       0
  7206 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7207 ;;      Totals:         2       1       0       0       0       0       0       0       0
  7208 ;;Total ram usage:        3 bytes
  7209 ;; Hardware stack levels used:    1
  7210 ;; Hardware stack levels required when called:    3
  7211 ;; This function calls:
  7212 ;;		___fldiv
  7213 ;;		___flmul
  7214 ;;		___xxtofl
  7215 ;;		_delay_ms
  7216 ;; This function is called by:
  7217 ;;		_main
  7218 ;;		_scarica
  7219 ;;		_ricarica
  7220 ;; This function uses a non-reentrant model
  7221 ;;
  7222                           
  7223                           	psect	text24
  7224  00260C                     __ptext24:
  7225                           	opt stack 0
  7226  00260C                     _read_adc:
  7227                           	opt stack 26
  7228                           
  7229                           ;tester.c: 153: for (char i = 0; i < 3; i++) {
  7230                           
  7231                           ;incstack = 0
  7232  00260C  0E00               	movlw	0
  7233  00260E  0100               	movlb	0	; () banked
  7234  002610  6F6D               	movwf	read_adc@i& (0+255),b
  7235  002612                     l4510:
  7236                           
  7237                           ; BSR set to: 0
  7238  002612  0E02               	movlw	2
  7239  002614  0100               	movlb	0	; () banked
  7240  002616  656D               	cpfsgt	read_adc@i& (0+255),b
  7241  002618  D001               	goto	l4514
  7242  00261A  D049               	goto	l4528
  7243  00261C                     l4514:
  7244                           
  7245                           ; BSR set to: 0
  7246                           ;tester.c: 154: ADCON0 = combinazioni[i];
  7247  00261C  0100               	movlb	0	; () banked
  7248  00261E  516D               	movf	read_adc@i& (0+255),w,b
  7249  002620  0D01               	mullw	1
  7250  002622  0ECF               	movlw	low _combinazioni
  7251  002624  24F3               	addwf	prodl,w,c
  7252  002626  6ED9               	movwf	fsr2l,c
  7253  002628  0E00               	movlw	high _combinazioni
  7254  00262A  20F4               	addwfc	prodh,w,c
  7255  00262C  6EDA               	movwf	fsr2h,c
  7256  00262E  50DF               	movf	indf2,w,c
  7257  002630  6EC2               	movwf	4034,c	;volatile
  7258                           
  7259                           ; BSR set to: 0
  7260                           ;tester.c: 155: ADCON0bits.ADON = 1;
  7261  002632  80C2               	bsf	4034,0,c	;volatile
  7262                           
  7263                           ; BSR set to: 0
  7264                           ;tester.c: 156: ADCON0bits.GO = 1;
  7265  002634  82C2               	bsf	4034,1,c	;volatile
  7266  002636                     l206:
  7267  002636  B2C2               	btfsc	4034,1,c	;volatile
  7268  002638  D7FE               	goto	l206
  7269                           
  7270                           ;tester.c: 158: lettura [i] = ADRESH;
  7271  00263A  50C4               	movf	4036,w,c	;volatile
  7272  00263C  6E42               	movwf	??_read_adc& (0+255),c
  7273  00263E  6A43               	clrf	(??_read_adc+1)& (0+255),c
  7274  002640  0100               	movlb	0	; () banked
  7275  002642  516D               	movf	read_adc@i& (0+255),w,b
  7276  002644  0D02               	mullw	2
  7277  002646  0EA7               	movlw	low _lettura
  7278  002648  24F3               	addwf	prodl,w,c
  7279  00264A  6ED9               	movwf	fsr2l,c
  7280  00264C  0E00               	movlw	high _lettura
  7281  00264E  20F4               	addwfc	prodh,w,c
  7282  002650  6EDA               	movwf	fsr2h,c
  7283  002652  C042  FFDE         	movff	??_read_adc,postinc2
  7284  002656  C043  FFDD         	movff	??_read_adc+1,postdec2
  7285                           
  7286                           ;tester.c: 159: lettura [i] = ((lettura[i] << 8) | ADRESL);
  7287  00265A  0100               	movlb	0	; () banked
  7288  00265C  516D               	movf	read_adc@i& (0+255),w,b
  7289  00265E  0D02               	mullw	2
  7290  002660  0EA7               	movlw	low _lettura
  7291  002662  24F3               	addwf	prodl,w,c
  7292  002664  6ED9               	movwf	fsr2l,c
  7293  002666  0E00               	movlw	high _lettura
  7294  002668  20F4               	addwfc	prodh,w,c
  7295  00266A  6EDA               	movwf	fsr2h,c
  7296  00266C  CFDE F042          	movff	postinc2,??_read_adc
  7297  002670  CFDD F043          	movff	postdec2,??_read_adc+1
  7298  002674  C042  F043         	movff	??_read_adc,??_read_adc+1
  7299  002678  6A42               	clrf	??_read_adc,c
  7300  00267A  50C3               	movf	4035,w,c	;volatile
  7301  00267C  1242               	iorwf	??_read_adc,f,c
  7302  00267E  0E00               	movlw	0
  7303  002680  1243               	iorwf	??_read_adc+1,f,c
  7304  002682  0100               	movlb	0	; () banked
  7305  002684  516D               	movf	read_adc@i& (0+255),w,b
  7306  002686  0D02               	mullw	2
  7307  002688  0EA7               	movlw	low _lettura
  7308  00268A  24F3               	addwf	prodl,w,c
  7309  00268C  6ED9               	movwf	fsr2l,c
  7310  00268E  0E00               	movlw	high _lettura
  7311  002690  20F4               	addwfc	prodh,w,c
  7312  002692  6EDA               	movwf	fsr2h,c
  7313  002694  C042  FFDE         	movff	??_read_adc,postinc2
  7314  002698  C043  FFDD         	movff	??_read_adc+1,postdec2
  7315                           
  7316                           ; BSR set to: 0
  7317                           ;tester.c: 160: delay_ms(5);
  7318  00269C  0E00               	movlw	0
  7319  00269E  6E16               	movwf	delay_ms@value_ms+1,c
  7320  0026A0  0E05               	movlw	5
  7321  0026A2  6E15               	movwf	delay_ms@value_ms,c
  7322  0026A4  EC3E  F01C         	call	_delay_ms	;wreg free
  7323  0026A8  0100               	movlb	0	; () banked
  7324  0026AA  2B6D               	incf	read_adc@i& (0+255),f,b
  7325  0026AC  D7B2               	goto	l4510
  7326  0026AE                     l4528:
  7327                           
  7328                           ; BSR set to: 0
  7329                           ;tester.c: 161: }
  7330                           ;tester.c: 162: current = (lettura[0] - lettura[1]);
  7331  0026AE  EE20  F0A9         	lfsr	2,_lettura+2
  7332  0026B2  CFDE F042          	movff	postinc2,??_read_adc
  7333  0026B6  CFDD F043          	movff	postdec2,??_read_adc+1
  7334  0026BA  1E42               	comf	??_read_adc,f,c
  7335  0026BC  1E43               	comf	??_read_adc+1,f,c
  7336  0026BE  4A42               	infsnz	??_read_adc,f,c
  7337  0026C0  2A43               	incf	??_read_adc+1,f,c
  7338  0026C2  0100               	movlb	0	; () banked
  7339  0026C4  51A7               	movf	_lettura& (0+255),w,b
  7340  0026C6  2642               	addwf	??_read_adc,f,c
  7341  0026C8  0100               	movlb	0	; () banked
  7342  0026CA  51A8               	movf	(_lettura+1)& (0+255),w,b
  7343  0026CC  2243               	addwfc	??_read_adc+1,f,c
  7344  0026CE  C042  F00F         	movff	??_read_adc,___xxtofl@val
  7345  0026D2  C043  F010         	movff	??_read_adc+1,___xxtofl@val+1
  7346  0026D6  0E00               	movlw	0
  7347  0026D8  BE10               	btfsc	___xxtofl@val+1,7,c
  7348  0026DA  0EFF               	movlw	-1
  7349  0026DC  6E11               	movwf	___xxtofl@val+2,c
  7350  0026DE  6E12               	movwf	___xxtofl@val+3,c
  7351  0026E0  0E01               	movlw	1
  7352  0026E2  ECE1  F014         	call	___xxtofl
  7353  0026E6  C00F  F0AD         	movff	?___xxtofl,_current
  7354  0026EA  C010  F0AE         	movff	?___xxtofl+1,_current+1
  7355  0026EE  C011  F0AF         	movff	?___xxtofl+2,_current+2
  7356  0026F2  C012  F0B0         	movff	?___xxtofl+3,_current+3
  7357                           
  7358                           ;tester.c: 163: current = (current * 5);
  7359  0026F6  C0AD  F01D         	movff	_current,___flmul@b
  7360  0026FA  C0AE  F01E         	movff	_current+1,___flmul@b+1
  7361  0026FE  C0AF  F01F         	movff	_current+2,___flmul@b+2
  7362  002702  C0B0  F020         	movff	_current+3,___flmul@b+3
  7363  002706  0E00               	movlw	0
  7364  002708  6E21               	movwf	___flmul@a,c
  7365  00270A  0E00               	movlw	0
  7366  00270C  6E22               	movwf	___flmul@a+1,c
  7367  00270E  0EA0               	movlw	160
  7368  002710  6E23               	movwf	___flmul@a+2,c
  7369  002712  0E40               	movlw	64
  7370  002714  6E24               	movwf	___flmul@a+3,c
  7371  002716  ECFD  F00C         	call	___flmul	;wreg free
  7372  00271A  C01D  F0AD         	movff	?___flmul,_current
  7373  00271E  C01E  F0AE         	movff	?___flmul+1,_current+1
  7374  002722  C01F  F0AF         	movff	?___flmul+2,_current+2
  7375  002726  C020  F0B0         	movff	?___flmul+3,_current+3
  7376                           
  7377                           ;tester.c: 164: current = current / 1024;
  7378  00272A  C0AD  F036         	movff	_current,___fldiv@b
  7379  00272E  C0AE  F037         	movff	_current+1,___fldiv@b+1
  7380  002732  C0AF  F038         	movff	_current+2,___fldiv@b+2
  7381  002736  C0B0  F039         	movff	_current+3,___fldiv@b+3
  7382  00273A  0E00               	movlw	0
  7383  00273C  6E3A               	movwf	___fldiv@a,c
  7384  00273E  0E00               	movlw	0
  7385  002740  6E3B               	movwf	___fldiv@a+1,c
  7386  002742  0E80               	movlw	128
  7387  002744  6E3C               	movwf	___fldiv@a+2,c
  7388  002746  0E44               	movlw	68
  7389  002748  6E3D               	movwf	___fldiv@a+3,c
  7390  00274A  ECA5  F00E         	call	___fldiv	;wreg free
  7391  00274E  C036  F0AD         	movff	?___fldiv,_current
  7392  002752  C037  F0AE         	movff	?___fldiv+1,_current+1
  7393  002756  C038  F0AF         	movff	?___fldiv+2,_current+2
  7394  00275A  C039  F0B0         	movff	?___fldiv+3,_current+3
  7395                           
  7396                           ;tester.c: 165: current = current / 0.200;
  7397  00275E  C0AD  F036         	movff	_current,___fldiv@b
  7398  002762  C0AE  F037         	movff	_current+1,___fldiv@b+1
  7399  002766  C0AF  F038         	movff	_current+2,___fldiv@b+2
  7400  00276A  C0B0  F039         	movff	_current+3,___fldiv@b+3
  7401  00276E  0ECD               	movlw	205
  7402  002770  6E3A               	movwf	___fldiv@a,c
  7403  002772  0ECC               	movlw	204
  7404  002774  6E3B               	movwf	___fldiv@a+1,c
  7405  002776  0E4C               	movlw	76
  7406  002778  6E3C               	movwf	___fldiv@a+2,c
  7407  00277A  0E3E               	movlw	62
  7408  00277C  6E3D               	movwf	___fldiv@a+3,c
  7409  00277E  ECA5  F00E         	call	___fldiv	;wreg free
  7410  002782  C036  F0AD         	movff	?___fldiv,_current
  7411  002786  C037  F0AE         	movff	?___fldiv+1,_current+1
  7412  00278A  C038  F0AF         	movff	?___fldiv+2,_current+2
  7413  00278E  C039  F0B0         	movff	?___fldiv+3,_current+3
  7414                           
  7415                           ;tester.c: 166: voltage = (lettura[2]);
  7416  002792  EE20  F0AB         	lfsr	2,_lettura+4
  7417  002796  CFDE F00F          	movff	postinc2,___xxtofl@val
  7418  00279A  CFDD F010          	movff	postdec2,___xxtofl@val+1
  7419  00279E  0E00               	movlw	0
  7420  0027A0  BE10               	btfsc	___xxtofl@val+1,7,c
  7421  0027A2  0EFF               	movlw	-1
  7422  0027A4  6E11               	movwf	___xxtofl@val+2,c
  7423  0027A6  6E12               	movwf	___xxtofl@val+3,c
  7424  0027A8  0E01               	movlw	1
  7425  0027AA  ECE1  F014         	call	___xxtofl
  7426  0027AE  C00F  F0BD         	movff	?___xxtofl,_voltage
  7427  0027B2  C010  F0BE         	movff	?___xxtofl+1,_voltage+1
  7428  0027B6  C011  F0BF         	movff	?___xxtofl+2,_voltage+2
  7429  0027BA  C012  F0C0         	movff	?___xxtofl+3,_voltage+3
  7430                           
  7431                           ;tester.c: 167: voltage = (voltage * 5) / 1024;
  7432  0027BE  0E00               	movlw	0
  7433  0027C0  6E21               	movwf	___flmul@a,c
  7434  0027C2  0E00               	movlw	0
  7435  0027C4  6E22               	movwf	___flmul@a+1,c
  7436  0027C6  0EA0               	movlw	160
  7437  0027C8  6E23               	movwf	___flmul@a+2,c
  7438  0027CA  0E40               	movlw	64
  7439  0027CC  6E24               	movwf	___flmul@a+3,c
  7440  0027CE  C0BD  F01D         	movff	_voltage,___flmul@b
  7441  0027D2  C0BE  F01E         	movff	_voltage+1,___flmul@b+1
  7442  0027D6  C0BF  F01F         	movff	_voltage+2,___flmul@b+2
  7443  0027DA  C0C0  F020         	movff	_voltage+3,___flmul@b+3
  7444  0027DE  ECFD  F00C         	call	___flmul	;wreg free
  7445  0027E2  C01D  F036         	movff	?___flmul,___fldiv@b
  7446  0027E6  C01E  F037         	movff	?___flmul+1,___fldiv@b+1
  7447  0027EA  C01F  F038         	movff	?___flmul+2,___fldiv@b+2
  7448  0027EE  C020  F039         	movff	?___flmul+3,___fldiv@b+3
  7449  0027F2  0E00               	movlw	0
  7450  0027F4  6E3A               	movwf	___fldiv@a,c
  7451  0027F6  0E00               	movlw	0
  7452  0027F8  6E3B               	movwf	___fldiv@a+1,c
  7453  0027FA  0E80               	movlw	128
  7454  0027FC  6E3C               	movwf	___fldiv@a+2,c
  7455  0027FE  0E44               	movlw	68
  7456  002800  6E3D               	movwf	___fldiv@a+3,c
  7457  002802  ECA5  F00E         	call	___fldiv	;wreg free
  7458  002806  C036  F0BD         	movff	?___fldiv,_voltage
  7459  00280A  C037  F0BE         	movff	?___fldiv+1,_voltage+1
  7460  00280E  C038  F0BF         	movff	?___fldiv+2,_voltage+2
  7461  002812  C039  F0C0         	movff	?___fldiv+3,_voltage+3
  7462                           
  7463                           ;tester.c: 168: voltage = voltage / rapporto;
  7464  002816  C0BD  F036         	movff	_voltage,___fldiv@b
  7465  00281A  C0BE  F037         	movff	_voltage+1,___fldiv@b+1
  7466  00281E  C0BF  F038         	movff	_voltage+2,___fldiv@b+2
  7467  002822  C0C0  F039         	movff	_voltage+3,___fldiv@b+3
  7468  002826  C046  F03A         	movff	_rapporto,___fldiv@a
  7469  00282A  C047  F03B         	movff	_rapporto+1,___fldiv@a+1
  7470  00282E  C048  F03C         	movff	_rapporto+2,___fldiv@a+2
  7471  002832  C049  F03D         	movff	_rapporto+3,___fldiv@a+3
  7472  002836  ECA5  F00E         	call	___fldiv	;wreg free
  7473  00283A  C036  F0BD         	movff	?___fldiv,_voltage
  7474  00283E  C037  F0BE         	movff	?___fldiv+1,_voltage+1
  7475  002842  C038  F0BF         	movff	?___fldiv+2,_voltage+2
  7476  002846  C039  F0C0         	movff	?___fldiv+3,_voltage+3
  7477  00284A  0012               	return		;funcret
  7478  00284C                     __end_of_read_adc:
  7479                           	opt stack 0
  7480                           tblptru	equ	0xFF8
  7481                           tblptrh	equ	0xFF7
  7482                           tblptrl	equ	0xFF6
  7483                           tablat	equ	0xFF5
  7484                           prodh	equ	0xFF4
  7485                           prodl	equ	0xFF3
  7486                           intcon	equ	0xFF2
  7487                           postinc0	equ	0xFEE
  7488                           wreg	equ	0xFE8
  7489                           indf1	equ	0xFE7
  7490                           plusw1	equ	0xFE3
  7491                           fsr1h	equ	0xFE2
  7492                           fsr1l	equ	0xFE1
  7493                           indf2	equ	0xFDF
  7494                           postinc2	equ	0xFDE
  7495                           postdec2	equ	0xFDD
  7496                           plusw2	equ	0xFDB
  7497                           fsr2h	equ	0xFDA
  7498                           fsr2l	equ	0xFD9
  7499                           status	equ	0xFD8
  7500                           
  7501 ;; *************** function ___xxtofl *****************
  7502 ;; Defined at:
  7503 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\xxtofl.c"
  7504 ;; Parameters:    Size  Location     Type
  7505 ;;  sign            1    wreg     unsigned char 
  7506 ;;  val             4   14[COMRAM] long 
  7507 ;; Auto vars:     Size  Location     Type
  7508 ;;  sign            1   22[COMRAM] unsigned char 
  7509 ;;  arg             4   24[COMRAM] unsigned long 
  7510 ;;  exp             1   23[COMRAM] unsigned char 
  7511 ;; Return value:  Size  Location     Type
  7512 ;;                  4   14[COMRAM] unsigned char 
  7513 ;; Registers used:
  7514 ;;		wreg, status,2, status,0
  7515 ;; Tracked objects:
  7516 ;;		On entry : 0/0
  7517 ;;		On exit  : 0/0
  7518 ;;		Unchanged: 0/0
  7519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7520 ;;      Params:         4       0       0       0       0       0       0       0       0
  7521 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7522 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7523 ;;      Totals:        14       0       0       0       0       0       0       0       0
  7524 ;;Total ram usage:       14 bytes
  7525 ;; Hardware stack levels used:    1
  7526 ;; Hardware stack levels required when called:    1
  7527 ;; This function calls:
  7528 ;;		Nothing
  7529 ;; This function is called by:
  7530 ;;		_scarica
  7531 ;;		_read_adc
  7532 ;;		_sprintf
  7533 ;; This function uses a non-reentrant model
  7534 ;;
  7535                           
  7536                           	psect	text25
  7537  0029C2                     __ptext25:
  7538                           	opt stack 0
  7539  0029C2                     ___xxtofl:
  7540                           	opt stack 27
  7541                           
  7542                           ;incstack = 0
  7543                           ;___xxtofl@sign stored from wreg
  7544  0029C2  6E17               	movwf	___xxtofl@sign,c
  7545  0029C4  5017               	movf	___xxtofl@sign,w,c
  7546  0029C6  A4D8               	btfss	status,2,c
  7547  0029C8  AE12               	btfss	___xxtofl@val+3,7,c
  7548  0029CA  D01A               	goto	l910
  7549  0029CC  C00F  F013         	movff	___xxtofl@val,??___xxtofl
  7550  0029D0  C010  F014         	movff	___xxtofl@val+1,??___xxtofl+1
  7551  0029D4  C011  F015         	movff	___xxtofl@val+2,??___xxtofl+2
  7552  0029D8  C012  F016         	movff	___xxtofl@val+3,??___xxtofl+3
  7553  0029DC  1E13               	comf	??___xxtofl,f,c
  7554  0029DE  1E14               	comf	??___xxtofl+1,f,c
  7555  0029E0  1E15               	comf	??___xxtofl+2,f,c
  7556  0029E2  1E16               	comf	??___xxtofl+3,f,c
  7557  0029E4  2A13               	incf	??___xxtofl,f,c
  7558  0029E6  0E00               	movlw	0
  7559  0029E8  2214               	addwfc	??___xxtofl+1,f,c
  7560  0029EA  2215               	addwfc	??___xxtofl+2,f,c
  7561  0029EC  2216               	addwfc	??___xxtofl+3,f,c
  7562  0029EE  C013  F019         	movff	??___xxtofl,___xxtofl@arg
  7563  0029F2  C014  F01A         	movff	??___xxtofl+1,___xxtofl@arg+1
  7564  0029F6  C015  F01B         	movff	??___xxtofl+2,___xxtofl@arg+2
  7565  0029FA  C016  F01C         	movff	??___xxtofl+3,___xxtofl@arg+3
  7566  0029FE  D008               	goto	l3552
  7567  002A00                     l910:
  7568  002A00  C00F  F019         	movff	___xxtofl@val,___xxtofl@arg
  7569  002A04  C010  F01A         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7570  002A08  C011  F01B         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7571  002A0C  C012  F01C         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7572  002A10                     l3552:
  7573  002A10  500F               	movf	___xxtofl@val,w,c
  7574  002A12  1010               	iorwf	___xxtofl@val+1,w,c
  7575  002A14  1011               	iorwf	___xxtofl@val+2,w,c
  7576  002A16  1012               	iorwf	___xxtofl@val+3,w,c
  7577  002A18  A4D8               	btfss	status,2,c
  7578  002A1A  D009               	goto	l3558
  7579  002A1C  0E00               	movlw	0
  7580  002A1E  6E0F               	movwf	?___xxtofl,c
  7581  002A20  0E00               	movlw	0
  7582  002A22  6E10               	movwf	?___xxtofl+1,c
  7583  002A24  0E00               	movlw	0
  7584  002A26  6E11               	movwf	?___xxtofl+2,c
  7585  002A28  0E00               	movlw	0
  7586  002A2A  6E12               	movwf	?___xxtofl+3,c
  7587  002A2C  0012               	return	
  7588  002A2E                     l3558:
  7589  002A2E  0E96               	movlw	150
  7590  002A30  6E18               	movwf	___xxtofl@exp,c
  7591  002A32  D006               	goto	l3562
  7592  002A34                     l3560:
  7593  002A34  2A18               	incf	___xxtofl@exp,f,c
  7594  002A36  90D8               	bcf	status,0,c
  7595  002A38  321C               	rrcf	___xxtofl@arg+3,f,c
  7596  002A3A  321B               	rrcf	___xxtofl@arg+2,f,c
  7597  002A3C  321A               	rrcf	___xxtofl@arg+1,f,c
  7598  002A3E  3219               	rrcf	___xxtofl@arg,f,c
  7599  002A40                     l3562:
  7600  002A40  0E00               	movlw	0
  7601  002A42  1419               	andwf	___xxtofl@arg,w,c
  7602  002A44  6E13               	movwf	??___xxtofl& (0+255),c
  7603  002A46  0E00               	movlw	0
  7604  002A48  141A               	andwf	___xxtofl@arg+1,w,c
  7605  002A4A  6E14               	movwf	(??___xxtofl+1)& (0+255),c
  7606  002A4C  0E00               	movlw	0
  7607  002A4E  141B               	andwf	___xxtofl@arg+2,w,c
  7608  002A50  6E15               	movwf	(??___xxtofl+2)& (0+255),c
  7609  002A52  0EFE               	movlw	254
  7610  002A54  141C               	andwf	___xxtofl@arg+3,w,c
  7611  002A56  6E16               	movwf	(??___xxtofl+3)& (0+255),c
  7612  002A58  5013               	movf	??___xxtofl,w,c
  7613  002A5A  1014               	iorwf	??___xxtofl+1,w,c
  7614  002A5C  1015               	iorwf	??___xxtofl+2,w,c
  7615  002A5E  1016               	iorwf	??___xxtofl+3,w,c
  7616  002A60  B4D8               	btfsc	status,2,c
  7617  002A62  D00D               	goto	l917
  7618  002A64  D7E7               	goto	l3560
  7619  002A66                     l3564:
  7620  002A66  2A18               	incf	___xxtofl@exp,f,c
  7621  002A68  0E01               	movlw	1
  7622  002A6A  2619               	addwf	___xxtofl@arg,f,c
  7623  002A6C  0E00               	movlw	0
  7624  002A6E  221A               	addwfc	___xxtofl@arg+1,f,c
  7625  002A70  221B               	addwfc	___xxtofl@arg+2,f,c
  7626  002A72  221C               	addwfc	___xxtofl@arg+3,f,c
  7627  002A74  90D8               	bcf	status,0,c
  7628  002A76  321C               	rrcf	___xxtofl@arg+3,f,c
  7629  002A78  321B               	rrcf	___xxtofl@arg+2,f,c
  7630  002A7A  321A               	rrcf	___xxtofl@arg+1,f,c
  7631  002A7C  3219               	rrcf	___xxtofl@arg,f,c
  7632  002A7E                     l917:
  7633  002A7E  0E00               	movlw	0
  7634  002A80  1419               	andwf	___xxtofl@arg,w,c
  7635  002A82  6E13               	movwf	??___xxtofl& (0+255),c
  7636  002A84  0E00               	movlw	0
  7637  002A86  141A               	andwf	___xxtofl@arg+1,w,c
  7638  002A88  6E14               	movwf	(??___xxtofl+1)& (0+255),c
  7639  002A8A  0E00               	movlw	0
  7640  002A8C  141B               	andwf	___xxtofl@arg+2,w,c
  7641  002A8E  6E15               	movwf	(??___xxtofl+2)& (0+255),c
  7642  002A90  0EFF               	movlw	255
  7643  002A92  141C               	andwf	___xxtofl@arg+3,w,c
  7644  002A94  6E16               	movwf	(??___xxtofl+3)& (0+255),c
  7645  002A96  5013               	movf	??___xxtofl,w,c
  7646  002A98  1014               	iorwf	??___xxtofl+1,w,c
  7647  002A9A  1015               	iorwf	??___xxtofl+2,w,c
  7648  002A9C  1016               	iorwf	??___xxtofl+3,w,c
  7649  002A9E  B4D8               	btfsc	status,2,c
  7650  002AA0  D007               	goto	l3572
  7651  002AA2  D7E1               	goto	l3564
  7652  002AA4                     l3570:
  7653  002AA4  0618               	decf	___xxtofl@exp,f,c
  7654  002AA6  90D8               	bcf	status,0,c
  7655  002AA8  3619               	rlcf	___xxtofl@arg,f,c
  7656  002AAA  361A               	rlcf	___xxtofl@arg+1,f,c
  7657  002AAC  361B               	rlcf	___xxtofl@arg+2,f,c
  7658  002AAE  361C               	rlcf	___xxtofl@arg+3,f,c
  7659  002AB0                     l3572:
  7660  002AB0  BE1B               	btfsc	___xxtofl@arg+2,7,c
  7661  002AB2  D003               	goto	l924
  7662  002AB4  0E02               	movlw	2
  7663  002AB6  6018               	cpfslt	___xxtofl@exp,c
  7664  002AB8  D7F5               	goto	l3570
  7665  002ABA                     l924:
  7666  002ABA  B018               	btfsc	___xxtofl@exp,0,c
  7667  002ABC  D008               	goto	l925
  7668  002ABE  0EFF               	movlw	255
  7669  002AC0  1619               	andwf	___xxtofl@arg,f,c
  7670  002AC2  0EFF               	movlw	255
  7671  002AC4  161A               	andwf	___xxtofl@arg+1,f,c
  7672  002AC6  0E7F               	movlw	127
  7673  002AC8  161B               	andwf	___xxtofl@arg+2,f,c
  7674  002ACA  0EFF               	movlw	255
  7675  002ACC  161C               	andwf	___xxtofl@arg+3,f,c
  7676  002ACE                     l925:
  7677  002ACE  90D8               	bcf	status,0,c
  7678  002AD0  3218               	rrcf	___xxtofl@exp,f,c
  7679  002AD2  C018  F013         	movff	___xxtofl@exp,??___xxtofl
  7680  002AD6  6A14               	clrf	(??___xxtofl+1)& (0+255),c
  7681  002AD8  6A15               	clrf	(??___xxtofl+2)& (0+255),c
  7682  002ADA  6A16               	clrf	(??___xxtofl+3)& (0+255),c
  7683  002ADC  C013  F016         	movff	??___xxtofl,??___xxtofl+3
  7684  002AE0  6A15               	clrf	??___xxtofl+2,c
  7685  002AE2  6A14               	clrf	??___xxtofl+1,c
  7686  002AE4  6A13               	clrf	??___xxtofl,c
  7687  002AE6  5013               	movf	??___xxtofl,w,c
  7688  002AE8  1219               	iorwf	___xxtofl@arg,f,c
  7689  002AEA  5014               	movf	??___xxtofl+1,w,c
  7690  002AEC  121A               	iorwf	___xxtofl@arg+1,f,c
  7691  002AEE  5015               	movf	??___xxtofl+2,w,c
  7692  002AF0  121B               	iorwf	___xxtofl@arg+2,f,c
  7693  002AF2  5016               	movf	??___xxtofl+3,w,c
  7694  002AF4  121C               	iorwf	___xxtofl@arg+3,f,c
  7695  002AF6  5017               	movf	___xxtofl@sign,w,c
  7696  002AF8  A4D8               	btfss	status,2,c
  7697  002AFA  AE12               	btfss	___xxtofl@val+3,7,c
  7698  002AFC  D001               	goto	l3584
  7699  002AFE  8E1C               	bsf	___xxtofl@arg+3,7,c
  7700  002B00                     l3584:
  7701  002B00  C019  F00F         	movff	___xxtofl@arg,?___xxtofl
  7702  002B04  C01A  F010         	movff	___xxtofl@arg+1,?___xxtofl+1
  7703  002B08  C01B  F011         	movff	___xxtofl@arg+2,?___xxtofl+2
  7704  002B0C  C01C  F012         	movff	___xxtofl@arg+3,?___xxtofl+3
  7705  002B10  0012               	return	
  7706  002B12                     __end_of___xxtofl:
  7707                           	opt stack 0
  7708                           tblptru	equ	0xFF8
  7709                           tblptrh	equ	0xFF7
  7710                           tblptrl	equ	0xFF6
  7711                           tablat	equ	0xFF5
  7712                           prodh	equ	0xFF4
  7713                           prodl	equ	0xFF3
  7714                           intcon	equ	0xFF2
  7715                           postinc0	equ	0xFEE
  7716                           wreg	equ	0xFE8
  7717                           indf1	equ	0xFE7
  7718                           plusw1	equ	0xFE3
  7719                           fsr1h	equ	0xFE2
  7720                           fsr1l	equ	0xFE1
  7721                           indf2	equ	0xFDF
  7722                           postinc2	equ	0xFDE
  7723                           postdec2	equ	0xFDD
  7724                           plusw2	equ	0xFDB
  7725                           fsr2h	equ	0xFDA
  7726                           fsr2l	equ	0xFD9
  7727                           status	equ	0xFD8
  7728                           
  7729 ;; *************** function ___flmul *****************
  7730 ;; Defined at:
  7731 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcmul.c"
  7732 ;; Parameters:    Size  Location     Type
  7733 ;;  b               4   28[COMRAM] unsigned char 
  7734 ;;  a               4   32[COMRAM] unsigned char 
  7735 ;; Auto vars:     Size  Location     Type
  7736 ;;  prod            4   47[COMRAM] struct .
  7737 ;;  grs             4   41[COMRAM] unsigned long 
  7738 ;;  temp            2   51[COMRAM] struct .
  7739 ;;  bexp            1   46[COMRAM] unsigned char 
  7740 ;;  aexp            1   45[COMRAM] unsigned char 
  7741 ;;  sign            1   40[COMRAM] unsigned char 
  7742 ;; Return value:  Size  Location     Type
  7743 ;;                  4   28[COMRAM] unsigned char 
  7744 ;; Registers used:
  7745 ;;		wreg, status,2, status,0, prodl, prodh
  7746 ;; Tracked objects:
  7747 ;;		On entry : 0/0
  7748 ;;		On exit  : 0/0
  7749 ;;		Unchanged: 0/0
  7750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7751 ;;      Params:         8       0       0       0       0       0       0       0       0
  7752 ;;      Locals:        13       0       0       0       0       0       0       0       0
  7753 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7754 ;;      Totals:        25       0       0       0       0       0       0       0       0
  7755 ;;Total ram usage:       25 bytes
  7756 ;; Hardware stack levels used:    1
  7757 ;; Hardware stack levels required when called:    1
  7758 ;; This function calls:
  7759 ;;		Nothing
  7760 ;; This function is called by:
  7761 ;;		_read_adc
  7762 ;;		_fround
  7763 ;;		_scale
  7764 ;;		_sprintf
  7765 ;; This function uses a non-reentrant model
  7766 ;;
  7767                           
  7768                           	psect	text26
  7769  0019FA                     __ptext26:
  7770                           	opt stack 0
  7771  0019FA                     ___flmul:
  7772                           	opt stack 26
  7773                           
  7774                           ;incstack = 0
  7775  0019FA  5020               	movf	___flmul@b+3,w,c
  7776  0019FC  0B80               	andlw	128
  7777  0019FE  6E29               	movwf	___flmul@sign,c
  7778  001A00  5020               	movf	___flmul@b+3,w,c
  7779  001A02  2420               	addwf	___flmul@b+3,w,c
  7780  001A04  6E2F               	movwf	___flmul@bexp,c
  7781  001A06  BE1F               	btfsc	___flmul@b+2,7,c
  7782  001A08  802F               	bsf	___flmul@bexp,0,c
  7783  001A0A  502F               	movf	___flmul@bexp,w,c
  7784  001A0C  B4D8               	btfsc	status,2,c
  7785  001A0E  D00D               	goto	l2854
  7786  001A10  282F               	incf	___flmul@bexp,w,c
  7787  001A12  A4D8               	btfss	status,2,c
  7788  001A14  D008               	goto	l2852
  7789  001A16  0E00               	movlw	0
  7790  001A18  6E1D               	movwf	___flmul@b,c
  7791  001A1A  0E00               	movlw	0
  7792  001A1C  6E1E               	movwf	___flmul@b+1,c
  7793  001A1E  0E00               	movlw	0
  7794  001A20  6E1F               	movwf	___flmul@b+2,c
  7795  001A22  0E00               	movlw	0
  7796  001A24  6E20               	movwf	___flmul@b+3,c
  7797  001A26                     l2852:
  7798  001A26  8E1F               	bsf	___flmul@b+2,7,c
  7799  001A28  D008               	goto	l2856
  7800  001A2A                     l2854:
  7801  001A2A  0E00               	movlw	0
  7802  001A2C  6E1D               	movwf	___flmul@b,c
  7803  001A2E  0E00               	movlw	0
  7804  001A30  6E1E               	movwf	___flmul@b+1,c
  7805  001A32  0E00               	movlw	0
  7806  001A34  6E1F               	movwf	___flmul@b+2,c
  7807  001A36  0E00               	movlw	0
  7808  001A38  6E20               	movwf	___flmul@b+3,c
  7809  001A3A                     l2856:
  7810  001A3A  5024               	movf	___flmul@a+3,w,c
  7811  001A3C  0B80               	andlw	128
  7812  001A3E  1A29               	xorwf	___flmul@sign,f,c
  7813  001A40  5024               	movf	___flmul@a+3,w,c
  7814  001A42  2424               	addwf	___flmul@a+3,w,c
  7815  001A44  6E2E               	movwf	___flmul@aexp,c
  7816  001A46  BE23               	btfsc	___flmul@a+2,7,c
  7817  001A48  802E               	bsf	___flmul@aexp,0,c
  7818  001A4A  502E               	movf	___flmul@aexp,w,c
  7819  001A4C  B4D8               	btfsc	status,2,c
  7820  001A4E  D00D               	goto	l2872
  7821  001A50  282E               	incf	___flmul@aexp,w,c
  7822  001A52  A4D8               	btfss	status,2,c
  7823  001A54  D008               	goto	l2870
  7824  001A56  0E00               	movlw	0
  7825  001A58  6E21               	movwf	___flmul@a,c
  7826  001A5A  0E00               	movlw	0
  7827  001A5C  6E22               	movwf	___flmul@a+1,c
  7828  001A5E  0E00               	movlw	0
  7829  001A60  6E23               	movwf	___flmul@a+2,c
  7830  001A62  0E00               	movlw	0
  7831  001A64  6E24               	movwf	___flmul@a+3,c
  7832  001A66                     l2870:
  7833  001A66  8E23               	bsf	___flmul@a+2,7,c
  7834  001A68  D008               	goto	l888
  7835  001A6A                     l2872:
  7836  001A6A  0E00               	movlw	0
  7837  001A6C  6E21               	movwf	___flmul@a,c
  7838  001A6E  0E00               	movlw	0
  7839  001A70  6E22               	movwf	___flmul@a+1,c
  7840  001A72  0E00               	movlw	0
  7841  001A74  6E23               	movwf	___flmul@a+2,c
  7842  001A76  0E00               	movlw	0
  7843  001A78  6E24               	movwf	___flmul@a+3,c
  7844  001A7A                     l888:
  7845  001A7A  502E               	movf	___flmul@aexp,w,c
  7846  001A7C  B4D8               	btfsc	status,2,c
  7847  001A7E  D003               	goto	l2876
  7848  001A80  502F               	movf	___flmul@bexp,w,c
  7849  001A82  A4D8               	btfss	status,2,c
  7850  001A84  D009               	goto	l2880
  7851  001A86                     l2876:
  7852  001A86  0E00               	movlw	0
  7853  001A88  6E1D               	movwf	?___flmul,c
  7854  001A8A  0E00               	movlw	0
  7855  001A8C  6E1E               	movwf	?___flmul+1,c
  7856  001A8E  0E00               	movlw	0
  7857  001A90  6E1F               	movwf	?___flmul+2,c
  7858  001A92  0E00               	movlw	0
  7859  001A94  6E20               	movwf	?___flmul+3,c
  7860  001A96  0012               	return	
  7861  001A98                     l2880:
  7862  001A98  5023               	movf	___flmul@a+2,w,c
  7863  001A9A  021D               	mulwf	___flmul@b,c
  7864  001A9C  CFF3 F034          	movff	prodl,___flmul@temp
  7865  001AA0  CFF4 F035          	movff	prodh,___flmul@temp+1
  7866  001AA4  5034               	movf	___flmul@temp,w,c
  7867  001AA6  6E2A               	movwf	___flmul@grs,c
  7868  001AA8  6A2B               	clrf	___flmul@grs+1,c
  7869  001AAA  6A2C               	clrf	___flmul@grs+2,c
  7870  001AAC  6A2D               	clrf	___flmul@grs+3,c
  7871  001AAE  5035               	movf	___flmul@temp+1,w,c
  7872  001AB0  6E30               	movwf	___flmul@prod,c
  7873  001AB2  6A31               	clrf	___flmul@prod+1,c
  7874  001AB4  6A32               	clrf	___flmul@prod+2,c
  7875  001AB6  6A33               	clrf	___flmul@prod+3,c
  7876  001AB8  5022               	movf	___flmul@a+1,w,c
  7877  001ABA  021E               	mulwf	___flmul@b+1,c
  7878  001ABC  CFF3 F034          	movff	prodl,___flmul@temp
  7879  001AC0  CFF4 F035          	movff	prodh,___flmul@temp+1
  7880  001AC4  5034               	movf	___flmul@temp,w,c
  7881  001AC6  262A               	addwf	___flmul@grs,f,c
  7882  001AC8  0E00               	movlw	0
  7883  001ACA  222B               	addwfc	___flmul@grs+1,f,c
  7884  001ACC  222C               	addwfc	___flmul@grs+2,f,c
  7885  001ACE  222D               	addwfc	___flmul@grs+3,f,c
  7886  001AD0  5035               	movf	___flmul@temp+1,w,c
  7887  001AD2  2630               	addwf	___flmul@prod,f,c
  7888  001AD4  0E00               	movlw	0
  7889  001AD6  2231               	addwfc	___flmul@prod+1,f,c
  7890  001AD8  2232               	addwfc	___flmul@prod+2,f,c
  7891  001ADA  2233               	addwfc	___flmul@prod+3,f,c
  7892  001ADC  5021               	movf	___flmul@a,w,c
  7893  001ADE  021F               	mulwf	___flmul@b+2,c
  7894  001AE0  CFF3 F034          	movff	prodl,___flmul@temp
  7895  001AE4  CFF4 F035          	movff	prodh,___flmul@temp+1
  7896  001AE8  5034               	movf	___flmul@temp,w,c
  7897  001AEA  262A               	addwf	___flmul@grs,f,c
  7898  001AEC  0E00               	movlw	0
  7899  001AEE  222B               	addwfc	___flmul@grs+1,f,c
  7900  001AF0  222C               	addwfc	___flmul@grs+2,f,c
  7901  001AF2  222D               	addwfc	___flmul@grs+3,f,c
  7902  001AF4  5035               	movf	___flmul@temp+1,w,c
  7903  001AF6  2630               	addwf	___flmul@prod,f,c
  7904  001AF8  0E00               	movlw	0
  7905  001AFA  2231               	addwfc	___flmul@prod+1,f,c
  7906  001AFC  2232               	addwfc	___flmul@prod+2,f,c
  7907  001AFE  2233               	addwfc	___flmul@prod+3,f,c
  7908  001B00  C02C  F02D         	movff	___flmul@grs+2,___flmul@grs+3
  7909  001B04  C02B  F02C         	movff	___flmul@grs+1,___flmul@grs+2
  7910  001B08  C02A  F02B         	movff	___flmul@grs,___flmul@grs+1
  7911  001B0C  6A2A               	clrf	___flmul@grs,c
  7912  001B0E  5021               	movf	___flmul@a,w,c
  7913  001B10  021E               	mulwf	___flmul@b+1,c
  7914  001B12  CFF3 F034          	movff	prodl,___flmul@temp
  7915  001B16  CFF4 F035          	movff	prodh,___flmul@temp+1
  7916  001B1A  5034               	movf	___flmul@temp,w,c
  7917  001B1C  262A               	addwf	___flmul@grs,f,c
  7918  001B1E  5035               	movf	___flmul@temp+1,w,c
  7919  001B20  222B               	addwfc	___flmul@grs+1,f,c
  7920  001B22  0E00               	movlw	0
  7921  001B24  222C               	addwfc	___flmul@grs+2,f,c
  7922  001B26  0E00               	movlw	0
  7923  001B28  222D               	addwfc	___flmul@grs+3,f,c
  7924  001B2A  5022               	movf	___flmul@a+1,w,c
  7925  001B2C  021D               	mulwf	___flmul@b,c
  7926  001B2E  CFF3 F034          	movff	prodl,___flmul@temp
  7927  001B32  CFF4 F035          	movff	prodh,___flmul@temp+1
  7928  001B36  5034               	movf	___flmul@temp,w,c
  7929  001B38  262A               	addwf	___flmul@grs,f,c
  7930  001B3A  5035               	movf	___flmul@temp+1,w,c
  7931  001B3C  222B               	addwfc	___flmul@grs+1,f,c
  7932  001B3E  0E00               	movlw	0
  7933  001B40  222C               	addwfc	___flmul@grs+2,f,c
  7934  001B42  0E00               	movlw	0
  7935  001B44  222D               	addwfc	___flmul@grs+3,f,c
  7936  001B46  C02C  F02D         	movff	___flmul@grs+2,___flmul@grs+3
  7937  001B4A  C02B  F02C         	movff	___flmul@grs+1,___flmul@grs+2
  7938  001B4E  C02A  F02B         	movff	___flmul@grs,___flmul@grs+1
  7939  001B52  6A2A               	clrf	___flmul@grs,c
  7940  001B54  5021               	movf	___flmul@a,w,c
  7941  001B56  021D               	mulwf	___flmul@b,c
  7942  001B58  CFF3 F034          	movff	prodl,___flmul@temp
  7943  001B5C  CFF4 F035          	movff	prodh,___flmul@temp+1
  7944  001B60  5034               	movf	___flmul@temp,w,c
  7945  001B62  262A               	addwf	___flmul@grs,f,c
  7946  001B64  5035               	movf	___flmul@temp+1,w,c
  7947  001B66  222B               	addwfc	___flmul@grs+1,f,c
  7948  001B68  0E00               	movlw	0
  7949  001B6A  222C               	addwfc	___flmul@grs+2,f,c
  7950  001B6C  0E00               	movlw	0
  7951  001B6E  222D               	addwfc	___flmul@grs+3,f,c
  7952  001B70  5023               	movf	___flmul@a+2,w,c
  7953  001B72  021E               	mulwf	___flmul@b+1,c
  7954  001B74  CFF3 F034          	movff	prodl,___flmul@temp
  7955  001B78  CFF4 F035          	movff	prodh,___flmul@temp+1
  7956  001B7C  5034               	movf	___flmul@temp,w,c
  7957  001B7E  2630               	addwf	___flmul@prod,f,c
  7958  001B80  5035               	movf	___flmul@temp+1,w,c
  7959  001B82  2231               	addwfc	___flmul@prod+1,f,c
  7960  001B84  0E00               	movlw	0
  7961  001B86  2232               	addwfc	___flmul@prod+2,f,c
  7962  001B88  0E00               	movlw	0
  7963  001B8A  2233               	addwfc	___flmul@prod+3,f,c
  7964  001B8C  5022               	movf	___flmul@a+1,w,c
  7965  001B8E  021F               	mulwf	___flmul@b+2,c
  7966  001B90  CFF3 F034          	movff	prodl,___flmul@temp
  7967  001B94  CFF4 F035          	movff	prodh,___flmul@temp+1
  7968  001B98  5034               	movf	___flmul@temp,w,c
  7969  001B9A  2630               	addwf	___flmul@prod,f,c
  7970  001B9C  5035               	movf	___flmul@temp+1,w,c
  7971  001B9E  2231               	addwfc	___flmul@prod+1,f,c
  7972  001BA0  0E00               	movlw	0
  7973  001BA2  2232               	addwfc	___flmul@prod+2,f,c
  7974  001BA4  0E00               	movlw	0
  7975  001BA6  2233               	addwfc	___flmul@prod+3,f,c
  7976  001BA8  5023               	movf	___flmul@a+2,w,c
  7977  001BAA  021F               	mulwf	___flmul@b+2,c
  7978  001BAC  CFF3 F034          	movff	prodl,___flmul@temp
  7979  001BB0  CFF4 F035          	movff	prodh,___flmul@temp+1
  7980  001BB4  5034               	movf	___flmul@temp,w,c
  7981  001BB6  6E25               	movwf	??___flmul& (0+255),c
  7982  001BB8  5035               	movf	___flmul@temp+1,w,c
  7983  001BBA  6E26               	movwf	(??___flmul+1)& (0+255),c
  7984  001BBC  6A27               	clrf	(??___flmul+2)& (0+255),c
  7985  001BBE  6A28               	clrf	(??___flmul+3)& (0+255),c
  7986  001BC0  C027  F028         	movff	??___flmul+2,??___flmul+3
  7987  001BC4  C026  F027         	movff	??___flmul+1,??___flmul+2
  7988  001BC8  C025  F026         	movff	??___flmul,??___flmul+1
  7989  001BCC  6A25               	clrf	??___flmul,c
  7990  001BCE  5025               	movf	??___flmul,w,c
  7991  001BD0  2630               	addwf	___flmul@prod,f,c
  7992  001BD2  5026               	movf	??___flmul+1,w,c
  7993  001BD4  2231               	addwfc	___flmul@prod+1,f,c
  7994  001BD6  5027               	movf	??___flmul+2,w,c
  7995  001BD8  2232               	addwfc	___flmul@prod+2,f,c
  7996  001BDA  5028               	movf	??___flmul+3,w,c
  7997  001BDC  2233               	addwfc	___flmul@prod+3,f,c
  7998  001BDE  C02A  F025         	movff	___flmul@grs,??___flmul
  7999  001BE2  C02B  F026         	movff	___flmul@grs+1,??___flmul+1
  8000  001BE6  C02C  F027         	movff	___flmul@grs+2,??___flmul+2
  8001  001BEA  C02D  F028         	movff	___flmul@grs+3,??___flmul+3
  8002  001BEE  0E19               	movlw	25
  8003  001BF0  D005               	goto	u2780
  8004  001BF2                     u2785:
  8005  001BF2  90D8               	bcf	status,0,c
  8006  001BF4  3228               	rrcf	??___flmul+3,f,c
  8007  001BF6  3227               	rrcf	??___flmul+2,f,c
  8008  001BF8  3226               	rrcf	??___flmul+1,f,c
  8009  001BFA  3225               	rrcf	??___flmul,f,c
  8010  001BFC                     u2780:
  8011  001BFC  2EE8               	decfsz	wreg,f,c
  8012  001BFE  D7F9               	goto	u2785
  8013  001C00  5025               	movf	??___flmul,w,c
  8014  001C02  2630               	addwf	___flmul@prod,f,c
  8015  001C04  5026               	movf	??___flmul+1,w,c
  8016  001C06  2231               	addwfc	___flmul@prod+1,f,c
  8017  001C08  5027               	movf	??___flmul+2,w,c
  8018  001C0A  2232               	addwfc	___flmul@prod+2,f,c
  8019  001C0C  5028               	movf	??___flmul+3,w,c
  8020  001C0E  2233               	addwfc	___flmul@prod+3,f,c
  8021  001C10  C02C  F02D         	movff	___flmul@grs+2,___flmul@grs+3
  8022  001C14  C02B  F02C         	movff	___flmul@grs+1,___flmul@grs+2
  8023  001C18  C02A  F02B         	movff	___flmul@grs,___flmul@grs+1
  8024  001C1C  6A2A               	clrf	___flmul@grs,c
  8025  001C1E  502E               	movf	___flmul@aexp,w,c
  8026  001C20  C02F  F025         	movff	___flmul@bexp,??___flmul
  8027  001C24  6A26               	clrf	(??___flmul+1)& (0+255),c
  8028  001C26  2625               	addwf	??___flmul,f,c
  8029  001C28  0E00               	movlw	0
  8030  001C2A  2226               	addwfc	??___flmul+1,f,c
  8031  001C2C  0E82               	movlw	130
  8032  001C2E  2425               	addwf	??___flmul,w,c
  8033  001C30  6E34               	movwf	___flmul@temp,c
  8034  001C32  0EFF               	movlw	255
  8035  001C34  2026               	addwfc	??___flmul+1,w,c
  8036  001C36  6E35               	movwf	___flmul@temp+1,c
  8037  001C38  D00F               	goto	l2928
  8038  001C3A                     l2922:
  8039  001C3A  90D8               	bcf	status,0,c
  8040  001C3C  3630               	rlcf	___flmul@prod,f,c
  8041  001C3E  3631               	rlcf	___flmul@prod+1,f,c
  8042  001C40  3632               	rlcf	___flmul@prod+2,f,c
  8043  001C42  3633               	rlcf	___flmul@prod+3,f,c
  8044  001C44  BE2D               	btfsc	___flmul@grs+3,7,c
  8045  001C46  8030               	bsf	___flmul@prod,0,c
  8046  001C48  90D8               	bcf	status,0,c
  8047  001C4A  362A               	rlcf	___flmul@grs,f,c
  8048  001C4C  362B               	rlcf	___flmul@grs+1,f,c
  8049  001C4E  362C               	rlcf	___flmul@grs+2,f,c
  8050  001C50  362D               	rlcf	___flmul@grs+3,f,c
  8051  001C52  0634               	decf	___flmul@temp,f,c
  8052  001C54  A0D8               	btfss	status,0,c
  8053  001C56  0635               	decf	___flmul@temp+1,f,c
  8054  001C58                     l2928:
  8055  001C58  AE32               	btfss	___flmul@prod+2,7,c
  8056  001C5A  D7EF               	goto	l2922
  8057  001C5C  0E00               	movlw	0
  8058  001C5E  6E2E               	movwf	___flmul@aexp,c
  8059  001C60  AE2D               	btfss	___flmul@grs+3,7,c
  8060  001C62  D016               	goto	l897
  8061  001C64  0EFF               	movlw	255
  8062  001C66  142A               	andwf	___flmul@grs,w,c
  8063  001C68  6E25               	movwf	??___flmul& (0+255),c
  8064  001C6A  0EFF               	movlw	255
  8065  001C6C  142B               	andwf	___flmul@grs+1,w,c
  8066  001C6E  6E26               	movwf	(??___flmul+1)& (0+255),c
  8067  001C70  0EFF               	movlw	255
  8068  001C72  142C               	andwf	___flmul@grs+2,w,c
  8069  001C74  6E27               	movwf	(??___flmul+2)& (0+255),c
  8070  001C76  0E7F               	movlw	127
  8071  001C78  142D               	andwf	___flmul@grs+3,w,c
  8072  001C7A  6E28               	movwf	(??___flmul+3)& (0+255),c
  8073  001C7C  5025               	movf	??___flmul,w,c
  8074  001C7E  1026               	iorwf	??___flmul+1,w,c
  8075  001C80  1027               	iorwf	??___flmul+2,w,c
  8076  001C82  1028               	iorwf	??___flmul+3,w,c
  8077  001C84  A4D8               	btfss	status,2,c
  8078  001C86  D002               	goto	l2938
  8079  001C88  A030               	btfss	___flmul@prod,0,c
  8080  001C8A  D002               	goto	l897
  8081  001C8C                     l2938:
  8082  001C8C  0E01               	movlw	1
  8083  001C8E  6E2E               	movwf	___flmul@aexp,c
  8084  001C90                     l897:
  8085  001C90  502E               	movf	___flmul@aexp,w,c
  8086  001C92  B4D8               	btfsc	status,2,c
  8087  001C94  D01F               	goto	l2948
  8088  001C96  0E01               	movlw	1
  8089  001C98  2630               	addwf	___flmul@prod,f,c
  8090  001C9A  0E00               	movlw	0
  8091  001C9C  2231               	addwfc	___flmul@prod+1,f,c
  8092  001C9E  2232               	addwfc	___flmul@prod+2,f,c
  8093  001CA0  2233               	addwfc	___flmul@prod+3,f,c
  8094  001CA2  A033               	btfss	___flmul@prod+3,0,c
  8095  001CA4  D017               	goto	l2948
  8096  001CA6  C030  F025         	movff	___flmul@prod,??___flmul
  8097  001CAA  C031  F026         	movff	___flmul@prod+1,??___flmul+1
  8098  001CAE  C032  F027         	movff	___flmul@prod+2,??___flmul+2
  8099  001CB2  C033  F028         	movff	___flmul@prod+3,??___flmul+3
  8100  001CB6  3428               	rlcf	??___flmul+3,w,c
  8101  001CB8  3228               	rrcf	??___flmul+3,f,c
  8102  001CBA  3227               	rrcf	??___flmul+2,f,c
  8103  001CBC  3226               	rrcf	??___flmul+1,f,c
  8104  001CBE  3225               	rrcf	??___flmul,f,c
  8105  001CC0  C025  F030         	movff	??___flmul,___flmul@prod
  8106  001CC4  C026  F031         	movff	??___flmul+1,___flmul@prod+1
  8107  001CC8  C027  F032         	movff	??___flmul+2,___flmul@prod+2
  8108  001CCC  C028  F033         	movff	??___flmul+3,___flmul@prod+3
  8109  001CD0  4A34               	infsnz	___flmul@temp,f,c
  8110  001CD2  2A35               	incf	___flmul@temp+1,f,c
  8111  001CD4                     l2948:
  8112  001CD4  BE35               	btfsc	___flmul@temp+1,7,c
  8113  001CD6  D00D               	goto	l2952
  8114  001CD8  5035               	movf	___flmul@temp+1,w,c
  8115  001CDA  E103               	bnz	u2860
  8116  001CDC  2834               	incf	___flmul@temp,w,c
  8117  001CDE  A0D8               	btfss	status,0,c
  8118  001CE0  D008               	goto	l2952
  8119  001CE2                     u2860:
  8120  001CE2  0E00               	movlw	0
  8121  001CE4  6E30               	movwf	___flmul@prod,c
  8122  001CE6  0E00               	movlw	0
  8123  001CE8  6E31               	movwf	___flmul@prod+1,c
  8124  001CEA  0E80               	movlw	128
  8125  001CEC  6E32               	movwf	___flmul@prod+2,c
  8126  001CEE  0E7F               	movlw	127
  8127  001CF0  D020               	goto	L10
  8128  001CF2                     l2952:
  8129  001CF2  BE35               	btfsc	___flmul@temp+1,7,c
  8130  001CF4  D005               	goto	l2954
  8131  001CF6  5035               	movf	___flmul@temp+1,w,c
  8132  001CF8  E10E               	bnz	l905
  8133  001CFA  0434               	decf	___flmul@temp,w,c
  8134  001CFC  B0D8               	btfsc	status,0,c
  8135  001CFE  D00B               	goto	l905
  8136  001D00                     l2954:
  8137  001D00  0E00               	movlw	0
  8138  001D02  6E30               	movwf	___flmul@prod,c
  8139  001D04  0E00               	movlw	0
  8140  001D06  6E31               	movwf	___flmul@prod+1,c
  8141  001D08  0E00               	movlw	0
  8142  001D0A  6E32               	movwf	___flmul@prod+2,c
  8143  001D0C  0E00               	movlw	0
  8144  001D0E  6E33               	movwf	___flmul@prod+3,c
  8145  001D10  0E00               	movlw	0
  8146  001D12  6E29               	movwf	___flmul@sign,c
  8147  001D14  D00F               	goto	l2964
  8148  001D16                     l905:
  8149  001D16  C034  F02F         	movff	___flmul@temp,___flmul@bexp
  8150  001D1A  0EFF               	movlw	255
  8151  001D1C  1630               	andwf	___flmul@prod,f,c
  8152  001D1E  0EFF               	movlw	255
  8153  001D20  1631               	andwf	___flmul@prod+1,f,c
  8154  001D22  0E7F               	movlw	127
  8155  001D24  1632               	andwf	___flmul@prod+2,f,c
  8156  001D26  0E00               	movlw	0
  8157  001D28  1633               	andwf	___flmul@prod+3,f,c
  8158  001D2A  B02F               	btfsc	___flmul@bexp,0,c
  8159  001D2C  8E32               	bsf	___flmul@prod+2,7,c
  8160  001D2E  90D8               	bcf	status,0,c
  8161  001D30  302F               	rrcf	___flmul@bexp,w,c
  8162  001D32                     L10:
  8163  001D32  6E33               	movwf	___flmul@prod+3,c
  8164  001D34                     l2964:
  8165  001D34  5029               	movf	___flmul@sign,w,c
  8166  001D36  1233               	iorwf	___flmul@prod+3,f,c
  8167  001D38  C030  F01D         	movff	___flmul@prod,?___flmul
  8168  001D3C  C031  F01E         	movff	___flmul@prod+1,?___flmul+1
  8169  001D40  C032  F01F         	movff	___flmul@prod+2,?___flmul+2
  8170  001D44  C033  F020         	movff	___flmul@prod+3,?___flmul+3
  8171  001D48  0012               	return	
  8172  001D4A                     __end_of___flmul:
  8173                           	opt stack 0
  8174                           tblptru	equ	0xFF8
  8175                           tblptrh	equ	0xFF7
  8176                           tblptrl	equ	0xFF6
  8177                           tablat	equ	0xFF5
  8178                           prodh	equ	0xFF4
  8179                           prodl	equ	0xFF3
  8180                           intcon	equ	0xFF2
  8181                           postinc0	equ	0xFEE
  8182                           wreg	equ	0xFE8
  8183                           indf1	equ	0xFE7
  8184                           plusw1	equ	0xFE3
  8185                           fsr1h	equ	0xFE2
  8186                           fsr1l	equ	0xFE1
  8187                           indf2	equ	0xFDF
  8188                           postinc2	equ	0xFDE
  8189                           postdec2	equ	0xFDD
  8190                           plusw2	equ	0xFDB
  8191                           fsr2h	equ	0xFDA
  8192                           fsr2l	equ	0xFD9
  8193                           status	equ	0xFD8
  8194                           
  8195 ;; *************** function ___fldiv *****************
  8196 ;; Defined at:
  8197 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcdiv.c"
  8198 ;; Parameters:    Size  Location     Type
  8199 ;;  b               4   53[COMRAM] unsigned char 
  8200 ;;  a               4   57[COMRAM] unsigned char 
  8201 ;; Auto vars:     Size  Location     Type
  8202 ;;  grs             4    7[BANK0 ] unsigned long 
  8203 ;;  rem             4    1[BANK0 ] unsigned long 
  8204 ;;  new_exp         2    5[BANK0 ] int 
  8205 ;;  aexp            1   12[BANK0 ] unsigned char 
  8206 ;;  bexp            1   11[BANK0 ] unsigned char 
  8207 ;;  sign            1    0[BANK0 ] unsigned char 
  8208 ;; Return value:  Size  Location     Type
  8209 ;;                  4   53[COMRAM] unsigned char 
  8210 ;; Registers used:
  8211 ;;		wreg, status,2, status,0
  8212 ;; Tracked objects:
  8213 ;;		On entry : 0/0
  8214 ;;		On exit  : 0/0
  8215 ;;		Unchanged: 0/0
  8216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8217 ;;      Params:         8       0       0       0       0       0       0       0       0
  8218 ;;      Locals:         0      13       0       0       0       0       0       0       0
  8219 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8220 ;;      Totals:        12      13       0       0       0       0       0       0       0
  8221 ;;Total ram usage:       25 bytes
  8222 ;; Hardware stack levels used:    1
  8223 ;; Hardware stack levels required when called:    1
  8224 ;; This function calls:
  8225 ;;		Nothing
  8226 ;; This function is called by:
  8227 ;;		_main
  8228 ;;		_scarica
  8229 ;;		_read_adc
  8230 ;; This function uses a non-reentrant model
  8231 ;;
  8232                           
  8233                           	psect	text27
  8234  001D4A                     __ptext27:
  8235                           	opt stack 0
  8236  001D4A                     ___fldiv:
  8237                           	opt stack 27
  8238                           
  8239                           ;incstack = 0
  8240  001D4A  5039               	movf	___fldiv@b+3,w,c
  8241  001D4C  0B80               	andlw	128
  8242  001D4E  0100               	movlb	0	; () banked
  8243  001D50  6F60               	movwf	___fldiv@sign& (0+255),b
  8244  001D52  5039               	movf	___fldiv@b+3,w,c
  8245  001D54  2439               	addwf	___fldiv@b+3,w,c
  8246  001D56  0100               	movlb	0	; () banked
  8247  001D58  6F6B               	movwf	___fldiv@bexp& (0+255),b
  8248                           
  8249                           ; BSR set to: 0
  8250  001D5A  AE38               	btfss	___fldiv@b+2,7,c
  8251  001D5C  D002               	goto	l4328
  8252                           
  8253                           ; BSR set to: 0
  8254  001D5E  0100               	movlb	0	; () banked
  8255  001D60  816B               	bsf	___fldiv@bexp& (0+255),0,b
  8256  001D62                     l4328:
  8257                           
  8258                           ; BSR set to: 0
  8259  001D62  0100               	movlb	0	; () banked
  8260  001D64  516B               	movf	___fldiv@bexp& (0+255),w,b
  8261  001D66  0100               	movlb	0	; () banked
  8262  001D68  B4D8               	btfsc	status,2,c
  8263  001D6A  D00E               	goto	l4338
  8264                           
  8265                           ; BSR set to: 0
  8266  001D6C  0100               	movlb	0	; () banked
  8267  001D6E  296B               	incf	___fldiv@bexp& (0+255),w,b
  8268  001D70  A4D8               	btfss	status,2,c
  8269  001D72  D008               	goto	l4334
  8270                           
  8271                           ; BSR set to: 0
  8272  001D74  0E00               	movlw	0
  8273  001D76  6E36               	movwf	___fldiv@b,c
  8274  001D78  0E00               	movlw	0
  8275  001D7A  6E37               	movwf	___fldiv@b+1,c
  8276  001D7C  0E00               	movlw	0
  8277  001D7E  6E38               	movwf	___fldiv@b+2,c
  8278  001D80  0E00               	movlw	0
  8279  001D82  6E39               	movwf	___fldiv@b+3,c
  8280  001D84                     l4334:
  8281                           
  8282                           ; BSR set to: 0
  8283  001D84  8E38               	bsf	___fldiv@b+2,7,c
  8284  001D86  D006               	goto	L11
  8285  001D88                     l4338:
  8286                           
  8287                           ; BSR set to: 0
  8288  001D88  0E00               	movlw	0
  8289  001D8A  6E36               	movwf	___fldiv@b,c
  8290  001D8C  0E00               	movlw	0
  8291  001D8E  6E37               	movwf	___fldiv@b+1,c
  8292  001D90  0E00               	movlw	0
  8293  001D92  6E38               	movwf	___fldiv@b+2,c
  8294  001D94                     L11:
  8295  001D94  0E00               	movlw	0
  8296  001D96  6E39               	movwf	___fldiv@b+3,c
  8297                           
  8298                           ; BSR set to: 0
  8299                           
  8300                           ; BSR set to: 0
  8301  001D98  503D               	movf	___fldiv@a+3,w,c
  8302  001D9A  0B80               	andlw	128
  8303  001D9C  0100               	movlb	0	; () banked
  8304  001D9E  1B60               	xorwf	___fldiv@sign& (0+255),f,b
  8305                           
  8306                           ; BSR set to: 0
  8307  001DA0  503D               	movf	___fldiv@a+3,w,c
  8308  001DA2  243D               	addwf	___fldiv@a+3,w,c
  8309  001DA4  0100               	movlb	0	; () banked
  8310  001DA6  6F6C               	movwf	___fldiv@aexp& (0+255),b
  8311                           
  8312                           ; BSR set to: 0
  8313  001DA8  AE3C               	btfss	___fldiv@a+2,7,c
  8314  001DAA  D002               	goto	l4348
  8315                           
  8316                           ; BSR set to: 0
  8317  001DAC  0100               	movlb	0	; () banked
  8318  001DAE  816C               	bsf	___fldiv@aexp& (0+255),0,b
  8319  001DB0                     l4348:
  8320                           
  8321                           ; BSR set to: 0
  8322  001DB0  0100               	movlb	0	; () banked
  8323  001DB2  516C               	movf	___fldiv@aexp& (0+255),w,b
  8324  001DB4  0100               	movlb	0	; () banked
  8325  001DB6  B4D8               	btfsc	status,2,c
  8326  001DB8  D00E               	goto	l4358
  8327                           
  8328                           ; BSR set to: 0
  8329  001DBA  0100               	movlb	0	; () banked
  8330  001DBC  296C               	incf	___fldiv@aexp& (0+255),w,b
  8331  001DBE  A4D8               	btfss	status,2,c
  8332  001DC0  D008               	goto	l4354
  8333                           
  8334                           ; BSR set to: 0
  8335  001DC2  0E00               	movlw	0
  8336  001DC4  6E3A               	movwf	___fldiv@a,c
  8337  001DC6  0E00               	movlw	0
  8338  001DC8  6E3B               	movwf	___fldiv@a+1,c
  8339  001DCA  0E00               	movlw	0
  8340  001DCC  6E3C               	movwf	___fldiv@a+2,c
  8341  001DCE  0E00               	movlw	0
  8342  001DD0  6E3D               	movwf	___fldiv@a+3,c
  8343  001DD2                     l4354:
  8344                           
  8345                           ; BSR set to: 0
  8346  001DD2  8E3C               	bsf	___fldiv@a+2,7,c
  8347  001DD4  D006               	goto	L12
  8348  001DD6                     l4358:
  8349                           
  8350                           ; BSR set to: 0
  8351  001DD6  0E00               	movlw	0
  8352  001DD8  6E3A               	movwf	___fldiv@a,c
  8353  001DDA  0E00               	movlw	0
  8354  001DDC  6E3B               	movwf	___fldiv@a+1,c
  8355  001DDE  0E00               	movlw	0
  8356  001DE0  6E3C               	movwf	___fldiv@a+2,c
  8357  001DE2                     L12:
  8358  001DE2  0E00               	movlw	0
  8359  001DE4  6E3D               	movwf	___fldiv@a+3,c
  8360                           
  8361                           ; BSR set to: 0
  8362                           
  8363                           ; BSR set to: 0
  8364  001DE6  503A               	movf	___fldiv@a,w,c
  8365  001DE8  103B               	iorwf	___fldiv@a+1,w,c
  8366  001DEA  103C               	iorwf	___fldiv@a+2,w,c
  8367  001DEC  103D               	iorwf	___fldiv@a+3,w,c
  8368  001DEE  A4D8               	btfss	status,2,c
  8369  001DF0  D015               	goto	l4370
  8370                           
  8371                           ; BSR set to: 0
  8372  001DF2  0E00               	movlw	0
  8373  001DF4  6E36               	movwf	___fldiv@b,c
  8374  001DF6  0E00               	movlw	0
  8375  001DF8  6E37               	movwf	___fldiv@b+1,c
  8376  001DFA  0E00               	movlw	0
  8377  001DFC  6E38               	movwf	___fldiv@b+2,c
  8378  001DFE  0E00               	movlw	0
  8379  001E00  6E39               	movwf	___fldiv@b+3,c
  8380                           
  8381                           ; BSR set to: 0
  8382  001E02  0E80               	movlw	128
  8383  001E04  1238               	iorwf	___fldiv@b+2,f,c
  8384  001E06  0E7F               	movlw	127
  8385  001E08  1239               	iorwf	___fldiv@b+3,f,c
  8386                           
  8387                           ; BSR set to: 0
  8388  001E0A  C036  F036         	movff	___fldiv@b,?___fldiv
  8389  001E0E  C037  F037         	movff	___fldiv@b+1,?___fldiv+1
  8390  001E12  C038  F038         	movff	___fldiv@b+2,?___fldiv+2
  8391  001E16  C039  F039         	movff	___fldiv@b+3,?___fldiv+3
  8392                           
  8393                           ; BSR set to: 0
  8394  001E1A  0012               	return	
  8395  001E1C                     l4370:
  8396                           
  8397                           ; BSR set to: 0
  8398  001E1C  0100               	movlb	0	; () banked
  8399  001E1E  516B               	movf	___fldiv@bexp& (0+255),w,b
  8400  001E20  0100               	movlb	0	; () banked
  8401  001E22  A4D8               	btfss	status,2,c
  8402  001E24  D011               	goto	l4378
  8403                           
  8404                           ; BSR set to: 0
  8405  001E26  0E00               	movlw	0
  8406  001E28  6E36               	movwf	___fldiv@b,c
  8407  001E2A  0E00               	movlw	0
  8408  001E2C  6E37               	movwf	___fldiv@b+1,c
  8409  001E2E  0E00               	movlw	0
  8410  001E30  6E38               	movwf	___fldiv@b+2,c
  8411  001E32  0E00               	movlw	0
  8412  001E34  6E39               	movwf	___fldiv@b+3,c
  8413                           
  8414                           ; BSR set to: 0
  8415  001E36  C036  F036         	movff	___fldiv@b,?___fldiv
  8416  001E3A  C037  F037         	movff	___fldiv@b+1,?___fldiv+1
  8417  001E3E  C038  F038         	movff	___fldiv@b+2,?___fldiv+2
  8418  001E42  C039  F039         	movff	___fldiv@b+3,?___fldiv+3
  8419                           
  8420                           ; BSR set to: 0
  8421  001E46  0012               	return	
  8422  001E48                     l4378:
  8423                           
  8424                           ; BSR set to: 0
  8425  001E48  0100               	movlb	0	; () banked
  8426  001E4A  516C               	movf	___fldiv@aexp& (0+255),w,b
  8427  001E4C  6E3E               	movwf	??___fldiv& (0+255),c
  8428  001E4E  6A3F               	clrf	(??___fldiv+1)& (0+255),c
  8429  001E50  1E3E               	comf	??___fldiv,f,c
  8430  001E52  1E3F               	comf	??___fldiv+1,f,c
  8431  001E54  4A3E               	infsnz	??___fldiv,f,c
  8432  001E56  2A3F               	incf	??___fldiv+1,f,c
  8433  001E58  0100               	movlb	0	; () banked
  8434  001E5A  516B               	movf	___fldiv@bexp& (0+255),w,b
  8435  001E5C  6E40               	movwf	(??___fldiv+2)& (0+255),c
  8436  001E5E  6A41               	clrf	(??___fldiv+3)& (0+255),c
  8437  001E60  503E               	movf	??___fldiv,w,c
  8438  001E62  2640               	addwf	??___fldiv+2,f,c
  8439  001E64  503F               	movf	??___fldiv+1,w,c
  8440  001E66  2241               	addwfc	??___fldiv+3,f,c
  8441  001E68  0E7F               	movlw	127
  8442  001E6A  2440               	addwf	??___fldiv+2,w,c
  8443  001E6C  0100               	movlb	0	; () banked
  8444  001E6E  6F65               	movwf	___fldiv@new_exp& (0+255),b
  8445  001E70  0E00               	movlw	0
  8446  001E72  2041               	addwfc	??___fldiv+3,w,c
  8447  001E74  0100               	movlb	0	; () banked
  8448  001E76  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
  8449                           
  8450                           ; BSR set to: 0
  8451  001E78  C036  F061         	movff	___fldiv@b,___fldiv@rem
  8452  001E7C  C037  F062         	movff	___fldiv@b+1,___fldiv@rem+1
  8453  001E80  C038  F063         	movff	___fldiv@b+2,___fldiv@rem+2
  8454  001E84  C039  F064         	movff	___fldiv@b+3,___fldiv@rem+3
  8455                           
  8456                           ; BSR set to: 0
  8457  001E88  0E00               	movlw	0
  8458  001E8A  6E36               	movwf	___fldiv@b,c
  8459  001E8C  0E00               	movlw	0
  8460  001E8E  6E37               	movwf	___fldiv@b+1,c
  8461  001E90  0E00               	movlw	0
  8462  001E92  6E38               	movwf	___fldiv@b+2,c
  8463  001E94  0E00               	movlw	0
  8464  001E96  6E39               	movwf	___fldiv@b+3,c
  8465                           
  8466                           ; BSR set to: 0
  8467  001E98  0E00               	movlw	0
  8468  001E9A  0100               	movlb	0	; () banked
  8469  001E9C  6F67               	movwf	___fldiv@grs& (0+255),b
  8470  001E9E  0E00               	movlw	0
  8471  001EA0  6F68               	movwf	(___fldiv@grs+1)& (0+255),b
  8472  001EA2  0E00               	movlw	0
  8473  001EA4  6F69               	movwf	(___fldiv@grs+2)& (0+255),b
  8474  001EA6  0E00               	movlw	0
  8475  001EA8  6F6A               	movwf	(___fldiv@grs+3)& (0+255),b
  8476                           
  8477                           ; BSR set to: 0
  8478  001EAA  0E00               	movlw	0
  8479  001EAC  0100               	movlb	0	; () banked
  8480  001EAE  6F6C               	movwf	___fldiv@aexp& (0+255),b
  8481  001EB0  D037               	goto	l858
  8482  001EB2                     l4388:
  8483                           
  8484                           ; BSR set to: 0
  8485  001EB2  0100               	movlb	0	; () banked
  8486  001EB4  516C               	movf	___fldiv@aexp& (0+255),w,b
  8487  001EB6  0100               	movlb	0	; () banked
  8488  001EB8  B4D8               	btfsc	status,2,c
  8489  001EBA  D014               	goto	l4396
  8490                           
  8491                           ; BSR set to: 0
  8492  001EBC  0100               	movlb	0	; () banked
  8493  001EBE  90D8               	bcf	status,0,c
  8494  001EC0  3761               	rlcf	___fldiv@rem& (0+255),f,b
  8495  001EC2  3762               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  8496  001EC4  3763               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  8497  001EC6  3764               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  8498  001EC8  90D8               	bcf	status,0,c
  8499  001ECA  3636               	rlcf	___fldiv@b,f,c
  8500  001ECC  3637               	rlcf	___fldiv@b+1,f,c
  8501  001ECE  3638               	rlcf	___fldiv@b+2,f,c
  8502  001ED0  3639               	rlcf	___fldiv@b+3,f,c
  8503                           
  8504                           ; BSR set to: 0
  8505  001ED2  0100               	movlb	0	; () banked
  8506  001ED4  BF6A               	btfsc	(___fldiv@grs+3)& (0+255),7,b
  8507                           
  8508                           ; BSR set to: 0
  8509  001ED6  8036               	bsf	___fldiv@b,0,c
  8510                           
  8511                           ; BSR set to: 0
  8512  001ED8  0100               	movlb	0	; () banked
  8513  001EDA  90D8               	bcf	status,0,c
  8514  001EDC  3767               	rlcf	___fldiv@grs& (0+255),f,b
  8515  001EDE  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  8516  001EE0  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  8517  001EE2  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  8518  001EE4                     l4396:
  8519                           
  8520                           ; BSR set to: 0
  8521  001EE4  503A               	movf	___fldiv@a,w,c
  8522  001EE6  0100               	movlb	0	; () banked
  8523  001EE8  5D61               	subwf	___fldiv@rem& (0+255),w,b
  8524  001EEA  503B               	movf	___fldiv@a+1,w,c
  8525  001EEC  0100               	movlb	0	; () banked
  8526  001EEE  5962               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  8527  001EF0  503C               	movf	___fldiv@a+2,w,c
  8528  001EF2  0100               	movlb	0	; () banked
  8529  001EF4  5963               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  8530  001EF6  503D               	movf	___fldiv@a+3,w,c
  8531  001EF8  0100               	movlb	0	; () banked
  8532  001EFA  5964               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  8533  001EFC  A0D8               	btfss	status,0,c
  8534  001EFE  D00E               	goto	l4402
  8535                           
  8536                           ; BSR set to: 0
  8537  001F00  0100               	movlb	0	; () banked
  8538  001F02  8D6A               	bsf	(___fldiv@grs+3)& (0+255),6,b
  8539                           
  8540                           ; BSR set to: 0
  8541  001F04  503A               	movf	___fldiv@a,w,c
  8542  001F06  0100               	movlb	0	; () banked
  8543  001F08  5F61               	subwf	___fldiv@rem& (0+255),f,b
  8544  001F0A  503B               	movf	___fldiv@a+1,w,c
  8545  001F0C  0100               	movlb	0	; () banked
  8546  001F0E  5B62               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  8547  001F10  503C               	movf	___fldiv@a+2,w,c
  8548  001F12  0100               	movlb	0	; () banked
  8549  001F14  5B63               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  8550  001F16  503D               	movf	___fldiv@a+3,w,c
  8551  001F18  0100               	movlb	0	; () banked
  8552  001F1A  5B64               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  8553  001F1C                     l4402:
  8554                           
  8555                           ; BSR set to: 0
  8556  001F1C  0100               	movlb	0	; () banked
  8557  001F1E  2B6C               	incf	___fldiv@aexp& (0+255),f,b
  8558  001F20                     l858:
  8559                           
  8560                           ; BSR set to: 0
  8561  001F20  0E19               	movlw	25
  8562  001F22  0100               	movlb	0	; () banked
  8563  001F24  656C               	cpfsgt	___fldiv@aexp& (0+255),b
  8564  001F26  D7C5               	goto	l4388
  8565                           
  8566                           ; BSR set to: 0
  8567                           
  8568                           ; BSR set to: 0
  8569  001F28  0100               	movlb	0	; () banked
  8570  001F2A  5161               	movf	___fldiv@rem& (0+255),w,b
  8571  001F2C  0100               	movlb	0	; () banked
  8572  001F2E  1162               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  8573  001F30  0100               	movlb	0	; () banked
  8574  001F32  1163               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  8575  001F34  0100               	movlb	0	; () banked
  8576  001F36  1164               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  8577  001F38  B4D8               	btfsc	status,2,c
  8578  001F3A  D015               	goto	l4414
  8579                           
  8580                           ; BSR set to: 0
  8581  001F3C  0100               	movlb	0	; () banked
  8582  001F3E  8167               	bsf	___fldiv@grs& (0+255),0,b
  8583                           
  8584                           ; BSR set to: 0
  8585  001F40  D012               	goto	l4414
  8586  001F42                     l4408:
  8587                           
  8588                           ; BSR set to: 0
  8589  001F42  90D8               	bcf	status,0,c
  8590  001F44  3636               	rlcf	___fldiv@b,f,c
  8591  001F46  3637               	rlcf	___fldiv@b+1,f,c
  8592  001F48  3638               	rlcf	___fldiv@b+2,f,c
  8593  001F4A  3639               	rlcf	___fldiv@b+3,f,c
  8594                           
  8595                           ; BSR set to: 0
  8596  001F4C  0100               	movlb	0	; () banked
  8597  001F4E  BF6A               	btfsc	(___fldiv@grs+3)& (0+255),7,b
  8598                           
  8599                           ; BSR set to: 0
  8600  001F50  8036               	bsf	___fldiv@b,0,c
  8601                           
  8602                           ; BSR set to: 0
  8603  001F52  0100               	movlb	0	; () banked
  8604  001F54  90D8               	bcf	status,0,c
  8605  001F56  3767               	rlcf	___fldiv@grs& (0+255),f,b
  8606  001F58  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  8607  001F5A  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  8608  001F5C  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  8609  001F5E  0100               	movlb	0	; () banked
  8610  001F60  0765               	decf	___fldiv@new_exp& (0+255),f,b
  8611  001F62  A0D8               	btfss	status,0,c
  8612  001F64  0766               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  8613  001F66                     l4414:
  8614                           
  8615                           ; BSR set to: 0
  8616  001F66  AE38               	btfss	___fldiv@b+2,7,c
  8617  001F68  D7EC               	goto	l4408
  8618                           
  8619                           ; BSR set to: 0
  8620                           
  8621                           ; BSR set to: 0
  8622  001F6A  0E00               	movlw	0
  8623  001F6C  0100               	movlb	0	; () banked
  8624  001F6E  6F6C               	movwf	___fldiv@aexp& (0+255),b
  8625                           
  8626                           ; BSR set to: 0
  8627  001F70  0100               	movlb	0	; () banked
  8628  001F72  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
  8629  001F74  D01B               	goto	l869
  8630                           
  8631                           ; BSR set to: 0
  8632  001F76  0EFF               	movlw	255
  8633  001F78  0100               	movlb	0	; () banked
  8634  001F7A  1567               	andwf	___fldiv@grs& (0+255),w,b
  8635  001F7C  6E3E               	movwf	??___fldiv& (0+255),c
  8636  001F7E  0EFF               	movlw	255
  8637  001F80  0100               	movlb	0	; () banked
  8638  001F82  1568               	andwf	(___fldiv@grs+1)& (0+255),w,b
  8639  001F84  6E3F               	movwf	(??___fldiv+1)& (0+255),c
  8640  001F86  0EFF               	movlw	255
  8641  001F88  0100               	movlb	0	; () banked
  8642  001F8A  1569               	andwf	(___fldiv@grs+2)& (0+255),w,b
  8643  001F8C  6E40               	movwf	(??___fldiv+2)& (0+255),c
  8644  001F8E  0E7F               	movlw	127
  8645  001F90  0100               	movlb	0	; () banked
  8646  001F92  156A               	andwf	(___fldiv@grs+3)& (0+255),w,b
  8647  001F94  6E41               	movwf	(??___fldiv+3)& (0+255),c
  8648  001F96  503E               	movf	??___fldiv,w,c
  8649  001F98  103F               	iorwf	??___fldiv+1,w,c
  8650  001F9A  1040               	iorwf	??___fldiv+2,w,c
  8651  001F9C  1041               	iorwf	??___fldiv+3,w,c
  8652  001F9E  A4D8               	btfss	status,2,c
  8653  001FA0  D002               	goto	l4424
  8654                           
  8655                           ; BSR set to: 0
  8656                           
  8657                           ; BSR set to: 0
  8658  001FA2  A036               	btfss	___fldiv@b,0,c
  8659  001FA4  D003               	goto	l869
  8660  001FA6                     l4424:
  8661                           
  8662                           ; BSR set to: 0
  8663  001FA6  0E01               	movlw	1
  8664  001FA8  0100               	movlb	0	; () banked
  8665  001FAA  6F6C               	movwf	___fldiv@aexp& (0+255),b
  8666  001FAC                     l869:
  8667                           
  8668                           ; BSR set to: 0
  8669  001FAC  0100               	movlb	0	; () banked
  8670  001FAE  516C               	movf	___fldiv@aexp& (0+255),w,b
  8671  001FB0  0100               	movlb	0	; () banked
  8672  001FB2  B4D8               	btfsc	status,2,c
  8673  001FB4  D020               	goto	l4434
  8674                           
  8675                           ; BSR set to: 0
  8676  001FB6  0E01               	movlw	1
  8677  001FB8  2636               	addwf	___fldiv@b,f,c
  8678  001FBA  0E00               	movlw	0
  8679  001FBC  2237               	addwfc	___fldiv@b+1,f,c
  8680  001FBE  2238               	addwfc	___fldiv@b+2,f,c
  8681  001FC0  2239               	addwfc	___fldiv@b+3,f,c
  8682                           
  8683                           ; BSR set to: 0
  8684  001FC2  A039               	btfss	___fldiv@b+3,0,c
  8685  001FC4  D018               	goto	l4434
  8686                           
  8687                           ; BSR set to: 0
  8688  001FC6  C036  F03E         	movff	___fldiv@b,??___fldiv
  8689  001FCA  C037  F03F         	movff	___fldiv@b+1,??___fldiv+1
  8690  001FCE  C038  F040         	movff	___fldiv@b+2,??___fldiv+2
  8691  001FD2  C039  F041         	movff	___fldiv@b+3,??___fldiv+3
  8692  001FD6  3441               	rlcf	??___fldiv+3,w,c
  8693  001FD8  3241               	rrcf	??___fldiv+3,f,c
  8694  001FDA  3240               	rrcf	??___fldiv+2,f,c
  8695  001FDC  323F               	rrcf	??___fldiv+1,f,c
  8696  001FDE  323E               	rrcf	??___fldiv,f,c
  8697  001FE0  C03E  F036         	movff	??___fldiv,___fldiv@b
  8698  001FE4  C03F  F037         	movff	??___fldiv+1,___fldiv@b+1
  8699  001FE8  C040  F038         	movff	??___fldiv+2,___fldiv@b+2
  8700  001FEC  C041  F039         	movff	??___fldiv+3,___fldiv@b+3
  8701                           
  8702                           ; BSR set to: 0
  8703  001FF0  0100               	movlb	0	; () banked
  8704  001FF2  4B65               	infsnz	___fldiv@new_exp& (0+255),f,b
  8705  001FF4  2B66               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  8706  001FF6                     l4434:
  8707                           
  8708                           ; BSR set to: 0
  8709  001FF6  0100               	movlb	0	; () banked
  8710  001FF8  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  8711  001FFA  D013               	goto	l4438
  8712  001FFC  0100               	movlb	0	; () banked
  8713  001FFE  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  8714  002000  E104               	bnz	u4970
  8715  002002  0100               	movlb	0	; () banked
  8716  002004  2965               	incf	___fldiv@new_exp& (0+255),w,b
  8717  002006  A0D8               	btfss	status,0,c
  8718  002008  D00C               	goto	l4438
  8719  00200A                     u4970:
  8720                           
  8721                           ; BSR set to: 0
  8722  00200A  0E00               	movlw	0
  8723  00200C  0100               	movlb	0	; () banked
  8724  00200E  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
  8725  002010  6965               	setf	___fldiv@new_exp& (0+255),b
  8726  002012  0E00               	movlw	0
  8727  002014  6E36               	movwf	___fldiv@b,c
  8728  002016  0E00               	movlw	0
  8729  002018  6E37               	movwf	___fldiv@b+1,c
  8730  00201A  0E00               	movlw	0
  8731  00201C  6E38               	movwf	___fldiv@b+2,c
  8732  00201E  0E00               	movlw	0
  8733  002020  6E39               	movwf	___fldiv@b+3,c
  8734  002022                     l4438:
  8735                           
  8736                           ; BSR set to: 0
  8737  002022  0100               	movlb	0	; () banked
  8738  002024  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  8739  002026  D007               	goto	l4440
  8740  002028  0100               	movlb	0	; () banked
  8741  00202A  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  8742  00202C  E114               	bnz	l4442
  8743  00202E  0100               	movlb	0	; () banked
  8744  002030  0565               	decf	___fldiv@new_exp& (0+255),w,b
  8745  002032  B0D8               	btfsc	status,0,c
  8746  002034  D010               	goto	l4442
  8747  002036                     l4440:
  8748                           
  8749                           ; BSR set to: 0
  8750  002036  0E00               	movlw	0
  8751  002038  0100               	movlb	0	; () banked
  8752  00203A  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
  8753  00203C  0E00               	movlw	0
  8754  00203E  6F65               	movwf	___fldiv@new_exp& (0+255),b
  8755  002040  0E00               	movlw	0
  8756  002042  6E36               	movwf	___fldiv@b,c
  8757  002044  0E00               	movlw	0
  8758  002046  6E37               	movwf	___fldiv@b+1,c
  8759  002048  0E00               	movlw	0
  8760  00204A  6E38               	movwf	___fldiv@b+2,c
  8761  00204C  0E00               	movlw	0
  8762  00204E  6E39               	movwf	___fldiv@b+3,c
  8763  002050  0E00               	movlw	0
  8764  002052  0100               	movlb	0	; () banked
  8765  002054  6F60               	movwf	___fldiv@sign& (0+255),b
  8766  002056                     l4442:
  8767                           
  8768                           ; BSR set to: 0
  8769  002056  C065  F06B         	movff	___fldiv@new_exp,___fldiv@bexp
  8770                           
  8771                           ; BSR set to: 0
  8772  00205A  0100               	movlb	0	; () banked
  8773  00205C  A16B               	btfss	___fldiv@bexp& (0+255),0,b
  8774  00205E  D002               	goto	l4448
  8775                           
  8776                           ; BSR set to: 0
  8777  002060  8E38               	bsf	___fldiv@b+2,7,c
  8778  002062  D001               	goto	l4450
  8779  002064                     l4448:
  8780                           
  8781                           ; BSR set to: 0
  8782  002064  9E38               	bcf	___fldiv@b+2,7,c
  8783  002066                     l4450:
  8784                           
  8785                           ; BSR set to: 0
  8786  002066  0100               	movlb	0	; () banked
  8787  002068  90D8               	bcf	status,0,c
  8788  00206A  316B               	rrcf	___fldiv@bexp& (0+255),w,b
  8789  00206C  6E39               	movwf	___fldiv@b+3,c
  8790                           
  8791                           ; BSR set to: 0
  8792  00206E  0100               	movlb	0	; () banked
  8793  002070  5160               	movf	___fldiv@sign& (0+255),w,b
  8794  002072  1239               	iorwf	___fldiv@b+3,f,c
  8795                           
  8796                           ; BSR set to: 0
  8797  002074  C036  F036         	movff	___fldiv@b,?___fldiv
  8798  002078  C037  F037         	movff	___fldiv@b+1,?___fldiv+1
  8799  00207C  C038  F038         	movff	___fldiv@b+2,?___fldiv+2
  8800  002080  C039  F039         	movff	___fldiv@b+3,?___fldiv+3
  8801  002084  0012               	return	
  8802  002086                     __end_of___fldiv:
  8803                           	opt stack 0
  8804                           tblptru	equ	0xFF8
  8805                           tblptrh	equ	0xFF7
  8806                           tblptrl	equ	0xFF6
  8807                           tablat	equ	0xFF5
  8808                           prodh	equ	0xFF4
  8809                           prodl	equ	0xFF3
  8810                           intcon	equ	0xFF2
  8811                           postinc0	equ	0xFEE
  8812                           wreg	equ	0xFE8
  8813                           indf1	equ	0xFE7
  8814                           plusw1	equ	0xFE3
  8815                           fsr1h	equ	0xFE2
  8816                           fsr1l	equ	0xFE1
  8817                           indf2	equ	0xFDF
  8818                           postinc2	equ	0xFDE
  8819                           postdec2	equ	0xFDD
  8820                           plusw2	equ	0xFDB
  8821                           fsr2h	equ	0xFDA
  8822                           fsr2l	equ	0xFD9
  8823                           status	equ	0xFD8
  8824                           
  8825 ;; *************** function _LCD_write_string *****************
  8826 ;; Defined at:
  8827 ;;		line 194 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  8828 ;; Parameters:    Size  Location     Type
  8829 ;;  buffer          2   31[COMRAM] PTR unsigned char 
  8830 ;;		 -> str(8), LCD_write_integer@convertedInt(6), 
  8831 ;; Auto vars:     Size  Location     Type
  8832 ;;		None
  8833 ;; Return value:  Size  Location     Type
  8834 ;;		None               void
  8835 ;; Registers used:
  8836 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8837 ;; Tracked objects:
  8838 ;;		On entry : 0/0
  8839 ;;		On exit  : 0/0
  8840 ;;		Unchanged: 0/0
  8841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8842 ;;      Params:         2       0       0       0       0       0       0       0       0
  8843 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8844 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8845 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8846 ;;Total ram usage:        2 bytes
  8847 ;; Hardware stack levels used:    1
  8848 ;; Hardware stack levels required when called:    6
  8849 ;; This function calls:
  8850 ;;		_LCD_write_char
  8851 ;; This function is called by:
  8852 ;;		_LCD_write_integer
  8853 ;;		_scarica
  8854 ;;		_ricarica
  8855 ;; This function uses a non-reentrant model
  8856 ;;
  8857                           
  8858                           	psect	text28
  8859  0039AA                     __ptext28:
  8860                           	opt stack 0
  8861  0039AA                     _LCD_write_string:
  8862                           	opt stack 23
  8863                           
  8864                           ;src\LCD_44780.c: 197: while(*buffer){
  8865                           
  8866                           ; BSR set to: 0
  8867                           ;incstack = 0
  8868  0039AA  D009               	goto	l3086
  8869  0039AC                     l3082:
  8870                           
  8871                           ;src\LCD_44780.c: 200: LCD_write_char(*buffer);
  8872  0039AC  C020  FFD9         	movff	LCD_write_string@buffer,fsr2l
  8873  0039B0  C021  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
  8874  0039B4  50DF               	movf	indf2,w,c
  8875  0039B6  ECBC  F01A         	call	_LCD_write_char
  8876                           
  8877                           ;src\LCD_44780.c: 202: buffer++;
  8878  0039BA  4A20               	infsnz	LCD_write_string@buffer,f,c
  8879  0039BC  2A21               	incf	LCD_write_string@buffer+1,f,c
  8880  0039BE                     l3086:
  8881  0039BE  C020  FFD9         	movff	LCD_write_string@buffer,fsr2l
  8882  0039C2  C021  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
  8883  0039C6  50DF               	movf	indf2,w,c
  8884  0039C8  B4D8               	btfsc	status,2,c
  8885  0039CA  0012               	return	
  8886  0039CC  D7EF               	goto	l3082
  8887  0039CE                     __end_of_LCD_write_string:
  8888                           	opt stack 0
  8889                           tblptru	equ	0xFF8
  8890                           tblptrh	equ	0xFF7
  8891                           tblptrl	equ	0xFF6
  8892                           tablat	equ	0xFF5
  8893                           prodh	equ	0xFF4
  8894                           prodl	equ	0xFF3
  8895                           intcon	equ	0xFF2
  8896                           postinc0	equ	0xFEE
  8897                           wreg	equ	0xFE8
  8898                           indf1	equ	0xFE7
  8899                           plusw1	equ	0xFE3
  8900                           fsr1h	equ	0xFE2
  8901                           fsr1l	equ	0xFE1
  8902                           indf2	equ	0xFDF
  8903                           postinc2	equ	0xFDE
  8904                           postdec2	equ	0xFDD
  8905                           plusw2	equ	0xFDB
  8906                           fsr2h	equ	0xFDA
  8907                           fsr2l	equ	0xFD9
  8908                           status	equ	0xFD8
  8909                           
  8910 ;; *************** function _LCD_goto_line *****************
  8911 ;; Defined at:
  8912 ;;		line 111 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  8913 ;; Parameters:    Size  Location     Type
  8914 ;;  line            1    wreg     unsigned char 
  8915 ;; Auto vars:     Size  Location     Type
  8916 ;;  line            1   26[COMRAM] unsigned char 
  8917 ;; Return value:  Size  Location     Type
  8918 ;;		None               void
  8919 ;; Registers used:
  8920 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8921 ;; Tracked objects:
  8922 ;;		On entry : 0/0
  8923 ;;		On exit  : 0/0
  8924 ;;		Unchanged: 0/0
  8925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8926 ;;      Params:         0       0       0       0       0       0       0       0       0
  8927 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8928 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8929 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8930 ;;Total ram usage:        1 bytes
  8931 ;; Hardware stack levels used:    1
  8932 ;; Hardware stack levels required when called:    5
  8933 ;; This function calls:
  8934 ;;		_LCD_send_command
  8935 ;; This function is called by:
  8936 ;;		_scarica
  8937 ;;		_ricarica
  8938 ;;		_LCD_goto_xy
  8939 ;; This function uses a non-reentrant model
  8940 ;;
  8941                           
  8942                           	psect	text29
  8943  0032A6                     __ptext29:
  8944                           	opt stack 0
  8945  0032A6                     _LCD_goto_line:
  8946                           	opt stack 24
  8947                           
  8948                           ;incstack = 0
  8949                           ;LCD_goto_line@line stored from wreg
  8950  0032A6  6E1B               	movwf	LCD_goto_line@line,c
  8951                           
  8952                           ;src\LCD_44780.c: 113: switch(line) {
  8953  0032A8  D04C               	goto	l3598
  8954  0032AA                     l3590:
  8955  0032AA  0E00               	movlw	0
  8956  0032AC  6E17               	movwf	LCD_send_command@D2,c
  8957  0032AE  0E00               	movlw	0
  8958  0032B0  6E18               	movwf	LCD_send_command@D1,c
  8959  0032B2  0E00               	movlw	0
  8960  0032B4  6E19               	movwf	LCD_send_command@D0,c
  8961  0032B6  0E01               	movlw	1
  8962  0032B8  EC57  F01C         	call	_LCD_send_command
  8963                           
  8964                           ;src\LCD_44780.c: 116: LCD_send_command(0,0,0,0);
  8965  0032BC  0E00               	movlw	0
  8966  0032BE  6E17               	movwf	LCD_send_command@D2,c
  8967  0032C0  0E00               	movlw	0
  8968  0032C2  6E18               	movwf	LCD_send_command@D1,c
  8969  0032C4  0E00               	movlw	0
  8970  0032C6  6E19               	movwf	LCD_send_command@D0,c
  8971  0032C8  0E00               	movlw	0
  8972  0032CA  EC57  F01C         	call	_LCD_send_command
  8973                           
  8974                           ;src\LCD_44780.c: 117: break;
  8975  0032CE  0012               	return	
  8976  0032D0                     l3592:
  8977  0032D0  0E01               	movlw	1
  8978  0032D2  6E17               	movwf	LCD_send_command@D2,c
  8979  0032D4  0E00               	movlw	0
  8980  0032D6  6E18               	movwf	LCD_send_command@D1,c
  8981  0032D8  0E00               	movlw	0
  8982  0032DA  6E19               	movwf	LCD_send_command@D0,c
  8983  0032DC  0E01               	movlw	1
  8984  0032DE  EC57  F01C         	call	_LCD_send_command
  8985                           
  8986                           ;src\LCD_44780.c: 120: LCD_send_command(0,0,0,0);
  8987  0032E2  0E00               	movlw	0
  8988  0032E4  6E17               	movwf	LCD_send_command@D2,c
  8989  0032E6  0E00               	movlw	0
  8990  0032E8  6E18               	movwf	LCD_send_command@D1,c
  8991  0032EA  0E00               	movlw	0
  8992  0032EC  6E19               	movwf	LCD_send_command@D0,c
  8993  0032EE  0E00               	movlw	0
  8994  0032F0  EC57  F01C         	call	_LCD_send_command
  8995                           
  8996                           ;src\LCD_44780.c: 121: break;
  8997  0032F4  0012               	return	
  8998  0032F6                     l3594:
  8999  0032F6  0E00               	movlw	0
  9000  0032F8  6E17               	movwf	LCD_send_command@D2,c
  9001  0032FA  0E00               	movlw	0
  9002  0032FC  6E18               	movwf	LCD_send_command@D1,c
  9003  0032FE  0E01               	movlw	1
  9004  003300  6E19               	movwf	LCD_send_command@D0,c
  9005  003302  0E01               	movlw	1
  9006  003304  EC57  F01C         	call	_LCD_send_command
  9007                           
  9008                           ;src\LCD_44780.c: 124: LCD_send_command(0,1,0,0);
  9009  003308  0E01               	movlw	1
  9010  00330A  6E17               	movwf	LCD_send_command@D2,c
  9011  00330C  0E00               	movlw	0
  9012  00330E  6E18               	movwf	LCD_send_command@D1,c
  9013  003310  0E00               	movlw	0
  9014  003312  6E19               	movwf	LCD_send_command@D0,c
  9015  003314  0E00               	movlw	0
  9016  003316  EC57  F01C         	call	_LCD_send_command
  9017                           
  9018                           ;src\LCD_44780.c: 125: break;
  9019  00331A  0012               	return	
  9020  00331C                     l3596:
  9021  00331C  0E01               	movlw	1
  9022  00331E  6E17               	movwf	LCD_send_command@D2,c
  9023  003320  0E00               	movlw	0
  9024  003322  6E18               	movwf	LCD_send_command@D1,c
  9025  003324  0E01               	movlw	1
  9026  003326  6E19               	movwf	LCD_send_command@D0,c
  9027  003328  0E01               	movlw	1
  9028  00332A  EC57  F01C         	call	_LCD_send_command
  9029                           
  9030                           ;src\LCD_44780.c: 128: LCD_send_command(0,1,0,0);
  9031  00332E  0E01               	movlw	1
  9032  003330  6E17               	movwf	LCD_send_command@D2,c
  9033  003332  0E00               	movlw	0
  9034  003334  6E18               	movwf	LCD_send_command@D1,c
  9035  003336  0E00               	movlw	0
  9036  003338  6E19               	movwf	LCD_send_command@D0,c
  9037  00333A  0E00               	movlw	0
  9038  00333C  EC57  F01C         	call	_LCD_send_command
  9039                           
  9040                           ;src\LCD_44780.c: 129: }
  9041  003340  0012               	return	
  9042  003342                     l3598:
  9043  003342  501B               	movf	LCD_goto_line@line,w,c
  9044                           
  9045                           ; Switch size 1, requested type "space"
  9046                           ; Number of cases is 4, Range of values is 1 to 4
  9047                           ; switch strategies available:
  9048                           ; Name         Instructions Cycles
  9049                           ; simple_byte           13     7 (average)
  9050                           ;	Chosen strategy is simple_byte
  9051  003344  0A01               	xorlw	1	; case 1
  9052  003346  B4D8               	btfsc	status,2,c
  9053  003348  D7B0               	goto	l3590
  9054  00334A  0A03               	xorlw	3	; case 2
  9055  00334C  B4D8               	btfsc	status,2,c
  9056  00334E  D7C0               	goto	l3592
  9057  003350  0A01               	xorlw	1	; case 3
  9058  003352  B4D8               	btfsc	status,2,c
  9059  003354  D7D0               	goto	l3594
  9060  003356  0A07               	xorlw	7	; case 4
  9061  003358  A4D8               	btfss	status,2,c
  9062  00335A  0012               	return	
  9063  00335C  D7DF               	goto	l3596
  9064  00335E                     __end_of_LCD_goto_line:
  9065                           	opt stack 0
  9066                           tblptru	equ	0xFF8
  9067                           tblptrh	equ	0xFF7
  9068                           tblptrl	equ	0xFF6
  9069                           tablat	equ	0xFF5
  9070                           prodh	equ	0xFF4
  9071                           prodl	equ	0xFF3
  9072                           intcon	equ	0xFF2
  9073                           postinc0	equ	0xFEE
  9074                           wreg	equ	0xFE8
  9075                           indf1	equ	0xFE7
  9076                           plusw1	equ	0xFE3
  9077                           fsr1h	equ	0xFE2
  9078                           fsr1l	equ	0xFE1
  9079                           indf2	equ	0xFDF
  9080                           postinc2	equ	0xFDE
  9081                           postdec2	equ	0xFDD
  9082                           plusw2	equ	0xFDB
  9083                           fsr2h	equ	0xFDA
  9084                           fsr2l	equ	0xFD9
  9085                           status	equ	0xFD8
  9086                           
  9087 ;; *************** function _inizializzazione *****************
  9088 ;; Defined at:
  9089 ;;		line 171 in file "tester.c"
  9090 ;; Parameters:    Size  Location     Type
  9091 ;;		None
  9092 ;; Auto vars:     Size  Location     Type
  9093 ;;		None
  9094 ;; Return value:  Size  Location     Type
  9095 ;;		None               void
  9096 ;; Registers used:
  9097 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9098 ;; Tracked objects:
  9099 ;;		On entry : 0/0
  9100 ;;		On exit  : 0/0
  9101 ;;		Unchanged: 0/0
  9102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9103 ;;      Params:         0       0       0       0       0       0       0       0       0
  9104 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9105 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9106 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9107 ;;Total ram usage:        0 bytes
  9108 ;; Hardware stack levels used:    1
  9109 ;; Hardware stack levels required when called:    7
  9110 ;; This function calls:
  9111 ;;		_LCD_clear
  9112 ;;		_LCD_initialize
  9113 ;;		_LCD_write_message
  9114 ;;		_delay_ms
  9115 ;; This function is called by:
  9116 ;;		_main
  9117 ;; This function uses a non-reentrant model
  9118 ;;
  9119                           
  9120                           	psect	text30
  9121  00364E                     __ptext30:
  9122                           	opt stack 0
  9123  00364E                     _inizializzazione:
  9124                           	opt stack 23
  9125                           
  9126                           ;tester.c: 172: LATA = 0x00;
  9127                           
  9128                           ;incstack = 0
  9129  00364E  0E00               	movlw	0
  9130  003650  6E89               	movwf	3977,c	;volatile
  9131                           
  9132                           ;tester.c: 173: TRISA = 0b11111011;
  9133  003652  0EFB               	movlw	251
  9134  003654  6E92               	movwf	3986,c	;volatile
  9135                           
  9136                           ;tester.c: 175: LATB = 0x00;
  9137  003656  0E00               	movlw	0
  9138  003658  6E8A               	movwf	3978,c	;volatile
  9139                           
  9140                           ;tester.c: 176: TRISB = 0b00;
  9141  00365A  0E00               	movlw	0
  9142  00365C  6E93               	movwf	3987,c	;volatile
  9143                           
  9144                           ;tester.c: 178: LATC = 0x00;
  9145  00365E  0E00               	movlw	0
  9146  003660  6E8B               	movwf	3979,c	;volatile
  9147                           
  9148                           ;tester.c: 179: TRISC = 0b11111111;
  9149  003662  6894               	setf	3988,c	;volatile
  9150                           
  9151                           ;tester.c: 181: LCD_initialize(16);
  9152  003664  0E10               	movlw	16
  9153  003666  ECE5  F017         	call	_LCD_initialize
  9154                           
  9155                           ;tester.c: 182: LCD_write_message("ciaone");
  9156  00366A  0EE3               	movlw	low STR_13
  9157  00366C  6E20               	movwf	LCD_write_message@buffer,c
  9158  00366E  0E08               	movlw	high STR_13
  9159  003670  6E21               	movwf	LCD_write_message@buffer+1,c
  9160  003672  EC86  F01C         	call	_LCD_write_message	;wreg free
  9161                           
  9162                           ;tester.c: 183: delay_ms(1000);
  9163  003676  0E03               	movlw	3
  9164  003678  6E16               	movwf	delay_ms@value_ms+1,c
  9165  00367A  0EE8               	movlw	232
  9166  00367C  6E15               	movwf	delay_ms@value_ms,c
  9167  00367E  EC3E  F01C         	call	_delay_ms	;wreg free
  9168                           
  9169                           ;tester.c: 184: LCD_clear();
  9170  003682  ECAF  F01C         	call	_LCD_clear	;wreg free
  9171                           
  9172                           ;tester.c: 186: ADCON0 = 0b00000000;
  9173  003686  0E00               	movlw	0
  9174  003688  6EC2               	movwf	4034,c	;volatile
  9175                           
  9176                           ;tester.c: 187: ADCON1 = 0b00001011;
  9177  00368A  0E0B               	movlw	11
  9178  00368C  6EC1               	movwf	4033,c	;volatile
  9179                           
  9180                           ;tester.c: 188: ADCON2 = 0b10110010;
  9181  00368E  0EB2               	movlw	178
  9182  003690  6EC0               	movwf	4032,c	;volatile
  9183                           
  9184                           ;tester.c: 189: ADCON0bits.CHS3 = 0;
  9185  003692  9AC2               	bcf	4034,5,c	;volatile
  9186                           
  9187                           ;tester.c: 190: ADCON0bits.CHS2 = 0;
  9188  003694  98C2               	bcf	4034,4,c	;volatile
  9189                           
  9190                           ;tester.c: 191: ADCON0bits.CHS1 = 0;
  9191  003696  96C2               	bcf	4034,3,c	;volatile
  9192                           
  9193                           ;tester.c: 192: T0CON = 0x85;
  9194  003698  0E85               	movlw	133
  9195  00369A  6ED5               	movwf	4053,c	;volatile
  9196                           
  9197                           ;tester.c: 193: TMR0H = 0x0B;
  9198  00369C  0E0B               	movlw	11
  9199  00369E  6ED7               	movwf	4055,c	;volatile
  9200                           
  9201                           ;tester.c: 194: TMR0L = 0xDC;
  9202  0036A0  0EDC               	movlw	220
  9203  0036A2  6ED6               	movwf	4054,c	;volatile
  9204                           
  9205                           ;tester.c: 195: INTCONbits.GIE = 1;
  9206  0036A4  8EF2               	bsf	intcon,7,c	;volatile
  9207                           
  9208                           ;tester.c: 196: INTCONbits.TMR0IF = 0;
  9209  0036A6  94F2               	bcf	intcon,2,c	;volatile
  9210                           
  9211                           ;tester.c: 197: INTCONbits.TMR0IE = 1;
  9212  0036A8  8AF2               	bsf	intcon,5,c	;volatile
  9213  0036AA  0012               	return		;funcret
  9214  0036AC                     __end_of_inizializzazione:
  9215                           	opt stack 0
  9216                           tblptru	equ	0xFF8
  9217                           tblptrh	equ	0xFF7
  9218                           tblptrl	equ	0xFF6
  9219                           tablat	equ	0xFF5
  9220                           prodh	equ	0xFF4
  9221                           prodl	equ	0xFF3
  9222                           intcon	equ	0xFF2
  9223                           postinc0	equ	0xFEE
  9224                           wreg	equ	0xFE8
  9225                           indf1	equ	0xFE7
  9226                           plusw1	equ	0xFE3
  9227                           fsr1h	equ	0xFE2
  9228                           fsr1l	equ	0xFE1
  9229                           indf2	equ	0xFDF
  9230                           postinc2	equ	0xFDE
  9231                           postdec2	equ	0xFDD
  9232                           plusw2	equ	0xFDB
  9233                           fsr2h	equ	0xFDA
  9234                           fsr2l	equ	0xFD9
  9235                           status	equ	0xFD8
  9236                           
  9237 ;; *************** function _LCD_write_message *****************
  9238 ;; Defined at:
  9239 ;;		line 178 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  9240 ;; Parameters:    Size  Location     Type
  9241 ;;  buffer          2   31[COMRAM] PTR const unsigned char 
  9242 ;;		 -> STR_13(7), STR_12(17), STR_9(17), STR_8(3), 
  9243 ;;		 -> STR_6(11), STR_5(17), STR_2(2), STR_1(12), 
  9244 ;; Auto vars:     Size  Location     Type
  9245 ;;		None
  9246 ;; Return value:  Size  Location     Type
  9247 ;;		None               void
  9248 ;; Registers used:
  9249 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9250 ;; Tracked objects:
  9251 ;;		On entry : 0/0
  9252 ;;		On exit  : 0/0
  9253 ;;		Unchanged: 0/0
  9254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9255 ;;      Params:         2       0       0       0       0       0       0       0       0
  9256 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9257 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9258 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9259 ;;Total ram usage:        2 bytes
  9260 ;; Hardware stack levels used:    1
  9261 ;; Hardware stack levels required when called:    6
  9262 ;; This function calls:
  9263 ;;		_LCD_write_char
  9264 ;; This function is called by:
  9265 ;;		_scarica
  9266 ;;		_ricarica
  9267 ;;		_inizializzazione
  9268 ;; This function uses a non-reentrant model
  9269 ;;
  9270                           
  9271                           	psect	text31
  9272  00390C                     __ptext31:
  9273                           	opt stack 0
  9274  00390C                     _LCD_write_message:
  9275                           	opt stack 23
  9276                           
  9277                           ;src\LCD_44780.c: 181: while(*buffer) {
  9278                           
  9279                           ;incstack = 0
  9280  00390C  D00A               	goto	l3606
  9281  00390E                     l3602:
  9282                           
  9283                           ;src\LCD_44780.c: 184: LCD_write_char(*buffer);
  9284  00390E  C020  FFF6         	movff	LCD_write_message@buffer,tblptrl
  9285  003912  C021  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
  9286  003916                     	if	0	;tblptru may be non-zero
  9287  003916                     	endif
  9288  003916                     	if	0	;tblptru may be non-zero
  9289  003916                     	endif
  9290  003916  0008               	tblrd		*
  9291  003918  50F5               	movf	tablat,w,c
  9292  00391A  ECBC  F01A         	call	_LCD_write_char
  9293                           
  9294                           ;src\LCD_44780.c: 186: buffer++;
  9295  00391E  4A20               	infsnz	LCD_write_message@buffer,f,c
  9296  003920  2A21               	incf	LCD_write_message@buffer+1,f,c
  9297  003922                     l3606:
  9298  003922  C020  FFF6         	movff	LCD_write_message@buffer,tblptrl
  9299  003926  C021  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
  9300  00392A                     	if	0	;tblptru may be non-zero
  9301  00392A                     	endif
  9302  00392A                     	if	0	;tblptru may be non-zero
  9303  00392A                     	endif
  9304  00392A  0008               	tblrd		*
  9305  00392C  50F5               	movf	tablat,w,c
  9306  00392E  0900               	iorlw	0
  9307  003930  B4D8               	btfsc	status,2,c
  9308  003932  0012               	return	
  9309  003934  D7EC               	goto	l3602
  9310  003936                     __end_of_LCD_write_message:
  9311                           	opt stack 0
  9312                           tblptru	equ	0xFF8
  9313                           tblptrh	equ	0xFF7
  9314                           tblptrl	equ	0xFF6
  9315                           tablat	equ	0xFF5
  9316                           prodh	equ	0xFF4
  9317                           prodl	equ	0xFF3
  9318                           intcon	equ	0xFF2
  9319                           postinc0	equ	0xFEE
  9320                           wreg	equ	0xFE8
  9321                           indf1	equ	0xFE7
  9322                           plusw1	equ	0xFE3
  9323                           fsr1h	equ	0xFE2
  9324                           fsr1l	equ	0xFE1
  9325                           indf2	equ	0xFDF
  9326                           postinc2	equ	0xFDE
  9327                           postdec2	equ	0xFDD
  9328                           plusw2	equ	0xFDB
  9329                           fsr2h	equ	0xFDA
  9330                           fsr2l	equ	0xFD9
  9331                           status	equ	0xFD8
  9332                           
  9333 ;; *************** function _LCD_write_char *****************
  9334 ;; Defined at:
  9335 ;;		line 145 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  9336 ;; Parameters:    Size  Location     Type
  9337 ;;  value           1    wreg     unsigned char 
  9338 ;; Auto vars:     Size  Location     Type
  9339 ;;  value           1   30[COMRAM] unsigned char 
  9340 ;;  D0              1   29[COMRAM] unsigned char 
  9341 ;;  D1              1   28[COMRAM] unsigned char 
  9342 ;;  D2              1   27[COMRAM] unsigned char 
  9343 ;;  D3              1   26[COMRAM] unsigned char 
  9344 ;; Return value:  Size  Location     Type
  9345 ;;		None               void
  9346 ;; Registers used:
  9347 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9348 ;; Tracked objects:
  9349 ;;		On entry : 0/0
  9350 ;;		On exit  : 0/0
  9351 ;;		Unchanged: 0/0
  9352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9353 ;;      Params:         0       0       0       0       0       0       0       0       0
  9354 ;;      Locals:         5       0       0       0       0       0       0       0       0
  9355 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9356 ;;      Totals:         5       0       0       0       0       0       0       0       0
  9357 ;;Total ram usage:        5 bytes
  9358 ;; Hardware stack levels used:    1
  9359 ;; Hardware stack levels required when called:    5
  9360 ;; This function calls:
  9361 ;;		_LCD_send_command
  9362 ;; This function is called by:
  9363 ;;		_LCD_write_message
  9364 ;;		_LCD_write_string
  9365 ;; This function uses a non-reentrant model
  9366 ;;
  9367                           
  9368                           	psect	text32
  9369  003578                     __ptext32:
  9370                           	opt stack 0
  9371  003578                     _LCD_write_char:
  9372                           	opt stack 23
  9373                           
  9374                           ;incstack = 0
  9375                           ;LCD_write_char@value stored from wreg
  9376  003578  6E1F               	movwf	LCD_write_char@value,c
  9377                           
  9378                           ;src\LCD_44780.c: 147: unsigned char D3,D2,D1,D0;
  9379                           ;src\LCD_44780.c: 149: LATBbits.LATB1 = 1;
  9380  00357A  828A               	bsf	3978,1,c	;volatile
  9381                           
  9382                           ;src\LCD_44780.c: 152: D3 = (value & 0b10000000) >> 7;
  9383  00357C  441F               	rlncf	LCD_write_char@value,w,c
  9384  00357E  0B01               	andlw	1
  9385  003580  6E1B               	movwf	LCD_write_char@D3,c
  9386                           
  9387                           ;src\LCD_44780.c: 153: D2 = (value & 0b01000000) >> 6;
  9388  003582  441F               	rlncf	LCD_write_char@value,w,c
  9389  003584  46E8               	rlncf	wreg,f,c
  9390  003586  0B03               	andlw	3
  9391  003588  0B01               	andlw	1
  9392  00358A  6E1C               	movwf	LCD_write_char@D2,c
  9393                           
  9394                           ;src\LCD_44780.c: 154: D1 = (value & 0b00100000) >> 5;
  9395  00358C  381F               	swapf	LCD_write_char@value,w,c
  9396  00358E  42E8               	rrncf	wreg,f,c
  9397  003590  0B07               	andlw	7
  9398  003592  0B01               	andlw	1
  9399  003594  6E1D               	movwf	LCD_write_char@D1,c
  9400                           
  9401                           ;src\LCD_44780.c: 155: D0 = (value & 0b00010000) >> 4;
  9402  003596  381F               	swapf	LCD_write_char@value,w,c
  9403  003598  0B0F               	andlw	15
  9404  00359A  0B01               	andlw	1
  9405  00359C  6E1E               	movwf	LCD_write_char@D0,c
  9406                           
  9407                           ;src\LCD_44780.c: 157: LCD_send_command (D3,D2,D1,D0);
  9408  00359E  C01C  F017         	movff	LCD_write_char@D2,LCD_send_command@D2
  9409  0035A2  C01D  F018         	movff	LCD_write_char@D1,LCD_send_command@D1
  9410  0035A6  C01E  F019         	movff	LCD_write_char@D0,LCD_send_command@D0
  9411  0035AA  501B               	movf	LCD_write_char@D3,w,c
  9412  0035AC  EC57  F01C         	call	_LCD_send_command
  9413                           
  9414                           ;src\LCD_44780.c: 160: D3 = (value & 0b00001000) >> 3;
  9415  0035B0  381F               	swapf	LCD_write_char@value,w,c
  9416  0035B2  46E8               	rlncf	wreg,f,c
  9417  0035B4  0B1F               	andlw	31
  9418  0035B6  0B01               	andlw	1
  9419  0035B8  6E1B               	movwf	LCD_write_char@D3,c
  9420                           
  9421                           ;src\LCD_44780.c: 161: D2 = (value & 0b00000100) >> 2;
  9422  0035BA  401F               	rrncf	LCD_write_char@value,w,c
  9423  0035BC  42E8               	rrncf	wreg,f,c
  9424  0035BE  0B3F               	andlw	63
  9425  0035C0  0B01               	andlw	1
  9426  0035C2  6E1C               	movwf	LCD_write_char@D2,c
  9427                           
  9428                           ;src\LCD_44780.c: 162: D1 = (value & 0b00000010) >> 1;
  9429  0035C4  90D8               	bcf	status,0,c
  9430  0035C6  301F               	rrcf	LCD_write_char@value,w,c
  9431  0035C8  0B01               	andlw	1
  9432  0035CA  6E1D               	movwf	LCD_write_char@D1,c
  9433                           
  9434                           ;src\LCD_44780.c: 163: D0 = (value & 0b00000001);
  9435  0035CC  501F               	movf	LCD_write_char@value,w,c
  9436  0035CE  0B01               	andlw	1
  9437  0035D0  6E1E               	movwf	LCD_write_char@D0,c
  9438                           
  9439                           ;src\LCD_44780.c: 165: LCD_send_command (D3,D2,D1,D0);
  9440  0035D2  C01C  F017         	movff	LCD_write_char@D2,LCD_send_command@D2
  9441  0035D6  C01D  F018         	movff	LCD_write_char@D1,LCD_send_command@D1
  9442  0035DA  C01E  F019         	movff	LCD_write_char@D0,LCD_send_command@D0
  9443  0035DE  501B               	movf	LCD_write_char@D3,w,c
  9444  0035E0  EC57  F01C         	call	_LCD_send_command
  9445                           
  9446                           ;src\LCD_44780.c: 167: LATBbits.LATB1 = 0;
  9447  0035E4  928A               	bcf	3978,1,c	;volatile
  9448  0035E6  0012               	return		;funcret
  9449  0035E8                     __end_of_LCD_write_char:
  9450                           	opt stack 0
  9451                           tblptru	equ	0xFF8
  9452                           tblptrh	equ	0xFF7
  9453                           tblptrl	equ	0xFF6
  9454                           tablat	equ	0xFF5
  9455                           prodh	equ	0xFF4
  9456                           prodl	equ	0xFF3
  9457                           intcon	equ	0xFF2
  9458                           postinc0	equ	0xFEE
  9459                           wreg	equ	0xFE8
  9460                           indf1	equ	0xFE7
  9461                           plusw1	equ	0xFE3
  9462                           fsr1h	equ	0xFE2
  9463                           fsr1l	equ	0xFE1
  9464                           indf2	equ	0xFDF
  9465                           postinc2	equ	0xFDE
  9466                           postdec2	equ	0xFDD
  9467                           plusw2	equ	0xFDB
  9468                           fsr2h	equ	0xFDA
  9469                           fsr2l	equ	0xFD9
  9470                           status	equ	0xFD8
  9471                           
  9472 ;; *************** function _LCD_initialize *****************
  9473 ;; Defined at:
  9474 ;;		line 283 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  9475 ;; Parameters:    Size  Location     Type
  9476 ;;  quartz_frequ    1    wreg     unsigned char 
  9477 ;; Auto vars:     Size  Location     Type
  9478 ;;  quartz_frequ    1   28[COMRAM] unsigned char 
  9479 ;; Return value:  Size  Location     Type
  9480 ;;		None               void
  9481 ;; Registers used:
  9482 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9483 ;; Tracked objects:
  9484 ;;		On entry : 0/0
  9485 ;;		On exit  : 0/0
  9486 ;;		Unchanged: 0/0
  9487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9488 ;;      Params:         0       0       0       0       0       0       0       0       0
  9489 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9490 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9491 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9492 ;;Total ram usage:        1 bytes
  9493 ;; Hardware stack levels used:    1
  9494 ;; Hardware stack levels required when called:    6
  9495 ;; This function calls:
  9496 ;;		_LCD_clear
  9497 ;;		_LCD_cursor
  9498 ;;		_LCD_send_command
  9499 ;;		_delay_ms
  9500 ;;		_delay_set_quartz
  9501 ;; This function is called by:
  9502 ;;		_inizializzazione
  9503 ;; This function uses a non-reentrant model
  9504 ;;
  9505                           
  9506                           	psect	text33
  9507  002FCA                     __ptext33:
  9508                           	opt stack 0
  9509  002FCA                     _LCD_initialize:
  9510                           	opt stack 23
  9511                           
  9512                           ;incstack = 0
  9513                           ;LCD_initialize@quartz_frequency stored from wreg
  9514  002FCA  6E1D               	movwf	LCD_initialize@quartz_frequency,c
  9515                           
  9516                           ;src\LCD_44780.c: 285: delay_set_quartz (quartz_frequency);
  9517  002FCC  501D               	movf	LCD_initialize@quartz_frequency,w,c
  9518  002FCE  EC15  F01D         	call	_delay_set_quartz
  9519                           
  9520                           ;src\LCD_44780.c: 287: LATBbits.LATB1 = 0x00;
  9521  002FD2  928A               	bcf	3978,1,c	;volatile
  9522                           
  9523                           ;src\LCD_44780.c: 288: LATBbits.LATB3 = 0x00;
  9524  002FD4  968A               	bcf	3978,3,c	;volatile
  9525                           
  9526                           ;src\LCD_44780.c: 289: LATBbits.LATB2 = 0x00;
  9527  002FD6  948A               	bcf	3978,2,c	;volatile
  9528                           
  9529                           ;src\LCD_44780.c: 291: delay_ms (100);
  9530  002FD8  0E00               	movlw	0
  9531  002FDA  6E16               	movwf	delay_ms@value_ms+1,c
  9532  002FDC  0E64               	movlw	100
  9533  002FDE  6E15               	movwf	delay_ms@value_ms,c
  9534  002FE0  EC3E  F01C         	call	_delay_ms	;wreg free
  9535                           
  9536                           ;src\LCD_44780.c: 292: LCD_send_command (0,0,1,1);
  9537  002FE4  0E00               	movlw	0
  9538  002FE6  6E17               	movwf	LCD_send_command@D2,c
  9539  002FE8  0E01               	movlw	1
  9540  002FEA  6E18               	movwf	LCD_send_command@D1,c
  9541  002FEC  0E01               	movlw	1
  9542  002FEE  6E19               	movwf	LCD_send_command@D0,c
  9543  002FF0  0E00               	movlw	0
  9544  002FF2  EC57  F01C         	call	_LCD_send_command
  9545                           
  9546                           ;src\LCD_44780.c: 293: delay_ms (100);
  9547  002FF6  0E00               	movlw	0
  9548  002FF8  6E16               	movwf	delay_ms@value_ms+1,c
  9549  002FFA  0E64               	movlw	100
  9550  002FFC  6E15               	movwf	delay_ms@value_ms,c
  9551  002FFE  EC3E  F01C         	call	_delay_ms	;wreg free
  9552                           
  9553                           ;src\LCD_44780.c: 294: LCD_send_command (0,0,1,1);
  9554  003002  0E00               	movlw	0
  9555  003004  6E17               	movwf	LCD_send_command@D2,c
  9556  003006  0E01               	movlw	1
  9557  003008  6E18               	movwf	LCD_send_command@D1,c
  9558  00300A  0E01               	movlw	1
  9559  00300C  6E19               	movwf	LCD_send_command@D0,c
  9560  00300E  0E00               	movlw	0
  9561  003010  EC57  F01C         	call	_LCD_send_command
  9562                           
  9563                           ;src\LCD_44780.c: 295: delay_ms (10);
  9564  003014  0E00               	movlw	0
  9565  003016  6E16               	movwf	delay_ms@value_ms+1,c
  9566  003018  0E0A               	movlw	10
  9567  00301A  6E15               	movwf	delay_ms@value_ms,c
  9568  00301C  EC3E  F01C         	call	_delay_ms	;wreg free
  9569                           
  9570                           ;src\LCD_44780.c: 296: LCD_send_command (0,0,1,1);
  9571  003020  0E00               	movlw	0
  9572  003022  6E17               	movwf	LCD_send_command@D2,c
  9573  003024  0E01               	movlw	1
  9574  003026  6E18               	movwf	LCD_send_command@D1,c
  9575  003028  0E01               	movlw	1
  9576  00302A  6E19               	movwf	LCD_send_command@D0,c
  9577  00302C  0E00               	movlw	0
  9578  00302E  EC57  F01C         	call	_LCD_send_command
  9579                           
  9580                           ;src\LCD_44780.c: 298: LCD_send_command (0,0,1,0);
  9581  003032  0E00               	movlw	0
  9582  003034  6E17               	movwf	LCD_send_command@D2,c
  9583  003036  0E01               	movlw	1
  9584  003038  6E18               	movwf	LCD_send_command@D1,c
  9585  00303A  0E00               	movlw	0
  9586  00303C  6E19               	movwf	LCD_send_command@D0,c
  9587  00303E  0E00               	movlw	0
  9588  003040  EC57  F01C         	call	_LCD_send_command
  9589                           
  9590                           ;src\LCD_44780.c: 300: LCD_send_command (0,0,1,0);
  9591  003044  0E00               	movlw	0
  9592  003046  6E17               	movwf	LCD_send_command@D2,c
  9593  003048  0E01               	movlw	1
  9594  00304A  6E18               	movwf	LCD_send_command@D1,c
  9595  00304C  0E00               	movlw	0
  9596  00304E  6E19               	movwf	LCD_send_command@D0,c
  9597  003050  0E00               	movlw	0
  9598  003052  EC57  F01C         	call	_LCD_send_command
  9599                           
  9600                           ;src\LCD_44780.c: 301: LCD_send_command (1,0,0,0);
  9601  003056  0E00               	movlw	0
  9602  003058  6E17               	movwf	LCD_send_command@D2,c
  9603  00305A  0E00               	movlw	0
  9604  00305C  6E18               	movwf	LCD_send_command@D1,c
  9605  00305E  0E00               	movlw	0
  9606  003060  6E19               	movwf	LCD_send_command@D0,c
  9607  003062  0E01               	movlw	1
  9608  003064  EC57  F01C         	call	_LCD_send_command
  9609                           
  9610                           ;src\LCD_44780.c: 303: LCD_send_command (0,0,0,0);
  9611  003068  0E00               	movlw	0
  9612  00306A  6E17               	movwf	LCD_send_command@D2,c
  9613  00306C  0E00               	movlw	0
  9614  00306E  6E18               	movwf	LCD_send_command@D1,c
  9615  003070  0E00               	movlw	0
  9616  003072  6E19               	movwf	LCD_send_command@D0,c
  9617  003074  0E00               	movlw	0
  9618  003076  EC57  F01C         	call	_LCD_send_command
  9619                           
  9620                           ;src\LCD_44780.c: 304: LCD_send_command (1,0,0,0);
  9621  00307A  0E00               	movlw	0
  9622  00307C  6E17               	movwf	LCD_send_command@D2,c
  9623  00307E  0E00               	movlw	0
  9624  003080  6E18               	movwf	LCD_send_command@D1,c
  9625  003082  0E00               	movlw	0
  9626  003084  6E19               	movwf	LCD_send_command@D0,c
  9627  003086  0E01               	movlw	1
  9628  003088  EC57  F01C         	call	_LCD_send_command
  9629                           
  9630                           ;src\LCD_44780.c: 306: LCD_send_command (0,0,0,0);
  9631  00308C  0E00               	movlw	0
  9632  00308E  6E17               	movwf	LCD_send_command@D2,c
  9633  003090  0E00               	movlw	0
  9634  003092  6E18               	movwf	LCD_send_command@D1,c
  9635  003094  0E00               	movlw	0
  9636  003096  6E19               	movwf	LCD_send_command@D0,c
  9637  003098  0E00               	movlw	0
  9638  00309A  EC57  F01C         	call	_LCD_send_command
  9639                           
  9640                           ;src\LCD_44780.c: 307: LCD_send_command (0,0,0,1);
  9641  00309E  0E00               	movlw	0
  9642  0030A0  6E17               	movwf	LCD_send_command@D2,c
  9643  0030A2  0E00               	movlw	0
  9644  0030A4  6E18               	movwf	LCD_send_command@D1,c
  9645  0030A6  0E01               	movlw	1
  9646  0030A8  6E19               	movwf	LCD_send_command@D0,c
  9647  0030AA  0E00               	movlw	0
  9648  0030AC  EC57  F01C         	call	_LCD_send_command
  9649                           
  9650                           ;src\LCD_44780.c: 309: LCD_send_command (0,0,0,0);
  9651  0030B0  0E00               	movlw	0
  9652  0030B2  6E17               	movwf	LCD_send_command@D2,c
  9653  0030B4  0E00               	movlw	0
  9654  0030B6  6E18               	movwf	LCD_send_command@D1,c
  9655  0030B8  0E00               	movlw	0
  9656  0030BA  6E19               	movwf	LCD_send_command@D0,c
  9657  0030BC  0E00               	movlw	0
  9658  0030BE  EC57  F01C         	call	_LCD_send_command
  9659                           
  9660                           ;src\LCD_44780.c: 310: LCD_send_command (0,1,1,0);
  9661  0030C2  0E01               	movlw	1
  9662  0030C4  6E17               	movwf	LCD_send_command@D2,c
  9663  0030C6  0E01               	movlw	1
  9664  0030C8  6E18               	movwf	LCD_send_command@D1,c
  9665  0030CA  0E00               	movlw	0
  9666  0030CC  6E19               	movwf	LCD_send_command@D0,c
  9667  0030CE  0E00               	movlw	0
  9668  0030D0  EC57  F01C         	call	_LCD_send_command
  9669                           
  9670                           ;src\LCD_44780.c: 312: LCD_clear ();
  9671  0030D4  ECAF  F01C         	call	_LCD_clear	;wreg free
  9672                           
  9673                           ;src\LCD_44780.c: 314: LCD_cursor (0,0);
  9674  0030D8  0E00               	movlw	0
  9675  0030DA  6E1B               	movwf	LCD_cursor@blinking,c
  9676  0030DC  0E00               	movlw	0
  9677  0030DE  EC9B  F01C         	call	_LCD_cursor
  9678  0030E2  0012               	return		;funcret
  9679  0030E4                     __end_of_LCD_initialize:
  9680                           	opt stack 0
  9681                           tblptru	equ	0xFF8
  9682                           tblptrh	equ	0xFF7
  9683                           tblptrl	equ	0xFF6
  9684                           tablat	equ	0xFF5
  9685                           prodh	equ	0xFF4
  9686                           prodl	equ	0xFF3
  9687                           intcon	equ	0xFF2
  9688                           postinc0	equ	0xFEE
  9689                           wreg	equ	0xFE8
  9690                           indf1	equ	0xFE7
  9691                           plusw1	equ	0xFE3
  9692                           fsr1h	equ	0xFE2
  9693                           fsr1l	equ	0xFE1
  9694                           indf2	equ	0xFDF
  9695                           postinc2	equ	0xFDE
  9696                           postdec2	equ	0xFDD
  9697                           plusw2	equ	0xFDB
  9698                           fsr2h	equ	0xFDA
  9699                           fsr2l	equ	0xFD9
  9700                           status	equ	0xFD8
  9701                           
  9702 ;; *************** function _delay_set_quartz *****************
  9703 ;; Defined at:
  9704 ;;		line 115 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
  9705 ;; Parameters:    Size  Location     Type
  9706 ;;  frequency       1    wreg     unsigned char 
  9707 ;; Auto vars:     Size  Location     Type
  9708 ;;  frequency       1   14[COMRAM] unsigned char 
  9709 ;; Return value:  Size  Location     Type
  9710 ;;		None               void
  9711 ;; Registers used:
  9712 ;;		wreg
  9713 ;; Tracked objects:
  9714 ;;		On entry : 0/0
  9715 ;;		On exit  : 0/0
  9716 ;;		Unchanged: 0/0
  9717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9718 ;;      Params:         0       0       0       0       0       0       0       0       0
  9719 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9720 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9721 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9722 ;;Total ram usage:        1 bytes
  9723 ;; Hardware stack levels used:    1
  9724 ;; Hardware stack levels required when called:    1
  9725 ;; This function calls:
  9726 ;;		Nothing
  9727 ;; This function is called by:
  9728 ;;		_LCD_initialize
  9729 ;;		_main
  9730 ;; This function uses a non-reentrant model
  9731 ;;
  9732                           
  9733                           	psect	text34
  9734  003A2A                     __ptext34:
  9735                           	opt stack 0
  9736  003A2A                     _delay_set_quartz:
  9737                           	opt stack 27
  9738                           
  9739                           ;incstack = 0
  9740                           ;delay_set_quartz@frequency stored from wreg
  9741  003A2A  6E0F               	movwf	delay_set_quartz@frequency,c
  9742                           
  9743                           ;src\delay.c: 117: delay_quartz_frequency_value = frequency;
  9744  003A2C  C00F  F050         	movff	delay_set_quartz@frequency,_delay_quartz_frequency_value	;volatile
  9745  003A30  0012               	return		;funcret
  9746  003A32                     __end_of_delay_set_quartz:
  9747                           	opt stack 0
  9748                           tblptru	equ	0xFF8
  9749                           tblptrh	equ	0xFF7
  9750                           tblptrl	equ	0xFF6
  9751                           tablat	equ	0xFF5
  9752                           prodh	equ	0xFF4
  9753                           prodl	equ	0xFF3
  9754                           intcon	equ	0xFF2
  9755                           postinc0	equ	0xFEE
  9756                           wreg	equ	0xFE8
  9757                           indf1	equ	0xFE7
  9758                           plusw1	equ	0xFE3
  9759                           fsr1h	equ	0xFE2
  9760                           fsr1l	equ	0xFE1
  9761                           indf2	equ	0xFDF
  9762                           postinc2	equ	0xFDE
  9763                           postdec2	equ	0xFDD
  9764                           plusw2	equ	0xFDB
  9765                           fsr2h	equ	0xFDA
  9766                           fsr2l	equ	0xFD9
  9767                           status	equ	0xFD8
  9768                           
  9769 ;; *************** function _LCD_cursor *****************
  9770 ;; Defined at:
  9771 ;;		line 266 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  9772 ;; Parameters:    Size  Location     Type
  9773 ;;  active          1    wreg     unsigned char 
  9774 ;;  blinking        1   26[COMRAM] unsigned char 
  9775 ;; Auto vars:     Size  Location     Type
  9776 ;;  active          1   27[COMRAM] unsigned char 
  9777 ;; Return value:  Size  Location     Type
  9778 ;;		None               void
  9779 ;; Registers used:
  9780 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9781 ;; Tracked objects:
  9782 ;;		On entry : 0/0
  9783 ;;		On exit  : 0/0
  9784 ;;		Unchanged: 0/0
  9785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9786 ;;      Params:         1       0       0       0       0       0       0       0       0
  9787 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9788 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9789 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9790 ;;Total ram usage:        2 bytes
  9791 ;; Hardware stack levels used:    1
  9792 ;; Hardware stack levels required when called:    5
  9793 ;; This function calls:
  9794 ;;		_LCD_send_command
  9795 ;; This function is called by:
  9796 ;;		_LCD_initialize
  9797 ;; This function uses a non-reentrant model
  9798 ;;
  9799                           
  9800                           	psect	text35
  9801  003936                     __ptext35:
  9802                           	opt stack 0
  9803  003936                     _LCD_cursor:
  9804                           	opt stack 23
  9805                           
  9806                           ;incstack = 0
  9807                           ;LCD_cursor@active stored from wreg
  9808  003936  6E1C               	movwf	LCD_cursor@active,c
  9809                           
  9810                           ;src\LCD_44780.c: 268: LCD_send_command (0,0,0,0);
  9811  003938  0E00               	movlw	0
  9812  00393A  6E17               	movwf	LCD_send_command@D2,c
  9813  00393C  0E00               	movlw	0
  9814  00393E  6E18               	movwf	LCD_send_command@D1,c
  9815  003940  0E00               	movlw	0
  9816  003942  6E19               	movwf	LCD_send_command@D0,c
  9817  003944  0E00               	movlw	0
  9818  003946  EC57  F01C         	call	_LCD_send_command
  9819                           
  9820                           ;src\LCD_44780.c: 269: LCD_send_command (1,1,active,blinking);
  9821  00394A  0E01               	movlw	1
  9822  00394C  6E17               	movwf	LCD_send_command@D2,c
  9823  00394E  C01C  F018         	movff	LCD_cursor@active,LCD_send_command@D1
  9824  003952  C01B  F019         	movff	LCD_cursor@blinking,LCD_send_command@D0
  9825  003956  0E01               	movlw	1
  9826  003958  EC57  F01C         	call	_LCD_send_command
  9827  00395C  0012               	return		;funcret
  9828  00395E                     __end_of_LCD_cursor:
  9829                           	opt stack 0
  9830                           tblptru	equ	0xFF8
  9831                           tblptrh	equ	0xFF7
  9832                           tblptrl	equ	0xFF6
  9833                           tablat	equ	0xFF5
  9834                           prodh	equ	0xFF4
  9835                           prodl	equ	0xFF3
  9836                           intcon	equ	0xFF2
  9837                           postinc0	equ	0xFEE
  9838                           wreg	equ	0xFE8
  9839                           indf1	equ	0xFE7
  9840                           plusw1	equ	0xFE3
  9841                           fsr1h	equ	0xFE2
  9842                           fsr1l	equ	0xFE1
  9843                           indf2	equ	0xFDF
  9844                           postinc2	equ	0xFDE
  9845                           postdec2	equ	0xFDD
  9846                           plusw2	equ	0xFDB
  9847                           fsr2h	equ	0xFDA
  9848                           fsr2l	equ	0xFD9
  9849                           status	equ	0xFD8
  9850                           
  9851 ;; *************** function _LCD_clear *****************
  9852 ;; Defined at:
  9853 ;;		line 257 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  9854 ;; Parameters:    Size  Location     Type
  9855 ;;		None
  9856 ;; Auto vars:     Size  Location     Type
  9857 ;;		None
  9858 ;; Return value:  Size  Location     Type
  9859 ;;		None               void
  9860 ;; Registers used:
  9861 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9862 ;; Tracked objects:
  9863 ;;		On entry : 0/0
  9864 ;;		On exit  : 0/0
  9865 ;;		Unchanged: 0/0
  9866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9867 ;;      Params:         0       0       0       0       0       0       0       0       0
  9868 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9869 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9870 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9871 ;;Total ram usage:        0 bytes
  9872 ;; Hardware stack levels used:    1
  9873 ;; Hardware stack levels required when called:    5
  9874 ;; This function calls:
  9875 ;;		_LCD_send_command
  9876 ;; This function is called by:
  9877 ;;		_LCD_initialize
  9878 ;;		_scarica
  9879 ;;		_ricarica
  9880 ;;		_inizializzazione
  9881 ;; This function uses a non-reentrant model
  9882 ;;
  9883                           
  9884                           	psect	text36
  9885  00395E                     __ptext36:
  9886                           	opt stack 0
  9887  00395E                     _LCD_clear:
  9888                           	opt stack 24
  9889                           
  9890                           ;src\LCD_44780.c: 259: LCD_send_command (0,0,0,0);
  9891                           
  9892                           ;incstack = 0
  9893  00395E  0E00               	movlw	0
  9894  003960  6E17               	movwf	LCD_send_command@D2,c
  9895  003962  0E00               	movlw	0
  9896  003964  6E18               	movwf	LCD_send_command@D1,c
  9897  003966  0E00               	movlw	0
  9898  003968  6E19               	movwf	LCD_send_command@D0,c
  9899  00396A  0E00               	movlw	0
  9900  00396C  EC57  F01C         	call	_LCD_send_command
  9901                           
  9902                           ;src\LCD_44780.c: 260: LCD_send_command (0,0,0,1);
  9903  003970  0E00               	movlw	0
  9904  003972  6E17               	movwf	LCD_send_command@D2,c
  9905  003974  0E00               	movlw	0
  9906  003976  6E18               	movwf	LCD_send_command@D1,c
  9907  003978  0E01               	movlw	1
  9908  00397A  6E19               	movwf	LCD_send_command@D0,c
  9909  00397C  0E00               	movlw	0
  9910  00397E  EC57  F01C         	call	_LCD_send_command
  9911  003982  0012               	return		;funcret
  9912  003984                     __end_of_LCD_clear:
  9913                           	opt stack 0
  9914                           tblptru	equ	0xFF8
  9915                           tblptrh	equ	0xFF7
  9916                           tblptrl	equ	0xFF6
  9917                           tablat	equ	0xFF5
  9918                           prodh	equ	0xFF4
  9919                           prodl	equ	0xFF3
  9920                           intcon	equ	0xFF2
  9921                           postinc0	equ	0xFEE
  9922                           wreg	equ	0xFE8
  9923                           indf1	equ	0xFE7
  9924                           plusw1	equ	0xFE3
  9925                           fsr1h	equ	0xFE2
  9926                           fsr1l	equ	0xFE1
  9927                           indf2	equ	0xFDF
  9928                           postinc2	equ	0xFDE
  9929                           postdec2	equ	0xFDD
  9930                           plusw2	equ	0xFDB
  9931                           fsr2h	equ	0xFDA
  9932                           fsr2l	equ	0xFD9
  9933                           status	equ	0xFD8
  9934                           
  9935 ;; *************** function _LCD_send_command *****************
  9936 ;; Defined at:
  9937 ;;		line 61 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  9938 ;; Parameters:    Size  Location     Type
  9939 ;;  D3              1    wreg     unsigned char 
  9940 ;;  D2              1   22[COMRAM] unsigned char 
  9941 ;;  D1              1   23[COMRAM] unsigned char 
  9942 ;;  D0              1   24[COMRAM] unsigned char 
  9943 ;; Auto vars:     Size  Location     Type
  9944 ;;  D3              1   25[COMRAM] unsigned char 
  9945 ;; Return value:  Size  Location     Type
  9946 ;;		None               void
  9947 ;; Registers used:
  9948 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9949 ;; Tracked objects:
  9950 ;;		On entry : 0/0
  9951 ;;		On exit  : 0/0
  9952 ;;		Unchanged: 0/0
  9953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9954 ;;      Params:         3       0       0       0       0       0       0       0       0
  9955 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9956 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9957 ;;      Totals:         4       0       0       0       0       0       0       0       0
  9958 ;;Total ram usage:        4 bytes
  9959 ;; Hardware stack levels used:    1
  9960 ;; Hardware stack levels required when called:    4
  9961 ;; This function calls:
  9962 ;;		_LCD_enable_pulse
  9963 ;; This function is called by:
  9964 ;;		_LCD_goto_line
  9965 ;;		_LCD_write_char
  9966 ;;		_LCD_clear
  9967 ;;		_LCD_cursor
  9968 ;;		_LCD_initialize
  9969 ;;		_LCD_home
  9970 ;;		_LCD_shift
  9971 ;;		_LCD_shift_cursor
  9972 ;; This function uses a non-reentrant model
  9973 ;;
  9974                           
  9975                           	psect	text37
  9976  0038AE                     __ptext37:
  9977                           	opt stack 0
  9978  0038AE                     _LCD_send_command:
  9979                           	opt stack 23
  9980                           
  9981                           ;incstack = 0
  9982                           ;LCD_send_command@D3 stored from wreg
  9983  0038AE  6E1A               	movwf	LCD_send_command@D3,c
  9984                           
  9985                           ;src\LCD_44780.c: 63: LATBbits.LATB4 = D0;
  9986  0038B0  B019               	btfsc	LCD_send_command@D0,0,c
  9987  0038B2  D002               	bra	u2215
  9988  0038B4  988A               	bcf	3978,4,c	;volatile
  9989  0038B6  D001               	bra	u2216
  9990  0038B8                     u2215:
  9991  0038B8  888A               	bsf	3978,4,c	;volatile
  9992  0038BA                     u2216:
  9993                           
  9994                           ;src\LCD_44780.c: 64: LATBbits.LATB5 = D1;
  9995  0038BA  B018               	btfsc	LCD_send_command@D1,0,c
  9996  0038BC  D002               	bra	u2225
  9997  0038BE  9A8A               	bcf	3978,5,c	;volatile
  9998  0038C0  D001               	bra	u2226
  9999  0038C2                     u2225:
 10000  0038C2  8A8A               	bsf	3978,5,c	;volatile
 10001  0038C4                     u2226:
 10002                           
 10003                           ;src\LCD_44780.c: 65: LATBbits.LATB6 = D2;
 10004  0038C4  B017               	btfsc	LCD_send_command@D2,0,c
 10005  0038C6  D002               	bra	u2235
 10006  0038C8  9C8A               	bcf	3978,6,c	;volatile
 10007  0038CA  D001               	bra	u2236
 10008  0038CC                     u2235:
 10009  0038CC  8C8A               	bsf	3978,6,c	;volatile
 10010  0038CE                     u2236:
 10011                           
 10012                           ;src\LCD_44780.c: 66: LATBbits.LATB7 = D3;
 10013  0038CE  B01A               	btfsc	LCD_send_command@D3,0,c
 10014  0038D0  D002               	bra	u2245
 10015  0038D2  9E8A               	bcf	3978,7,c	;volatile
 10016  0038D4  D001               	bra	u2246
 10017  0038D6                     u2245:
 10018  0038D6  8E8A               	bsf	3978,7,c	;volatile
 10019  0038D8                     u2246:
 10020                           
 10021                           ;src\LCD_44780.c: 67: LCD_enable_pulse ();
 10022  0038D8  EC06  F01D         	call	_LCD_enable_pulse	;wreg free
 10023  0038DC  0012               	return		;funcret
 10024  0038DE                     __end_of_LCD_send_command:
 10025                           	opt stack 0
 10026                           tblptru	equ	0xFF8
 10027                           tblptrh	equ	0xFF7
 10028                           tblptrl	equ	0xFF6
 10029                           tablat	equ	0xFF5
 10030                           prodh	equ	0xFF4
 10031                           prodl	equ	0xFF3
 10032                           intcon	equ	0xFF2
 10033                           postinc0	equ	0xFEE
 10034                           wreg	equ	0xFE8
 10035                           indf1	equ	0xFE7
 10036                           plusw1	equ	0xFE3
 10037                           fsr1h	equ	0xFE2
 10038                           fsr1l	equ	0xFE1
 10039                           indf2	equ	0xFDF
 10040                           postinc2	equ	0xFDE
 10041                           postdec2	equ	0xFDD
 10042                           plusw2	equ	0xFDB
 10043                           fsr2h	equ	0xFDA
 10044                           fsr2l	equ	0xFD9
 10045                           status	equ	0xFD8
 10046                           
 10047 ;; *************** function _LCD_enable_pulse *****************
 10048 ;; Defined at:
 10049 ;;		line 49 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 10050 ;; Parameters:    Size  Location     Type
 10051 ;;		None
 10052 ;; Auto vars:     Size  Location     Type
 10053 ;;		None
 10054 ;; Return value:  Size  Location     Type
 10055 ;;		None               void
 10056 ;; Registers used:
 10057 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10058 ;; Tracked objects:
 10059 ;;		On entry : 0/0
 10060 ;;		On exit  : 0/0
 10061 ;;		Unchanged: 0/0
 10062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10063 ;;      Params:         0       0       0       0       0       0       0       0       0
 10064 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10065 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10066 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10067 ;;Total ram usage:        0 bytes
 10068 ;; Hardware stack levels used:    1
 10069 ;; Hardware stack levels required when called:    3
 10070 ;; This function calls:
 10071 ;;		_delay_ms
 10072 ;; This function is called by:
 10073 ;;		_LCD_send_command
 10074 ;; This function uses a non-reentrant model
 10075 ;;
 10076                           
 10077                           	psect	text38
 10078  003A0C                     __ptext38:
 10079                           	opt stack 0
 10080  003A0C                     _LCD_enable_pulse:
 10081                           	opt stack 23
 10082                           
 10083                           ;src\LCD_44780.c: 51: LATBbits.LATB3 = 1;
 10084                           
 10085                           ;incstack = 0
 10086  003A0C  868A               	bsf	3978,3,c	;volatile
 10087                           
 10088                           ;src\LCD_44780.c: 52: delay_ms (1);
 10089  003A0E  0E00               	movlw	0
 10090  003A10  6E16               	movwf	delay_ms@value_ms+1,c
 10091  003A12  0E01               	movlw	1
 10092  003A14  6E15               	movwf	delay_ms@value_ms,c
 10093  003A16  EC3E  F01C         	call	_delay_ms	;wreg free
 10094                           
 10095                           ;src\LCD_44780.c: 53: LATBbits.LATB3 = 0;
 10096  003A1A  968A               	bcf	3978,3,c	;volatile
 10097                           
 10098                           ;src\LCD_44780.c: 54: delay_ms (1);
 10099  003A1C  0E00               	movlw	0
 10100  003A1E  6E16               	movwf	delay_ms@value_ms+1,c
 10101  003A20  0E01               	movlw	1
 10102  003A22  6E15               	movwf	delay_ms@value_ms,c
 10103  003A24  EC3E  F01C         	call	_delay_ms	;wreg free
 10104  003A28  0012               	return		;funcret
 10105  003A2A                     __end_of_LCD_enable_pulse:
 10106                           	opt stack 0
 10107                           tblptru	equ	0xFF8
 10108                           tblptrh	equ	0xFF7
 10109                           tblptrl	equ	0xFF6
 10110                           tablat	equ	0xFF5
 10111                           prodh	equ	0xFF4
 10112                           prodl	equ	0xFF3
 10113                           intcon	equ	0xFF2
 10114                           postinc0	equ	0xFEE
 10115                           wreg	equ	0xFE8
 10116                           indf1	equ	0xFE7
 10117                           plusw1	equ	0xFE3
 10118                           fsr1h	equ	0xFE2
 10119                           fsr1l	equ	0xFE1
 10120                           indf2	equ	0xFDF
 10121                           postinc2	equ	0xFDE
 10122                           postdec2	equ	0xFDD
 10123                           plusw2	equ	0xFDB
 10124                           fsr2h	equ	0xFDA
 10125                           fsr2l	equ	0xFD9
 10126                           status	equ	0xFD8
 10127                           
 10128 ;; *************** function _delay_ms *****************
 10129 ;; Defined at:
 10130 ;;		line 61 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
 10131 ;; Parameters:    Size  Location     Type
 10132 ;;  value_ms        2   20[COMRAM] unsigned int 
 10133 ;; Auto vars:     Size  Location     Type
 10134 ;;		None
 10135 ;; Return value:  Size  Location     Type
 10136 ;;		None               void
 10137 ;; Registers used:
 10138 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10139 ;; Tracked objects:
 10140 ;;		On entry : 0/0
 10141 ;;		On exit  : 0/0
 10142 ;;		Unchanged: 0/0
 10143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10144 ;;      Params:         2       0       0       0       0       0       0       0       0
 10145 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10146 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10147 ;;      Totals:         2       0       0       0       0       0       0       0       0
 10148 ;;Total ram usage:        2 bytes
 10149 ;; Hardware stack levels used:    1
 10150 ;; Hardware stack levels required when called:    2
 10151 ;; This function calls:
 10152 ;;		___wmul
 10153 ;; This function is called by:
 10154 ;;		_LCD_enable_pulse
 10155 ;;		_LCD_initialize
 10156 ;;		_delay_s
 10157 ;;		_ricarica
 10158 ;;		_read_adc
 10159 ;;		_inizializzazione
 10160 ;; This function uses a non-reentrant model
 10161 ;;
 10162                           
 10163                           	psect	text39
 10164  00387C                     __ptext39:
 10165                           	opt stack 0
 10166  00387C                     _delay_ms:
 10167                           	opt stack 26
 10168                           
 10169                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
 10170                           
 10171                           ;incstack = 0
 10172  00387C  C050  F00F         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
 10173  003880  6A10               	clrf	___wmul@multiplier+1,c
 10174  003882  C015  F011         	movff	delay_ms@value_ms,___wmul@multiplicand
 10175  003886  C016  F012         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
 10176  00388A  ECC2  F01C         	call	___wmul	;wreg free
 10177  00388E  C00F  F044         	movff	?___wmul,_clock_counter_reference	;volatile
 10178  003892  C010  F045         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
 10179                           
 10180                           ;src\delay.c: 75: while (clock_counter_reference) {
 10181  003896  D006               	goto	l138
 10182  003898                     l2566:
 10183                           
 10184                           ;src\delay.c: 85: _delay(240);
 10185  003898  0E50               	movlw	80
 10186  00389A                     u5497:
 10187  00389A  2EE8               	decfsz	wreg,f,c
 10188  00389C  D7FE               	goto	u5497
 10189                           
 10190                           ;src\delay.c: 88: clock_counter_reference--;
 10191  00389E  0644               	decf	_clock_counter_reference,f,c	;volatile
 10192  0038A0  A0D8               	btfss	status,0,c
 10193  0038A2  0645               	decf	_clock_counter_reference+1,f,c	;volatile
 10194  0038A4                     l138:
 10195  0038A4  5044               	movf	_clock_counter_reference,w,c	;volatile
 10196  0038A6  1045               	iorwf	_clock_counter_reference+1,w,c	;volatile
 10197  0038A8  B4D8               	btfsc	status,2,c
 10198  0038AA  0012               	return	
 10199  0038AC  D7F5               	goto	l2566
 10200  0038AE                     __end_of_delay_ms:
 10201                           	opt stack 0
 10202                           tblptru	equ	0xFF8
 10203                           tblptrh	equ	0xFF7
 10204                           tblptrl	equ	0xFF6
 10205                           tablat	equ	0xFF5
 10206                           prodh	equ	0xFF4
 10207                           prodl	equ	0xFF3
 10208                           intcon	equ	0xFF2
 10209                           postinc0	equ	0xFEE
 10210                           wreg	equ	0xFE8
 10211                           indf1	equ	0xFE7
 10212                           plusw1	equ	0xFE3
 10213                           fsr1h	equ	0xFE2
 10214                           fsr1l	equ	0xFE1
 10215                           indf2	equ	0xFDF
 10216                           postinc2	equ	0xFDE
 10217                           postdec2	equ	0xFDD
 10218                           plusw2	equ	0xFDB
 10219                           fsr2h	equ	0xFDA
 10220                           fsr2l	equ	0xFD9
 10221                           status	equ	0xFD8
 10222                           
 10223 ;; *************** function ___wmul *****************
 10224 ;; Defined at:
 10225 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 10226 ;; Parameters:    Size  Location     Type
 10227 ;;  multiplier      2   14[COMRAM] unsigned int 
 10228 ;;  multiplicand    2   16[COMRAM] unsigned int 
 10229 ;; Auto vars:     Size  Location     Type
 10230 ;;  product         2   18[COMRAM] unsigned int 
 10231 ;; Return value:  Size  Location     Type
 10232 ;;                  2   14[COMRAM] unsigned int 
 10233 ;; Registers used:
 10234 ;;		wreg, status,2, status,0, prodl, prodh
 10235 ;; Tracked objects:
 10236 ;;		On entry : 0/0
 10237 ;;		On exit  : 0/0
 10238 ;;		Unchanged: 0/0
 10239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10240 ;;      Params:         4       0       0       0       0       0       0       0       0
 10241 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10242 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10243 ;;      Totals:         6       0       0       0       0       0       0       0       0
 10244 ;;Total ram usage:        6 bytes
 10245 ;; Hardware stack levels used:    1
 10246 ;; Hardware stack levels required when called:    1
 10247 ;; This function calls:
 10248 ;;		Nothing
 10249 ;; This function is called by:
 10250 ;;		_delay_ms
 10251 ;;		_sprintf
 10252 ;; This function uses a non-reentrant model
 10253 ;;
 10254                           
 10255                           	psect	text40
 10256  003984                     __ptext40:
 10257                           	opt stack 0
 10258  003984                     ___wmul:
 10259                           	opt stack 27
 10260                           
 10261                           ;incstack = 0
 10262  003984  500F               	movf	___wmul@multiplier,w,c
 10263  003986  0211               	mulwf	___wmul@multiplicand,c
 10264  003988  CFF3 F013          	movff	prodl,___wmul@product
 10265  00398C  CFF4 F014          	movff	prodh,___wmul@product+1
 10266  003990  500F               	movf	___wmul@multiplier,w,c
 10267  003992  0212               	mulwf	___wmul@multiplicand+1,c
 10268  003994  50F3               	movf	prodl,w,c
 10269  003996  2614               	addwf	___wmul@product+1,f,c
 10270  003998  5010               	movf	___wmul@multiplier+1,w,c
 10271  00399A  0211               	mulwf	___wmul@multiplicand,c
 10272  00399C  50F3               	movf	prodl,w,c
 10273  00399E  2614               	addwf	___wmul@product+1,f,c
 10274  0039A0  C013  F00F         	movff	___wmul@product,?___wmul
 10275  0039A4  C014  F010         	movff	___wmul@product+1,?___wmul+1
 10276  0039A8  0012               	return	
 10277  0039AA                     __end_of___wmul:
 10278                           	opt stack 0
 10279                           tblptru	equ	0xFF8
 10280                           tblptrh	equ	0xFF7
 10281                           tblptrl	equ	0xFF6
 10282                           tablat	equ	0xFF5
 10283                           prodh	equ	0xFF4
 10284                           prodl	equ	0xFF3
 10285                           intcon	equ	0xFF2
 10286                           postinc0	equ	0xFEE
 10287                           wreg	equ	0xFE8
 10288                           indf1	equ	0xFE7
 10289                           plusw1	equ	0xFE3
 10290                           fsr1h	equ	0xFE2
 10291                           fsr1l	equ	0xFE1
 10292                           indf2	equ	0xFDF
 10293                           postinc2	equ	0xFDE
 10294                           postdec2	equ	0xFDD
 10295                           plusw2	equ	0xFDB
 10296                           fsr2h	equ	0xFDA
 10297                           fsr2l	equ	0xFD9
 10298                           status	equ	0xFD8
 10299                           
 10300 ;; *************** function _isr_alta *****************
 10301 ;; Defined at:
 10302 ;;		line 51 in file "tester.c"
 10303 ;; Parameters:    Size  Location     Type
 10304 ;;		None
 10305 ;; Auto vars:     Size  Location     Type
 10306 ;;		None
 10307 ;; Return value:  Size  Location     Type
 10308 ;;		None               void
 10309 ;; Registers used:
 10310 ;;		wreg, status,2, status,0
 10311 ;; Tracked objects:
 10312 ;;		On entry : 0/0
 10313 ;;		On exit  : 0/0
 10314 ;;		Unchanged: 0/0
 10315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10316 ;;      Params:         0       0       0       0       0       0       0       0       0
 10317 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10318 ;;      Temps:         14       0       0       0       0       0       0       0       0
 10319 ;;      Totals:        14       0       0       0       0       0       0       0       0
 10320 ;;Total ram usage:       14 bytes
 10321 ;; Hardware stack levels used:    1
 10322 ;; This function calls:
 10323 ;;		Nothing
 10324 ;; This function is called by:
 10325 ;;		Interrupt level 2
 10326 ;; This function uses a non-reentrant model
 10327 ;;
 10328                           
 10329                           	psect	intcode
 10330  000008                     __pintcode:
 10331                           	opt stack 0
 10332  000008                     _isr_alta:
 10333                           	opt stack 22
 10334                           
 10335                           ;incstack = 0
 10336  000008  8251               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 10337  00000A  CFFA F001          	movff	pclath,??_isr_alta
 10338  00000E  CFFB F002          	movff	pclatu,??_isr_alta+1
 10339  000012  EDEF  F018         	call	int_func,f	;refresh shadow registers
 10340                           pclatu	equ	0xFFB
 10341                           pclath	equ	0xFFA
 10342                           tblptru	equ	0xFF8
 10343                           tblptrh	equ	0xFF7
 10344                           tblptrl	equ	0xFF6
 10345                           tablat	equ	0xFF5
 10346                           prodh	equ	0xFF4
 10347                           prodl	equ	0xFF3
 10348                           intcon	equ	0xFF2
 10349                           postinc0	equ	0xFEE
 10350                           wreg	equ	0xFE8
 10351                           indf1	equ	0xFE7
 10352                           plusw1	equ	0xFE3
 10353                           fsr1h	equ	0xFE2
 10354                           fsr1l	equ	0xFE1
 10355                           indf2	equ	0xFDF
 10356                           postinc2	equ	0xFDE
 10357                           postdec2	equ	0xFDD
 10358                           plusw2	equ	0xFDB
 10359                           fsr2h	equ	0xFDA
 10360                           fsr2l	equ	0xFD9
 10361                           status	equ	0xFD8
 10362                           
 10363                           	psect	intcode_body
 10364  0031DE                     __pintcode_body:
 10365                           	opt stack 22
 10366  0031DE                     int_func:
 10367                           	opt stack 22
 10368  0031DE  0006               	pop		; remove dummy address from shadow register refresh
 10369  0031E0  CFE9 F003          	movff	fsr0l,??_isr_alta+2
 10370  0031E4  CFEA F004          	movff	fsr0h,??_isr_alta+3
 10371  0031E8  CFE1 F005          	movff	fsr1l,??_isr_alta+4
 10372  0031EC  CFE2 F006          	movff	fsr1h,??_isr_alta+5
 10373  0031F0  CFD9 F007          	movff	fsr2l,??_isr_alta+6
 10374  0031F4  CFDA F008          	movff	fsr2h,??_isr_alta+7
 10375  0031F8  CFF3 F009          	movff	prodl,??_isr_alta+8
 10376  0031FC  CFF4 F00A          	movff	prodh,??_isr_alta+9
 10377  003200  CFF6 F00B          	movff	tblptrl,??_isr_alta+10
 10378  003204  CFF7 F00C          	movff	tblptrh,??_isr_alta+11
 10379  003208  CFF8 F00D          	movff	tblptru,??_isr_alta+12
 10380  00320C  CFF5 F00E          	movff	tablat,??_isr_alta+13
 10381                           
 10382                           ;tester.c: 52: INTCONbits.TMR0IF = 0;
 10383  003210  94F2               	bcf	intcon,2,c	;volatile
 10384                           
 10385                           ;tester.c: 53: TMR0H = 0x0B;
 10386  003212  0E0B               	movlw	11
 10387  003214  6ED7               	movwf	4055,c	;volatile
 10388                           
 10389                           ;tester.c: 54: TMR0L = 0xDC;
 10390  003216  0EDC               	movlw	220
 10391  003218  6ED6               	movwf	4054,c	;volatile
 10392                           
 10393                           ;tester.c: 55: tempo++;
 10394  00321A  0E01               	movlw	1
 10395  00321C  0100               	movlb	0	; () banked
 10396  00321E  27B5               	addwf	_tempo& (0+255),f,b
 10397  003220  0E00               	movlw	0
 10398  003222  23B6               	addwfc	(_tempo+1)& (0+255),f,b
 10399  003224  23B7               	addwfc	(_tempo+2)& (0+255),f,b
 10400  003226  23B8               	addwfc	(_tempo+3)& (0+255),f,b
 10401                           
 10402                           ; BSR set to: 0
 10403                           ;tester.c: 56: secondi++;
 10404  003228  0100               	movlb	0	; () banked
 10405  00322A  4BC5               	infsnz	_secondi& (0+255),f,b
 10406  00322C  2BC6               	incf	(_secondi+1)& (0+255),f,b
 10407                           
 10408                           ; BSR set to: 0
 10409                           ;tester.c: 57: if (secondi == 59) {
 10410  00322E  0E3B               	movlw	59
 10411  003230  0100               	movlb	0	; () banked
 10412  003232  19C5               	xorwf	_secondi& (0+255),w,b
 10413  003234  0100               	movlb	0	; () banked
 10414  003236  11C6               	iorwf	(_secondi+1)& (0+255),w,b
 10415  003238  A4D8               	btfss	status,2,c
 10416  00323A  D017               	goto	i2l179
 10417                           
 10418                           ; BSR set to: 0
 10419                           ;tester.c: 58: secondi = 0;
 10420  00323C  0E00               	movlw	0
 10421  00323E  0100               	movlb	0	; () banked
 10422  003240  6FC6               	movwf	(_secondi+1)& (0+255),b
 10423  003242  0E00               	movlw	0
 10424  003244  6FC5               	movwf	_secondi& (0+255),b
 10425                           
 10426                           ; BSR set to: 0
 10427                           ;tester.c: 59: minuti++;
 10428  003246  0100               	movlb	0	; () banked
 10429  003248  4BC1               	infsnz	_minuti& (0+255),f,b
 10430  00324A  2BC2               	incf	(_minuti+1)& (0+255),f,b
 10431                           
 10432                           ; BSR set to: 0
 10433                           ;tester.c: 60: if (minuti == 59) {
 10434  00324C  0E3B               	movlw	59
 10435  00324E  0100               	movlb	0	; () banked
 10436  003250  19C1               	xorwf	_minuti& (0+255),w,b
 10437  003252  0100               	movlb	0	; () banked
 10438  003254  11C2               	iorwf	(_minuti+1)& (0+255),w,b
 10439  003256  A4D8               	btfss	status,2,c
 10440  003258  D008               	goto	i2l179
 10441                           
 10442                           ; BSR set to: 0
 10443                           ;tester.c: 61: minuti = 0;
 10444  00325A  0E00               	movlw	0
 10445  00325C  0100               	movlb	0	; () banked
 10446  00325E  6FC2               	movwf	(_minuti+1)& (0+255),b
 10447  003260  0E00               	movlw	0
 10448  003262  6FC1               	movwf	_minuti& (0+255),b
 10449                           
 10450                           ; BSR set to: 0
 10451                           ;tester.c: 62: ore++;
 10452  003264  0100               	movlb	0	; () banked
 10453  003266  4BC3               	infsnz	_ore& (0+255),f,b
 10454  003268  2BC4               	incf	(_ore+1)& (0+255),f,b
 10455  00326A                     i2l179:
 10456                           
 10457                           ; BSR set to: 0
 10458  00326A  C00E  FFF5         	movff	??_isr_alta+13,tablat
 10459  00326E  C00D  FFF8         	movff	??_isr_alta+12,tblptru
 10460  003272  C00C  FFF7         	movff	??_isr_alta+11,tblptrh
 10461  003276  C00B  FFF6         	movff	??_isr_alta+10,tblptrl
 10462  00327A  C00A  FFF4         	movff	??_isr_alta+9,prodh
 10463  00327E  C009  FFF3         	movff	??_isr_alta+8,prodl
 10464  003282  C008  FFDA         	movff	??_isr_alta+7,fsr2h
 10465  003286  C007  FFD9         	movff	??_isr_alta+6,fsr2l
 10466  00328A  C006  FFE2         	movff	??_isr_alta+5,fsr1h
 10467  00328E  C005  FFE1         	movff	??_isr_alta+4,fsr1l
 10468  003292  C004  FFEA         	movff	??_isr_alta+3,fsr0h
 10469  003296  C003  FFE9         	movff	??_isr_alta+2,fsr0l
 10470  00329A  C002  FFFB         	movff	??_isr_alta+1,pclatu
 10471  00329E  C001  FFFA         	movff	??_isr_alta,pclath
 10472  0032A2  9251               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 10473  0032A4  0011               	retfie		f
 10474  0032A6                     __end_of_isr_alta:
 10475                           	opt stack 0
 10476                           pclatu	equ	0xFFB
 10477                           pclath	equ	0xFFA
 10478                           tblptru	equ	0xFF8
 10479                           tblptrh	equ	0xFF7
 10480                           tblptrl	equ	0xFF6
 10481                           tablat	equ	0xFF5
 10482                           prodh	equ	0xFF4
 10483                           prodl	equ	0xFF3
 10484                           intcon	equ	0xFF2
 10485                           postinc0	equ	0xFEE
 10486                           fsr0h	equ	0xFEA
 10487                           fsr0l	equ	0xFE9
 10488                           wreg	equ	0xFE8
 10489                           indf1	equ	0xFE7
 10490                           plusw1	equ	0xFE3
 10491                           fsr1h	equ	0xFE2
 10492                           fsr1l	equ	0xFE1
 10493                           indf2	equ	0xFDF
 10494                           postinc2	equ	0xFDE
 10495                           postdec2	equ	0xFDD
 10496                           plusw2	equ	0xFDB
 10497                           fsr2h	equ	0xFDA
 10498                           fsr2l	equ	0xFD9
 10499                           status	equ	0xFD8
 10500                           pclatu	equ	0xFFB
 10501                           pclath	equ	0xFFA
 10502                           tblptru	equ	0xFF8
 10503                           tblptrh	equ	0xFF7
 10504                           tblptrl	equ	0xFF6
 10505                           tablat	equ	0xFF5
 10506                           prodh	equ	0xFF4
 10507                           prodl	equ	0xFF3
 10508                           intcon	equ	0xFF2
 10509                           postinc0	equ	0xFEE
 10510                           fsr0h	equ	0xFEA
 10511                           fsr0l	equ	0xFE9
 10512                           wreg	equ	0xFE8
 10513                           indf1	equ	0xFE7
 10514                           plusw1	equ	0xFE3
 10515                           fsr1h	equ	0xFE2
 10516                           fsr1l	equ	0xFE1
 10517                           indf2	equ	0xFDF
 10518                           postinc2	equ	0xFDE
 10519                           postdec2	equ	0xFDD
 10520                           plusw2	equ	0xFDB
 10521                           fsr2h	equ	0xFDA
 10522                           fsr2l	equ	0xFD9
 10523                           status	equ	0xFD8
 10524                           
 10525                           	psect	rparam
 10526  0000                     pclatu	equ	0xFFB
 10527                           pclath	equ	0xFFA
 10528                           tblptru	equ	0xFF8
 10529                           tblptrh	equ	0xFF7
 10530                           tblptrl	equ	0xFF6
 10531                           tablat	equ	0xFF5
 10532                           prodh	equ	0xFF4
 10533                           prodl	equ	0xFF3
 10534                           intcon	equ	0xFF2
 10535                           postinc0	equ	0xFEE
 10536                           fsr0h	equ	0xFEA
 10537                           fsr0l	equ	0xFE9
 10538                           wreg	equ	0xFE8
 10539                           indf1	equ	0xFE7
 10540                           plusw1	equ	0xFE3
 10541                           fsr1h	equ	0xFE2
 10542                           fsr1l	equ	0xFE1
 10543                           indf2	equ	0xFDF
 10544                           postinc2	equ	0xFDE
 10545                           postdec2	equ	0xFDD
 10546                           plusw2	equ	0xFDB
 10547                           fsr2h	equ	0xFDA
 10548                           fsr2l	equ	0xFD9
 10549                           status	equ	0xFD8
 10550                           
 10551                           	psect	temp
 10552  000051                     btemp:
 10553                           	opt stack 0
 10554  000051                     	ds	1
 10555  0000                     int$flags	set	btemp
 10556                           pclatu	equ	0xFFB
 10557                           pclath	equ	0xFFA
 10558                           tblptru	equ	0xFF8
 10559                           tblptrh	equ	0xFF7
 10560                           tblptrl	equ	0xFF6
 10561                           tablat	equ	0xFF5
 10562                           prodh	equ	0xFF4
 10563                           prodl	equ	0xFF3
 10564                           intcon	equ	0xFF2
 10565                           postinc0	equ	0xFEE
 10566                           fsr0h	equ	0xFEA
 10567                           fsr0l	equ	0xFE9
 10568                           wreg	equ	0xFE8
 10569                           indf1	equ	0xFE7
 10570                           plusw1	equ	0xFE3
 10571                           fsr1h	equ	0xFE2
 10572                           fsr1l	equ	0xFE1
 10573                           indf2	equ	0xFDF
 10574                           postinc2	equ	0xFDE
 10575                           postdec2	equ	0xFDD
 10576                           plusw2	equ	0xFDB
 10577                           fsr2h	equ	0xFDA
 10578                           fsr2l	equ	0xFD9
 10579                           status	equ	0xFD8


Data Sizes:
    Strings     104
    Constant    144
    Data        4
    BSS         46
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     67      80
    BANK0           160     71     114
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(COMRAM[6]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(COMRAM[6]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(COMRAM[6]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(COMRAM[6]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_11(CODE[8]), STR_10(CODE[7]), STR_7(CODE[5]), STR_4(CODE[8]), 
		 -> STR_3(CODE[7]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 8
		 -> str(BANK0[8]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(COMRAM[6]), 

    LCD_write_string@buffer	PTR unsigned char  size(2) Largest target is 8
		 -> str(BANK0[8]), LCD_write_integer@convertedInt(COMRAM[6]), 

    LCD_write_message@buffer	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_13(CODE[7]), STR_12(CODE[17]), STR_9(CODE[17]), STR_8(CODE[3]), 
		 -> STR_6(CODE[11]), STR_5(CODE[17]), STR_2(CODE[2]), STR_1(CODE[12]), 


Critical Paths under _main in COMRAM

    _main->_read_adc
    _scarica->_read_adc
    _delay_s->_delay_ms
    _LCD_write_integer->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _ricarica->_read_adc
    _sprintf->___fltol
    _sprintf->_fround
    _scale->___flmul
    _fround->___flmul
    ___awdiv->___awmod
    ___fltol->_scale
    ___fladd->_fround
    _read_adc->___fldiv
    ___flmul->___awdiv
    ___fldiv->___flmul
    _LCD_write_string->_LCD_write_char
    _LCD_goto_line->_LCD_send_command
    _inizializzazione->_LCD_write_message
    _LCD_write_message->_LCD_write_char
    _LCD_write_char->_LCD_send_command
    _LCD_initialize->_LCD_cursor
    _LCD_cursor->_LCD_send_command
    _LCD_clear->_LCD_send_command
    _LCD_enable_pulse->_delay_ms
    _delay_ms->___wmul

Critical Paths under _isr_alta in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_scarica
    _scarica->_sprintf
    _ricarica->_sprintf
    _sprintf->___flsub
    ___flsub->___fladd
    _read_adc->___fldiv

Critical Paths under _isr_alta in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr_alta in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr_alta in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr_alta in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr_alta in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr_alta in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr_alta in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr_alta in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  225908
                            ___fldiv
                   _delay_set_quartz
                   _inizializzazione
                           _read_adc
                           _ricarica
                            _scarica
 ---------------------------------------------------------------------------------
 (1) _scarica                                              8     8      0   95793
                                             63 BANK0      8     8      0
                          _LCD_clear
                      _LCD_goto_line
                  _LCD_write_integer
                  _LCD_write_message
                   _LCD_write_string
                            ___fladd
                            ___fldiv
                             ___flge
                           ___xxtofl
                            _delay_s
                           _read_adc
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _delay_s                                              2     2      0    1315
                                             22 COMRAM     2     2      0
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _LCD_write_integer                                   16    12      4   11118
                                             38 COMRAM    16    12      4
                   _LCD_write_string
                               _itoa
 ---------------------------------------------------------------------------------
 (3) _itoa                                                 8     2      6    1554
                                             30 COMRAM     8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                 9     3      6    1199
                                             21 COMRAM     9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     287
                                             14 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     418
                                             14 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _ricarica                                             0     0      0   77726
                          _LCD_clear
                      _LCD_goto_line
                  _LCD_write_message
                   _LCD_write_string
                             ___flge
                           _delay_ms
                           _read_adc
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             43    35      8   35057
                                             28 BANK0     35    27      8
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               13     9      4    7133
                                             53 COMRAM     9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      68
                                             14 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              17    13      4    6935
                                             53 COMRAM    13     9      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1448
                                             14 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1580
                                             20 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         17     9      8     431
                                             14 COMRAM    17     9      8
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          14     6      8     431
                                             14 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     543
                                             14 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     418
                                             14 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     568
                                             62 COMRAM     4     0      4
                                              0 BANK0      6     6      0
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3851
                                             20 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    3518
                                              0 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     109
                                             14 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8    1206
                                             14 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) _read_adc                                             3     3      0    8462
                                             65 COMRAM     2     2      0
                                             13 BANK0      1     1      0
                            ___fldiv
                            ___flmul
                           ___xxtofl
                           _delay_ms
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     578
                                             14 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    3616
                                             28 COMRAM    25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    2807
                                             53 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCD_write_string                                     2     0      2    8290
                                             31 COMRAM     2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (2) _LCD_goto_line                                        1     1      0    7523
                                             26 COMRAM     1     1      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (1) _inizializzazione                                     0     0      0   41105
                          _LCD_clear
                     _LCD_initialize
                  _LCD_write_message
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _LCD_write_message                                    2     0      2    8418
                                             31 COMRAM     2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (3) _LCD_write_char                                       5     5      0    7861
                                             26 COMRAM     5     5      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_initialize                                       1     1      0   23917
                                             28 COMRAM     1     1      0
                          _LCD_clear
                         _LCD_cursor
                   _LCD_send_command
                           _delay_ms
                   _delay_set_quartz
 ---------------------------------------------------------------------------------
 (3) _delay_set_quartz                                     1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _LCD_cursor                                           2     1      1    7609
                                             26 COMRAM     2     1      1
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_clear                                            0     0      0    7501
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (4) _LCD_send_command                                     4     1      3    7501
                                             22 COMRAM     4     1      3
                   _LCD_enable_pulse
 ---------------------------------------------------------------------------------
 (5) _LCD_enable_pulse                                     0     0      0    1269
                           _delay_ms
 ---------------------------------------------------------------------------------
 (3) _delay_ms                                             2     0      2    1269
                                             20 COMRAM     2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     543
                                             14 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _isr_alta                                            14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___fldiv
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     ___xxtofl (ARG)
   _delay_set_quartz
   _inizializzazione
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _delay_ms
       ___wmul
   _read_adc
     ___fldiv
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___xxtofl (ARG)
     ___flmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     ___xxtofl
     _delay_ms
       ___wmul
   _ricarica
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _LCD_write_string
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     ___flge
     _delay_ms
       ___wmul
     _read_adc
       ___fldiv
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___xxtofl (ARG)
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___xxtofl
       _delay_ms
         ___wmul
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___flneg
       ___flsub
         ___fladd
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
       ___wmul
       ___xxtofl
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _scarica
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_write_integer
       _LCD_write_string
         _LCD_write_char
           _LCD_send_command
             _LCD_enable_pulse
               _delay_ms
                 ___wmul
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _LCD_write_string
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     ___fladd
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___fldiv
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___xxtofl (ARG)
     ___flge
     ___xxtofl
     _delay_s
       _delay_ms
         ___wmul
     _read_adc
       ___fldiv
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___xxtofl (ARG)
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___xxtofl
       _delay_ms
         ___wmul
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___flneg
       ___flsub
         ___fladd
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
       ___wmul
       ___xxtofl
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)

 _isr_alta (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     47      72       5       71.3%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     43      50       1       85.1%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      C2      20        0.0%
DATA                 0      0      C2       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sun Feb 28 21:23:10 2016

                     ___fldiv@aexp 006C                       ___fldiv@bexp 006B  
        __size_of_delay_set_quartz 0008                       ___fldiv@sign 0060  
                     ___awdiv@sign 001A                 delay_s@repeat_loop 0018  
                      __CFG_BOR$ON 000000                ___wmul@multiplicand 0011  
                      __CFG_BORV$3 000000                       __CFG_CP0$OFF 000000  
                     __CFG_CP1$OFF 000000                       __CFG_CP2$OFF 000000  
                     __CFG_CP3$OFF 000000                                l206 2636  
                              l138 38A4                                l290 0EAC  
                              l515 2E98                                l612 2CE2  
                              l188 2282                                l525 2F8E  
                              l613 2D0A                                l198 2852  
                              l802 131A                                l803 130E  
                              l619 2D70                                l804 12DA  
                              l708 34F6                                l910 2A00  
                              l718 363C                                l905 1D16  
                              l761 37A6                                l682 33DE  
                              l819 148E                                l771 3872  
                              l924 2ABA                                l828 1522  
                              l925 2ACE                                l917 2A7E  
                              l858 1F20                                l869 1FAC  
                              l888 1A7A                                l897 1C90  
                     __CFG_CPB$OFF 000000                       __CFG_CPD$OFF 000000  
                      ?_LCD_cursor 001B                 _sommatoriaCorrente 00B1  
                              _ore 00C3                                _str 00C7  
                     ___awmod@sign 0014                                prod 000FF3  
                              wreg 000FE8                       __CFG_FOSC$HS 000000  
                     ___flmul@aexp 002E                       ___flmul@bexp 002F  
                     ___flmul@sign 0029                       ___flmul@temp 0034  
                     ___flmul@prod 0030                       __CFG_LVP$OFF 000000  
           __size_of_LCD_goto_line 00B8                       ___fltol@exp1 0065  
                     __CFG_WDT$OFF 000000                               l3010 347C  
                             l3002 3464                               l3006 346E  
                             l3030 3536                               l3022 351C  
                             l3032 353E                               l3034 3542  
                             l3042 3560                               l3026 3528  
                             l3122 25BE                               l3114 24F2  
                             l3052 3366                               l3230 2D6A  
                             l3222 2D46                               l3046 356E  
                             l3038 3556                               l3142 17C8  
                             l3062 33A0                               l3160 19D0  
                             l3136 1724                               l2600 379C  
                             l3082 39AC                               l4210 12EE  
                             l3218 2D36                               l3154 192C  
                             l3146 17F2                               l2610 3850  
                             l4212 12F4                               l4132 117C  
                             l3244 2DBE                               l3228 2D5E  
                             l3172 3A04                               l2612 3854  
                             l3086 39BE                               l4310 15B8  
                             l4302 158A                               l4150 11C6  
                             l4126 1158                               l3238 2DA0  
                             l3182 2C7C                               l4312 15BC  
                             l4240 138C                               l4216 12FE  
                             l4160 11F4                               l4144 11B2  
                             l4136 1186                               l2616 3868  
                             l2608 3848                               l3096 381C  
                             l3602 390E                               l4402 1F1C  
                             l3442 2F12                               l4306 15AC  
                             l4234 137C                               l4226 133E  
                             l3514 34A8                               l3290 2E92  
                             l3282 2E6E                               l3266 2E30  
                             l3258 2E00                               l3452 2FC6  
                             l3460 38FA                               l4236 1382  
                             l4244 139E                               l4156 11EA  
                             l4500 31B2                               l3516 34B4  
                             l3188 2CA8                               l2566 3898  
                             l3606 3922                               l4414 1F66  
                             l4334 1D84                               l4510 2612  
                             l3446 2F50                               l3438 2EDE  
                             l4318 15D0                               l4262 14C0  
                             l4254 146E                               l3526 34E8  
                             l3518 34B8                               l3542 362E  
                             l3534 35FA                               l3278 2E5E  
                             l2590 377C                               l4440 2036  
                             l4424 1FA6                               l4408 1F42  
                             l4328 1D62                               l3560 2A34  
                             l3552 2A10                               l4272 14E2  
                             l4280 14FC                               l4168 121E  
                             l4504 31CC                               l3536 3606  
                             l3288 2E86                               l2592 3780  
                             l3616 2B5C                               l4450 2066  
                             l4442 2056                               l4434 1FF6  
                             l4370 1E1C                               l4354 1DD2  
                             l4338 1D88                               l2922 1C3A  
                             l3570 2AA4                               l3562 2A40  
                             l4514 261C                               l3538 360A  
                             l3618 2B60                               l3634 2BF2  
                             l4348 1DB0                               l2852 1A26  
                             l3572 2AB0                               l3564 2A66  
                             l4268 14D6                               l4700 0F42  
                             l4620 0BCE                               l4612 0B4E  
                             l4604 0ACE                               l2588 3774  
                             l3628 2BC8                               l3590 32AA  
                             l4438 2022                               l4358 1DD6  
                             l2870 1A66                               l2854 1A2A  
                             l3558 2A2E                               l4278 14F6  
                             l4198 125A                               l4470 3106  
                             l4710 1028                               l4622 0BE4  
                             l4542 090A                               l3638 2C42  
                             l3592 32D0                               l4448 2064  
                             l2952 1CF2                               l2928 1C58  
                             l2880 1A98                               l2872 1A6A  
                             l2856 1A3A                               l3584 2B00  
                             l4528 26AE                               l4288 151C  
                             l4712 1036                               l4632 0C5C  
                             l4616 0B7C                               l4720 105E  
                             l4560 0990                               l3594 32F6  
                             l4378 1E48                               l2954 1D00  
                             l2938 1C8C                               l4298 1578  
                             l4490 3180                               l4730 10AC  
                             l4642 0CC6                               l4618 0B92  
                             l4570 09BC                               l4562 09A6  
                             l4810 2146                               l3596 331C  
                             l4396 1EE4                               l4388 1EB2  
                             l2964 1D34                               l2948 1CD4  
                             l2876 1A86                               l4660 0D8A  
                             l4628 0C2E                               l4572 09E2  
                             l4556 0954                               l4548 0922  
                             l4740 110E                               l3684 39D6  
                             l4804 2112                               l3598 3342  
                             l4486 316E                               l2990 343C  
                             l4734 10DC                               l4726 1084  
                             l4718 1050                               l4646 0D3E  
                             l4566 09B6                               l4742 112C  
                             l4496 319A                               l2992 3444  
                             l2984 3426                               l4664 0DB6  
                             l4648 0D44                               l3688 39E4  
                             l4498 31A8                               l2994 3448  
                             l2978 3416                               l4738 1108  
                             l4682 0E7A                               l4666 0DBE  
                             l4674 0E52                               l4578 09FC  
                             l4684 0E8E                               l4676 0E60  
                             l4588 0A4E                               l4774 2908  
                             l4696 0EE0                               l4688 0EB0  
                             l4794 20CA                               l4858 36FE  
                             STR_1 08C4                               STR_2 08D9  
                             STR_3 08EA                               STR_4 08DB  
                             STR_5 08A2                               STR_6 08D0  
                             STR_7 08F1                               STR_8 08F6  
                             STR_9 0891                               _LATA 000F89  
                             _LATB 000F8A                               u2215 38B8  
                             _LATC 000F8B                               u2216 38BA  
                             u2225 38C2                               u2226 38C4  
                             u2235 38CC                               u2236 38CE  
                             u2245 38D6                               u2246 38D8  
                             u3151 2C60                               u5010 3126  
                             u3171 2C8C                               u5015 311A  
                             u5320 0EA4                               u2860 1CE2  
                             u2780 1BFC                               u4470 12A4  
                             u4480 12BC                               u2785 1BF2  
                             u3841 2B1C                               u4490 12BE  
                             u5470 223E                               u5497 389A  
                             u4970 200A                               _main 36AC  
                             _itoa 37F8          __size_of_LCD_send_command 0030  
                             fsr0h 000FEA                               fsr1h 000FE2  
                             fsr0l 000FE9                               fsr2h 000FDA  
                             indf1 000FE7                               fsr1l 000FE1  
                             indf2 000FDF                               fsr2l 000FD9  
                             btemp 0051                               _utoa 335E  
                             pclat 000FFA                               prodh 000FF4  
                             prodl 000FF3                               start 0016  
                    __CFG_IESO$OFF 000000                    ___fldiv@new_exp 0065  
               __size_of_LCD_clear 0026                       _sprintf$1356 0086  
                   delay_s@value_s 0017                      __CFG_MCLRE$ON 000000  
                     ___param_bank 000010           __end_of_LCD_enable_pulse 3A2A  
          __size_of_LCD_initialize 011A                      __CFG_PLLDIV$1 000000  
                   __CFG_CCP2MX$ON 000000                      ___fltol@sign1 0064  
                  __end_of___fladd 15E2                              ?_main 0001  
                  __end_of___fldiv 2086                              ?_itoa 001F  
                  __end_of___awdiv 3486                    __end_of___flneg 390C  
                            STR_10 08EA                              STR_11 08DB  
                            STR_12 08B3                              STR_13 08E3  
                  __end_of___awmod 3578                    __end_of___flmul 1D4A  
                  __end_of___flsub 37F8                    __end_of___fltol 31DE  
                  __end_of___lldiv 3508                              ?_utoa 0016  
                            _T0CON 000FD5                    ___awdiv@divisor 0017  
                  __end_of___llmod 364E                    __end_of___lwdiv 37B0  
                  __end_of___lwmod 387C                              i2l179 326A  
                  ___awdiv@counter 0019                              _TMR0H 000FD7  
                            _TMR0L 000FD6                      __CFG_USBDIV$1 000000  
                            _TRISA 000F92                              _TRISB 000F93  
                            _TRISC 000F94                      __CFG_PWRT$OFF 000000  
                  __end_of_delay_s 39EE                      __CFG_WRT0$OFF 000000  
                    __CFG_WRT1$OFF 000000                      __CFG_WRT2$OFF 000000  
                    __CFG_WRT3$OFF 000000                     __CFG_EBTR0$OFF 000000  
                   __CFG_FCMEN$OFF 000000                     __CFG_EBTR1$OFF 000000  
                   __CFG_EBTR2$OFF 000000                     __CFG_EBTR3$OFF 000000  
                    __CFG_WRTB$OFF 000000                      __CFG_WRTC$OFF 000000  
                    __CFG_WRTD$OFF 000000                     __CFG_EBTRB$OFF 000000  
                  __end_of_dpowers 0891                              _scale 15E2  
                  __end_of_isdigit 3A0C                              _tempo 00B5  
                  __end_of_scarica 2392                              tablat 000FF5  
                            plusw1 000FE3                              plusw2 000FDB  
                            utoa@c 001E                              utoa@v 001C  
                            status 000FD8                    __end_of_sprintf 113A  
                 _inizializzazione 364E                     __CFG_PBADEN$ON 000000  
              __size_of_LCD_cursor 0028                    __initialization 3708  
                     __end_of_main 3708                       __end_of_itoa 383A  
                    _LCD_goto_line 32A6                       __end_of_utoa 3402  
                ?_LCD_write_string 0020                             ??_main 0044  
                           ??_itoa 0025                             ??_utoa 001C  
                    __activetblptr 000002                 ??_LCD_write_string 0022  
             __size_of__tdiv_to_l_ 0132                  __end_of_LCD_clear 3984  
           LCD_write_string@buffer 0020                             _ADCON0 000FC2  
                           _ADCON1 000FC1                             _ADCON2 000FC0  
                 ___llmod@dividend 000F                             ?_scale 0036  
                           _ADRESH 000FC4                             _ADRESL 000FC3  
                 ___awdiv@dividend 0015                   __end_of___xxtofl 2B12  
                 __end_of_delay_ms 38AE                     __CFG_XINST$OFF 000000  
                 __end_of__powers_ 0869                     ?_LCD_goto_line 0001  
                           ___flge 2EAA                          ??___fladd 0068  
                 _delay_set_quartz 3A2A                             ___wmul 3984  
                        ??___fldiv 003E                          ??___awdiv 0019  
                        ??___flneg 0013                     __CFG_STVREN$ON 000000  
                        ??___awmod 0013                          ??___flmul 0025  
                        ??___flsub 0043                          ??___fltol 0060  
                        ??___lldiv 0017                          ??___llmod 0017  
                        ??___lwdiv 0013                          ??___lwmod 0013  
          __size_of_LCD_write_char 0070                   __end_of_read_adc 284C  
                           _fround 2392     LCD_initialize@quartz_frequency 001D  
                           clear_0 370E                   ___awdiv@quotient 001B  
                           _minuti 00C1                    ___awmod@divisor 0011  
                        ??_delay_s 0017                    ___awmod@counter 0013  
                 __end_of_isr_alta 32A6                   __end_of_ricarica 29C2  
                           itoa@cp 0025                       __pdataCOMRAM 0050  
                        ??_isdigit 000F                          ??_scarica 009F  
                     __mediumconst 0000                             tblptrh 000FF7  
                           tblptrl 000FF6                             tblptru 000FF8  
                        ??_sprintf 0084                         ___flge@ff1 000F  
                       ___flge@ff2 0013                       ___xxtofl@arg 0019  
                     ___xxtofl@exp 0018                       ___xxtofl@val 000F  
                       __accesstop 0060            __end_of__initialization 3750  
                       ___flneg@f1 000F                   _LCD_send_command 38AE  
                    ___rparam_used 000001  LCD_write_integer@number_of_digits 0029  
                       ___fltol@f1 003F             LCD_write_integer@F4919 004A  
                   __pcstackCOMRAM 0001                       __pidataBANK0 3A32  
                    __end_of_scale 19FA                     _LCD_initialize 2FCA  
                _LCD_write_integer 2B12                  _LCD_write_message 390C  
               ?_LCD_write_integer 0027             LCD_write_integer@index 0036  
               ?_LCD_write_message 0020                         __div_to_l_ 2D82  
                     ??_LCD_cursor 001C             LCD_write_integer@value 0027  
    LCD_write_integer@convertedInt 0030                ??_LCD_write_integer 002B  
                  __div_to_l_@exp1 001C                ??_LCD_write_message 0022  
                  __div_to_l_@cntr 001B                            ??_scale 003A  
                  __div_to_l_@quot 0017                         __pbssBANK0 00A7  
                       __pnvCOMRAM 0044                      __div_to_l_@f1 000F  
                    __div_to_l_@f2 0013                    ??_LCD_goto_line 001B  
               __end_of_LCD_cursor 395E             __end_of_LCD_initialize 30E4  
                          ?___flge 000F                            ?___wmul 000F  
        __end_of_LCD_write_integer 2C50          __end_of_LCD_write_message 3936  
                ?_LCD_enable_pulse 0001                            ?_fround 0036  
               ??_LCD_enable_pulse 0017           __end_of_inizializzazione 36AC  
                        ?___xxtofl 000F                   LCD_cursor@active 001C  
                        ?_delay_ms 0015                    __CFG_VREGEN$OFF 000000  
                        ?_read_adc 0001                          ?_isr_alta 0001  
                        ?_ricarica 0001                  __end_of__npowers_ 0835  
                          __Hparam 0000                         _scale$1355 003A  
                          __Lparam 0000                   delay_ms@value_ms 0015  
                  ?_LCD_initialize 0001                    __size_of___flge 0120  
                          ___fladd 113A                            ___fldiv 1D4A  
                          ___awdiv 3402                            ___flneg 38DE  
                          ___awmod 3508                            ___flmul 19FA  
                          ___flsub 37B0                            ___fltol 30E4  
                          ___lldiv 3486                    __size_of___wmul 0026  
                   _LCD_write_char 3578                            ___llmod 35E8  
                          ___lwdiv 375E                            ___lwmod 383A  
                     __psmallconst 0800                            __pcinit 3708  
                  __size_of_fround 027A                            _delay_s 39CE  
                          __ramtop 0800                LCD_write_char@value 001F  
                          __ptext0 36AC                            __ptext1 2086  
                          __ptext2 39CE                            __ptext3 2B12  
                          __ptext4 37F8                            __ptext5 335E  
                          __ptext6 383A                            __ptext7 375E  
                          __ptext8 284C                            __ptext9 08FA  
                      ?__div_to_l_ 000F                   LCD_write_char@D0 001E  
                 LCD_write_char@D1 001D                   LCD_write_char@D2 001C  
                 LCD_write_char@D3 001B                            _dpowers 0869  
                          _current 00AD                            _isdigit 39EE  
                       ??___xxtofl 0013                   ___awmod@dividend 000F  
                          _scarica 2086                            _lettura 00A7  
                          _secondi 00C5                         ??_delay_ms 0017  
         __end_of_delay_set_quartz 3A32                            _sprintf 08FA  
                          _voltage 00BD                     __pintcode_body 31DE  
                        _LCD_clear 395E               end_of_initialization 3750  
        __size_of_LCD_write_string 0024                       _combinazioni 00CF  
                          itoa@buf 001F                            itoa@val 0021  
                    __Lmediumconst 0000                         ??_read_adc 0042  
                          int_func 31DE                         ??_isr_alta 0001  
                       ??_ricarica 0044                    ___lldiv@divisor 0013  
               LCD_cursor@blinking 001B                    ___lldiv@counter 001B  
           __end_of_LCD_write_char 35E8                            postdec2 000FDD  
                          postinc0 000FEE                            postinc2 000FDE  
       __size_of_LCD_write_integer 013E         __size_of_LCD_write_message 002A  
                          utoa@buf 0016                     __tdiv_to_l_@f1 000F  
                   __tdiv_to_l_@f2 0013                            utoa@val 0018  
                    ??__tdiv_to_l_ 0017                          _PORTAbits 000F80  
                        _PORTCbits 000F82           __end_of_LCD_send_command 38DE  
                      ___fladd@grs 0073                      ___xxtofl@sign 0017  
                      ___fldiv@grs 0067                        ___fldiv@rem 0061  
                       ?_LCD_clear 0001            _clock_counter_reference 0044  
                      ___flmul@grs 002A                __size_of__div_to_l_ 0128  
                  ?_LCD_write_char 0001                     __end_of___flge 2FCA  
                   __end_of___wmul 39AA                      __pidataCOMRAM 3A35  
                   __end_of_fround 260C                start_initialization 3708  
              __end_of__tdiv_to_l_ 2D82                    ___llmod@divisor 0013  
                  ___llmod@counter 0017                           ??___flge 0017  
                         ??___wmul 0013                        __pdataBANK0 00CF  
                 __CFG_LPT1OSC$OFF 000000                           ??_fround 003A  
                    sprintf@tmpval 0094                          ___fladd@a 0064  
                        ___fladd@b 0060                         fround@prec 0042  
                        ___fldiv@a 003A                          ___fldiv@b 0036  
                ?_inizializzazione 0001                          ___flmul@a 0021  
                        ___flmul@b 001D                        __pbssCOMRAM 004A  
                        ___flsub@a 0078                          ___flsub@b 0074  
                    __pcstackBANK0 0060                 ??_inizializzazione 0022  
                __size_of___xxtofl 0150          __size_of_LCD_enable_pulse 001E  
                __size_of_delay_ms 0032                        ??_LCD_clear 001B  
          LCD_write_message@buffer 0020                   _LCD_write_string 39AA  
                      sprintf@flag 008C                        sprintf@fval 009A  
                      sprintf@prec 0098                   ??_LCD_initialize 001D  
        delay_set_quartz@frequency 000F                  __size_of_read_adc 0240  
                 ___lwdiv@dividend 000F                 LCD_send_command@D0 0019  
               LCD_send_command@D1 0018                 LCD_send_command@D2 0017  
               LCD_send_command@D3 001A                  __size_of_isr_alta 329E  
            __end_of_LCD_goto_line 335E                          __pintcode 0008  
                __size_of_ricarica 0176                           ?___fladd 0060  
                         ?___fldiv 0036                           ?___awdiv 0015  
                         ?___flneg 000F                           ?___awmod 000F  
                         ?___flmul 001D                           ?___flsub 0074  
                         ?___fltol 003F                           ?___lldiv 000F  
                         ?___llmod 000F                          __npowers_ 0801  
                         ?___lwdiv 000F                           ?___lwmod 000F  
                         ?_delay_s 0001                        __tdiv_to_l_ 2C50  
                     ??__div_to_l_ 0017                        __smallconst 0800  
                         ?_isdigit 0001                           ?_scarica 0001  
                 ___lwdiv@quotient 0013                           ?_sprintf 007C  
                   __size_of_scale 0418                  ?_delay_set_quartz 0001  
               ??_delay_set_quartz 000F                     ___wmul@product 0013  
                         _LATBbits 000F8A                           _LATCbits 000F8B  
     _delay_quartz_frequency_value 0050                 __end_of__div_to_l_ 2EAA  
                 __CFG_WDTPS$32768 000000                          _tempo_old 00B9  
   LCD_write_integer@zero_cleaning 002A                         _ADCON0bits 000FC2  
                ___wmul@multiplier 000F                  ?_LCD_send_command 0017  
               ??_LCD_send_command 001A                   ??_LCD_write_char 001B  
                LCD_goto_line@line 001B                           __Hrparam 0000  
                         __Lrparam 0000                          read_adc@i 006D  
                 __size_of___fladd 04A8                   __size_of___fldiv 033C  
                 __size_of___awdiv 0084                   __size_of___flneg 002E  
                 __size_of___awmod 0070                   __size_of___flmul 0350  
                 __size_of___flsub 0048                   __size_of___fltol 00FA  
                 __size_of___lldiv 0082                   __size_of___llmod 0066  
                 __size_of___lwdiv 0052                   __size_of___lwmod 0042  
                      _fround$1353 003E                        _fround$1354 003A  
                      _isdigit$979 0010                   __size_of_delay_s 0020  
                       sprintf@exp 0092                         sprintf@val 008E  
                         ___xxtofl 29C2                   __size_of_isdigit 001E  
                         _delay_ms 387C                    ___lwdiv@divisor 0011  
                 __size_of_scarica 030C                    ___lwdiv@counter 0015  
                 _LCD_enable_pulse 3A0C                           __ptext10 15E2  
                         __ptext11 39EE                           __ptext20 37B0  
                         __ptext12 2392                           __ptext21 113A  
                         __ptext13 3508                           __ptext30 364E  
                         __ptext22 38DE                           __ptext14 3402  
                         __ptext31 390C                           __ptext23 2EAA  
                         __ptext15 2C50                           __ptext40 3984  
                         __ptext32 3578                           __ptext24 260C  
                         __ptext16 2D82                           __ptext33 2FCA  
                         __ptext25 29C2                           __ptext17 35E8  
                         __ptext34 3A2A                           __ptext26 19FA  
                         __ptext18 3486                           __ptext35 3936  
                         __ptext27 1D4A                           __ptext19 30E4  
                         __ptext36 395E                           __ptext28 39AA  
                         __ptext37 38AE                           __ptext29 32A6  
                         __ptext38 3A0C                           __ptext39 387C  
                         __powers_ 0835                   __size_of_sprintf 0840  
                         _read_adc 260C                      __size_of_main 005C  
                    __size_of_itoa 0042                      __size_of_utoa 00A4  
                         _isr_alta 0008                           _ricarica 284C  
                         _rapporto 0046                           int$flags 0051  
         __end_of_LCD_write_string 39CE              __CFG_CPUDIV$OSC1_PLL2 000000  
                       _LCD_cursor 3936                         _INTCONbits 000FF2  
                         itoa@base 0023                           isdigit@c 0011  
                         scale@scl 003E                           intlevel2 0000  
                        sprintf@ap 008A                   __tdiv_to_l_@exp1 001F  
                 __tdiv_to_l_@cntr 001E                          sprintf@sp 007C  
                 __tdiv_to_l_@quot 001A                   ___lwmod@dividend 000F  
                 ___lldiv@dividend 000F          __size_of_inizializzazione 005E  
                     ?__tdiv_to_l_ 000F                           utoa@base 001A  
                         sprintf@c 009E                           sprintf@f 007E  
                 ___lldiv@quotient 0017                    ___lwmod@divisor 0011  
                  ___lwmod@counter 0013                      ___fladd@signs 0070  
                     ___fladd@aexp 0071                       ___fladd@bexp 0072  
