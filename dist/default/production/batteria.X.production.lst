

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sun Feb 28 21:38:22 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    59                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    60                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    61                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    62  0000                     
    63                           	psect	idataCOMRAM
    64  003A47                     __pidataCOMRAM:
    65                           	opt stack 0
    66                           
    67                           ;initializer for _delay_quartz_frequency_value
    68  003A47  14                 	db	20
    69                           
    70                           	psect	idataBANK0
    71  003A44                     __pidataBANK0:
    72                           	opt stack 0
    73                           
    74                           ;initializer for _combinazioni
    75  003A44  01                 	db	1
    76  003A45  05                 	db	5
    77  003A46  0D                 	db	13
    78                           
    79                           	psect	smallconst
    80  000800                     __psmallconst:
    81                           	opt stack 0
    82  000800  00                 	db	0
    83  000801                     __npowers_:
    84                           	opt stack 0
    85  000801  0000               	dw	0
    86  000803  3F80               	dw	16256
    87  000805  CCCD               	dw	52429
    88  000807  3DCC               	dw	15820
    89  000809  D70A               	dw	55050
    90  00080B  3C23               	dw	15395
    91  00080D  126F               	dw	4719
    92  00080F  3A83               	dw	14979
    93  000811  B717               	dw	46871
    94  000813  38D1               	dw	14545
    95  000815  C5AC               	dw	50604
    96  000817  3727               	dw	14119
    97  000819  37BD               	dw	14269
    98  00081B  3586               	dw	13702
    99  00081D  BF95               	dw	49045
   100  00081F  33D6               	dw	13270
   101  000821  CC77               	dw	52343
   102  000823  322B               	dw	12843
   103  000825  705F               	dw	28767
   104  000827  3089               	dw	12425
   105  000829  E6FF               	dw	59135
   106  00082B  2EDB               	dw	11995
   107  00082D  E508               	dw	58632
   108  00082F  1E3C               	dw	7740
   109  000831  4260               	dw	16992
   110  000833  0DA2               	dw	3490
   111  000835                     __end_of__npowers_:
   112                           	opt stack 0
   113  000835                     __powers_:
   114                           	opt stack 0
   115  000835  0000               	dw	0
   116  000837  3F80               	dw	16256
   117  000839  0000               	dw	0
   118  00083B  4120               	dw	16672
   119  00083D  0000               	dw	0
   120  00083F  42C8               	dw	17096
   121  000841  0000               	dw	0
   122  000843  447A               	dw	17530
   123  000845  4000               	dw	16384
   124  000847  461C               	dw	17948
   125  000849  5000               	dw	20480
   126  00084B  47C3               	dw	18371
   127  00084D  2400               	dw	9216
   128  00084F  4974               	dw	18804
   129  000851  9680               	dw	38528
   130  000853  4B18               	dw	19224
   131  000855  BC20               	dw	48160
   132  000857  4CBE               	dw	19646
   133  000859  6B28               	dw	27432
   134  00085B  4E6E               	dw	20078
   135  00085D  02F9               	dw	761
   136  00085F  5015               	dw	20501
   137  000861  78EC               	dw	30956
   138  000863  60AD               	dw	24749
   139  000865  F2CA               	dw	62154
   140  000867  7149               	dw	29001
   141  000869                     __end_of__powers_:
   142                           	opt stack 0
   143  000869                     _dpowers:
   144                           	opt stack 0
   145  000869  0001               	dw	1
   146  00086B  0000               	dw	0
   147  00086D  000A               	dw	10
   148  00086F  0000               	dw	0
   149  000871  0064               	dw	100
   150  000873  0000               	dw	0
   151  000875  03E8               	dw	1000
   152  000877  0000               	dw	0
   153  000879  2710               	dw	10000
   154  00087B  0000               	dw	0
   155  00087D  86A0               	dw	34464
   156  00087F  0001               	dw	1
   157  000881  4240               	dw	16960
   158  000883  000F               	dw	15
   159  000885  9680               	dw	38528
   160  000887  0098               	dw	152
   161  000889  E100               	dw	57600
   162  00088B  05F5               	dw	1525
   163  00088D  CA00               	dw	51712
   164  00088F  3B9A               	dw	15258
   165  000891                     __end_of_dpowers:
   166                           	opt stack 0
   167  000891                     STR_10:
   168                           
   169                           ; BSR set to: 0
   170  000891  43                 	db	67	;'C'
   171  000892  69                 	db	105	;'i'
   172  000893  63                 	db	99	;'c'
   173  000894  6C                 	db	108	;'l'
   174  000895  6F                 	db	111	;'o'
   175  000896  20                 	db	32
   176  000897  72                 	db	114	;'r'
   177  000898  69                 	db	105	;'i'
   178  000899  63                 	db	99	;'c'
   179  00089A  61                 	db	97	;'a'
   180  00089B  72                 	db	114	;'r'
   181  00089C  69                 	db	105	;'i'
   182  00089D  63                 	db	99	;'c'
   183  00089E  61                 	db	97	;'a'
   184  00089F  2E                 	db	46
   185  0008A0  2E                 	db	46
   186  0008A1  00                 	db	0
   187  0008A2                     STR_6:
   188                           
   189                           ; BSR set to: 0
   190  0008A2  62                 	db	98	;'b'
   191  0008A3  61                 	db	97	;'a'
   192  0008A4  74                 	db	116	;'t'
   193  0008A5  74                 	db	116	;'t'
   194  0008A6  65                 	db	101	;'e'
   195  0008A7  72                 	db	114	;'r'
   196  0008A8  69                 	db	105	;'i'
   197  0008A9  61                 	db	97	;'a'
   198  0008AA  20                 	db	32
   199  0008AB  73                 	db	115	;'s'
   200  0008AC  63                 	db	99	;'c'
   201  0008AD  61                 	db	97	;'a'
   202  0008AE  72                 	db	114	;'r'
   203  0008AF  69                 	db	105	;'i'
   204  0008B0  63                 	db	99	;'c'
   205  0008B1  61                 	db	97	;'a'
   206  0008B2  00                 	db	0
   207  0008B3                     STR_13:
   208                           
   209                           ; BSR set to: 0
   210  0008B3  43                 	db	67	;'C'
   211  0008B4  61                 	db	97	;'a'
   212  0008B5  72                 	db	114	;'r'
   213  0008B6  69                 	db	105	;'i'
   214  0008B7  63                 	db	99	;'c'
   215  0008B8  61                 	db	97	;'a'
   216  0008B9  20                 	db	32
   217  0008BA  74                 	db	116	;'t'
   218  0008BB  65                 	db	101	;'e'
   219  0008BC  72                 	db	114	;'r'
   220  0008BD  6D                 	db	109	;'m'
   221  0008BE  69                 	db	105	;'i'
   222  0008BF  6E                 	db	110	;'n'
   223  0008C0  61                 	db	97	;'a'
   224  0008C1  74                 	db	116	;'t'
   225  0008C2  61                 	db	97	;'a'
   226  0008C3  00                 	db	0
   227  0008C4                     STR_1:
   228                           
   229                           ; BSR set to: 0
   230  0008C4  73                 	db	115	;'s'
   231  0008C5  63                 	db	99	;'c'
   232  0008C6  61                 	db	97	;'a'
   233  0008C7  72                 	db	114	;'r'
   234  0008C8  69                 	db	105	;'i'
   235  0008C9  63                 	db	99	;'c'
   236  0008CA  61                 	db	97	;'a'
   237  0008CB  20                 	db	32
   238  0008CC  64                 	db	100	;'d'
   239  0008CD  61                 	db	97	;'a'
   240  0008CE  3A                 	db	58	;':'
   241  0008CF  00                 	db	0
   242  0008D0                     STR_7:
   243                           
   244                           ; BSR set to: 0
   245  0008D0  63                 	db	99	;'c'
   246  0008D1  61                 	db	97	;'a'
   247  0008D2  70                 	db	112	;'p'
   248  0008D3  61                 	db	97	;'a'
   249  0008D4  63                 	db	99	;'c'
   250  0008D5  69                 	db	105	;'i'
   251  0008D6  74                 	db	116	;'t'
   252  0008D7  61                 	db	97	;'a'
   253  0008D8  27                 	db	39
   254  0008D9  3A                 	db	58	;':'
   255  0008DA  00                 	db	0
   256  0008DB                     STR_5:
   257                           
   258                           ; BSR set to: 0
   259  0008DB  20                 	db	32
   260  0008DC  49                 	db	73	;'I'
   261  0008DD  3A                 	db	58	;':'
   262  0008DE  25                 	db	37
   263  0008DF  2E                 	db	46
   264  0008E0  33                 	db	51	;'3'
   265  0008E1  66                 	db	102	;'f'
   266  0008E2  00                 	db	0
   267  0008E3                     STR_14:
   268                           
   269                           ; BSR set to: 0
   270  0008E3  63                 	db	99	;'c'
   271  0008E4  69                 	db	105	;'i'
   272  0008E5  61                 	db	97	;'a'
   273  0008E6  6F                 	db	111	;'o'
   274  0008E7  6E                 	db	110	;'n'
   275  0008E8  65                 	db	101	;'e'
   276  0008E9  00                 	db	0
   277  0008EA                     STR_4:
   278                           
   279                           ; BSR set to: 0
   280  0008EA  56                 	db	86	;'V'
   281  0008EB  3A                 	db	58	;':'
   282  0008EC  25                 	db	37
   283  0008ED  2E                 	db	46
   284  0008EE  33                 	db	51	;'3'
   285  0008EF  66                 	db	102	;'f'
   286  0008F0  00                 	db	0
   287  0008F1                     STR_8:
   288                           
   289                           ; BSR set to: 0
   290  0008F1  25                 	db	37
   291  0008F2  2E                 	db	46
   292  0008F3  34                 	db	52	;'4'
   293  0008F4  66                 	db	102	;'f'
   294  0008F5  00                 	db	0
   295  0008F6                     STR_9:
   296                           
   297                           ; BSR set to: 0
   298  0008F6  41                 	db	65	;'A'
   299  0008F7  68                 	db	104	;'h'
   300  0008F8  00                 	db	0
   301  0000                     
   302                           ; #config settings
   303  0008F9  00                 	db	0	; dummy byte at the end
   304  0000                     
   305                           	psect	nvCOMRAM
   306  000044                     __pnvCOMRAM:
   307                           	opt stack 0
   308  000044                     _clock_counter_reference:
   309                           	opt stack 0
   310  000044                     	ds	2
   311  000046                     _rapporto:
   312                           	opt stack 0
   313  000046                     	ds	4
   314  0000                     _ADCON0	set	4034
   315  0000                     _ADCON0bits	set	4034
   316  0000                     _ADCON1	set	4033
   317  0000                     _ADCON2	set	4032
   318  0000                     _ADRESH	set	4036
   319  0000                     _ADRESL	set	4035
   320  0000                     _INTCONbits	set	4082
   321  0000                     _LATA	set	3977
   322  0000                     _LATB	set	3978
   323  0000                     _LATBbits	set	3978
   324  0000                     _LATC	set	3979
   325  0000                     _LATCbits	set	3979
   326  0000                     _PORTAbits	set	3968
   327  0000                     _PORTCbits	set	3970
   328  0000                     _T0CON	set	4053
   329  0000                     _TMR0H	set	4055
   330  0000                     _TMR0L	set	4054
   331  0000                     _TRISA	set	3986
   332  0000                     _TRISB	set	3987
   333  0000                     _TRISC	set	3988
   334                           
   335                           	psect	cinit
   336  00371A                     __pcinit:
   337                           	opt stack 0
   338  00371A                     start_initialization:
   339                           	opt stack 0
   340  00371A                     __initialization:
   341                           	opt stack 0
   342                           
   343                           ; Clear objects allocated to BANK0 (40 bytes)
   344  00371A  EE00  F0A7         	lfsr	0,__pbssBANK0
   345  00371E  0E28               	movlw	40
   346  003720                     clear_0:
   347  003720  6AEE               	clrf	postinc0,c
   348  003722  06E8               	decf	wreg,f,c
   349  003724  E1FD               	bnz	clear_0
   350                           
   351                           ; Clear objects allocated to COMRAM (6 bytes)
   352  003726  6A4F               	clrf	(__pbssCOMRAM+5)& (0+255),c
   353  003728  6A4E               	clrf	(__pbssCOMRAM+4)& (0+255),c
   354  00372A  6A4D               	clrf	(__pbssCOMRAM+3)& (0+255),c
   355  00372C  6A4C               	clrf	(__pbssCOMRAM+2)& (0+255),c
   356  00372E  6A4B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   357  003730  6A4A               	clrf	__pbssCOMRAM& (0+255),c
   358                           
   359                           ; Initialize objects allocated to BANK0 (3 bytes)
   360                           ; load TBLPTR registers with __pidataBANK0
   361  003732  0E44               	movlw	low __pidataBANK0
   362  003734  6EF6               	movwf	tblptrl,c
   363  003736  0E3A               	movlw	high __pidataBANK0
   364  003738  6EF7               	movwf	tblptrh,c
   365  00373A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   366  00373C  6EF8               	movwf	tblptru,c
   367  00373E  0009               	tblrd		*+	;fetch initializer
   368  003740  CFF5 F0CF          	movff	tablat,__pdataBANK0
   369  003744  0009               	tblrd		*+	;fetch initializer
   370  003746  CFF5 F0D0          	movff	tablat,__pdataBANK0+1
   371  00374A  0009               	tblrd		*+	;fetch initializer
   372  00374C  CFF5 F0D1          	movff	tablat,__pdataBANK0+2
   373                           
   374                           ; Initialize objects allocated to COMRAM (1 bytes)
   375                           ; load TBLPTR registers with __pidataCOMRAM
   376  003750  0E47               	movlw	low __pidataCOMRAM
   377  003752  6EF6               	movwf	tblptrl,c
   378  003754  0E3A               	movlw	high __pidataCOMRAM
   379  003756  6EF7               	movwf	tblptrh,c
   380  003758  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   381  00375A  6EF8               	movwf	tblptru,c
   382  00375C  0009               	tblrd		*+	;fetch initializer
   383  00375E  CFF5 F050          	movff	tablat,__pdataCOMRAM
   384  003762                     end_of_initialization:
   385                           	opt stack 0
   386  003762                     __end_of__initialization:
   387                           	opt stack 0
   388  003762  9051               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   389  003764  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   390  003766  0E00               	movlw	low (__Lmediumconst shr (0+16))
   391  003768  6EF8               	movwf	tblptru,c
   392  00376A  0100               	movlb	0
   393  00376C  EF5F  F01B         	goto	_main	;jump to C main() function
   394                           tblptru	equ	0xFF8
   395                           tblptrh	equ	0xFF7
   396                           tblptrl	equ	0xFF6
   397                           tablat	equ	0xFF5
   398                           postinc0	equ	0xFEE
   399                           wreg	equ	0xFE8
   400                           
   401                           	psect	bssCOMRAM
   402  00004A                     __pbssCOMRAM:
   403                           	opt stack 0
   404  00004A                     LCD_write_integer@F4919:
   405                           	opt stack 0
   406  00004A                     	ds	6
   407                           tblptru	equ	0xFF8
   408                           tblptrh	equ	0xFF7
   409                           tblptrl	equ	0xFF6
   410                           tablat	equ	0xFF5
   411                           postinc0	equ	0xFEE
   412                           wreg	equ	0xFE8
   413                           
   414                           	psect	dataCOMRAM
   415  000050                     __pdataCOMRAM:
   416                           	opt stack 0
   417  000050                     _delay_quartz_frequency_value:
   418                           	opt stack 0
   419  000050                     	ds	1
   420                           tblptru	equ	0xFF8
   421                           tblptrh	equ	0xFF7
   422                           tblptrl	equ	0xFF6
   423                           tablat	equ	0xFF5
   424                           postinc0	equ	0xFEE
   425                           wreg	equ	0xFE8
   426                           
   427                           	psect	bssBANK0
   428  0000A7                     __pbssBANK0:
   429                           	opt stack 0
   430  0000A7                     _lettura:
   431                           	opt stack 0
   432  0000A7                     	ds	6
   433  0000AD                     _current:
   434                           	opt stack 0
   435  0000AD                     	ds	4
   436  0000B1                     _sommatoriaCorrente:
   437                           	opt stack 0
   438  0000B1                     	ds	4
   439  0000B5                     _tempo:
   440                           	opt stack 0
   441  0000B5                     	ds	4
   442  0000B9                     _tempo_old:
   443                           	opt stack 0
   444  0000B9                     	ds	4
   445  0000BD                     _voltage:
   446                           	opt stack 0
   447  0000BD                     	ds	4
   448  0000C1                     _minuti:
   449                           	opt stack 0
   450  0000C1                     	ds	2
   451  0000C3                     _ore:
   452                           	opt stack 0
   453  0000C3                     	ds	2
   454  0000C5                     _secondi:
   455                           	opt stack 0
   456  0000C5                     	ds	2
   457  0000C7                     _str:
   458                           	opt stack 0
   459  0000C7                     	ds	8
   460                           tblptru	equ	0xFF8
   461                           tblptrh	equ	0xFF7
   462                           tblptrl	equ	0xFF6
   463                           tablat	equ	0xFF5
   464                           postinc0	equ	0xFEE
   465                           wreg	equ	0xFE8
   466                           
   467                           	psect	dataBANK0
   468  0000CF                     __pdataBANK0:
   469                           	opt stack 0
   470  0000CF                     _combinazioni:
   471                           	opt stack 0
   472  0000CF                     	ds	3
   473                           tblptru	equ	0xFF8
   474                           tblptrh	equ	0xFF7
   475                           tblptrl	equ	0xFF6
   476                           tablat	equ	0xFF5
   477                           postinc0	equ	0xFEE
   478                           wreg	equ	0xFE8
   479                           
   480                           	psect	cstackBANK0
   481  000060                     __pcstackBANK0:
   482                           	opt stack 0
   483  000060                     ??___fltol:
   484  000060                     ?___fladd:
   485                           	opt stack 0
   486  000060                     ___fldiv@sign:
   487                           	opt stack 0
   488  000060                     ___fladd@b:
   489                           	opt stack 0
   490                           
   491                           ; 4 bytes @ 0x0
   492  000060                     	ds	1
   493  000061                     ___fldiv@rem:
   494                           	opt stack 0
   495                           
   496                           ; 4 bytes @ 0x1
   497  000061                     	ds	3
   498  000064                     ___fltol@sign1:
   499                           	opt stack 0
   500  000064                     ___fladd@a:
   501                           	opt stack 0
   502                           
   503                           ; 4 bytes @ 0x4
   504  000064                     	ds	1
   505  000065                     ___fltol@exp1:
   506                           	opt stack 0
   507  000065                     ___fldiv@new_exp:
   508                           	opt stack 0
   509                           
   510                           ; 2 bytes @ 0x5
   511  000065                     	ds	2
   512  000067                     ___fldiv@grs:
   513                           	opt stack 0
   514                           
   515                           ; 4 bytes @ 0x7
   516  000067                     	ds	1
   517  000068                     ??___fladd:
   518                           
   519                           ; 0 bytes @ 0x8
   520  000068                     	ds	3
   521  00006B                     ___fldiv@bexp:
   522                           	opt stack 0
   523                           
   524                           ; 1 bytes @ 0xB
   525  00006B                     	ds	1
   526  00006C                     ___fldiv@aexp:
   527                           	opt stack 0
   528                           
   529                           ; 1 bytes @ 0xC
   530  00006C                     	ds	1
   531  00006D                     read_adc@i:
   532                           	opt stack 0
   533                           
   534                           ; 1 bytes @ 0xD
   535  00006D                     	ds	3
   536  000070                     ___fladd@signs:
   537                           	opt stack 0
   538                           
   539                           ; 1 bytes @ 0x10
   540  000070                     	ds	1
   541  000071                     ___fladd@aexp:
   542                           	opt stack 0
   543                           
   544                           ; 1 bytes @ 0x11
   545  000071                     	ds	1
   546  000072                     ___fladd@bexp:
   547                           	opt stack 0
   548                           
   549                           ; 1 bytes @ 0x12
   550  000072                     	ds	1
   551  000073                     ___fladd@grs:
   552                           	opt stack 0
   553                           
   554                           ; 1 bytes @ 0x13
   555  000073                     	ds	1
   556  000074                     ?___flsub:
   557                           	opt stack 0
   558  000074                     ___flsub@b:
   559                           	opt stack 0
   560                           
   561                           ; 4 bytes @ 0x14
   562  000074                     	ds	4
   563  000078                     ___flsub@a:
   564                           	opt stack 0
   565                           
   566                           ; 4 bytes @ 0x18
   567  000078                     	ds	4
   568  00007C                     ?_sprintf:
   569                           	opt stack 0
   570  00007C                     sprintf@sp:
   571                           	opt stack 0
   572                           
   573                           ; 2 bytes @ 0x1C
   574  00007C                     	ds	2
   575  00007E                     sprintf@f:
   576                           	opt stack 0
   577                           
   578                           ; 2 bytes @ 0x1E
   579  00007E                     	ds	6
   580  000084                     ??_sprintf:
   581                           
   582                           ; 0 bytes @ 0x24
   583  000084                     	ds	2
   584  000086                     _sprintf$1357:
   585                           	opt stack 0
   586                           
   587                           ; 4 bytes @ 0x26
   588  000086                     	ds	4
   589  00008A                     sprintf@ap:
   590                           	opt stack 0
   591                           
   592                           ; 2 bytes @ 0x2A
   593  00008A                     	ds	2
   594  00008C                     sprintf@flag:
   595                           	opt stack 0
   596                           
   597                           ; 2 bytes @ 0x2C
   598  00008C                     	ds	2
   599  00008E                     sprintf@val:
   600                           	opt stack 0
   601                           
   602                           ; 4 bytes @ 0x2E
   603  00008E                     	ds	4
   604  000092                     sprintf@exp:
   605                           	opt stack 0
   606                           
   607                           ; 2 bytes @ 0x32
   608  000092                     	ds	2
   609  000094                     sprintf@tmpval:
   610                           	opt stack 0
   611                           
   612                           ; 4 bytes @ 0x34
   613  000094                     	ds	4
   614  000098                     sprintf@prec:
   615                           	opt stack 0
   616                           
   617                           ; 2 bytes @ 0x38
   618  000098                     	ds	2
   619  00009A                     sprintf@fval:
   620                           	opt stack 0
   621                           
   622                           ; 4 bytes @ 0x3A
   623  00009A                     	ds	4
   624  00009E                     sprintf@c:
   625                           	opt stack 0
   626                           
   627                           ; 1 bytes @ 0x3E
   628  00009E                     	ds	1
   629  00009F                     ??_scarica:
   630                           
   631                           ; 0 bytes @ 0x3F
   632  00009F                     	ds	8
   633                           tblptru	equ	0xFF8
   634                           tblptrh	equ	0xFF7
   635                           tblptrl	equ	0xFF6
   636                           tablat	equ	0xFF5
   637                           postinc0	equ	0xFEE
   638                           wreg	equ	0xFE8
   639                           
   640                           	psect	cstackCOMRAM
   641  000001                     __pcstackCOMRAM:
   642                           	opt stack 0
   643  000001                     ??_isr_alta:
   644  000001                     
   645                           ; 0 bytes @ 0x0
   646  000001                     	ds	14
   647  00000F                     ??_isdigit:
   648  00000F                     ?___wmul:
   649                           	opt stack 0
   650  00000F                     ?___awmod:
   651                           	opt stack 0
   652  00000F                     ?___lwdiv:
   653                           	opt stack 0
   654  00000F                     ?___lwmod:
   655                           	opt stack 0
   656  00000F                     ?__tdiv_to_l_:
   657                           	opt stack 0
   658  00000F                     ?__div_to_l_:
   659                           	opt stack 0
   660  00000F                     ?___flneg:
   661                           	opt stack 0
   662  00000F                     ?___lldiv:
   663                           	opt stack 0
   664  00000F                     ?___llmod:
   665                           	opt stack 0
   666  00000F                     ?___xxtofl:
   667                           	opt stack 0
   668  00000F                     delay_set_quartz@frequency:
   669                           	opt stack 0
   670  00000F                     ___wmul@multiplier:
   671                           	opt stack 0
   672  00000F                     ___awmod@dividend:
   673                           	opt stack 0
   674  00000F                     ___lwdiv@dividend:
   675                           	opt stack 0
   676  00000F                     ___lwmod@dividend:
   677                           	opt stack 0
   678  00000F                     __div_to_l_@f1:
   679                           	opt stack 0
   680  00000F                     ___flge@ff1:
   681                           	opt stack 0
   682  00000F                     ___flneg@f1:
   683                           	opt stack 0
   684  00000F                     __tdiv_to_l_@f1:
   685                           	opt stack 0
   686  00000F                     ___lldiv@dividend:
   687                           	opt stack 0
   688  00000F                     ___llmod@dividend:
   689                           	opt stack 0
   690  00000F                     ___xxtofl@val:
   691                           	opt stack 0
   692                           
   693                           ; 4 bytes @ 0xE
   694  00000F                     	ds	1
   695  000010                     _isdigit$980:
   696                           	opt stack 0
   697                           
   698                           ; 1 bytes @ 0xF
   699  000010                     	ds	1
   700  000011                     isdigit@c:
   701                           	opt stack 0
   702  000011                     ___wmul@multiplicand:
   703                           	opt stack 0
   704  000011                     ___awmod@divisor:
   705                           	opt stack 0
   706  000011                     ___lwdiv@divisor:
   707                           	opt stack 0
   708  000011                     ___lwmod@divisor:
   709                           	opt stack 0
   710                           
   711                           ; 2 bytes @ 0x10
   712  000011                     	ds	2
   713  000013                     ??___xxtofl:
   714  000013                     ___awmod@counter:
   715                           	opt stack 0
   716  000013                     ___lwmod@counter:
   717                           	opt stack 0
   718  000013                     ___wmul@product:
   719                           	opt stack 0
   720  000013                     ___lwdiv@quotient:
   721                           	opt stack 0
   722  000013                     __div_to_l_@f2:
   723                           	opt stack 0
   724  000013                     ___flge@ff2:
   725                           	opt stack 0
   726  000013                     __tdiv_to_l_@f2:
   727                           	opt stack 0
   728  000013                     ___lldiv@divisor:
   729                           	opt stack 0
   730  000013                     ___llmod@divisor:
   731                           	opt stack 0
   732                           
   733                           ; 4 bytes @ 0x12
   734  000013                     	ds	1
   735  000014                     ___awmod@sign:
   736                           	opt stack 0
   737                           
   738                           ; 1 bytes @ 0x13
   739  000014                     	ds	1
   740  000015                     ?___awdiv:
   741                           	opt stack 0
   742  000015                     ___lwdiv@counter:
   743                           	opt stack 0
   744  000015                     delay_ms@value_ms:
   745                           	opt stack 0
   746  000015                     ___awdiv@dividend:
   747                           	opt stack 0
   748                           
   749                           ; 2 bytes @ 0x14
   750  000015                     	ds	1
   751  000016                     utoa@buf:
   752                           	opt stack 0
   753                           
   754                           ; 2 bytes @ 0x15
   755  000016                     	ds	1
   756  000017                     ??__tdiv_to_l_:
   757  000017                     ??___flge:
   758  000017                     LCD_send_command@D2:
   759                           	opt stack 0
   760  000017                     delay_s@value_s:
   761                           	opt stack 0
   762  000017                     ___llmod@counter:
   763                           	opt stack 0
   764  000017                     ___xxtofl@sign:
   765                           	opt stack 0
   766  000017                     ___awdiv@divisor:
   767                           	opt stack 0
   768  000017                     __div_to_l_@quot:
   769                           	opt stack 0
   770  000017                     ___lldiv@quotient:
   771                           	opt stack 0
   772                           
   773                           ; 4 bytes @ 0x16
   774  000017                     	ds	1
   775  000018                     LCD_send_command@D1:
   776                           	opt stack 0
   777  000018                     delay_s@repeat_loop:
   778                           	opt stack 0
   779  000018                     ___xxtofl@exp:
   780                           	opt stack 0
   781  000018                     utoa@val:
   782                           	opt stack 0
   783                           
   784                           ; 2 bytes @ 0x17
   785  000018                     	ds	1
   786  000019                     LCD_send_command@D0:
   787                           	opt stack 0
   788  000019                     ___awdiv@counter:
   789                           	opt stack 0
   790  000019                     ___xxtofl@arg:
   791                           	opt stack 0
   792                           
   793                           ; 4 bytes @ 0x18
   794  000019                     	ds	1
   795  00001A                     LCD_send_command@D3:
   796                           	opt stack 0
   797  00001A                     ___awdiv@sign:
   798                           	opt stack 0
   799  00001A                     utoa@base:
   800                           	opt stack 0
   801  00001A                     __tdiv_to_l_@quot:
   802                           	opt stack 0
   803                           
   804                           ; 4 bytes @ 0x19
   805  00001A                     	ds	1
   806  00001B                     LCD_goto_line@line:
   807                           	opt stack 0
   808  00001B                     LCD_write_char@D3:
   809                           	opt stack 0
   810  00001B                     LCD_cursor@blinking:
   811                           	opt stack 0
   812  00001B                     __div_to_l_@cntr:
   813                           	opt stack 0
   814  00001B                     ___lldiv@counter:
   815                           	opt stack 0
   816  00001B                     ___awdiv@quotient:
   817                           	opt stack 0
   818                           
   819                           ; 2 bytes @ 0x1A
   820  00001B                     	ds	1
   821  00001C                     LCD_write_char@D2:
   822                           	opt stack 0
   823  00001C                     LCD_cursor@active:
   824                           	opt stack 0
   825  00001C                     __div_to_l_@exp1:
   826                           	opt stack 0
   827  00001C                     utoa@v:
   828                           	opt stack 0
   829                           
   830                           ; 2 bytes @ 0x1B
   831  00001C                     	ds	1
   832  00001D                     ?___flmul:
   833                           	opt stack 0
   834  00001D                     LCD_write_char@D1:
   835                           	opt stack 0
   836  00001D                     LCD_initialize@quartz_frequency:
   837                           	opt stack 0
   838  00001D                     ___flmul@b:
   839                           	opt stack 0
   840                           
   841                           ; 4 bytes @ 0x1C
   842  00001D                     	ds	1
   843  00001E                     LCD_write_char@D0:
   844                           	opt stack 0
   845  00001E                     __tdiv_to_l_@cntr:
   846                           	opt stack 0
   847  00001E                     utoa@c:
   848                           	opt stack 0
   849                           
   850                           ; 1 bytes @ 0x1D
   851  00001E                     	ds	1
   852  00001F                     LCD_write_char@value:
   853                           	opt stack 0
   854  00001F                     __tdiv_to_l_@exp1:
   855                           	opt stack 0
   856  00001F                     itoa@buf:
   857                           	opt stack 0
   858                           
   859                           ; 2 bytes @ 0x1E
   860  00001F                     	ds	1
   861  000020                     LCD_write_message@buffer:
   862                           	opt stack 0
   863  000020                     LCD_write_string@buffer:
   864                           	opt stack 0
   865                           
   866                           ; 2 bytes @ 0x1F
   867  000020                     	ds	1
   868  000021                     itoa@val:
   869                           	opt stack 0
   870  000021                     ___flmul@a:
   871                           	opt stack 0
   872                           
   873                           ; 4 bytes @ 0x20
   874  000021                     	ds	1
   875  000022                     
   876                           ; 0 bytes @ 0x21
   877  000022                     	ds	1
   878  000023                     itoa@base:
   879                           	opt stack 0
   880                           
   881                           ; 2 bytes @ 0x22
   882  000023                     	ds	2
   883  000025                     ??___flmul:
   884  000025                     itoa@cp:
   885                           	opt stack 0
   886                           
   887                           ; 2 bytes @ 0x24
   888  000025                     	ds	2
   889  000027                     LCD_write_integer@value:
   890                           	opt stack 0
   891                           
   892                           ; 2 bytes @ 0x26
   893  000027                     	ds	2
   894  000029                     LCD_write_integer@number_of_digits:
   895                           	opt stack 0
   896  000029                     ___flmul@sign:
   897                           	opt stack 0
   898                           
   899                           ; 1 bytes @ 0x28
   900  000029                     	ds	1
   901  00002A                     LCD_write_integer@zero_cleaning:
   902                           	opt stack 0
   903  00002A                     ___flmul@grs:
   904                           	opt stack 0
   905                           
   906                           ; 4 bytes @ 0x29
   907  00002A                     	ds	1
   908  00002B                     ??_LCD_write_integer:
   909                           
   910                           ; 0 bytes @ 0x2A
   911  00002B                     	ds	3
   912  00002E                     ___flmul@aexp:
   913                           	opt stack 0
   914                           
   915                           ; 1 bytes @ 0x2D
   916  00002E                     	ds	1
   917  00002F                     ___flmul@bexp:
   918                           	opt stack 0
   919                           
   920                           ; 1 bytes @ 0x2E
   921  00002F                     	ds	1
   922  000030                     ___flmul@prod:
   923                           	opt stack 0
   924  000030                     LCD_write_integer@convertedInt:
   925                           	opt stack 0
   926                           
   927                           ; 6 bytes @ 0x2F
   928  000030                     	ds	4
   929  000034                     ___flmul@temp:
   930                           	opt stack 0
   931                           
   932                           ; 2 bytes @ 0x33
   933  000034                     	ds	2
   934  000036                     ?___fldiv:
   935                           	opt stack 0
   936  000036                     ?_fround:
   937                           	opt stack 0
   938  000036                     ?_scale:
   939                           	opt stack 0
   940  000036                     LCD_write_integer@index:
   941                           	opt stack 0
   942  000036                     ___fldiv@b:
   943                           	opt stack 0
   944                           
   945                           ; 4 bytes @ 0x35
   946  000036                     	ds	4
   947  00003A                     ___fldiv@a:
   948                           	opt stack 0
   949  00003A                     _fround$1355:
   950                           	opt stack 0
   951  00003A                     _scale$1356:
   952                           	opt stack 0
   953                           
   954                           ; 4 bytes @ 0x39
   955  00003A                     	ds	4
   956  00003E                     ??___fldiv:
   957  00003E                     scale@scl:
   958                           	opt stack 0
   959  00003E                     _fround$1354:
   960                           	opt stack 0
   961                           
   962                           ; 4 bytes @ 0x3D
   963  00003E                     	ds	1
   964  00003F                     ?___fltol:
   965                           	opt stack 0
   966  00003F                     ___fltol@f1:
   967                           	opt stack 0
   968                           
   969                           ; 4 bytes @ 0x3E
   970  00003F                     	ds	3
   971  000042                     ??_read_adc:
   972  000042                     fround@prec:
   973                           	opt stack 0
   974                           
   975                           ; 1 bytes @ 0x41
   976  000042                     	ds	1
   977  000043                     
   978                           ; 0 bytes @ 0x42
   979  000043                     	ds	1
   980  000044                     tblptru	equ	0xFF8
   981                           tblptrh	equ	0xFF7
   982                           tblptrl	equ	0xFF6
   983                           tablat	equ	0xFF5
   984                           postinc0	equ	0xFEE
   985                           wreg	equ	0xFE8
   986                           
   987                           ; 0 bytes @ 0x43
   988 ;;
   989 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   990 ;;
   991 ;; *************** function _main *****************
   992 ;; Defined at:
   993 ;;		line 67 in file "tester.c"
   994 ;; Parameters:    Size  Location     Type
   995 ;;		None
   996 ;; Auto vars:     Size  Location     Type
   997 ;;		None
   998 ;; Return value:  Size  Location     Type
   999 ;;		None               void
  1000 ;; Registers used:
  1001 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1002 ;; Tracked objects:
  1003 ;;		On entry : 0/0
  1004 ;;		On exit  : 0/0
  1005 ;;		Unchanged: 0/0
  1006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1007 ;;      Params:         0       0       0       0       0       0       0       0       0
  1008 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1009 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1010 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1011 ;;Total ram usage:        0 bytes
  1012 ;; Hardware stack levels required when called:    9
  1013 ;; This function calls:
  1014 ;;		___fldiv
  1015 ;;		_delay_set_quartz
  1016 ;;		_inizializzazione
  1017 ;;		_read_adc
  1018 ;;		_ricarica
  1019 ;;		_scarica
  1020 ;; This function is called by:
  1021 ;;		Startup code after reset
  1022 ;; This function uses a non-reentrant model
  1023 ;;
  1024                           
  1025                           	psect	text0
  1026  0036BE                     __ptext0:
  1027                           	opt stack 0
  1028  0036BE                     _main:
  1029                           	opt stack 22
  1030                           
  1031                           ;tester.c: 68: delay_set_quartz(16);
  1032                           
  1033                           ; BSR set to: 0
  1034                           ;incstack = 0
  1035  0036BE  0E10               	movlw	16
  1036  0036C0  EC1E  F01D         	call	_delay_set_quartz
  1037                           
  1038                           ;tester.c: 69: rapporto = (17825 + 8111);
  1039  0036C4  0E00               	movlw	0
  1040  0036C6  6E46               	movwf	_rapporto,c
  1041  0036C8  0EA0               	movlw	160
  1042  0036CA  6E47               	movwf	_rapporto+1,c
  1043  0036CC  0ECA               	movlw	202
  1044  0036CE  6E48               	movwf	_rapporto+2,c
  1045  0036D0  0E46               	movlw	70
  1046  0036D2  6E49               	movwf	_rapporto+3,c
  1047                           
  1048                           ;tester.c: 70: rapporto = 8111 / rapporto;
  1049  0036D4  0E00               	movlw	0
  1050  0036D6  6E36               	movwf	___fldiv@b,c
  1051  0036D8  0E78               	movlw	120
  1052  0036DA  6E37               	movwf	___fldiv@b+1,c
  1053  0036DC  0EFD               	movlw	253
  1054  0036DE  6E38               	movwf	___fldiv@b+2,c
  1055  0036E0  0E45               	movlw	69
  1056  0036E2  6E39               	movwf	___fldiv@b+3,c
  1057  0036E4  C046  F03A         	movff	_rapporto,___fldiv@a
  1058  0036E8  C047  F03B         	movff	_rapporto+1,___fldiv@a+1
  1059  0036EC  C048  F03C         	movff	_rapporto+2,___fldiv@a+2
  1060  0036F0  C049  F03D         	movff	_rapporto+3,___fldiv@a+3
  1061  0036F4  ECA5  F00E         	call	___fldiv	;wreg free
  1062  0036F8  C036  F046         	movff	?___fldiv,_rapporto
  1063  0036FC  C037  F047         	movff	?___fldiv+1,_rapporto+1
  1064  003700  C038  F048         	movff	?___fldiv+2,_rapporto+2
  1065  003704  C039  F049         	movff	?___fldiv+3,_rapporto+3
  1066                           
  1067                           ;tester.c: 71: inizializzazione();
  1068  003708  EC30  F01B         	call	_inizializzazione	;wreg free
  1069                           
  1070                           ;tester.c: 72: read_adc();
  1071  00370C  EC0F  F013         	call	_read_adc	;wreg free
  1072  003710                     l4876:
  1073                           
  1074                           ;tester.c: 74: ricarica();
  1075  003710  EC2F  F014         	call	_ricarica	;wreg free
  1076                           
  1077                           ;tester.c: 75: scarica();
  1078  003714  EC43  F010         	call	_scarica	;wreg free
  1079  003718  D7FB               	goto	l4876
  1080  00371A                     __end_of_main:
  1081                           	opt stack 0
  1082                           tblptru	equ	0xFF8
  1083                           tblptrh	equ	0xFF7
  1084                           tblptrl	equ	0xFF6
  1085                           tablat	equ	0xFF5
  1086                           postinc0	equ	0xFEE
  1087                           wreg	equ	0xFE8
  1088                           
  1089 ;; *************** function _scarica *****************
  1090 ;; Defined at:
  1091 ;;		line 79 in file "tester.c"
  1092 ;; Parameters:    Size  Location     Type
  1093 ;;		None
  1094 ;; Auto vars:     Size  Location     Type
  1095 ;;		None
  1096 ;; Return value:  Size  Location     Type
  1097 ;;		None               void
  1098 ;; Registers used:
  1099 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1100 ;; Tracked objects:
  1101 ;;		On entry : 0/0
  1102 ;;		On exit  : 0/0
  1103 ;;		Unchanged: 0/0
  1104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1105 ;;      Params:         0       0       0       0       0       0       0       0       0
  1106 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1107 ;;      Temps:          0       8       0       0       0       0       0       0       0
  1108 ;;      Totals:         0       8       0       0       0       0       0       0       0
  1109 ;;Total ram usage:        8 bytes
  1110 ;; Hardware stack levels used:    1
  1111 ;; Hardware stack levels required when called:    8
  1112 ;; This function calls:
  1113 ;;		_LCD_clear
  1114 ;;		_LCD_goto_line
  1115 ;;		_LCD_write_integer
  1116 ;;		_LCD_write_message
  1117 ;;		_LCD_write_string
  1118 ;;		___fladd
  1119 ;;		___fldiv
  1120 ;;		___flge
  1121 ;;		___xxtofl
  1122 ;;		_delay_s
  1123 ;;		_read_adc
  1124 ;;		_sprintf
  1125 ;; This function is called by:
  1126 ;;		_main
  1127 ;; This function uses a non-reentrant model
  1128 ;;
  1129                           
  1130                           	psect	text1
  1131  002086                     __ptext1:
  1132                           	opt stack 0
  1133  002086                     _scarica:
  1134                           	opt stack 22
  1135                           
  1136                           ;tester.c: 80: tempo = 0;
  1137                           
  1138                           ;incstack = 0
  1139  002086  0E00               	movlw	0
  1140  002088  0100               	movlb	0	; () banked
  1141  00208A  6FB5               	movwf	_tempo& (0+255),b
  1142  00208C  0E00               	movlw	0
  1143  00208E  6FB6               	movwf	(_tempo+1)& (0+255),b
  1144  002090  0E00               	movlw	0
  1145  002092  6FB7               	movwf	(_tempo+2)& (0+255),b
  1146  002094  0E00               	movlw	0
  1147  002096  6FB8               	movwf	(_tempo+3)& (0+255),b
  1148                           
  1149                           ;tester.c: 81: T0CON = 0x85;
  1150  002098  0E85               	movlw	133
  1151  00209A  6ED5               	movwf	4053,c	;volatile
  1152                           
  1153                           ;tester.c: 82: TMR0H = 0x0B;
  1154  00209C  0E0B               	movlw	11
  1155  00209E  6ED7               	movwf	4055,c	;volatile
  1156                           
  1157                           ;tester.c: 83: TMR0L = 0xDC;
  1158  0020A0  0EDC               	movlw	220
  1159  0020A2  6ED6               	movwf	4054,c	;volatile
  1160                           
  1161                           ; BSR set to: 0
  1162                           ;tester.c: 84: INTCONbits.GIE = 1;
  1163  0020A4  8EF2               	bsf	intcon,7,c	;volatile
  1164                           
  1165                           ; BSR set to: 0
  1166                           ;tester.c: 85: INTCONbits.TMR0IF = 0;
  1167  0020A6  94F2               	bcf	intcon,2,c	;volatile
  1168                           
  1169                           ; BSR set to: 0
  1170                           ;tester.c: 86: INTCONbits.TMR0IE = 1;
  1171  0020A8  8AF2               	bsf	intcon,5,c	;volatile
  1172                           
  1173                           ;tester.c: 87: secondi = 0;
  1174  0020AA  0E00               	movlw	0
  1175  0020AC  0100               	movlb	0	; () banked
  1176  0020AE  6FC6               	movwf	(_secondi+1)& (0+255),b
  1177  0020B0  0E00               	movlw	0
  1178  0020B2  6FC5               	movwf	_secondi& (0+255),b
  1179                           
  1180                           ;tester.c: 88: minuti = 0;
  1181  0020B4  0E00               	movlw	0
  1182  0020B6  0100               	movlb	0	; () banked
  1183  0020B8  6FC2               	movwf	(_minuti+1)& (0+255),b
  1184  0020BA  0E00               	movlw	0
  1185  0020BC  6FC1               	movwf	_minuti& (0+255),b
  1186                           
  1187                           ;tester.c: 89: ore = 0;
  1188  0020BE  0E00               	movlw	0
  1189  0020C0  0100               	movlb	0	; () banked
  1190  0020C2  6FC4               	movwf	(_ore+1)& (0+255),b
  1191  0020C4  0E00               	movlw	0
  1192  0020C6  6FC3               	movwf	_ore& (0+255),b
  1193                           
  1194                           ;tester.c: 90: while (voltage > 10) {
  1195  0020C8  D0E2               	goto	l188
  1196  0020CA                     l4806:
  1197                           
  1198                           ;tester.c: 91: LCD_clear();
  1199  0020CA  ECB8  F01C         	call	_LCD_clear	;wreg free
  1200                           
  1201                           ;tester.c: 92: PORTAbits.RA2 = 1;
  1202  0020CE  8480               	bsf	3968,2,c	;volatile
  1203                           
  1204                           ;tester.c: 93: LCD_write_message("scarica da:");
  1205  0020D0  0EC4               	movlw	low STR_1
  1206  0020D2  6E20               	movwf	LCD_write_message@buffer,c
  1207  0020D4  0E08               	movlw	high STR_1
  1208  0020D6  6E21               	movwf	LCD_write_message@buffer+1,c
  1209  0020D8  EC8F  F01C         	call	_LCD_write_message	;wreg free
  1210                           
  1211                           ;tester.c: 94: if (ore == 0) {
  1212  0020DC  0100               	movlb	0	; () banked
  1213  0020DE  51C3               	movf	_ore& (0+255),w,b
  1214  0020E0  0100               	movlb	0	; () banked
  1215  0020E2  11C4               	iorwf	(_ore+1)& (0+255),w,b
  1216  0020E4  A4D8               	btfss	status,2,c
  1217  0020E6  D01B               	goto	l4820
  1218                           
  1219                           ; BSR set to: 0
  1220                           ;tester.c: 95: LCD_write_integer(minuti, 2, 0x01);
  1221  0020E8  C0C1  F027         	movff	_minuti,LCD_write_integer@value
  1222  0020EC  C0C2  F028         	movff	_minuti+1,LCD_write_integer@value+1
  1223  0020F0  0E02               	movlw	2
  1224  0020F2  6E29               	movwf	LCD_write_integer@number_of_digits,c
  1225  0020F4  0E01               	movlw	1
  1226  0020F6  6E2A               	movwf	LCD_write_integer@zero_cleaning,c
  1227  0020F8  EC92  F015         	call	_LCD_write_integer	;wreg free
  1228                           
  1229                           ;tester.c: 96: LCD_write_message(":");
  1230  0020FC  0ED9               	movlw	low (STR_7+9)
  1231  0020FE  6E20               	movwf	LCD_write_message@buffer,c
  1232  002100  0E08               	movlw	high (STR_7+9)
  1233  002102  6E21               	movwf	LCD_write_message@buffer+1,c
  1234  002104  EC8F  F01C         	call	_LCD_write_message	;wreg free
  1235                           
  1236                           ;tester.c: 97: LCD_write_integer(secondi, 2, 0x01);
  1237  002108  C0C5  F027         	movff	_secondi,LCD_write_integer@value
  1238  00210C  C0C6  F028         	movff	_secondi+1,LCD_write_integer@value+1
  1239  002110  0E02               	movlw	2
  1240  002112  6E29               	movwf	LCD_write_integer@number_of_digits,c
  1241  002114  0E01               	movlw	1
  1242  002116  6E2A               	movwf	LCD_write_integer@zero_cleaning,c
  1243  002118  EC92  F015         	call	_LCD_write_integer	;wreg free
  1244                           
  1245                           ;tester.c: 98: } else {
  1246  00211C  D01A               	goto	l4826
  1247  00211E                     l4820:
  1248                           
  1249                           ;tester.c: 99: LCD_write_integer(ore, 2, 0x01);
  1250  00211E  C0C3  F027         	movff	_ore,LCD_write_integer@value
  1251  002122  C0C4  F028         	movff	_ore+1,LCD_write_integer@value+1
  1252  002126  0E02               	movlw	2
  1253  002128  6E29               	movwf	LCD_write_integer@number_of_digits,c
  1254  00212A  0E01               	movlw	1
  1255  00212C  6E2A               	movwf	LCD_write_integer@zero_cleaning,c
  1256  00212E  EC92  F015         	call	_LCD_write_integer	;wreg free
  1257                           
  1258                           ;tester.c: 100: LCD_write_message(":");
  1259  002132  0ED9               	movlw	low (STR_7+9)
  1260  002134  6E20               	movwf	LCD_write_message@buffer,c
  1261  002136  0E08               	movlw	high (STR_7+9)
  1262  002138  6E21               	movwf	LCD_write_message@buffer+1,c
  1263  00213A  EC8F  F01C         	call	_LCD_write_message	;wreg free
  1264                           
  1265                           ;tester.c: 101: LCD_write_integer(minuti, 2, 0x01);
  1266  00213E  C0C1  F027         	movff	_minuti,LCD_write_integer@value
  1267  002142  C0C2  F028         	movff	_minuti+1,LCD_write_integer@value+1
  1268  002146  0E02               	movlw	2
  1269  002148  6E29               	movwf	LCD_write_integer@number_of_digits,c
  1270  00214A  0E01               	movlw	1
  1271  00214C  6E2A               	movwf	LCD_write_integer@zero_cleaning,c
  1272  00214E  EC92  F015         	call	_LCD_write_integer	;wreg free
  1273  002152                     l4826:
  1274                           
  1275                           ;tester.c: 102: }
  1276                           ;tester.c: 103: read_adc();
  1277  002152  EC0F  F013         	call	_read_adc	;wreg free
  1278                           
  1279                           ;tester.c: 104: LCD_goto_line(2);
  1280  002156  0E02               	movlw	2
  1281  002158  EC5C  F019         	call	_LCD_goto_line
  1282                           
  1283                           ;tester.c: 105: sprintf(str, "V:%.3f", voltage);
  1284  00215C  0EC7               	movlw	low _str
  1285  00215E  0100               	movlb	0	; () banked
  1286  002160  6F7C               	movwf	sprintf@sp& (0+255),b
  1287  002162  0E00               	movlw	high _str
  1288  002164  0100               	movlb	0	; () banked
  1289  002166  6F7D               	movwf	(sprintf@sp+1)& (0+255),b
  1290  002168  0EEA               	movlw	low STR_4
  1291  00216A  0100               	movlb	0	; () banked
  1292  00216C  6F7E               	movwf	sprintf@f& (0+255),b
  1293  00216E  0E08               	movlw	high STR_4
  1294  002170  0100               	movlb	0	; () banked
  1295  002172  6F7F               	movwf	(sprintf@f+1)& (0+255),b
  1296  002174  C0BD  F080         	movff	_voltage,?_sprintf+4
  1297  002178  C0BE  F081         	movff	_voltage+1,?_sprintf+5
  1298  00217C  C0BF  F082         	movff	_voltage+2,?_sprintf+6
  1299  002180  C0C0  F083         	movff	_voltage+3,?_sprintf+7
  1300  002184  EC7D  F004         	call	_sprintf	;wreg free
  1301                           
  1302                           ;tester.c: 106: str[7] = '\0';
  1303  002188  0E00               	movlw	0
  1304  00218A  0100               	movlb	0	; () banked
  1305  00218C  6FCE               	movwf	(_str+7)& (0+255),b
  1306                           
  1307                           ; BSR set to: 0
  1308                           ;tester.c: 107: LCD_write_string(str);
  1309  00218E  0EC7               	movlw	low _str
  1310  002190  6E20               	movwf	LCD_write_string@buffer,c
  1311  002192  0E00               	movlw	high _str
  1312  002194  6E21               	movwf	LCD_write_string@buffer+1,c
  1313  002196  ECDE  F01C         	call	_LCD_write_string	;wreg free
  1314                           
  1315                           ;tester.c: 108: sprintf(str, " I:%.3f", current);
  1316  00219A  0EC7               	movlw	low _str
  1317  00219C  0100               	movlb	0	; () banked
  1318  00219E  6F7C               	movwf	sprintf@sp& (0+255),b
  1319  0021A0  0E00               	movlw	high _str
  1320  0021A2  0100               	movlb	0	; () banked
  1321  0021A4  6F7D               	movwf	(sprintf@sp+1)& (0+255),b
  1322  0021A6  0EDB               	movlw	low STR_5
  1323  0021A8  0100               	movlb	0	; () banked
  1324  0021AA  6F7E               	movwf	sprintf@f& (0+255),b
  1325  0021AC  0E08               	movlw	high STR_5
  1326  0021AE  0100               	movlb	0	; () banked
  1327  0021B0  6F7F               	movwf	(sprintf@f+1)& (0+255),b
  1328  0021B2  C0AD  F080         	movff	_current,?_sprintf+4
  1329  0021B6  C0AE  F081         	movff	_current+1,?_sprintf+5
  1330  0021BA  C0AF  F082         	movff	_current+2,?_sprintf+6
  1331  0021BE  C0B0  F083         	movff	_current+3,?_sprintf+7
  1332  0021C2  EC7D  F004         	call	_sprintf	;wreg free
  1333                           
  1334                           ;tester.c: 109: str[7] = '\0';
  1335  0021C6  0E00               	movlw	0
  1336  0021C8  0100               	movlb	0	; () banked
  1337  0021CA  6FCE               	movwf	(_str+7)& (0+255),b
  1338                           
  1339                           ;tester.c: 110: LCD_write_string(str);
  1340  0021CC  0EC7               	movlw	low _str
  1341  0021CE  6E20               	movwf	LCD_write_string@buffer,c
  1342  0021D0  0E00               	movlw	high _str
  1343  0021D2  6E21               	movwf	LCD_write_string@buffer+1,c
  1344  0021D4  ECDE  F01C         	call	_LCD_write_string	;wreg free
  1345                           
  1346                           ;tester.c: 111: delay_s(10);
  1347  0021D8  0E0A               	movlw	10
  1348  0021DA  ECF0  F01C         	call	_delay_s
  1349                           
  1350                           ;tester.c: 112: if (tempo - tempo_old >= 59) {
  1351  0021DE  C0B9  F09F         	movff	_tempo_old,??_scarica
  1352  0021E2  C0BA  F0A0         	movff	_tempo_old+1,??_scarica+1
  1353  0021E6  C0BB  F0A1         	movff	_tempo_old+2,??_scarica+2
  1354  0021EA  C0BC  F0A2         	movff	_tempo_old+3,??_scarica+3
  1355  0021EE  0100               	movlb	0	; () banked
  1356  0021F0  1F9F               	comf	??_scarica& (0+255),f,b
  1357  0021F2  1FA0               	comf	(??_scarica+1)& (0+255),f,b
  1358  0021F4  1FA1               	comf	(??_scarica+2)& (0+255),f,b
  1359  0021F6  1FA2               	comf	(??_scarica+3)& (0+255),f,b
  1360  0021F8  2B9F               	incf	??_scarica& (0+255),f,b
  1361  0021FA  0E00               	movlw	0
  1362  0021FC  23A0               	addwfc	(??_scarica+1)& (0+255),f,b
  1363  0021FE  23A1               	addwfc	(??_scarica+2)& (0+255),f,b
  1364  002200  23A2               	addwfc	(??_scarica+3)& (0+255),f,b
  1365  002202  0100               	movlb	0	; () banked
  1366  002204  51B5               	movf	_tempo& (0+255),w,b
  1367  002206  0100               	movlb	0	; () banked
  1368  002208  259F               	addwf	??_scarica& (0+255),w,b
  1369  00220A  0100               	movlb	0	; () banked
  1370  00220C  6FA3               	movwf	(??_scarica+4)& (0+255),b
  1371  00220E  0100               	movlb	0	; () banked
  1372  002210  51B6               	movf	(_tempo+1)& (0+255),w,b
  1373  002212  0100               	movlb	0	; () banked
  1374  002214  21A0               	addwfc	(??_scarica+1)& (0+255),w,b
  1375  002216  0100               	movlb	0	; () banked
  1376  002218  6FA4               	movwf	(??_scarica+5)& (0+255),b
  1377  00221A  0100               	movlb	0	; () banked
  1378  00221C  51B7               	movf	(_tempo+2)& (0+255),w,b
  1379  00221E  0100               	movlb	0	; () banked
  1380  002220  21A1               	addwfc	(??_scarica+2)& (0+255),w,b
  1381  002222  0100               	movlb	0	; () banked
  1382  002224  6FA5               	movwf	(??_scarica+6)& (0+255),b
  1383  002226  0100               	movlb	0	; () banked
  1384  002228  51B8               	movf	(_tempo+3)& (0+255),w,b
  1385  00222A  0100               	movlb	0	; () banked
  1386  00222C  21A2               	addwfc	(??_scarica+3)& (0+255),w,b
  1387  00222E  0100               	movlb	0	; () banked
  1388  002230  6FA6               	movwf	(??_scarica+7)& (0+255),b
  1389  002232  0100               	movlb	0	; () banked
  1390  002234  51A6               	movf	(??_scarica+7)& (0+255),w,b
  1391  002236  0100               	movlb	0	; () banked
  1392  002238  11A5               	iorwf	(??_scarica+6)& (0+255),w,b
  1393  00223A  0100               	movlb	0	; () banked
  1394  00223C  11A4               	iorwf	(??_scarica+5)& (0+255),w,b
  1395  00223E  E105               	bnz	u5470
  1396  002240  0E3B               	movlw	59
  1397  002242  0100               	movlb	0	; () banked
  1398  002244  5DA3               	subwf	(??_scarica+4)& (0+255),w,b
  1399  002246  A0D8               	btfss	status,0,c
  1400  002248  D022               	goto	l188
  1401  00224A                     u5470:
  1402                           
  1403                           ; BSR set to: 0
  1404                           ;tester.c: 113: tempo_old = tempo;
  1405  00224A  C0B5  F0B9         	movff	_tempo,_tempo_old
  1406  00224E  C0B6  F0BA         	movff	_tempo+1,_tempo_old+1
  1407  002252  C0B7  F0BB         	movff	_tempo+2,_tempo_old+2
  1408  002256  C0B8  F0BC         	movff	_tempo+3,_tempo_old+3
  1409                           
  1410                           ; BSR set to: 0
  1411                           ;tester.c: 114: sommatoriaCorrente = current + sommatoriaCorrente;
  1412  00225A  C0AD  F060         	movff	_current,___fladd@b
  1413  00225E  C0AE  F061         	movff	_current+1,___fladd@b+1
  1414  002262  C0AF  F062         	movff	_current+2,___fladd@b+2
  1415  002266  C0B0  F063         	movff	_current+3,___fladd@b+3
  1416  00226A  C0B1  F064         	movff	_sommatoriaCorrente,___fladd@a
  1417  00226E  C0B2  F065         	movff	_sommatoriaCorrente+1,___fladd@a+1
  1418  002272  C0B3  F066         	movff	_sommatoriaCorrente+2,___fladd@a+2
  1419  002276  C0B4  F067         	movff	_sommatoriaCorrente+3,___fladd@a+3
  1420  00227A  EC9D  F008         	call	___fladd	;wreg free
  1421  00227E  C060  F0B1         	movff	?___fladd,_sommatoriaCorrente
  1422  002282  C061  F0B2         	movff	?___fladd+1,_sommatoriaCorrente+1
  1423  002286  C062  F0B3         	movff	?___fladd+2,_sommatoriaCorrente+2
  1424  00228A  C063  F0B4         	movff	?___fladd+3,_sommatoriaCorrente+3
  1425  00228E                     l188:
  1426  00228E  0E00               	movlw	0
  1427  002290  6E0F               	movwf	___flge@ff1,c
  1428  002292  0E00               	movlw	0
  1429  002294  6E10               	movwf	___flge@ff1+1,c
  1430  002296  0E20               	movlw	32
  1431  002298  6E11               	movwf	___flge@ff1+2,c
  1432  00229A  0E41               	movlw	65
  1433  00229C  6E12               	movwf	___flge@ff1+3,c
  1434  00229E  C0BD  F013         	movff	_voltage,___flge@ff2
  1435  0022A2  C0BE  F014         	movff	_voltage+1,___flge@ff2+1
  1436  0022A6  C0BF  F015         	movff	_voltage+2,___flge@ff2+2
  1437  0022AA  C0C0  F016         	movff	_voltage+3,___flge@ff2+3
  1438  0022AE  EC5E  F017         	call	___flge	;wreg free
  1439  0022B2  A0D8               	btfss	status,0,c
  1440  0022B4  D70A               	goto	l4806
  1441                           
  1442                           ;tester.c: 115: }
  1443                           ;tester.c: 116: }
  1444                           ;tester.c: 117: LCD_clear();
  1445  0022B6  ECB8  F01C         	call	_LCD_clear	;wreg free
  1446                           
  1447                           ;tester.c: 118: LCD_write_message("batteria scarica");
  1448  0022BA  0EA2               	movlw	low STR_6
  1449  0022BC  6E20               	movwf	LCD_write_message@buffer,c
  1450  0022BE  0E08               	movlw	high STR_6
  1451  0022C0  6E21               	movwf	LCD_write_message@buffer+1,c
  1452  0022C2  EC8F  F01C         	call	_LCD_write_message	;wreg free
  1453                           
  1454                           ;tester.c: 119: LCD_goto_line(2);
  1455  0022C6  0E02               	movlw	2
  1456  0022C8  EC5C  F019         	call	_LCD_goto_line
  1457                           
  1458                           ;tester.c: 120: LCD_write_message("capacita':");
  1459  0022CC  0ED0               	movlw	low STR_7
  1460  0022CE  6E20               	movwf	LCD_write_message@buffer,c
  1461  0022D0  0E08               	movlw	high STR_7
  1462  0022D2  6E21               	movwf	LCD_write_message@buffer+1,c
  1463  0022D4  EC8F  F01C         	call	_LCD_write_message	;wreg free
  1464                           
  1465                           ;tester.c: 121: sommatoriaCorrente = sommatoriaCorrente / 60;
  1466  0022D8  C0B1  F036         	movff	_sommatoriaCorrente,___fldiv@b
  1467  0022DC  C0B2  F037         	movff	_sommatoriaCorrente+1,___fldiv@b+1
  1468  0022E0  C0B3  F038         	movff	_sommatoriaCorrente+2,___fldiv@b+2
  1469  0022E4  C0B4  F039         	movff	_sommatoriaCorrente+3,___fldiv@b+3
  1470  0022E8  0E00               	movlw	0
  1471  0022EA  6E3A               	movwf	___fldiv@a,c
  1472  0022EC  0E00               	movlw	0
  1473  0022EE  6E3B               	movwf	___fldiv@a+1,c
  1474  0022F0  0E70               	movlw	112
  1475  0022F2  6E3C               	movwf	___fldiv@a+2,c
  1476  0022F4  0E42               	movlw	66
  1477  0022F6  6E3D               	movwf	___fldiv@a+3,c
  1478  0022F8  ECA5  F00E         	call	___fldiv	;wreg free
  1479  0022FC  C036  F0B1         	movff	?___fldiv,_sommatoriaCorrente
  1480  002300  C037  F0B2         	movff	?___fldiv+1,_sommatoriaCorrente+1
  1481  002304  C038  F0B3         	movff	?___fldiv+2,_sommatoriaCorrente+2
  1482  002308  C039  F0B4         	movff	?___fldiv+3,_sommatoriaCorrente+3
  1483                           
  1484                           ;tester.c: 122: sommatoriaCorrente = sommatoriaCorrente / ore;
  1485  00230C  C0B1  F036         	movff	_sommatoriaCorrente,___fldiv@b
  1486  002310  C0B2  F037         	movff	_sommatoriaCorrente+1,___fldiv@b+1
  1487  002314  C0B3  F038         	movff	_sommatoriaCorrente+2,___fldiv@b+2
  1488  002318  C0B4  F039         	movff	_sommatoriaCorrente+3,___fldiv@b+3
  1489  00231C  C0C3  F00F         	movff	_ore,___xxtofl@val
  1490  002320  C0C4  F010         	movff	_ore+1,___xxtofl@val+1
  1491  002324  6A11               	clrf	___xxtofl@val+2,c
  1492  002326  6A12               	clrf	___xxtofl@val+3,c
  1493  002328  0E00               	movlw	0
  1494  00232A  ECEA  F014         	call	___xxtofl
  1495  00232E  C00F  F03A         	movff	?___xxtofl,___fldiv@a
  1496  002332  C010  F03B         	movff	?___xxtofl+1,___fldiv@a+1
  1497  002336  C011  F03C         	movff	?___xxtofl+2,___fldiv@a+2
  1498  00233A  C012  F03D         	movff	?___xxtofl+3,___fldiv@a+3
  1499  00233E  ECA5  F00E         	call	___fldiv	;wreg free
  1500  002342  C036  F0B1         	movff	?___fldiv,_sommatoriaCorrente
  1501  002346  C037  F0B2         	movff	?___fldiv+1,_sommatoriaCorrente+1
  1502  00234A  C038  F0B3         	movff	?___fldiv+2,_sommatoriaCorrente+2
  1503  00234E  C039  F0B4         	movff	?___fldiv+3,_sommatoriaCorrente+3
  1504                           
  1505                           ;tester.c: 123: sprintf(str, "%.4f", sommatoriaCorrente);
  1506  002352  0EC7               	movlw	low _str
  1507  002354  0100               	movlb	0	; () banked
  1508  002356  6F7C               	movwf	sprintf@sp& (0+255),b
  1509  002358  0E00               	movlw	high _str
  1510  00235A  0100               	movlb	0	; () banked
  1511  00235C  6F7D               	movwf	(sprintf@sp+1)& (0+255),b
  1512  00235E  0EF1               	movlw	low STR_8
  1513  002360  0100               	movlb	0	; () banked
  1514  002362  6F7E               	movwf	sprintf@f& (0+255),b
  1515  002364  0E08               	movlw	high STR_8
  1516  002366  0100               	movlb	0	; () banked
  1517  002368  6F7F               	movwf	(sprintf@f+1)& (0+255),b
  1518  00236A  C0B1  F080         	movff	_sommatoriaCorrente,?_sprintf+4
  1519  00236E  C0B2  F081         	movff	_sommatoriaCorrente+1,?_sprintf+5
  1520  002372  C0B3  F082         	movff	_sommatoriaCorrente+2,?_sprintf+6
  1521  002376  C0B4  F083         	movff	_sommatoriaCorrente+3,?_sprintf+7
  1522  00237A  EC7D  F004         	call	_sprintf	;wreg free
  1523                           
  1524                           ;tester.c: 124: str[7] = '\0';
  1525  00237E  0E00               	movlw	0
  1526  002380  0100               	movlb	0	; () banked
  1527  002382  6FCE               	movwf	(_str+7)& (0+255),b
  1528                           
  1529                           ; BSR set to: 0
  1530                           ;tester.c: 125: LCD_write_string(str);
  1531  002384  0EC7               	movlw	low _str
  1532  002386  6E20               	movwf	LCD_write_string@buffer,c
  1533  002388  0E00               	movlw	high _str
  1534  00238A  6E21               	movwf	LCD_write_string@buffer+1,c
  1535  00238C  ECDE  F01C         	call	_LCD_write_string	;wreg free
  1536                           
  1537                           ;tester.c: 126: LCD_write_message("Ah");
  1538  002390  0EF6               	movlw	low STR_9
  1539  002392  6E20               	movwf	LCD_write_message@buffer,c
  1540  002394  0E08               	movlw	high STR_9
  1541  002396  6E21               	movwf	LCD_write_message@buffer+1,c
  1542  002398  EC8F  F01C         	call	_LCD_write_message	;wreg free
  1543                           
  1544                           ;tester.c: 127: delay_s(5);
  1545  00239C  0E05               	movlw	5
  1546  00239E  ECF0  F01C         	call	_delay_s
  1547  0023A2  0012               	return		;funcret
  1548  0023A4                     __end_of_scarica:
  1549                           	opt stack 0
  1550                           tblptru	equ	0xFF8
  1551                           tblptrh	equ	0xFF7
  1552                           tblptrl	equ	0xFF6
  1553                           tablat	equ	0xFF5
  1554                           intcon	equ	0xFF2
  1555                           postinc0	equ	0xFEE
  1556                           wreg	equ	0xFE8
  1557                           status	equ	0xFD8
  1558                           
  1559 ;; *************** function _delay_s *****************
  1560 ;; Defined at:
  1561 ;;		line 102 in file "../../LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
  1562 ;; Parameters:    Size  Location     Type
  1563 ;;  value_s         1    wreg     unsigned char 
  1564 ;; Auto vars:     Size  Location     Type
  1565 ;;  value_s         1   22[COMRAM] unsigned char 
  1566 ;;  repeat_loop     1   23[COMRAM] unsigned char 
  1567 ;; Return value:  Size  Location     Type
  1568 ;;		None               void
  1569 ;; Registers used:
  1570 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1571 ;; Tracked objects:
  1572 ;;		On entry : 0/0
  1573 ;;		On exit  : 0/0
  1574 ;;		Unchanged: 0/0
  1575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1576 ;;      Params:         0       0       0       0       0       0       0       0       0
  1577 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1578 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1579 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1580 ;;Total ram usage:        2 bytes
  1581 ;; Hardware stack levels used:    1
  1582 ;; Hardware stack levels required when called:    3
  1583 ;; This function calls:
  1584 ;;		_delay_ms
  1585 ;; This function is called by:
  1586 ;;		_scarica
  1587 ;; This function uses a non-reentrant model
  1588 ;;
  1589                           
  1590                           	psect	text2
  1591  0039E0                     __ptext2:
  1592                           	opt stack 0
  1593  0039E0                     _delay_s:
  1594                           	opt stack 26
  1595                           
  1596                           ;incstack = 0
  1597                           ;delay_s@value_s stored from wreg
  1598  0039E0  6E17               	movwf	delay_s@value_s,c
  1599                           
  1600                           ;src\delay.c: 104: unsigned char repeat_loop;
  1601                           ;src\delay.c: 106: for (repeat_loop = 0; repeat_loop < value_s; repeat_loop++)
  1602  0039E2  0E00               	movlw	0
  1603  0039E4  6E18               	movwf	delay_s@repeat_loop,c
  1604  0039E6  D007               	goto	l3694
  1605  0039E8                     l3690:
  1606                           
  1607                           ;src\delay.c: 107: delay_ms (1000);
  1608  0039E8  0E03               	movlw	3
  1609  0039EA  6E16               	movwf	delay_ms@value_ms+1,c
  1610  0039EC  0EE8               	movlw	232
  1611  0039EE  6E15               	movwf	delay_ms@value_ms,c
  1612  0039F0  EC47  F01C         	call	_delay_ms	;wreg free
  1613  0039F4  2A18               	incf	delay_s@repeat_loop,f,c
  1614  0039F6                     l3694:
  1615  0039F6  5017               	movf	delay_s@value_s,w,c
  1616  0039F8  5C18               	subwf	delay_s@repeat_loop,w,c
  1617  0039FA  B0D8               	btfsc	status,0,c
  1618  0039FC  0012               	return	
  1619  0039FE  D7F4               	goto	l3690
  1620  003A00                     __end_of_delay_s:
  1621                           	opt stack 0
  1622                           tblptru	equ	0xFF8
  1623                           tblptrh	equ	0xFF7
  1624                           tblptrl	equ	0xFF6
  1625                           tablat	equ	0xFF5
  1626                           intcon	equ	0xFF2
  1627                           postinc0	equ	0xFEE
  1628                           wreg	equ	0xFE8
  1629                           status	equ	0xFD8
  1630                           
  1631 ;; *************** function _LCD_write_integer *****************
  1632 ;; Defined at:
  1633 ;;		line 210 in file "../../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  1634 ;; Parameters:    Size  Location     Type
  1635 ;;  value           2   38[COMRAM] int 
  1636 ;;  number_of_di    1   40[COMRAM] unsigned char 
  1637 ;;  zero_cleanin    1   41[COMRAM] unsigned char 
  1638 ;; Auto vars:     Size  Location     Type
  1639 ;;  convertedInt    6   47[COMRAM] unsigned char [6]
  1640 ;;  index           1   53[COMRAM] unsigned char 
  1641 ;; Return value:  Size  Location     Type
  1642 ;;		None               void
  1643 ;; Registers used:
  1644 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1645 ;; Tracked objects:
  1646 ;;		On entry : 0/0
  1647 ;;		On exit  : 0/0
  1648 ;;		Unchanged: 0/0
  1649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1650 ;;      Params:         4       0       0       0       0       0       0       0       0
  1651 ;;      Locals:         7       0       0       0       0       0       0       0       0
  1652 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1653 ;;      Totals:        16       0       0       0       0       0       0       0       0
  1654 ;;Total ram usage:       16 bytes
  1655 ;; Hardware stack levels used:    1
  1656 ;; Hardware stack levels required when called:    7
  1657 ;; This function calls:
  1658 ;;		_LCD_write_string
  1659 ;;		_itoa
  1660 ;; This function is called by:
  1661 ;;		_scarica
  1662 ;; This function uses a non-reentrant model
  1663 ;;
  1664                           
  1665                           	psect	text3
  1666  002B24                     __ptext3:
  1667                           	opt stack 0
  1668  002B24                     _LCD_write_integer:
  1669                           	opt stack 22
  1670                           
  1671                           ;src\LCD_44780.c: 213: unsigned char convertedInt [6] = {0,0,0,0,0,0};
  1672                           
  1673                           ;incstack = 0
  1674  002B24  EE20  F04A         	lfsr	2,LCD_write_integer@F4919
  1675  002B28  EE10  F030         	lfsr	1,LCD_write_integer@convertedInt
  1676  002B2C  0E05               	movlw	5
  1677  002B2E                     u3841:
  1678  002B2E  CFDB FFE3          	movff	plusw2,plusw1
  1679  002B32  06E8               	decf	wreg,f,c
  1680  002B34  E2FC               	bc	u3841
  1681                           
  1682                           ;src\LCD_44780.c: 216: unsigned char index;
  1683                           ;src\LCD_44780.c: 224: itoa ((unsigned char*) convertedInt, value,10);
  1684  002B36  0E30               	movlw	low LCD_write_integer@convertedInt
  1685  002B38  6E1F               	movwf	itoa@buf,c
  1686  002B3A  0E00               	movlw	high LCD_write_integer@convertedInt
  1687  002B3C  6E20               	movwf	itoa@buf+1,c
  1688  002B3E  C027  F021         	movff	LCD_write_integer@value,itoa@val
  1689  002B42  C028  F022         	movff	LCD_write_integer@value+1,itoa@val+1
  1690  002B46  0E00               	movlw	0
  1691  002B48  6E24               	movwf	itoa@base+1,c
  1692  002B4A  0E0A               	movlw	10
  1693  002B4C  6E23               	movwf	itoa@base,c
  1694  002B4E  EC05  F01C         	call	_itoa	;wreg free
  1695                           
  1696                           ;src\LCD_44780.c: 228: if (number_of_digits >0 ) {
  1697  002B52  5029               	movf	LCD_write_integer@number_of_digits,w,c
  1698  002B54  B4D8               	btfsc	status,2,c
  1699  002B56  D07E               	goto	l3644
  1700                           
  1701                           ;src\LCD_44780.c: 230: convertedInt[number_of_digits] = '\0';
  1702  002B58  5029               	movf	LCD_write_integer@number_of_digits,w,c
  1703  002B5A  0D01               	mullw	1
  1704  002B5C  0E30               	movlw	low LCD_write_integer@convertedInt
  1705  002B5E  24F3               	addwf	prodl,w,c
  1706  002B60  6ED9               	movwf	fsr2l,c
  1707  002B62  0E00               	movlw	high LCD_write_integer@convertedInt
  1708  002B64  20F4               	addwfc	prodh,w,c
  1709  002B66  6EDA               	movwf	fsr2h,c
  1710  002B68  0E00               	movlw	0
  1711  002B6A  6EDF               	movwf	indf2,c
  1712                           
  1713                           ;src\LCD_44780.c: 234: while (!(convertedInt[number_of_digits-1] <= '9' && convertedInt[
      +                          number_of_digits-1] >= '0')){
  1714  002B6C  D04B               	goto	l3640
  1715  002B6E                     l3622:
  1716                           
  1717                           ;src\LCD_44780.c: 236: for (index = number_of_digits-1; index > 0; index--){
  1718  002B6E  0429               	decf	LCD_write_integer@number_of_digits,w,c
  1719  002B70  6E36               	movwf	LCD_write_integer@index,c
  1720  002B72                     l3624:
  1721  002B72  5036               	movf	LCD_write_integer@index,w,c
  1722  002B74  B4D8               	btfsc	status,2,c
  1723  002B76  D046               	goto	l3640
  1724                           
  1725                           ;src\LCD_44780.c: 237: convertedInt[index] = convertedInt[index-1];
  1726  002B78  0EFF               	movlw	255
  1727  002B7A  6E2B               	movwf	??_LCD_write_integer& (0+255),c
  1728  002B7C  0EFF               	movlw	255
  1729  002B7E  6E2C               	movwf	(??_LCD_write_integer+1)& (0+255),c
  1730  002B80  5036               	movf	LCD_write_integer@index,w,c
  1731  002B82  6E2D               	movwf	(??_LCD_write_integer+2)& (0+255),c
  1732  002B84  6A2E               	clrf	(??_LCD_write_integer+3)& (0+255),c
  1733  002B86  502B               	movf	??_LCD_write_integer,w,c
  1734  002B88  262D               	addwf	??_LCD_write_integer+2,f,c
  1735  002B8A  502C               	movf	??_LCD_write_integer+1,w,c
  1736  002B8C  222E               	addwfc	??_LCD_write_integer+3,f,c
  1737  002B8E  0E30               	movlw	low LCD_write_integer@convertedInt
  1738  002B90  242D               	addwf	??_LCD_write_integer+2,w,c
  1739  002B92  6ED9               	movwf	fsr2l,c
  1740  002B94  0E00               	movlw	high LCD_write_integer@convertedInt
  1741  002B96  202E               	addwfc	??_LCD_write_integer+3,w,c
  1742  002B98  6EDA               	movwf	fsr2h,c
  1743  002B9A  5036               	movf	LCD_write_integer@index,w,c
  1744  002B9C  0D01               	mullw	1
  1745  002B9E  0E30               	movlw	low LCD_write_integer@convertedInt
  1746  002BA0  24F3               	addwf	prodl,w,c
  1747  002BA2  6EE1               	movwf	fsr1l,c
  1748  002BA4  0E00               	movlw	high LCD_write_integer@convertedInt
  1749  002BA6  20F4               	addwfc	prodh,w,c
  1750  002BA8  6EE2               	movwf	fsr1h,c
  1751  002BAA  CFDF FFE7          	movff	indf2,indf1
  1752                           
  1753                           ;src\LCD_44780.c: 239: if (zero_cleaning == 0x01) {
  1754  002BAE  042A               	decf	LCD_write_integer@zero_cleaning,w,c
  1755  002BB0  A4D8               	btfss	status,2,c
  1756  002BB2  D013               	goto	l3634
  1757                           
  1758                           ;src\LCD_44780.c: 240: convertedInt[index-1] = ' ';
  1759  002BB4  0EFF               	movlw	255
  1760  002BB6  6E2B               	movwf	??_LCD_write_integer& (0+255),c
  1761  002BB8  0EFF               	movlw	255
  1762  002BBA  6E2C               	movwf	(??_LCD_write_integer+1)& (0+255),c
  1763  002BBC  5036               	movf	LCD_write_integer@index,w,c
  1764  002BBE  6E2D               	movwf	(??_LCD_write_integer+2)& (0+255),c
  1765  002BC0  6A2E               	clrf	(??_LCD_write_integer+3)& (0+255),c
  1766  002BC2  502B               	movf	??_LCD_write_integer,w,c
  1767  002BC4  262D               	addwf	??_LCD_write_integer+2,f,c
  1768  002BC6  502C               	movf	??_LCD_write_integer+1,w,c
  1769  002BC8  222E               	addwfc	??_LCD_write_integer+3,f,c
  1770  002BCA  0E30               	movlw	low LCD_write_integer@convertedInt
  1771  002BCC  242D               	addwf	??_LCD_write_integer+2,w,c
  1772  002BCE  6ED9               	movwf	fsr2l,c
  1773  002BD0  0E00               	movlw	high LCD_write_integer@convertedInt
  1774  002BD2  202E               	addwfc	??_LCD_write_integer+3,w,c
  1775  002BD4  6EDA               	movwf	fsr2h,c
  1776  002BD6  0E20               	movlw	32
  1777  002BD8  D012               	goto	L1
  1778  002BDA                     l3634:
  1779                           
  1780                           ;src\LCD_44780.c: 242: convertedInt[index-1] = '0';
  1781  002BDA  0EFF               	movlw	255
  1782  002BDC  6E2B               	movwf	??_LCD_write_integer& (0+255),c
  1783  002BDE  0EFF               	movlw	255
  1784  002BE0  6E2C               	movwf	(??_LCD_write_integer+1)& (0+255),c
  1785  002BE2  5036               	movf	LCD_write_integer@index,w,c
  1786  002BE4  6E2D               	movwf	(??_LCD_write_integer+2)& (0+255),c
  1787  002BE6  6A2E               	clrf	(??_LCD_write_integer+3)& (0+255),c
  1788  002BE8  502B               	movf	??_LCD_write_integer,w,c
  1789  002BEA  262D               	addwf	??_LCD_write_integer+2,f,c
  1790  002BEC  502C               	movf	??_LCD_write_integer+1,w,c
  1791  002BEE  222E               	addwfc	??_LCD_write_integer+3,f,c
  1792  002BF0  0E30               	movlw	low LCD_write_integer@convertedInt
  1793  002BF2  242D               	addwf	??_LCD_write_integer+2,w,c
  1794  002BF4  6ED9               	movwf	fsr2l,c
  1795  002BF6  0E00               	movlw	high LCD_write_integer@convertedInt
  1796  002BF8  202E               	addwfc	??_LCD_write_integer+3,w,c
  1797  002BFA  6EDA               	movwf	fsr2h,c
  1798  002BFC  0E30               	movlw	48
  1799  002BFE                     L1:
  1800  002BFE  6EDF               	movwf	indf2,c
  1801  002C00  0636               	decf	LCD_write_integer@index,f,c
  1802  002C02  D7B7               	goto	l3624
  1803  002C04                     l3640:
  1804  002C04  0EFF               	movlw	255
  1805  002C06  6E2B               	movwf	??_LCD_write_integer& (0+255),c
  1806  002C08  0EFF               	movlw	255
  1807  002C0A  6E2C               	movwf	(??_LCD_write_integer+1)& (0+255),c
  1808  002C0C  5029               	movf	LCD_write_integer@number_of_digits,w,c
  1809  002C0E  6E2D               	movwf	(??_LCD_write_integer+2)& (0+255),c
  1810  002C10  6A2E               	clrf	(??_LCD_write_integer+3)& (0+255),c
  1811  002C12  502B               	movf	??_LCD_write_integer,w,c
  1812  002C14  262D               	addwf	??_LCD_write_integer+2,f,c
  1813  002C16  502C               	movf	??_LCD_write_integer+1,w,c
  1814  002C18  222E               	addwfc	??_LCD_write_integer+3,f,c
  1815  002C1A  0E30               	movlw	low LCD_write_integer@convertedInt
  1816  002C1C  242D               	addwf	??_LCD_write_integer+2,w,c
  1817  002C1E  6ED9               	movwf	fsr2l,c
  1818  002C20  0E00               	movlw	high LCD_write_integer@convertedInt
  1819  002C22  202E               	addwfc	??_LCD_write_integer+3,w,c
  1820  002C24  6EDA               	movwf	fsr2h,c
  1821  002C26  0E3A               	movlw	58
  1822  002C28  60DF               	cpfslt	indf2,c
  1823  002C2A  D7A1               	goto	l3622
  1824  002C2C  0EFF               	movlw	255
  1825  002C2E  6E2B               	movwf	??_LCD_write_integer& (0+255),c
  1826  002C30  0EFF               	movlw	255
  1827  002C32  6E2C               	movwf	(??_LCD_write_integer+1)& (0+255),c
  1828  002C34  5029               	movf	LCD_write_integer@number_of_digits,w,c
  1829  002C36  6E2D               	movwf	(??_LCD_write_integer+2)& (0+255),c
  1830  002C38  6A2E               	clrf	(??_LCD_write_integer+3)& (0+255),c
  1831  002C3A  502B               	movf	??_LCD_write_integer,w,c
  1832  002C3C  262D               	addwf	??_LCD_write_integer+2,f,c
  1833  002C3E  502C               	movf	??_LCD_write_integer+1,w,c
  1834  002C40  222E               	addwfc	??_LCD_write_integer+3,f,c
  1835  002C42  0E30               	movlw	low LCD_write_integer@convertedInt
  1836  002C44  242D               	addwf	??_LCD_write_integer+2,w,c
  1837  002C46  6ED9               	movwf	fsr2l,c
  1838  002C48  0E00               	movlw	high LCD_write_integer@convertedInt
  1839  002C4A  202E               	addwfc	??_LCD_write_integer+3,w,c
  1840  002C4C  6EDA               	movwf	fsr2h,c
  1841  002C4E  0E2F               	movlw	47
  1842  002C50  64DF               	cpfsgt	indf2,c
  1843  002C52  D78D               	goto	l3622
  1844  002C54                     l3644:
  1845                           
  1846                           ;src\LCD_44780.c: 243: }
  1847                           ;src\LCD_44780.c: 245: }
  1848                           ;src\LCD_44780.c: 246: }
  1849                           ;src\LCD_44780.c: 247: }
  1850                           ;src\LCD_44780.c: 249: LCD_write_string (convertedInt);
  1851  002C54  0E30               	movlw	low LCD_write_integer@convertedInt
  1852  002C56  6E20               	movwf	LCD_write_string@buffer,c
  1853  002C58  0E00               	movlw	high LCD_write_integer@convertedInt
  1854  002C5A  6E21               	movwf	LCD_write_string@buffer+1,c
  1855  002C5C  ECDE  F01C         	call	_LCD_write_string	;wreg free
  1856  002C60  0012               	return		;funcret
  1857  002C62                     __end_of_LCD_write_integer:
  1858                           	opt stack 0
  1859                           tblptru	equ	0xFF8
  1860                           tblptrh	equ	0xFF7
  1861                           tblptrl	equ	0xFF6
  1862                           tablat	equ	0xFF5
  1863                           prodh	equ	0xFF4
  1864                           prodl	equ	0xFF3
  1865                           intcon	equ	0xFF2
  1866                           postinc0	equ	0xFEE
  1867                           wreg	equ	0xFE8
  1868                           indf1	equ	0xFE7
  1869                           plusw1	equ	0xFE3
  1870                           fsr1h	equ	0xFE2
  1871                           fsr1l	equ	0xFE1
  1872                           indf2	equ	0xFDF
  1873                           plusw2	equ	0xFDB
  1874                           fsr2h	equ	0xFDA
  1875                           fsr2l	equ	0xFD9
  1876                           status	equ	0xFD8
  1877                           
  1878 ;; *************** function _itoa *****************
  1879 ;; Defined at:
  1880 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\itoa.c"
  1881 ;; Parameters:    Size  Location     Type
  1882 ;;  buf             2   30[COMRAM] PTR unsigned char 
  1883 ;;		 -> LCD_write_integer@convertedInt(6), 
  1884 ;;  val             2   32[COMRAM] int 
  1885 ;;  base            2   34[COMRAM] int 
  1886 ;; Auto vars:     Size  Location     Type
  1887 ;;  cp              2   36[COMRAM] PTR unsigned char 
  1888 ;;		 -> LCD_write_integer@convertedInt(6), 
  1889 ;; Return value:  Size  Location     Type
  1890 ;;                  2   30[COMRAM] PTR unsigned char 
  1891 ;; Registers used:
  1892 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1893 ;; Tracked objects:
  1894 ;;		On entry : 0/0
  1895 ;;		On exit  : 0/0
  1896 ;;		Unchanged: 0/0
  1897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1898 ;;      Params:         6       0       0       0       0       0       0       0       0
  1899 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1900 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1901 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1902 ;;Total ram usage:        8 bytes
  1903 ;; Hardware stack levels used:    1
  1904 ;; Hardware stack levels required when called:    3
  1905 ;; This function calls:
  1906 ;;		_utoa
  1907 ;; This function is called by:
  1908 ;;		_LCD_write_integer
  1909 ;; This function uses a non-reentrant model
  1910 ;;
  1911                           
  1912                           	psect	text4
  1913  00380A                     __ptext4:
  1914                           	opt stack 0
  1915  00380A                     _itoa:
  1916                           	opt stack 25
  1917                           
  1918                           ;incstack = 0
  1919  00380A  C01F  F025         	movff	itoa@buf,itoa@cp
  1920  00380E  C020  F026         	movff	itoa@buf+1,itoa@cp+1
  1921  003812  AE22               	btfss	itoa@val+1,7,c
  1922  003814  D00C               	goto	l3102
  1923  003816  C01F  FFD9         	movff	itoa@buf,fsr2l
  1924  00381A  C020  FFDA         	movff	itoa@buf+1,fsr2h
  1925  00381E  0E2D               	movlw	45
  1926  003820  6EDF               	movwf	indf2,c
  1927  003822  4A1F               	infsnz	itoa@buf,f,c
  1928  003824  2A20               	incf	itoa@buf+1,f,c
  1929  003826  6C21               	negf	itoa@val,c
  1930  003828  1E22               	comf	itoa@val+1,f,c
  1931  00382A  B0D8               	btfsc	status,0,c
  1932  00382C  2A22               	incf	itoa@val+1,f,c
  1933  00382E                     l3102:
  1934  00382E  C01F  F016         	movff	itoa@buf,utoa@buf
  1935  003832  C020  F017         	movff	itoa@buf+1,utoa@buf+1
  1936  003836  C021  F018         	movff	itoa@val,utoa@val
  1937  00383A  C022  F019         	movff	itoa@val+1,utoa@val+1
  1938  00383E  C023  F01A         	movff	itoa@base,utoa@base
  1939  003842  C024  F01B         	movff	itoa@base+1,utoa@base+1
  1940  003846  ECB8  F019         	call	_utoa	;wreg free
  1941  00384A  0012               	return	
  1942  00384C                     __end_of_itoa:
  1943                           	opt stack 0
  1944                           tblptru	equ	0xFF8
  1945                           tblptrh	equ	0xFF7
  1946                           tblptrl	equ	0xFF6
  1947                           tablat	equ	0xFF5
  1948                           prodh	equ	0xFF4
  1949                           prodl	equ	0xFF3
  1950                           intcon	equ	0xFF2
  1951                           postinc0	equ	0xFEE
  1952                           wreg	equ	0xFE8
  1953                           indf1	equ	0xFE7
  1954                           plusw1	equ	0xFE3
  1955                           fsr1h	equ	0xFE2
  1956                           fsr1l	equ	0xFE1
  1957                           indf2	equ	0xFDF
  1958                           plusw2	equ	0xFDB
  1959                           fsr2h	equ	0xFDA
  1960                           fsr2l	equ	0xFD9
  1961                           status	equ	0xFD8
  1962                           
  1963 ;; *************** function _utoa *****************
  1964 ;; Defined at:
  1965 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\itoa.c"
  1966 ;; Parameters:    Size  Location     Type
  1967 ;;  buf             2   21[COMRAM] PTR unsigned char 
  1968 ;;		 -> LCD_write_integer@convertedInt(6), 
  1969 ;;  val             2   23[COMRAM] unsigned int 
  1970 ;;  base            2   25[COMRAM] int 
  1971 ;; Auto vars:     Size  Location     Type
  1972 ;;  v               2   27[COMRAM] unsigned int 
  1973 ;;  c               1   29[COMRAM] unsigned char 
  1974 ;; Return value:  Size  Location     Type
  1975 ;;                  2   21[COMRAM] PTR unsigned char 
  1976 ;; Registers used:
  1977 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1978 ;; Tracked objects:
  1979 ;;		On entry : 0/0
  1980 ;;		On exit  : 0/0
  1981 ;;		Unchanged: 0/0
  1982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1983 ;;      Params:         6       0       0       0       0       0       0       0       0
  1984 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1985 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1986 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1987 ;;Total ram usage:        9 bytes
  1988 ;; Hardware stack levels used:    1
  1989 ;; Hardware stack levels required when called:    2
  1990 ;; This function calls:
  1991 ;;		___lwdiv
  1992 ;;		___lwmod
  1993 ;; This function is called by:
  1994 ;;		_itoa
  1995 ;; This function uses a non-reentrant model
  1996 ;;
  1997                           
  1998                           	psect	text5
  1999  003370                     __ptext5:
  2000                           	opt stack 0
  2001  003370                     _utoa:
  2002                           	opt stack 25
  2003                           
  2004                           ;incstack = 0
  2005  003370  C018  F01C         	movff	utoa@val,utoa@v
  2006  003374  C019  F01D         	movff	utoa@val+1,utoa@v+1
  2007  003378                     l3058:
  2008  003378  C01C  F00F         	movff	utoa@v,___lwdiv@dividend
  2009  00337C  C01D  F010         	movff	utoa@v+1,___lwdiv@dividend+1
  2010  003380  C01A  F011         	movff	utoa@base,___lwdiv@divisor
  2011  003384  C01B  F012         	movff	utoa@base+1,___lwdiv@divisor+1
  2012  003388  ECB8  F01B         	call	___lwdiv	;wreg free
  2013  00338C  C00F  F01C         	movff	?___lwdiv,utoa@v
  2014  003390  C010  F01D         	movff	?___lwdiv+1,utoa@v+1
  2015  003394  4A16               	infsnz	utoa@buf,f,c
  2016  003396  2A17               	incf	utoa@buf+1,f,c
  2017  003398  501C               	movf	utoa@v,w,c
  2018  00339A  101D               	iorwf	utoa@v+1,w,c
  2019  00339C  A4D8               	btfss	status,2,c
  2020  00339E  D7EC               	goto	l3058
  2021  0033A0  C016  FFD9         	movff	utoa@buf,fsr2l
  2022  0033A4  C017  FFDA         	movff	utoa@buf+1,fsr2h
  2023  0033A8  0E00               	movlw	0
  2024  0033AA  6EDF               	movwf	indf2,c
  2025  0033AC  0616               	decf	utoa@buf,f,c
  2026  0033AE  A0D8               	btfss	status,0,c
  2027  0033B0  0617               	decf	utoa@buf+1,f,c
  2028  0033B2                     l3068:
  2029  0033B2  C018  F00F         	movff	utoa@val,___lwmod@dividend
  2030  0033B6  C019  F010         	movff	utoa@val+1,___lwmod@dividend+1
  2031  0033BA  C01A  F011         	movff	utoa@base,___lwmod@divisor
  2032  0033BE  C01B  F012         	movff	utoa@base+1,___lwmod@divisor+1
  2033  0033C2  EC26  F01C         	call	___lwmod	;wreg free
  2034  0033C6  500F               	movf	?___lwmod,w,c
  2035  0033C8  6E1E               	movwf	utoa@c,c
  2036  0033CA  C018  F00F         	movff	utoa@val,___lwdiv@dividend
  2037  0033CE  C019  F010         	movff	utoa@val+1,___lwdiv@dividend+1
  2038  0033D2  C01A  F011         	movff	utoa@base,___lwdiv@divisor
  2039  0033D6  C01B  F012         	movff	utoa@base+1,___lwdiv@divisor+1
  2040  0033DA  ECB8  F01B         	call	___lwdiv	;wreg free
  2041  0033DE  C00F  F018         	movff	?___lwdiv,utoa@val
  2042  0033E2  C010  F019         	movff	?___lwdiv+1,utoa@val+1
  2043  0033E6  0E09               	movlw	9
  2044  0033E8  641E               	cpfsgt	utoa@c,c
  2045  0033EA  D002               	goto	l682
  2046  0033EC  0E07               	movlw	7
  2047  0033EE  261E               	addwf	utoa@c,f,c
  2048  0033F0                     l682:
  2049  0033F0  0E30               	movlw	48
  2050  0033F2  261E               	addwf	utoa@c,f,c
  2051  0033F4  C016  FFD9         	movff	utoa@buf,fsr2l
  2052  0033F8  C017  FFDA         	movff	utoa@buf+1,fsr2h
  2053  0033FC  C01E  FFDF         	movff	utoa@c,indf2
  2054  003400  0616               	decf	utoa@buf,f,c
  2055  003402  A0D8               	btfss	status,0,c
  2056  003404  0617               	decf	utoa@buf+1,f,c
  2057  003406  5018               	movf	utoa@val,w,c
  2058  003408  1019               	iorwf	utoa@val+1,w,c
  2059  00340A  A4D8               	btfss	status,2,c
  2060  00340C  D7D2               	goto	l3068
  2061                           
  2062                           ;	Return value of _utoa is never used
  2063  00340E  4A16               	infsnz	utoa@buf,f,c
  2064  003410  2A17               	incf	utoa@buf+1,f,c
  2065  003412  0012               	return	
  2066  003414                     __end_of_utoa:
  2067                           	opt stack 0
  2068                           tblptru	equ	0xFF8
  2069                           tblptrh	equ	0xFF7
  2070                           tblptrl	equ	0xFF6
  2071                           tablat	equ	0xFF5
  2072                           prodh	equ	0xFF4
  2073                           prodl	equ	0xFF3
  2074                           intcon	equ	0xFF2
  2075                           postinc0	equ	0xFEE
  2076                           wreg	equ	0xFE8
  2077                           indf1	equ	0xFE7
  2078                           plusw1	equ	0xFE3
  2079                           fsr1h	equ	0xFE2
  2080                           fsr1l	equ	0xFE1
  2081                           indf2	equ	0xFDF
  2082                           plusw2	equ	0xFDB
  2083                           fsr2h	equ	0xFDA
  2084                           fsr2l	equ	0xFD9
  2085                           status	equ	0xFD8
  2086                           
  2087 ;; *************** function ___lwmod *****************
  2088 ;; Defined at:
  2089 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
  2090 ;; Parameters:    Size  Location     Type
  2091 ;;  dividend        2   14[COMRAM] unsigned int 
  2092 ;;  divisor         2   16[COMRAM] unsigned int 
  2093 ;; Auto vars:     Size  Location     Type
  2094 ;;  counter         1   18[COMRAM] unsigned char 
  2095 ;; Return value:  Size  Location     Type
  2096 ;;                  2   14[COMRAM] unsigned int 
  2097 ;; Registers used:
  2098 ;;		wreg, status,2, status,0
  2099 ;; Tracked objects:
  2100 ;;		On entry : 0/0
  2101 ;;		On exit  : 0/0
  2102 ;;		Unchanged: 0/0
  2103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2104 ;;      Params:         4       0       0       0       0       0       0       0       0
  2105 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2106 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2107 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2108 ;;Total ram usage:        5 bytes
  2109 ;; Hardware stack levels used:    1
  2110 ;; Hardware stack levels required when called:    1
  2111 ;; This function calls:
  2112 ;;		Nothing
  2113 ;; This function is called by:
  2114 ;;		_utoa
  2115 ;; This function uses a non-reentrant model
  2116 ;;
  2117                           
  2118                           	psect	text6
  2119  00384C                     __ptext6:
  2120                           	opt stack 0
  2121  00384C                     ___lwmod:
  2122                           	opt stack 25
  2123                           
  2124                           ;incstack = 0
  2125  00384C  5011               	movf	___lwmod@divisor,w,c
  2126  00384E  1012               	iorwf	___lwmod@divisor+1,w,c
  2127  003850  B4D8               	btfsc	status,2,c
  2128  003852  D018               	goto	l771
  2129  003854  0E01               	movlw	1
  2130  003856  6E13               	movwf	___lwmod@counter,c
  2131  003858  D004               	goto	l2616
  2132  00385A                     l2614:
  2133  00385A  90D8               	bcf	status,0,c
  2134  00385C  3611               	rlcf	___lwmod@divisor,f,c
  2135  00385E  3612               	rlcf	___lwmod@divisor+1,f,c
  2136  003860  2A13               	incf	___lwmod@counter,f,c
  2137  003862                     l2616:
  2138  003862  AE12               	btfss	___lwmod@divisor+1,7,c
  2139  003864  D7FA               	goto	l2614
  2140  003866                     l2618:
  2141  003866  5011               	movf	___lwmod@divisor,w,c
  2142  003868  5C0F               	subwf	___lwmod@dividend,w,c
  2143  00386A  5012               	movf	___lwmod@divisor+1,w,c
  2144  00386C  5810               	subwfb	___lwmod@dividend+1,w,c
  2145  00386E  A0D8               	btfss	status,0,c
  2146  003870  D004               	goto	l2622
  2147  003872  5011               	movf	___lwmod@divisor,w,c
  2148  003874  5E0F               	subwf	___lwmod@dividend,f,c
  2149  003876  5012               	movf	___lwmod@divisor+1,w,c
  2150  003878  5A10               	subwfb	___lwmod@dividend+1,f,c
  2151  00387A                     l2622:
  2152  00387A  90D8               	bcf	status,0,c
  2153  00387C  3212               	rrcf	___lwmod@divisor+1,f,c
  2154  00387E  3211               	rrcf	___lwmod@divisor,f,c
  2155  003880  2E13               	decfsz	___lwmod@counter,f,c
  2156  003882  D7F1               	goto	l2618
  2157  003884                     l771:
  2158  003884  C00F  F00F         	movff	___lwmod@dividend,?___lwmod
  2159  003888  C010  F010         	movff	___lwmod@dividend+1,?___lwmod+1
  2160  00388C  0012               	return		;funcret
  2161  00388E                     __end_of___lwmod:
  2162                           	opt stack 0
  2163                           tblptru	equ	0xFF8
  2164                           tblptrh	equ	0xFF7
  2165                           tblptrl	equ	0xFF6
  2166                           tablat	equ	0xFF5
  2167                           prodh	equ	0xFF4
  2168                           prodl	equ	0xFF3
  2169                           intcon	equ	0xFF2
  2170                           postinc0	equ	0xFEE
  2171                           wreg	equ	0xFE8
  2172                           indf1	equ	0xFE7
  2173                           plusw1	equ	0xFE3
  2174                           fsr1h	equ	0xFE2
  2175                           fsr1l	equ	0xFE1
  2176                           indf2	equ	0xFDF
  2177                           plusw2	equ	0xFDB
  2178                           fsr2h	equ	0xFDA
  2179                           fsr2l	equ	0xFD9
  2180                           status	equ	0xFD8
  2181                           
  2182 ;; *************** function ___lwdiv *****************
  2183 ;; Defined at:
  2184 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  2185 ;; Parameters:    Size  Location     Type
  2186 ;;  dividend        2   14[COMRAM] unsigned int 
  2187 ;;  divisor         2   16[COMRAM] unsigned int 
  2188 ;; Auto vars:     Size  Location     Type
  2189 ;;  quotient        2   18[COMRAM] unsigned int 
  2190 ;;  counter         1   20[COMRAM] unsigned char 
  2191 ;; Return value:  Size  Location     Type
  2192 ;;                  2   14[COMRAM] unsigned int 
  2193 ;; Registers used:
  2194 ;;		wreg, status,2, status,0
  2195 ;; Tracked objects:
  2196 ;;		On entry : 0/0
  2197 ;;		On exit  : 0/0
  2198 ;;		Unchanged: 0/0
  2199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2200 ;;      Params:         4       0       0       0       0       0       0       0       0
  2201 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2202 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2203 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2204 ;;Total ram usage:        7 bytes
  2205 ;; Hardware stack levels used:    1
  2206 ;; Hardware stack levels required when called:    1
  2207 ;; This function calls:
  2208 ;;		Nothing
  2209 ;; This function is called by:
  2210 ;;		_utoa
  2211 ;; This function uses a non-reentrant model
  2212 ;;
  2213                           
  2214                           	psect	text7
  2215  003770                     __ptext7:
  2216                           	opt stack 0
  2217  003770                     ___lwdiv:
  2218                           	opt stack 25
  2219                           
  2220                           ;incstack = 0
  2221  003770  0E00               	movlw	0
  2222  003772  6E14               	movwf	___lwdiv@quotient+1,c
  2223  003774  0E00               	movlw	0
  2224  003776  6E13               	movwf	___lwdiv@quotient,c
  2225  003778  5011               	movf	___lwdiv@divisor,w,c
  2226  00377A  1012               	iorwf	___lwdiv@divisor+1,w,c
  2227  00377C  B4D8               	btfsc	status,2,c
  2228  00377E  D01C               	goto	l761
  2229  003780  0E01               	movlw	1
  2230  003782  6E15               	movwf	___lwdiv@counter,c
  2231  003784  D004               	goto	l2596
  2232  003786                     l2594:
  2233  003786  90D8               	bcf	status,0,c
  2234  003788  3611               	rlcf	___lwdiv@divisor,f,c
  2235  00378A  3612               	rlcf	___lwdiv@divisor+1,f,c
  2236  00378C  2A15               	incf	___lwdiv@counter,f,c
  2237  00378E                     l2596:
  2238  00378E  AE12               	btfss	___lwdiv@divisor+1,7,c
  2239  003790  D7FA               	goto	l2594
  2240  003792                     l2598:
  2241  003792  90D8               	bcf	status,0,c
  2242  003794  3613               	rlcf	___lwdiv@quotient,f,c
  2243  003796  3614               	rlcf	___lwdiv@quotient+1,f,c
  2244  003798  5011               	movf	___lwdiv@divisor,w,c
  2245  00379A  5C0F               	subwf	___lwdiv@dividend,w,c
  2246  00379C  5012               	movf	___lwdiv@divisor+1,w,c
  2247  00379E  5810               	subwfb	___lwdiv@dividend+1,w,c
  2248  0037A0  A0D8               	btfss	status,0,c
  2249  0037A2  D005               	goto	l2606
  2250  0037A4  5011               	movf	___lwdiv@divisor,w,c
  2251  0037A6  5E0F               	subwf	___lwdiv@dividend,f,c
  2252  0037A8  5012               	movf	___lwdiv@divisor+1,w,c
  2253  0037AA  5A10               	subwfb	___lwdiv@dividend+1,f,c
  2254  0037AC  8013               	bsf	___lwdiv@quotient,0,c
  2255  0037AE                     l2606:
  2256  0037AE  90D8               	bcf	status,0,c
  2257  0037B0  3212               	rrcf	___lwdiv@divisor+1,f,c
  2258  0037B2  3211               	rrcf	___lwdiv@divisor,f,c
  2259  0037B4  2E15               	decfsz	___lwdiv@counter,f,c
  2260  0037B6  D7ED               	goto	l2598
  2261  0037B8                     l761:
  2262  0037B8  C013  F00F         	movff	___lwdiv@quotient,?___lwdiv
  2263  0037BC  C014  F010         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2264  0037C0  0012               	return		;funcret
  2265  0037C2                     __end_of___lwdiv:
  2266                           	opt stack 0
  2267                           tblptru	equ	0xFF8
  2268                           tblptrh	equ	0xFF7
  2269                           tblptrl	equ	0xFF6
  2270                           tablat	equ	0xFF5
  2271                           prodh	equ	0xFF4
  2272                           prodl	equ	0xFF3
  2273                           intcon	equ	0xFF2
  2274                           postinc0	equ	0xFEE
  2275                           wreg	equ	0xFE8
  2276                           indf1	equ	0xFE7
  2277                           plusw1	equ	0xFE3
  2278                           fsr1h	equ	0xFE2
  2279                           fsr1l	equ	0xFE1
  2280                           indf2	equ	0xFDF
  2281                           plusw2	equ	0xFDB
  2282                           fsr2h	equ	0xFDA
  2283                           fsr2l	equ	0xFD9
  2284                           status	equ	0xFD8
  2285                           
  2286 ;; *************** function _ricarica *****************
  2287 ;; Defined at:
  2288 ;;		line 130 in file "tester.c"
  2289 ;; Parameters:    Size  Location     Type
  2290 ;;		None
  2291 ;; Auto vars:     Size  Location     Type
  2292 ;;		None
  2293 ;; Return value:  Size  Location     Type
  2294 ;;		None               void
  2295 ;; Registers used:
  2296 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2297 ;; Tracked objects:
  2298 ;;		On entry : 0/0
  2299 ;;		On exit  : 0/0
  2300 ;;		Unchanged: 0/0
  2301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2302 ;;      Params:         0       0       0       0       0       0       0       0       0
  2303 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2304 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2305 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2306 ;;Total ram usage:        0 bytes
  2307 ;; Hardware stack levels used:    1
  2308 ;; Hardware stack levels required when called:    7
  2309 ;; This function calls:
  2310 ;;		_LCD_clear
  2311 ;;		_LCD_goto_line
  2312 ;;		_LCD_write_message
  2313 ;;		_LCD_write_string
  2314 ;;		___flge
  2315 ;;		_delay_ms
  2316 ;;		_read_adc
  2317 ;;		_sprintf
  2318 ;; This function is called by:
  2319 ;;		_main
  2320 ;; This function uses a non-reentrant model
  2321 ;;
  2322                           
  2323                           	psect	text8
  2324  00285E                     __ptext8:
  2325                           	opt stack 0
  2326  00285E                     _ricarica:
  2327                           	opt stack 23
  2328                           
  2329                           ;tester.c: 131: read_adc();
  2330                           
  2331                           ;incstack = 0
  2332  00285E  EC0F  F013         	call	_read_adc	;wreg free
  2333                           
  2334                           ;tester.c: 132: while ((current < 1) || (voltage < 13.5)) {
  2335  002862  D05B               	goto	l4786
  2336  002864                     l198:
  2337                           
  2338                           ;tester.c: 133: PORTCbits.RC6 = 1;
  2339  002864  8C82               	bsf	3970,6,c	;volatile
  2340                           
  2341                           ;tester.c: 134: LCD_goto_line(1);
  2342  002866  0E01               	movlw	1
  2343  002868  EC5C  F019         	call	_LCD_goto_line
  2344                           
  2345                           ;tester.c: 135: LCD_write_message("Ciclo ricarica..");
  2346  00286C  0E91               	movlw	low STR_10
  2347  00286E  6E20               	movwf	LCD_write_message@buffer,c
  2348  002870  0E08               	movlw	high STR_10
  2349  002872  6E21               	movwf	LCD_write_message@buffer+1,c
  2350  002874  EC8F  F01C         	call	_LCD_write_message	;wreg free
  2351                           
  2352                           ;tester.c: 136: LCD_goto_line(2);
  2353  002878  0E02               	movlw	2
  2354  00287A  EC5C  F019         	call	_LCD_goto_line
  2355                           
  2356                           ;tester.c: 137: sprintf(str, "V:%.3f", voltage);
  2357  00287E  0EC7               	movlw	low _str
  2358  002880  0100               	movlb	0	; () banked
  2359  002882  6F7C               	movwf	sprintf@sp& (0+255),b
  2360  002884  0E00               	movlw	high _str
  2361  002886  0100               	movlb	0	; () banked
  2362  002888  6F7D               	movwf	(sprintf@sp+1)& (0+255),b
  2363  00288A  0EEA               	movlw	low STR_4
  2364  00288C  0100               	movlb	0	; () banked
  2365  00288E  6F7E               	movwf	sprintf@f& (0+255),b
  2366  002890  0E08               	movlw	high STR_4
  2367  002892  0100               	movlb	0	; () banked
  2368  002894  6F7F               	movwf	(sprintf@f+1)& (0+255),b
  2369  002896  C0BD  F080         	movff	_voltage,?_sprintf+4
  2370  00289A  C0BE  F081         	movff	_voltage+1,?_sprintf+5
  2371  00289E  C0BF  F082         	movff	_voltage+2,?_sprintf+6
  2372  0028A2  C0C0  F083         	movff	_voltage+3,?_sprintf+7
  2373  0028A6  EC7D  F004         	call	_sprintf	;wreg free
  2374                           
  2375                           ;tester.c: 138: str[7] = '\0';
  2376  0028AA  0E00               	movlw	0
  2377  0028AC  0100               	movlb	0	; () banked
  2378  0028AE  6FCE               	movwf	(_str+7)& (0+255),b
  2379                           
  2380                           ; BSR set to: 0
  2381                           ;tester.c: 139: LCD_write_string(str);
  2382  0028B0  0EC7               	movlw	low _str
  2383  0028B2  6E20               	movwf	LCD_write_string@buffer,c
  2384  0028B4  0E00               	movlw	high _str
  2385  0028B6  6E21               	movwf	LCD_write_string@buffer+1,c
  2386  0028B8  ECDE  F01C         	call	_LCD_write_string	;wreg free
  2387                           
  2388                           ;tester.c: 140: sprintf(str, " I:%.3f", current);
  2389  0028BC  0EC7               	movlw	low _str
  2390  0028BE  0100               	movlb	0	; () banked
  2391  0028C0  6F7C               	movwf	sprintf@sp& (0+255),b
  2392  0028C2  0E00               	movlw	high _str
  2393  0028C4  0100               	movlb	0	; () banked
  2394  0028C6  6F7D               	movwf	(sprintf@sp+1)& (0+255),b
  2395  0028C8  0EDB               	movlw	low STR_5
  2396  0028CA  0100               	movlb	0	; () banked
  2397  0028CC  6F7E               	movwf	sprintf@f& (0+255),b
  2398  0028CE  0E08               	movlw	high STR_5
  2399  0028D0  0100               	movlb	0	; () banked
  2400  0028D2  6F7F               	movwf	(sprintf@f+1)& (0+255),b
  2401  0028D4  C0AD  F080         	movff	_current,?_sprintf+4
  2402  0028D8  C0AE  F081         	movff	_current+1,?_sprintf+5
  2403  0028DC  C0AF  F082         	movff	_current+2,?_sprintf+6
  2404  0028E0  C0B0  F083         	movff	_current+3,?_sprintf+7
  2405  0028E4  EC7D  F004         	call	_sprintf	;wreg free
  2406                           
  2407                           ;tester.c: 141: str[7] = '\0';
  2408  0028E8  0E00               	movlw	0
  2409  0028EA  0100               	movlb	0	; () banked
  2410  0028EC  6FCE               	movwf	(_str+7)& (0+255),b
  2411                           
  2412                           ; BSR set to: 0
  2413                           ;tester.c: 142: LCD_write_string(str);
  2414  0028EE  0EC7               	movlw	low _str
  2415  0028F0  6E20               	movwf	LCD_write_string@buffer,c
  2416  0028F2  0E00               	movlw	high _str
  2417  0028F4  6E21               	movwf	LCD_write_string@buffer+1,c
  2418  0028F6  ECDE  F01C         	call	_LCD_write_string	;wreg free
  2419                           
  2420                           ;tester.c: 143: read_adc();
  2421  0028FA  EC0F  F013         	call	_read_adc	;wreg free
  2422                           
  2423                           ;tester.c: 144: delay_ms(1000);
  2424  0028FE  0E03               	movlw	3
  2425  002900  6E16               	movwf	delay_ms@value_ms+1,c
  2426  002902  0EE8               	movlw	232
  2427  002904  6E15               	movwf	delay_ms@value_ms,c
  2428  002906  EC47  F01C         	call	_delay_ms	;wreg free
  2429                           
  2430                           ;tester.c: 145: LCD_clear();
  2431  00290A  ECB8  F01C         	call	_LCD_clear	;wreg free
  2432                           
  2433                           ;tester.c: 146: delay_ms(10);
  2434  00290E  0E00               	movlw	0
  2435  002910  6E16               	movwf	delay_ms@value_ms+1,c
  2436  002912  0E0A               	movlw	10
  2437  002914  6E15               	movwf	delay_ms@value_ms,c
  2438  002916  EC47  F01C         	call	_delay_ms	;wreg free
  2439  00291A                     l4786:
  2440  00291A  C0AD  F00F         	movff	_current,___flge@ff1
  2441  00291E  C0AE  F010         	movff	_current+1,___flge@ff1+1
  2442  002922  C0AF  F011         	movff	_current+2,___flge@ff1+2
  2443  002926  C0B0  F012         	movff	_current+3,___flge@ff1+3
  2444  00292A  0E00               	movlw	0
  2445  00292C  6E13               	movwf	___flge@ff2,c
  2446  00292E  0E00               	movlw	0
  2447  002930  6E14               	movwf	___flge@ff2+1,c
  2448  002932  0E80               	movlw	128
  2449  002934  6E15               	movwf	___flge@ff2+2,c
  2450  002936  0E3F               	movlw	63
  2451  002938  6E16               	movwf	___flge@ff2+3,c
  2452  00293A  EC5E  F017         	call	___flge	;wreg free
  2453  00293E  A0D8               	btfss	status,0,c
  2454  002940  D791               	goto	l198
  2455  002942  C0BD  F00F         	movff	_voltage,___flge@ff1
  2456  002946  C0BE  F010         	movff	_voltage+1,___flge@ff1+1
  2457  00294A  C0BF  F011         	movff	_voltage+2,___flge@ff1+2
  2458  00294E  C0C0  F012         	movff	_voltage+3,___flge@ff1+3
  2459  002952  0E00               	movlw	0
  2460  002954  6E13               	movwf	___flge@ff2,c
  2461  002956  0E00               	movlw	0
  2462  002958  6E14               	movwf	___flge@ff2+1,c
  2463  00295A  0E58               	movlw	88
  2464  00295C  6E15               	movwf	___flge@ff2+2,c
  2465  00295E  0E41               	movlw	65
  2466  002960  6E16               	movwf	___flge@ff2+3,c
  2467  002962  EC5E  F017         	call	___flge	;wreg free
  2468  002966  A0D8               	btfss	status,0,c
  2469  002968  D77D               	goto	l198
  2470                           
  2471                           ;tester.c: 147: }
  2472                           ;tester.c: 148: if ((current > -1)&&(voltage > 14.5)) {
  2473  00296A  0E00               	movlw	0
  2474  00296C  6E0F               	movwf	___flge@ff1,c
  2475  00296E  0E00               	movlw	0
  2476  002970  6E10               	movwf	___flge@ff1+1,c
  2477  002972  0E80               	movlw	128
  2478  002974  6E11               	movwf	___flge@ff1+2,c
  2479  002976  0EBF               	movlw	191
  2480  002978  6E12               	movwf	___flge@ff1+3,c
  2481  00297A  C0AD  F013         	movff	_current,___flge@ff2
  2482  00297E  C0AE  F014         	movff	_current+1,___flge@ff2+1
  2483  002982  C0AF  F015         	movff	_current+2,___flge@ff2+2
  2484  002986  C0B0  F016         	movff	_current+3,___flge@ff2+3
  2485  00298A  EC5E  F017         	call	___flge	;wreg free
  2486  00298E  B0D8               	btfsc	status,0,c
  2487  002990  0012               	return	
  2488  002992  0E00               	movlw	0
  2489  002994  6E0F               	movwf	___flge@ff1,c
  2490  002996  0E00               	movlw	0
  2491  002998  6E10               	movwf	___flge@ff1+1,c
  2492  00299A  0E68               	movlw	104
  2493  00299C  6E11               	movwf	___flge@ff1+2,c
  2494  00299E  0E41               	movlw	65
  2495  0029A0  6E12               	movwf	___flge@ff1+3,c
  2496  0029A2  C0BD  F013         	movff	_voltage,___flge@ff2
  2497  0029A6  C0BE  F014         	movff	_voltage+1,___flge@ff2+1
  2498  0029AA  C0BF  F015         	movff	_voltage+2,___flge@ff2+2
  2499  0029AE  C0C0  F016         	movff	_voltage+3,___flge@ff2+3
  2500  0029B2  EC5E  F017         	call	___flge	;wreg free
  2501  0029B6  B0D8               	btfsc	status,0,c
  2502  0029B8  0012               	return	
  2503                           
  2504                           ;tester.c: 149: LCD_write_message("Carica terminata");
  2505  0029BA  0EB3               	movlw	low STR_13
  2506  0029BC  6E20               	movwf	LCD_write_message@buffer,c
  2507  0029BE  0E08               	movlw	high STR_13
  2508  0029C0  6E21               	movwf	LCD_write_message@buffer+1,c
  2509  0029C2  EC8F  F01C         	call	_LCD_write_message	;wreg free
  2510                           
  2511                           ;tester.c: 150: delay_ms(5000);
  2512  0029C6  0E13               	movlw	19
  2513  0029C8  6E16               	movwf	delay_ms@value_ms+1,c
  2514  0029CA  0E88               	movlw	136
  2515  0029CC  6E15               	movwf	delay_ms@value_ms,c
  2516  0029CE  EC47  F01C         	call	_delay_ms	;wreg free
  2517  0029D2  0012               	return	
  2518  0029D4                     __end_of_ricarica:
  2519                           	opt stack 0
  2520                           tblptru	equ	0xFF8
  2521                           tblptrh	equ	0xFF7
  2522                           tblptrl	equ	0xFF6
  2523                           tablat	equ	0xFF5
  2524                           prodh	equ	0xFF4
  2525                           prodl	equ	0xFF3
  2526                           intcon	equ	0xFF2
  2527                           postinc0	equ	0xFEE
  2528                           wreg	equ	0xFE8
  2529                           indf1	equ	0xFE7
  2530                           plusw1	equ	0xFE3
  2531                           fsr1h	equ	0xFE2
  2532                           fsr1l	equ	0xFE1
  2533                           indf2	equ	0xFDF
  2534                           plusw2	equ	0xFDB
  2535                           fsr2h	equ	0xFDA
  2536                           fsr2l	equ	0xFD9
  2537                           status	equ	0xFD8
  2538                           
  2539 ;; *************** function _sprintf *****************
  2540 ;; Defined at:
  2541 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  2542 ;; Parameters:    Size  Location     Type
  2543 ;;  sp              2   28[BANK0 ] PTR unsigned char 
  2544 ;;		 -> str(8), 
  2545 ;;  f               2   30[BANK0 ] PTR const unsigned char 
  2546 ;;		 -> STR_12(8), STR_11(7), STR_8(5), STR_5(8), 
  2547 ;;		 -> STR_4(7), 
  2548 ;; Auto vars:     Size  Location     Type
  2549 ;;  fval            4   58[BANK0 ] PTR const unsigned char 
  2550 ;;  tmpval          4   52[BANK0 ] struct .
  2551 ;;  val             4   46[BANK0 ] unsigned long 
  2552 ;;  cp              3    0        PTR const unsigned char 
  2553 ;;  prec            2   56[BANK0 ] int 
  2554 ;;  exp             2   50[BANK0 ] int 
  2555 ;;  flag            2   44[BANK0 ] unsigned short 
  2556 ;;  ap              2   42[BANK0 ] PTR void [1]
  2557 ;;		 -> ?_sprintf(2), 
  2558 ;;  len             2    0        unsigned int 
  2559 ;;  width           2    0        int 
  2560 ;;  c               1   62[BANK0 ] char 
  2561 ;;  d               1    0        unsigned char 
  2562 ;; Return value:  Size  Location     Type
  2563 ;;                  2   28[BANK0 ] int 
  2564 ;; Registers used:
  2565 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2566 ;; Tracked objects:
  2567 ;;		On entry : 0/0
  2568 ;;		On exit  : 0/0
  2569 ;;		Unchanged: 0/0
  2570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2571 ;;      Params:         0       8       0       0       0       0       0       0       0
  2572 ;;      Locals:         0      25       0       0       0       0       0       0       0
  2573 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2574 ;;      Totals:         0      35       0       0       0       0       0       0       0
  2575 ;;Total ram usage:       35 bytes
  2576 ;; Hardware stack levels used:    1
  2577 ;; Hardware stack levels required when called:    3
  2578 ;; This function calls:
  2579 ;;		___awdiv
  2580 ;;		___fladd
  2581 ;;		___flge
  2582 ;;		___flmul
  2583 ;;		___flneg
  2584 ;;		___flsub
  2585 ;;		___fltol
  2586 ;;		___lldiv
  2587 ;;		___llmod
  2588 ;;		___wmul
  2589 ;;		___xxtofl
  2590 ;;		__div_to_l_
  2591 ;;		__tdiv_to_l_
  2592 ;;		_fround
  2593 ;;		_isdigit
  2594 ;;		_scale
  2595 ;; This function is called by:
  2596 ;;		_scarica
  2597 ;;		_ricarica
  2598 ;; This function uses a non-reentrant model
  2599 ;;
  2600                           
  2601                           	psect	text9
  2602  0008FA                     __ptext9:
  2603                           	opt stack 0
  2604  0008FA                     _sprintf:
  2605                           	opt stack 26
  2606                           
  2607                           ;doprnt.c: 494: va_list ap;
  2608                           ;doprnt.c: 499: signed char c;
  2609                           ;doprnt.c: 501: int width;
  2610                           ;doprnt.c: 504: int prec;
  2611                           ;doprnt.c: 508: unsigned short flag;
  2612                           ;doprnt.c: 515: char d;
  2613                           ;doprnt.c: 516: double fval;
  2614                           ;doprnt.c: 517: int exp;
  2615                           ;doprnt.c: 523: union {
  2616                           ;doprnt.c: 524: unsigned long vd;
  2617                           ;doprnt.c: 525: double integ;
  2618                           ;doprnt.c: 526: } tmpval;
  2619                           ;doprnt.c: 528: unsigned long val;
  2620                           ;doprnt.c: 529: unsigned len;
  2621                           ;doprnt.c: 530: const char * cp;
  2622                           ;doprnt.c: 533: *ap = __va_start();
  2623                           
  2624                           ;incstack = 0
  2625  0008FA  0E80               	movlw	low (?_sprintf+4)
  2626  0008FC  0100               	movlb	0	; () banked
  2627  0008FE  6F8A               	movwf	sprintf@ap& (0+255),b
  2628  000900  0E00               	movlw	high (?_sprintf+4)
  2629  000902  0100               	movlb	0	; () banked
  2630  000904  6F8B               	movwf	(sprintf@ap+1)& (0+255),b
  2631                           
  2632                           ;doprnt.c: 536: while(c = *f++) {
  2633  000906  EF87  F008         	goto	l4752
  2634  00090A                     l4554:
  2635                           
  2636                           ; BSR set to: 0
  2637                           ;doprnt.c: 538: if(c != '%')
  2638  00090A  0E25               	movlw	37
  2639  00090C  0100               	movlb	0	; () banked
  2640  00090E  199E               	xorwf	sprintf@c& (0+255),w,b
  2641  000910  B4D8               	btfsc	status,2,c
  2642  000912  D007               	goto	l4560
  2643                           
  2644                           ; BSR set to: 0
  2645                           ;doprnt.c: 540: {
  2646                           ;doprnt.c: 541: ((*sp++ = (c)));
  2647  000914  C07C  FFD9         	movff	sprintf@sp,fsr2l
  2648  000918  C07D  FFDA         	movff	sprintf@sp+1,fsr2h
  2649  00091C  C09E  FFDF         	movff	sprintf@c,indf2
  2650  000920  D3F3               	goto	l4750
  2651  000922                     l4560:
  2652                           
  2653                           ; BSR set to: 0
  2654                           ;doprnt.c: 543: }
  2655                           ;doprnt.c: 548: flag = 0;
  2656  000922  0E00               	movlw	0
  2657  000924  0100               	movlb	0	; () banked
  2658  000926  6F8D               	movwf	(sprintf@flag+1)& (0+255),b
  2659  000928  0E00               	movlw	0
  2660  00092A  6F8C               	movwf	sprintf@flag& (0+255),b
  2661                           
  2662                           ; BSR set to: 0
  2663                           ;doprnt.c: 611: if(*f == '.') {
  2664  00092C  C07E  FFF6         	movff	sprintf@f,tblptrl
  2665  000930  C07F  FFF7         	movff	sprintf@f+1,tblptrh
  2666  000934                     	if	0	;tblptru may be non-zero
  2667  000934                     	endif
  2668  000934                     	if	0	;tblptru may be non-zero
  2669  000934                     	endif
  2670  000934  0008               	tblrd		*
  2671  000936  50F5               	movf	tablat,w,c
  2672  000938  0A2E               	xorlw	46
  2673  00093A  A4D8               	btfss	status,2,c
  2674  00093C  D034               	goto	l4574
  2675                           
  2676                           ; BSR set to: 0
  2677                           ;doprnt.c: 612: flag |= 0x4000;
  2678  00093E  0100               	movlb	0	; () banked
  2679  000940  8D8D               	bsf	(sprintf@flag+1)& (0+255),6,b
  2680                           
  2681                           ;doprnt.c: 613: f++;
  2682  000942  0100               	movlb	0	; () banked
  2683  000944  4B7E               	infsnz	sprintf@f& (0+255),f,b
  2684  000946  2B7F               	incf	(sprintf@f+1)& (0+255),f,b
  2685                           
  2686                           ; BSR set to: 0
  2687                           ;doprnt.c: 620: {
  2688                           ;doprnt.c: 621: prec = 0;
  2689  000948  0E00               	movlw	0
  2690  00094A  0100               	movlb	0	; () banked
  2691  00094C  6F99               	movwf	(sprintf@prec+1)& (0+255),b
  2692  00094E  0E00               	movlw	0
  2693  000950  6F98               	movwf	sprintf@prec& (0+255),b
  2694                           
  2695                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  2696  000952  D01E               	goto	l4572
  2697  000954                     l4568:
  2698                           
  2699                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  2700  000954  C098  F00F         	movff	sprintf@prec,___wmul@multiplier
  2701  000958  C099  F010         	movff	sprintf@prec+1,___wmul@multiplier+1
  2702  00095C  0E00               	movlw	0
  2703  00095E  6E12               	movwf	___wmul@multiplicand+1,c
  2704  000960  0E0A               	movlw	10
  2705  000962  6E11               	movwf	___wmul@multiplicand,c
  2706  000964  ECCB  F01C         	call	___wmul	;wreg free
  2707  000968  C07E  FFF6         	movff	sprintf@f,tblptrl
  2708  00096C  C07F  FFF7         	movff	sprintf@f+1,tblptrh
  2709  000970                     	if	0	;tblptru may be non-zero
  2710  000970                     	endif
  2711  000970                     	if	0	;tblptru may be non-zero
  2712  000970                     	endif
  2713  000970  0008               	tblrd		*
  2714  000972  50F5               	movf	tablat,w,c
  2715  000974  260F               	addwf	?___wmul,f,c
  2716  000976  0E00               	movlw	0
  2717  000978  2210               	addwfc	?___wmul+1,f,c
  2718  00097A  0ED0               	movlw	208
  2719  00097C  240F               	addwf	?___wmul,w,c
  2720  00097E  0100               	movlb	0	; () banked
  2721  000980  6F98               	movwf	sprintf@prec& (0+255),b
  2722  000982  0EFF               	movlw	255
  2723  000984  2010               	addwfc	?___wmul+1,w,c
  2724  000986  0100               	movlb	0	; () banked
  2725  000988  6F99               	movwf	(sprintf@prec+1)& (0+255),b
  2726                           
  2727                           ; BSR set to: 0
  2728  00098A  0100               	movlb	0	; () banked
  2729  00098C  4B7E               	infsnz	sprintf@f& (0+255),f,b
  2730  00098E  2B7F               	incf	(sprintf@f+1)& (0+255),f,b
  2731  000990                     l4572:
  2732                           
  2733                           ; BSR set to: 0
  2734  000990  C07E  FFF6         	movff	sprintf@f,tblptrl
  2735  000994  C07F  FFF7         	movff	sprintf@f+1,tblptrh
  2736  000998                     	if	0	;tblptru may be non-zero
  2737  000998                     	endif
  2738  000998                     	if	0	;tblptru may be non-zero
  2739  000998                     	endif
  2740  000998  0008               	tblrd		*
  2741  00099A  50F5               	movf	tablat,w,c
  2742  00099C  EC00  F01D         	call	_isdigit
  2743  0009A0  A0D8               	btfss	status,0,c
  2744  0009A2  D00C               	goto	l4582
  2745  0009A4  D7D7               	goto	l4568
  2746  0009A6                     l4574:
  2747                           
  2748                           ;doprnt.c: 626: prec = 0;
  2749  0009A6  0E00               	movlw	0
  2750  0009A8  0100               	movlb	0	; () banked
  2751  0009AA  6F99               	movwf	(sprintf@prec+1)& (0+255),b
  2752  0009AC  0E00               	movlw	0
  2753  0009AE  6F98               	movwf	sprintf@prec& (0+255),b
  2754                           
  2755                           ; BSR set to: 0
  2756                           ;doprnt.c: 628: flag |= 0x1000;
  2757  0009B0  0100               	movlb	0	; () banked
  2758  0009B2  898D               	bsf	(sprintf@flag+1)& (0+255),4,b
  2759                           
  2760                           ; BSR set to: 0
  2761                           ;doprnt.c: 630: }
  2762                           ;doprnt.c: 635: switch(c = *f++) {
  2763  0009B4  D003               	goto	l4582
  2764  0009B6                     l4578:
  2765                           
  2766                           ; BSR set to: 0
  2767                           ;doprnt.c: 663: flag |= 0x400;
  2768  0009B6  0100               	movlb	0	; () banked
  2769  0009B8  858D               	bsf	(sprintf@flag+1)& (0+255),2,b
  2770                           
  2771                           ;doprnt.c: 664: break;
  2772  0009BA  D013               	goto	l4584
  2773  0009BC                     l4582:
  2774  0009BC  C07E  FFF6         	movff	sprintf@f,tblptrl
  2775  0009C0  C07F  FFF7         	movff	sprintf@f+1,tblptrh
  2776  0009C4  0100               	movlb	0	; () banked
  2777  0009C6  4B7E               	infsnz	sprintf@f& (0+255),f,b
  2778  0009C8  2B7F               	incf	(sprintf@f+1)& (0+255),f,b
  2779  0009CA                     	if	0	;tblptru may be non-zero
  2780  0009CA                     	endif
  2781  0009CA                     	if	0	;tblptru may be non-zero
  2782  0009CA                     	endif
  2783  0009CA  0008               	tblrd		*
  2784  0009CC  CFF5 F09E          	movff	tablat,sprintf@c
  2785  0009D0  0100               	movlb	0	; () banked
  2786  0009D2  519E               	movf	sprintf@c& (0+255),w,b
  2787                           
  2788                           ; Switch size 1, requested type "space"
  2789                           ; Number of cases is 2, Range of values is 0 to 102
  2790                           ; switch strategies available:
  2791                           ; Name         Instructions Cycles
  2792                           ; simple_byte            7     4 (average)
  2793                           ;	Chosen strategy is simple_byte
  2794  0009D4  0A00               	xorlw	0	; case 0
  2795  0009D6  B4D8               	btfsc	status,2,c
  2796  0009D8  D3A9               	goto	l4754
  2797  0009DA  0A66               	xorlw	102	; case 102
  2798  0009DC  B4D8               	btfsc	status,2,c
  2799  0009DE  D7EB               	goto	l4578
  2800  0009E0  D396               	goto	l4752
  2801  0009E2                     l4584:
  2802                           
  2803                           ; BSR set to: 0
  2804                           ;doprnt.c: 825: if(flag & (0x700)) {
  2805  0009E2  0E07               	movlw	7
  2806  0009E4  0100               	movlb	0	; () banked
  2807  0009E6  158D               	andwf	(sprintf@flag+1)& (0+255),w,b
  2808  0009E8  B4D8               	btfsc	status,2,c
  2809  0009EA  D339               	goto	l4732
  2810                           
  2811                           ; BSR set to: 0
  2812                           ;doprnt.c: 827: if(flag & 0x1000)
  2813  0009EC  0100               	movlb	0	; () banked
  2814  0009EE  A98D               	btfss	(sprintf@flag+1)& (0+255),4,b
  2815  0009F0  D005               	goto	l4590
  2816                           
  2817                           ; BSR set to: 0
  2818                           ;doprnt.c: 829: prec = 6;
  2819  0009F2  0E00               	movlw	0
  2820  0009F4  0100               	movlb	0	; () banked
  2821  0009F6  6F99               	movwf	(sprintf@prec+1)& (0+255),b
  2822  0009F8  0E06               	movlw	6
  2823  0009FA  6F98               	movwf	sprintf@prec& (0+255),b
  2824  0009FC                     l4590:
  2825                           
  2826                           ; BSR set to: 0
  2827                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  2828  0009FC  C08A  FFD9         	movff	sprintf@ap,fsr2l
  2829  000A00  C08B  FFDA         	movff	sprintf@ap+1,fsr2h
  2830  000A04  CFDE F09A          	movff	postinc2,sprintf@fval
  2831  000A08  CFDE F09B          	movff	postinc2,sprintf@fval+1
  2832  000A0C  CFDE F09C          	movff	postinc2,sprintf@fval+2
  2833  000A10  CFDE F09D          	movff	postinc2,sprintf@fval+3
  2834                           
  2835                           ; BSR set to: 0
  2836  000A14  0E04               	movlw	4
  2837  000A16  0100               	movlb	0	; () banked
  2838  000A18  278A               	addwf	sprintf@ap& (0+255),f,b
  2839  000A1A  0E00               	movlw	0
  2840  000A1C  238B               	addwfc	(sprintf@ap+1)& (0+255),f,b
  2841                           
  2842                           ; BSR set to: 0
  2843                           ;doprnt.c: 831: if(fval < 0.0) {
  2844  000A1E  0100               	movlb	0	; () banked
  2845  000A20  AF9D               	btfss	(sprintf@fval+3)& (0+255),7,b
  2846  000A22  D015               	goto	l4600
  2847                           
  2848                           ; BSR set to: 0
  2849                           ;doprnt.c: 832: fval = -fval;
  2850  000A24  C09A  F00F         	movff	sprintf@fval,___flneg@f1
  2851  000A28  C09B  F010         	movff	sprintf@fval+1,___flneg@f1+1
  2852  000A2C  C09C  F011         	movff	sprintf@fval+2,___flneg@f1+2
  2853  000A30  C09D  F012         	movff	sprintf@fval+3,___flneg@f1+3
  2854  000A34  EC78  F01C         	call	___flneg	;wreg free
  2855  000A38  C00F  F09A         	movff	?___flneg,sprintf@fval
  2856  000A3C  C010  F09B         	movff	?___flneg+1,sprintf@fval+1
  2857  000A40  C011  F09C         	movff	?___flneg+2,sprintf@fval+2
  2858  000A44  C012  F09D         	movff	?___flneg+3,sprintf@fval+3
  2859                           
  2860                           ;doprnt.c: 833: flag |= 0x03;
  2861  000A48  0E03               	movlw	3
  2862  000A4A  0100               	movlb	0	; () banked
  2863  000A4C  138C               	iorwf	sprintf@flag& (0+255),f,b
  2864  000A4E                     l4600:
  2865                           
  2866                           ; BSR set to: 0
  2867                           ;doprnt.c: 834: }
  2868                           ;doprnt.c: 835: exp = 0;
  2869  000A4E  0E00               	movlw	0
  2870  000A50  0100               	movlb	0	; () banked
  2871  000A52  6F93               	movwf	(sprintf@exp+1)& (0+255),b
  2872  000A54  0E00               	movlw	0
  2873  000A56  6F92               	movwf	sprintf@exp& (0+255),b
  2874                           
  2875                           ; BSR set to: 0
  2876                           ;doprnt.c: 836: if( fval!=0) {
  2877  000A58  0100               	movlb	0	; () banked
  2878  000A5A  519A               	movf	sprintf@fval& (0+255),w,b
  2879  000A5C  0100               	movlb	0	; () banked
  2880  000A5E  119B               	iorwf	(sprintf@fval+1)& (0+255),w,b
  2881  000A60  0100               	movlb	0	; () banked
  2882  000A62  119C               	iorwf	(sprintf@fval+2)& (0+255),w,b
  2883  000A64  0100               	movlb	0	; () banked
  2884  000A66  119D               	iorwf	(sprintf@fval+3)& (0+255),w,b
  2885  000A68  B4D8               	btfsc	status,2,c
  2886  000A6A  D088               	goto	l4628
  2887                           
  2888                           ; BSR set to: 0
  2889                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
  2890  000A6C  0100               	movlb	0	; () banked
  2891  000A6E  359C               	rlcf	(sprintf@fval+2)& (0+255),w,b
  2892  000A70  359D               	rlcf	(sprintf@fval+3)& (0+255),w,b
  2893  000A72  0F82               	addlw	130
  2894  000A74  0100               	movlb	0	; () banked
  2895  000A76  6F92               	movwf	sprintf@exp& (0+255),b
  2896  000A78  0100               	movlb	0	; () banked
  2897  000A7A  6B93               	clrf	(sprintf@exp+1)& (0+255),b
  2898  000A7C  0EFF               	movlw	255
  2899  000A7E  2393               	addwfc	(sprintf@exp+1)& (0+255),f,b
  2900                           
  2901                           ; BSR set to: 0
  2902                           ;doprnt.c: 838: exp--;
  2903  000A80  0100               	movlb	0	; () banked
  2904  000A82  0792               	decf	sprintf@exp& (0+255),f,b
  2905  000A84  A0D8               	btfss	status,0,c
  2906  000A86  0793               	decf	(sprintf@exp+1)& (0+255),f,b
  2907                           
  2908                           ; BSR set to: 0
  2909                           ;doprnt.c: 839: exp *= 3;
  2910  000A88  C092  F00F         	movff	sprintf@exp,___wmul@multiplier
  2911  000A8C  C093  F010         	movff	sprintf@exp+1,___wmul@multiplier+1
  2912  000A90  0E00               	movlw	0
  2913  000A92  6E12               	movwf	___wmul@multiplicand+1,c
  2914  000A94  0E03               	movlw	3
  2915  000A96  6E11               	movwf	___wmul@multiplicand,c
  2916  000A98  ECCB  F01C         	call	___wmul	;wreg free
  2917  000A9C  C00F  F092         	movff	?___wmul,sprintf@exp
  2918  000AA0  C010  F093         	movff	?___wmul+1,sprintf@exp+1
  2919                           
  2920                           ;doprnt.c: 840: exp /= 10;
  2921  000AA4  C092  F015         	movff	sprintf@exp,___awdiv@dividend
  2922  000AA8  C093  F016         	movff	sprintf@exp+1,___awdiv@dividend+1
  2923  000AAC  0E00               	movlw	0
  2924  000AAE  6E18               	movwf	___awdiv@divisor+1,c
  2925  000AB0  0E0A               	movlw	10
  2926  000AB2  6E17               	movwf	___awdiv@divisor,c
  2927  000AB4  EC0A  F01A         	call	___awdiv	;wreg free
  2928  000AB8  C015  F092         	movff	?___awdiv,sprintf@exp
  2929  000ABC  C016  F093         	movff	?___awdiv+1,sprintf@exp+1
  2930                           
  2931                           ;doprnt.c: 841: if(exp < 0)
  2932  000AC0  0100               	movlb	0	; () banked
  2933  000AC2  AF93               	btfss	(sprintf@exp+1)& (0+255),7,b
  2934  000AC4  D004               	goto	l4616
  2935                           
  2936                           ; BSR set to: 0
  2937                           ;doprnt.c: 842: exp--;
  2938  000AC6  0100               	movlb	0	; () banked
  2939  000AC8  0792               	decf	sprintf@exp& (0+255),f,b
  2940  000ACA  A0D8               	btfss	status,0,c
  2941  000ACC  0793               	decf	(sprintf@exp+1)& (0+255),f,b
  2942  000ACE                     l4616:
  2943                           
  2944                           ; BSR set to: 0
  2945                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  2946  000ACE  0100               	movlb	0	; () banked
  2947  000AD0  5192               	movf	sprintf@exp& (0+255),w,b
  2948  000AD2  0800               	sublw	0
  2949  000AD4  ECF1  F00A         	call	_scale
  2950  000AD8  C036  F094         	movff	?_scale,sprintf@tmpval
  2951  000ADC  C037  F095         	movff	?_scale+1,sprintf@tmpval+1
  2952  000AE0  C038  F096         	movff	?_scale+2,sprintf@tmpval+2
  2953  000AE4  C039  F097         	movff	?_scale+3,sprintf@tmpval+3
  2954                           
  2955                           ;doprnt.c: 847: tmpval.integ *= fval;
  2956  000AE8  C094  F01D         	movff	sprintf@tmpval,___flmul@b
  2957  000AEC  C095  F01E         	movff	sprintf@tmpval+1,___flmul@b+1
  2958  000AF0  C096  F01F         	movff	sprintf@tmpval+2,___flmul@b+2
  2959  000AF4  C097  F020         	movff	sprintf@tmpval+3,___flmul@b+3
  2960  000AF8  C09A  F021         	movff	sprintf@fval,___flmul@a
  2961  000AFC  C09B  F022         	movff	sprintf@fval+1,___flmul@a+1
  2962  000B00  C09C  F023         	movff	sprintf@fval+2,___flmul@a+2
  2963  000B04  C09D  F024         	movff	sprintf@fval+3,___flmul@a+3
  2964  000B08  ECFD  F00C         	call	___flmul	;wreg free
  2965  000B0C  C01D  F094         	movff	?___flmul,sprintf@tmpval
  2966  000B10  C01E  F095         	movff	?___flmul+1,sprintf@tmpval+1
  2967  000B14  C01F  F096         	movff	?___flmul+2,sprintf@tmpval+2
  2968  000B18  C020  F097         	movff	?___flmul+3,sprintf@tmpval+3
  2969                           
  2970                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  2971  000B1C  C094  F00F         	movff	sprintf@tmpval,___flge@ff1
  2972  000B20  C095  F010         	movff	sprintf@tmpval+1,___flge@ff1+1
  2973  000B24  C096  F011         	movff	sprintf@tmpval+2,___flge@ff1+2
  2974  000B28  C097  F012         	movff	sprintf@tmpval+3,___flge@ff1+3
  2975  000B2C  0E00               	movlw	0
  2976  000B2E  6E13               	movwf	___flge@ff2,c
  2977  000B30  0E00               	movlw	0
  2978  000B32  6E14               	movwf	___flge@ff2+1,c
  2979  000B34  0E80               	movlw	128
  2980  000B36  6E15               	movwf	___flge@ff2+2,c
  2981  000B38  0E3F               	movlw	63
  2982  000B3A  6E16               	movwf	___flge@ff2+3,c
  2983  000B3C  EC5E  F017         	call	___flge	;wreg free
  2984  000B40  B0D8               	btfsc	status,0,c
  2985  000B42  D005               	goto	l4624
  2986                           
  2987                           ;doprnt.c: 849: exp--;
  2988  000B44  0100               	movlb	0	; () banked
  2989  000B46  0792               	decf	sprintf@exp& (0+255),f,b
  2990  000B48  A0D8               	btfss	status,0,c
  2991  000B4A  0793               	decf	(sprintf@exp+1)& (0+255),f,b
  2992  000B4C  D017               	goto	l4628
  2993  000B4E                     l4624:
  2994                           
  2995                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  2996  000B4E  C094  F00F         	movff	sprintf@tmpval,___flge@ff1
  2997  000B52  C095  F010         	movff	sprintf@tmpval+1,___flge@ff1+1
  2998  000B56  C096  F011         	movff	sprintf@tmpval+2,___flge@ff1+2
  2999  000B5A  C097  F012         	movff	sprintf@tmpval+3,___flge@ff1+3
  3000  000B5E  0E00               	movlw	0
  3001  000B60  6E13               	movwf	___flge@ff2,c
  3002  000B62  0E00               	movlw	0
  3003  000B64  6E14               	movwf	___flge@ff2+1,c
  3004  000B66  0E20               	movlw	32
  3005  000B68  6E15               	movwf	___flge@ff2+2,c
  3006  000B6A  0E41               	movlw	65
  3007  000B6C  6E16               	movwf	___flge@ff2+3,c
  3008  000B6E  EC5E  F017         	call	___flge	;wreg free
  3009  000B72  A0D8               	btfss	status,0,c
  3010  000B74  D003               	goto	l4628
  3011                           
  3012                           ;doprnt.c: 851: exp++;
  3013  000B76  0100               	movlb	0	; () banked
  3014  000B78  4B92               	infsnz	sprintf@exp& (0+255),f,b
  3015  000B7A  2B93               	incf	(sprintf@exp+1)& (0+255),f,b
  3016  000B7C                     l4628:
  3017                           
  3018                           ;doprnt.c: 852: }
  3019                           ;doprnt.c: 1112: if(prec <= 12)
  3020  000B7C  0100               	movlb	0	; () banked
  3021  000B7E  BF99               	btfsc	(sprintf@prec+1)& (0+255),7,b
  3022  000B80  D008               	goto	l4630
  3023  000B82  0100               	movlb	0	; () banked
  3024  000B84  5199               	movf	(sprintf@prec+1)& (0+255),w,b
  3025  000B86  E123               	bnz	l4632
  3026  000B88  0E0D               	movlw	13
  3027  000B8A  0100               	movlb	0	; () banked
  3028  000B8C  5D98               	subwf	sprintf@prec& (0+255),w,b
  3029  000B8E  B0D8               	btfsc	status,0,c
  3030  000B90  D01E               	goto	l4632
  3031  000B92                     l4630:
  3032                           
  3033                           ; BSR set to: 0
  3034                           ;doprnt.c: 1113: fval += fround(prec);
  3035  000B92  C09A  F060         	movff	sprintf@fval,___fladd@b
  3036  000B96  C09B  F061         	movff	sprintf@fval+1,___fladd@b+1
  3037  000B9A  C09C  F062         	movff	sprintf@fval+2,___fladd@b+2
  3038  000B9E  C09D  F063         	movff	sprintf@fval+3,___fladd@b+3
  3039  000BA2  0100               	movlb	0	; () banked
  3040  000BA4  5198               	movf	sprintf@prec& (0+255),w,b
  3041  000BA6  ECD2  F011         	call	_fround
  3042  000BAA  C036  F064         	movff	?_fround,___fladd@a
  3043  000BAE  C037  F065         	movff	?_fround+1,___fladd@a+1
  3044  000BB2  C038  F066         	movff	?_fround+2,___fladd@a+2
  3045  000BB6  C039  F067         	movff	?_fround+3,___fladd@a+3
  3046  000BBA  EC9D  F008         	call	___fladd	;wreg free
  3047  000BBE  C060  F09A         	movff	?___fladd,sprintf@fval
  3048  000BC2  C061  F09B         	movff	?___fladd+1,sprintf@fval+1
  3049  000BC6  C062  F09C         	movff	?___fladd+2,sprintf@fval+2
  3050  000BCA  C063  F09D         	movff	?___fladd+3,sprintf@fval+3
  3051  000BCE                     l4632:
  3052                           
  3053                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  3054  000BCE  0100               	movlb	0	; () banked
  3055  000BD0  BF93               	btfsc	(sprintf@exp+1)& (0+255),7,b
  3056  000BD2  D008               	goto	l4634
  3057  000BD4  0100               	movlb	0	; () banked
  3058  000BD6  5193               	movf	(sprintf@exp+1)& (0+255),w,b
  3059  000BD8  E12A               	bnz	l4640
  3060  000BDA  0E0A               	movlw	10
  3061  000BDC  0100               	movlb	0	; () banked
  3062  000BDE  5D92               	subwf	sprintf@exp& (0+255),w,b
  3063  000BE0  B0D8               	btfsc	status,0,c
  3064  000BE2  D025               	goto	l4640
  3065  000BE4                     l4634:
  3066                           
  3067                           ; BSR set to: 0
  3068  000BE4  0100               	movlb	0	; () banked
  3069  000BE6  519A               	movf	sprintf@fval& (0+255),w,b
  3070  000BE8  0100               	movlb	0	; () banked
  3071  000BEA  119B               	iorwf	(sprintf@fval+1)& (0+255),w,b
  3072  000BEC  0100               	movlb	0	; () banked
  3073  000BEE  119C               	iorwf	(sprintf@fval+2)& (0+255),w,b
  3074  000BF0  0100               	movlb	0	; () banked
  3075  000BF2  119D               	iorwf	(sprintf@fval+3)& (0+255),w,b
  3076  000BF4  B4D8               	btfsc	status,2,c
  3077  000BF6  D067               	goto	l4654
  3078                           
  3079                           ; BSR set to: 0
  3080  000BF8  C09A  F03F         	movff	sprintf@fval,___fltol@f1
  3081  000BFC  C09B  F040         	movff	sprintf@fval+1,___fltol@f1+1
  3082  000C00  C09C  F041         	movff	sprintf@fval+2,___fltol@f1+2
  3083  000C04  C09D  F042         	movff	sprintf@fval+3,___fltol@f1+3
  3084  000C08  EC7B  F018         	call	___fltol	;wreg free
  3085  000C0C  503F               	movf	?___fltol,w,c
  3086  000C0E  1040               	iorwf	?___fltol+1,w,c
  3087  000C10  1041               	iorwf	?___fltol+2,w,c
  3088  000C12  1042               	iorwf	?___fltol+3,w,c
  3089  000C14  A4D8               	btfss	status,2,c
  3090  000C16  D057               	goto	l4654
  3091  000C18  0100               	movlb	0	; () banked
  3092  000C1A  BF93               	btfsc	(sprintf@exp+1)& (0+255),7,b
  3093  000C1C  D054               	goto	l4654
  3094  000C1E  0100               	movlb	0	; () banked
  3095  000C20  5193               	movf	(sprintf@exp+1)& (0+255),w,b
  3096  000C22  E105               	bnz	l4640
  3097  000C24  0E02               	movlw	2
  3098  000C26  0100               	movlb	0	; () banked
  3099  000C28  5D92               	subwf	sprintf@exp& (0+255),w,b
  3100  000C2A  A0D8               	btfss	status,0,c
  3101  000C2C  D04C               	goto	l4654
  3102  000C2E                     l4640:
  3103                           
  3104                           ; BSR set to: 0
  3105                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  3106  000C2E  C094  F00F         	movff	sprintf@tmpval,___flge@ff1
  3107  000C32  C095  F010         	movff	sprintf@tmpval+1,___flge@ff1+1
  3108  000C36  C096  F011         	movff	sprintf@tmpval+2,___flge@ff1+2
  3109  000C3A  C097  F012         	movff	sprintf@tmpval+3,___flge@ff1+3
  3110  000C3E  0E5F               	movlw	95
  3111  000C40  6E13               	movwf	___flge@ff2,c
  3112  000C42  0E70               	movlw	112
  3113  000C44  6E14               	movwf	___flge@ff2+1,c
  3114  000C46  0E89               	movlw	137
  3115  000C48  6E15               	movwf	___flge@ff2+2,c
  3116  000C4A  0E40               	movlw	64
  3117  000C4C  6E16               	movwf	___flge@ff2+3,c
  3118  000C4E  EC5E  F017         	call	___flge	;wreg free
  3119  000C52  B0D8               	btfsc	status,0,c
  3120  000C54  D003               	goto	l4644
  3121                           
  3122                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  3123  000C56  0100               	movlb	0	; () banked
  3124  000C58  0EF7               	movlw	247
  3125  000C5A  D002               	goto	L2
  3126  000C5C                     l4644:
  3127                           
  3128                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  3129  000C5C  0100               	movlb	0	; () banked
  3130  000C5E  0EF8               	movlw	248
  3131  000C60                     L2:
  3132  000C60  2792               	addwf	sprintf@exp& (0+255),f,b
  3133  000C62  0EFF               	movlw	255
  3134  000C64  2393               	addwfc	(sprintf@exp+1)& (0+255),f,b
  3135                           
  3136                           ; BSR set to: 0
  3137                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  3138                           
  3139                           ; BSR set to: 0
  3140  000C66  0100               	movlb	0	; () banked
  3141  000C68  5192               	movf	sprintf@exp& (0+255),w,b
  3142  000C6A  ECF1  F00A         	call	_scale
  3143  000C6E  C036  F094         	movff	?_scale,sprintf@tmpval
  3144  000C72  C037  F095         	movff	?_scale+1,sprintf@tmpval+1
  3145  000C76  C038  F096         	movff	?_scale+2,sprintf@tmpval+2
  3146  000C7A  C039  F097         	movff	?_scale+3,sprintf@tmpval+3
  3147  000C7E  C09A  F00F         	movff	sprintf@fval,__div_to_l_@f1
  3148  000C82  C09B  F010         	movff	sprintf@fval+1,__div_to_l_@f1+1
  3149  000C86  C09C  F011         	movff	sprintf@fval+2,__div_to_l_@f1+2
  3150  000C8A  C09D  F012         	movff	sprintf@fval+3,__div_to_l_@f1+3
  3151  000C8E  C094  F013         	movff	sprintf@tmpval,__div_to_l_@f2
  3152  000C92  C095  F014         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
  3153  000C96  C096  F015         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
  3154  000C9A  C097  F016         	movff	sprintf@tmpval+3,__div_to_l_@f2+3
  3155  000C9E  ECCA  F016         	call	__div_to_l_	;wreg free
  3156  000CA2  C00F  F08E         	movff	?__div_to_l_,sprintf@val
  3157  000CA6  C010  F08F         	movff	?__div_to_l_+1,sprintf@val+1
  3158  000CAA  C011  F090         	movff	?__div_to_l_+2,sprintf@val+2
  3159  000CAE  C012  F091         	movff	?__div_to_l_+3,sprintf@val+3
  3160                           
  3161                           ;doprnt.c: 1129: fval = 0.0;
  3162  000CB2  0E00               	movlw	0
  3163  000CB4  0100               	movlb	0	; () banked
  3164  000CB6  6F9A               	movwf	sprintf@fval& (0+255),b
  3165  000CB8  0E00               	movlw	0
  3166  000CBA  6F9B               	movwf	(sprintf@fval+1)& (0+255),b
  3167  000CBC  0E00               	movlw	0
  3168  000CBE  6F9C               	movwf	(sprintf@fval+2)& (0+255),b
  3169  000CC0  0E00               	movlw	0
  3170  000CC2  6F9D               	movwf	(sprintf@fval+3)& (0+255),b
  3171                           
  3172                           ;doprnt.c: 1130: } else {
  3173  000CC4  D03C               	goto	l4658
  3174  000CC6                     l4654:
  3175                           
  3176                           ;doprnt.c: 1131: val = (unsigned long)fval;
  3177  000CC6  C09A  F03F         	movff	sprintf@fval,___fltol@f1
  3178  000CCA  C09B  F040         	movff	sprintf@fval+1,___fltol@f1+1
  3179  000CCE  C09C  F041         	movff	sprintf@fval+2,___fltol@f1+2
  3180  000CD2  C09D  F042         	movff	sprintf@fval+3,___fltol@f1+3
  3181  000CD6  EC7B  F018         	call	___fltol	;wreg free
  3182  000CDA  C03F  F08E         	movff	?___fltol,sprintf@val
  3183  000CDE  C040  F08F         	movff	?___fltol+1,sprintf@val+1
  3184  000CE2  C041  F090         	movff	?___fltol+2,sprintf@val+2
  3185  000CE6  C042  F091         	movff	?___fltol+3,sprintf@val+3
  3186                           
  3187                           ;doprnt.c: 1132: fval -= (double)val;
  3188  000CEA  C09A  F074         	movff	sprintf@fval,___flsub@b
  3189  000CEE  C09B  F075         	movff	sprintf@fval+1,___flsub@b+1
  3190  000CF2  C09C  F076         	movff	sprintf@fval+2,___flsub@b+2
  3191  000CF6  C09D  F077         	movff	sprintf@fval+3,___flsub@b+3
  3192  000CFA  C08E  F00F         	movff	sprintf@val,___xxtofl@val
  3193  000CFE  C08F  F010         	movff	sprintf@val+1,___xxtofl@val+1
  3194  000D02  C090  F011         	movff	sprintf@val+2,___xxtofl@val+2
  3195  000D06  C091  F012         	movff	sprintf@val+3,___xxtofl@val+3
  3196  000D0A  0E00               	movlw	0
  3197  000D0C  ECEA  F014         	call	___xxtofl
  3198  000D10  C00F  F078         	movff	?___xxtofl,___flsub@a
  3199  000D14  C010  F079         	movff	?___xxtofl+1,___flsub@a+1
  3200  000D18  C011  F07A         	movff	?___xxtofl+2,___flsub@a+2
  3201  000D1C  C012  F07B         	movff	?___xxtofl+3,___flsub@a+3
  3202  000D20  ECE1  F01B         	call	___flsub	;wreg free
  3203  000D24  C074  F09A         	movff	?___flsub,sprintf@fval
  3204  000D28  C075  F09B         	movff	?___flsub+1,sprintf@fval+1
  3205  000D2C  C076  F09C         	movff	?___flsub+2,sprintf@fval+2
  3206  000D30  C077  F09D         	movff	?___flsub+3,sprintf@fval+3
  3207                           
  3208                           ;doprnt.c: 1133: exp = 0;
  3209  000D34  0E00               	movlw	0
  3210  000D36  0100               	movlb	0	; () banked
  3211  000D38  6F93               	movwf	(sprintf@exp+1)& (0+255),b
  3212  000D3A  0E00               	movlw	0
  3213  000D3C  6F92               	movwf	sprintf@exp& (0+255),b
  3214  000D3E                     l4658:
  3215                           
  3216                           ; BSR set to: 0
  3217                           ;doprnt.c: 1134: }
  3218                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  3219  000D3E  0E01               	movlw	1
  3220  000D40  0100               	movlb	0	; () banked
  3221  000D42  6F9E               	movwf	sprintf@c& (0+255),b
  3222  000D44                     l4660:
  3223                           
  3224                           ; BSR set to: 0
  3225  000D44  0E0A               	movlw	10
  3226  000D46  0100               	movlb	0	; () banked
  3227  000D48  199E               	xorwf	sprintf@c& (0+255),w,b
  3228  000D4A  B4D8               	btfsc	status,2,c
  3229  000D4C  D01E               	goto	l4672
  3230                           
  3231                           ; BSR set to: 0
  3232                           ;doprnt.c: 1137: if(val < dpowers[c])
  3233                           
  3234                           ; BSR set to: 0
  3235                           
  3236                           ; BSR set to: 0
  3237  000D4E  0100               	movlb	0	; () banked
  3238  000D50  519E               	movf	sprintf@c& (0+255),w,b
  3239  000D52  0D04               	mullw	4
  3240  000D54  0E69               	movlw	low _dpowers
  3241  000D56  24F3               	addwf	prodl,w,c
  3242  000D58  6EF6               	movwf	tblptrl,c
  3243  000D5A  0E08               	movlw	high _dpowers
  3244  000D5C  20F4               	addwfc	prodh,w,c
  3245  000D5E  6EF7               	movwf	tblptrh,c
  3246  000D60                     	if	0	;There are less than 3 active tblptr bytes
  3247  000D60                     	endif
  3248  000D60  0009               	tblrd		*+
  3249  000D62  50F5               	movf	tablat,w,c
  3250  000D64  0100               	movlb	0	; () banked
  3251  000D66  5D8E               	subwf	sprintf@val& (0+255),w,b
  3252  000D68  0009               	tblrd		*+
  3253  000D6A  50F5               	movf	tablat,w,c
  3254  000D6C  0100               	movlb	0	; () banked
  3255  000D6E  598F               	subwfb	(sprintf@val+1)& (0+255),w,b
  3256  000D70  0009               	tblrd		*+
  3257  000D72  50F5               	movf	tablat,w,c
  3258  000D74  0100               	movlb	0	; () banked
  3259  000D76  5990               	subwfb	(sprintf@val+2)& (0+255),w,b
  3260  000D78  0009               	tblrd		*+
  3261  000D7A  50F5               	movf	tablat,w,c
  3262  000D7C  0100               	movlb	0	; () banked
  3263  000D7E  5991               	subwfb	(sprintf@val+3)& (0+255),w,b
  3264  000D80  A0D8               	btfss	status,0,c
  3265  000D82  D003               	goto	l4672
  3266                           
  3267                           ; BSR set to: 0
  3268                           
  3269                           ; BSR set to: 0
  3270                           
  3271                           ; BSR set to: 0
  3272                           ;doprnt.c: 1138: break;
  3273  000D84  0100               	movlb	0	; () banked
  3274  000D86  2B9E               	incf	sprintf@c& (0+255),f,b
  3275  000D88  D7DD               	goto	l4660
  3276  000D8A                     l4672:
  3277                           
  3278                           ; BSR set to: 0
  3279                           ;doprnt.c: 1175: {
  3280                           ;doprnt.c: 1188: if(flag & 0x03)
  3281  000D8A  0E03               	movlw	3
  3282  000D8C  0100               	movlb	0	; () banked
  3283  000D8E  158C               	andwf	sprintf@flag& (0+255),w,b
  3284  000D90  0100               	movlb	0	; () banked
  3285  000D92  6F84               	movwf	??_sprintf& (0+255),b
  3286  000D94  0E00               	movlw	0
  3287  000D96  0100               	movlb	0	; () banked
  3288  000D98  158D               	andwf	(sprintf@flag+1)& (0+255),w,b
  3289  000D9A  0100               	movlb	0	; () banked
  3290  000D9C  6F85               	movwf	(??_sprintf+1)& (0+255),b
  3291  000D9E  0100               	movlb	0	; () banked
  3292  000DA0  5184               	movf	??_sprintf& (0+255),w,b
  3293  000DA2  0100               	movlb	0	; () banked
  3294  000DA4  1185               	iorwf	(??_sprintf+1)& (0+255),w,b
  3295  000DA6  B4D8               	btfsc	status,2,c
  3296  000DA8  D054               	goto	l4686
  3297                           
  3298                           ; BSR set to: 0
  3299                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  3300  000DAA  C07C  FFD9         	movff	sprintf@sp,fsr2l
  3301  000DAE  C07D  FFDA         	movff	sprintf@sp+1,fsr2h
  3302  000DB2  0E2D               	movlw	45
  3303  000DB4  D04C               	goto	L3
  3304  000DB6                     l4676:
  3305                           
  3306                           ; BSR set to: 0
  3307  000DB6  0100               	movlb	0	; () banked
  3308  000DB8  4B7C               	infsnz	sprintf@sp& (0+255),f,b
  3309  000DBA  2B7D               	incf	(sprintf@sp+1)& (0+255),f,b
  3310                           
  3311                           ; BSR set to: 0
  3312                           ;doprnt.c: 1195: }
  3313                           ;doprnt.c: 1196: while(c--) {
  3314  000DBC  D04A               	goto	l4686
  3315  000DBE                     l4678:
  3316                           
  3317                           ; BSR set to: 0
  3318                           ;doprnt.c: 1200: {
  3319                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  3320  000DBE  C08E  F00F         	movff	sprintf@val,___lldiv@dividend
  3321  000DC2  C08F  F010         	movff	sprintf@val+1,___lldiv@dividend+1
  3322  000DC6  C090  F011         	movff	sprintf@val+2,___lldiv@dividend+2
  3323  000DCA  C091  F012         	movff	sprintf@val+3,___lldiv@dividend+3
  3324  000DCE  0100               	movlb	0	; () banked
  3325  000DD0  519E               	movf	sprintf@c& (0+255),w,b
  3326  000DD2  0D04               	mullw	4
  3327  000DD4  0E69               	movlw	low _dpowers
  3328  000DD6  24F3               	addwf	prodl,w,c
  3329  000DD8  6EF6               	movwf	tblptrl,c
  3330  000DDA  0E08               	movlw	high _dpowers
  3331  000DDC  20F4               	addwfc	prodh,w,c
  3332  000DDE  6EF7               	movwf	tblptrh,c
  3333  000DE0                     	if	0	;There are less than 3 active tblptr bytes
  3334  000DE0                     	endif
  3335  000DE0  0009               	tblrd		*+
  3336  000DE2  CFF5 F013          	movff	tablat,___lldiv@divisor
  3337  000DE6  0009               	tblrd		*+
  3338  000DE8  CFF5 F014          	movff	tablat,___lldiv@divisor+1
  3339  000DEC  0009               	tblrd		*+
  3340  000DEE  CFF5 F015          	movff	tablat,___lldiv@divisor+2
  3341  000DF2  000A               	tblrd		*-
  3342  000DF4  CFF5 F016          	movff	tablat,___lldiv@divisor+3
  3343  000DF8  EC4C  F01A         	call	___lldiv	;wreg free
  3344  000DFC  C00F  F094         	movff	?___lldiv,sprintf@tmpval
  3345  000E00  C010  F095         	movff	?___lldiv+1,sprintf@tmpval+1
  3346  000E04  C011  F096         	movff	?___lldiv+2,sprintf@tmpval+2
  3347  000E08  C012  F097         	movff	?___lldiv+3,sprintf@tmpval+3
  3348                           
  3349                           ;doprnt.c: 1202: tmpval.vd %= 10;
  3350  000E0C  C094  F00F         	movff	sprintf@tmpval,___llmod@dividend
  3351  000E10  C095  F010         	movff	sprintf@tmpval+1,___llmod@dividend+1
  3352  000E14  C096  F011         	movff	sprintf@tmpval+2,___llmod@dividend+2
  3353  000E18  C097  F012         	movff	sprintf@tmpval+3,___llmod@dividend+3
  3354  000E1C  0E0A               	movlw	10
  3355  000E1E  6E13               	movwf	___llmod@divisor,c
  3356  000E20  0E00               	movlw	0
  3357  000E22  6E14               	movwf	___llmod@divisor+1,c
  3358  000E24  0E00               	movlw	0
  3359  000E26  6E15               	movwf	___llmod@divisor+2,c
  3360  000E28  0E00               	movlw	0
  3361  000E2A  6E16               	movwf	___llmod@divisor+3,c
  3362  000E2C  ECFD  F01A         	call	___llmod	;wreg free
  3363  000E30  C00F  F094         	movff	?___llmod,sprintf@tmpval
  3364  000E34  C010  F095         	movff	?___llmod+1,sprintf@tmpval+1
  3365  000E38  C011  F096         	movff	?___llmod+2,sprintf@tmpval+2
  3366  000E3C  C012  F097         	movff	?___llmod+3,sprintf@tmpval+3
  3367                           
  3368                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  3369  000E40  0100               	movlb	0	; () banked
  3370  000E42  5194               	movf	sprintf@tmpval& (0+255),w,b
  3371  000E44  0F30               	addlw	48
  3372  000E46  C07C  FFD9         	movff	sprintf@sp,fsr2l
  3373  000E4A  C07D  FFDA         	movff	sprintf@sp+1,fsr2h
  3374  000E4E                     L3:
  3375  000E4E  6EDF               	movwf	indf2,c
  3376  000E50  D7B2               	goto	l4676
  3377  000E52                     l4686:
  3378                           
  3379                           ; BSR set to: 0
  3380  000E52  0100               	movlb	0	; () banked
  3381  000E54  079E               	decf	sprintf@c& (0+255),f,b
  3382  000E56  0100               	movlb	0	; () banked
  3383  000E58  299E               	incf	sprintf@c& (0+255),w,b
  3384  000E5A  B4D8               	btfsc	status,2,c
  3385  000E5C  D00E               	goto	l4694
  3386  000E5E  D7AF               	goto	l4678
  3387  000E60                     l4688:
  3388                           
  3389                           ; BSR set to: 0
  3390                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  3391  000E60  C07C  FFD9         	movff	sprintf@sp,fsr2l
  3392  000E64  C07D  FFDA         	movff	sprintf@sp+1,fsr2h
  3393  000E68  0E30               	movlw	48
  3394  000E6A  6EDF               	movwf	indf2,c
  3395                           
  3396                           ; BSR set to: 0
  3397  000E6C  0100               	movlb	0	; () banked
  3398  000E6E  4B7C               	infsnz	sprintf@sp& (0+255),f,b
  3399  000E70  2B7D               	incf	(sprintf@sp+1)& (0+255),f,b
  3400                           
  3401                           ; BSR set to: 0
  3402                           ;doprnt.c: 1209: exp--;
  3403  000E72  0100               	movlb	0	; () banked
  3404  000E74  0792               	decf	sprintf@exp& (0+255),f,b
  3405  000E76  A0D8               	btfss	status,0,c
  3406  000E78  0793               	decf	(sprintf@exp+1)& (0+255),f,b
  3407  000E7A                     l4694:
  3408                           
  3409                           ; BSR set to: 0
  3410  000E7A  0100               	movlb	0	; () banked
  3411  000E7C  BF93               	btfsc	(sprintf@exp+1)& (0+255),7,b
  3412  000E7E  D007               	goto	l4696
  3413  000E80  0100               	movlb	0	; () banked
  3414  000E82  5193               	movf	(sprintf@exp+1)& (0+255),w,b
  3415  000E84  E1ED               	bnz	l4688
  3416  000E86  0100               	movlb	0	; () banked
  3417  000E88  0592               	decf	sprintf@exp& (0+255),w,b
  3418  000E8A  B0D8               	btfsc	status,0,c
  3419  000E8C  D7E9               	goto	l4688
  3420  000E8E                     l4696:
  3421                           
  3422                           ; BSR set to: 0
  3423                           ;doprnt.c: 1210: }
  3424                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3425  000E8E  0100               	movlb	0	; () banked
  3426  000E90  BF99               	btfsc	(sprintf@prec+1)& (0+255),7,b
  3427  000E92  D00C               	goto	l290
  3428  000E94  0100               	movlb	0	; () banked
  3429  000E96  5199               	movf	(sprintf@prec+1)& (0+255),w,b
  3430  000E98  E105               	bnz	u5320
  3431  000E9A  0E09               	movlw	9
  3432  000E9C  0100               	movlb	0	; () banked
  3433  000E9E  5D98               	subwf	sprintf@prec& (0+255),w,b
  3434  000EA0  A0D8               	btfss	status,0,c
  3435  000EA2  D004               	goto	l290
  3436  000EA4                     u5320:
  3437                           
  3438                           ; BSR set to: 0
  3439                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  3440  000EA4  0E08               	movlw	8
  3441  000EA6  0100               	movlb	0	; () banked
  3442  000EA8  6F9E               	movwf	sprintf@c& (0+255),b
  3443  000EAA  D002               	goto	l4700
  3444  000EAC                     l290:
  3445                           
  3446                           ; BSR set to: 0
  3447                           ;doprnt.c: 1213: else
  3448                           ;doprnt.c: 1214: c = prec;
  3449  000EAC  C098  F09E         	movff	sprintf@prec,sprintf@c
  3450  000EB0                     l4700:
  3451                           
  3452                           ; BSR set to: 0
  3453                           ;doprnt.c: 1215: prec -= c;
  3454  000EB0  0100               	movlb	0	; () banked
  3455  000EB2  519E               	movf	sprintf@c& (0+255),w,b
  3456  000EB4  0100               	movlb	0	; () banked
  3457  000EB6  5F98               	subwf	sprintf@prec& (0+255),f,b
  3458  000EB8  0E00               	movlw	0
  3459  000EBA  0100               	movlb	0	; () banked
  3460  000EBC  BF9E               	btfsc	sprintf@c& (0+255),7,b
  3461  000EBE  0EFF               	movlw	255
  3462  000EC0  0100               	movlb	0	; () banked
  3463  000EC2  5B99               	subwfb	(sprintf@prec+1)& (0+255),f,b
  3464                           
  3465                           ; BSR set to: 0
  3466                           ;doprnt.c: 1219: if(c)
  3467  000EC4  0100               	movlb	0	; () banked
  3468  000EC6  519E               	movf	sprintf@c& (0+255),w,b
  3469  000EC8  0100               	movlb	0	; () banked
  3470  000ECA  B4D8               	btfsc	status,2,c
  3471  000ECC  D009               	goto	l4708
  3472                           
  3473                           ; BSR set to: 0
  3474                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  3475  000ECE  C07C  FFD9         	movff	sprintf@sp,fsr2l
  3476  000ED2  C07D  FFDA         	movff	sprintf@sp+1,fsr2h
  3477  000ED6  0E2E               	movlw	46
  3478  000ED8  6EDF               	movwf	indf2,c
  3479                           
  3480                           ; BSR set to: 0
  3481  000EDA  0100               	movlb	0	; () banked
  3482  000EDC  4B7C               	infsnz	sprintf@sp& (0+255),f,b
  3483  000EDE  2B7D               	incf	(sprintf@sp+1)& (0+255),f,b
  3484  000EE0                     l4708:
  3485                           
  3486                           ; BSR set to: 0
  3487                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  3488  000EE0  0100               	movlb	0	; () banked
  3489  000EE2  519E               	movf	sprintf@c& (0+255),w,b
  3490  000EE4  ECF1  F00A         	call	_scale
  3491  000EE8  C036  F086         	movff	?_scale,_sprintf$1357
  3492  000EEC  C037  F087         	movff	?_scale+1,_sprintf$1357+1
  3493  000EF0  C038  F088         	movff	?_scale+2,_sprintf$1357+2
  3494  000EF4  C039  F089         	movff	?_scale+3,_sprintf$1357+3
  3495                           
  3496                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  3497  000EF8  C09A  F021         	movff	sprintf@fval,___flmul@a
  3498  000EFC  C09B  F022         	movff	sprintf@fval+1,___flmul@a+1
  3499  000F00  C09C  F023         	movff	sprintf@fval+2,___flmul@a+2
  3500  000F04  C09D  F024         	movff	sprintf@fval+3,___flmul@a+3
  3501  000F08  C086  F01D         	movff	_sprintf$1357,___flmul@b
  3502  000F0C  C087  F01E         	movff	_sprintf$1357+1,___flmul@b+1
  3503  000F10  C088  F01F         	movff	_sprintf$1357+2,___flmul@b+2
  3504  000F14  C089  F020         	movff	_sprintf$1357+3,___flmul@b+3
  3505  000F18  ECFD  F00C         	call	___flmul	;wreg free
  3506  000F1C  C01D  F03F         	movff	?___flmul,___fltol@f1
  3507  000F20  C01E  F040         	movff	?___flmul+1,___fltol@f1+1
  3508  000F24  C01F  F041         	movff	?___flmul+2,___fltol@f1+2
  3509  000F28  C020  F042         	movff	?___flmul+3,___fltol@f1+3
  3510  000F2C  EC7B  F018         	call	___fltol	;wreg free
  3511  000F30  C03F  F08E         	movff	?___fltol,sprintf@val
  3512  000F34  C040  F08F         	movff	?___fltol+1,sprintf@val+1
  3513  000F38  C041  F090         	movff	?___fltol+2,sprintf@val+2
  3514  000F3C  C042  F091         	movff	?___fltol+3,sprintf@val+3
  3515                           
  3516                           ;doprnt.c: 1228: while(c--) {
  3517  000F40  D073               	goto	l4722
  3518  000F42                     l4712:
  3519                           
  3520                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  3521  000F42  C08E  F00F         	movff	sprintf@val,___lldiv@dividend
  3522  000F46  C08F  F010         	movff	sprintf@val+1,___lldiv@dividend+1
  3523  000F4A  C090  F011         	movff	sprintf@val+2,___lldiv@dividend+2
  3524  000F4E  C091  F012         	movff	sprintf@val+3,___lldiv@dividend+3
  3525  000F52  0100               	movlb	0	; () banked
  3526  000F54  519E               	movf	sprintf@c& (0+255),w,b
  3527  000F56  0D04               	mullw	4
  3528  000F58  0E69               	movlw	low _dpowers
  3529  000F5A  24F3               	addwf	prodl,w,c
  3530  000F5C  6EF6               	movwf	tblptrl,c
  3531  000F5E  0E08               	movlw	high _dpowers
  3532  000F60  20F4               	addwfc	prodh,w,c
  3533  000F62  6EF7               	movwf	tblptrh,c
  3534  000F64                     	if	0	;There are less than 3 active tblptr bytes
  3535  000F64                     	endif
  3536  000F64  0009               	tblrd		*+
  3537  000F66  CFF5 F013          	movff	tablat,___lldiv@divisor
  3538  000F6A  0009               	tblrd		*+
  3539  000F6C  CFF5 F014          	movff	tablat,___lldiv@divisor+1
  3540  000F70  0009               	tblrd		*+
  3541  000F72  CFF5 F015          	movff	tablat,___lldiv@divisor+2
  3542  000F76  000A               	tblrd		*-
  3543  000F78  CFF5 F016          	movff	tablat,___lldiv@divisor+3
  3544  000F7C  EC4C  F01A         	call	___lldiv	;wreg free
  3545  000F80  C00F  F094         	movff	?___lldiv,sprintf@tmpval
  3546  000F84  C010  F095         	movff	?___lldiv+1,sprintf@tmpval+1
  3547  000F88  C011  F096         	movff	?___lldiv+2,sprintf@tmpval+2
  3548  000F8C  C012  F097         	movff	?___lldiv+3,sprintf@tmpval+3
  3549                           
  3550                           ;doprnt.c: 1230: tmpval.vd %= 10;
  3551  000F90  C094  F00F         	movff	sprintf@tmpval,___llmod@dividend
  3552  000F94  C095  F010         	movff	sprintf@tmpval+1,___llmod@dividend+1
  3553  000F98  C096  F011         	movff	sprintf@tmpval+2,___llmod@dividend+2
  3554  000F9C  C097  F012         	movff	sprintf@tmpval+3,___llmod@dividend+3
  3555  000FA0  0E0A               	movlw	10
  3556  000FA2  6E13               	movwf	___llmod@divisor,c
  3557  000FA4  0E00               	movlw	0
  3558  000FA6  6E14               	movwf	___llmod@divisor+1,c
  3559  000FA8  0E00               	movlw	0
  3560  000FAA  6E15               	movwf	___llmod@divisor+2,c
  3561  000FAC  0E00               	movlw	0
  3562  000FAE  6E16               	movwf	___llmod@divisor+3,c
  3563  000FB0  ECFD  F01A         	call	___llmod	;wreg free
  3564  000FB4  C00F  F094         	movff	?___llmod,sprintf@tmpval
  3565  000FB8  C010  F095         	movff	?___llmod+1,sprintf@tmpval+1
  3566  000FBC  C011  F096         	movff	?___llmod+2,sprintf@tmpval+2
  3567  000FC0  C012  F097         	movff	?___llmod+3,sprintf@tmpval+3
  3568                           
  3569                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  3570  000FC4  0100               	movlb	0	; () banked
  3571  000FC6  5194               	movf	sprintf@tmpval& (0+255),w,b
  3572  000FC8  0F30               	addlw	48
  3573  000FCA  C07C  FFD9         	movff	sprintf@sp,fsr2l
  3574  000FCE  C07D  FFDA         	movff	sprintf@sp+1,fsr2h
  3575  000FD2  6EDF               	movwf	indf2,c
  3576                           
  3577                           ; BSR set to: 0
  3578  000FD4  0100               	movlb	0	; () banked
  3579  000FD6  4B7C               	infsnz	sprintf@sp& (0+255),f,b
  3580  000FD8  2B7D               	incf	(sprintf@sp+1)& (0+255),f,b
  3581                           
  3582                           ; BSR set to: 0
  3583                           ;doprnt.c: 1232: val %= dpowers[c];
  3584  000FDA  C08E  F00F         	movff	sprintf@val,___llmod@dividend
  3585  000FDE  C08F  F010         	movff	sprintf@val+1,___llmod@dividend+1
  3586  000FE2  C090  F011         	movff	sprintf@val+2,___llmod@dividend+2
  3587  000FE6  C091  F012         	movff	sprintf@val+3,___llmod@dividend+3
  3588  000FEA  0100               	movlb	0	; () banked
  3589  000FEC  519E               	movf	sprintf@c& (0+255),w,b
  3590  000FEE  0D04               	mullw	4
  3591  000FF0  0E69               	movlw	low _dpowers
  3592  000FF2  24F3               	addwf	prodl,w,c
  3593  000FF4  6EF6               	movwf	tblptrl,c
  3594  000FF6  0E08               	movlw	high _dpowers
  3595  000FF8  20F4               	addwfc	prodh,w,c
  3596  000FFA  6EF7               	movwf	tblptrh,c
  3597  000FFC                     	if	0	;There are less than 3 active tblptr bytes
  3598  000FFC                     	endif
  3599  000FFC  0009               	tblrd		*+
  3600  000FFE  CFF5 F013          	movff	tablat,___llmod@divisor
  3601  001002  0009               	tblrd		*+
  3602  001004  CFF5 F014          	movff	tablat,___llmod@divisor+1
  3603  001008  0009               	tblrd		*+
  3604  00100A  CFF5 F015          	movff	tablat,___llmod@divisor+2
  3605  00100E  000A               	tblrd		*-
  3606  001010  CFF5 F016          	movff	tablat,___llmod@divisor+3
  3607  001014  ECFD  F01A         	call	___llmod	;wreg free
  3608  001018  C00F  F08E         	movff	?___llmod,sprintf@val
  3609  00101C  C010  F08F         	movff	?___llmod+1,sprintf@val+1
  3610  001020  C011  F090         	movff	?___llmod+2,sprintf@val+2
  3611  001024  C012  F091         	movff	?___llmod+3,sprintf@val+3
  3612  001028                     l4722:
  3613  001028  0100               	movlb	0	; () banked
  3614  00102A  079E               	decf	sprintf@c& (0+255),f,b
  3615  00102C  0100               	movlb	0	; () banked
  3616  00102E  299E               	incf	sprintf@c& (0+255),w,b
  3617  001030  B4D8               	btfsc	status,2,c
  3618  001032  D00E               	goto	l4730
  3619  001034  D786               	goto	l4712
  3620  001036                     l4724:
  3621                           
  3622                           ; BSR set to: 0
  3623                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  3624  001036  C07C  FFD9         	movff	sprintf@sp,fsr2l
  3625  00103A  C07D  FFDA         	movff	sprintf@sp+1,fsr2h
  3626  00103E  0E30               	movlw	48
  3627  001040  6EDF               	movwf	indf2,c
  3628                           
  3629                           ; BSR set to: 0
  3630  001042  0100               	movlb	0	; () banked
  3631  001044  4B7C               	infsnz	sprintf@sp& (0+255),f,b
  3632  001046  2B7D               	incf	(sprintf@sp+1)& (0+255),f,b
  3633                           
  3634                           ; BSR set to: 0
  3635                           ;doprnt.c: 1237: prec--;
  3636  001048  0100               	movlb	0	; () banked
  3637  00104A  0798               	decf	sprintf@prec& (0+255),f,b
  3638  00104C  A0D8               	btfss	status,0,c
  3639  00104E  0799               	decf	(sprintf@prec+1)& (0+255),f,b
  3640  001050                     l4730:
  3641                           
  3642                           ; BSR set to: 0
  3643  001050  0100               	movlb	0	; () banked
  3644  001052  5198               	movf	sprintf@prec& (0+255),w,b
  3645  001054  0100               	movlb	0	; () banked
  3646  001056  1199               	iorwf	(sprintf@prec+1)& (0+255),w,b
  3647  001058  B4D8               	btfsc	status,2,c
  3648  00105A  D059               	goto	l4752
  3649  00105C  D7EC               	goto	l4724
  3650  00105E                     l4732:
  3651                           
  3652                           ; BSR set to: 0
  3653                           ;doprnt.c: 1246: }
  3654                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  3655  00105E  0100               	movlb	0	; () banked
  3656  001060  5198               	movf	sprintf@prec& (0+255),w,b
  3657  001062  0100               	movlb	0	; () banked
  3658  001064  1199               	iorwf	(sprintf@prec+1)& (0+255),w,b
  3659  001066  A4D8               	btfss	status,2,c
  3660  001068  D00D               	goto	l4738
  3661                           
  3662                           ; BSR set to: 0
  3663  00106A  0100               	movlb	0	; () banked
  3664  00106C  518E               	movf	sprintf@val& (0+255),w,b
  3665  00106E  0100               	movlb	0	; () banked
  3666  001070  118F               	iorwf	(sprintf@val+1)& (0+255),w,b
  3667  001072  0100               	movlb	0	; () banked
  3668  001074  1190               	iorwf	(sprintf@val+2)& (0+255),w,b
  3669  001076  0100               	movlb	0	; () banked
  3670  001078  1191               	iorwf	(sprintf@val+3)& (0+255),w,b
  3671  00107A  A4D8               	btfss	status,2,c
  3672  00107C  D003               	goto	l4738
  3673                           
  3674                           ; BSR set to: 0
  3675                           ;doprnt.c: 1291: prec++;
  3676  00107E  0100               	movlb	0	; () banked
  3677  001080  4B98               	infsnz	sprintf@prec& (0+255),f,b
  3678  001082  2B99               	incf	(sprintf@prec+1)& (0+255),f,b
  3679  001084                     l4738:
  3680                           
  3681                           ; BSR set to: 0
  3682                           ;doprnt.c: 1339: if(c < prec)
  3683  001084  0E80               	movlw	128
  3684  001086  0100               	movlb	0	; () banked
  3685  001088  BF9E               	btfsc	sprintf@c& (0+255),7,b
  3686  00108A  0E7F               	movlw	127
  3687  00108C  0100               	movlb	0	; () banked
  3688  00108E  6F84               	movwf	??_sprintf& (0+255),b
  3689  001090  0100               	movlb	0	; () banked
  3690  001092  5198               	movf	sprintf@prec& (0+255),w,b
  3691  001094  0100               	movlb	0	; () banked
  3692  001096  5D9E               	subwf	sprintf@c& (0+255),w,b
  3693  001098  0100               	movlb	0	; () banked
  3694  00109A  5199               	movf	(sprintf@prec+1)& (0+255),w,b
  3695  00109C  0A80               	xorlw	128
  3696  00109E  0100               	movlb	0	; () banked
  3697  0010A0  5984               	subwfb	??_sprintf& (0+255),w,b
  3698  0010A2  B0D8               	btfsc	status,0,c
  3699  0010A4  D003               	goto	l4742
  3700                           
  3701                           ; BSR set to: 0
  3702                           ;doprnt.c: 1340: c = prec;
  3703  0010A6  C098  F09E         	movff	sprintf@prec,sprintf@c
  3704  0010AA  D018               	goto	l4746
  3705  0010AC                     l4742:
  3706                           
  3707                           ; BSR set to: 0
  3708                           ;doprnt.c: 1341: else if(prec < c)
  3709  0010AC  0100               	movlb	0	; () banked
  3710  0010AE  5199               	movf	(sprintf@prec+1)& (0+255),w,b
  3711  0010B0  0A80               	xorlw	128
  3712  0010B2  0100               	movlb	0	; () banked
  3713  0010B4  6F84               	movwf	??_sprintf& (0+255),b
  3714  0010B6  0100               	movlb	0	; () banked
  3715  0010B8  519E               	movf	sprintf@c& (0+255),w,b
  3716  0010BA  0100               	movlb	0	; () banked
  3717  0010BC  5D98               	subwf	sprintf@prec& (0+255),w,b
  3718  0010BE  0E80               	movlw	128
  3719  0010C0  0100               	movlb	0	; () banked
  3720  0010C2  BF9E               	btfsc	sprintf@c& (0+255),7,b
  3721  0010C4  0E7F               	movlw	127
  3722  0010C6  0100               	movlb	0	; () banked
  3723  0010C8  5984               	subwfb	??_sprintf& (0+255),w,b
  3724  0010CA  B0D8               	btfsc	status,0,c
  3725  0010CC  D007               	goto	l4746
  3726                           
  3727                           ; BSR set to: 0
  3728                           ;doprnt.c: 1342: prec = c;
  3729  0010CE  0100               	movlb	0	; () banked
  3730  0010D0  519E               	movf	sprintf@c& (0+255),w,b
  3731  0010D2  0100               	movlb	0	; () banked
  3732  0010D4  6F98               	movwf	sprintf@prec& (0+255),b
  3733  0010D6  6B99               	clrf	(sprintf@prec+1)& (0+255),b
  3734  0010D8  BF98               	btfsc	sprintf@prec& (0+255),7,b
  3735  0010DA  0799               	decf	(sprintf@prec+1)& (0+255),f,b
  3736  0010DC                     l4746:
  3737                           
  3738                           ; BSR set to: 0
  3739                           ;doprnt.c: 1422: {
  3740                           ;doprnt.c: 1438: if(flag & 0x03)
  3741  0010DC  0E03               	movlw	3
  3742  0010DE  0100               	movlb	0	; () banked
  3743  0010E0  158C               	andwf	sprintf@flag& (0+255),w,b
  3744  0010E2  0100               	movlb	0	; () banked
  3745  0010E4  6F84               	movwf	??_sprintf& (0+255),b
  3746  0010E6  0E00               	movlw	0
  3747  0010E8  0100               	movlb	0	; () banked
  3748  0010EA  158D               	andwf	(sprintf@flag+1)& (0+255),w,b
  3749  0010EC  0100               	movlb	0	; () banked
  3750  0010EE  6F85               	movwf	(??_sprintf+1)& (0+255),b
  3751  0010F0  0100               	movlb	0	; () banked
  3752  0010F2  5184               	movf	??_sprintf& (0+255),w,b
  3753  0010F4  0100               	movlb	0	; () banked
  3754  0010F6  1185               	iorwf	(??_sprintf+1)& (0+255),w,b
  3755  0010F8  B4D8               	btfsc	status,2,c
  3756  0010FA  D009               	goto	l4752
  3757                           
  3758                           ; BSR set to: 0
  3759                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  3760  0010FC  C07C  FFD9         	movff	sprintf@sp,fsr2l
  3761  001100  C07D  FFDA         	movff	sprintf@sp+1,fsr2h
  3762  001104  0E2D               	movlw	45
  3763  001106  6EDF               	movwf	indf2,c
  3764  001108                     l4750:
  3765                           
  3766                           ; BSR set to: 0
  3767  001108  0100               	movlb	0	; () banked
  3768  00110A  4B7C               	infsnz	sprintf@sp& (0+255),f,b
  3769  00110C  2B7D               	incf	(sprintf@sp+1)& (0+255),f,b
  3770  00110E                     l4752:
  3771                           
  3772                           ; BSR set to: 0
  3773  00110E  C07E  FFF6         	movff	sprintf@f,tblptrl
  3774  001112  C07F  FFF7         	movff	sprintf@f+1,tblptrh
  3775  001116  0100               	movlb	0	; () banked
  3776  001118  4B7E               	infsnz	sprintf@f& (0+255),f,b
  3777  00111A  2B7F               	incf	(sprintf@f+1)& (0+255),f,b
  3778  00111C                     	if	0	;tblptru may be non-zero
  3779  00111C                     	endif
  3780  00111C                     	if	0	;tblptru may be non-zero
  3781  00111C                     	endif
  3782  00111C  0008               	tblrd		*
  3783  00111E  CFF5 F09E          	movff	tablat,sprintf@c
  3784  001122  0100               	movlb	0	; () banked
  3785  001124  519E               	movf	sprintf@c& (0+255),w,b
  3786  001126  A4D8               	btfss	status,2,c
  3787  001128  EF85  F004         	goto	l4554
  3788  00112C                     l4754:
  3789                           
  3790                           ; BSR set to: 0
  3791                           ;doprnt.c: 1538: *sp = 0;
  3792  00112C  C07C  FFD9         	movff	sprintf@sp,fsr2l
  3793  001130  C07D  FFDA         	movff	sprintf@sp+1,fsr2h
  3794  001134  0E00               	movlw	0
  3795  001136  6EDF               	movwf	indf2,c
  3796  001138  0012               	return	
  3797  00113A                     __end_of_sprintf:
  3798                           	opt stack 0
  3799                           tblptru	equ	0xFF8
  3800                           tblptrh	equ	0xFF7
  3801                           tblptrl	equ	0xFF6
  3802                           tablat	equ	0xFF5
  3803                           prodh	equ	0xFF4
  3804                           prodl	equ	0xFF3
  3805                           intcon	equ	0xFF2
  3806                           postinc0	equ	0xFEE
  3807                           wreg	equ	0xFE8
  3808                           indf1	equ	0xFE7
  3809                           plusw1	equ	0xFE3
  3810                           fsr1h	equ	0xFE2
  3811                           fsr1l	equ	0xFE1
  3812                           indf2	equ	0xFDF
  3813                           postinc2	equ	0xFDE
  3814                           plusw2	equ	0xFDB
  3815                           fsr2h	equ	0xFDA
  3816                           fsr2l	equ	0xFD9
  3817                           status	equ	0xFD8
  3818                           
  3819 ;; *************** function _scale *****************
  3820 ;; Defined at:
  3821 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  3822 ;; Parameters:    Size  Location     Type
  3823 ;;  scl             1    wreg     char 
  3824 ;; Auto vars:     Size  Location     Type
  3825 ;;  scl             1   61[COMRAM] char 
  3826 ;; Return value:  Size  Location     Type
  3827 ;;                  4   53[COMRAM] char 
  3828 ;; Registers used:
  3829 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3830 ;; Tracked objects:
  3831 ;;		On entry : 0/0
  3832 ;;		On exit  : 0/0
  3833 ;;		Unchanged: 0/0
  3834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3835 ;;      Params:         4       0       0       0       0       0       0       0       0
  3836 ;;      Locals:         5       0       0       0       0       0       0       0       0
  3837 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3838 ;;      Totals:         9       0       0       0       0       0       0       0       0
  3839 ;;Total ram usage:        9 bytes
  3840 ;; Hardware stack levels used:    1
  3841 ;; Hardware stack levels required when called:    2
  3842 ;; This function calls:
  3843 ;;		___awdiv
  3844 ;;		___awmod
  3845 ;;		___flmul
  3846 ;; This function is called by:
  3847 ;;		_sprintf
  3848 ;; This function uses a non-reentrant model
  3849 ;;
  3850                           
  3851                           	psect	text10
  3852  0015E2                     __ptext10:
  3853                           	opt stack 0
  3854  0015E2                     _scale:
  3855                           	opt stack 26
  3856                           
  3857                           ; BSR set to: 0
  3858                           ;incstack = 0
  3859                           ;scale@scl stored from wreg
  3860  0015E2  6E3E               	movwf	scale@scl,c
  3861                           
  3862                           ;doprnt.c: 428: if(scl < 0) {
  3863  0015E4  AE3E               	btfss	scale@scl,7,c
  3864  0015E6  D105               	goto	l3152
  3865                           
  3866                           ;doprnt.c: 429: scl = -scl;
  3867  0015E8  6C3E               	negf	scale@scl,c
  3868                           
  3869                           ;doprnt.c: 430: if(scl>=110)
  3870  0015EA  503E               	movf	scale@scl,w,c
  3871  0015EC  0A80               	xorlw	128
  3872  0015EE  0F12               	addlw	-238
  3873  0015F0  A0D8               	btfss	status,0,c
  3874  0015F2  D098               	goto	l3142
  3875                           
  3876                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  3877  0015F4  0E00               	movlw	0
  3878  0015F6  6E18               	movwf	___awdiv@divisor+1,c
  3879  0015F8  0E0A               	movlw	10
  3880  0015FA  6E17               	movwf	___awdiv@divisor,c
  3881  0015FC  0E00               	movlw	0
  3882  0015FE  6E12               	movwf	___awmod@divisor+1,c
  3883  001600  0E64               	movlw	100
  3884  001602  6E11               	movwf	___awmod@divisor,c
  3885  001604  503E               	movf	scale@scl,w,c
  3886  001606  6E0F               	movwf	___awmod@dividend,c
  3887  001608  6A10               	clrf	___awmod@dividend+1,c
  3888  00160A  BE0F               	btfsc	___awmod@dividend,7,c
  3889  00160C  0610               	decf	___awmod@dividend+1,f,c
  3890  00160E  EC8D  F01A         	call	___awmod	;wreg free
  3891  001612  C00F  F015         	movff	?___awmod,___awdiv@dividend
  3892  001616  C010  F016         	movff	?___awmod+1,___awdiv@dividend+1
  3893  00161A  EC0A  F01A         	call	___awdiv	;wreg free
  3894  00161E  90D8               	bcf	status,0,c
  3895  001620  3615               	rlcf	?___awdiv,f,c
  3896  001622  3616               	rlcf	?___awdiv+1,f,c
  3897  001624  90D8               	bcf	status,0,c
  3898  001626  3615               	rlcf	?___awdiv,f,c
  3899  001628  3616               	rlcf	?___awdiv+1,f,c
  3900  00162A  0E24               	movlw	36
  3901  00162C  2615               	addwf	?___awdiv,f,c
  3902  00162E  0E00               	movlw	0
  3903  001630  2216               	addwfc	?___awdiv+1,f,c
  3904  001632  0E01               	movlw	low __npowers_
  3905  001634  2415               	addwf	?___awdiv,w,c
  3906  001636  6EF6               	movwf	tblptrl,c
  3907  001638  0E08               	movlw	high __npowers_
  3908  00163A  2016               	addwfc	?___awdiv+1,w,c
  3909  00163C  6EF7               	movwf	tblptrh,c
  3910  00163E                     	if	0	;There are less than 3 active tblptr bytes
  3911  00163E                     	endif
  3912  00163E  0009               	tblrd		*+
  3913  001640  CFF5 F021          	movff	tablat,___flmul@a
  3914  001644  0009               	tblrd		*+
  3915  001646  CFF5 F022          	movff	tablat,___flmul@a+1
  3916  00164A  0009               	tblrd		*+
  3917  00164C  CFF5 F023          	movff	tablat,___flmul@a+2
  3918  001650  000A               	tblrd		*-
  3919  001652  CFF5 F024          	movff	tablat,___flmul@a+3
  3920  001656  0E00               	movlw	0
  3921  001658  6E18               	movwf	___awdiv@divisor+1,c
  3922  00165A  0E64               	movlw	100
  3923  00165C  6E17               	movwf	___awdiv@divisor,c
  3924  00165E  503E               	movf	scale@scl,w,c
  3925  001660  6E15               	movwf	___awdiv@dividend,c
  3926  001662  6A16               	clrf	___awdiv@dividend+1,c
  3927  001664  BE15               	btfsc	___awdiv@dividend,7,c
  3928  001666  0616               	decf	___awdiv@dividend+1,f,c
  3929  001668  EC0A  F01A         	call	___awdiv	;wreg free
  3930  00166C  90D8               	bcf	status,0,c
  3931  00166E  3615               	rlcf	?___awdiv,f,c
  3932  001670  3616               	rlcf	?___awdiv+1,f,c
  3933  001672  90D8               	bcf	status,0,c
  3934  001674  3615               	rlcf	?___awdiv,f,c
  3935  001676  3616               	rlcf	?___awdiv+1,f,c
  3936  001678  0E48               	movlw	72
  3937  00167A  2615               	addwf	?___awdiv,f,c
  3938  00167C  0E00               	movlw	0
  3939  00167E  2216               	addwfc	?___awdiv+1,f,c
  3940  001680  0E01               	movlw	low __npowers_
  3941  001682  2415               	addwf	?___awdiv,w,c
  3942  001684  6EF6               	movwf	tblptrl,c
  3943  001686  0E08               	movlw	high __npowers_
  3944  001688  2016               	addwfc	?___awdiv+1,w,c
  3945  00168A  6EF7               	movwf	tblptrh,c
  3946  00168C                     	if	0	;There are less than 3 active tblptr bytes
  3947  00168C                     	endif
  3948  00168C  0009               	tblrd		*+
  3949  00168E  CFF5 F01D          	movff	tablat,___flmul@b
  3950  001692  0009               	tblrd		*+
  3951  001694  CFF5 F01E          	movff	tablat,___flmul@b+1
  3952  001698  0009               	tblrd		*+
  3953  00169A  CFF5 F01F          	movff	tablat,___flmul@b+2
  3954  00169E  000A               	tblrd		*-
  3955  0016A0  CFF5 F020          	movff	tablat,___flmul@b+3
  3956  0016A4  ECFD  F00C         	call	___flmul	;wreg free
  3957  0016A8  C01D  F03A         	movff	?___flmul,_scale$1356
  3958  0016AC  C01E  F03B         	movff	?___flmul+1,_scale$1356+1
  3959  0016B0  C01F  F03C         	movff	?___flmul+2,_scale$1356+2
  3960  0016B4  C020  F03D         	movff	?___flmul+3,_scale$1356+3
  3961                           
  3962                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  3963  0016B8  C03A  F01D         	movff	_scale$1356,___flmul@b
  3964  0016BC  C03B  F01E         	movff	_scale$1356+1,___flmul@b+1
  3965  0016C0  C03C  F01F         	movff	_scale$1356+2,___flmul@b+2
  3966  0016C4  C03D  F020         	movff	_scale$1356+3,___flmul@b+3
  3967  0016C8  0E00               	movlw	0
  3968  0016CA  6E12               	movwf	___awmod@divisor+1,c
  3969  0016CC  0E0A               	movlw	10
  3970  0016CE  6E11               	movwf	___awmod@divisor,c
  3971  0016D0  503E               	movf	scale@scl,w,c
  3972  0016D2  6E0F               	movwf	___awmod@dividend,c
  3973  0016D4  6A10               	clrf	___awmod@dividend+1,c
  3974  0016D6  BE0F               	btfsc	___awmod@dividend,7,c
  3975  0016D8  0610               	decf	___awmod@dividend+1,f,c
  3976  0016DA  EC8D  F01A         	call	___awmod	;wreg free
  3977  0016DE  90D8               	bcf	status,0,c
  3978  0016E0  360F               	rlcf	?___awmod,f,c
  3979  0016E2  3610               	rlcf	?___awmod+1,f,c
  3980  0016E4  90D8               	bcf	status,0,c
  3981  0016E6  360F               	rlcf	?___awmod,f,c
  3982  0016E8  3610               	rlcf	?___awmod+1,f,c
  3983  0016EA  0E01               	movlw	low __npowers_
  3984  0016EC  240F               	addwf	?___awmod,w,c
  3985  0016EE  6EF6               	movwf	tblptrl,c
  3986  0016F0  0E08               	movlw	high __npowers_
  3987  0016F2  2010               	addwfc	?___awmod+1,w,c
  3988  0016F4  6EF7               	movwf	tblptrh,c
  3989  0016F6                     	if	0	;There are less than 3 active tblptr bytes
  3990  0016F6                     	endif
  3991  0016F6  0009               	tblrd		*+
  3992  0016F8  CFF5 F021          	movff	tablat,___flmul@a
  3993  0016FC  0009               	tblrd		*+
  3994  0016FE  CFF5 F022          	movff	tablat,___flmul@a+1
  3995  001702  0009               	tblrd		*+
  3996  001704  CFF5 F023          	movff	tablat,___flmul@a+2
  3997  001708  000A               	tblrd		*-
  3998  00170A  CFF5 F024          	movff	tablat,___flmul@a+3
  3999  00170E  ECFD  F00C         	call	___flmul	;wreg free
  4000  001712  C01D  F036         	movff	?___flmul,?_scale
  4001  001716  C01E  F037         	movff	?___flmul+1,?_scale+1
  4002  00171A  C01F  F038         	movff	?___flmul+2,?_scale+2
  4003  00171E  C020  F039         	movff	?___flmul+3,?_scale+3
  4004  001722  0012               	return	
  4005  001724                     l3142:
  4006                           
  4007                           ;doprnt.c: 432: else if(scl > 10)
  4008  001724  503E               	movf	scale@scl,w,c
  4009  001726  0A80               	xorlw	128
  4010  001728  0F75               	addlw	-139
  4011  00172A  A0D8               	btfss	status,0,c
  4012  00172C  D04D               	goto	l3148
  4013                           
  4014                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  4015  00172E  0E00               	movlw	0
  4016  001730  6E18               	movwf	___awdiv@divisor+1,c
  4017  001732  0E0A               	movlw	10
  4018  001734  6E17               	movwf	___awdiv@divisor,c
  4019  001736  503E               	movf	scale@scl,w,c
  4020  001738  6E15               	movwf	___awdiv@dividend,c
  4021  00173A  6A16               	clrf	___awdiv@dividend+1,c
  4022  00173C  BE15               	btfsc	___awdiv@dividend,7,c
  4023  00173E  0616               	decf	___awdiv@dividend+1,f,c
  4024  001740  EC0A  F01A         	call	___awdiv	;wreg free
  4025  001744  90D8               	bcf	status,0,c
  4026  001746  3615               	rlcf	?___awdiv,f,c
  4027  001748  3616               	rlcf	?___awdiv+1,f,c
  4028  00174A  90D8               	bcf	status,0,c
  4029  00174C  3615               	rlcf	?___awdiv,f,c
  4030  00174E  3616               	rlcf	?___awdiv+1,f,c
  4031  001750  0E24               	movlw	36
  4032  001752  2615               	addwf	?___awdiv,f,c
  4033  001754  0E00               	movlw	0
  4034  001756  2216               	addwfc	?___awdiv+1,f,c
  4035  001758  0E01               	movlw	low __npowers_
  4036  00175A  2415               	addwf	?___awdiv,w,c
  4037  00175C  6EF6               	movwf	tblptrl,c
  4038  00175E  0E08               	movlw	high __npowers_
  4039  001760  2016               	addwfc	?___awdiv+1,w,c
  4040  001762  6EF7               	movwf	tblptrh,c
  4041  001764                     	if	0	;There are less than 3 active tblptr bytes
  4042  001764                     	endif
  4043  001764  0009               	tblrd		*+
  4044  001766  CFF5 F01D          	movff	tablat,___flmul@b
  4045  00176A  0009               	tblrd		*+
  4046  00176C  CFF5 F01E          	movff	tablat,___flmul@b+1
  4047  001770  0009               	tblrd		*+
  4048  001772  CFF5 F01F          	movff	tablat,___flmul@b+2
  4049  001776  000A               	tblrd		*-
  4050  001778  CFF5 F020          	movff	tablat,___flmul@b+3
  4051  00177C  0E00               	movlw	0
  4052  00177E  6E12               	movwf	___awmod@divisor+1,c
  4053  001780  0E0A               	movlw	10
  4054  001782  6E11               	movwf	___awmod@divisor,c
  4055  001784  503E               	movf	scale@scl,w,c
  4056  001786  6E0F               	movwf	___awmod@dividend,c
  4057  001788  6A10               	clrf	___awmod@dividend+1,c
  4058  00178A  BE0F               	btfsc	___awmod@dividend,7,c
  4059  00178C  0610               	decf	___awmod@dividend+1,f,c
  4060  00178E  EC8D  F01A         	call	___awmod	;wreg free
  4061  001792  90D8               	bcf	status,0,c
  4062  001794  360F               	rlcf	?___awmod,f,c
  4063  001796  3610               	rlcf	?___awmod+1,f,c
  4064  001798  90D8               	bcf	status,0,c
  4065  00179A  360F               	rlcf	?___awmod,f,c
  4066  00179C  3610               	rlcf	?___awmod+1,f,c
  4067  00179E  0E01               	movlw	low __npowers_
  4068  0017A0  240F               	addwf	?___awmod,w,c
  4069  0017A2  6EF6               	movwf	tblptrl,c
  4070  0017A4  0E08               	movlw	high __npowers_
  4071  0017A6  2010               	addwfc	?___awmod+1,w,c
  4072  0017A8  6EF7               	movwf	tblptrh,c
  4073  0017AA                     	if	0	;There are less than 3 active tblptr bytes
  4074  0017AA                     	endif
  4075  0017AA  0009               	tblrd		*+
  4076  0017AC  CFF5 F021          	movff	tablat,___flmul@a
  4077  0017B0  0009               	tblrd		*+
  4078  0017B2  CFF5 F022          	movff	tablat,___flmul@a+1
  4079  0017B6  0009               	tblrd		*+
  4080  0017B8  CFF5 F023          	movff	tablat,___flmul@a+2
  4081  0017BC  000A               	tblrd		*-
  4082  0017BE  CFF5 F024          	movff	tablat,___flmul@a+3
  4083  0017C2  ECFD  F00C         	call	___flmul	;wreg free
  4084  0017C6  D7A5               	goto	L4
  4085  0017C8                     l3148:
  4086                           
  4087                           ;doprnt.c: 434: return _npowers_[scl];
  4088  0017C8  503E               	movf	scale@scl,w,c
  4089  0017CA  0D04               	mullw	4
  4090  0017CC  0E01               	movlw	low __npowers_
  4091  0017CE  24F3               	addwf	prodl,w,c
  4092  0017D0  6EF6               	movwf	tblptrl,c
  4093  0017D2  0E08               	movlw	high __npowers_
  4094  0017D4  20F4               	addwfc	prodh,w,c
  4095  0017D6  6EF7               	movwf	tblptrh,c
  4096  0017D8                     	if	0	;There are less than 3 active tblptr bytes
  4097  0017D8                     	endif
  4098  0017D8  0009               	tblrd		*+
  4099  0017DA  CFF5 F036          	movff	tablat,?_scale
  4100  0017DE  0009               	tblrd		*+
  4101  0017E0  CFF5 F037          	movff	tablat,?_scale+1
  4102  0017E4  0009               	tblrd		*+
  4103  0017E6  CFF5 F038          	movff	tablat,?_scale+2
  4104  0017EA  000A               	tblrd		*-
  4105  0017EC  CFF5 F039          	movff	tablat,?_scale+3
  4106  0017F0  0012               	return	
  4107  0017F2                     l3152:
  4108                           
  4109                           ;doprnt.c: 435: }
  4110                           ;doprnt.c: 436: if(scl>=110)
  4111  0017F2  503E               	movf	scale@scl,w,c
  4112  0017F4  0A80               	xorlw	128
  4113  0017F6  0F12               	addlw	-238
  4114  0017F8  A0D8               	btfss	status,0,c
  4115  0017FA  D098               	goto	l3160
  4116                           
  4117                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  4118  0017FC  0E00               	movlw	0
  4119  0017FE  6E18               	movwf	___awdiv@divisor+1,c
  4120  001800  0E0A               	movlw	10
  4121  001802  6E17               	movwf	___awdiv@divisor,c
  4122  001804  0E00               	movlw	0
  4123  001806  6E12               	movwf	___awmod@divisor+1,c
  4124  001808  0E64               	movlw	100
  4125  00180A  6E11               	movwf	___awmod@divisor,c
  4126  00180C  503E               	movf	scale@scl,w,c
  4127  00180E  6E0F               	movwf	___awmod@dividend,c
  4128  001810  6A10               	clrf	___awmod@dividend+1,c
  4129  001812  BE0F               	btfsc	___awmod@dividend,7,c
  4130  001814  0610               	decf	___awmod@dividend+1,f,c
  4131  001816  EC8D  F01A         	call	___awmod	;wreg free
  4132  00181A  C00F  F015         	movff	?___awmod,___awdiv@dividend
  4133  00181E  C010  F016         	movff	?___awmod+1,___awdiv@dividend+1
  4134  001822  EC0A  F01A         	call	___awdiv	;wreg free
  4135  001826  90D8               	bcf	status,0,c
  4136  001828  3615               	rlcf	?___awdiv,f,c
  4137  00182A  3616               	rlcf	?___awdiv+1,f,c
  4138  00182C  90D8               	bcf	status,0,c
  4139  00182E  3615               	rlcf	?___awdiv,f,c
  4140  001830  3616               	rlcf	?___awdiv+1,f,c
  4141  001832  0E24               	movlw	36
  4142  001834  2615               	addwf	?___awdiv,f,c
  4143  001836  0E00               	movlw	0
  4144  001838  2216               	addwfc	?___awdiv+1,f,c
  4145  00183A  0E35               	movlw	low __powers_
  4146  00183C  2415               	addwf	?___awdiv,w,c
  4147  00183E  6EF6               	movwf	tblptrl,c
  4148  001840  0E08               	movlw	high __powers_
  4149  001842  2016               	addwfc	?___awdiv+1,w,c
  4150  001844  6EF7               	movwf	tblptrh,c
  4151  001846                     	if	0	;There are less than 3 active tblptr bytes
  4152  001846                     	endif
  4153  001846  0009               	tblrd		*+
  4154  001848  CFF5 F021          	movff	tablat,___flmul@a
  4155  00184C  0009               	tblrd		*+
  4156  00184E  CFF5 F022          	movff	tablat,___flmul@a+1
  4157  001852  0009               	tblrd		*+
  4158  001854  CFF5 F023          	movff	tablat,___flmul@a+2
  4159  001858  000A               	tblrd		*-
  4160  00185A  CFF5 F024          	movff	tablat,___flmul@a+3
  4161  00185E  0E00               	movlw	0
  4162  001860  6E18               	movwf	___awdiv@divisor+1,c
  4163  001862  0E64               	movlw	100
  4164  001864  6E17               	movwf	___awdiv@divisor,c
  4165  001866  503E               	movf	scale@scl,w,c
  4166  001868  6E15               	movwf	___awdiv@dividend,c
  4167  00186A  6A16               	clrf	___awdiv@dividend+1,c
  4168  00186C  BE15               	btfsc	___awdiv@dividend,7,c
  4169  00186E  0616               	decf	___awdiv@dividend+1,f,c
  4170  001870  EC0A  F01A         	call	___awdiv	;wreg free
  4171  001874  90D8               	bcf	status,0,c
  4172  001876  3615               	rlcf	?___awdiv,f,c
  4173  001878  3616               	rlcf	?___awdiv+1,f,c
  4174  00187A  90D8               	bcf	status,0,c
  4175  00187C  3615               	rlcf	?___awdiv,f,c
  4176  00187E  3616               	rlcf	?___awdiv+1,f,c
  4177  001880  0E48               	movlw	72
  4178  001882  2615               	addwf	?___awdiv,f,c
  4179  001884  0E00               	movlw	0
  4180  001886  2216               	addwfc	?___awdiv+1,f,c
  4181  001888  0E35               	movlw	low __powers_
  4182  00188A  2415               	addwf	?___awdiv,w,c
  4183  00188C  6EF6               	movwf	tblptrl,c
  4184  00188E  0E08               	movlw	high __powers_
  4185  001890  2016               	addwfc	?___awdiv+1,w,c
  4186  001892  6EF7               	movwf	tblptrh,c
  4187  001894                     	if	0	;There are less than 3 active tblptr bytes
  4188  001894                     	endif
  4189  001894  0009               	tblrd		*+
  4190  001896  CFF5 F01D          	movff	tablat,___flmul@b
  4191  00189A  0009               	tblrd		*+
  4192  00189C  CFF5 F01E          	movff	tablat,___flmul@b+1
  4193  0018A0  0009               	tblrd		*+
  4194  0018A2  CFF5 F01F          	movff	tablat,___flmul@b+2
  4195  0018A6  000A               	tblrd		*-
  4196  0018A8  CFF5 F020          	movff	tablat,___flmul@b+3
  4197  0018AC  ECFD  F00C         	call	___flmul	;wreg free
  4198  0018B0  C01D  F03A         	movff	?___flmul,_scale$1356
  4199  0018B4  C01E  F03B         	movff	?___flmul+1,_scale$1356+1
  4200  0018B8  C01F  F03C         	movff	?___flmul+2,_scale$1356+2
  4201  0018BC  C020  F03D         	movff	?___flmul+3,_scale$1356+3
  4202                           
  4203                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  4204  0018C0  C03A  F01D         	movff	_scale$1356,___flmul@b
  4205  0018C4  C03B  F01E         	movff	_scale$1356+1,___flmul@b+1
  4206  0018C8  C03C  F01F         	movff	_scale$1356+2,___flmul@b+2
  4207  0018CC  C03D  F020         	movff	_scale$1356+3,___flmul@b+3
  4208  0018D0  0E00               	movlw	0
  4209  0018D2  6E12               	movwf	___awmod@divisor+1,c
  4210  0018D4  0E0A               	movlw	10
  4211  0018D6  6E11               	movwf	___awmod@divisor,c
  4212  0018D8  503E               	movf	scale@scl,w,c
  4213  0018DA  6E0F               	movwf	___awmod@dividend,c
  4214  0018DC  6A10               	clrf	___awmod@dividend+1,c
  4215  0018DE  BE0F               	btfsc	___awmod@dividend,7,c
  4216  0018E0  0610               	decf	___awmod@dividend+1,f,c
  4217  0018E2  EC8D  F01A         	call	___awmod	;wreg free
  4218  0018E6  90D8               	bcf	status,0,c
  4219  0018E8  360F               	rlcf	?___awmod,f,c
  4220  0018EA  3610               	rlcf	?___awmod+1,f,c
  4221  0018EC  90D8               	bcf	status,0,c
  4222  0018EE  360F               	rlcf	?___awmod,f,c
  4223  0018F0  3610               	rlcf	?___awmod+1,f,c
  4224  0018F2  0E35               	movlw	low __powers_
  4225  0018F4  240F               	addwf	?___awmod,w,c
  4226  0018F6  6EF6               	movwf	tblptrl,c
  4227  0018F8  0E08               	movlw	high __powers_
  4228  0018FA  2010               	addwfc	?___awmod+1,w,c
  4229  0018FC  6EF7               	movwf	tblptrh,c
  4230  0018FE                     	if	0	;There are less than 3 active tblptr bytes
  4231  0018FE                     	endif
  4232  0018FE  0009               	tblrd		*+
  4233  001900  CFF5 F021          	movff	tablat,___flmul@a
  4234  001904  0009               	tblrd		*+
  4235  001906  CFF5 F022          	movff	tablat,___flmul@a+1
  4236  00190A  0009               	tblrd		*+
  4237  00190C  CFF5 F023          	movff	tablat,___flmul@a+2
  4238  001910  000A               	tblrd		*-
  4239  001912  CFF5 F024          	movff	tablat,___flmul@a+3
  4240  001916  ECFD  F00C         	call	___flmul	;wreg free
  4241  00191A  C01D  F036         	movff	?___flmul,?_scale
  4242  00191E  C01E  F037         	movff	?___flmul+1,?_scale+1
  4243  001922  C01F  F038         	movff	?___flmul+2,?_scale+2
  4244  001926  C020  F039         	movff	?___flmul+3,?_scale+3
  4245  00192A  0012               	return	
  4246  00192C                     l3160:
  4247                           
  4248                           ;doprnt.c: 438: else if(scl > 10)
  4249  00192C  503E               	movf	scale@scl,w,c
  4250  00192E  0A80               	xorlw	128
  4251  001930  0F75               	addlw	-139
  4252  001932  A0D8               	btfss	status,0,c
  4253  001934  D04D               	goto	l3166
  4254                           
  4255                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  4256  001936  0E00               	movlw	0
  4257  001938  6E18               	movwf	___awdiv@divisor+1,c
  4258  00193A  0E0A               	movlw	10
  4259  00193C  6E17               	movwf	___awdiv@divisor,c
  4260  00193E  503E               	movf	scale@scl,w,c
  4261  001940  6E15               	movwf	___awdiv@dividend,c
  4262  001942  6A16               	clrf	___awdiv@dividend+1,c
  4263  001944  BE15               	btfsc	___awdiv@dividend,7,c
  4264  001946  0616               	decf	___awdiv@dividend+1,f,c
  4265  001948  EC0A  F01A         	call	___awdiv	;wreg free
  4266  00194C  90D8               	bcf	status,0,c
  4267  00194E  3615               	rlcf	?___awdiv,f,c
  4268  001950  3616               	rlcf	?___awdiv+1,f,c
  4269  001952  90D8               	bcf	status,0,c
  4270  001954  3615               	rlcf	?___awdiv,f,c
  4271  001956  3616               	rlcf	?___awdiv+1,f,c
  4272  001958  0E24               	movlw	36
  4273  00195A  2615               	addwf	?___awdiv,f,c
  4274  00195C  0E00               	movlw	0
  4275  00195E  2216               	addwfc	?___awdiv+1,f,c
  4276  001960  0E35               	movlw	low __powers_
  4277  001962  2415               	addwf	?___awdiv,w,c
  4278  001964  6EF6               	movwf	tblptrl,c
  4279  001966  0E08               	movlw	high __powers_
  4280  001968  2016               	addwfc	?___awdiv+1,w,c
  4281  00196A  6EF7               	movwf	tblptrh,c
  4282  00196C                     	if	0	;There are less than 3 active tblptr bytes
  4283  00196C                     	endif
  4284  00196C  0009               	tblrd		*+
  4285  00196E  CFF5 F01D          	movff	tablat,___flmul@b
  4286  001972  0009               	tblrd		*+
  4287  001974  CFF5 F01E          	movff	tablat,___flmul@b+1
  4288  001978  0009               	tblrd		*+
  4289  00197A  CFF5 F01F          	movff	tablat,___flmul@b+2
  4290  00197E  000A               	tblrd		*-
  4291  001980  CFF5 F020          	movff	tablat,___flmul@b+3
  4292  001984  0E00               	movlw	0
  4293  001986  6E12               	movwf	___awmod@divisor+1,c
  4294  001988  0E0A               	movlw	10
  4295  00198A  6E11               	movwf	___awmod@divisor,c
  4296  00198C  503E               	movf	scale@scl,w,c
  4297  00198E  6E0F               	movwf	___awmod@dividend,c
  4298  001990  6A10               	clrf	___awmod@dividend+1,c
  4299  001992  BE0F               	btfsc	___awmod@dividend,7,c
  4300  001994  0610               	decf	___awmod@dividend+1,f,c
  4301  001996  EC8D  F01A         	call	___awmod	;wreg free
  4302  00199A  90D8               	bcf	status,0,c
  4303  00199C  360F               	rlcf	?___awmod,f,c
  4304  00199E  3610               	rlcf	?___awmod+1,f,c
  4305  0019A0  90D8               	bcf	status,0,c
  4306  0019A2  360F               	rlcf	?___awmod,f,c
  4307  0019A4  3610               	rlcf	?___awmod+1,f,c
  4308  0019A6  0E35               	movlw	low __powers_
  4309  0019A8  240F               	addwf	?___awmod,w,c
  4310  0019AA  6EF6               	movwf	tblptrl,c
  4311  0019AC  0E08               	movlw	high __powers_
  4312  0019AE  2010               	addwfc	?___awmod+1,w,c
  4313  0019B0  6EF7               	movwf	tblptrh,c
  4314  0019B2                     	if	0	;There are less than 3 active tblptr bytes
  4315  0019B2                     	endif
  4316  0019B2  0009               	tblrd		*+
  4317  0019B4  CFF5 F021          	movff	tablat,___flmul@a
  4318  0019B8  0009               	tblrd		*+
  4319  0019BA  CFF5 F022          	movff	tablat,___flmul@a+1
  4320  0019BE  0009               	tblrd		*+
  4321  0019C0  CFF5 F023          	movff	tablat,___flmul@a+2
  4322  0019C4  000A               	tblrd		*-
  4323  0019C6  CFF5 F024          	movff	tablat,___flmul@a+3
  4324  0019CA  ECFD  F00C         	call	___flmul	;wreg free
  4325  0019CE  D7A5               	goto	L5
  4326  0019D0                     l3166:
  4327                           
  4328                           ;doprnt.c: 440: return _powers_[scl];
  4329  0019D0  503E               	movf	scale@scl,w,c
  4330  0019D2  0D04               	mullw	4
  4331  0019D4  0E35               	movlw	low __powers_
  4332  0019D6  24F3               	addwf	prodl,w,c
  4333  0019D8  6EF6               	movwf	tblptrl,c
  4334  0019DA  0E08               	movlw	high __powers_
  4335  0019DC  20F4               	addwfc	prodh,w,c
  4336  0019DE  6EF7               	movwf	tblptrh,c
  4337  0019E0                     	if	0	;There are less than 3 active tblptr bytes
  4338  0019E0                     	endif
  4339  0019E0  0009               	tblrd		*+
  4340  0019E2  CFF5 F036          	movff	tablat,?_scale
  4341  0019E6  0009               	tblrd		*+
  4342  0019E8  CFF5 F037          	movff	tablat,?_scale+1
  4343  0019EC  0009               	tblrd		*+
  4344  0019EE  CFF5 F038          	movff	tablat,?_scale+2
  4345  0019F2  000A               	tblrd		*-
  4346  0019F4  CFF5 F039          	movff	tablat,?_scale+3
  4347  0019F8  0012               	return	
  4348  0019FA                     __end_of_scale:
  4349                           	opt stack 0
  4350                           tblptru	equ	0xFF8
  4351                           tblptrh	equ	0xFF7
  4352                           tblptrl	equ	0xFF6
  4353                           tablat	equ	0xFF5
  4354                           prodh	equ	0xFF4
  4355                           prodl	equ	0xFF3
  4356                           intcon	equ	0xFF2
  4357                           postinc0	equ	0xFEE
  4358                           wreg	equ	0xFE8
  4359                           indf1	equ	0xFE7
  4360                           plusw1	equ	0xFE3
  4361                           fsr1h	equ	0xFE2
  4362                           fsr1l	equ	0xFE1
  4363                           indf2	equ	0xFDF
  4364                           postinc2	equ	0xFDE
  4365                           plusw2	equ	0xFDB
  4366                           fsr2h	equ	0xFDA
  4367                           fsr2l	equ	0xFD9
  4368                           status	equ	0xFD8
  4369                           
  4370 ;; *************** function _isdigit *****************
  4371 ;; Defined at:
  4372 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
  4373 ;; Parameters:    Size  Location     Type
  4374 ;;  c               1    wreg     unsigned char 
  4375 ;; Auto vars:     Size  Location     Type
  4376 ;;  c               1   16[COMRAM] unsigned char 
  4377 ;; Return value:  Size  Location     Type
  4378 ;;		None               void
  4379 ;; Registers used:
  4380 ;;		wreg, status,2, status,0
  4381 ;; Tracked objects:
  4382 ;;		On entry : 0/0
  4383 ;;		On exit  : 0/0
  4384 ;;		Unchanged: 0/0
  4385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4386 ;;      Params:         0       0       0       0       0       0       0       0       0
  4387 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4388 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4389 ;;      Totals:         3       0       0       0       0       0       0       0       0
  4390 ;;Total ram usage:        3 bytes
  4391 ;; Hardware stack levels used:    1
  4392 ;; Hardware stack levels required when called:    1
  4393 ;; This function calls:
  4394 ;;		Nothing
  4395 ;; This function is called by:
  4396 ;;		_sprintf
  4397 ;; This function uses a non-reentrant model
  4398 ;;
  4399                           
  4400                           	psect	text11
  4401  003A00                     __ptext11:
  4402                           	opt stack 0
  4403  003A00                     _isdigit:
  4404                           	opt stack 27
  4405                           
  4406                           ;incstack = 0
  4407                           ;isdigit@c stored from wreg
  4408  003A00  6E11               	movwf	isdigit@c,c
  4409  003A02  0E00               	movlw	0
  4410  003A04  6E10               	movwf	_isdigit$980,c
  4411  003A06  0E3A               	movlw	58
  4412  003A08  6011               	cpfslt	isdigit@c,c
  4413  003A0A  D005               	goto	l3178
  4414  003A0C  0E2F               	movlw	47
  4415  003A0E  6411               	cpfsgt	isdigit@c,c
  4416  003A10  D002               	goto	l3178
  4417  003A12  0E01               	movlw	1
  4418  003A14  6E10               	movwf	_isdigit$980,c
  4419  003A16                     l3178:
  4420  003A16  C010  F00F         	movff	_isdigit$980,??_isdigit
  4421  003A1A  300F               	rrcf	??_isdigit,w,c
  4422  003A1C  0012               	return	
  4423  003A1E                     __end_of_isdigit:
  4424                           	opt stack 0
  4425                           tblptru	equ	0xFF8
  4426                           tblptrh	equ	0xFF7
  4427                           tblptrl	equ	0xFF6
  4428                           tablat	equ	0xFF5
  4429                           prodh	equ	0xFF4
  4430                           prodl	equ	0xFF3
  4431                           intcon	equ	0xFF2
  4432                           postinc0	equ	0xFEE
  4433                           wreg	equ	0xFE8
  4434                           indf1	equ	0xFE7
  4435                           plusw1	equ	0xFE3
  4436                           fsr1h	equ	0xFE2
  4437                           fsr1l	equ	0xFE1
  4438                           indf2	equ	0xFDF
  4439                           postinc2	equ	0xFDE
  4440                           plusw2	equ	0xFDB
  4441                           fsr2h	equ	0xFDA
  4442                           fsr2l	equ	0xFD9
  4443                           status	equ	0xFD8
  4444                           
  4445 ;; *************** function _fround *****************
  4446 ;; Defined at:
  4447 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
  4448 ;; Parameters:    Size  Location     Type
  4449 ;;  prec            1    wreg     unsigned char 
  4450 ;; Auto vars:     Size  Location     Type
  4451 ;;  prec            1   65[COMRAM] unsigned char 
  4452 ;; Return value:  Size  Location     Type
  4453 ;;                  4   53[COMRAM] unsigned char 
  4454 ;; Registers used:
  4455 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4456 ;; Tracked objects:
  4457 ;;		On entry : 0/0
  4458 ;;		On exit  : 0/0
  4459 ;;		Unchanged: 0/0
  4460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4461 ;;      Params:         4       0       0       0       0       0       0       0       0
  4462 ;;      Locals:         9       0       0       0       0       0       0       0       0
  4463 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4464 ;;      Totals:        13       0       0       0       0       0       0       0       0
  4465 ;;Total ram usage:       13 bytes
  4466 ;; Hardware stack levels used:    1
  4467 ;; Hardware stack levels required when called:    2
  4468 ;; This function calls:
  4469 ;;		___awdiv
  4470 ;;		___awmod
  4471 ;;		___flmul
  4472 ;; This function is called by:
  4473 ;;		_sprintf
  4474 ;; This function uses a non-reentrant model
  4475 ;;
  4476                           
  4477                           	psect	text12
  4478  0023A4                     __ptext12:
  4479                           	opt stack 0
  4480  0023A4                     _fround:
  4481                           	opt stack 26
  4482                           
  4483                           ;incstack = 0
  4484                           ;fround@prec stored from wreg
  4485  0023A4  6E42               	movwf	fround@prec,c
  4486                           
  4487                           ;doprnt.c: 413: if(prec>=110)
  4488  0023A6  0E6D               	movlw	109
  4489  0023A8  6442               	cpfsgt	fround@prec,c
  4490  0023AA  D0AC               	goto	l3120
  4491                           
  4492                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  4493  0023AC  0E00               	movlw	0
  4494  0023AE  6E18               	movwf	___awdiv@divisor+1,c
  4495  0023B0  0E0A               	movlw	10
  4496  0023B2  6E17               	movwf	___awdiv@divisor,c
  4497  0023B4  0E00               	movlw	0
  4498  0023B6  6E12               	movwf	___awmod@divisor+1,c
  4499  0023B8  0E64               	movlw	100
  4500  0023BA  6E11               	movwf	___awmod@divisor,c
  4501  0023BC  C042  F00F         	movff	fround@prec,___awmod@dividend
  4502  0023C0  6A10               	clrf	___awmod@dividend+1,c
  4503  0023C2  EC8D  F01A         	call	___awmod	;wreg free
  4504  0023C6  C00F  F015         	movff	?___awmod,___awdiv@dividend
  4505  0023CA  C010  F016         	movff	?___awmod+1,___awdiv@dividend+1
  4506  0023CE  EC0A  F01A         	call	___awdiv	;wreg free
  4507  0023D2  90D8               	bcf	status,0,c
  4508  0023D4  3615               	rlcf	?___awdiv,f,c
  4509  0023D6  3616               	rlcf	?___awdiv+1,f,c
  4510  0023D8  90D8               	bcf	status,0,c
  4511  0023DA  3615               	rlcf	?___awdiv,f,c
  4512  0023DC  3616               	rlcf	?___awdiv+1,f,c
  4513  0023DE  0E24               	movlw	36
  4514  0023E0  2615               	addwf	?___awdiv,f,c
  4515  0023E2  0E00               	movlw	0
  4516  0023E4  2216               	addwfc	?___awdiv+1,f,c
  4517  0023E6  0E01               	movlw	low __npowers_
  4518  0023E8  2415               	addwf	?___awdiv,w,c
  4519  0023EA  6EF6               	movwf	tblptrl,c
  4520  0023EC  0E08               	movlw	high __npowers_
  4521  0023EE  2016               	addwfc	?___awdiv+1,w,c
  4522  0023F0  6EF7               	movwf	tblptrh,c
  4523  0023F2                     	if	0	;There are less than 3 active tblptr bytes
  4524  0023F2                     	endif
  4525  0023F2  0009               	tblrd		*+
  4526  0023F4  CFF5 F021          	movff	tablat,___flmul@a
  4527  0023F8  0009               	tblrd		*+
  4528  0023FA  CFF5 F022          	movff	tablat,___flmul@a+1
  4529  0023FE  0009               	tblrd		*+
  4530  002400  CFF5 F023          	movff	tablat,___flmul@a+2
  4531  002404  000A               	tblrd		*-
  4532  002406  CFF5 F024          	movff	tablat,___flmul@a+3
  4533  00240A  0E00               	movlw	0
  4534  00240C  6E18               	movwf	___awdiv@divisor+1,c
  4535  00240E  0E64               	movlw	100
  4536  002410  6E17               	movwf	___awdiv@divisor,c
  4537  002412  C042  F015         	movff	fround@prec,___awdiv@dividend
  4538  002416  6A16               	clrf	___awdiv@dividend+1,c
  4539  002418  EC0A  F01A         	call	___awdiv	;wreg free
  4540  00241C  90D8               	bcf	status,0,c
  4541  00241E  3615               	rlcf	?___awdiv,f,c
  4542  002420  3616               	rlcf	?___awdiv+1,f,c
  4543  002422  90D8               	bcf	status,0,c
  4544  002424  3615               	rlcf	?___awdiv,f,c
  4545  002426  3616               	rlcf	?___awdiv+1,f,c
  4546  002428  0E48               	movlw	72
  4547  00242A  2615               	addwf	?___awdiv,f,c
  4548  00242C  0E00               	movlw	0
  4549  00242E  2216               	addwfc	?___awdiv+1,f,c
  4550  002430  0E01               	movlw	low __npowers_
  4551  002432  2415               	addwf	?___awdiv,w,c
  4552  002434  6EF6               	movwf	tblptrl,c
  4553  002436  0E08               	movlw	high __npowers_
  4554  002438  2016               	addwfc	?___awdiv+1,w,c
  4555  00243A  6EF7               	movwf	tblptrh,c
  4556  00243C                     	if	0	;There are less than 3 active tblptr bytes
  4557  00243C                     	endif
  4558  00243C  0009               	tblrd		*+
  4559  00243E  CFF5 F01D          	movff	tablat,___flmul@b
  4560  002442  0009               	tblrd		*+
  4561  002444  CFF5 F01E          	movff	tablat,___flmul@b+1
  4562  002448  0009               	tblrd		*+
  4563  00244A  CFF5 F01F          	movff	tablat,___flmul@b+2
  4564  00244E  000A               	tblrd		*-
  4565  002450  CFF5 F020          	movff	tablat,___flmul@b+3
  4566  002454  ECFD  F00C         	call	___flmul	;wreg free
  4567  002458  C01D  F03E         	movff	?___flmul,_fround$1354
  4568  00245C  C01E  F03F         	movff	?___flmul+1,_fround$1354+1
  4569  002460  C01F  F040         	movff	?___flmul+2,_fround$1354+2
  4570  002464  C020  F041         	movff	?___flmul+3,_fround$1354+3
  4571                           
  4572                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  4573  002468  0E00               	movlw	0
  4574  00246A  6E12               	movwf	___awmod@divisor+1,c
  4575  00246C  0E0A               	movlw	10
  4576  00246E  6E11               	movwf	___awmod@divisor,c
  4577  002470  C042  F00F         	movff	fround@prec,___awmod@dividend
  4578  002474  6A10               	clrf	___awmod@dividend+1,c
  4579  002476  EC8D  F01A         	call	___awmod	;wreg free
  4580  00247A  90D8               	bcf	status,0,c
  4581  00247C  360F               	rlcf	?___awmod,f,c
  4582  00247E  3610               	rlcf	?___awmod+1,f,c
  4583  002480  90D8               	bcf	status,0,c
  4584  002482  360F               	rlcf	?___awmod,f,c
  4585  002484  3610               	rlcf	?___awmod+1,f,c
  4586  002486  0E01               	movlw	low __npowers_
  4587  002488  240F               	addwf	?___awmod,w,c
  4588  00248A  6EF6               	movwf	tblptrl,c
  4589  00248C  0E08               	movlw	high __npowers_
  4590  00248E  2010               	addwfc	?___awmod+1,w,c
  4591  002490  6EF7               	movwf	tblptrh,c
  4592  002492                     	if	0	;There are less than 3 active tblptr bytes
  4593  002492                     	endif
  4594  002492  0009               	tblrd		*+
  4595  002494  CFF5 F021          	movff	tablat,___flmul@a
  4596  002498  0009               	tblrd		*+
  4597  00249A  CFF5 F022          	movff	tablat,___flmul@a+1
  4598  00249E  0009               	tblrd		*+
  4599  0024A0  CFF5 F023          	movff	tablat,___flmul@a+2
  4600  0024A4  000A               	tblrd		*-
  4601  0024A6  CFF5 F024          	movff	tablat,___flmul@a+3
  4602  0024AA  C03E  F01D         	movff	_fround$1354,___flmul@b
  4603  0024AE  C03F  F01E         	movff	_fround$1354+1,___flmul@b+1
  4604  0024B2  C040  F01F         	movff	_fround$1354+2,___flmul@b+2
  4605  0024B6  C041  F020         	movff	_fround$1354+3,___flmul@b+3
  4606  0024BA  ECFD  F00C         	call	___flmul	;wreg free
  4607  0024BE  C01D  F03A         	movff	?___flmul,_fround$1355
  4608  0024C2  C01E  F03B         	movff	?___flmul+1,_fround$1355+1
  4609  0024C6  C01F  F03C         	movff	?___flmul+2,_fround$1355+2
  4610  0024CA  C020  F03D         	movff	?___flmul+3,_fround$1355+3
  4611                           
  4612                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  4613  0024CE  C03A  F01D         	movff	_fround$1355,___flmul@b
  4614  0024D2  C03B  F01E         	movff	_fround$1355+1,___flmul@b+1
  4615  0024D6  C03C  F01F         	movff	_fround$1355+2,___flmul@b+2
  4616  0024DA  C03D  F020         	movff	_fround$1355+3,___flmul@b+3
  4617  0024DE  0E00               	movlw	0
  4618  0024E0  6E21               	movwf	___flmul@a,c
  4619  0024E2  0E00               	movlw	0
  4620  0024E4  6E22               	movwf	___flmul@a+1,c
  4621  0024E6  0E00               	movlw	0
  4622  0024E8  6E23               	movwf	___flmul@a+2,c
  4623  0024EA  0E3F               	movlw	63
  4624  0024EC  6E24               	movwf	___flmul@a+3,c
  4625  0024EE  ECFD  F00C         	call	___flmul	;wreg free
  4626  0024F2  C01D  F036         	movff	?___flmul,?_fround
  4627  0024F6  C01E  F037         	movff	?___flmul+1,?_fround+1
  4628  0024FA  C01F  F038         	movff	?___flmul+2,?_fround+2
  4629  0024FE  C020  F039         	movff	?___flmul+3,?_fround+3
  4630  002502  0012               	return	
  4631  002504                     l3120:
  4632                           
  4633                           ;doprnt.c: 415: else if(prec > 10)
  4634  002504  0E0A               	movlw	10
  4635  002506  6442               	cpfsgt	fround@prec,c
  4636  002508  D063               	goto	l3128
  4637                           
  4638                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  4639  00250A  0E00               	movlw	0
  4640  00250C  6E12               	movwf	___awmod@divisor+1,c
  4641  00250E  0E0A               	movlw	10
  4642  002510  6E11               	movwf	___awmod@divisor,c
  4643  002512  C042  F00F         	movff	fround@prec,___awmod@dividend
  4644  002516  6A10               	clrf	___awmod@dividend+1,c
  4645  002518  EC8D  F01A         	call	___awmod	;wreg free
  4646  00251C  90D8               	bcf	status,0,c
  4647  00251E  360F               	rlcf	?___awmod,f,c
  4648  002520  3610               	rlcf	?___awmod+1,f,c
  4649  002522  90D8               	bcf	status,0,c
  4650  002524  360F               	rlcf	?___awmod,f,c
  4651  002526  3610               	rlcf	?___awmod+1,f,c
  4652  002528  0E01               	movlw	low __npowers_
  4653  00252A  240F               	addwf	?___awmod,w,c
  4654  00252C  6EF6               	movwf	tblptrl,c
  4655  00252E  0E08               	movlw	high __npowers_
  4656  002530  2010               	addwfc	?___awmod+1,w,c
  4657  002532  6EF7               	movwf	tblptrh,c
  4658  002534                     	if	0	;There are less than 3 active tblptr bytes
  4659  002534                     	endif
  4660  002534  0009               	tblrd		*+
  4661  002536  CFF5 F021          	movff	tablat,___flmul@a
  4662  00253A  0009               	tblrd		*+
  4663  00253C  CFF5 F022          	movff	tablat,___flmul@a+1
  4664  002540  0009               	tblrd		*+
  4665  002542  CFF5 F023          	movff	tablat,___flmul@a+2
  4666  002546  000A               	tblrd		*-
  4667  002548  CFF5 F024          	movff	tablat,___flmul@a+3
  4668  00254C  0E00               	movlw	0
  4669  00254E  6E18               	movwf	___awdiv@divisor+1,c
  4670  002550  0E0A               	movlw	10
  4671  002552  6E17               	movwf	___awdiv@divisor,c
  4672  002554  C042  F015         	movff	fround@prec,___awdiv@dividend
  4673  002558  6A16               	clrf	___awdiv@dividend+1,c
  4674  00255A  EC0A  F01A         	call	___awdiv	;wreg free
  4675  00255E  90D8               	bcf	status,0,c
  4676  002560  3615               	rlcf	?___awdiv,f,c
  4677  002562  3616               	rlcf	?___awdiv+1,f,c
  4678  002564  90D8               	bcf	status,0,c
  4679  002566  3615               	rlcf	?___awdiv,f,c
  4680  002568  3616               	rlcf	?___awdiv+1,f,c
  4681  00256A  0E24               	movlw	36
  4682  00256C  2615               	addwf	?___awdiv,f,c
  4683  00256E  0E00               	movlw	0
  4684  002570  2216               	addwfc	?___awdiv+1,f,c
  4685  002572  0E01               	movlw	low __npowers_
  4686  002574  2415               	addwf	?___awdiv,w,c
  4687  002576  6EF6               	movwf	tblptrl,c
  4688  002578  0E08               	movlw	high __npowers_
  4689  00257A  2016               	addwfc	?___awdiv+1,w,c
  4690  00257C  6EF7               	movwf	tblptrh,c
  4691  00257E                     	if	0	;There are less than 3 active tblptr bytes
  4692  00257E                     	endif
  4693  00257E  0009               	tblrd		*+
  4694  002580  CFF5 F01D          	movff	tablat,___flmul@b
  4695  002584  0009               	tblrd		*+
  4696  002586  CFF5 F01E          	movff	tablat,___flmul@b+1
  4697  00258A  0009               	tblrd		*+
  4698  00258C  CFF5 F01F          	movff	tablat,___flmul@b+2
  4699  002590  000A               	tblrd		*-
  4700  002592  CFF5 F020          	movff	tablat,___flmul@b+3
  4701  002596  ECFD  F00C         	call	___flmul	;wreg free
  4702  00259A  C01D  F03E         	movff	?___flmul,_fround$1354
  4703  00259E  C01E  F03F         	movff	?___flmul+1,_fround$1354+1
  4704  0025A2  C01F  F040         	movff	?___flmul+2,_fround$1354+2
  4705  0025A6  C020  F041         	movff	?___flmul+3,_fround$1354+3
  4706                           
  4707                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  4708  0025AA  C03E  F01D         	movff	_fround$1354,___flmul@b
  4709  0025AE  C03F  F01E         	movff	_fround$1354+1,___flmul@b+1
  4710  0025B2  C040  F01F         	movff	_fround$1354+2,___flmul@b+2
  4711  0025B6  C041  F020         	movff	_fround$1354+3,___flmul@b+3
  4712  0025BA  0E00               	movlw	0
  4713  0025BC  6E21               	movwf	___flmul@a,c
  4714  0025BE  0E00               	movlw	0
  4715  0025C0  6E22               	movwf	___flmul@a+1,c
  4716  0025C2  0E00               	movlw	0
  4717  0025C4  6E23               	movwf	___flmul@a+2,c
  4718  0025C6  0E3F               	movlw	63
  4719  0025C8  6E24               	movwf	___flmul@a+3,c
  4720  0025CA  ECFD  F00C         	call	___flmul	;wreg free
  4721  0025CE  D791               	goto	L6
  4722  0025D0                     l3128:
  4723                           
  4724                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  4725  0025D0  5042               	movf	fround@prec,w,c
  4726  0025D2  0D04               	mullw	4
  4727  0025D4  0E01               	movlw	low __npowers_
  4728  0025D6  24F3               	addwf	prodl,w,c
  4729  0025D8  6EF6               	movwf	tblptrl,c
  4730  0025DA  0E08               	movlw	high __npowers_
  4731  0025DC  20F4               	addwfc	prodh,w,c
  4732  0025DE  6EF7               	movwf	tblptrh,c
  4733  0025E0                     	if	0	;There are less than 3 active tblptr bytes
  4734  0025E0                     	endif
  4735  0025E0  0009               	tblrd		*+
  4736  0025E2  CFF5 F01D          	movff	tablat,___flmul@b
  4737  0025E6  0009               	tblrd		*+
  4738  0025E8  CFF5 F01E          	movff	tablat,___flmul@b+1
  4739  0025EC  0009               	tblrd		*+
  4740  0025EE  CFF5 F01F          	movff	tablat,___flmul@b+2
  4741  0025F2  000A               	tblrd		*-
  4742  0025F4  CFF5 F020          	movff	tablat,___flmul@b+3
  4743  0025F8  0E00               	movlw	0
  4744  0025FA  6E21               	movwf	___flmul@a,c
  4745  0025FC  0E00               	movlw	0
  4746  0025FE  6E22               	movwf	___flmul@a+1,c
  4747  002600  0E00               	movlw	0
  4748  002602  6E23               	movwf	___flmul@a+2,c
  4749  002604  0E3F               	movlw	63
  4750  002606  6E24               	movwf	___flmul@a+3,c
  4751  002608  ECFD  F00C         	call	___flmul	;wreg free
  4752  00260C  C01D  F036         	movff	?___flmul,?_fround
  4753  002610  C01E  F037         	movff	?___flmul+1,?_fround+1
  4754  002614  C01F  F038         	movff	?___flmul+2,?_fround+2
  4755  002618  C020  F039         	movff	?___flmul+3,?_fround+3
  4756  00261C  0012               	return	
  4757  00261E                     __end_of_fround:
  4758                           	opt stack 0
  4759                           tblptru	equ	0xFF8
  4760                           tblptrh	equ	0xFF7
  4761                           tblptrl	equ	0xFF6
  4762                           tablat	equ	0xFF5
  4763                           prodh	equ	0xFF4
  4764                           prodl	equ	0xFF3
  4765                           intcon	equ	0xFF2
  4766                           postinc0	equ	0xFEE
  4767                           wreg	equ	0xFE8
  4768                           indf1	equ	0xFE7
  4769                           plusw1	equ	0xFE3
  4770                           fsr1h	equ	0xFE2
  4771                           fsr1l	equ	0xFE1
  4772                           indf2	equ	0xFDF
  4773                           postinc2	equ	0xFDE
  4774                           plusw2	equ	0xFDB
  4775                           fsr2h	equ	0xFDA
  4776                           fsr2l	equ	0xFD9
  4777                           status	equ	0xFD8
  4778                           
  4779 ;; *************** function ___awmod *****************
  4780 ;; Defined at:
  4781 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
  4782 ;; Parameters:    Size  Location     Type
  4783 ;;  dividend        2   14[COMRAM] int 
  4784 ;;  divisor         2   16[COMRAM] int 
  4785 ;; Auto vars:     Size  Location     Type
  4786 ;;  sign            1   19[COMRAM] unsigned char 
  4787 ;;  counter         1   18[COMRAM] unsigned char 
  4788 ;; Return value:  Size  Location     Type
  4789 ;;                  2   14[COMRAM] int 
  4790 ;; Registers used:
  4791 ;;		wreg, status,2, status,0
  4792 ;; Tracked objects:
  4793 ;;		On entry : 0/0
  4794 ;;		On exit  : 0/0
  4795 ;;		Unchanged: 0/0
  4796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4797 ;;      Params:         4       0       0       0       0       0       0       0       0
  4798 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4799 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4800 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4801 ;;Total ram usage:        6 bytes
  4802 ;; Hardware stack levels used:    1
  4803 ;; Hardware stack levels required when called:    1
  4804 ;; This function calls:
  4805 ;;		Nothing
  4806 ;; This function is called by:
  4807 ;;		_fround
  4808 ;;		_scale
  4809 ;; This function uses a non-reentrant model
  4810 ;;
  4811                           
  4812                           	psect	text13
  4813  00351A                     __ptext13:
  4814                           	opt stack 0
  4815  00351A                     ___awmod:
  4816                           	opt stack 26
  4817                           
  4818                           ;incstack = 0
  4819  00351A  0E00               	movlw	0
  4820  00351C  6E14               	movwf	___awmod@sign,c
  4821  00351E  AE10               	btfss	___awmod@dividend+1,7,c
  4822  003520  D006               	goto	l3028
  4823  003522  6C0F               	negf	___awmod@dividend,c
  4824  003524  1E10               	comf	___awmod@dividend+1,f,c
  4825  003526  B0D8               	btfsc	status,0,c
  4826  003528  2A10               	incf	___awmod@dividend+1,f,c
  4827  00352A  0E01               	movlw	1
  4828  00352C  6E14               	movwf	___awmod@sign,c
  4829  00352E                     l3028:
  4830  00352E  AE12               	btfss	___awmod@divisor+1,7,c
  4831  003530  D004               	goto	l3032
  4832  003532  6C11               	negf	___awmod@divisor,c
  4833  003534  1E12               	comf	___awmod@divisor+1,f,c
  4834  003536  B0D8               	btfsc	status,0,c
  4835  003538  2A12               	incf	___awmod@divisor+1,f,c
  4836  00353A                     l3032:
  4837  00353A  5011               	movf	___awmod@divisor,w,c
  4838  00353C  1012               	iorwf	___awmod@divisor+1,w,c
  4839  00353E  B4D8               	btfsc	status,2,c
  4840  003540  D018               	goto	l3048
  4841  003542  0E01               	movlw	1
  4842  003544  6E13               	movwf	___awmod@counter,c
  4843  003546  D004               	goto	l3038
  4844  003548                     l3036:
  4845  003548  90D8               	bcf	status,0,c
  4846  00354A  3611               	rlcf	___awmod@divisor,f,c
  4847  00354C  3612               	rlcf	___awmod@divisor+1,f,c
  4848  00354E  2A13               	incf	___awmod@counter,f,c
  4849  003550                     l3038:
  4850  003550  AE12               	btfss	___awmod@divisor+1,7,c
  4851  003552  D7FA               	goto	l3036
  4852  003554                     l3040:
  4853  003554  5011               	movf	___awmod@divisor,w,c
  4854  003556  5C0F               	subwf	___awmod@dividend,w,c
  4855  003558  5012               	movf	___awmod@divisor+1,w,c
  4856  00355A  5810               	subwfb	___awmod@dividend+1,w,c
  4857  00355C  A0D8               	btfss	status,0,c
  4858  00355E  D004               	goto	l3044
  4859  003560  5011               	movf	___awmod@divisor,w,c
  4860  003562  5E0F               	subwf	___awmod@dividend,f,c
  4861  003564  5012               	movf	___awmod@divisor+1,w,c
  4862  003566  5A10               	subwfb	___awmod@dividend+1,f,c
  4863  003568                     l3044:
  4864  003568  90D8               	bcf	status,0,c
  4865  00356A  3212               	rrcf	___awmod@divisor+1,f,c
  4866  00356C  3211               	rrcf	___awmod@divisor,f,c
  4867  00356E  2E13               	decfsz	___awmod@counter,f,c
  4868  003570  D7F1               	goto	l3040
  4869  003572                     l3048:
  4870  003572  5014               	movf	___awmod@sign,w,c
  4871  003574  B4D8               	btfsc	status,2,c
  4872  003576  D004               	goto	l3052
  4873  003578  6C0F               	negf	___awmod@dividend,c
  4874  00357A  1E10               	comf	___awmod@dividend+1,f,c
  4875  00357C  B0D8               	btfsc	status,0,c
  4876  00357E  2A10               	incf	___awmod@dividend+1,f,c
  4877  003580                     l3052:
  4878  003580  C00F  F00F         	movff	___awmod@dividend,?___awmod
  4879  003584  C010  F010         	movff	___awmod@dividend+1,?___awmod+1
  4880  003588  0012               	return	
  4881  00358A                     __end_of___awmod:
  4882                           	opt stack 0
  4883                           tblptru	equ	0xFF8
  4884                           tblptrh	equ	0xFF7
  4885                           tblptrl	equ	0xFF6
  4886                           tablat	equ	0xFF5
  4887                           prodh	equ	0xFF4
  4888                           prodl	equ	0xFF3
  4889                           intcon	equ	0xFF2
  4890                           postinc0	equ	0xFEE
  4891                           wreg	equ	0xFE8
  4892                           indf1	equ	0xFE7
  4893                           plusw1	equ	0xFE3
  4894                           fsr1h	equ	0xFE2
  4895                           fsr1l	equ	0xFE1
  4896                           indf2	equ	0xFDF
  4897                           postinc2	equ	0xFDE
  4898                           plusw2	equ	0xFDB
  4899                           fsr2h	equ	0xFDA
  4900                           fsr2l	equ	0xFD9
  4901                           status	equ	0xFD8
  4902                           
  4903 ;; *************** function ___awdiv *****************
  4904 ;; Defined at:
  4905 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  4906 ;; Parameters:    Size  Location     Type
  4907 ;;  dividend        2   20[COMRAM] int 
  4908 ;;  divisor         2   22[COMRAM] int 
  4909 ;; Auto vars:     Size  Location     Type
  4910 ;;  quotient        2   26[COMRAM] int 
  4911 ;;  sign            1   25[COMRAM] unsigned char 
  4912 ;;  counter         1   24[COMRAM] unsigned char 
  4913 ;; Return value:  Size  Location     Type
  4914 ;;                  2   20[COMRAM] int 
  4915 ;; Registers used:
  4916 ;;		wreg, status,2, status,0
  4917 ;; Tracked objects:
  4918 ;;		On entry : 0/0
  4919 ;;		On exit  : 0/0
  4920 ;;		Unchanged: 0/0
  4921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4922 ;;      Params:         4       0       0       0       0       0       0       0       0
  4923 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4924 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4925 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4926 ;;Total ram usage:        8 bytes
  4927 ;; Hardware stack levels used:    1
  4928 ;; Hardware stack levels required when called:    1
  4929 ;; This function calls:
  4930 ;;		Nothing
  4931 ;; This function is called by:
  4932 ;;		_fround
  4933 ;;		_scale
  4934 ;;		_sprintf
  4935 ;; This function uses a non-reentrant model
  4936 ;;
  4937                           
  4938                           	psect	text14
  4939  003414                     __ptext14:
  4940                           	opt stack 0
  4941  003414                     ___awdiv:
  4942                           	opt stack 26
  4943                           
  4944                           ;incstack = 0
  4945  003414  0E00               	movlw	0
  4946  003416  6E1A               	movwf	___awdiv@sign,c
  4947  003418  AE18               	btfss	___awdiv@divisor+1,7,c
  4948  00341A  D006               	goto	l2984
  4949  00341C  6C17               	negf	___awdiv@divisor,c
  4950  00341E  1E18               	comf	___awdiv@divisor+1,f,c
  4951  003420  B0D8               	btfsc	status,0,c
  4952  003422  2A18               	incf	___awdiv@divisor+1,f,c
  4953  003424  0E01               	movlw	1
  4954  003426  6E1A               	movwf	___awdiv@sign,c
  4955  003428                     l2984:
  4956  003428  AE16               	btfss	___awdiv@dividend+1,7,c
  4957  00342A  D006               	goto	l2990
  4958  00342C  6C15               	negf	___awdiv@dividend,c
  4959  00342E  1E16               	comf	___awdiv@dividend+1,f,c
  4960  003430  B0D8               	btfsc	status,0,c
  4961  003432  2A16               	incf	___awdiv@dividend+1,f,c
  4962  003434  0E01               	movlw	1
  4963  003436  1A1A               	xorwf	___awdiv@sign,f,c
  4964  003438                     l2990:
  4965  003438  0E00               	movlw	0
  4966  00343A  6E1C               	movwf	___awdiv@quotient+1,c
  4967  00343C  0E00               	movlw	0
  4968  00343E  6E1B               	movwf	___awdiv@quotient,c
  4969  003440  5017               	movf	___awdiv@divisor,w,c
  4970  003442  1018               	iorwf	___awdiv@divisor+1,w,c
  4971  003444  B4D8               	btfsc	status,2,c
  4972  003446  D01C               	goto	l3012
  4973  003448  0E01               	movlw	1
  4974  00344A  6E19               	movwf	___awdiv@counter,c
  4975  00344C  D004               	goto	l2998
  4976  00344E                     l2996:
  4977  00344E  90D8               	bcf	status,0,c
  4978  003450  3617               	rlcf	___awdiv@divisor,f,c
  4979  003452  3618               	rlcf	___awdiv@divisor+1,f,c
  4980  003454  2A19               	incf	___awdiv@counter,f,c
  4981  003456                     l2998:
  4982  003456  AE18               	btfss	___awdiv@divisor+1,7,c
  4983  003458  D7FA               	goto	l2996
  4984  00345A                     l3000:
  4985  00345A  90D8               	bcf	status,0,c
  4986  00345C  361B               	rlcf	___awdiv@quotient,f,c
  4987  00345E  361C               	rlcf	___awdiv@quotient+1,f,c
  4988  003460  5017               	movf	___awdiv@divisor,w,c
  4989  003462  5C15               	subwf	___awdiv@dividend,w,c
  4990  003464  5018               	movf	___awdiv@divisor+1,w,c
  4991  003466  5816               	subwfb	___awdiv@dividend+1,w,c
  4992  003468  A0D8               	btfss	status,0,c
  4993  00346A  D005               	goto	l3008
  4994  00346C  5017               	movf	___awdiv@divisor,w,c
  4995  00346E  5E15               	subwf	___awdiv@dividend,f,c
  4996  003470  5018               	movf	___awdiv@divisor+1,w,c
  4997  003472  5A16               	subwfb	___awdiv@dividend+1,f,c
  4998  003474  801B               	bsf	___awdiv@quotient,0,c
  4999  003476                     l3008:
  5000  003476  90D8               	bcf	status,0,c
  5001  003478  3218               	rrcf	___awdiv@divisor+1,f,c
  5002  00347A  3217               	rrcf	___awdiv@divisor,f,c
  5003  00347C  2E19               	decfsz	___awdiv@counter,f,c
  5004  00347E  D7ED               	goto	l3000
  5005  003480                     l3012:
  5006  003480  501A               	movf	___awdiv@sign,w,c
  5007  003482  B4D8               	btfsc	status,2,c
  5008  003484  D004               	goto	l3016
  5009  003486  6C1B               	negf	___awdiv@quotient,c
  5010  003488  1E1C               	comf	___awdiv@quotient+1,f,c
  5011  00348A  B0D8               	btfsc	status,0,c
  5012  00348C  2A1C               	incf	___awdiv@quotient+1,f,c
  5013  00348E                     l3016:
  5014  00348E  C01B  F015         	movff	___awdiv@quotient,?___awdiv
  5015  003492  C01C  F016         	movff	___awdiv@quotient+1,?___awdiv+1
  5016  003496  0012               	return	
  5017  003498                     __end_of___awdiv:
  5018                           	opt stack 0
  5019                           tblptru	equ	0xFF8
  5020                           tblptrh	equ	0xFF7
  5021                           tblptrl	equ	0xFF6
  5022                           tablat	equ	0xFF5
  5023                           prodh	equ	0xFF4
  5024                           prodl	equ	0xFF3
  5025                           intcon	equ	0xFF2
  5026                           postinc0	equ	0xFEE
  5027                           wreg	equ	0xFE8
  5028                           indf1	equ	0xFE7
  5029                           plusw1	equ	0xFE3
  5030                           fsr1h	equ	0xFE2
  5031                           fsr1l	equ	0xFE1
  5032                           indf2	equ	0xFDF
  5033                           postinc2	equ	0xFDE
  5034                           plusw2	equ	0xFDB
  5035                           fsr2h	equ	0xFDA
  5036                           fsr2l	equ	0xFD9
  5037                           status	equ	0xFD8
  5038                           
  5039 ;; *************** function __tdiv_to_l_ *****************
  5040 ;; Defined at:
  5041 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftdivl.c"
  5042 ;; Parameters:    Size  Location     Type
  5043 ;;  f1              4   14[COMRAM] float 
  5044 ;;  f2              4   18[COMRAM] float 
  5045 ;; Auto vars:     Size  Location     Type
  5046 ;;  quot            4   25[COMRAM] unsigned long 
  5047 ;;  exp1            1   30[COMRAM] unsigned char 
  5048 ;;  cntr            1   29[COMRAM] unsigned char 
  5049 ;; Return value:  Size  Location     Type
  5050 ;;                  4   14[COMRAM] unsigned long 
  5051 ;; Registers used:
  5052 ;;		wreg, status,2, status,0
  5053 ;; Tracked objects:
  5054 ;;		On entry : 0/0
  5055 ;;		On exit  : 0/0
  5056 ;;		Unchanged: 0/0
  5057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5058 ;;      Params:         8       0       0       0       0       0       0       0       0
  5059 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5060 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5061 ;;      Totals:        17       0       0       0       0       0       0       0       0
  5062 ;;Total ram usage:       17 bytes
  5063 ;; Hardware stack levels used:    1
  5064 ;; Hardware stack levels required when called:    1
  5065 ;; This function calls:
  5066 ;;		Nothing
  5067 ;; This function is called by:
  5068 ;;		_sprintf
  5069 ;; This function uses a non-reentrant model
  5070 ;;
  5071                           
  5072                           	psect	text15
  5073  002C62                     __ptext15:
  5074                           	opt stack 0
  5075  002C62                     __tdiv_to_l_:
  5076                           	opt stack 27
  5077                           
  5078                           ;incstack = 0
  5079  002C62  C011  F017         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  5080  002C66  6A18               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  5081  002C68  6A19               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  5082  002C6A  3410               	rlcf	__tdiv_to_l_@f1+1,w,c
  5083  002C6C  3617               	rlcf	??__tdiv_to_l_& (0+255),f,c
  5084  002C6E  E301               	bnc	u3151
  5085  002C70  8018               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  5086  002C72                     u3151:
  5087  002C72  5017               	movf	??__tdiv_to_l_,w,c
  5088  002C74  6E1F               	movwf	__tdiv_to_l_@exp1,c
  5089  002C76  501F               	movf	__tdiv_to_l_@exp1,w,c
  5090  002C78  A4D8               	btfss	status,2,c
  5091  002C7A  D009               	goto	l3188
  5092  002C7C  0E00               	movlw	0
  5093  002C7E  6E0F               	movwf	?__tdiv_to_l_,c
  5094  002C80  0E00               	movlw	0
  5095  002C82  6E10               	movwf	?__tdiv_to_l_+1,c
  5096  002C84  0E00               	movlw	0
  5097  002C86  6E11               	movwf	?__tdiv_to_l_+2,c
  5098  002C88  0E00               	movlw	0
  5099  002C8A  6E12               	movwf	?__tdiv_to_l_+3,c
  5100  002C8C  0012               	return	
  5101  002C8E                     l3188:
  5102  002C8E  C015  F017         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  5103  002C92  6A18               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  5104  002C94  6A19               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  5105  002C96  3414               	rlcf	__tdiv_to_l_@f2+1,w,c
  5106  002C98  3617               	rlcf	??__tdiv_to_l_& (0+255),f,c
  5107  002C9A  E301               	bnc	u3171
  5108  002C9C  8018               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  5109  002C9E                     u3171:
  5110  002C9E  5017               	movf	??__tdiv_to_l_,w,c
  5111  002CA0  6E1E               	movwf	__tdiv_to_l_@cntr,c
  5112  002CA2  501E               	movf	__tdiv_to_l_@cntr,w,c
  5113  002CA4  A4D8               	btfss	status,2,c
  5114  002CA6  D009               	goto	l3194
  5115  002CA8  0E00               	movlw	0
  5116  002CAA  6E0F               	movwf	?__tdiv_to_l_,c
  5117  002CAC  0E00               	movlw	0
  5118  002CAE  6E10               	movwf	?__tdiv_to_l_+1,c
  5119  002CB0  0E00               	movlw	0
  5120  002CB2  6E11               	movwf	?__tdiv_to_l_+2,c
  5121  002CB4  0E00               	movlw	0
  5122  002CB6  6E12               	movwf	?__tdiv_to_l_+3,c
  5123  002CB8  0012               	return	
  5124  002CBA                     l3194:
  5125  002CBA  8E10               	bsf	__tdiv_to_l_@f1+1,7,c
  5126  002CBC  0EFF               	movlw	255
  5127  002CBE  160F               	andwf	__tdiv_to_l_@f1,f,c
  5128  002CC0  0EFF               	movlw	255
  5129  002CC2  1610               	andwf	__tdiv_to_l_@f1+1,f,c
  5130  002CC4  0E00               	movlw	0
  5131  002CC6  1611               	andwf	__tdiv_to_l_@f1+2,f,c
  5132  002CC8  8E14               	bsf	__tdiv_to_l_@f2+1,7,c
  5133  002CCA  0EFF               	movlw	255
  5134  002CCC  1613               	andwf	__tdiv_to_l_@f2,f,c
  5135  002CCE  0EFF               	movlw	255
  5136  002CD0  1614               	andwf	__tdiv_to_l_@f2+1,f,c
  5137  002CD2  0E00               	movlw	0
  5138  002CD4  1615               	andwf	__tdiv_to_l_@f2+2,f,c
  5139  002CD6  0E00               	movlw	0
  5140  002CD8  6E1A               	movwf	__tdiv_to_l_@quot,c
  5141  002CDA  0E00               	movlw	0
  5142  002CDC  6E1B               	movwf	__tdiv_to_l_@quot+1,c
  5143  002CDE  0E00               	movlw	0
  5144  002CE0  6E1C               	movwf	__tdiv_to_l_@quot+2,c
  5145  002CE2  0E00               	movlw	0
  5146  002CE4  6E1D               	movwf	__tdiv_to_l_@quot+3,c
  5147  002CE6  0E7F               	movlw	127
  5148  002CE8  5E1F               	subwf	__tdiv_to_l_@exp1,f,c
  5149  002CEA  501E               	movf	__tdiv_to_l_@cntr,w,c
  5150  002CEC  0F98               	addlw	152
  5151  002CEE  5E1F               	subwf	__tdiv_to_l_@exp1,f,c
  5152  002CF0  0E18               	movlw	24
  5153  002CF2  6E1E               	movwf	__tdiv_to_l_@cntr,c
  5154  002CF4                     l612:
  5155  002CF4  90D8               	bcf	status,0,c
  5156  002CF6  361A               	rlcf	__tdiv_to_l_@quot,f,c
  5157  002CF8  361B               	rlcf	__tdiv_to_l_@quot+1,f,c
  5158  002CFA  361C               	rlcf	__tdiv_to_l_@quot+2,f,c
  5159  002CFC  361D               	rlcf	__tdiv_to_l_@quot+3,f,c
  5160  002CFE  5013               	movf	__tdiv_to_l_@f2,w,c
  5161  002D00  5C0F               	subwf	__tdiv_to_l_@f1,w,c
  5162  002D02  5014               	movf	__tdiv_to_l_@f2+1,w,c
  5163  002D04  5810               	subwfb	__tdiv_to_l_@f1+1,w,c
  5164  002D06  5015               	movf	__tdiv_to_l_@f2+2,w,c
  5165  002D08  5811               	subwfb	__tdiv_to_l_@f1+2,w,c
  5166  002D0A  A0D8               	btfss	status,0,c
  5167  002D0C  D007               	goto	l613
  5168  002D0E  5013               	movf	__tdiv_to_l_@f2,w,c
  5169  002D10  5E0F               	subwf	__tdiv_to_l_@f1,f,c
  5170  002D12  5014               	movf	__tdiv_to_l_@f2+1,w,c
  5171  002D14  5A10               	subwfb	__tdiv_to_l_@f1+1,f,c
  5172  002D16  5015               	movf	__tdiv_to_l_@f2+2,w,c
  5173  002D18  5A11               	subwfb	__tdiv_to_l_@f1+2,f,c
  5174  002D1A  801A               	bsf	__tdiv_to_l_@quot,0,c
  5175  002D1C                     l613:
  5176  002D1C  90D8               	bcf	status,0,c
  5177  002D1E  360F               	rlcf	__tdiv_to_l_@f1,f,c
  5178  002D20  3610               	rlcf	__tdiv_to_l_@f1+1,f,c
  5179  002D22  3611               	rlcf	__tdiv_to_l_@f1+2,f,c
  5180  002D24  2E1E               	decfsz	__tdiv_to_l_@cntr,f,c
  5181  002D26  D7E6               	goto	l612
  5182  002D28  AE1F               	btfss	__tdiv_to_l_@exp1,7,c
  5183  002D2A  D016               	goto	l3228
  5184  002D2C  501F               	movf	__tdiv_to_l_@exp1,w,c
  5185  002D2E  0A80               	xorlw	128
  5186  002D30  0F97               	addlw	151
  5187  002D32  B0D8               	btfsc	status,0,c
  5188  002D34  D009               	goto	l3224
  5189  002D36  0E00               	movlw	0
  5190  002D38  6E0F               	movwf	?__tdiv_to_l_,c
  5191  002D3A  0E00               	movlw	0
  5192  002D3C  6E10               	movwf	?__tdiv_to_l_+1,c
  5193  002D3E  0E00               	movlw	0
  5194  002D40  6E11               	movwf	?__tdiv_to_l_+2,c
  5195  002D42  0E00               	movlw	0
  5196  002D44  6E12               	movwf	?__tdiv_to_l_+3,c
  5197  002D46  0012               	return	
  5198  002D48                     l3224:
  5199  002D48  90D8               	bcf	status,0,c
  5200  002D4A  321D               	rrcf	__tdiv_to_l_@quot+3,f,c
  5201  002D4C  321C               	rrcf	__tdiv_to_l_@quot+2,f,c
  5202  002D4E  321B               	rrcf	__tdiv_to_l_@quot+1,f,c
  5203  002D50  321A               	rrcf	__tdiv_to_l_@quot,f,c
  5204  002D52  3E1F               	incfsz	__tdiv_to_l_@exp1,f,c
  5205  002D54  D7F9               	goto	l3224
  5206  002D56  D015               	goto	l619
  5207  002D58                     l3228:
  5208  002D58  0E17               	movlw	23
  5209  002D5A  641F               	cpfsgt	__tdiv_to_l_@exp1,c
  5210  002D5C  D00F               	goto	l3236
  5211  002D5E  0E00               	movlw	0
  5212  002D60  6E0F               	movwf	?__tdiv_to_l_,c
  5213  002D62  0E00               	movlw	0
  5214  002D64  6E10               	movwf	?__tdiv_to_l_+1,c
  5215  002D66  0E00               	movlw	0
  5216  002D68  6E11               	movwf	?__tdiv_to_l_+2,c
  5217  002D6A  0E00               	movlw	0
  5218  002D6C  6E12               	movwf	?__tdiv_to_l_+3,c
  5219  002D6E  0012               	return	
  5220  002D70                     l3234:
  5221  002D70  90D8               	bcf	status,0,c
  5222  002D72  361A               	rlcf	__tdiv_to_l_@quot,f,c
  5223  002D74  361B               	rlcf	__tdiv_to_l_@quot+1,f,c
  5224  002D76  361C               	rlcf	__tdiv_to_l_@quot+2,f,c
  5225  002D78  361D               	rlcf	__tdiv_to_l_@quot+3,f,c
  5226  002D7A  061F               	decf	__tdiv_to_l_@exp1,f,c
  5227  002D7C                     l3236:
  5228  002D7C  501F               	movf	__tdiv_to_l_@exp1,w,c
  5229  002D7E  A4D8               	btfss	status,2,c
  5230  002D80  D7F7               	goto	l3234
  5231  002D82                     l619:
  5232  002D82  C01A  F00F         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  5233  002D86  C01B  F010         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  5234  002D8A  C01C  F011         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  5235  002D8E  C01D  F012         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  5236  002D92  0012               	return		;funcret
  5237  002D94                     __end_of__tdiv_to_l_:
  5238                           	opt stack 0
  5239                           tblptru	equ	0xFF8
  5240                           tblptrh	equ	0xFF7
  5241                           tblptrl	equ	0xFF6
  5242                           tablat	equ	0xFF5
  5243                           prodh	equ	0xFF4
  5244                           prodl	equ	0xFF3
  5245                           intcon	equ	0xFF2
  5246                           postinc0	equ	0xFEE
  5247                           wreg	equ	0xFE8
  5248                           indf1	equ	0xFE7
  5249                           plusw1	equ	0xFE3
  5250                           fsr1h	equ	0xFE2
  5251                           fsr1l	equ	0xFE1
  5252                           indf2	equ	0xFDF
  5253                           postinc2	equ	0xFDE
  5254                           plusw2	equ	0xFDB
  5255                           fsr2h	equ	0xFDA
  5256                           fsr2l	equ	0xFD9
  5257                           status	equ	0xFD8
  5258                           
  5259 ;; *************** function __div_to_l_ *****************
  5260 ;; Defined at:
  5261 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fldivl.c"
  5262 ;; Parameters:    Size  Location     Type
  5263 ;;  f1              4   14[COMRAM] unsigned long 
  5264 ;;  f2              4   18[COMRAM] unsigned long 
  5265 ;; Auto vars:     Size  Location     Type
  5266 ;;  quot            4   22[COMRAM] unsigned long 
  5267 ;;  exp1            1   27[COMRAM] unsigned char 
  5268 ;;  cntr            1   26[COMRAM] unsigned char 
  5269 ;; Return value:  Size  Location     Type
  5270 ;;                  4   14[COMRAM] unsigned long 
  5271 ;; Registers used:
  5272 ;;		wreg, status,2, status,0
  5273 ;; Tracked objects:
  5274 ;;		On entry : 0/0
  5275 ;;		On exit  : 0/0
  5276 ;;		Unchanged: 0/0
  5277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5278 ;;      Params:         8       0       0       0       0       0       0       0       0
  5279 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5280 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5281 ;;      Totals:        14       0       0       0       0       0       0       0       0
  5282 ;;Total ram usage:       14 bytes
  5283 ;; Hardware stack levels used:    1
  5284 ;; Hardware stack levels required when called:    1
  5285 ;; This function calls:
  5286 ;;		Nothing
  5287 ;; This function is called by:
  5288 ;;		_sprintf
  5289 ;; This function uses a non-reentrant model
  5290 ;;
  5291                           
  5292                           	psect	text16
  5293  002D94                     __ptext16:
  5294                           	opt stack 0
  5295  002D94                     __div_to_l_:
  5296                           	opt stack 27
  5297                           
  5298                           ;incstack = 0
  5299  002D94  3411               	rlcf	__div_to_l_@f1+2,w,c
  5300  002D96  3412               	rlcf	__div_to_l_@f1+3,w,c
  5301  002D98  6E1C               	movwf	__div_to_l_@exp1,c
  5302  002D9A  501C               	movf	__div_to_l_@exp1,w,c
  5303  002D9C  A4D8               	btfss	status,2,c
  5304  002D9E  D009               	goto	l3244
  5305  002DA0  0E00               	movlw	0
  5306  002DA2  6E0F               	movwf	?__div_to_l_,c
  5307  002DA4  0E00               	movlw	0
  5308  002DA6  6E10               	movwf	?__div_to_l_+1,c
  5309  002DA8  0E00               	movlw	0
  5310  002DAA  6E11               	movwf	?__div_to_l_+2,c
  5311  002DAC  0E00               	movlw	0
  5312  002DAE  6E12               	movwf	?__div_to_l_+3,c
  5313  002DB0  0012               	return	
  5314  002DB2                     l3244:
  5315  002DB2  3415               	rlcf	__div_to_l_@f2+2,w,c
  5316  002DB4  3416               	rlcf	__div_to_l_@f2+3,w,c
  5317  002DB6  6E1B               	movwf	__div_to_l_@cntr,c
  5318  002DB8  501B               	movf	__div_to_l_@cntr,w,c
  5319  002DBA  A4D8               	btfss	status,2,c
  5320  002DBC  D009               	goto	l3250
  5321  002DBE  0E00               	movlw	0
  5322  002DC0  6E0F               	movwf	?__div_to_l_,c
  5323  002DC2  0E00               	movlw	0
  5324  002DC4  6E10               	movwf	?__div_to_l_+1,c
  5325  002DC6  0E00               	movlw	0
  5326  002DC8  6E11               	movwf	?__div_to_l_+2,c
  5327  002DCA  0E00               	movlw	0
  5328  002DCC  6E12               	movwf	?__div_to_l_+3,c
  5329  002DCE  0012               	return	
  5330  002DD0                     l3250:
  5331  002DD0  8E11               	bsf	__div_to_l_@f1+2,7,c
  5332  002DD2  0EFF               	movlw	255
  5333  002DD4  160F               	andwf	__div_to_l_@f1,f,c
  5334  002DD6  0EFF               	movlw	255
  5335  002DD8  1610               	andwf	__div_to_l_@f1+1,f,c
  5336  002DDA  0EFF               	movlw	255
  5337  002DDC  1611               	andwf	__div_to_l_@f1+2,f,c
  5338  002DDE  0E00               	movlw	0
  5339  002DE0  1612               	andwf	__div_to_l_@f1+3,f,c
  5340  002DE2  8E15               	bsf	__div_to_l_@f2+2,7,c
  5341  002DE4  0EFF               	movlw	255
  5342  002DE6  1613               	andwf	__div_to_l_@f2,f,c
  5343  002DE8  0EFF               	movlw	255
  5344  002DEA  1614               	andwf	__div_to_l_@f2+1,f,c
  5345  002DEC  0EFF               	movlw	255
  5346  002DEE  1615               	andwf	__div_to_l_@f2+2,f,c
  5347  002DF0  0E00               	movlw	0
  5348  002DF2  1616               	andwf	__div_to_l_@f2+3,f,c
  5349  002DF4  0E00               	movlw	0
  5350  002DF6  6E17               	movwf	__div_to_l_@quot,c
  5351  002DF8  0E00               	movlw	0
  5352  002DFA  6E18               	movwf	__div_to_l_@quot+1,c
  5353  002DFC  0E00               	movlw	0
  5354  002DFE  6E19               	movwf	__div_to_l_@quot+2,c
  5355  002E00  0E00               	movlw	0
  5356  002E02  6E1A               	movwf	__div_to_l_@quot+3,c
  5357  002E04  0E7F               	movlw	127
  5358  002E06  5E1C               	subwf	__div_to_l_@exp1,f,c
  5359  002E08  501B               	movf	__div_to_l_@cntr,w,c
  5360  002E0A  0FA0               	addlw	160
  5361  002E0C  5E1C               	subwf	__div_to_l_@exp1,f,c
  5362  002E0E  0E20               	movlw	32
  5363  002E10  6E1B               	movwf	__div_to_l_@cntr,c
  5364  002E12                     l3264:
  5365  002E12  90D8               	bcf	status,0,c
  5366  002E14  3617               	rlcf	__div_to_l_@quot,f,c
  5367  002E16  3618               	rlcf	__div_to_l_@quot+1,f,c
  5368  002E18  3619               	rlcf	__div_to_l_@quot+2,f,c
  5369  002E1A  361A               	rlcf	__div_to_l_@quot+3,f,c
  5370  002E1C  5013               	movf	__div_to_l_@f2,w,c
  5371  002E1E  5C0F               	subwf	__div_to_l_@f1,w,c
  5372  002E20  5014               	movf	__div_to_l_@f2+1,w,c
  5373  002E22  5810               	subwfb	__div_to_l_@f1+1,w,c
  5374  002E24  5015               	movf	__div_to_l_@f2+2,w,c
  5375  002E26  5811               	subwfb	__div_to_l_@f1+2,w,c
  5376  002E28  5016               	movf	__div_to_l_@f2+3,w,c
  5377  002E2A  5812               	subwfb	__div_to_l_@f1+3,w,c
  5378  002E2C  A0D8               	btfss	status,0,c
  5379  002E2E  D009               	goto	l3272
  5380  002E30  5013               	movf	__div_to_l_@f2,w,c
  5381  002E32  5E0F               	subwf	__div_to_l_@f1,f,c
  5382  002E34  5014               	movf	__div_to_l_@f2+1,w,c
  5383  002E36  5A10               	subwfb	__div_to_l_@f1+1,f,c
  5384  002E38  5015               	movf	__div_to_l_@f2+2,w,c
  5385  002E3A  5A11               	subwfb	__div_to_l_@f1+2,f,c
  5386  002E3C  5016               	movf	__div_to_l_@f2+3,w,c
  5387  002E3E  5A12               	subwfb	__div_to_l_@f1+3,f,c
  5388  002E40  8017               	bsf	__div_to_l_@quot,0,c
  5389  002E42                     l3272:
  5390  002E42  90D8               	bcf	status,0,c
  5391  002E44  360F               	rlcf	__div_to_l_@f1,f,c
  5392  002E46  3610               	rlcf	__div_to_l_@f1+1,f,c
  5393  002E48  3611               	rlcf	__div_to_l_@f1+2,f,c
  5394  002E4A  3612               	rlcf	__div_to_l_@f1+3,f,c
  5395  002E4C  2E1B               	decfsz	__div_to_l_@cntr,f,c
  5396  002E4E  D7E1               	goto	l3264
  5397  002E50  AE1C               	btfss	__div_to_l_@exp1,7,c
  5398  002E52  D016               	goto	l3288
  5399  002E54  501C               	movf	__div_to_l_@exp1,w,c
  5400  002E56  0A80               	xorlw	128
  5401  002E58  0F9F               	addlw	159
  5402  002E5A  B0D8               	btfsc	status,0,c
  5403  002E5C  D009               	goto	l3284
  5404  002E5E  0E00               	movlw	0
  5405  002E60  6E0F               	movwf	?__div_to_l_,c
  5406  002E62  0E00               	movlw	0
  5407  002E64  6E10               	movwf	?__div_to_l_+1,c
  5408  002E66  0E00               	movlw	0
  5409  002E68  6E11               	movwf	?__div_to_l_+2,c
  5410  002E6A  0E00               	movlw	0
  5411  002E6C  6E12               	movwf	?__div_to_l_+3,c
  5412  002E6E  0012               	return	
  5413  002E70                     l3284:
  5414  002E70  90D8               	bcf	status,0,c
  5415  002E72  321A               	rrcf	__div_to_l_@quot+3,f,c
  5416  002E74  3219               	rrcf	__div_to_l_@quot+2,f,c
  5417  002E76  3218               	rrcf	__div_to_l_@quot+1,f,c
  5418  002E78  3217               	rrcf	__div_to_l_@quot,f,c
  5419  002E7A  3E1C               	incfsz	__div_to_l_@exp1,f,c
  5420  002E7C  D7F9               	goto	l3284
  5421  002E7E  D015               	goto	l515
  5422  002E80                     l3288:
  5423  002E80  0E1F               	movlw	31
  5424  002E82  641C               	cpfsgt	__div_to_l_@exp1,c
  5425  002E84  D00F               	goto	l3296
  5426  002E86  0E00               	movlw	0
  5427  002E88  6E0F               	movwf	?__div_to_l_,c
  5428  002E8A  0E00               	movlw	0
  5429  002E8C  6E10               	movwf	?__div_to_l_+1,c
  5430  002E8E  0E00               	movlw	0
  5431  002E90  6E11               	movwf	?__div_to_l_+2,c
  5432  002E92  0E00               	movlw	0
  5433  002E94  6E12               	movwf	?__div_to_l_+3,c
  5434  002E96  0012               	return	
  5435  002E98                     l3294:
  5436  002E98  90D8               	bcf	status,0,c
  5437  002E9A  3617               	rlcf	__div_to_l_@quot,f,c
  5438  002E9C  3618               	rlcf	__div_to_l_@quot+1,f,c
  5439  002E9E  3619               	rlcf	__div_to_l_@quot+2,f,c
  5440  002EA0  361A               	rlcf	__div_to_l_@quot+3,f,c
  5441  002EA2  061C               	decf	__div_to_l_@exp1,f,c
  5442  002EA4                     l3296:
  5443  002EA4  501C               	movf	__div_to_l_@exp1,w,c
  5444  002EA6  A4D8               	btfss	status,2,c
  5445  002EA8  D7F7               	goto	l3294
  5446  002EAA                     l515:
  5447  002EAA  C017  F00F         	movff	__div_to_l_@quot,?__div_to_l_
  5448  002EAE  C018  F010         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  5449  002EB2  C019  F011         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  5450  002EB6  C01A  F012         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  5451  002EBA  0012               	return		;funcret
  5452  002EBC                     __end_of__div_to_l_:
  5453                           	opt stack 0
  5454                           tblptru	equ	0xFF8
  5455                           tblptrh	equ	0xFF7
  5456                           tblptrl	equ	0xFF6
  5457                           tablat	equ	0xFF5
  5458                           prodh	equ	0xFF4
  5459                           prodl	equ	0xFF3
  5460                           intcon	equ	0xFF2
  5461                           postinc0	equ	0xFEE
  5462                           wreg	equ	0xFE8
  5463                           indf1	equ	0xFE7
  5464                           plusw1	equ	0xFE3
  5465                           fsr1h	equ	0xFE2
  5466                           fsr1l	equ	0xFE1
  5467                           indf2	equ	0xFDF
  5468                           postinc2	equ	0xFDE
  5469                           plusw2	equ	0xFDB
  5470                           fsr2h	equ	0xFDA
  5471                           fsr2l	equ	0xFD9
  5472                           status	equ	0xFD8
  5473                           
  5474 ;; *************** function ___llmod *****************
  5475 ;; Defined at:
  5476 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\llmod.c"
  5477 ;; Parameters:    Size  Location     Type
  5478 ;;  dividend        4   14[COMRAM] unsigned long 
  5479 ;;  divisor         4   18[COMRAM] unsigned long 
  5480 ;; Auto vars:     Size  Location     Type
  5481 ;;  counter         1   22[COMRAM] unsigned char 
  5482 ;; Return value:  Size  Location     Type
  5483 ;;                  4   14[COMRAM] unsigned long 
  5484 ;; Registers used:
  5485 ;;		wreg, status,2, status,0
  5486 ;; Tracked objects:
  5487 ;;		On entry : 0/0
  5488 ;;		On exit  : 0/0
  5489 ;;		Unchanged: 0/0
  5490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5491 ;;      Params:         8       0       0       0       0       0       0       0       0
  5492 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5493 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5494 ;;      Totals:         9       0       0       0       0       0       0       0       0
  5495 ;;Total ram usage:        9 bytes
  5496 ;; Hardware stack levels used:    1
  5497 ;; Hardware stack levels required when called:    1
  5498 ;; This function calls:
  5499 ;;		Nothing
  5500 ;; This function is called by:
  5501 ;;		_sprintf
  5502 ;; This function uses a non-reentrant model
  5503 ;;
  5504                           
  5505                           	psect	text17
  5506  0035FA                     __ptext17:
  5507                           	opt stack 0
  5508  0035FA                     ___llmod:
  5509                           	opt stack 27
  5510                           
  5511                           ;incstack = 0
  5512  0035FA  5013               	movf	___llmod@divisor,w,c
  5513  0035FC  1014               	iorwf	___llmod@divisor+1,w,c
  5514  0035FE  1015               	iorwf	___llmod@divisor+2,w,c
  5515  003600  1016               	iorwf	___llmod@divisor+3,w,c
  5516  003602  B4D8               	btfsc	status,2,c
  5517  003604  D024               	goto	l718
  5518  003606  0E01               	movlw	1
  5519  003608  6E17               	movwf	___llmod@counter,c
  5520  00360A  D006               	goto	l3542
  5521  00360C                     l3540:
  5522  00360C  90D8               	bcf	status,0,c
  5523  00360E  3613               	rlcf	___llmod@divisor,f,c
  5524  003610  3614               	rlcf	___llmod@divisor+1,f,c
  5525  003612  3615               	rlcf	___llmod@divisor+2,f,c
  5526  003614  3616               	rlcf	___llmod@divisor+3,f,c
  5527  003616  2A17               	incf	___llmod@counter,f,c
  5528  003618                     l3542:
  5529  003618  AE16               	btfss	___llmod@divisor+3,7,c
  5530  00361A  D7F8               	goto	l3540
  5531  00361C                     l3544:
  5532  00361C  5013               	movf	___llmod@divisor,w,c
  5533  00361E  5C0F               	subwf	___llmod@dividend,w,c
  5534  003620  5014               	movf	___llmod@divisor+1,w,c
  5535  003622  5810               	subwfb	___llmod@dividend+1,w,c
  5536  003624  5015               	movf	___llmod@divisor+2,w,c
  5537  003626  5811               	subwfb	___llmod@dividend+2,w,c
  5538  003628  5016               	movf	___llmod@divisor+3,w,c
  5539  00362A  5812               	subwfb	___llmod@dividend+3,w,c
  5540  00362C  A0D8               	btfss	status,0,c
  5541  00362E  D008               	goto	l3548
  5542  003630  5013               	movf	___llmod@divisor,w,c
  5543  003632  5E0F               	subwf	___llmod@dividend,f,c
  5544  003634  5014               	movf	___llmod@divisor+1,w,c
  5545  003636  5A10               	subwfb	___llmod@dividend+1,f,c
  5546  003638  5015               	movf	___llmod@divisor+2,w,c
  5547  00363A  5A11               	subwfb	___llmod@dividend+2,f,c
  5548  00363C  5016               	movf	___llmod@divisor+3,w,c
  5549  00363E  5A12               	subwfb	___llmod@dividend+3,f,c
  5550  003640                     l3548:
  5551  003640  90D8               	bcf	status,0,c
  5552  003642  3216               	rrcf	___llmod@divisor+3,f,c
  5553  003644  3215               	rrcf	___llmod@divisor+2,f,c
  5554  003646  3214               	rrcf	___llmod@divisor+1,f,c
  5555  003648  3213               	rrcf	___llmod@divisor,f,c
  5556  00364A  2E17               	decfsz	___llmod@counter,f,c
  5557  00364C  D7E7               	goto	l3544
  5558  00364E                     l718:
  5559  00364E  C00F  F00F         	movff	___llmod@dividend,?___llmod
  5560  003652  C010  F010         	movff	___llmod@dividend+1,?___llmod+1
  5561  003656  C011  F011         	movff	___llmod@dividend+2,?___llmod+2
  5562  00365A  C012  F012         	movff	___llmod@dividend+3,?___llmod+3
  5563  00365E  0012               	return		;funcret
  5564  003660                     __end_of___llmod:
  5565                           	opt stack 0
  5566                           tblptru	equ	0xFF8
  5567                           tblptrh	equ	0xFF7
  5568                           tblptrl	equ	0xFF6
  5569                           tablat	equ	0xFF5
  5570                           prodh	equ	0xFF4
  5571                           prodl	equ	0xFF3
  5572                           intcon	equ	0xFF2
  5573                           postinc0	equ	0xFEE
  5574                           wreg	equ	0xFE8
  5575                           indf1	equ	0xFE7
  5576                           plusw1	equ	0xFE3
  5577                           fsr1h	equ	0xFE2
  5578                           fsr1l	equ	0xFE1
  5579                           indf2	equ	0xFDF
  5580                           postinc2	equ	0xFDE
  5581                           plusw2	equ	0xFDB
  5582                           fsr2h	equ	0xFDA
  5583                           fsr2l	equ	0xFD9
  5584                           status	equ	0xFD8
  5585                           
  5586 ;; *************** function ___lldiv *****************
  5587 ;; Defined at:
  5588 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
  5589 ;; Parameters:    Size  Location     Type
  5590 ;;  dividend        4   14[COMRAM] unsigned long 
  5591 ;;  divisor         4   18[COMRAM] unsigned long 
  5592 ;; Auto vars:     Size  Location     Type
  5593 ;;  quotient        4   22[COMRAM] unsigned long 
  5594 ;;  counter         1   26[COMRAM] unsigned char 
  5595 ;; Return value:  Size  Location     Type
  5596 ;;                  4   14[COMRAM] unsigned long 
  5597 ;; Registers used:
  5598 ;;		wreg, status,2, status,0
  5599 ;; Tracked objects:
  5600 ;;		On entry : 0/0
  5601 ;;		On exit  : 0/0
  5602 ;;		Unchanged: 0/0
  5603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5604 ;;      Params:         8       0       0       0       0       0       0       0       0
  5605 ;;      Locals:         5       0       0       0       0       0       0       0       0
  5606 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5607 ;;      Totals:        13       0       0       0       0       0       0       0       0
  5608 ;;Total ram usage:       13 bytes
  5609 ;; Hardware stack levels used:    1
  5610 ;; Hardware stack levels required when called:    1
  5611 ;; This function calls:
  5612 ;;		Nothing
  5613 ;; This function is called by:
  5614 ;;		_sprintf
  5615 ;; This function uses a non-reentrant model
  5616 ;;
  5617                           
  5618                           	psect	text18
  5619  003498                     __ptext18:
  5620                           	opt stack 0
  5621  003498                     ___lldiv:
  5622                           	opt stack 27
  5623                           
  5624                           ;incstack = 0
  5625  003498  0E00               	movlw	0
  5626  00349A  6E17               	movwf	___lldiv@quotient,c
  5627  00349C  0E00               	movlw	0
  5628  00349E  6E18               	movwf	___lldiv@quotient+1,c
  5629  0034A0  0E00               	movlw	0
  5630  0034A2  6E19               	movwf	___lldiv@quotient+2,c
  5631  0034A4  0E00               	movlw	0
  5632  0034A6  6E1A               	movwf	___lldiv@quotient+3,c
  5633  0034A8  5013               	movf	___lldiv@divisor,w,c
  5634  0034AA  1014               	iorwf	___lldiv@divisor+1,w,c
  5635  0034AC  1015               	iorwf	___lldiv@divisor+2,w,c
  5636  0034AE  1016               	iorwf	___lldiv@divisor+3,w,c
  5637  0034B0  B4D8               	btfsc	status,2,c
  5638  0034B2  D02A               	goto	l708
  5639  0034B4  0E01               	movlw	1
  5640  0034B6  6E1B               	movwf	___lldiv@counter,c
  5641  0034B8  D006               	goto	l3522
  5642  0034BA                     l3520:
  5643  0034BA  90D8               	bcf	status,0,c
  5644  0034BC  3613               	rlcf	___lldiv@divisor,f,c
  5645  0034BE  3614               	rlcf	___lldiv@divisor+1,f,c
  5646  0034C0  3615               	rlcf	___lldiv@divisor+2,f,c
  5647  0034C2  3616               	rlcf	___lldiv@divisor+3,f,c
  5648  0034C4  2A1B               	incf	___lldiv@counter,f,c
  5649  0034C6                     l3522:
  5650  0034C6  AE16               	btfss	___lldiv@divisor+3,7,c
  5651  0034C8  D7F8               	goto	l3520
  5652  0034CA                     l3524:
  5653  0034CA  90D8               	bcf	status,0,c
  5654  0034CC  3617               	rlcf	___lldiv@quotient,f,c
  5655  0034CE  3618               	rlcf	___lldiv@quotient+1,f,c
  5656  0034D0  3619               	rlcf	___lldiv@quotient+2,f,c
  5657  0034D2  361A               	rlcf	___lldiv@quotient+3,f,c
  5658  0034D4  5013               	movf	___lldiv@divisor,w,c
  5659  0034D6  5C0F               	subwf	___lldiv@dividend,w,c
  5660  0034D8  5014               	movf	___lldiv@divisor+1,w,c
  5661  0034DA  5810               	subwfb	___lldiv@dividend+1,w,c
  5662  0034DC  5015               	movf	___lldiv@divisor+2,w,c
  5663  0034DE  5811               	subwfb	___lldiv@dividend+2,w,c
  5664  0034E0  5016               	movf	___lldiv@divisor+3,w,c
  5665  0034E2  5812               	subwfb	___lldiv@dividend+3,w,c
  5666  0034E4  A0D8               	btfss	status,0,c
  5667  0034E6  D009               	goto	l3532
  5668  0034E8  5013               	movf	___lldiv@divisor,w,c
  5669  0034EA  5E0F               	subwf	___lldiv@dividend,f,c
  5670  0034EC  5014               	movf	___lldiv@divisor+1,w,c
  5671  0034EE  5A10               	subwfb	___lldiv@dividend+1,f,c
  5672  0034F0  5015               	movf	___lldiv@divisor+2,w,c
  5673  0034F2  5A11               	subwfb	___lldiv@dividend+2,f,c
  5674  0034F4  5016               	movf	___lldiv@divisor+3,w,c
  5675  0034F6  5A12               	subwfb	___lldiv@dividend+3,f,c
  5676  0034F8  8017               	bsf	___lldiv@quotient,0,c
  5677  0034FA                     l3532:
  5678  0034FA  90D8               	bcf	status,0,c
  5679  0034FC  3216               	rrcf	___lldiv@divisor+3,f,c
  5680  0034FE  3215               	rrcf	___lldiv@divisor+2,f,c
  5681  003500  3214               	rrcf	___lldiv@divisor+1,f,c
  5682  003502  3213               	rrcf	___lldiv@divisor,f,c
  5683  003504  2E1B               	decfsz	___lldiv@counter,f,c
  5684  003506  D7E1               	goto	l3524
  5685  003508                     l708:
  5686  003508  C017  F00F         	movff	___lldiv@quotient,?___lldiv
  5687  00350C  C018  F010         	movff	___lldiv@quotient+1,?___lldiv+1
  5688  003510  C019  F011         	movff	___lldiv@quotient+2,?___lldiv+2
  5689  003514  C01A  F012         	movff	___lldiv@quotient+3,?___lldiv+3
  5690  003518  0012               	return		;funcret
  5691  00351A                     __end_of___lldiv:
  5692                           	opt stack 0
  5693                           tblptru	equ	0xFF8
  5694                           tblptrh	equ	0xFF7
  5695                           tblptrl	equ	0xFF6
  5696                           tablat	equ	0xFF5
  5697                           prodh	equ	0xFF4
  5698                           prodl	equ	0xFF3
  5699                           intcon	equ	0xFF2
  5700                           postinc0	equ	0xFEE
  5701                           wreg	equ	0xFE8
  5702                           indf1	equ	0xFE7
  5703                           plusw1	equ	0xFE3
  5704                           fsr1h	equ	0xFE2
  5705                           fsr1l	equ	0xFE1
  5706                           indf2	equ	0xFDF
  5707                           postinc2	equ	0xFDE
  5708                           plusw2	equ	0xFDB
  5709                           fsr2h	equ	0xFDA
  5710                           fsr2l	equ	0xFD9
  5711                           status	equ	0xFD8
  5712                           
  5713 ;; *************** function ___fltol *****************
  5714 ;; Defined at:
  5715 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fltol.c"
  5716 ;; Parameters:    Size  Location     Type
  5717 ;;  f1              4   62[COMRAM] unsigned long 
  5718 ;; Auto vars:     Size  Location     Type
  5719 ;;  exp1            1    5[BANK0 ] unsigned char 
  5720 ;;  sign1           1    4[BANK0 ] unsigned char 
  5721 ;; Return value:  Size  Location     Type
  5722 ;;                  4   62[COMRAM] long 
  5723 ;; Registers used:
  5724 ;;		wreg, status,2, status,0
  5725 ;; Tracked objects:
  5726 ;;		On entry : 0/0
  5727 ;;		On exit  : 0/0
  5728 ;;		Unchanged: 0/0
  5729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5730 ;;      Params:         4       0       0       0       0       0       0       0       0
  5731 ;;      Locals:         0       2       0       0       0       0       0       0       0
  5732 ;;      Temps:          0       4       0       0       0       0       0       0       0
  5733 ;;      Totals:         4       6       0       0       0       0       0       0       0
  5734 ;;Total ram usage:       10 bytes
  5735 ;; Hardware stack levels used:    1
  5736 ;; Hardware stack levels required when called:    1
  5737 ;; This function calls:
  5738 ;;		Nothing
  5739 ;; This function is called by:
  5740 ;;		_sprintf
  5741 ;; This function uses a non-reentrant model
  5742 ;;
  5743                           
  5744                           	psect	text19
  5745  0030F6                     __ptext19:
  5746                           	opt stack 0
  5747  0030F6                     ___fltol:
  5748                           	opt stack 27
  5749                           
  5750                           ;incstack = 0
  5751  0030F6  3441               	rlcf	___fltol@f1+2,w,c
  5752  0030F8  3442               	rlcf	___fltol@f1+3,w,c
  5753  0030FA  0100               	movlb	0	; () banked
  5754  0030FC  6F65               	movwf	___fltol@exp1& (0+255),b
  5755  0030FE  0100               	movlb	0	; () banked
  5756  003100  5165               	movf	___fltol@exp1& (0+255),w,b
  5757  003102  A4D8               	btfss	status,2,c
  5758  003104  D009               	goto	l4482
  5759                           
  5760                           ; BSR set to: 0
  5761  003106  0E00               	movlw	0
  5762  003108  6E3F               	movwf	?___fltol,c
  5763  00310A  0E00               	movlw	0
  5764  00310C  6E40               	movwf	?___fltol+1,c
  5765  00310E  0E00               	movlw	0
  5766  003110  6E41               	movwf	?___fltol+2,c
  5767  003112  0E00               	movlw	0
  5768  003114  6E42               	movwf	?___fltol+3,c
  5769                           
  5770                           ; BSR set to: 0
  5771  003116  0012               	return	
  5772  003118                     l4482:
  5773                           
  5774                           ; BSR set to: 0
  5775  003118  C03F  F060         	movff	___fltol@f1,??___fltol
  5776  00311C  C040  F061         	movff	___fltol@f1+1,??___fltol+1
  5777  003120  C041  F062         	movff	___fltol@f1+2,??___fltol+2
  5778  003124  C042  F063         	movff	___fltol@f1+3,??___fltol+3
  5779  003128  0E20               	movlw	32
  5780  00312A  D006               	goto	u5010
  5781  00312C                     u5015:
  5782  00312C  0100               	movlb	0	; () banked
  5783  00312E  90D8               	bcf	status,0,c
  5784  003130  3363               	rrcf	(??___fltol+3)& (0+255),f,b
  5785  003132  3362               	rrcf	(??___fltol+2)& (0+255),f,b
  5786  003134  3361               	rrcf	(??___fltol+1)& (0+255),f,b
  5787  003136  3360               	rrcf	??___fltol& (0+255),f,b
  5788  003138                     u5010:
  5789  003138  2EE8               	decfsz	wreg,f,c
  5790  00313A  D7F8               	goto	u5015
  5791  00313C  0100               	movlb	0	; () banked
  5792  00313E  5160               	movf	??___fltol& (0+255),w,b
  5793  003140  0100               	movlb	0	; () banked
  5794  003142  6F64               	movwf	___fltol@sign1& (0+255),b
  5795                           
  5796                           ; BSR set to: 0
  5797  003144  8E41               	bsf	___fltol@f1+2,7,c
  5798                           
  5799                           ; BSR set to: 0
  5800  003146  0EFF               	movlw	255
  5801  003148  163F               	andwf	___fltol@f1,f,c
  5802  00314A  0EFF               	movlw	255
  5803  00314C  1640               	andwf	___fltol@f1+1,f,c
  5804  00314E  0EFF               	movlw	255
  5805  003150  1641               	andwf	___fltol@f1+2,f,c
  5806  003152  0E00               	movlw	0
  5807  003154  1642               	andwf	___fltol@f1+3,f,c
  5808                           
  5809                           ; BSR set to: 0
  5810  003156  0E96               	movlw	150
  5811  003158  0100               	movlb	0	; () banked
  5812  00315A  5F65               	subwf	___fltol@exp1& (0+255),f,b
  5813                           
  5814                           ; BSR set to: 0
  5815  00315C  0100               	movlb	0	; () banked
  5816  00315E  AF65               	btfss	___fltol@exp1& (0+255),7,b
  5817  003160  D018               	goto	l4502
  5818                           
  5819                           ; BSR set to: 0
  5820  003162  0100               	movlb	0	; () banked
  5821  003164  5165               	movf	___fltol@exp1& (0+255),w,b
  5822  003166  0A80               	xorlw	128
  5823  003168  0F97               	addlw	151
  5824  00316A  B0D8               	btfsc	status,0,c
  5825  00316C  D009               	goto	l4498
  5826                           
  5827                           ; BSR set to: 0
  5828  00316E  0E00               	movlw	0
  5829  003170  6E3F               	movwf	?___fltol,c
  5830  003172  0E00               	movlw	0
  5831  003174  6E40               	movwf	?___fltol+1,c
  5832  003176  0E00               	movlw	0
  5833  003178  6E41               	movwf	?___fltol+2,c
  5834  00317A  0E00               	movlw	0
  5835  00317C  6E42               	movwf	?___fltol+3,c
  5836                           
  5837                           ; BSR set to: 0
  5838  00317E  0012               	return	
  5839  003180                     l4498:
  5840                           
  5841                           ; BSR set to: 0
  5842  003180  90D8               	bcf	status,0,c
  5843  003182  3242               	rrcf	___fltol@f1+3,f,c
  5844  003184  3241               	rrcf	___fltol@f1+2,f,c
  5845  003186  3240               	rrcf	___fltol@f1+1,f,c
  5846  003188  323F               	rrcf	___fltol@f1,f,c
  5847                           
  5848                           ; BSR set to: 0
  5849  00318A  0100               	movlb	0	; () banked
  5850  00318C  3F65               	incfsz	___fltol@exp1& (0+255),f,b
  5851  00318E  D7F8               	goto	l4498
  5852                           
  5853                           ; BSR set to: 0
  5854  003190  D019               	goto	l4512
  5855  003192                     l4502:
  5856                           
  5857                           ; BSR set to: 0
  5858  003192  0E1F               	movlw	31
  5859  003194  0100               	movlb	0	; () banked
  5860  003196  6565               	cpfsgt	___fltol@exp1& (0+255),b
  5861  003198  D010               	goto	l4510
  5862                           
  5863                           ; BSR set to: 0
  5864  00319A  0E00               	movlw	0
  5865  00319C  6E3F               	movwf	?___fltol,c
  5866  00319E  0E00               	movlw	0
  5867  0031A0  6E40               	movwf	?___fltol+1,c
  5868  0031A2  0E00               	movlw	0
  5869  0031A4  6E41               	movwf	?___fltol+2,c
  5870  0031A6  0E00               	movlw	0
  5871  0031A8  6E42               	movwf	?___fltol+3,c
  5872                           
  5873                           ; BSR set to: 0
  5874  0031AA  0012               	return	
  5875  0031AC                     l4508:
  5876                           
  5877                           ; BSR set to: 0
  5878  0031AC  90D8               	bcf	status,0,c
  5879  0031AE  363F               	rlcf	___fltol@f1,f,c
  5880  0031B0  3640               	rlcf	___fltol@f1+1,f,c
  5881  0031B2  3641               	rlcf	___fltol@f1+2,f,c
  5882  0031B4  3642               	rlcf	___fltol@f1+3,f,c
  5883  0031B6  0100               	movlb	0	; () banked
  5884  0031B8  0765               	decf	___fltol@exp1& (0+255),f,b
  5885  0031BA                     l4510:
  5886                           
  5887                           ; BSR set to: 0
  5888  0031BA  0100               	movlb	0	; () banked
  5889  0031BC  5165               	movf	___fltol@exp1& (0+255),w,b
  5890  0031BE  0100               	movlb	0	; () banked
  5891  0031C0  A4D8               	btfss	status,2,c
  5892  0031C2  D7F4               	goto	l4508
  5893  0031C4                     l4512:
  5894                           
  5895                           ; BSR set to: 0
  5896  0031C4  0100               	movlb	0	; () banked
  5897  0031C6  5164               	movf	___fltol@sign1& (0+255),w,b
  5898  0031C8  0100               	movlb	0	; () banked
  5899  0031CA  B4D8               	btfsc	status,2,c
  5900  0031CC  D008               	goto	l4516
  5901                           
  5902                           ; BSR set to: 0
  5903  0031CE  1E42               	comf	___fltol@f1+3,f,c
  5904  0031D0  1E41               	comf	___fltol@f1+2,f,c
  5905  0031D2  1E40               	comf	___fltol@f1+1,f,c
  5906  0031D4  6C3F               	negf	___fltol@f1,c
  5907  0031D6  0E00               	movlw	0
  5908  0031D8  2240               	addwfc	___fltol@f1+1,f,c
  5909  0031DA  2241               	addwfc	___fltol@f1+2,f,c
  5910  0031DC  2242               	addwfc	___fltol@f1+3,f,c
  5911  0031DE                     l4516:
  5912                           
  5913                           ; BSR set to: 0
  5914  0031DE  C03F  F03F         	movff	___fltol@f1,?___fltol
  5915  0031E2  C040  F040         	movff	___fltol@f1+1,?___fltol+1
  5916  0031E6  C041  F041         	movff	___fltol@f1+2,?___fltol+2
  5917  0031EA  C042  F042         	movff	___fltol@f1+3,?___fltol+3
  5918  0031EE  0012               	return	
  5919  0031F0                     __end_of___fltol:
  5920                           	opt stack 0
  5921                           tblptru	equ	0xFF8
  5922                           tblptrh	equ	0xFF7
  5923                           tblptrl	equ	0xFF6
  5924                           tablat	equ	0xFF5
  5925                           prodh	equ	0xFF4
  5926                           prodl	equ	0xFF3
  5927                           intcon	equ	0xFF2
  5928                           postinc0	equ	0xFEE
  5929                           wreg	equ	0xFE8
  5930                           indf1	equ	0xFE7
  5931                           plusw1	equ	0xFE3
  5932                           fsr1h	equ	0xFE2
  5933                           fsr1l	equ	0xFE1
  5934                           indf2	equ	0xFDF
  5935                           postinc2	equ	0xFDE
  5936                           plusw2	equ	0xFDB
  5937                           fsr2h	equ	0xFDA
  5938                           fsr2l	equ	0xFD9
  5939                           status	equ	0xFD8
  5940                           
  5941 ;; *************** function ___flsub *****************
  5942 ;; Defined at:
  5943 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
  5944 ;; Parameters:    Size  Location     Type
  5945 ;;  b               4   20[BANK0 ] long 
  5946 ;;  a               4   24[BANK0 ] long 
  5947 ;; Auto vars:     Size  Location     Type
  5948 ;;		None
  5949 ;; Return value:  Size  Location     Type
  5950 ;;                  4   20[BANK0 ] long 
  5951 ;; Registers used:
  5952 ;;		wreg, status,2, status,0, cstack
  5953 ;; Tracked objects:
  5954 ;;		On entry : 0/0
  5955 ;;		On exit  : 0/0
  5956 ;;		Unchanged: 0/0
  5957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5958 ;;      Params:         0       8       0       0       0       0       0       0       0
  5959 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5960 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5961 ;;      Totals:         0       8       0       0       0       0       0       0       0
  5962 ;;Total ram usage:        8 bytes
  5963 ;; Hardware stack levels used:    1
  5964 ;; Hardware stack levels required when called:    2
  5965 ;; This function calls:
  5966 ;;		___fladd
  5967 ;; This function is called by:
  5968 ;;		_sprintf
  5969 ;; This function uses a non-reentrant model
  5970 ;;
  5971                           
  5972                           	psect	text20
  5973  0037C2                     __ptext20:
  5974                           	opt stack 0
  5975  0037C2                     ___flsub:
  5976                           	opt stack 26
  5977                           
  5978                           ; BSR set to: 0
  5979                           ;incstack = 0
  5980  0037C2  0E00               	movlw	0
  5981  0037C4  0100               	movlb	0	; () banked
  5982  0037C6  1B78               	xorwf	___flsub@a& (0+255),f,b
  5983  0037C8  0E00               	movlw	0
  5984  0037CA  1B79               	xorwf	(___flsub@a+1)& (0+255),f,b
  5985  0037CC  0E00               	movlw	0
  5986  0037CE  1B7A               	xorwf	(___flsub@a+2)& (0+255),f,b
  5987  0037D0  0E80               	movlw	128
  5988  0037D2  1B7B               	xorwf	(___flsub@a+3)& (0+255),f,b
  5989                           
  5990                           ; BSR set to: 0
  5991  0037D4  C074  F060         	movff	___flsub@b,___fladd@b
  5992  0037D8  C075  F061         	movff	___flsub@b+1,___fladd@b+1
  5993  0037DC  C076  F062         	movff	___flsub@b+2,___fladd@b+2
  5994  0037E0  C077  F063         	movff	___flsub@b+3,___fladd@b+3
  5995  0037E4  C078  F064         	movff	___flsub@a,___fladd@a
  5996  0037E8  C079  F065         	movff	___flsub@a+1,___fladd@a+1
  5997  0037EC  C07A  F066         	movff	___flsub@a+2,___fladd@a+2
  5998  0037F0  C07B  F067         	movff	___flsub@a+3,___fladd@a+3
  5999  0037F4  EC9D  F008         	call	___fladd	;wreg free
  6000  0037F8  C060  F074         	movff	?___fladd,?___flsub
  6001  0037FC  C061  F075         	movff	?___fladd+1,?___flsub+1
  6002  003800  C062  F076         	movff	?___fladd+2,?___flsub+2
  6003  003804  C063  F077         	movff	?___fladd+3,?___flsub+3
  6004  003808  0012               	return	
  6005  00380A                     __end_of___flsub:
  6006                           	opt stack 0
  6007                           tblptru	equ	0xFF8
  6008                           tblptrh	equ	0xFF7
  6009                           tblptrl	equ	0xFF6
  6010                           tablat	equ	0xFF5
  6011                           prodh	equ	0xFF4
  6012                           prodl	equ	0xFF3
  6013                           intcon	equ	0xFF2
  6014                           postinc0	equ	0xFEE
  6015                           wreg	equ	0xFE8
  6016                           indf1	equ	0xFE7
  6017                           plusw1	equ	0xFE3
  6018                           fsr1h	equ	0xFE2
  6019                           fsr1l	equ	0xFE1
  6020                           indf2	equ	0xFDF
  6021                           postinc2	equ	0xFDE
  6022                           plusw2	equ	0xFDB
  6023                           fsr2h	equ	0xFDA
  6024                           fsr2l	equ	0xFD9
  6025                           status	equ	0xFD8
  6026                           
  6027 ;; *************** function ___fladd *****************
  6028 ;; Defined at:
  6029 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
  6030 ;; Parameters:    Size  Location     Type
  6031 ;;  b               4    0[BANK0 ] long 
  6032 ;;  a               4    4[BANK0 ] long 
  6033 ;; Auto vars:     Size  Location     Type
  6034 ;;  grs             1   19[BANK0 ] unsigned char 
  6035 ;;  bexp            1   18[BANK0 ] unsigned char 
  6036 ;;  aexp            1   17[BANK0 ] unsigned char 
  6037 ;;  signs           1   16[BANK0 ] unsigned char 
  6038 ;; Return value:  Size  Location     Type
  6039 ;;                  4    0[BANK0 ] unsigned char 
  6040 ;; Registers used:
  6041 ;;		wreg, status,2, status,0
  6042 ;; Tracked objects:
  6043 ;;		On entry : 0/0
  6044 ;;		On exit  : 0/0
  6045 ;;		Unchanged: 0/0
  6046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6047 ;;      Params:         0       8       0       0       0       0       0       0       0
  6048 ;;      Locals:         0       4       0       0       0       0       0       0       0
  6049 ;;      Temps:          0       8       0       0       0       0       0       0       0
  6050 ;;      Totals:         0      20       0       0       0       0       0       0       0
  6051 ;;Total ram usage:       20 bytes
  6052 ;; Hardware stack levels used:    1
  6053 ;; Hardware stack levels required when called:    1
  6054 ;; This function calls:
  6055 ;;		Nothing
  6056 ;; This function is called by:
  6057 ;;		_scarica
  6058 ;;		_sprintf
  6059 ;;		___flsub
  6060 ;; This function uses a non-reentrant model
  6061 ;;
  6062                           
  6063                           	psect	text21
  6064  00113A                     __ptext21:
  6065                           	opt stack 0
  6066  00113A                     ___fladd:
  6067                           	opt stack 26
  6068                           
  6069                           ;incstack = 0
  6070  00113A  0100               	movlb	0	; () banked
  6071  00113C  5163               	movf	(___fladd@b+3)& (0+255),w,b
  6072  00113E  0B80               	andlw	128
  6073  001140  0100               	movlb	0	; () banked
  6074  001142  6F70               	movwf	___fladd@signs& (0+255),b
  6075  001144  0100               	movlb	0	; () banked
  6076  001146  5163               	movf	(___fladd@b+3)& (0+255),w,b
  6077  001148  2563               	addwf	(___fladd@b+3)& (0+255),w,b
  6078  00114A  0100               	movlb	0	; () banked
  6079  00114C  6F72               	movwf	___fladd@bexp& (0+255),b
  6080                           
  6081                           ; BSR set to: 0
  6082  00114E  0100               	movlb	0	; () banked
  6083  001150  AF62               	btfss	(___fladd@b+2)& (0+255),7,b
  6084  001152  D002               	goto	l4138
  6085                           
  6086                           ; BSR set to: 0
  6087  001154  0100               	movlb	0	; () banked
  6088  001156  8172               	bsf	___fladd@bexp& (0+255),0,b
  6089  001158                     l4138:
  6090                           
  6091                           ; BSR set to: 0
  6092  001158  0100               	movlb	0	; () banked
  6093  00115A  5172               	movf	___fladd@bexp& (0+255),w,b
  6094  00115C  0100               	movlb	0	; () banked
  6095  00115E  B4D8               	btfsc	status,2,c
  6096  001160  D012               	goto	l4148
  6097                           
  6098                           ; BSR set to: 0
  6099  001162  0100               	movlb	0	; () banked
  6100  001164  2972               	incf	___fladd@bexp& (0+255),w,b
  6101  001166  A4D8               	btfss	status,2,c
  6102  001168  D009               	goto	l4144
  6103                           
  6104                           ; BSR set to: 0
  6105  00116A  0E00               	movlw	0
  6106  00116C  0100               	movlb	0	; () banked
  6107  00116E  6F60               	movwf	___fladd@b& (0+255),b
  6108  001170  0E00               	movlw	0
  6109  001172  6F61               	movwf	(___fladd@b+1)& (0+255),b
  6110  001174  0E00               	movlw	0
  6111  001176  6F62               	movwf	(___fladd@b+2)& (0+255),b
  6112  001178  0E00               	movlw	0
  6113  00117A  6F63               	movwf	(___fladd@b+3)& (0+255),b
  6114  00117C                     l4144:
  6115                           
  6116                           ; BSR set to: 0
  6117  00117C  0100               	movlb	0	; () banked
  6118  00117E  8F62               	bsf	(___fladd@b+2)& (0+255),7,b
  6119                           
  6120                           ; BSR set to: 0
  6121  001180  0E00               	movlw	0
  6122  001182  0100               	movlb	0	; () banked
  6123  001184  D008               	goto	L7
  6124  001186                     l4148:
  6125                           
  6126                           ; BSR set to: 0
  6127  001186  0E00               	movlw	0
  6128  001188  0100               	movlb	0	; () banked
  6129  00118A  6F60               	movwf	___fladd@b& (0+255),b
  6130  00118C  0E00               	movlw	0
  6131  00118E  6F61               	movwf	(___fladd@b+1)& (0+255),b
  6132  001190  0E00               	movlw	0
  6133  001192  6F62               	movwf	(___fladd@b+2)& (0+255),b
  6134  001194  0E00               	movlw	0
  6135  001196                     L7:
  6136  001196  6F63               	movwf	(___fladd@b+3)& (0+255),b
  6137                           
  6138                           ; BSR set to: 0
  6139                           
  6140                           ; BSR set to: 0
  6141  001198  0100               	movlb	0	; () banked
  6142  00119A  5167               	movf	(___fladd@a+3)& (0+255),w,b
  6143  00119C  0B80               	andlw	128
  6144  00119E  0100               	movlb	0	; () banked
  6145  0011A0  6F71               	movwf	___fladd@aexp& (0+255),b
  6146                           
  6147                           ; BSR set to: 0
  6148  0011A2  0100               	movlb	0	; () banked
  6149  0011A4  5170               	movf	___fladd@signs& (0+255),w,b
  6150  0011A6  0100               	movlb	0	; () banked
  6151  0011A8  1971               	xorwf	___fladd@aexp& (0+255),w,b
  6152  0011AA  B4D8               	btfsc	status,2,c
  6153  0011AC  D002               	goto	l4156
  6154                           
  6155                           ; BSR set to: 0
  6156  0011AE  0100               	movlb	0	; () banked
  6157  0011B0  8D70               	bsf	___fladd@signs& (0+255),6,b
  6158  0011B2                     l4156:
  6159                           
  6160                           ; BSR set to: 0
  6161  0011B2  0100               	movlb	0	; () banked
  6162  0011B4  5167               	movf	(___fladd@a+3)& (0+255),w,b
  6163  0011B6  2567               	addwf	(___fladd@a+3)& (0+255),w,b
  6164  0011B8  0100               	movlb	0	; () banked
  6165  0011BA  6F71               	movwf	___fladd@aexp& (0+255),b
  6166                           
  6167                           ; BSR set to: 0
  6168  0011BC  0100               	movlb	0	; () banked
  6169  0011BE  AF66               	btfss	(___fladd@a+2)& (0+255),7,b
  6170  0011C0  D002               	goto	l4162
  6171                           
  6172                           ; BSR set to: 0
  6173  0011C2  0100               	movlb	0	; () banked
  6174  0011C4  8171               	bsf	___fladd@aexp& (0+255),0,b
  6175  0011C6                     l4162:
  6176                           
  6177                           ; BSR set to: 0
  6178  0011C6  0100               	movlb	0	; () banked
  6179  0011C8  5171               	movf	___fladd@aexp& (0+255),w,b
  6180  0011CA  0100               	movlb	0	; () banked
  6181  0011CC  B4D8               	btfsc	status,2,c
  6182  0011CE  D012               	goto	l4172
  6183                           
  6184                           ; BSR set to: 0
  6185  0011D0  0100               	movlb	0	; () banked
  6186  0011D2  2971               	incf	___fladd@aexp& (0+255),w,b
  6187  0011D4  A4D8               	btfss	status,2,c
  6188  0011D6  D009               	goto	l4168
  6189                           
  6190                           ; BSR set to: 0
  6191  0011D8  0E00               	movlw	0
  6192  0011DA  0100               	movlb	0	; () banked
  6193  0011DC  6F64               	movwf	___fladd@a& (0+255),b
  6194  0011DE  0E00               	movlw	0
  6195  0011E0  6F65               	movwf	(___fladd@a+1)& (0+255),b
  6196  0011E2  0E00               	movlw	0
  6197  0011E4  6F66               	movwf	(___fladd@a+2)& (0+255),b
  6198  0011E6  0E00               	movlw	0
  6199  0011E8  6F67               	movwf	(___fladd@a+3)& (0+255),b
  6200  0011EA                     l4168:
  6201                           
  6202                           ; BSR set to: 0
  6203  0011EA  0100               	movlb	0	; () banked
  6204  0011EC  8F66               	bsf	(___fladd@a+2)& (0+255),7,b
  6205                           
  6206                           ; BSR set to: 0
  6207  0011EE  0E00               	movlw	0
  6208  0011F0  0100               	movlb	0	; () banked
  6209  0011F2  D008               	goto	L8
  6210  0011F4                     l4172:
  6211                           
  6212                           ; BSR set to: 0
  6213  0011F4  0E00               	movlw	0
  6214  0011F6  0100               	movlb	0	; () banked
  6215  0011F8  6F64               	movwf	___fladd@a& (0+255),b
  6216  0011FA  0E00               	movlw	0
  6217  0011FC  6F65               	movwf	(___fladd@a+1)& (0+255),b
  6218  0011FE  0E00               	movlw	0
  6219  001200  6F66               	movwf	(___fladd@a+2)& (0+255),b
  6220  001202  0E00               	movlw	0
  6221  001204                     L8:
  6222  001204  6F67               	movwf	(___fladd@a+3)& (0+255),b
  6223                           
  6224                           ; BSR set to: 0
  6225                           
  6226                           ; BSR set to: 0
  6227  001206  0100               	movlb	0	; () banked
  6228  001208  5172               	movf	___fladd@bexp& (0+255),w,b
  6229  00120A  0100               	movlb	0	; () banked
  6230  00120C  5D71               	subwf	___fladd@aexp& (0+255),w,b
  6231  00120E  B0D8               	btfsc	status,0,c
  6232  001210  D024               	goto	l4210
  6233                           
  6234                           ; BSR set to: 0
  6235  001212  0100               	movlb	0	; () banked
  6236  001214  AD70               	btfss	___fladd@signs& (0+255),6,b
  6237  001216  D003               	goto	l4180
  6238                           
  6239                           ; BSR set to: 0
  6240  001218  0E80               	movlw	128
  6241  00121A  0100               	movlb	0	; () banked
  6242  00121C  1B70               	xorwf	___fladd@signs& (0+255),f,b
  6243  00121E                     l4180:
  6244                           
  6245                           ; BSR set to: 0
  6246  00121E  C072  F073         	movff	___fladd@bexp,___fladd@grs
  6247                           
  6248                           ; BSR set to: 0
  6249  001222  C071  F072         	movff	___fladd@aexp,___fladd@bexp
  6250                           
  6251                           ; BSR set to: 0
  6252  001226  C073  F071         	movff	___fladd@grs,___fladd@aexp
  6253                           
  6254                           ; BSR set to: 0
  6255  00122A  C060  F073         	movff	___fladd@b,___fladd@grs
  6256                           
  6257                           ; BSR set to: 0
  6258  00122E  C064  F060         	movff	___fladd@a,___fladd@b
  6259                           
  6260                           ; BSR set to: 0
  6261  001232  C073  F064         	movff	___fladd@grs,___fladd@a
  6262                           
  6263                           ; BSR set to: 0
  6264  001236  C061  F073         	movff	___fladd@b+1,___fladd@grs
  6265                           
  6266                           ; BSR set to: 0
  6267  00123A  C065  F061         	movff	___fladd@a+1,___fladd@b+1
  6268                           
  6269                           ; BSR set to: 0
  6270  00123E  C073  F065         	movff	___fladd@grs,___fladd@a+1
  6271                           
  6272                           ; BSR set to: 0
  6273  001242  C062  F073         	movff	___fladd@b+2,___fladd@grs
  6274                           
  6275                           ; BSR set to: 0
  6276  001246  C066  F062         	movff	___fladd@a+2,___fladd@b+2
  6277                           
  6278                           ; BSR set to: 0
  6279  00124A  C073  F066         	movff	___fladd@grs,___fladd@a+2
  6280                           
  6281                           ; BSR set to: 0
  6282  00124E  C063  F073         	movff	___fladd@b+3,___fladd@grs
  6283                           
  6284                           ; BSR set to: 0
  6285  001252  C067  F063         	movff	___fladd@a+3,___fladd@b+3
  6286                           
  6287                           ; BSR set to: 0
  6288  001256  C073  F067         	movff	___fladd@grs,___fladd@a+3
  6289  00125A                     l4210:
  6290                           
  6291                           ; BSR set to: 0
  6292  00125A  0E00               	movlw	0
  6293  00125C  0100               	movlb	0	; () banked
  6294  00125E  6F73               	movwf	___fladd@grs& (0+255),b
  6295                           
  6296                           ; BSR set to: 0
  6297  001260  0100               	movlb	0	; () banked
  6298  001262  5172               	movf	___fladd@bexp& (0+255),w,b
  6299  001264  0100               	movlb	0	; () banked
  6300  001266  6F68               	movwf	??___fladd& (0+255),b
  6301  001268  6B69               	clrf	(??___fladd+1)& (0+255),b
  6302  00126A  0100               	movlb	0	; () banked
  6303  00126C  1F68               	comf	??___fladd& (0+255),f,b
  6304  00126E  1F69               	comf	(??___fladd+1)& (0+255),f,b
  6305  001270  4B68               	infsnz	??___fladd& (0+255),f,b
  6306  001272  2B69               	incf	(??___fladd+1)& (0+255),f,b
  6307  001274  0100               	movlb	0	; () banked
  6308  001276  5171               	movf	___fladd@aexp& (0+255),w,b
  6309  001278  0100               	movlb	0	; () banked
  6310  00127A  6F6A               	movwf	(??___fladd+2)& (0+255),b
  6311  00127C  6B6B               	clrf	(??___fladd+3)& (0+255),b
  6312  00127E  0100               	movlb	0	; () banked
  6313  001280  5168               	movf	??___fladd& (0+255),w,b
  6314  001282  0100               	movlb	0	; () banked
  6315  001284  276A               	addwf	(??___fladd+2)& (0+255),f,b
  6316  001286  0100               	movlb	0	; () banked
  6317  001288  5169               	movf	(??___fladd+1)& (0+255),w,b
  6318  00128A  0100               	movlb	0	; () banked
  6319  00128C  236B               	addwfc	(??___fladd+3)& (0+255),f,b
  6320  00128E  0100               	movlb	0	; () banked
  6321  001290  BF6B               	btfsc	(??___fladd+3)& (0+255),7,b
  6322  001292  D03D               	goto	l803
  6323  001294  0100               	movlb	0	; () banked
  6324  001296  516B               	movf	(??___fladd+3)& (0+255),w,b
  6325  001298  E105               	bnz	u4470
  6326  00129A  0E1A               	movlw	26
  6327  00129C  0100               	movlb	0	; () banked
  6328  00129E  5D6A               	subwf	(??___fladd+2)& (0+255),w,b
  6329  0012A0  A0D8               	btfss	status,0,c
  6330  0012A2  D035               	goto	l803
  6331  0012A4                     u4470:
  6332                           
  6333                           ; BSR set to: 0
  6334  0012A4  0100               	movlb	0	; () banked
  6335  0012A6  5160               	movf	___fladd@b& (0+255),w,b
  6336  0012A8  0100               	movlb	0	; () banked
  6337  0012AA  1161               	iorwf	(___fladd@b+1)& (0+255),w,b
  6338  0012AC  0100               	movlb	0	; () banked
  6339  0012AE  1162               	iorwf	(___fladd@b+2)& (0+255),w,b
  6340  0012B0  0100               	movlb	0	; () banked
  6341  0012B2  1163               	iorwf	(___fladd@b+3)& (0+255),w,b
  6342  0012B4  B4D8               	btfsc	status,2,c
  6343  0012B6  D002               	goto	u4480
  6344  0012B8  0E01               	movlw	1
  6345  0012BA  D001               	goto	u4490
  6346  0012BC                     u4480:
  6347  0012BC  0E00               	movlw	0
  6348  0012BE                     u4490:
  6349  0012BE  0100               	movlb	0	; () banked
  6350  0012C0  6F73               	movwf	___fladd@grs& (0+255),b
  6351                           
  6352                           ; BSR set to: 0
  6353  0012C2  0E00               	movlw	0
  6354  0012C4  0100               	movlb	0	; () banked
  6355  0012C6  6F60               	movwf	___fladd@b& (0+255),b
  6356  0012C8  0E00               	movlw	0
  6357  0012CA  6F61               	movwf	(___fladd@b+1)& (0+255),b
  6358  0012CC  0E00               	movlw	0
  6359  0012CE  6F62               	movwf	(___fladd@b+2)& (0+255),b
  6360  0012D0  0E00               	movlw	0
  6361  0012D2  6F63               	movwf	(___fladd@b+3)& (0+255),b
  6362                           
  6363                           ; BSR set to: 0
  6364  0012D4  C071  F072         	movff	___fladd@aexp,___fladd@bexp
  6365  0012D8  D020               	goto	l802
  6366  0012DA                     l804:
  6367                           
  6368                           ; BSR set to: 0
  6369  0012DA  0100               	movlb	0	; () banked
  6370  0012DC  A173               	btfss	___fladd@grs& (0+255),0,b
  6371  0012DE  D007               	goto	l4222
  6372                           
  6373                           ; BSR set to: 0
  6374  0012E0  0100               	movlb	0	; () banked
  6375  0012E2  90D8               	bcf	status,0,c
  6376  0012E4  3173               	rrcf	___fladd@grs& (0+255),w,b
  6377  0012E6  0901               	iorlw	1
  6378  0012E8  0100               	movlb	0	; () banked
  6379  0012EA  6F73               	movwf	___fladd@grs& (0+255),b
  6380  0012EC  D003               	goto	l4224
  6381  0012EE                     l4222:
  6382                           
  6383                           ; BSR set to: 0
  6384  0012EE  0100               	movlb	0	; () banked
  6385  0012F0  90D8               	bcf	status,0,c
  6386  0012F2  3373               	rrcf	___fladd@grs& (0+255),f,b
  6387  0012F4                     l4224:
  6388                           
  6389                           ; BSR set to: 0
  6390  0012F4  0100               	movlb	0	; () banked
  6391  0012F6  A160               	btfss	___fladd@b& (0+255),0,b
  6392  0012F8  D002               	goto	l4228
  6393                           
  6394                           ; BSR set to: 0
  6395  0012FA  0100               	movlb	0	; () banked
  6396  0012FC  8F73               	bsf	___fladd@grs& (0+255),7,b
  6397  0012FE                     l4228:
  6398                           
  6399                           ; BSR set to: 0
  6400  0012FE  0100               	movlb	0	; () banked
  6401  001300  3563               	rlcf	(___fladd@b+3)& (0+255),w,b
  6402  001302  3363               	rrcf	(___fladd@b+3)& (0+255),f,b
  6403  001304  3362               	rrcf	(___fladd@b+2)& (0+255),f,b
  6404  001306  3361               	rrcf	(___fladd@b+1)& (0+255),f,b
  6405  001308  3360               	rrcf	___fladd@b& (0+255),f,b
  6406                           
  6407                           ; BSR set to: 0
  6408  00130A  0100               	movlb	0	; () banked
  6409  00130C  2B72               	incf	___fladd@bexp& (0+255),f,b
  6410  00130E                     l803:
  6411                           
  6412                           ; BSR set to: 0
  6413  00130E  0100               	movlb	0	; () banked
  6414  001310  5171               	movf	___fladd@aexp& (0+255),w,b
  6415  001312  0100               	movlb	0	; () banked
  6416  001314  5D72               	subwf	___fladd@bexp& (0+255),w,b
  6417  001316  A0D8               	btfss	status,0,c
  6418  001318  D7E0               	goto	l804
  6419  00131A                     l802:
  6420                           
  6421                           ; BSR set to: 0
  6422  00131A  0100               	movlb	0	; () banked
  6423  00131C  BD70               	btfsc	___fladd@signs& (0+255),6,b
  6424  00131E  D03F               	goto	l4256
  6425                           
  6426                           ; BSR set to: 0
  6427  001320  0100               	movlb	0	; () banked
  6428  001322  5172               	movf	___fladd@bexp& (0+255),w,b
  6429  001324  0100               	movlb	0	; () banked
  6430  001326  A4D8               	btfss	status,2,c
  6431  001328  D00A               	goto	l4238
  6432                           
  6433                           ; BSR set to: 0
  6434  00132A  0E00               	movlw	0
  6435  00132C  0100               	movlb	0	; () banked
  6436  00132E  6F60               	movwf	?___fladd& (0+255),b
  6437  001330  0E00               	movlw	0
  6438  001332  6F61               	movwf	(?___fladd+1)& (0+255),b
  6439  001334  0E00               	movlw	0
  6440  001336  6F62               	movwf	(?___fladd+2)& (0+255),b
  6441  001338  0E00               	movlw	0
  6442  00133A  6F63               	movwf	(?___fladd+3)& (0+255),b
  6443                           
  6444                           ; BSR set to: 0
  6445  00133C  0012               	return	
  6446  00133E                     l4238:
  6447                           
  6448                           ; BSR set to: 0
  6449  00133E  0100               	movlb	0	; () banked
  6450  001340  5164               	movf	___fladd@a& (0+255),w,b
  6451  001342  0100               	movlb	0	; () banked
  6452  001344  2760               	addwf	___fladd@b& (0+255),f,b
  6453  001346  0100               	movlb	0	; () banked
  6454  001348  5165               	movf	(___fladd@a+1)& (0+255),w,b
  6455  00134A  0100               	movlb	0	; () banked
  6456  00134C  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
  6457  00134E  0100               	movlb	0	; () banked
  6458  001350  5166               	movf	(___fladd@a+2)& (0+255),w,b
  6459  001352  0100               	movlb	0	; () banked
  6460  001354  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
  6461  001356  0100               	movlb	0	; () banked
  6462  001358  5167               	movf	(___fladd@a+3)& (0+255),w,b
  6463  00135A  0100               	movlb	0	; () banked
  6464  00135C  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
  6465                           
  6466                           ; BSR set to: 0
  6467  00135E  0100               	movlb	0	; () banked
  6468  001360  A163               	btfss	(___fladd@b+3)& (0+255),0,b
  6469  001362  D0CC               	goto	l4292
  6470                           
  6471                           ; BSR set to: 0
  6472  001364  0100               	movlb	0	; () banked
  6473  001366  A173               	btfss	___fladd@grs& (0+255),0,b
  6474  001368  D009               	goto	l4246
  6475                           
  6476                           ; BSR set to: 0
  6477  00136A  0100               	movlb	0	; () banked
  6478  00136C  90D8               	bcf	status,0,c
  6479  00136E  3373               	rrcf	___fladd@grs& (0+255),f,b
  6480  001370  0100               	movlb	0	; () banked
  6481  001372  5173               	movf	___fladd@grs& (0+255),w,b
  6482  001374  0901               	iorlw	1
  6483  001376  0100               	movlb	0	; () banked
  6484  001378  6F73               	movwf	___fladd@grs& (0+255),b
  6485  00137A  D003               	goto	l4248
  6486  00137C                     l4246:
  6487                           
  6488                           ; BSR set to: 0
  6489  00137C  0100               	movlb	0	; () banked
  6490  00137E  90D8               	bcf	status,0,c
  6491  001380  3373               	rrcf	___fladd@grs& (0+255),f,b
  6492  001382                     l4248:
  6493                           
  6494                           ; BSR set to: 0
  6495  001382  0100               	movlb	0	; () banked
  6496  001384  A160               	btfss	___fladd@b& (0+255),0,b
  6497  001386  D002               	goto	l4252
  6498                           
  6499                           ; BSR set to: 0
  6500  001388  0100               	movlb	0	; () banked
  6501  00138A  8F73               	bsf	___fladd@grs& (0+255),7,b
  6502  00138C                     l4252:
  6503                           
  6504                           ; BSR set to: 0
  6505  00138C  0100               	movlb	0	; () banked
  6506  00138E  3563               	rlcf	(___fladd@b+3)& (0+255),w,b
  6507  001390  3363               	rrcf	(___fladd@b+3)& (0+255),f,b
  6508  001392  3362               	rrcf	(___fladd@b+2)& (0+255),f,b
  6509  001394  3361               	rrcf	(___fladd@b+1)& (0+255),f,b
  6510  001396  3360               	rrcf	___fladd@b& (0+255),f,b
  6511                           
  6512                           ; BSR set to: 0
  6513  001398  0100               	movlb	0	; () banked
  6514  00139A  2B72               	incf	___fladd@bexp& (0+255),f,b
  6515                           
  6516                           ; BSR set to: 0
  6517  00139C  D0AF               	goto	l4292
  6518  00139E                     l4256:
  6519                           
  6520                           ; BSR set to: 0
  6521  00139E  0100               	movlb	0	; () banked
  6522  0013A0  5164               	movf	___fladd@a& (0+255),w,b
  6523  0013A2  0100               	movlb	0	; () banked
  6524  0013A4  5D60               	subwf	___fladd@b& (0+255),w,b
  6525  0013A6  0100               	movlb	0	; () banked
  6526  0013A8  5165               	movf	(___fladd@a+1)& (0+255),w,b
  6527  0013AA  0100               	movlb	0	; () banked
  6528  0013AC  5961               	subwfb	(___fladd@b+1)& (0+255),w,b
  6529  0013AE  0100               	movlb	0	; () banked
  6530  0013B0  5166               	movf	(___fladd@a+2)& (0+255),w,b
  6531  0013B2  0100               	movlb	0	; () banked
  6532  0013B4  5962               	subwfb	(___fladd@b+2)& (0+255),w,b
  6533  0013B6  0100               	movlb	0	; () banked
  6534  0013B8  5163               	movf	(___fladd@b+3)& (0+255),w,b
  6535  0013BA  0A80               	xorlw	128
  6536  0013BC  0100               	movlb	0	; () banked
  6537  0013BE  6F68               	movwf	??___fladd& (0+255),b
  6538  0013C0  0100               	movlb	0	; () banked
  6539  0013C2  5167               	movf	(___fladd@a+3)& (0+255),w,b
  6540  0013C4  0A80               	xorlw	128
  6541  0013C6  0100               	movlb	0	; () banked
  6542  0013C8  5968               	subwfb	??___fladd& (0+255),w,b
  6543  0013CA  B0D8               	btfsc	status,0,c
  6544  0013CC  D050               	goto	l4266
  6545                           
  6546                           ; BSR set to: 0
  6547  0013CE  C060  F068         	movff	___fladd@b,??___fladd
  6548  0013D2  C061  F069         	movff	___fladd@b+1,??___fladd+1
  6549  0013D6  C062  F06A         	movff	___fladd@b+2,??___fladd+2
  6550  0013DA  C063  F06B         	movff	___fladd@b+3,??___fladd+3
  6551  0013DE  0100               	movlb	0	; () banked
  6552  0013E0  1F68               	comf	??___fladd& (0+255),f,b
  6553  0013E2  1F69               	comf	(??___fladd+1)& (0+255),f,b
  6554  0013E4  1F6A               	comf	(??___fladd+2)& (0+255),f,b
  6555  0013E6  1F6B               	comf	(??___fladd+3)& (0+255),f,b
  6556  0013E8  2B68               	incf	??___fladd& (0+255),f,b
  6557  0013EA  0E00               	movlw	0
  6558  0013EC  2369               	addwfc	(??___fladd+1)& (0+255),f,b
  6559  0013EE  236A               	addwfc	(??___fladd+2)& (0+255),f,b
  6560  0013F0  236B               	addwfc	(??___fladd+3)& (0+255),f,b
  6561  0013F2  0100               	movlb	0	; () banked
  6562  0013F4  5164               	movf	___fladd@a& (0+255),w,b
  6563  0013F6  0100               	movlb	0	; () banked
  6564  0013F8  2568               	addwf	??___fladd& (0+255),w,b
  6565  0013FA  0100               	movlb	0	; () banked
  6566  0013FC  6F6C               	movwf	(??___fladd+4)& (0+255),b
  6567  0013FE  0100               	movlb	0	; () banked
  6568  001400  5165               	movf	(___fladd@a+1)& (0+255),w,b
  6569  001402  0100               	movlb	0	; () banked
  6570  001404  2169               	addwfc	(??___fladd+1)& (0+255),w,b
  6571  001406  0100               	movlb	0	; () banked
  6572  001408  6F6D               	movwf	(??___fladd+5)& (0+255),b
  6573  00140A  0100               	movlb	0	; () banked
  6574  00140C  5166               	movf	(___fladd@a+2)& (0+255),w,b
  6575  00140E  0100               	movlb	0	; () banked
  6576  001410  216A               	addwfc	(??___fladd+2)& (0+255),w,b
  6577  001412  0100               	movlb	0	; () banked
  6578  001414  6F6E               	movwf	(??___fladd+6)& (0+255),b
  6579  001416  0100               	movlb	0	; () banked
  6580  001418  5167               	movf	(___fladd@a+3)& (0+255),w,b
  6581  00141A  0100               	movlb	0	; () banked
  6582  00141C  216B               	addwfc	(??___fladd+3)& (0+255),w,b
  6583  00141E  0100               	movlb	0	; () banked
  6584  001420  6F6F               	movwf	(??___fladd+7)& (0+255),b
  6585  001422  0EFF               	movlw	255
  6586  001424  0100               	movlb	0	; () banked
  6587  001426  256C               	addwf	(??___fladd+4)& (0+255),w,b
  6588  001428  0100               	movlb	0	; () banked
  6589  00142A  6F60               	movwf	___fladd@b& (0+255),b
  6590  00142C  0EFF               	movlw	255
  6591  00142E  0100               	movlb	0	; () banked
  6592  001430  216D               	addwfc	(??___fladd+5)& (0+255),w,b
  6593  001432  0100               	movlb	0	; () banked
  6594  001434  6F61               	movwf	(___fladd@b+1)& (0+255),b
  6595  001436  0EFF               	movlw	255
  6596  001438  0100               	movlb	0	; () banked
  6597  00143A  216E               	addwfc	(??___fladd+6)& (0+255),w,b
  6598  00143C  0100               	movlb	0	; () banked
  6599  00143E  6F62               	movwf	(___fladd@b+2)& (0+255),b
  6600  001440  0EFF               	movlw	255
  6601  001442  0100               	movlb	0	; () banked
  6602  001444  216F               	addwfc	(??___fladd+7)& (0+255),w,b
  6603  001446  0100               	movlb	0	; () banked
  6604  001448  6F63               	movwf	(___fladd@b+3)& (0+255),b
  6605  00144A  0E80               	movlw	128
  6606  00144C  0100               	movlb	0	; () banked
  6607  00144E  1B70               	xorwf	___fladd@signs& (0+255),f,b
  6608                           
  6609                           ; BSR set to: 0
  6610  001450  0100               	movlb	0	; () banked
  6611  001452  6D73               	negf	___fladd@grs& (0+255),b
  6612                           
  6613                           ; BSR set to: 0
  6614  001454  0100               	movlb	0	; () banked
  6615  001456  5173               	movf	___fladd@grs& (0+255),w,b
  6616  001458  0100               	movlb	0	; () banked
  6617  00145A  A4D8               	btfss	status,2,c
  6618  00145C  D018               	goto	l819
  6619                           
  6620                           ; BSR set to: 0
  6621  00145E  0E01               	movlw	1
  6622  001460  0100               	movlb	0	; () banked
  6623  001462  2760               	addwf	___fladd@b& (0+255),f,b
  6624  001464  0E00               	movlw	0
  6625  001466  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
  6626  001468  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
  6627  00146A  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
  6628                           
  6629                           ; BSR set to: 0
  6630  00146C  D010               	goto	l819
  6631  00146E                     l4266:
  6632                           
  6633                           ; BSR set to: 0
  6634  00146E  0100               	movlb	0	; () banked
  6635  001470  5164               	movf	___fladd@a& (0+255),w,b
  6636  001472  0100               	movlb	0	; () banked
  6637  001474  5F60               	subwf	___fladd@b& (0+255),f,b
  6638  001476  0100               	movlb	0	; () banked
  6639  001478  5165               	movf	(___fladd@a+1)& (0+255),w,b
  6640  00147A  0100               	movlb	0	; () banked
  6641  00147C  5B61               	subwfb	(___fladd@b+1)& (0+255),f,b
  6642  00147E  0100               	movlb	0	; () banked
  6643  001480  5166               	movf	(___fladd@a+2)& (0+255),w,b
  6644  001482  0100               	movlb	0	; () banked
  6645  001484  5B62               	subwfb	(___fladd@b+2)& (0+255),f,b
  6646  001486  0100               	movlb	0	; () banked
  6647  001488  5167               	movf	(___fladd@a+3)& (0+255),w,b
  6648  00148A  0100               	movlb	0	; () banked
  6649  00148C  5B63               	subwfb	(___fladd@b+3)& (0+255),f,b
  6650  00148E                     l819:
  6651                           
  6652                           ; BSR set to: 0
  6653  00148E  0100               	movlb	0	; () banked
  6654  001490  5160               	movf	___fladd@b& (0+255),w,b
  6655  001492  0100               	movlb	0	; () banked
  6656  001494  1161               	iorwf	(___fladd@b+1)& (0+255),w,b
  6657  001496  0100               	movlb	0	; () banked
  6658  001498  1162               	iorwf	(___fladd@b+2)& (0+255),w,b
  6659  00149A  0100               	movlb	0	; () banked
  6660  00149C  1163               	iorwf	(___fladd@b+3)& (0+255),w,b
  6661  00149E  A4D8               	btfss	status,2,c
  6662  0014A0  D02A               	goto	l4290
  6663                           
  6664                           ; BSR set to: 0
  6665  0014A2  0100               	movlb	0	; () banked
  6666  0014A4  5173               	movf	___fladd@grs& (0+255),w,b
  6667  0014A6  0100               	movlb	0	; () banked
  6668  0014A8  A4D8               	btfss	status,2,c
  6669  0014AA  D025               	goto	l4290
  6670                           
  6671                           ; BSR set to: 0
  6672  0014AC  0E00               	movlw	0
  6673  0014AE  0100               	movlb	0	; () banked
  6674  0014B0  6F60               	movwf	?___fladd& (0+255),b
  6675  0014B2  0E00               	movlw	0
  6676  0014B4  6F61               	movwf	(?___fladd+1)& (0+255),b
  6677  0014B6  0E00               	movlw	0
  6678  0014B8  6F62               	movwf	(?___fladd+2)& (0+255),b
  6679  0014BA  0E00               	movlw	0
  6680  0014BC  6F63               	movwf	(?___fladd+3)& (0+255),b
  6681                           
  6682                           ; BSR set to: 0
  6683  0014BE  0012               	return	
  6684  0014C0                     l4274:
  6685                           
  6686                           ; BSR set to: 0
  6687  0014C0  0100               	movlb	0	; () banked
  6688  0014C2  90D8               	bcf	status,0,c
  6689  0014C4  3760               	rlcf	___fladd@b& (0+255),f,b
  6690  0014C6  3761               	rlcf	(___fladd@b+1)& (0+255),f,b
  6691  0014C8  3762               	rlcf	(___fladd@b+2)& (0+255),f,b
  6692  0014CA  3763               	rlcf	(___fladd@b+3)& (0+255),f,b
  6693                           
  6694                           ; BSR set to: 0
  6695  0014CC  0100               	movlb	0	; () banked
  6696  0014CE  AF73               	btfss	___fladd@grs& (0+255),7,b
  6697  0014D0  D002               	goto	l4280
  6698                           
  6699                           ; BSR set to: 0
  6700  0014D2  0100               	movlb	0	; () banked
  6701  0014D4  8160               	bsf	___fladd@b& (0+255),0,b
  6702  0014D6                     l4280:
  6703                           
  6704                           ; BSR set to: 0
  6705  0014D6  0100               	movlb	0	; () banked
  6706  0014D8  A173               	btfss	___fladd@grs& (0+255),0,b
  6707  0014DA  D003               	goto	l4284
  6708                           
  6709                           ; BSR set to: 0
  6710  0014DC  80D8               	bsf	status,0,c
  6711  0014DE  0100               	movlb	0	; () banked
  6712  0014E0  D002               	goto	L9
  6713  0014E2                     l4284:
  6714                           
  6715                           ; BSR set to: 0
  6716  0014E2  0100               	movlb	0	; () banked
  6717  0014E4  90D8               	bcf	status,0,c
  6718  0014E6                     L9:
  6719  0014E6  3773               	rlcf	___fladd@grs& (0+255),f,b
  6720                           
  6721                           ; BSR set to: 0
  6722                           
  6723                           ; BSR set to: 0
  6724  0014E8  0100               	movlb	0	; () banked
  6725  0014EA  5172               	movf	___fladd@bexp& (0+255),w,b
  6726  0014EC  0100               	movlb	0	; () banked
  6727  0014EE  B4D8               	btfsc	status,2,c
  6728  0014F0  D002               	goto	l4290
  6729                           
  6730                           ; BSR set to: 0
  6731  0014F2  0100               	movlb	0	; () banked
  6732  0014F4  0772               	decf	___fladd@bexp& (0+255),f,b
  6733  0014F6                     l4290:
  6734                           
  6735                           ; BSR set to: 0
  6736  0014F6  0100               	movlb	0	; () banked
  6737  0014F8  AF62               	btfss	(___fladd@b+2)& (0+255),7,b
  6738  0014FA  D7E2               	goto	l4274
  6739  0014FC                     l4292:
  6740                           
  6741                           ; BSR set to: 0
  6742  0014FC  0E00               	movlw	0
  6743  0014FE  0100               	movlb	0	; () banked
  6744  001500  6F71               	movwf	___fladd@aexp& (0+255),b
  6745                           
  6746                           ; BSR set to: 0
  6747  001502  0100               	movlb	0	; () banked
  6748  001504  AF73               	btfss	___fladd@grs& (0+255),7,b
  6749  001506  D00D               	goto	l828
  6750                           
  6751                           ; BSR set to: 0
  6752  001508  C073  F068         	movff	___fladd@grs,??___fladd
  6753  00150C  0E7F               	movlw	127
  6754  00150E  0100               	movlb	0	; () banked
  6755  001510  1768               	andwf	??___fladd& (0+255),f,b
  6756  001512  A4D8               	btfss	status,2,c
  6757  001514  D003               	goto	l4300
  6758                           
  6759                           ; BSR set to: 0
  6760                           
  6761                           ; BSR set to: 0
  6762  001516  0100               	movlb	0	; () banked
  6763  001518  A160               	btfss	___fladd@b& (0+255),0,b
  6764  00151A  D003               	goto	l828
  6765  00151C                     l4300:
  6766                           
  6767                           ; BSR set to: 0
  6768  00151C  0E01               	movlw	1
  6769  00151E  0100               	movlb	0	; () banked
  6770  001520  6F71               	movwf	___fladd@aexp& (0+255),b
  6771  001522                     l828:
  6772                           
  6773                           ; BSR set to: 0
  6774  001522  0100               	movlb	0	; () banked
  6775  001524  5171               	movf	___fladd@aexp& (0+255),w,b
  6776  001526  0100               	movlb	0	; () banked
  6777  001528  B4D8               	btfsc	status,2,c
  6778  00152A  D026               	goto	l4310
  6779                           
  6780                           ; BSR set to: 0
  6781  00152C  0E01               	movlw	1
  6782  00152E  0100               	movlb	0	; () banked
  6783  001530  2760               	addwf	___fladd@b& (0+255),f,b
  6784  001532  0E00               	movlw	0
  6785  001534  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
  6786  001536  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
  6787  001538  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
  6788                           
  6789                           ; BSR set to: 0
  6790  00153A  0100               	movlb	0	; () banked
  6791  00153C  A163               	btfss	(___fladd@b+3)& (0+255),0,b
  6792  00153E  D01C               	goto	l4310
  6793                           
  6794                           ; BSR set to: 0
  6795  001540  C060  F068         	movff	___fladd@b,??___fladd
  6796  001544  C061  F069         	movff	___fladd@b+1,??___fladd+1
  6797  001548  C062  F06A         	movff	___fladd@b+2,??___fladd+2
  6798  00154C  C063  F06B         	movff	___fladd@b+3,??___fladd+3
  6799  001550  0100               	movlb	0	; () banked
  6800  001552  356B               	rlcf	(??___fladd+3)& (0+255),w,b
  6801  001554  336B               	rrcf	(??___fladd+3)& (0+255),f,b
  6802  001556  336A               	rrcf	(??___fladd+2)& (0+255),f,b
  6803  001558  3369               	rrcf	(??___fladd+1)& (0+255),f,b
  6804  00155A  3368               	rrcf	??___fladd& (0+255),f,b
  6805  00155C  C068  F060         	movff	??___fladd,___fladd@b
  6806  001560  C069  F061         	movff	??___fladd+1,___fladd@b+1
  6807  001564  C06A  F062         	movff	??___fladd+2,___fladd@b+2
  6808  001568  C06B  F063         	movff	??___fladd+3,___fladd@b+3
  6809  00156C  0100               	movlb	0	; () banked
  6810  00156E  2972               	incf	___fladd@bexp& (0+255),w,b
  6811  001570  B4D8               	btfsc	status,2,c
  6812  001572  D002               	goto	l4310
  6813                           
  6814                           ; BSR set to: 0
  6815  001574  0100               	movlb	0	; () banked
  6816  001576  2B72               	incf	___fladd@bexp& (0+255),f,b
  6817  001578                     l4310:
  6818                           
  6819                           ; BSR set to: 0
  6820  001578  0100               	movlb	0	; () banked
  6821  00157A  2972               	incf	___fladd@bexp& (0+255),w,b
  6822  00157C  B4D8               	btfsc	status,2,c
  6823  00157E  D005               	goto	l4314
  6824                           
  6825                           ; BSR set to: 0
  6826  001580  0100               	movlb	0	; () banked
  6827  001582  5172               	movf	___fladd@bexp& (0+255),w,b
  6828  001584  0100               	movlb	0	; () banked
  6829  001586  A4D8               	btfss	status,2,c
  6830  001588  D011               	goto	l4318
  6831  00158A                     l4314:
  6832                           
  6833                           ; BSR set to: 0
  6834  00158A  0E00               	movlw	0
  6835  00158C  0100               	movlb	0	; () banked
  6836  00158E  6F60               	movwf	___fladd@b& (0+255),b
  6837  001590  0E00               	movlw	0
  6838  001592  6F61               	movwf	(___fladd@b+1)& (0+255),b
  6839  001594  0E00               	movlw	0
  6840  001596  6F62               	movwf	(___fladd@b+2)& (0+255),b
  6841  001598  0E00               	movlw	0
  6842  00159A  6F63               	movwf	(___fladd@b+3)& (0+255),b
  6843  00159C  0100               	movlb	0	; () banked
  6844  00159E  5172               	movf	___fladd@bexp& (0+255),w,b
  6845  0015A0  0100               	movlb	0	; () banked
  6846  0015A2  A4D8               	btfss	status,2,c
  6847  0015A4  D003               	goto	l4318
  6848                           
  6849                           ; BSR set to: 0
  6850  0015A6  0E00               	movlw	0
  6851  0015A8  0100               	movlb	0	; () banked
  6852  0015AA  6F70               	movwf	___fladd@signs& (0+255),b
  6853  0015AC                     l4318:
  6854                           
  6855                           ; BSR set to: 0
  6856  0015AC  0100               	movlb	0	; () banked
  6857  0015AE  A172               	btfss	___fladd@bexp& (0+255),0,b
  6858  0015B0  D003               	goto	l4322
  6859                           
  6860                           ; BSR set to: 0
  6861  0015B2  0100               	movlb	0	; () banked
  6862  0015B4  8F62               	bsf	(___fladd@b+2)& (0+255),7,b
  6863  0015B6  D002               	goto	l4324
  6864  0015B8                     l4322:
  6865                           
  6866                           ; BSR set to: 0
  6867  0015B8  0100               	movlb	0	; () banked
  6868  0015BA  9F62               	bcf	(___fladd@b+2)& (0+255),7,b
  6869  0015BC                     l4324:
  6870                           
  6871                           ; BSR set to: 0
  6872  0015BC  0100               	movlb	0	; () banked
  6873  0015BE  90D8               	bcf	status,0,c
  6874  0015C0  3172               	rrcf	___fladd@bexp& (0+255),w,b
  6875  0015C2  0100               	movlb	0	; () banked
  6876  0015C4  6F63               	movwf	(___fladd@b+3)& (0+255),b
  6877                           
  6878                           ; BSR set to: 0
  6879  0015C6  0100               	movlb	0	; () banked
  6880  0015C8  AF70               	btfss	___fladd@signs& (0+255),7,b
  6881  0015CA  D002               	goto	l4330
  6882                           
  6883                           ; BSR set to: 0
  6884  0015CC  0100               	movlb	0	; () banked
  6885  0015CE  8F63               	bsf	(___fladd@b+3)& (0+255),7,b
  6886  0015D0                     l4330:
  6887                           
  6888                           ; BSR set to: 0
  6889  0015D0  C060  F060         	movff	___fladd@b,?___fladd
  6890  0015D4  C061  F061         	movff	___fladd@b+1,?___fladd+1
  6891  0015D8  C062  F062         	movff	___fladd@b+2,?___fladd+2
  6892  0015DC  C063  F063         	movff	___fladd@b+3,?___fladd+3
  6893  0015E0  0012               	return	
  6894  0015E2                     __end_of___fladd:
  6895                           	opt stack 0
  6896                           tblptru	equ	0xFF8
  6897                           tblptrh	equ	0xFF7
  6898                           tblptrl	equ	0xFF6
  6899                           tablat	equ	0xFF5
  6900                           prodh	equ	0xFF4
  6901                           prodl	equ	0xFF3
  6902                           intcon	equ	0xFF2
  6903                           postinc0	equ	0xFEE
  6904                           wreg	equ	0xFE8
  6905                           indf1	equ	0xFE7
  6906                           plusw1	equ	0xFE3
  6907                           fsr1h	equ	0xFE2
  6908                           fsr1l	equ	0xFE1
  6909                           indf2	equ	0xFDF
  6910                           postinc2	equ	0xFDE
  6911                           plusw2	equ	0xFDB
  6912                           fsr2h	equ	0xFDA
  6913                           fsr2l	equ	0xFD9
  6914                           status	equ	0xFD8
  6915                           
  6916 ;; *************** function ___flneg *****************
  6917 ;; Defined at:
  6918 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flneg.c"
  6919 ;; Parameters:    Size  Location     Type
  6920 ;;  f1              4   14[COMRAM] unsigned char 
  6921 ;; Auto vars:     Size  Location     Type
  6922 ;;		None
  6923 ;; Return value:  Size  Location     Type
  6924 ;;                  4   14[COMRAM] unsigned char 
  6925 ;; Registers used:
  6926 ;;		wreg, status,2, status,0
  6927 ;; Tracked objects:
  6928 ;;		On entry : 0/0
  6929 ;;		On exit  : 0/0
  6930 ;;		Unchanged: 0/0
  6931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6932 ;;      Params:         4       0       0       0       0       0       0       0       0
  6933 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6934 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6935 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6936 ;;Total ram usage:        4 bytes
  6937 ;; Hardware stack levels used:    1
  6938 ;; Hardware stack levels required when called:    1
  6939 ;; This function calls:
  6940 ;;		Nothing
  6941 ;; This function is called by:
  6942 ;;		_sprintf
  6943 ;; This function uses a non-reentrant model
  6944 ;;
  6945                           
  6946                           	psect	text22
  6947  0038F0                     __ptext22:
  6948                           	opt stack 0
  6949  0038F0                     ___flneg:
  6950                           	opt stack 27
  6951                           
  6952                           ; BSR set to: 0
  6953                           ;incstack = 0
  6954  0038F0  500F               	movf	___flneg@f1,w,c
  6955  0038F2  1010               	iorwf	___flneg@f1+1,w,c
  6956  0038F4  1011               	iorwf	___flneg@f1+2,w,c
  6957  0038F6  1012               	iorwf	___flneg@f1+3,w,c
  6958  0038F8  B4D8               	btfsc	status,2,c
  6959  0038FA  D008               	goto	l3466
  6960  0038FC  0E00               	movlw	0
  6961  0038FE  1A0F               	xorwf	___flneg@f1,f,c
  6962  003900  0E00               	movlw	0
  6963  003902  1A10               	xorwf	___flneg@f1+1,f,c
  6964  003904  0E00               	movlw	0
  6965  003906  1A11               	xorwf	___flneg@f1+2,f,c
  6966  003908  0E80               	movlw	128
  6967  00390A  1A12               	xorwf	___flneg@f1+3,f,c
  6968  00390C                     l3466:
  6969  00390C  C00F  F00F         	movff	___flneg@f1,?___flneg
  6970  003910  C010  F010         	movff	___flneg@f1+1,?___flneg+1
  6971  003914  C011  F011         	movff	___flneg@f1+2,?___flneg+2
  6972  003918  C012  F012         	movff	___flneg@f1+3,?___flneg+3
  6973  00391C  0012               	return	
  6974  00391E                     __end_of___flneg:
  6975                           	opt stack 0
  6976                           tblptru	equ	0xFF8
  6977                           tblptrh	equ	0xFF7
  6978                           tblptrl	equ	0xFF6
  6979                           tablat	equ	0xFF5
  6980                           prodh	equ	0xFF4
  6981                           prodl	equ	0xFF3
  6982                           intcon	equ	0xFF2
  6983                           postinc0	equ	0xFEE
  6984                           wreg	equ	0xFE8
  6985                           indf1	equ	0xFE7
  6986                           plusw1	equ	0xFE3
  6987                           fsr1h	equ	0xFE2
  6988                           fsr1l	equ	0xFE1
  6989                           indf2	equ	0xFDF
  6990                           postinc2	equ	0xFDE
  6991                           plusw2	equ	0xFDB
  6992                           fsr2h	equ	0xFDA
  6993                           fsr2l	equ	0xFD9
  6994                           status	equ	0xFD8
  6995                           
  6996 ;; *************** function ___flge *****************
  6997 ;; Defined at:
  6998 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flge.c"
  6999 ;; Parameters:    Size  Location     Type
  7000 ;;  ff1             4   14[COMRAM] unsigned char 
  7001 ;;  ff2             4   18[COMRAM] unsigned char 
  7002 ;; Auto vars:     Size  Location     Type
  7003 ;;		None
  7004 ;; Return value:  Size  Location     Type
  7005 ;;		None               void
  7006 ;; Registers used:
  7007 ;;		wreg, status,2, status,0
  7008 ;; Tracked objects:
  7009 ;;		On entry : 0/0
  7010 ;;		On exit  : 0/0
  7011 ;;		Unchanged: 0/0
  7012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7013 ;;      Params:         8       0       0       0       0       0       0       0       0
  7014 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7015 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7016 ;;      Totals:        12       0       0       0       0       0       0       0       0
  7017 ;;Total ram usage:       12 bytes
  7018 ;; Hardware stack levels used:    1
  7019 ;; Hardware stack levels required when called:    1
  7020 ;; This function calls:
  7021 ;;		Nothing
  7022 ;; This function is called by:
  7023 ;;		_scarica
  7024 ;;		_ricarica
  7025 ;;		_sprintf
  7026 ;; This function uses a non-reentrant model
  7027 ;;
  7028                           
  7029                           	psect	text23
  7030  002EBC                     __ptext23:
  7031                           	opt stack 0
  7032  002EBC                     ___flge:
  7033                           	opt stack 27
  7034                           
  7035                           ;incstack = 0
  7036  002EBC  0E00               	movlw	0
  7037  002EBE  140F               	andwf	___flge@ff1,w,c
  7038  002EC0  6E17               	movwf	??___flge& (0+255),c
  7039  002EC2  0E00               	movlw	0
  7040  002EC4  1410               	andwf	___flge@ff1+1,w,c
  7041  002EC6  6E18               	movwf	(??___flge+1)& (0+255),c
  7042  002EC8  0E80               	movlw	128
  7043  002ECA  1411               	andwf	___flge@ff1+2,w,c
  7044  002ECC  6E19               	movwf	(??___flge+2)& (0+255),c
  7045  002ECE  0E7F               	movlw	127
  7046  002ED0  1412               	andwf	___flge@ff1+3,w,c
  7047  002ED2  6E1A               	movwf	(??___flge+3)& (0+255),c
  7048  002ED4  5017               	movf	??___flge,w,c
  7049  002ED6  1018               	iorwf	??___flge+1,w,c
  7050  002ED8  1019               	iorwf	??___flge+2,w,c
  7051  002EDA  101A               	iorwf	??___flge+3,w,c
  7052  002EDC  A4D8               	btfss	status,2,c
  7053  002EDE  D008               	goto	l3444
  7054  002EE0  0E00               	movlw	0
  7055  002EE2  6E0F               	movwf	___flge@ff1,c
  7056  002EE4  0E00               	movlw	0
  7057  002EE6  6E10               	movwf	___flge@ff1+1,c
  7058  002EE8  0E00               	movlw	0
  7059  002EEA  6E11               	movwf	___flge@ff1+2,c
  7060  002EEC  0E00               	movlw	0
  7061  002EEE  6E12               	movwf	___flge@ff1+3,c
  7062  002EF0                     l3444:
  7063  002EF0  0E00               	movlw	0
  7064  002EF2  1413               	andwf	___flge@ff2,w,c
  7065  002EF4  6E17               	movwf	??___flge& (0+255),c
  7066  002EF6  0E00               	movlw	0
  7067  002EF8  1414               	andwf	___flge@ff2+1,w,c
  7068  002EFA  6E18               	movwf	(??___flge+1)& (0+255),c
  7069  002EFC  0E80               	movlw	128
  7070  002EFE  1415               	andwf	___flge@ff2+2,w,c
  7071  002F00  6E19               	movwf	(??___flge+2)& (0+255),c
  7072  002F02  0E7F               	movlw	127
  7073  002F04  1416               	andwf	___flge@ff2+3,w,c
  7074  002F06  6E1A               	movwf	(??___flge+3)& (0+255),c
  7075  002F08  5017               	movf	??___flge,w,c
  7076  002F0A  1018               	iorwf	??___flge+1,w,c
  7077  002F0C  1019               	iorwf	??___flge+2,w,c
  7078  002F0E  101A               	iorwf	??___flge+3,w,c
  7079  002F10  A4D8               	btfss	status,2,c
  7080  002F12  D008               	goto	l3448
  7081  002F14  0E00               	movlw	0
  7082  002F16  6E13               	movwf	___flge@ff2,c
  7083  002F18  0E00               	movlw	0
  7084  002F1A  6E14               	movwf	___flge@ff2+1,c
  7085  002F1C  0E00               	movlw	0
  7086  002F1E  6E15               	movwf	___flge@ff2+2,c
  7087  002F20  0E00               	movlw	0
  7088  002F22  6E16               	movwf	___flge@ff2+3,c
  7089  002F24                     l3448:
  7090  002F24  AE12               	btfss	___flge@ff1+3,7,c
  7091  002F26  D01D               	goto	l3452
  7092  002F28  C00F  F017         	movff	___flge@ff1,??___flge
  7093  002F2C  C010  F018         	movff	___flge@ff1+1,??___flge+1
  7094  002F30  C011  F019         	movff	___flge@ff1+2,??___flge+2
  7095  002F34  C012  F01A         	movff	___flge@ff1+3,??___flge+3
  7096  002F38  1E17               	comf	??___flge,f,c
  7097  002F3A  1E18               	comf	??___flge+1,f,c
  7098  002F3C  1E19               	comf	??___flge+2,f,c
  7099  002F3E  1E1A               	comf	??___flge+3,f,c
  7100  002F40  2A17               	incf	??___flge,f,c
  7101  002F42  0E00               	movlw	0
  7102  002F44  2218               	addwfc	??___flge+1,f,c
  7103  002F46  2219               	addwfc	??___flge+2,f,c
  7104  002F48  221A               	addwfc	??___flge+3,f,c
  7105  002F4A  0E00               	movlw	0
  7106  002F4C  2417               	addwf	??___flge,w,c
  7107  002F4E  6E0F               	movwf	___flge@ff1,c
  7108  002F50  0E00               	movlw	0
  7109  002F52  2018               	addwfc	??___flge+1,w,c
  7110  002F54  6E10               	movwf	___flge@ff1+1,c
  7111  002F56  0E00               	movlw	0
  7112  002F58  2019               	addwfc	??___flge+2,w,c
  7113  002F5A  6E11               	movwf	___flge@ff1+2,c
  7114  002F5C  0E80               	movlw	128
  7115  002F5E  201A               	addwfc	??___flge+3,w,c
  7116  002F60  6E12               	movwf	___flge@ff1+3,c
  7117  002F62                     l3452:
  7118  002F62  AE16               	btfss	___flge@ff2+3,7,c
  7119  002F64  D01D               	goto	l525
  7120  002F66  C013  F017         	movff	___flge@ff2,??___flge
  7121  002F6A  C014  F018         	movff	___flge@ff2+1,??___flge+1
  7122  002F6E  C015  F019         	movff	___flge@ff2+2,??___flge+2
  7123  002F72  C016  F01A         	movff	___flge@ff2+3,??___flge+3
  7124  002F76  1E17               	comf	??___flge,f,c
  7125  002F78  1E18               	comf	??___flge+1,f,c
  7126  002F7A  1E19               	comf	??___flge+2,f,c
  7127  002F7C  1E1A               	comf	??___flge+3,f,c
  7128  002F7E  2A17               	incf	??___flge,f,c
  7129  002F80  0E00               	movlw	0
  7130  002F82  2218               	addwfc	??___flge+1,f,c
  7131  002F84  2219               	addwfc	??___flge+2,f,c
  7132  002F86  221A               	addwfc	??___flge+3,f,c
  7133  002F88  0E00               	movlw	0
  7134  002F8A  2417               	addwf	??___flge,w,c
  7135  002F8C  6E13               	movwf	___flge@ff2,c
  7136  002F8E  0E00               	movlw	0
  7137  002F90  2018               	addwfc	??___flge+1,w,c
  7138  002F92  6E14               	movwf	___flge@ff2+1,c
  7139  002F94  0E00               	movlw	0
  7140  002F96  2019               	addwfc	??___flge+2,w,c
  7141  002F98  6E15               	movwf	___flge@ff2+2,c
  7142  002F9A  0E80               	movlw	128
  7143  002F9C  201A               	addwfc	??___flge+3,w,c
  7144  002F9E  6E16               	movwf	___flge@ff2+3,c
  7145  002FA0                     l525:
  7146  002FA0  0E00               	movlw	0
  7147  002FA2  1A0F               	xorwf	___flge@ff1,f,c
  7148  002FA4  0E00               	movlw	0
  7149  002FA6  1A10               	xorwf	___flge@ff1+1,f,c
  7150  002FA8  0E00               	movlw	0
  7151  002FAA  1A11               	xorwf	___flge@ff1+2,f,c
  7152  002FAC  0E80               	movlw	128
  7153  002FAE  1A12               	xorwf	___flge@ff1+3,f,c
  7154  002FB0  0E00               	movlw	0
  7155  002FB2  1A13               	xorwf	___flge@ff2,f,c
  7156  002FB4  0E00               	movlw	0
  7157  002FB6  1A14               	xorwf	___flge@ff2+1,f,c
  7158  002FB8  0E00               	movlw	0
  7159  002FBA  1A15               	xorwf	___flge@ff2+2,f,c
  7160  002FBC  0E80               	movlw	128
  7161  002FBE  1A16               	xorwf	___flge@ff2+3,f,c
  7162  002FC0  5013               	movf	___flge@ff2,w,c
  7163  002FC2  5C0F               	subwf	___flge@ff1,w,c
  7164  002FC4  5014               	movf	___flge@ff2+1,w,c
  7165  002FC6  5810               	subwfb	___flge@ff1+1,w,c
  7166  002FC8  5015               	movf	___flge@ff2+2,w,c
  7167  002FCA  5811               	subwfb	___flge@ff1+2,w,c
  7168  002FCC  5016               	movf	___flge@ff2+3,w,c
  7169  002FCE  5812               	subwfb	___flge@ff1+3,w,c
  7170  002FD0  B0D8               	btfsc	status,0,c
  7171  002FD2  D002               	goto	l3458
  7172  002FD4  90D8               	bcf	status,0,c
  7173  002FD6  0012               	return	
  7174  002FD8                     l3458:
  7175  002FD8  80D8               	bsf	status,0,c
  7176  002FDA  0012               	return	
  7177  002FDC                     __end_of___flge:
  7178                           	opt stack 0
  7179                           tblptru	equ	0xFF8
  7180                           tblptrh	equ	0xFF7
  7181                           tblptrl	equ	0xFF6
  7182                           tablat	equ	0xFF5
  7183                           prodh	equ	0xFF4
  7184                           prodl	equ	0xFF3
  7185                           intcon	equ	0xFF2
  7186                           postinc0	equ	0xFEE
  7187                           wreg	equ	0xFE8
  7188                           indf1	equ	0xFE7
  7189                           plusw1	equ	0xFE3
  7190                           fsr1h	equ	0xFE2
  7191                           fsr1l	equ	0xFE1
  7192                           indf2	equ	0xFDF
  7193                           postinc2	equ	0xFDE
  7194                           plusw2	equ	0xFDB
  7195                           fsr2h	equ	0xFDA
  7196                           fsr2l	equ	0xFD9
  7197                           status	equ	0xFD8
  7198                           
  7199 ;; *************** function _read_adc *****************
  7200 ;; Defined at:
  7201 ;;		line 154 in file "tester.c"
  7202 ;; Parameters:    Size  Location     Type
  7203 ;;		None
  7204 ;; Auto vars:     Size  Location     Type
  7205 ;;  i               1   13[BANK0 ] unsigned char 
  7206 ;; Return value:  Size  Location     Type
  7207 ;;		None               void
  7208 ;; Registers used:
  7209 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7210 ;; Tracked objects:
  7211 ;;		On entry : 0/0
  7212 ;;		On exit  : 0/0
  7213 ;;		Unchanged: 0/0
  7214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7215 ;;      Params:         0       0       0       0       0       0       0       0       0
  7216 ;;      Locals:         0       1       0       0       0       0       0       0       0
  7217 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7218 ;;      Totals:         2       1       0       0       0       0       0       0       0
  7219 ;;Total ram usage:        3 bytes
  7220 ;; Hardware stack levels used:    1
  7221 ;; Hardware stack levels required when called:    3
  7222 ;; This function calls:
  7223 ;;		___fldiv
  7224 ;;		___flmul
  7225 ;;		___xxtofl
  7226 ;;		_delay_ms
  7227 ;; This function is called by:
  7228 ;;		_main
  7229 ;;		_scarica
  7230 ;;		_ricarica
  7231 ;; This function uses a non-reentrant model
  7232 ;;
  7233                           
  7234                           	psect	text24
  7235  00261E                     __ptext24:
  7236                           	opt stack 0
  7237  00261E                     _read_adc:
  7238                           	opt stack 26
  7239                           
  7240                           ;tester.c: 155: for (char i = 0; i < 3; i++) {
  7241                           
  7242                           ;incstack = 0
  7243  00261E  0E00               	movlw	0
  7244  002620  0100               	movlb	0	; () banked
  7245  002622  6F6D               	movwf	read_adc@i& (0+255),b
  7246  002624                     l4522:
  7247                           
  7248                           ; BSR set to: 0
  7249  002624  0E02               	movlw	2
  7250  002626  0100               	movlb	0	; () banked
  7251  002628  656D               	cpfsgt	read_adc@i& (0+255),b
  7252  00262A  D001               	goto	l4526
  7253  00262C  D049               	goto	l4540
  7254  00262E                     l4526:
  7255                           
  7256                           ; BSR set to: 0
  7257                           ;tester.c: 156: ADCON0 = combinazioni[i];
  7258  00262E  0100               	movlb	0	; () banked
  7259  002630  516D               	movf	read_adc@i& (0+255),w,b
  7260  002632  0D01               	mullw	1
  7261  002634  0ECF               	movlw	low _combinazioni
  7262  002636  24F3               	addwf	prodl,w,c
  7263  002638  6ED9               	movwf	fsr2l,c
  7264  00263A  0E00               	movlw	high _combinazioni
  7265  00263C  20F4               	addwfc	prodh,w,c
  7266  00263E  6EDA               	movwf	fsr2h,c
  7267  002640  50DF               	movf	indf2,w,c
  7268  002642  6EC2               	movwf	4034,c	;volatile
  7269                           
  7270                           ; BSR set to: 0
  7271                           ;tester.c: 157: ADCON0bits.ADON = 1;
  7272  002644  80C2               	bsf	4034,0,c	;volatile
  7273                           
  7274                           ; BSR set to: 0
  7275                           ;tester.c: 158: ADCON0bits.GO = 1;
  7276  002646  82C2               	bsf	4034,1,c	;volatile
  7277  002648                     l206:
  7278  002648  B2C2               	btfsc	4034,1,c	;volatile
  7279  00264A  D7FE               	goto	l206
  7280                           
  7281                           ;tester.c: 160: lettura [i] = ADRESH;
  7282  00264C  50C4               	movf	4036,w,c	;volatile
  7283  00264E  6E42               	movwf	??_read_adc& (0+255),c
  7284  002650  6A43               	clrf	(??_read_adc+1)& (0+255),c
  7285  002652  0100               	movlb	0	; () banked
  7286  002654  516D               	movf	read_adc@i& (0+255),w,b
  7287  002656  0D02               	mullw	2
  7288  002658  0EA7               	movlw	low _lettura
  7289  00265A  24F3               	addwf	prodl,w,c
  7290  00265C  6ED9               	movwf	fsr2l,c
  7291  00265E  0E00               	movlw	high _lettura
  7292  002660  20F4               	addwfc	prodh,w,c
  7293  002662  6EDA               	movwf	fsr2h,c
  7294  002664  C042  FFDE         	movff	??_read_adc,postinc2
  7295  002668  C043  FFDD         	movff	??_read_adc+1,postdec2
  7296                           
  7297                           ;tester.c: 161: lettura [i] = ((lettura[i] << 8) | ADRESL);
  7298  00266C  0100               	movlb	0	; () banked
  7299  00266E  516D               	movf	read_adc@i& (0+255),w,b
  7300  002670  0D02               	mullw	2
  7301  002672  0EA7               	movlw	low _lettura
  7302  002674  24F3               	addwf	prodl,w,c
  7303  002676  6ED9               	movwf	fsr2l,c
  7304  002678  0E00               	movlw	high _lettura
  7305  00267A  20F4               	addwfc	prodh,w,c
  7306  00267C  6EDA               	movwf	fsr2h,c
  7307  00267E  CFDE F042          	movff	postinc2,??_read_adc
  7308  002682  CFDD F043          	movff	postdec2,??_read_adc+1
  7309  002686  C042  F043         	movff	??_read_adc,??_read_adc+1
  7310  00268A  6A42               	clrf	??_read_adc,c
  7311  00268C  50C3               	movf	4035,w,c	;volatile
  7312  00268E  1242               	iorwf	??_read_adc,f,c
  7313  002690  0E00               	movlw	0
  7314  002692  1243               	iorwf	??_read_adc+1,f,c
  7315  002694  0100               	movlb	0	; () banked
  7316  002696  516D               	movf	read_adc@i& (0+255),w,b
  7317  002698  0D02               	mullw	2
  7318  00269A  0EA7               	movlw	low _lettura
  7319  00269C  24F3               	addwf	prodl,w,c
  7320  00269E  6ED9               	movwf	fsr2l,c
  7321  0026A0  0E00               	movlw	high _lettura
  7322  0026A2  20F4               	addwfc	prodh,w,c
  7323  0026A4  6EDA               	movwf	fsr2h,c
  7324  0026A6  C042  FFDE         	movff	??_read_adc,postinc2
  7325  0026AA  C043  FFDD         	movff	??_read_adc+1,postdec2
  7326                           
  7327                           ; BSR set to: 0
  7328                           ;tester.c: 162: delay_ms(5);
  7329  0026AE  0E00               	movlw	0
  7330  0026B0  6E16               	movwf	delay_ms@value_ms+1,c
  7331  0026B2  0E05               	movlw	5
  7332  0026B4  6E15               	movwf	delay_ms@value_ms,c
  7333  0026B6  EC47  F01C         	call	_delay_ms	;wreg free
  7334  0026BA  0100               	movlb	0	; () banked
  7335  0026BC  2B6D               	incf	read_adc@i& (0+255),f,b
  7336  0026BE  D7B2               	goto	l4522
  7337  0026C0                     l4540:
  7338                           
  7339                           ; BSR set to: 0
  7340                           ;tester.c: 163: }
  7341                           ;tester.c: 164: current = (lettura[0] - lettura[1]);
  7342  0026C0  EE20  F0A9         	lfsr	2,_lettura+2
  7343  0026C4  CFDE F042          	movff	postinc2,??_read_adc
  7344  0026C8  CFDD F043          	movff	postdec2,??_read_adc+1
  7345  0026CC  1E42               	comf	??_read_adc,f,c
  7346  0026CE  1E43               	comf	??_read_adc+1,f,c
  7347  0026D0  4A42               	infsnz	??_read_adc,f,c
  7348  0026D2  2A43               	incf	??_read_adc+1,f,c
  7349  0026D4  0100               	movlb	0	; () banked
  7350  0026D6  51A7               	movf	_lettura& (0+255),w,b
  7351  0026D8  2642               	addwf	??_read_adc,f,c
  7352  0026DA  0100               	movlb	0	; () banked
  7353  0026DC  51A8               	movf	(_lettura+1)& (0+255),w,b
  7354  0026DE  2243               	addwfc	??_read_adc+1,f,c
  7355  0026E0  C042  F00F         	movff	??_read_adc,___xxtofl@val
  7356  0026E4  C043  F010         	movff	??_read_adc+1,___xxtofl@val+1
  7357  0026E8  0E00               	movlw	0
  7358  0026EA  BE10               	btfsc	___xxtofl@val+1,7,c
  7359  0026EC  0EFF               	movlw	-1
  7360  0026EE  6E11               	movwf	___xxtofl@val+2,c
  7361  0026F0  6E12               	movwf	___xxtofl@val+3,c
  7362  0026F2  0E01               	movlw	1
  7363  0026F4  ECEA  F014         	call	___xxtofl
  7364  0026F8  C00F  F0AD         	movff	?___xxtofl,_current
  7365  0026FC  C010  F0AE         	movff	?___xxtofl+1,_current+1
  7366  002700  C011  F0AF         	movff	?___xxtofl+2,_current+2
  7367  002704  C012  F0B0         	movff	?___xxtofl+3,_current+3
  7368                           
  7369                           ;tester.c: 165: current = (current * 5);
  7370  002708  C0AD  F01D         	movff	_current,___flmul@b
  7371  00270C  C0AE  F01E         	movff	_current+1,___flmul@b+1
  7372  002710  C0AF  F01F         	movff	_current+2,___flmul@b+2
  7373  002714  C0B0  F020         	movff	_current+3,___flmul@b+3
  7374  002718  0E00               	movlw	0
  7375  00271A  6E21               	movwf	___flmul@a,c
  7376  00271C  0E00               	movlw	0
  7377  00271E  6E22               	movwf	___flmul@a+1,c
  7378  002720  0EA0               	movlw	160
  7379  002722  6E23               	movwf	___flmul@a+2,c
  7380  002724  0E40               	movlw	64
  7381  002726  6E24               	movwf	___flmul@a+3,c
  7382  002728  ECFD  F00C         	call	___flmul	;wreg free
  7383  00272C  C01D  F0AD         	movff	?___flmul,_current
  7384  002730  C01E  F0AE         	movff	?___flmul+1,_current+1
  7385  002734  C01F  F0AF         	movff	?___flmul+2,_current+2
  7386  002738  C020  F0B0         	movff	?___flmul+3,_current+3
  7387                           
  7388                           ;tester.c: 166: current = current / 1024;
  7389  00273C  C0AD  F036         	movff	_current,___fldiv@b
  7390  002740  C0AE  F037         	movff	_current+1,___fldiv@b+1
  7391  002744  C0AF  F038         	movff	_current+2,___fldiv@b+2
  7392  002748  C0B0  F039         	movff	_current+3,___fldiv@b+3
  7393  00274C  0E00               	movlw	0
  7394  00274E  6E3A               	movwf	___fldiv@a,c
  7395  002750  0E00               	movlw	0
  7396  002752  6E3B               	movwf	___fldiv@a+1,c
  7397  002754  0E80               	movlw	128
  7398  002756  6E3C               	movwf	___fldiv@a+2,c
  7399  002758  0E44               	movlw	68
  7400  00275A  6E3D               	movwf	___fldiv@a+3,c
  7401  00275C  ECA5  F00E         	call	___fldiv	;wreg free
  7402  002760  C036  F0AD         	movff	?___fldiv,_current
  7403  002764  C037  F0AE         	movff	?___fldiv+1,_current+1
  7404  002768  C038  F0AF         	movff	?___fldiv+2,_current+2
  7405  00276C  C039  F0B0         	movff	?___fldiv+3,_current+3
  7406                           
  7407                           ;tester.c: 167: current = current / 0.200;
  7408  002770  C0AD  F036         	movff	_current,___fldiv@b
  7409  002774  C0AE  F037         	movff	_current+1,___fldiv@b+1
  7410  002778  C0AF  F038         	movff	_current+2,___fldiv@b+2
  7411  00277C  C0B0  F039         	movff	_current+3,___fldiv@b+3
  7412  002780  0ECD               	movlw	205
  7413  002782  6E3A               	movwf	___fldiv@a,c
  7414  002784  0ECC               	movlw	204
  7415  002786  6E3B               	movwf	___fldiv@a+1,c
  7416  002788  0E4C               	movlw	76
  7417  00278A  6E3C               	movwf	___fldiv@a+2,c
  7418  00278C  0E3E               	movlw	62
  7419  00278E  6E3D               	movwf	___fldiv@a+3,c
  7420  002790  ECA5  F00E         	call	___fldiv	;wreg free
  7421  002794  C036  F0AD         	movff	?___fldiv,_current
  7422  002798  C037  F0AE         	movff	?___fldiv+1,_current+1
  7423  00279C  C038  F0AF         	movff	?___fldiv+2,_current+2
  7424  0027A0  C039  F0B0         	movff	?___fldiv+3,_current+3
  7425                           
  7426                           ;tester.c: 168: voltage = (lettura[2]);
  7427  0027A4  EE20  F0AB         	lfsr	2,_lettura+4
  7428  0027A8  CFDE F00F          	movff	postinc2,___xxtofl@val
  7429  0027AC  CFDD F010          	movff	postdec2,___xxtofl@val+1
  7430  0027B0  0E00               	movlw	0
  7431  0027B2  BE10               	btfsc	___xxtofl@val+1,7,c
  7432  0027B4  0EFF               	movlw	-1
  7433  0027B6  6E11               	movwf	___xxtofl@val+2,c
  7434  0027B8  6E12               	movwf	___xxtofl@val+3,c
  7435  0027BA  0E01               	movlw	1
  7436  0027BC  ECEA  F014         	call	___xxtofl
  7437  0027C0  C00F  F0BD         	movff	?___xxtofl,_voltage
  7438  0027C4  C010  F0BE         	movff	?___xxtofl+1,_voltage+1
  7439  0027C8  C011  F0BF         	movff	?___xxtofl+2,_voltage+2
  7440  0027CC  C012  F0C0         	movff	?___xxtofl+3,_voltage+3
  7441                           
  7442                           ;tester.c: 169: voltage = (voltage * 5) / 1024;
  7443  0027D0  0E00               	movlw	0
  7444  0027D2  6E21               	movwf	___flmul@a,c
  7445  0027D4  0E00               	movlw	0
  7446  0027D6  6E22               	movwf	___flmul@a+1,c
  7447  0027D8  0EA0               	movlw	160
  7448  0027DA  6E23               	movwf	___flmul@a+2,c
  7449  0027DC  0E40               	movlw	64
  7450  0027DE  6E24               	movwf	___flmul@a+3,c
  7451  0027E0  C0BD  F01D         	movff	_voltage,___flmul@b
  7452  0027E4  C0BE  F01E         	movff	_voltage+1,___flmul@b+1
  7453  0027E8  C0BF  F01F         	movff	_voltage+2,___flmul@b+2
  7454  0027EC  C0C0  F020         	movff	_voltage+3,___flmul@b+3
  7455  0027F0  ECFD  F00C         	call	___flmul	;wreg free
  7456  0027F4  C01D  F036         	movff	?___flmul,___fldiv@b
  7457  0027F8  C01E  F037         	movff	?___flmul+1,___fldiv@b+1
  7458  0027FC  C01F  F038         	movff	?___flmul+2,___fldiv@b+2
  7459  002800  C020  F039         	movff	?___flmul+3,___fldiv@b+3
  7460  002804  0E00               	movlw	0
  7461  002806  6E3A               	movwf	___fldiv@a,c
  7462  002808  0E00               	movlw	0
  7463  00280A  6E3B               	movwf	___fldiv@a+1,c
  7464  00280C  0E80               	movlw	128
  7465  00280E  6E3C               	movwf	___fldiv@a+2,c
  7466  002810  0E44               	movlw	68
  7467  002812  6E3D               	movwf	___fldiv@a+3,c
  7468  002814  ECA5  F00E         	call	___fldiv	;wreg free
  7469  002818  C036  F0BD         	movff	?___fldiv,_voltage
  7470  00281C  C037  F0BE         	movff	?___fldiv+1,_voltage+1
  7471  002820  C038  F0BF         	movff	?___fldiv+2,_voltage+2
  7472  002824  C039  F0C0         	movff	?___fldiv+3,_voltage+3
  7473                           
  7474                           ;tester.c: 170: voltage = voltage / rapporto;
  7475  002828  C0BD  F036         	movff	_voltage,___fldiv@b
  7476  00282C  C0BE  F037         	movff	_voltage+1,___fldiv@b+1
  7477  002830  C0BF  F038         	movff	_voltage+2,___fldiv@b+2
  7478  002834  C0C0  F039         	movff	_voltage+3,___fldiv@b+3
  7479  002838  C046  F03A         	movff	_rapporto,___fldiv@a
  7480  00283C  C047  F03B         	movff	_rapporto+1,___fldiv@a+1
  7481  002840  C048  F03C         	movff	_rapporto+2,___fldiv@a+2
  7482  002844  C049  F03D         	movff	_rapporto+3,___fldiv@a+3
  7483  002848  ECA5  F00E         	call	___fldiv	;wreg free
  7484  00284C  C036  F0BD         	movff	?___fldiv,_voltage
  7485  002850  C037  F0BE         	movff	?___fldiv+1,_voltage+1
  7486  002854  C038  F0BF         	movff	?___fldiv+2,_voltage+2
  7487  002858  C039  F0C0         	movff	?___fldiv+3,_voltage+3
  7488  00285C  0012               	return		;funcret
  7489  00285E                     __end_of_read_adc:
  7490                           	opt stack 0
  7491                           tblptru	equ	0xFF8
  7492                           tblptrh	equ	0xFF7
  7493                           tblptrl	equ	0xFF6
  7494                           tablat	equ	0xFF5
  7495                           prodh	equ	0xFF4
  7496                           prodl	equ	0xFF3
  7497                           intcon	equ	0xFF2
  7498                           postinc0	equ	0xFEE
  7499                           wreg	equ	0xFE8
  7500                           indf1	equ	0xFE7
  7501                           plusw1	equ	0xFE3
  7502                           fsr1h	equ	0xFE2
  7503                           fsr1l	equ	0xFE1
  7504                           indf2	equ	0xFDF
  7505                           postinc2	equ	0xFDE
  7506                           postdec2	equ	0xFDD
  7507                           plusw2	equ	0xFDB
  7508                           fsr2h	equ	0xFDA
  7509                           fsr2l	equ	0xFD9
  7510                           status	equ	0xFD8
  7511                           
  7512 ;; *************** function ___xxtofl *****************
  7513 ;; Defined at:
  7514 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\xxtofl.c"
  7515 ;; Parameters:    Size  Location     Type
  7516 ;;  sign            1    wreg     unsigned char 
  7517 ;;  val             4   14[COMRAM] long 
  7518 ;; Auto vars:     Size  Location     Type
  7519 ;;  sign            1   22[COMRAM] unsigned char 
  7520 ;;  arg             4   24[COMRAM] unsigned long 
  7521 ;;  exp             1   23[COMRAM] unsigned char 
  7522 ;; Return value:  Size  Location     Type
  7523 ;;                  4   14[COMRAM] unsigned char 
  7524 ;; Registers used:
  7525 ;;		wreg, status,2, status,0
  7526 ;; Tracked objects:
  7527 ;;		On entry : 0/0
  7528 ;;		On exit  : 0/0
  7529 ;;		Unchanged: 0/0
  7530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7531 ;;      Params:         4       0       0       0       0       0       0       0       0
  7532 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7533 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7534 ;;      Totals:        14       0       0       0       0       0       0       0       0
  7535 ;;Total ram usage:       14 bytes
  7536 ;; Hardware stack levels used:    1
  7537 ;; Hardware stack levels required when called:    1
  7538 ;; This function calls:
  7539 ;;		Nothing
  7540 ;; This function is called by:
  7541 ;;		_scarica
  7542 ;;		_read_adc
  7543 ;;		_sprintf
  7544 ;; This function uses a non-reentrant model
  7545 ;;
  7546                           
  7547                           	psect	text25
  7548  0029D4                     __ptext25:
  7549                           	opt stack 0
  7550  0029D4                     ___xxtofl:
  7551                           	opt stack 27
  7552                           
  7553                           ;incstack = 0
  7554                           ;___xxtofl@sign stored from wreg
  7555  0029D4  6E17               	movwf	___xxtofl@sign,c
  7556  0029D6  5017               	movf	___xxtofl@sign,w,c
  7557  0029D8  A4D8               	btfss	status,2,c
  7558  0029DA  AE12               	btfss	___xxtofl@val+3,7,c
  7559  0029DC  D01A               	goto	l910
  7560  0029DE  C00F  F013         	movff	___xxtofl@val,??___xxtofl
  7561  0029E2  C010  F014         	movff	___xxtofl@val+1,??___xxtofl+1
  7562  0029E6  C011  F015         	movff	___xxtofl@val+2,??___xxtofl+2
  7563  0029EA  C012  F016         	movff	___xxtofl@val+3,??___xxtofl+3
  7564  0029EE  1E13               	comf	??___xxtofl,f,c
  7565  0029F0  1E14               	comf	??___xxtofl+1,f,c
  7566  0029F2  1E15               	comf	??___xxtofl+2,f,c
  7567  0029F4  1E16               	comf	??___xxtofl+3,f,c
  7568  0029F6  2A13               	incf	??___xxtofl,f,c
  7569  0029F8  0E00               	movlw	0
  7570  0029FA  2214               	addwfc	??___xxtofl+1,f,c
  7571  0029FC  2215               	addwfc	??___xxtofl+2,f,c
  7572  0029FE  2216               	addwfc	??___xxtofl+3,f,c
  7573  002A00  C013  F019         	movff	??___xxtofl,___xxtofl@arg
  7574  002A04  C014  F01A         	movff	??___xxtofl+1,___xxtofl@arg+1
  7575  002A08  C015  F01B         	movff	??___xxtofl+2,___xxtofl@arg+2
  7576  002A0C  C016  F01C         	movff	??___xxtofl+3,___xxtofl@arg+3
  7577  002A10  D008               	goto	l3558
  7578  002A12                     l910:
  7579  002A12  C00F  F019         	movff	___xxtofl@val,___xxtofl@arg
  7580  002A16  C010  F01A         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7581  002A1A  C011  F01B         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7582  002A1E  C012  F01C         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7583  002A22                     l3558:
  7584  002A22  500F               	movf	___xxtofl@val,w,c
  7585  002A24  1010               	iorwf	___xxtofl@val+1,w,c
  7586  002A26  1011               	iorwf	___xxtofl@val+2,w,c
  7587  002A28  1012               	iorwf	___xxtofl@val+3,w,c
  7588  002A2A  A4D8               	btfss	status,2,c
  7589  002A2C  D009               	goto	l3564
  7590  002A2E  0E00               	movlw	0
  7591  002A30  6E0F               	movwf	?___xxtofl,c
  7592  002A32  0E00               	movlw	0
  7593  002A34  6E10               	movwf	?___xxtofl+1,c
  7594  002A36  0E00               	movlw	0
  7595  002A38  6E11               	movwf	?___xxtofl+2,c
  7596  002A3A  0E00               	movlw	0
  7597  002A3C  6E12               	movwf	?___xxtofl+3,c
  7598  002A3E  0012               	return	
  7599  002A40                     l3564:
  7600  002A40  0E96               	movlw	150
  7601  002A42  6E18               	movwf	___xxtofl@exp,c
  7602  002A44  D006               	goto	l3568
  7603  002A46                     l3566:
  7604  002A46  2A18               	incf	___xxtofl@exp,f,c
  7605  002A48  90D8               	bcf	status,0,c
  7606  002A4A  321C               	rrcf	___xxtofl@arg+3,f,c
  7607  002A4C  321B               	rrcf	___xxtofl@arg+2,f,c
  7608  002A4E  321A               	rrcf	___xxtofl@arg+1,f,c
  7609  002A50  3219               	rrcf	___xxtofl@arg,f,c
  7610  002A52                     l3568:
  7611  002A52  0E00               	movlw	0
  7612  002A54  1419               	andwf	___xxtofl@arg,w,c
  7613  002A56  6E13               	movwf	??___xxtofl& (0+255),c
  7614  002A58  0E00               	movlw	0
  7615  002A5A  141A               	andwf	___xxtofl@arg+1,w,c
  7616  002A5C  6E14               	movwf	(??___xxtofl+1)& (0+255),c
  7617  002A5E  0E00               	movlw	0
  7618  002A60  141B               	andwf	___xxtofl@arg+2,w,c
  7619  002A62  6E15               	movwf	(??___xxtofl+2)& (0+255),c
  7620  002A64  0EFE               	movlw	254
  7621  002A66  141C               	andwf	___xxtofl@arg+3,w,c
  7622  002A68  6E16               	movwf	(??___xxtofl+3)& (0+255),c
  7623  002A6A  5013               	movf	??___xxtofl,w,c
  7624  002A6C  1014               	iorwf	??___xxtofl+1,w,c
  7625  002A6E  1015               	iorwf	??___xxtofl+2,w,c
  7626  002A70  1016               	iorwf	??___xxtofl+3,w,c
  7627  002A72  B4D8               	btfsc	status,2,c
  7628  002A74  D00D               	goto	l917
  7629  002A76  D7E7               	goto	l3566
  7630  002A78                     l3570:
  7631  002A78  2A18               	incf	___xxtofl@exp,f,c
  7632  002A7A  0E01               	movlw	1
  7633  002A7C  2619               	addwf	___xxtofl@arg,f,c
  7634  002A7E  0E00               	movlw	0
  7635  002A80  221A               	addwfc	___xxtofl@arg+1,f,c
  7636  002A82  221B               	addwfc	___xxtofl@arg+2,f,c
  7637  002A84  221C               	addwfc	___xxtofl@arg+3,f,c
  7638  002A86  90D8               	bcf	status,0,c
  7639  002A88  321C               	rrcf	___xxtofl@arg+3,f,c
  7640  002A8A  321B               	rrcf	___xxtofl@arg+2,f,c
  7641  002A8C  321A               	rrcf	___xxtofl@arg+1,f,c
  7642  002A8E  3219               	rrcf	___xxtofl@arg,f,c
  7643  002A90                     l917:
  7644  002A90  0E00               	movlw	0
  7645  002A92  1419               	andwf	___xxtofl@arg,w,c
  7646  002A94  6E13               	movwf	??___xxtofl& (0+255),c
  7647  002A96  0E00               	movlw	0
  7648  002A98  141A               	andwf	___xxtofl@arg+1,w,c
  7649  002A9A  6E14               	movwf	(??___xxtofl+1)& (0+255),c
  7650  002A9C  0E00               	movlw	0
  7651  002A9E  141B               	andwf	___xxtofl@arg+2,w,c
  7652  002AA0  6E15               	movwf	(??___xxtofl+2)& (0+255),c
  7653  002AA2  0EFF               	movlw	255
  7654  002AA4  141C               	andwf	___xxtofl@arg+3,w,c
  7655  002AA6  6E16               	movwf	(??___xxtofl+3)& (0+255),c
  7656  002AA8  5013               	movf	??___xxtofl,w,c
  7657  002AAA  1014               	iorwf	??___xxtofl+1,w,c
  7658  002AAC  1015               	iorwf	??___xxtofl+2,w,c
  7659  002AAE  1016               	iorwf	??___xxtofl+3,w,c
  7660  002AB0  B4D8               	btfsc	status,2,c
  7661  002AB2  D007               	goto	l3578
  7662  002AB4  D7E1               	goto	l3570
  7663  002AB6                     l3576:
  7664  002AB6  0618               	decf	___xxtofl@exp,f,c
  7665  002AB8  90D8               	bcf	status,0,c
  7666  002ABA  3619               	rlcf	___xxtofl@arg,f,c
  7667  002ABC  361A               	rlcf	___xxtofl@arg+1,f,c
  7668  002ABE  361B               	rlcf	___xxtofl@arg+2,f,c
  7669  002AC0  361C               	rlcf	___xxtofl@arg+3,f,c
  7670  002AC2                     l3578:
  7671  002AC2  BE1B               	btfsc	___xxtofl@arg+2,7,c
  7672  002AC4  D003               	goto	l924
  7673  002AC6  0E02               	movlw	2
  7674  002AC8  6018               	cpfslt	___xxtofl@exp,c
  7675  002ACA  D7F5               	goto	l3576
  7676  002ACC                     l924:
  7677  002ACC  B018               	btfsc	___xxtofl@exp,0,c
  7678  002ACE  D008               	goto	l925
  7679  002AD0  0EFF               	movlw	255
  7680  002AD2  1619               	andwf	___xxtofl@arg,f,c
  7681  002AD4  0EFF               	movlw	255
  7682  002AD6  161A               	andwf	___xxtofl@arg+1,f,c
  7683  002AD8  0E7F               	movlw	127
  7684  002ADA  161B               	andwf	___xxtofl@arg+2,f,c
  7685  002ADC  0EFF               	movlw	255
  7686  002ADE  161C               	andwf	___xxtofl@arg+3,f,c
  7687  002AE0                     l925:
  7688  002AE0  90D8               	bcf	status,0,c
  7689  002AE2  3218               	rrcf	___xxtofl@exp,f,c
  7690  002AE4  C018  F013         	movff	___xxtofl@exp,??___xxtofl
  7691  002AE8  6A14               	clrf	(??___xxtofl+1)& (0+255),c
  7692  002AEA  6A15               	clrf	(??___xxtofl+2)& (0+255),c
  7693  002AEC  6A16               	clrf	(??___xxtofl+3)& (0+255),c
  7694  002AEE  C013  F016         	movff	??___xxtofl,??___xxtofl+3
  7695  002AF2  6A15               	clrf	??___xxtofl+2,c
  7696  002AF4  6A14               	clrf	??___xxtofl+1,c
  7697  002AF6  6A13               	clrf	??___xxtofl,c
  7698  002AF8  5013               	movf	??___xxtofl,w,c
  7699  002AFA  1219               	iorwf	___xxtofl@arg,f,c
  7700  002AFC  5014               	movf	??___xxtofl+1,w,c
  7701  002AFE  121A               	iorwf	___xxtofl@arg+1,f,c
  7702  002B00  5015               	movf	??___xxtofl+2,w,c
  7703  002B02  121B               	iorwf	___xxtofl@arg+2,f,c
  7704  002B04  5016               	movf	??___xxtofl+3,w,c
  7705  002B06  121C               	iorwf	___xxtofl@arg+3,f,c
  7706  002B08  5017               	movf	___xxtofl@sign,w,c
  7707  002B0A  A4D8               	btfss	status,2,c
  7708  002B0C  AE12               	btfss	___xxtofl@val+3,7,c
  7709  002B0E  D001               	goto	l3590
  7710  002B10  8E1C               	bsf	___xxtofl@arg+3,7,c
  7711  002B12                     l3590:
  7712  002B12  C019  F00F         	movff	___xxtofl@arg,?___xxtofl
  7713  002B16  C01A  F010         	movff	___xxtofl@arg+1,?___xxtofl+1
  7714  002B1A  C01B  F011         	movff	___xxtofl@arg+2,?___xxtofl+2
  7715  002B1E  C01C  F012         	movff	___xxtofl@arg+3,?___xxtofl+3
  7716  002B22  0012               	return	
  7717  002B24                     __end_of___xxtofl:
  7718                           	opt stack 0
  7719                           tblptru	equ	0xFF8
  7720                           tblptrh	equ	0xFF7
  7721                           tblptrl	equ	0xFF6
  7722                           tablat	equ	0xFF5
  7723                           prodh	equ	0xFF4
  7724                           prodl	equ	0xFF3
  7725                           intcon	equ	0xFF2
  7726                           postinc0	equ	0xFEE
  7727                           wreg	equ	0xFE8
  7728                           indf1	equ	0xFE7
  7729                           plusw1	equ	0xFE3
  7730                           fsr1h	equ	0xFE2
  7731                           fsr1l	equ	0xFE1
  7732                           indf2	equ	0xFDF
  7733                           postinc2	equ	0xFDE
  7734                           postdec2	equ	0xFDD
  7735                           plusw2	equ	0xFDB
  7736                           fsr2h	equ	0xFDA
  7737                           fsr2l	equ	0xFD9
  7738                           status	equ	0xFD8
  7739                           
  7740 ;; *************** function ___flmul *****************
  7741 ;; Defined at:
  7742 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcmul.c"
  7743 ;; Parameters:    Size  Location     Type
  7744 ;;  b               4   28[COMRAM] unsigned char 
  7745 ;;  a               4   32[COMRAM] unsigned char 
  7746 ;; Auto vars:     Size  Location     Type
  7747 ;;  prod            4   47[COMRAM] struct .
  7748 ;;  grs             4   41[COMRAM] unsigned long 
  7749 ;;  temp            2   51[COMRAM] struct .
  7750 ;;  bexp            1   46[COMRAM] unsigned char 
  7751 ;;  aexp            1   45[COMRAM] unsigned char 
  7752 ;;  sign            1   40[COMRAM] unsigned char 
  7753 ;; Return value:  Size  Location     Type
  7754 ;;                  4   28[COMRAM] unsigned char 
  7755 ;; Registers used:
  7756 ;;		wreg, status,2, status,0, prodl, prodh
  7757 ;; Tracked objects:
  7758 ;;		On entry : 0/0
  7759 ;;		On exit  : 0/0
  7760 ;;		Unchanged: 0/0
  7761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7762 ;;      Params:         8       0       0       0       0       0       0       0       0
  7763 ;;      Locals:        13       0       0       0       0       0       0       0       0
  7764 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7765 ;;      Totals:        25       0       0       0       0       0       0       0       0
  7766 ;;Total ram usage:       25 bytes
  7767 ;; Hardware stack levels used:    1
  7768 ;; Hardware stack levels required when called:    1
  7769 ;; This function calls:
  7770 ;;		Nothing
  7771 ;; This function is called by:
  7772 ;;		_read_adc
  7773 ;;		_fround
  7774 ;;		_scale
  7775 ;;		_sprintf
  7776 ;; This function uses a non-reentrant model
  7777 ;;
  7778                           
  7779                           	psect	text26
  7780  0019FA                     __ptext26:
  7781                           	opt stack 0
  7782  0019FA                     ___flmul:
  7783                           	opt stack 26
  7784                           
  7785                           ;incstack = 0
  7786  0019FA  5020               	movf	___flmul@b+3,w,c
  7787  0019FC  0B80               	andlw	128
  7788  0019FE  6E29               	movwf	___flmul@sign,c
  7789  001A00  5020               	movf	___flmul@b+3,w,c
  7790  001A02  2420               	addwf	___flmul@b+3,w,c
  7791  001A04  6E2F               	movwf	___flmul@bexp,c
  7792  001A06  BE1F               	btfsc	___flmul@b+2,7,c
  7793  001A08  802F               	bsf	___flmul@bexp,0,c
  7794  001A0A  502F               	movf	___flmul@bexp,w,c
  7795  001A0C  B4D8               	btfsc	status,2,c
  7796  001A0E  D00D               	goto	l2860
  7797  001A10  282F               	incf	___flmul@bexp,w,c
  7798  001A12  A4D8               	btfss	status,2,c
  7799  001A14  D008               	goto	l2858
  7800  001A16  0E00               	movlw	0
  7801  001A18  6E1D               	movwf	___flmul@b,c
  7802  001A1A  0E00               	movlw	0
  7803  001A1C  6E1E               	movwf	___flmul@b+1,c
  7804  001A1E  0E00               	movlw	0
  7805  001A20  6E1F               	movwf	___flmul@b+2,c
  7806  001A22  0E00               	movlw	0
  7807  001A24  6E20               	movwf	___flmul@b+3,c
  7808  001A26                     l2858:
  7809  001A26  8E1F               	bsf	___flmul@b+2,7,c
  7810  001A28  D008               	goto	l2862
  7811  001A2A                     l2860:
  7812  001A2A  0E00               	movlw	0
  7813  001A2C  6E1D               	movwf	___flmul@b,c
  7814  001A2E  0E00               	movlw	0
  7815  001A30  6E1E               	movwf	___flmul@b+1,c
  7816  001A32  0E00               	movlw	0
  7817  001A34  6E1F               	movwf	___flmul@b+2,c
  7818  001A36  0E00               	movlw	0
  7819  001A38  6E20               	movwf	___flmul@b+3,c
  7820  001A3A                     l2862:
  7821  001A3A  5024               	movf	___flmul@a+3,w,c
  7822  001A3C  0B80               	andlw	128
  7823  001A3E  1A29               	xorwf	___flmul@sign,f,c
  7824  001A40  5024               	movf	___flmul@a+3,w,c
  7825  001A42  2424               	addwf	___flmul@a+3,w,c
  7826  001A44  6E2E               	movwf	___flmul@aexp,c
  7827  001A46  BE23               	btfsc	___flmul@a+2,7,c
  7828  001A48  802E               	bsf	___flmul@aexp,0,c
  7829  001A4A  502E               	movf	___flmul@aexp,w,c
  7830  001A4C  B4D8               	btfsc	status,2,c
  7831  001A4E  D00D               	goto	l2878
  7832  001A50  282E               	incf	___flmul@aexp,w,c
  7833  001A52  A4D8               	btfss	status,2,c
  7834  001A54  D008               	goto	l2876
  7835  001A56  0E00               	movlw	0
  7836  001A58  6E21               	movwf	___flmul@a,c
  7837  001A5A  0E00               	movlw	0
  7838  001A5C  6E22               	movwf	___flmul@a+1,c
  7839  001A5E  0E00               	movlw	0
  7840  001A60  6E23               	movwf	___flmul@a+2,c
  7841  001A62  0E00               	movlw	0
  7842  001A64  6E24               	movwf	___flmul@a+3,c
  7843  001A66                     l2876:
  7844  001A66  8E23               	bsf	___flmul@a+2,7,c
  7845  001A68  D008               	goto	l888
  7846  001A6A                     l2878:
  7847  001A6A  0E00               	movlw	0
  7848  001A6C  6E21               	movwf	___flmul@a,c
  7849  001A6E  0E00               	movlw	0
  7850  001A70  6E22               	movwf	___flmul@a+1,c
  7851  001A72  0E00               	movlw	0
  7852  001A74  6E23               	movwf	___flmul@a+2,c
  7853  001A76  0E00               	movlw	0
  7854  001A78  6E24               	movwf	___flmul@a+3,c
  7855  001A7A                     l888:
  7856  001A7A  502E               	movf	___flmul@aexp,w,c
  7857  001A7C  B4D8               	btfsc	status,2,c
  7858  001A7E  D003               	goto	l2882
  7859  001A80  502F               	movf	___flmul@bexp,w,c
  7860  001A82  A4D8               	btfss	status,2,c
  7861  001A84  D009               	goto	l2886
  7862  001A86                     l2882:
  7863  001A86  0E00               	movlw	0
  7864  001A88  6E1D               	movwf	?___flmul,c
  7865  001A8A  0E00               	movlw	0
  7866  001A8C  6E1E               	movwf	?___flmul+1,c
  7867  001A8E  0E00               	movlw	0
  7868  001A90  6E1F               	movwf	?___flmul+2,c
  7869  001A92  0E00               	movlw	0
  7870  001A94  6E20               	movwf	?___flmul+3,c
  7871  001A96  0012               	return	
  7872  001A98                     l2886:
  7873  001A98  5023               	movf	___flmul@a+2,w,c
  7874  001A9A  021D               	mulwf	___flmul@b,c
  7875  001A9C  CFF3 F034          	movff	prodl,___flmul@temp
  7876  001AA0  CFF4 F035          	movff	prodh,___flmul@temp+1
  7877  001AA4  5034               	movf	___flmul@temp,w,c
  7878  001AA6  6E2A               	movwf	___flmul@grs,c
  7879  001AA8  6A2B               	clrf	___flmul@grs+1,c
  7880  001AAA  6A2C               	clrf	___flmul@grs+2,c
  7881  001AAC  6A2D               	clrf	___flmul@grs+3,c
  7882  001AAE  5035               	movf	___flmul@temp+1,w,c
  7883  001AB0  6E30               	movwf	___flmul@prod,c
  7884  001AB2  6A31               	clrf	___flmul@prod+1,c
  7885  001AB4  6A32               	clrf	___flmul@prod+2,c
  7886  001AB6  6A33               	clrf	___flmul@prod+3,c
  7887  001AB8  5022               	movf	___flmul@a+1,w,c
  7888  001ABA  021E               	mulwf	___flmul@b+1,c
  7889  001ABC  CFF3 F034          	movff	prodl,___flmul@temp
  7890  001AC0  CFF4 F035          	movff	prodh,___flmul@temp+1
  7891  001AC4  5034               	movf	___flmul@temp,w,c
  7892  001AC6  262A               	addwf	___flmul@grs,f,c
  7893  001AC8  0E00               	movlw	0
  7894  001ACA  222B               	addwfc	___flmul@grs+1,f,c
  7895  001ACC  222C               	addwfc	___flmul@grs+2,f,c
  7896  001ACE  222D               	addwfc	___flmul@grs+3,f,c
  7897  001AD0  5035               	movf	___flmul@temp+1,w,c
  7898  001AD2  2630               	addwf	___flmul@prod,f,c
  7899  001AD4  0E00               	movlw	0
  7900  001AD6  2231               	addwfc	___flmul@prod+1,f,c
  7901  001AD8  2232               	addwfc	___flmul@prod+2,f,c
  7902  001ADA  2233               	addwfc	___flmul@prod+3,f,c
  7903  001ADC  5021               	movf	___flmul@a,w,c
  7904  001ADE  021F               	mulwf	___flmul@b+2,c
  7905  001AE0  CFF3 F034          	movff	prodl,___flmul@temp
  7906  001AE4  CFF4 F035          	movff	prodh,___flmul@temp+1
  7907  001AE8  5034               	movf	___flmul@temp,w,c
  7908  001AEA  262A               	addwf	___flmul@grs,f,c
  7909  001AEC  0E00               	movlw	0
  7910  001AEE  222B               	addwfc	___flmul@grs+1,f,c
  7911  001AF0  222C               	addwfc	___flmul@grs+2,f,c
  7912  001AF2  222D               	addwfc	___flmul@grs+3,f,c
  7913  001AF4  5035               	movf	___flmul@temp+1,w,c
  7914  001AF6  2630               	addwf	___flmul@prod,f,c
  7915  001AF8  0E00               	movlw	0
  7916  001AFA  2231               	addwfc	___flmul@prod+1,f,c
  7917  001AFC  2232               	addwfc	___flmul@prod+2,f,c
  7918  001AFE  2233               	addwfc	___flmul@prod+3,f,c
  7919  001B00  C02C  F02D         	movff	___flmul@grs+2,___flmul@grs+3
  7920  001B04  C02B  F02C         	movff	___flmul@grs+1,___flmul@grs+2
  7921  001B08  C02A  F02B         	movff	___flmul@grs,___flmul@grs+1
  7922  001B0C  6A2A               	clrf	___flmul@grs,c
  7923  001B0E  5021               	movf	___flmul@a,w,c
  7924  001B10  021E               	mulwf	___flmul@b+1,c
  7925  001B12  CFF3 F034          	movff	prodl,___flmul@temp
  7926  001B16  CFF4 F035          	movff	prodh,___flmul@temp+1
  7927  001B1A  5034               	movf	___flmul@temp,w,c
  7928  001B1C  262A               	addwf	___flmul@grs,f,c
  7929  001B1E  5035               	movf	___flmul@temp+1,w,c
  7930  001B20  222B               	addwfc	___flmul@grs+1,f,c
  7931  001B22  0E00               	movlw	0
  7932  001B24  222C               	addwfc	___flmul@grs+2,f,c
  7933  001B26  0E00               	movlw	0
  7934  001B28  222D               	addwfc	___flmul@grs+3,f,c
  7935  001B2A  5022               	movf	___flmul@a+1,w,c
  7936  001B2C  021D               	mulwf	___flmul@b,c
  7937  001B2E  CFF3 F034          	movff	prodl,___flmul@temp
  7938  001B32  CFF4 F035          	movff	prodh,___flmul@temp+1
  7939  001B36  5034               	movf	___flmul@temp,w,c
  7940  001B38  262A               	addwf	___flmul@grs,f,c
  7941  001B3A  5035               	movf	___flmul@temp+1,w,c
  7942  001B3C  222B               	addwfc	___flmul@grs+1,f,c
  7943  001B3E  0E00               	movlw	0
  7944  001B40  222C               	addwfc	___flmul@grs+2,f,c
  7945  001B42  0E00               	movlw	0
  7946  001B44  222D               	addwfc	___flmul@grs+3,f,c
  7947  001B46  C02C  F02D         	movff	___flmul@grs+2,___flmul@grs+3
  7948  001B4A  C02B  F02C         	movff	___flmul@grs+1,___flmul@grs+2
  7949  001B4E  C02A  F02B         	movff	___flmul@grs,___flmul@grs+1
  7950  001B52  6A2A               	clrf	___flmul@grs,c
  7951  001B54  5021               	movf	___flmul@a,w,c
  7952  001B56  021D               	mulwf	___flmul@b,c
  7953  001B58  CFF3 F034          	movff	prodl,___flmul@temp
  7954  001B5C  CFF4 F035          	movff	prodh,___flmul@temp+1
  7955  001B60  5034               	movf	___flmul@temp,w,c
  7956  001B62  262A               	addwf	___flmul@grs,f,c
  7957  001B64  5035               	movf	___flmul@temp+1,w,c
  7958  001B66  222B               	addwfc	___flmul@grs+1,f,c
  7959  001B68  0E00               	movlw	0
  7960  001B6A  222C               	addwfc	___flmul@grs+2,f,c
  7961  001B6C  0E00               	movlw	0
  7962  001B6E  222D               	addwfc	___flmul@grs+3,f,c
  7963  001B70  5023               	movf	___flmul@a+2,w,c
  7964  001B72  021E               	mulwf	___flmul@b+1,c
  7965  001B74  CFF3 F034          	movff	prodl,___flmul@temp
  7966  001B78  CFF4 F035          	movff	prodh,___flmul@temp+1
  7967  001B7C  5034               	movf	___flmul@temp,w,c
  7968  001B7E  2630               	addwf	___flmul@prod,f,c
  7969  001B80  5035               	movf	___flmul@temp+1,w,c
  7970  001B82  2231               	addwfc	___flmul@prod+1,f,c
  7971  001B84  0E00               	movlw	0
  7972  001B86  2232               	addwfc	___flmul@prod+2,f,c
  7973  001B88  0E00               	movlw	0
  7974  001B8A  2233               	addwfc	___flmul@prod+3,f,c
  7975  001B8C  5022               	movf	___flmul@a+1,w,c
  7976  001B8E  021F               	mulwf	___flmul@b+2,c
  7977  001B90  CFF3 F034          	movff	prodl,___flmul@temp
  7978  001B94  CFF4 F035          	movff	prodh,___flmul@temp+1
  7979  001B98  5034               	movf	___flmul@temp,w,c
  7980  001B9A  2630               	addwf	___flmul@prod,f,c
  7981  001B9C  5035               	movf	___flmul@temp+1,w,c
  7982  001B9E  2231               	addwfc	___flmul@prod+1,f,c
  7983  001BA0  0E00               	movlw	0
  7984  001BA2  2232               	addwfc	___flmul@prod+2,f,c
  7985  001BA4  0E00               	movlw	0
  7986  001BA6  2233               	addwfc	___flmul@prod+3,f,c
  7987  001BA8  5023               	movf	___flmul@a+2,w,c
  7988  001BAA  021F               	mulwf	___flmul@b+2,c
  7989  001BAC  CFF3 F034          	movff	prodl,___flmul@temp
  7990  001BB0  CFF4 F035          	movff	prodh,___flmul@temp+1
  7991  001BB4  5034               	movf	___flmul@temp,w,c
  7992  001BB6  6E25               	movwf	??___flmul& (0+255),c
  7993  001BB8  5035               	movf	___flmul@temp+1,w,c
  7994  001BBA  6E26               	movwf	(??___flmul+1)& (0+255),c
  7995  001BBC  6A27               	clrf	(??___flmul+2)& (0+255),c
  7996  001BBE  6A28               	clrf	(??___flmul+3)& (0+255),c
  7997  001BC0  C027  F028         	movff	??___flmul+2,??___flmul+3
  7998  001BC4  C026  F027         	movff	??___flmul+1,??___flmul+2
  7999  001BC8  C025  F026         	movff	??___flmul,??___flmul+1
  8000  001BCC  6A25               	clrf	??___flmul,c
  8001  001BCE  5025               	movf	??___flmul,w,c
  8002  001BD0  2630               	addwf	___flmul@prod,f,c
  8003  001BD2  5026               	movf	??___flmul+1,w,c
  8004  001BD4  2231               	addwfc	___flmul@prod+1,f,c
  8005  001BD6  5027               	movf	??___flmul+2,w,c
  8006  001BD8  2232               	addwfc	___flmul@prod+2,f,c
  8007  001BDA  5028               	movf	??___flmul+3,w,c
  8008  001BDC  2233               	addwfc	___flmul@prod+3,f,c
  8009  001BDE  C02A  F025         	movff	___flmul@grs,??___flmul
  8010  001BE2  C02B  F026         	movff	___flmul@grs+1,??___flmul+1
  8011  001BE6  C02C  F027         	movff	___flmul@grs+2,??___flmul+2
  8012  001BEA  C02D  F028         	movff	___flmul@grs+3,??___flmul+3
  8013  001BEE  0E19               	movlw	25
  8014  001BF0  D005               	goto	u2780
  8015  001BF2                     u2785:
  8016  001BF2  90D8               	bcf	status,0,c
  8017  001BF4  3228               	rrcf	??___flmul+3,f,c
  8018  001BF6  3227               	rrcf	??___flmul+2,f,c
  8019  001BF8  3226               	rrcf	??___flmul+1,f,c
  8020  001BFA  3225               	rrcf	??___flmul,f,c
  8021  001BFC                     u2780:
  8022  001BFC  2EE8               	decfsz	wreg,f,c
  8023  001BFE  D7F9               	goto	u2785
  8024  001C00  5025               	movf	??___flmul,w,c
  8025  001C02  2630               	addwf	___flmul@prod,f,c
  8026  001C04  5026               	movf	??___flmul+1,w,c
  8027  001C06  2231               	addwfc	___flmul@prod+1,f,c
  8028  001C08  5027               	movf	??___flmul+2,w,c
  8029  001C0A  2232               	addwfc	___flmul@prod+2,f,c
  8030  001C0C  5028               	movf	??___flmul+3,w,c
  8031  001C0E  2233               	addwfc	___flmul@prod+3,f,c
  8032  001C10  C02C  F02D         	movff	___flmul@grs+2,___flmul@grs+3
  8033  001C14  C02B  F02C         	movff	___flmul@grs+1,___flmul@grs+2
  8034  001C18  C02A  F02B         	movff	___flmul@grs,___flmul@grs+1
  8035  001C1C  6A2A               	clrf	___flmul@grs,c
  8036  001C1E  502E               	movf	___flmul@aexp,w,c
  8037  001C20  C02F  F025         	movff	___flmul@bexp,??___flmul
  8038  001C24  6A26               	clrf	(??___flmul+1)& (0+255),c
  8039  001C26  2625               	addwf	??___flmul,f,c
  8040  001C28  0E00               	movlw	0
  8041  001C2A  2226               	addwfc	??___flmul+1,f,c
  8042  001C2C  0E82               	movlw	130
  8043  001C2E  2425               	addwf	??___flmul,w,c
  8044  001C30  6E34               	movwf	___flmul@temp,c
  8045  001C32  0EFF               	movlw	255
  8046  001C34  2026               	addwfc	??___flmul+1,w,c
  8047  001C36  6E35               	movwf	___flmul@temp+1,c
  8048  001C38  D00F               	goto	l2934
  8049  001C3A                     l2928:
  8050  001C3A  90D8               	bcf	status,0,c
  8051  001C3C  3630               	rlcf	___flmul@prod,f,c
  8052  001C3E  3631               	rlcf	___flmul@prod+1,f,c
  8053  001C40  3632               	rlcf	___flmul@prod+2,f,c
  8054  001C42  3633               	rlcf	___flmul@prod+3,f,c
  8055  001C44  BE2D               	btfsc	___flmul@grs+3,7,c
  8056  001C46  8030               	bsf	___flmul@prod,0,c
  8057  001C48  90D8               	bcf	status,0,c
  8058  001C4A  362A               	rlcf	___flmul@grs,f,c
  8059  001C4C  362B               	rlcf	___flmul@grs+1,f,c
  8060  001C4E  362C               	rlcf	___flmul@grs+2,f,c
  8061  001C50  362D               	rlcf	___flmul@grs+3,f,c
  8062  001C52  0634               	decf	___flmul@temp,f,c
  8063  001C54  A0D8               	btfss	status,0,c
  8064  001C56  0635               	decf	___flmul@temp+1,f,c
  8065  001C58                     l2934:
  8066  001C58  AE32               	btfss	___flmul@prod+2,7,c
  8067  001C5A  D7EF               	goto	l2928
  8068  001C5C  0E00               	movlw	0
  8069  001C5E  6E2E               	movwf	___flmul@aexp,c
  8070  001C60  AE2D               	btfss	___flmul@grs+3,7,c
  8071  001C62  D016               	goto	l897
  8072  001C64  0EFF               	movlw	255
  8073  001C66  142A               	andwf	___flmul@grs,w,c
  8074  001C68  6E25               	movwf	??___flmul& (0+255),c
  8075  001C6A  0EFF               	movlw	255
  8076  001C6C  142B               	andwf	___flmul@grs+1,w,c
  8077  001C6E  6E26               	movwf	(??___flmul+1)& (0+255),c
  8078  001C70  0EFF               	movlw	255
  8079  001C72  142C               	andwf	___flmul@grs+2,w,c
  8080  001C74  6E27               	movwf	(??___flmul+2)& (0+255),c
  8081  001C76  0E7F               	movlw	127
  8082  001C78  142D               	andwf	___flmul@grs+3,w,c
  8083  001C7A  6E28               	movwf	(??___flmul+3)& (0+255),c
  8084  001C7C  5025               	movf	??___flmul,w,c
  8085  001C7E  1026               	iorwf	??___flmul+1,w,c
  8086  001C80  1027               	iorwf	??___flmul+2,w,c
  8087  001C82  1028               	iorwf	??___flmul+3,w,c
  8088  001C84  A4D8               	btfss	status,2,c
  8089  001C86  D002               	goto	l2944
  8090  001C88  A030               	btfss	___flmul@prod,0,c
  8091  001C8A  D002               	goto	l897
  8092  001C8C                     l2944:
  8093  001C8C  0E01               	movlw	1
  8094  001C8E  6E2E               	movwf	___flmul@aexp,c
  8095  001C90                     l897:
  8096  001C90  502E               	movf	___flmul@aexp,w,c
  8097  001C92  B4D8               	btfsc	status,2,c
  8098  001C94  D01F               	goto	l2954
  8099  001C96  0E01               	movlw	1
  8100  001C98  2630               	addwf	___flmul@prod,f,c
  8101  001C9A  0E00               	movlw	0
  8102  001C9C  2231               	addwfc	___flmul@prod+1,f,c
  8103  001C9E  2232               	addwfc	___flmul@prod+2,f,c
  8104  001CA0  2233               	addwfc	___flmul@prod+3,f,c
  8105  001CA2  A033               	btfss	___flmul@prod+3,0,c
  8106  001CA4  D017               	goto	l2954
  8107  001CA6  C030  F025         	movff	___flmul@prod,??___flmul
  8108  001CAA  C031  F026         	movff	___flmul@prod+1,??___flmul+1
  8109  001CAE  C032  F027         	movff	___flmul@prod+2,??___flmul+2
  8110  001CB2  C033  F028         	movff	___flmul@prod+3,??___flmul+3
  8111  001CB6  3428               	rlcf	??___flmul+3,w,c
  8112  001CB8  3228               	rrcf	??___flmul+3,f,c
  8113  001CBA  3227               	rrcf	??___flmul+2,f,c
  8114  001CBC  3226               	rrcf	??___flmul+1,f,c
  8115  001CBE  3225               	rrcf	??___flmul,f,c
  8116  001CC0  C025  F030         	movff	??___flmul,___flmul@prod
  8117  001CC4  C026  F031         	movff	??___flmul+1,___flmul@prod+1
  8118  001CC8  C027  F032         	movff	??___flmul+2,___flmul@prod+2
  8119  001CCC  C028  F033         	movff	??___flmul+3,___flmul@prod+3
  8120  001CD0  4A34               	infsnz	___flmul@temp,f,c
  8121  001CD2  2A35               	incf	___flmul@temp+1,f,c
  8122  001CD4                     l2954:
  8123  001CD4  BE35               	btfsc	___flmul@temp+1,7,c
  8124  001CD6  D00D               	goto	l2958
  8125  001CD8  5035               	movf	___flmul@temp+1,w,c
  8126  001CDA  E103               	bnz	u2860
  8127  001CDC  2834               	incf	___flmul@temp,w,c
  8128  001CDE  A0D8               	btfss	status,0,c
  8129  001CE0  D008               	goto	l2958
  8130  001CE2                     u2860:
  8131  001CE2  0E00               	movlw	0
  8132  001CE4  6E30               	movwf	___flmul@prod,c
  8133  001CE6  0E00               	movlw	0
  8134  001CE8  6E31               	movwf	___flmul@prod+1,c
  8135  001CEA  0E80               	movlw	128
  8136  001CEC  6E32               	movwf	___flmul@prod+2,c
  8137  001CEE  0E7F               	movlw	127
  8138  001CF0  D020               	goto	L10
  8139  001CF2                     l2958:
  8140  001CF2  BE35               	btfsc	___flmul@temp+1,7,c
  8141  001CF4  D005               	goto	l2960
  8142  001CF6  5035               	movf	___flmul@temp+1,w,c
  8143  001CF8  E10E               	bnz	l905
  8144  001CFA  0434               	decf	___flmul@temp,w,c
  8145  001CFC  B0D8               	btfsc	status,0,c
  8146  001CFE  D00B               	goto	l905
  8147  001D00                     l2960:
  8148  001D00  0E00               	movlw	0
  8149  001D02  6E30               	movwf	___flmul@prod,c
  8150  001D04  0E00               	movlw	0
  8151  001D06  6E31               	movwf	___flmul@prod+1,c
  8152  001D08  0E00               	movlw	0
  8153  001D0A  6E32               	movwf	___flmul@prod+2,c
  8154  001D0C  0E00               	movlw	0
  8155  001D0E  6E33               	movwf	___flmul@prod+3,c
  8156  001D10  0E00               	movlw	0
  8157  001D12  6E29               	movwf	___flmul@sign,c
  8158  001D14  D00F               	goto	l2970
  8159  001D16                     l905:
  8160  001D16  C034  F02F         	movff	___flmul@temp,___flmul@bexp
  8161  001D1A  0EFF               	movlw	255
  8162  001D1C  1630               	andwf	___flmul@prod,f,c
  8163  001D1E  0EFF               	movlw	255
  8164  001D20  1631               	andwf	___flmul@prod+1,f,c
  8165  001D22  0E7F               	movlw	127
  8166  001D24  1632               	andwf	___flmul@prod+2,f,c
  8167  001D26  0E00               	movlw	0
  8168  001D28  1633               	andwf	___flmul@prod+3,f,c
  8169  001D2A  B02F               	btfsc	___flmul@bexp,0,c
  8170  001D2C  8E32               	bsf	___flmul@prod+2,7,c
  8171  001D2E  90D8               	bcf	status,0,c
  8172  001D30  302F               	rrcf	___flmul@bexp,w,c
  8173  001D32                     L10:
  8174  001D32  6E33               	movwf	___flmul@prod+3,c
  8175  001D34                     l2970:
  8176  001D34  5029               	movf	___flmul@sign,w,c
  8177  001D36  1233               	iorwf	___flmul@prod+3,f,c
  8178  001D38  C030  F01D         	movff	___flmul@prod,?___flmul
  8179  001D3C  C031  F01E         	movff	___flmul@prod+1,?___flmul+1
  8180  001D40  C032  F01F         	movff	___flmul@prod+2,?___flmul+2
  8181  001D44  C033  F020         	movff	___flmul@prod+3,?___flmul+3
  8182  001D48  0012               	return	
  8183  001D4A                     __end_of___flmul:
  8184                           	opt stack 0
  8185                           tblptru	equ	0xFF8
  8186                           tblptrh	equ	0xFF7
  8187                           tblptrl	equ	0xFF6
  8188                           tablat	equ	0xFF5
  8189                           prodh	equ	0xFF4
  8190                           prodl	equ	0xFF3
  8191                           intcon	equ	0xFF2
  8192                           postinc0	equ	0xFEE
  8193                           wreg	equ	0xFE8
  8194                           indf1	equ	0xFE7
  8195                           plusw1	equ	0xFE3
  8196                           fsr1h	equ	0xFE2
  8197                           fsr1l	equ	0xFE1
  8198                           indf2	equ	0xFDF
  8199                           postinc2	equ	0xFDE
  8200                           postdec2	equ	0xFDD
  8201                           plusw2	equ	0xFDB
  8202                           fsr2h	equ	0xFDA
  8203                           fsr2l	equ	0xFD9
  8204                           status	equ	0xFD8
  8205                           
  8206 ;; *************** function ___fldiv *****************
  8207 ;; Defined at:
  8208 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcdiv.c"
  8209 ;; Parameters:    Size  Location     Type
  8210 ;;  b               4   53[COMRAM] unsigned char 
  8211 ;;  a               4   57[COMRAM] unsigned char 
  8212 ;; Auto vars:     Size  Location     Type
  8213 ;;  grs             4    7[BANK0 ] unsigned long 
  8214 ;;  rem             4    1[BANK0 ] unsigned long 
  8215 ;;  new_exp         2    5[BANK0 ] int 
  8216 ;;  aexp            1   12[BANK0 ] unsigned char 
  8217 ;;  bexp            1   11[BANK0 ] unsigned char 
  8218 ;;  sign            1    0[BANK0 ] unsigned char 
  8219 ;; Return value:  Size  Location     Type
  8220 ;;                  4   53[COMRAM] unsigned char 
  8221 ;; Registers used:
  8222 ;;		wreg, status,2, status,0
  8223 ;; Tracked objects:
  8224 ;;		On entry : 0/0
  8225 ;;		On exit  : 0/0
  8226 ;;		Unchanged: 0/0
  8227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8228 ;;      Params:         8       0       0       0       0       0       0       0       0
  8229 ;;      Locals:         0      13       0       0       0       0       0       0       0
  8230 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8231 ;;      Totals:        12      13       0       0       0       0       0       0       0
  8232 ;;Total ram usage:       25 bytes
  8233 ;; Hardware stack levels used:    1
  8234 ;; Hardware stack levels required when called:    1
  8235 ;; This function calls:
  8236 ;;		Nothing
  8237 ;; This function is called by:
  8238 ;;		_main
  8239 ;;		_scarica
  8240 ;;		_read_adc
  8241 ;; This function uses a non-reentrant model
  8242 ;;
  8243                           
  8244                           	psect	text27
  8245  001D4A                     __ptext27:
  8246                           	opt stack 0
  8247  001D4A                     ___fldiv:
  8248                           	opt stack 27
  8249                           
  8250                           ;incstack = 0
  8251  001D4A  5039               	movf	___fldiv@b+3,w,c
  8252  001D4C  0B80               	andlw	128
  8253  001D4E  0100               	movlb	0	; () banked
  8254  001D50  6F60               	movwf	___fldiv@sign& (0+255),b
  8255  001D52  5039               	movf	___fldiv@b+3,w,c
  8256  001D54  2439               	addwf	___fldiv@b+3,w,c
  8257  001D56  0100               	movlb	0	; () banked
  8258  001D58  6F6B               	movwf	___fldiv@bexp& (0+255),b
  8259                           
  8260                           ; BSR set to: 0
  8261  001D5A  AE38               	btfss	___fldiv@b+2,7,c
  8262  001D5C  D002               	goto	l4340
  8263                           
  8264                           ; BSR set to: 0
  8265  001D5E  0100               	movlb	0	; () banked
  8266  001D60  816B               	bsf	___fldiv@bexp& (0+255),0,b
  8267  001D62                     l4340:
  8268                           
  8269                           ; BSR set to: 0
  8270  001D62  0100               	movlb	0	; () banked
  8271  001D64  516B               	movf	___fldiv@bexp& (0+255),w,b
  8272  001D66  0100               	movlb	0	; () banked
  8273  001D68  B4D8               	btfsc	status,2,c
  8274  001D6A  D00E               	goto	l4350
  8275                           
  8276                           ; BSR set to: 0
  8277  001D6C  0100               	movlb	0	; () banked
  8278  001D6E  296B               	incf	___fldiv@bexp& (0+255),w,b
  8279  001D70  A4D8               	btfss	status,2,c
  8280  001D72  D008               	goto	l4346
  8281                           
  8282                           ; BSR set to: 0
  8283  001D74  0E00               	movlw	0
  8284  001D76  6E36               	movwf	___fldiv@b,c
  8285  001D78  0E00               	movlw	0
  8286  001D7A  6E37               	movwf	___fldiv@b+1,c
  8287  001D7C  0E00               	movlw	0
  8288  001D7E  6E38               	movwf	___fldiv@b+2,c
  8289  001D80  0E00               	movlw	0
  8290  001D82  6E39               	movwf	___fldiv@b+3,c
  8291  001D84                     l4346:
  8292                           
  8293                           ; BSR set to: 0
  8294  001D84  8E38               	bsf	___fldiv@b+2,7,c
  8295  001D86  D006               	goto	L11
  8296  001D88                     l4350:
  8297                           
  8298                           ; BSR set to: 0
  8299  001D88  0E00               	movlw	0
  8300  001D8A  6E36               	movwf	___fldiv@b,c
  8301  001D8C  0E00               	movlw	0
  8302  001D8E  6E37               	movwf	___fldiv@b+1,c
  8303  001D90  0E00               	movlw	0
  8304  001D92  6E38               	movwf	___fldiv@b+2,c
  8305  001D94                     L11:
  8306  001D94  0E00               	movlw	0
  8307  001D96  6E39               	movwf	___fldiv@b+3,c
  8308                           
  8309                           ; BSR set to: 0
  8310                           
  8311                           ; BSR set to: 0
  8312  001D98  503D               	movf	___fldiv@a+3,w,c
  8313  001D9A  0B80               	andlw	128
  8314  001D9C  0100               	movlb	0	; () banked
  8315  001D9E  1B60               	xorwf	___fldiv@sign& (0+255),f,b
  8316                           
  8317                           ; BSR set to: 0
  8318  001DA0  503D               	movf	___fldiv@a+3,w,c
  8319  001DA2  243D               	addwf	___fldiv@a+3,w,c
  8320  001DA4  0100               	movlb	0	; () banked
  8321  001DA6  6F6C               	movwf	___fldiv@aexp& (0+255),b
  8322                           
  8323                           ; BSR set to: 0
  8324  001DA8  AE3C               	btfss	___fldiv@a+2,7,c
  8325  001DAA  D002               	goto	l4360
  8326                           
  8327                           ; BSR set to: 0
  8328  001DAC  0100               	movlb	0	; () banked
  8329  001DAE  816C               	bsf	___fldiv@aexp& (0+255),0,b
  8330  001DB0                     l4360:
  8331                           
  8332                           ; BSR set to: 0
  8333  001DB0  0100               	movlb	0	; () banked
  8334  001DB2  516C               	movf	___fldiv@aexp& (0+255),w,b
  8335  001DB4  0100               	movlb	0	; () banked
  8336  001DB6  B4D8               	btfsc	status,2,c
  8337  001DB8  D00E               	goto	l4370
  8338                           
  8339                           ; BSR set to: 0
  8340  001DBA  0100               	movlb	0	; () banked
  8341  001DBC  296C               	incf	___fldiv@aexp& (0+255),w,b
  8342  001DBE  A4D8               	btfss	status,2,c
  8343  001DC0  D008               	goto	l4366
  8344                           
  8345                           ; BSR set to: 0
  8346  001DC2  0E00               	movlw	0
  8347  001DC4  6E3A               	movwf	___fldiv@a,c
  8348  001DC6  0E00               	movlw	0
  8349  001DC8  6E3B               	movwf	___fldiv@a+1,c
  8350  001DCA  0E00               	movlw	0
  8351  001DCC  6E3C               	movwf	___fldiv@a+2,c
  8352  001DCE  0E00               	movlw	0
  8353  001DD0  6E3D               	movwf	___fldiv@a+3,c
  8354  001DD2                     l4366:
  8355                           
  8356                           ; BSR set to: 0
  8357  001DD2  8E3C               	bsf	___fldiv@a+2,7,c
  8358  001DD4  D006               	goto	L12
  8359  001DD6                     l4370:
  8360                           
  8361                           ; BSR set to: 0
  8362  001DD6  0E00               	movlw	0
  8363  001DD8  6E3A               	movwf	___fldiv@a,c
  8364  001DDA  0E00               	movlw	0
  8365  001DDC  6E3B               	movwf	___fldiv@a+1,c
  8366  001DDE  0E00               	movlw	0
  8367  001DE0  6E3C               	movwf	___fldiv@a+2,c
  8368  001DE2                     L12:
  8369  001DE2  0E00               	movlw	0
  8370  001DE4  6E3D               	movwf	___fldiv@a+3,c
  8371                           
  8372                           ; BSR set to: 0
  8373                           
  8374                           ; BSR set to: 0
  8375  001DE6  503A               	movf	___fldiv@a,w,c
  8376  001DE8  103B               	iorwf	___fldiv@a+1,w,c
  8377  001DEA  103C               	iorwf	___fldiv@a+2,w,c
  8378  001DEC  103D               	iorwf	___fldiv@a+3,w,c
  8379  001DEE  A4D8               	btfss	status,2,c
  8380  001DF0  D015               	goto	l4382
  8381                           
  8382                           ; BSR set to: 0
  8383  001DF2  0E00               	movlw	0
  8384  001DF4  6E36               	movwf	___fldiv@b,c
  8385  001DF6  0E00               	movlw	0
  8386  001DF8  6E37               	movwf	___fldiv@b+1,c
  8387  001DFA  0E00               	movlw	0
  8388  001DFC  6E38               	movwf	___fldiv@b+2,c
  8389  001DFE  0E00               	movlw	0
  8390  001E00  6E39               	movwf	___fldiv@b+3,c
  8391                           
  8392                           ; BSR set to: 0
  8393  001E02  0E80               	movlw	128
  8394  001E04  1238               	iorwf	___fldiv@b+2,f,c
  8395  001E06  0E7F               	movlw	127
  8396  001E08  1239               	iorwf	___fldiv@b+3,f,c
  8397                           
  8398                           ; BSR set to: 0
  8399  001E0A  C036  F036         	movff	___fldiv@b,?___fldiv
  8400  001E0E  C037  F037         	movff	___fldiv@b+1,?___fldiv+1
  8401  001E12  C038  F038         	movff	___fldiv@b+2,?___fldiv+2
  8402  001E16  C039  F039         	movff	___fldiv@b+3,?___fldiv+3
  8403                           
  8404                           ; BSR set to: 0
  8405  001E1A  0012               	return	
  8406  001E1C                     l4382:
  8407                           
  8408                           ; BSR set to: 0
  8409  001E1C  0100               	movlb	0	; () banked
  8410  001E1E  516B               	movf	___fldiv@bexp& (0+255),w,b
  8411  001E20  0100               	movlb	0	; () banked
  8412  001E22  A4D8               	btfss	status,2,c
  8413  001E24  D011               	goto	l4390
  8414                           
  8415                           ; BSR set to: 0
  8416  001E26  0E00               	movlw	0
  8417  001E28  6E36               	movwf	___fldiv@b,c
  8418  001E2A  0E00               	movlw	0
  8419  001E2C  6E37               	movwf	___fldiv@b+1,c
  8420  001E2E  0E00               	movlw	0
  8421  001E30  6E38               	movwf	___fldiv@b+2,c
  8422  001E32  0E00               	movlw	0
  8423  001E34  6E39               	movwf	___fldiv@b+3,c
  8424                           
  8425                           ; BSR set to: 0
  8426  001E36  C036  F036         	movff	___fldiv@b,?___fldiv
  8427  001E3A  C037  F037         	movff	___fldiv@b+1,?___fldiv+1
  8428  001E3E  C038  F038         	movff	___fldiv@b+2,?___fldiv+2
  8429  001E42  C039  F039         	movff	___fldiv@b+3,?___fldiv+3
  8430                           
  8431                           ; BSR set to: 0
  8432  001E46  0012               	return	
  8433  001E48                     l4390:
  8434                           
  8435                           ; BSR set to: 0
  8436  001E48  0100               	movlb	0	; () banked
  8437  001E4A  516C               	movf	___fldiv@aexp& (0+255),w,b
  8438  001E4C  6E3E               	movwf	??___fldiv& (0+255),c
  8439  001E4E  6A3F               	clrf	(??___fldiv+1)& (0+255),c
  8440  001E50  1E3E               	comf	??___fldiv,f,c
  8441  001E52  1E3F               	comf	??___fldiv+1,f,c
  8442  001E54  4A3E               	infsnz	??___fldiv,f,c
  8443  001E56  2A3F               	incf	??___fldiv+1,f,c
  8444  001E58  0100               	movlb	0	; () banked
  8445  001E5A  516B               	movf	___fldiv@bexp& (0+255),w,b
  8446  001E5C  6E40               	movwf	(??___fldiv+2)& (0+255),c
  8447  001E5E  6A41               	clrf	(??___fldiv+3)& (0+255),c
  8448  001E60  503E               	movf	??___fldiv,w,c
  8449  001E62  2640               	addwf	??___fldiv+2,f,c
  8450  001E64  503F               	movf	??___fldiv+1,w,c
  8451  001E66  2241               	addwfc	??___fldiv+3,f,c
  8452  001E68  0E7F               	movlw	127
  8453  001E6A  2440               	addwf	??___fldiv+2,w,c
  8454  001E6C  0100               	movlb	0	; () banked
  8455  001E6E  6F65               	movwf	___fldiv@new_exp& (0+255),b
  8456  001E70  0E00               	movlw	0
  8457  001E72  2041               	addwfc	??___fldiv+3,w,c
  8458  001E74  0100               	movlb	0	; () banked
  8459  001E76  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
  8460                           
  8461                           ; BSR set to: 0
  8462  001E78  C036  F061         	movff	___fldiv@b,___fldiv@rem
  8463  001E7C  C037  F062         	movff	___fldiv@b+1,___fldiv@rem+1
  8464  001E80  C038  F063         	movff	___fldiv@b+2,___fldiv@rem+2
  8465  001E84  C039  F064         	movff	___fldiv@b+3,___fldiv@rem+3
  8466                           
  8467                           ; BSR set to: 0
  8468  001E88  0E00               	movlw	0
  8469  001E8A  6E36               	movwf	___fldiv@b,c
  8470  001E8C  0E00               	movlw	0
  8471  001E8E  6E37               	movwf	___fldiv@b+1,c
  8472  001E90  0E00               	movlw	0
  8473  001E92  6E38               	movwf	___fldiv@b+2,c
  8474  001E94  0E00               	movlw	0
  8475  001E96  6E39               	movwf	___fldiv@b+3,c
  8476                           
  8477                           ; BSR set to: 0
  8478  001E98  0E00               	movlw	0
  8479  001E9A  0100               	movlb	0	; () banked
  8480  001E9C  6F67               	movwf	___fldiv@grs& (0+255),b
  8481  001E9E  0E00               	movlw	0
  8482  001EA0  6F68               	movwf	(___fldiv@grs+1)& (0+255),b
  8483  001EA2  0E00               	movlw	0
  8484  001EA4  6F69               	movwf	(___fldiv@grs+2)& (0+255),b
  8485  001EA6  0E00               	movlw	0
  8486  001EA8  6F6A               	movwf	(___fldiv@grs+3)& (0+255),b
  8487                           
  8488                           ; BSR set to: 0
  8489  001EAA  0E00               	movlw	0
  8490  001EAC  0100               	movlb	0	; () banked
  8491  001EAE  6F6C               	movwf	___fldiv@aexp& (0+255),b
  8492  001EB0  D037               	goto	l858
  8493  001EB2                     l4400:
  8494                           
  8495                           ; BSR set to: 0
  8496  001EB2  0100               	movlb	0	; () banked
  8497  001EB4  516C               	movf	___fldiv@aexp& (0+255),w,b
  8498  001EB6  0100               	movlb	0	; () banked
  8499  001EB8  B4D8               	btfsc	status,2,c
  8500  001EBA  D014               	goto	l4408
  8501                           
  8502                           ; BSR set to: 0
  8503  001EBC  0100               	movlb	0	; () banked
  8504  001EBE  90D8               	bcf	status,0,c
  8505  001EC0  3761               	rlcf	___fldiv@rem& (0+255),f,b
  8506  001EC2  3762               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  8507  001EC4  3763               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  8508  001EC6  3764               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  8509  001EC8  90D8               	bcf	status,0,c
  8510  001ECA  3636               	rlcf	___fldiv@b,f,c
  8511  001ECC  3637               	rlcf	___fldiv@b+1,f,c
  8512  001ECE  3638               	rlcf	___fldiv@b+2,f,c
  8513  001ED0  3639               	rlcf	___fldiv@b+3,f,c
  8514                           
  8515                           ; BSR set to: 0
  8516  001ED2  0100               	movlb	0	; () banked
  8517  001ED4  BF6A               	btfsc	(___fldiv@grs+3)& (0+255),7,b
  8518                           
  8519                           ; BSR set to: 0
  8520  001ED6  8036               	bsf	___fldiv@b,0,c
  8521                           
  8522                           ; BSR set to: 0
  8523  001ED8  0100               	movlb	0	; () banked
  8524  001EDA  90D8               	bcf	status,0,c
  8525  001EDC  3767               	rlcf	___fldiv@grs& (0+255),f,b
  8526  001EDE  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  8527  001EE0  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  8528  001EE2  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  8529  001EE4                     l4408:
  8530                           
  8531                           ; BSR set to: 0
  8532  001EE4  503A               	movf	___fldiv@a,w,c
  8533  001EE6  0100               	movlb	0	; () banked
  8534  001EE8  5D61               	subwf	___fldiv@rem& (0+255),w,b
  8535  001EEA  503B               	movf	___fldiv@a+1,w,c
  8536  001EEC  0100               	movlb	0	; () banked
  8537  001EEE  5962               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  8538  001EF0  503C               	movf	___fldiv@a+2,w,c
  8539  001EF2  0100               	movlb	0	; () banked
  8540  001EF4  5963               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  8541  001EF6  503D               	movf	___fldiv@a+3,w,c
  8542  001EF8  0100               	movlb	0	; () banked
  8543  001EFA  5964               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  8544  001EFC  A0D8               	btfss	status,0,c
  8545  001EFE  D00E               	goto	l4414
  8546                           
  8547                           ; BSR set to: 0
  8548  001F00  0100               	movlb	0	; () banked
  8549  001F02  8D6A               	bsf	(___fldiv@grs+3)& (0+255),6,b
  8550                           
  8551                           ; BSR set to: 0
  8552  001F04  503A               	movf	___fldiv@a,w,c
  8553  001F06  0100               	movlb	0	; () banked
  8554  001F08  5F61               	subwf	___fldiv@rem& (0+255),f,b
  8555  001F0A  503B               	movf	___fldiv@a+1,w,c
  8556  001F0C  0100               	movlb	0	; () banked
  8557  001F0E  5B62               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  8558  001F10  503C               	movf	___fldiv@a+2,w,c
  8559  001F12  0100               	movlb	0	; () banked
  8560  001F14  5B63               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  8561  001F16  503D               	movf	___fldiv@a+3,w,c
  8562  001F18  0100               	movlb	0	; () banked
  8563  001F1A  5B64               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  8564  001F1C                     l4414:
  8565                           
  8566                           ; BSR set to: 0
  8567  001F1C  0100               	movlb	0	; () banked
  8568  001F1E  2B6C               	incf	___fldiv@aexp& (0+255),f,b
  8569  001F20                     l858:
  8570                           
  8571                           ; BSR set to: 0
  8572  001F20  0E19               	movlw	25
  8573  001F22  0100               	movlb	0	; () banked
  8574  001F24  656C               	cpfsgt	___fldiv@aexp& (0+255),b
  8575  001F26  D7C5               	goto	l4400
  8576                           
  8577                           ; BSR set to: 0
  8578                           
  8579                           ; BSR set to: 0
  8580  001F28  0100               	movlb	0	; () banked
  8581  001F2A  5161               	movf	___fldiv@rem& (0+255),w,b
  8582  001F2C  0100               	movlb	0	; () banked
  8583  001F2E  1162               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  8584  001F30  0100               	movlb	0	; () banked
  8585  001F32  1163               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  8586  001F34  0100               	movlb	0	; () banked
  8587  001F36  1164               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  8588  001F38  B4D8               	btfsc	status,2,c
  8589  001F3A  D015               	goto	l4426
  8590                           
  8591                           ; BSR set to: 0
  8592  001F3C  0100               	movlb	0	; () banked
  8593  001F3E  8167               	bsf	___fldiv@grs& (0+255),0,b
  8594                           
  8595                           ; BSR set to: 0
  8596  001F40  D012               	goto	l4426
  8597  001F42                     l4420:
  8598                           
  8599                           ; BSR set to: 0
  8600  001F42  90D8               	bcf	status,0,c
  8601  001F44  3636               	rlcf	___fldiv@b,f,c
  8602  001F46  3637               	rlcf	___fldiv@b+1,f,c
  8603  001F48  3638               	rlcf	___fldiv@b+2,f,c
  8604  001F4A  3639               	rlcf	___fldiv@b+3,f,c
  8605                           
  8606                           ; BSR set to: 0
  8607  001F4C  0100               	movlb	0	; () banked
  8608  001F4E  BF6A               	btfsc	(___fldiv@grs+3)& (0+255),7,b
  8609                           
  8610                           ; BSR set to: 0
  8611  001F50  8036               	bsf	___fldiv@b,0,c
  8612                           
  8613                           ; BSR set to: 0
  8614  001F52  0100               	movlb	0	; () banked
  8615  001F54  90D8               	bcf	status,0,c
  8616  001F56  3767               	rlcf	___fldiv@grs& (0+255),f,b
  8617  001F58  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  8618  001F5A  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  8619  001F5C  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  8620  001F5E  0100               	movlb	0	; () banked
  8621  001F60  0765               	decf	___fldiv@new_exp& (0+255),f,b
  8622  001F62  A0D8               	btfss	status,0,c
  8623  001F64  0766               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  8624  001F66                     l4426:
  8625                           
  8626                           ; BSR set to: 0
  8627  001F66  AE38               	btfss	___fldiv@b+2,7,c
  8628  001F68  D7EC               	goto	l4420
  8629                           
  8630                           ; BSR set to: 0
  8631                           
  8632                           ; BSR set to: 0
  8633  001F6A  0E00               	movlw	0
  8634  001F6C  0100               	movlb	0	; () banked
  8635  001F6E  6F6C               	movwf	___fldiv@aexp& (0+255),b
  8636                           
  8637                           ; BSR set to: 0
  8638  001F70  0100               	movlb	0	; () banked
  8639  001F72  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
  8640  001F74  D01B               	goto	l869
  8641                           
  8642                           ; BSR set to: 0
  8643  001F76  0EFF               	movlw	255
  8644  001F78  0100               	movlb	0	; () banked
  8645  001F7A  1567               	andwf	___fldiv@grs& (0+255),w,b
  8646  001F7C  6E3E               	movwf	??___fldiv& (0+255),c
  8647  001F7E  0EFF               	movlw	255
  8648  001F80  0100               	movlb	0	; () banked
  8649  001F82  1568               	andwf	(___fldiv@grs+1)& (0+255),w,b
  8650  001F84  6E3F               	movwf	(??___fldiv+1)& (0+255),c
  8651  001F86  0EFF               	movlw	255
  8652  001F88  0100               	movlb	0	; () banked
  8653  001F8A  1569               	andwf	(___fldiv@grs+2)& (0+255),w,b
  8654  001F8C  6E40               	movwf	(??___fldiv+2)& (0+255),c
  8655  001F8E  0E7F               	movlw	127
  8656  001F90  0100               	movlb	0	; () banked
  8657  001F92  156A               	andwf	(___fldiv@grs+3)& (0+255),w,b
  8658  001F94  6E41               	movwf	(??___fldiv+3)& (0+255),c
  8659  001F96  503E               	movf	??___fldiv,w,c
  8660  001F98  103F               	iorwf	??___fldiv+1,w,c
  8661  001F9A  1040               	iorwf	??___fldiv+2,w,c
  8662  001F9C  1041               	iorwf	??___fldiv+3,w,c
  8663  001F9E  A4D8               	btfss	status,2,c
  8664  001FA0  D002               	goto	l4436
  8665                           
  8666                           ; BSR set to: 0
  8667                           
  8668                           ; BSR set to: 0
  8669  001FA2  A036               	btfss	___fldiv@b,0,c
  8670  001FA4  D003               	goto	l869
  8671  001FA6                     l4436:
  8672                           
  8673                           ; BSR set to: 0
  8674  001FA6  0E01               	movlw	1
  8675  001FA8  0100               	movlb	0	; () banked
  8676  001FAA  6F6C               	movwf	___fldiv@aexp& (0+255),b
  8677  001FAC                     l869:
  8678                           
  8679                           ; BSR set to: 0
  8680  001FAC  0100               	movlb	0	; () banked
  8681  001FAE  516C               	movf	___fldiv@aexp& (0+255),w,b
  8682  001FB0  0100               	movlb	0	; () banked
  8683  001FB2  B4D8               	btfsc	status,2,c
  8684  001FB4  D020               	goto	l4446
  8685                           
  8686                           ; BSR set to: 0
  8687  001FB6  0E01               	movlw	1
  8688  001FB8  2636               	addwf	___fldiv@b,f,c
  8689  001FBA  0E00               	movlw	0
  8690  001FBC  2237               	addwfc	___fldiv@b+1,f,c
  8691  001FBE  2238               	addwfc	___fldiv@b+2,f,c
  8692  001FC0  2239               	addwfc	___fldiv@b+3,f,c
  8693                           
  8694                           ; BSR set to: 0
  8695  001FC2  A039               	btfss	___fldiv@b+3,0,c
  8696  001FC4  D018               	goto	l4446
  8697                           
  8698                           ; BSR set to: 0
  8699  001FC6  C036  F03E         	movff	___fldiv@b,??___fldiv
  8700  001FCA  C037  F03F         	movff	___fldiv@b+1,??___fldiv+1
  8701  001FCE  C038  F040         	movff	___fldiv@b+2,??___fldiv+2
  8702  001FD2  C039  F041         	movff	___fldiv@b+3,??___fldiv+3
  8703  001FD6  3441               	rlcf	??___fldiv+3,w,c
  8704  001FD8  3241               	rrcf	??___fldiv+3,f,c
  8705  001FDA  3240               	rrcf	??___fldiv+2,f,c
  8706  001FDC  323F               	rrcf	??___fldiv+1,f,c
  8707  001FDE  323E               	rrcf	??___fldiv,f,c
  8708  001FE0  C03E  F036         	movff	??___fldiv,___fldiv@b
  8709  001FE4  C03F  F037         	movff	??___fldiv+1,___fldiv@b+1
  8710  001FE8  C040  F038         	movff	??___fldiv+2,___fldiv@b+2
  8711  001FEC  C041  F039         	movff	??___fldiv+3,___fldiv@b+3
  8712                           
  8713                           ; BSR set to: 0
  8714  001FF0  0100               	movlb	0	; () banked
  8715  001FF2  4B65               	infsnz	___fldiv@new_exp& (0+255),f,b
  8716  001FF4  2B66               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  8717  001FF6                     l4446:
  8718                           
  8719                           ; BSR set to: 0
  8720  001FF6  0100               	movlb	0	; () banked
  8721  001FF8  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  8722  001FFA  D013               	goto	l4450
  8723  001FFC  0100               	movlb	0	; () banked
  8724  001FFE  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  8725  002000  E104               	bnz	u4970
  8726  002002  0100               	movlb	0	; () banked
  8727  002004  2965               	incf	___fldiv@new_exp& (0+255),w,b
  8728  002006  A0D8               	btfss	status,0,c
  8729  002008  D00C               	goto	l4450
  8730  00200A                     u4970:
  8731                           
  8732                           ; BSR set to: 0
  8733  00200A  0E00               	movlw	0
  8734  00200C  0100               	movlb	0	; () banked
  8735  00200E  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
  8736  002010  6965               	setf	___fldiv@new_exp& (0+255),b
  8737  002012  0E00               	movlw	0
  8738  002014  6E36               	movwf	___fldiv@b,c
  8739  002016  0E00               	movlw	0
  8740  002018  6E37               	movwf	___fldiv@b+1,c
  8741  00201A  0E00               	movlw	0
  8742  00201C  6E38               	movwf	___fldiv@b+2,c
  8743  00201E  0E00               	movlw	0
  8744  002020  6E39               	movwf	___fldiv@b+3,c
  8745  002022                     l4450:
  8746                           
  8747                           ; BSR set to: 0
  8748  002022  0100               	movlb	0	; () banked
  8749  002024  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  8750  002026  D007               	goto	l4452
  8751  002028  0100               	movlb	0	; () banked
  8752  00202A  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  8753  00202C  E114               	bnz	l4454
  8754  00202E  0100               	movlb	0	; () banked
  8755  002030  0565               	decf	___fldiv@new_exp& (0+255),w,b
  8756  002032  B0D8               	btfsc	status,0,c
  8757  002034  D010               	goto	l4454
  8758  002036                     l4452:
  8759                           
  8760                           ; BSR set to: 0
  8761  002036  0E00               	movlw	0
  8762  002038  0100               	movlb	0	; () banked
  8763  00203A  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
  8764  00203C  0E00               	movlw	0
  8765  00203E  6F65               	movwf	___fldiv@new_exp& (0+255),b
  8766  002040  0E00               	movlw	0
  8767  002042  6E36               	movwf	___fldiv@b,c
  8768  002044  0E00               	movlw	0
  8769  002046  6E37               	movwf	___fldiv@b+1,c
  8770  002048  0E00               	movlw	0
  8771  00204A  6E38               	movwf	___fldiv@b+2,c
  8772  00204C  0E00               	movlw	0
  8773  00204E  6E39               	movwf	___fldiv@b+3,c
  8774  002050  0E00               	movlw	0
  8775  002052  0100               	movlb	0	; () banked
  8776  002054  6F60               	movwf	___fldiv@sign& (0+255),b
  8777  002056                     l4454:
  8778                           
  8779                           ; BSR set to: 0
  8780  002056  C065  F06B         	movff	___fldiv@new_exp,___fldiv@bexp
  8781                           
  8782                           ; BSR set to: 0
  8783  00205A  0100               	movlb	0	; () banked
  8784  00205C  A16B               	btfss	___fldiv@bexp& (0+255),0,b
  8785  00205E  D002               	goto	l4460
  8786                           
  8787                           ; BSR set to: 0
  8788  002060  8E38               	bsf	___fldiv@b+2,7,c
  8789  002062  D001               	goto	l4462
  8790  002064                     l4460:
  8791                           
  8792                           ; BSR set to: 0
  8793  002064  9E38               	bcf	___fldiv@b+2,7,c
  8794  002066                     l4462:
  8795                           
  8796                           ; BSR set to: 0
  8797  002066  0100               	movlb	0	; () banked
  8798  002068  90D8               	bcf	status,0,c
  8799  00206A  316B               	rrcf	___fldiv@bexp& (0+255),w,b
  8800  00206C  6E39               	movwf	___fldiv@b+3,c
  8801                           
  8802                           ; BSR set to: 0
  8803  00206E  0100               	movlb	0	; () banked
  8804  002070  5160               	movf	___fldiv@sign& (0+255),w,b
  8805  002072  1239               	iorwf	___fldiv@b+3,f,c
  8806                           
  8807                           ; BSR set to: 0
  8808  002074  C036  F036         	movff	___fldiv@b,?___fldiv
  8809  002078  C037  F037         	movff	___fldiv@b+1,?___fldiv+1
  8810  00207C  C038  F038         	movff	___fldiv@b+2,?___fldiv+2
  8811  002080  C039  F039         	movff	___fldiv@b+3,?___fldiv+3
  8812  002084  0012               	return	
  8813  002086                     __end_of___fldiv:
  8814                           	opt stack 0
  8815                           tblptru	equ	0xFF8
  8816                           tblptrh	equ	0xFF7
  8817                           tblptrl	equ	0xFF6
  8818                           tablat	equ	0xFF5
  8819                           prodh	equ	0xFF4
  8820                           prodl	equ	0xFF3
  8821                           intcon	equ	0xFF2
  8822                           postinc0	equ	0xFEE
  8823                           wreg	equ	0xFE8
  8824                           indf1	equ	0xFE7
  8825                           plusw1	equ	0xFE3
  8826                           fsr1h	equ	0xFE2
  8827                           fsr1l	equ	0xFE1
  8828                           indf2	equ	0xFDF
  8829                           postinc2	equ	0xFDE
  8830                           postdec2	equ	0xFDD
  8831                           plusw2	equ	0xFDB
  8832                           fsr2h	equ	0xFDA
  8833                           fsr2l	equ	0xFD9
  8834                           status	equ	0xFD8
  8835                           
  8836 ;; *************** function _LCD_write_string *****************
  8837 ;; Defined at:
  8838 ;;		line 194 in file "../../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  8839 ;; Parameters:    Size  Location     Type
  8840 ;;  buffer          2   31[COMRAM] PTR unsigned char 
  8841 ;;		 -> str(8), LCD_write_integer@convertedInt(6), 
  8842 ;; Auto vars:     Size  Location     Type
  8843 ;;		None
  8844 ;; Return value:  Size  Location     Type
  8845 ;;		None               void
  8846 ;; Registers used:
  8847 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8848 ;; Tracked objects:
  8849 ;;		On entry : 0/0
  8850 ;;		On exit  : 0/0
  8851 ;;		Unchanged: 0/0
  8852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8853 ;;      Params:         2       0       0       0       0       0       0       0       0
  8854 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8855 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8856 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8857 ;;Total ram usage:        2 bytes
  8858 ;; Hardware stack levels used:    1
  8859 ;; Hardware stack levels required when called:    6
  8860 ;; This function calls:
  8861 ;;		_LCD_write_char
  8862 ;; This function is called by:
  8863 ;;		_LCD_write_integer
  8864 ;;		_scarica
  8865 ;;		_ricarica
  8866 ;; This function uses a non-reentrant model
  8867 ;;
  8868                           
  8869                           	psect	text28
  8870  0039BC                     __ptext28:
  8871                           	opt stack 0
  8872  0039BC                     _LCD_write_string:
  8873                           	opt stack 23
  8874                           
  8875                           ;src\LCD_44780.c: 197: while(*buffer){
  8876                           
  8877                           ; BSR set to: 0
  8878                           ;incstack = 0
  8879  0039BC  D009               	goto	l3092
  8880  0039BE                     l3088:
  8881                           
  8882                           ;src\LCD_44780.c: 200: LCD_write_char(*buffer);
  8883  0039BE  C020  FFD9         	movff	LCD_write_string@buffer,fsr2l
  8884  0039C2  C021  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
  8885  0039C6  50DF               	movf	indf2,w,c
  8886  0039C8  ECC5  F01A         	call	_LCD_write_char
  8887                           
  8888                           ;src\LCD_44780.c: 202: buffer++;
  8889  0039CC  4A20               	infsnz	LCD_write_string@buffer,f,c
  8890  0039CE  2A21               	incf	LCD_write_string@buffer+1,f,c
  8891  0039D0                     l3092:
  8892  0039D0  C020  FFD9         	movff	LCD_write_string@buffer,fsr2l
  8893  0039D4  C021  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
  8894  0039D8  50DF               	movf	indf2,w,c
  8895  0039DA  B4D8               	btfsc	status,2,c
  8896  0039DC  0012               	return	
  8897  0039DE  D7EF               	goto	l3088
  8898  0039E0                     __end_of_LCD_write_string:
  8899                           	opt stack 0
  8900                           tblptru	equ	0xFF8
  8901                           tblptrh	equ	0xFF7
  8902                           tblptrl	equ	0xFF6
  8903                           tablat	equ	0xFF5
  8904                           prodh	equ	0xFF4
  8905                           prodl	equ	0xFF3
  8906                           intcon	equ	0xFF2
  8907                           postinc0	equ	0xFEE
  8908                           wreg	equ	0xFE8
  8909                           indf1	equ	0xFE7
  8910                           plusw1	equ	0xFE3
  8911                           fsr1h	equ	0xFE2
  8912                           fsr1l	equ	0xFE1
  8913                           indf2	equ	0xFDF
  8914                           postinc2	equ	0xFDE
  8915                           postdec2	equ	0xFDD
  8916                           plusw2	equ	0xFDB
  8917                           fsr2h	equ	0xFDA
  8918                           fsr2l	equ	0xFD9
  8919                           status	equ	0xFD8
  8920                           
  8921 ;; *************** function _LCD_goto_line *****************
  8922 ;; Defined at:
  8923 ;;		line 111 in file "../../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  8924 ;; Parameters:    Size  Location     Type
  8925 ;;  line            1    wreg     unsigned char 
  8926 ;; Auto vars:     Size  Location     Type
  8927 ;;  line            1   26[COMRAM] unsigned char 
  8928 ;; Return value:  Size  Location     Type
  8929 ;;		None               void
  8930 ;; Registers used:
  8931 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8932 ;; Tracked objects:
  8933 ;;		On entry : 0/0
  8934 ;;		On exit  : 0/0
  8935 ;;		Unchanged: 0/0
  8936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8937 ;;      Params:         0       0       0       0       0       0       0       0       0
  8938 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8939 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8940 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8941 ;;Total ram usage:        1 bytes
  8942 ;; Hardware stack levels used:    1
  8943 ;; Hardware stack levels required when called:    5
  8944 ;; This function calls:
  8945 ;;		_LCD_send_command
  8946 ;; This function is called by:
  8947 ;;		_scarica
  8948 ;;		_ricarica
  8949 ;;		_LCD_goto_xy
  8950 ;; This function uses a non-reentrant model
  8951 ;;
  8952                           
  8953                           	psect	text29
  8954  0032B8                     __ptext29:
  8955                           	opt stack 0
  8956  0032B8                     _LCD_goto_line:
  8957                           	opt stack 24
  8958                           
  8959                           ;incstack = 0
  8960                           ;LCD_goto_line@line stored from wreg
  8961  0032B8  6E1B               	movwf	LCD_goto_line@line,c
  8962                           
  8963                           ;src\LCD_44780.c: 113: switch(line) {
  8964  0032BA  D04C               	goto	l3604
  8965  0032BC                     l3596:
  8966  0032BC  0E00               	movlw	0
  8967  0032BE  6E17               	movwf	LCD_send_command@D2,c
  8968  0032C0  0E00               	movlw	0
  8969  0032C2  6E18               	movwf	LCD_send_command@D1,c
  8970  0032C4  0E00               	movlw	0
  8971  0032C6  6E19               	movwf	LCD_send_command@D0,c
  8972  0032C8  0E01               	movlw	1
  8973  0032CA  EC60  F01C         	call	_LCD_send_command
  8974                           
  8975                           ;src\LCD_44780.c: 116: LCD_send_command(0,0,0,0);
  8976  0032CE  0E00               	movlw	0
  8977  0032D0  6E17               	movwf	LCD_send_command@D2,c
  8978  0032D2  0E00               	movlw	0
  8979  0032D4  6E18               	movwf	LCD_send_command@D1,c
  8980  0032D6  0E00               	movlw	0
  8981  0032D8  6E19               	movwf	LCD_send_command@D0,c
  8982  0032DA  0E00               	movlw	0
  8983  0032DC  EC60  F01C         	call	_LCD_send_command
  8984                           
  8985                           ;src\LCD_44780.c: 117: break;
  8986  0032E0  0012               	return	
  8987  0032E2                     l3598:
  8988  0032E2  0E01               	movlw	1
  8989  0032E4  6E17               	movwf	LCD_send_command@D2,c
  8990  0032E6  0E00               	movlw	0
  8991  0032E8  6E18               	movwf	LCD_send_command@D1,c
  8992  0032EA  0E00               	movlw	0
  8993  0032EC  6E19               	movwf	LCD_send_command@D0,c
  8994  0032EE  0E01               	movlw	1
  8995  0032F0  EC60  F01C         	call	_LCD_send_command
  8996                           
  8997                           ;src\LCD_44780.c: 120: LCD_send_command(0,0,0,0);
  8998  0032F4  0E00               	movlw	0
  8999  0032F6  6E17               	movwf	LCD_send_command@D2,c
  9000  0032F8  0E00               	movlw	0
  9001  0032FA  6E18               	movwf	LCD_send_command@D1,c
  9002  0032FC  0E00               	movlw	0
  9003  0032FE  6E19               	movwf	LCD_send_command@D0,c
  9004  003300  0E00               	movlw	0
  9005  003302  EC60  F01C         	call	_LCD_send_command
  9006                           
  9007                           ;src\LCD_44780.c: 121: break;
  9008  003306  0012               	return	
  9009  003308                     l3600:
  9010  003308  0E00               	movlw	0
  9011  00330A  6E17               	movwf	LCD_send_command@D2,c
  9012  00330C  0E00               	movlw	0
  9013  00330E  6E18               	movwf	LCD_send_command@D1,c
  9014  003310  0E01               	movlw	1
  9015  003312  6E19               	movwf	LCD_send_command@D0,c
  9016  003314  0E01               	movlw	1
  9017  003316  EC60  F01C         	call	_LCD_send_command
  9018                           
  9019                           ;src\LCD_44780.c: 124: LCD_send_command(0,1,0,0);
  9020  00331A  0E01               	movlw	1
  9021  00331C  6E17               	movwf	LCD_send_command@D2,c
  9022  00331E  0E00               	movlw	0
  9023  003320  6E18               	movwf	LCD_send_command@D1,c
  9024  003322  0E00               	movlw	0
  9025  003324  6E19               	movwf	LCD_send_command@D0,c
  9026  003326  0E00               	movlw	0
  9027  003328  EC60  F01C         	call	_LCD_send_command
  9028                           
  9029                           ;src\LCD_44780.c: 125: break;
  9030  00332C  0012               	return	
  9031  00332E                     l3602:
  9032  00332E  0E01               	movlw	1
  9033  003330  6E17               	movwf	LCD_send_command@D2,c
  9034  003332  0E00               	movlw	0
  9035  003334  6E18               	movwf	LCD_send_command@D1,c
  9036  003336  0E01               	movlw	1
  9037  003338  6E19               	movwf	LCD_send_command@D0,c
  9038  00333A  0E01               	movlw	1
  9039  00333C  EC60  F01C         	call	_LCD_send_command
  9040                           
  9041                           ;src\LCD_44780.c: 128: LCD_send_command(0,1,0,0);
  9042  003340  0E01               	movlw	1
  9043  003342  6E17               	movwf	LCD_send_command@D2,c
  9044  003344  0E00               	movlw	0
  9045  003346  6E18               	movwf	LCD_send_command@D1,c
  9046  003348  0E00               	movlw	0
  9047  00334A  6E19               	movwf	LCD_send_command@D0,c
  9048  00334C  0E00               	movlw	0
  9049  00334E  EC60  F01C         	call	_LCD_send_command
  9050                           
  9051                           ;src\LCD_44780.c: 129: }
  9052  003352  0012               	return	
  9053  003354                     l3604:
  9054  003354  501B               	movf	LCD_goto_line@line,w,c
  9055                           
  9056                           ; Switch size 1, requested type "space"
  9057                           ; Number of cases is 4, Range of values is 1 to 4
  9058                           ; switch strategies available:
  9059                           ; Name         Instructions Cycles
  9060                           ; simple_byte           13     7 (average)
  9061                           ;	Chosen strategy is simple_byte
  9062  003356  0A01               	xorlw	1	; case 1
  9063  003358  B4D8               	btfsc	status,2,c
  9064  00335A  D7B0               	goto	l3596
  9065  00335C  0A03               	xorlw	3	; case 2
  9066  00335E  B4D8               	btfsc	status,2,c
  9067  003360  D7C0               	goto	l3598
  9068  003362  0A01               	xorlw	1	; case 3
  9069  003364  B4D8               	btfsc	status,2,c
  9070  003366  D7D0               	goto	l3600
  9071  003368  0A07               	xorlw	7	; case 4
  9072  00336A  A4D8               	btfss	status,2,c
  9073  00336C  0012               	return	
  9074  00336E  D7DF               	goto	l3602
  9075  003370                     __end_of_LCD_goto_line:
  9076                           	opt stack 0
  9077                           tblptru	equ	0xFF8
  9078                           tblptrh	equ	0xFF7
  9079                           tblptrl	equ	0xFF6
  9080                           tablat	equ	0xFF5
  9081                           prodh	equ	0xFF4
  9082                           prodl	equ	0xFF3
  9083                           intcon	equ	0xFF2
  9084                           postinc0	equ	0xFEE
  9085                           wreg	equ	0xFE8
  9086                           indf1	equ	0xFE7
  9087                           plusw1	equ	0xFE3
  9088                           fsr1h	equ	0xFE2
  9089                           fsr1l	equ	0xFE1
  9090                           indf2	equ	0xFDF
  9091                           postinc2	equ	0xFDE
  9092                           postdec2	equ	0xFDD
  9093                           plusw2	equ	0xFDB
  9094                           fsr2h	equ	0xFDA
  9095                           fsr2l	equ	0xFD9
  9096                           status	equ	0xFD8
  9097                           
  9098 ;; *************** function _inizializzazione *****************
  9099 ;; Defined at:
  9100 ;;		line 173 in file "tester.c"
  9101 ;; Parameters:    Size  Location     Type
  9102 ;;		None
  9103 ;; Auto vars:     Size  Location     Type
  9104 ;;		None
  9105 ;; Return value:  Size  Location     Type
  9106 ;;		None               void
  9107 ;; Registers used:
  9108 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9109 ;; Tracked objects:
  9110 ;;		On entry : 0/0
  9111 ;;		On exit  : 0/0
  9112 ;;		Unchanged: 0/0
  9113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9114 ;;      Params:         0       0       0       0       0       0       0       0       0
  9115 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9116 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9117 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9118 ;;Total ram usage:        0 bytes
  9119 ;; Hardware stack levels used:    1
  9120 ;; Hardware stack levels required when called:    7
  9121 ;; This function calls:
  9122 ;;		_LCD_clear
  9123 ;;		_LCD_initialize
  9124 ;;		_LCD_write_message
  9125 ;;		_delay_ms
  9126 ;; This function is called by:
  9127 ;;		_main
  9128 ;; This function uses a non-reentrant model
  9129 ;;
  9130                           
  9131                           	psect	text30
  9132  003660                     __ptext30:
  9133                           	opt stack 0
  9134  003660                     _inizializzazione:
  9135                           	opt stack 23
  9136                           
  9137                           ;tester.c: 174: LATA = 0x00;
  9138                           
  9139                           ;incstack = 0
  9140  003660  0E00               	movlw	0
  9141  003662  6E89               	movwf	3977,c	;volatile
  9142                           
  9143                           ;tester.c: 175: TRISA = 0b11111011;
  9144  003664  0EFB               	movlw	251
  9145  003666  6E92               	movwf	3986,c	;volatile
  9146                           
  9147                           ;tester.c: 177: LATB = 0x00;
  9148  003668  0E00               	movlw	0
  9149  00366A  6E8A               	movwf	3978,c	;volatile
  9150                           
  9151                           ;tester.c: 178: TRISB = 0b00;
  9152  00366C  0E00               	movlw	0
  9153  00366E  6E93               	movwf	3987,c	;volatile
  9154                           
  9155                           ;tester.c: 180: LATC = 0x00;
  9156  003670  0E00               	movlw	0
  9157  003672  6E8B               	movwf	3979,c	;volatile
  9158                           
  9159                           ;tester.c: 181: TRISC = 0b11111111;
  9160  003674  6894               	setf	3988,c	;volatile
  9161                           
  9162                           ;tester.c: 183: LCD_initialize(16);
  9163  003676  0E10               	movlw	16
  9164  003678  ECEE  F017         	call	_LCD_initialize
  9165                           
  9166                           ;tester.c: 184: LCD_write_message("ciaone");
  9167  00367C  0EE3               	movlw	low STR_14
  9168  00367E  6E20               	movwf	LCD_write_message@buffer,c
  9169  003680  0E08               	movlw	high STR_14
  9170  003682  6E21               	movwf	LCD_write_message@buffer+1,c
  9171  003684  EC8F  F01C         	call	_LCD_write_message	;wreg free
  9172                           
  9173                           ;tester.c: 185: delay_ms(1000);
  9174  003688  0E03               	movlw	3
  9175  00368A  6E16               	movwf	delay_ms@value_ms+1,c
  9176  00368C  0EE8               	movlw	232
  9177  00368E  6E15               	movwf	delay_ms@value_ms,c
  9178  003690  EC47  F01C         	call	_delay_ms	;wreg free
  9179                           
  9180                           ;tester.c: 186: LCD_clear();
  9181  003694  ECB8  F01C         	call	_LCD_clear	;wreg free
  9182                           
  9183                           ;tester.c: 188: ADCON0 = 0b00000000;
  9184  003698  0E00               	movlw	0
  9185  00369A  6EC2               	movwf	4034,c	;volatile
  9186                           
  9187                           ;tester.c: 189: ADCON1 = 0b00001011;
  9188  00369C  0E0B               	movlw	11
  9189  00369E  6EC1               	movwf	4033,c	;volatile
  9190                           
  9191                           ;tester.c: 190: ADCON2 = 0b10110010;
  9192  0036A0  0EB2               	movlw	178
  9193  0036A2  6EC0               	movwf	4032,c	;volatile
  9194                           
  9195                           ;tester.c: 191: ADCON0bits.CHS3 = 0;
  9196  0036A4  9AC2               	bcf	4034,5,c	;volatile
  9197                           
  9198                           ;tester.c: 192: ADCON0bits.CHS2 = 0;
  9199  0036A6  98C2               	bcf	4034,4,c	;volatile
  9200                           
  9201                           ;tester.c: 193: ADCON0bits.CHS1 = 0;
  9202  0036A8  96C2               	bcf	4034,3,c	;volatile
  9203                           
  9204                           ;tester.c: 194: T0CON = 0x85;
  9205  0036AA  0E85               	movlw	133
  9206  0036AC  6ED5               	movwf	4053,c	;volatile
  9207                           
  9208                           ;tester.c: 195: TMR0H = 0x0B;
  9209  0036AE  0E0B               	movlw	11
  9210  0036B0  6ED7               	movwf	4055,c	;volatile
  9211                           
  9212                           ;tester.c: 196: TMR0L = 0xDC;
  9213  0036B2  0EDC               	movlw	220
  9214  0036B4  6ED6               	movwf	4054,c	;volatile
  9215                           
  9216                           ;tester.c: 197: INTCONbits.GIE = 1;
  9217  0036B6  8EF2               	bsf	intcon,7,c	;volatile
  9218                           
  9219                           ;tester.c: 198: INTCONbits.TMR0IF = 0;
  9220  0036B8  94F2               	bcf	intcon,2,c	;volatile
  9221                           
  9222                           ;tester.c: 199: INTCONbits.TMR0IE = 1;
  9223  0036BA  8AF2               	bsf	intcon,5,c	;volatile
  9224  0036BC  0012               	return		;funcret
  9225  0036BE                     __end_of_inizializzazione:
  9226                           	opt stack 0
  9227                           tblptru	equ	0xFF8
  9228                           tblptrh	equ	0xFF7
  9229                           tblptrl	equ	0xFF6
  9230                           tablat	equ	0xFF5
  9231                           prodh	equ	0xFF4
  9232                           prodl	equ	0xFF3
  9233                           intcon	equ	0xFF2
  9234                           postinc0	equ	0xFEE
  9235                           wreg	equ	0xFE8
  9236                           indf1	equ	0xFE7
  9237                           plusw1	equ	0xFE3
  9238                           fsr1h	equ	0xFE2
  9239                           fsr1l	equ	0xFE1
  9240                           indf2	equ	0xFDF
  9241                           postinc2	equ	0xFDE
  9242                           postdec2	equ	0xFDD
  9243                           plusw2	equ	0xFDB
  9244                           fsr2h	equ	0xFDA
  9245                           fsr2l	equ	0xFD9
  9246                           status	equ	0xFD8
  9247                           
  9248 ;; *************** function _LCD_write_message *****************
  9249 ;; Defined at:
  9250 ;;		line 178 in file "../../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  9251 ;; Parameters:    Size  Location     Type
  9252 ;;  buffer          2   31[COMRAM] PTR const unsigned char 
  9253 ;;		 -> STR_14(7), STR_13(17), STR_10(17), STR_9(3), 
  9254 ;;		 -> STR_7(11), STR_6(17), STR_3(2), STR_2(2), 
  9255 ;;		 -> STR_1(12), 
  9256 ;; Auto vars:     Size  Location     Type
  9257 ;;		None
  9258 ;; Return value:  Size  Location     Type
  9259 ;;		None               void
  9260 ;; Registers used:
  9261 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9262 ;; Tracked objects:
  9263 ;;		On entry : 0/0
  9264 ;;		On exit  : 0/0
  9265 ;;		Unchanged: 0/0
  9266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9267 ;;      Params:         2       0       0       0       0       0       0       0       0
  9268 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9269 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9270 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9271 ;;Total ram usage:        2 bytes
  9272 ;; Hardware stack levels used:    1
  9273 ;; Hardware stack levels required when called:    6
  9274 ;; This function calls:
  9275 ;;		_LCD_write_char
  9276 ;; This function is called by:
  9277 ;;		_scarica
  9278 ;;		_ricarica
  9279 ;;		_inizializzazione
  9280 ;; This function uses a non-reentrant model
  9281 ;;
  9282                           
  9283                           	psect	text31
  9284  00391E                     __ptext31:
  9285                           	opt stack 0
  9286  00391E                     _LCD_write_message:
  9287                           	opt stack 23
  9288                           
  9289                           ;src\LCD_44780.c: 181: while(*buffer) {
  9290                           
  9291                           ;incstack = 0
  9292  00391E  D00A               	goto	l3612
  9293  003920                     l3608:
  9294                           
  9295                           ;src\LCD_44780.c: 184: LCD_write_char(*buffer);
  9296  003920  C020  FFF6         	movff	LCD_write_message@buffer,tblptrl
  9297  003924  C021  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
  9298  003928                     	if	0	;tblptru may be non-zero
  9299  003928                     	endif
  9300  003928                     	if	0	;tblptru may be non-zero
  9301  003928                     	endif
  9302  003928  0008               	tblrd		*
  9303  00392A  50F5               	movf	tablat,w,c
  9304  00392C  ECC5  F01A         	call	_LCD_write_char
  9305                           
  9306                           ;src\LCD_44780.c: 186: buffer++;
  9307  003930  4A20               	infsnz	LCD_write_message@buffer,f,c
  9308  003932  2A21               	incf	LCD_write_message@buffer+1,f,c
  9309  003934                     l3612:
  9310  003934  C020  FFF6         	movff	LCD_write_message@buffer,tblptrl
  9311  003938  C021  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
  9312  00393C                     	if	0	;tblptru may be non-zero
  9313  00393C                     	endif
  9314  00393C                     	if	0	;tblptru may be non-zero
  9315  00393C                     	endif
  9316  00393C  0008               	tblrd		*
  9317  00393E  50F5               	movf	tablat,w,c
  9318  003940  0900               	iorlw	0
  9319  003942  B4D8               	btfsc	status,2,c
  9320  003944  0012               	return	
  9321  003946  D7EC               	goto	l3608
  9322  003948                     __end_of_LCD_write_message:
  9323                           	opt stack 0
  9324                           tblptru	equ	0xFF8
  9325                           tblptrh	equ	0xFF7
  9326                           tblptrl	equ	0xFF6
  9327                           tablat	equ	0xFF5
  9328                           prodh	equ	0xFF4
  9329                           prodl	equ	0xFF3
  9330                           intcon	equ	0xFF2
  9331                           postinc0	equ	0xFEE
  9332                           wreg	equ	0xFE8
  9333                           indf1	equ	0xFE7
  9334                           plusw1	equ	0xFE3
  9335                           fsr1h	equ	0xFE2
  9336                           fsr1l	equ	0xFE1
  9337                           indf2	equ	0xFDF
  9338                           postinc2	equ	0xFDE
  9339                           postdec2	equ	0xFDD
  9340                           plusw2	equ	0xFDB
  9341                           fsr2h	equ	0xFDA
  9342                           fsr2l	equ	0xFD9
  9343                           status	equ	0xFD8
  9344                           
  9345 ;; *************** function _LCD_write_char *****************
  9346 ;; Defined at:
  9347 ;;		line 145 in file "../../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  9348 ;; Parameters:    Size  Location     Type
  9349 ;;  value           1    wreg     unsigned char 
  9350 ;; Auto vars:     Size  Location     Type
  9351 ;;  value           1   30[COMRAM] unsigned char 
  9352 ;;  D0              1   29[COMRAM] unsigned char 
  9353 ;;  D1              1   28[COMRAM] unsigned char 
  9354 ;;  D2              1   27[COMRAM] unsigned char 
  9355 ;;  D3              1   26[COMRAM] unsigned char 
  9356 ;; Return value:  Size  Location     Type
  9357 ;;		None               void
  9358 ;; Registers used:
  9359 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9360 ;; Tracked objects:
  9361 ;;		On entry : 0/0
  9362 ;;		On exit  : 0/0
  9363 ;;		Unchanged: 0/0
  9364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9365 ;;      Params:         0       0       0       0       0       0       0       0       0
  9366 ;;      Locals:         5       0       0       0       0       0       0       0       0
  9367 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9368 ;;      Totals:         5       0       0       0       0       0       0       0       0
  9369 ;;Total ram usage:        5 bytes
  9370 ;; Hardware stack levels used:    1
  9371 ;; Hardware stack levels required when called:    5
  9372 ;; This function calls:
  9373 ;;		_LCD_send_command
  9374 ;; This function is called by:
  9375 ;;		_LCD_write_message
  9376 ;;		_LCD_write_string
  9377 ;; This function uses a non-reentrant model
  9378 ;;
  9379                           
  9380                           	psect	text32
  9381  00358A                     __ptext32:
  9382                           	opt stack 0
  9383  00358A                     _LCD_write_char:
  9384                           	opt stack 23
  9385                           
  9386                           ;incstack = 0
  9387                           ;LCD_write_char@value stored from wreg
  9388  00358A  6E1F               	movwf	LCD_write_char@value,c
  9389                           
  9390                           ;src\LCD_44780.c: 147: unsigned char D3,D2,D1,D0;
  9391                           ;src\LCD_44780.c: 149: LATBbits.LATB1 = 1;
  9392  00358C  828A               	bsf	3978,1,c	;volatile
  9393                           
  9394                           ;src\LCD_44780.c: 152: D3 = (value & 0b10000000) >> 7;
  9395  00358E  441F               	rlncf	LCD_write_char@value,w,c
  9396  003590  0B01               	andlw	1
  9397  003592  6E1B               	movwf	LCD_write_char@D3,c
  9398                           
  9399                           ;src\LCD_44780.c: 153: D2 = (value & 0b01000000) >> 6;
  9400  003594  441F               	rlncf	LCD_write_char@value,w,c
  9401  003596  46E8               	rlncf	wreg,f,c
  9402  003598  0B03               	andlw	3
  9403  00359A  0B01               	andlw	1
  9404  00359C  6E1C               	movwf	LCD_write_char@D2,c
  9405                           
  9406                           ;src\LCD_44780.c: 154: D1 = (value & 0b00100000) >> 5;
  9407  00359E  381F               	swapf	LCD_write_char@value,w,c
  9408  0035A0  42E8               	rrncf	wreg,f,c
  9409  0035A2  0B07               	andlw	7
  9410  0035A4  0B01               	andlw	1
  9411  0035A6  6E1D               	movwf	LCD_write_char@D1,c
  9412                           
  9413                           ;src\LCD_44780.c: 155: D0 = (value & 0b00010000) >> 4;
  9414  0035A8  381F               	swapf	LCD_write_char@value,w,c
  9415  0035AA  0B0F               	andlw	15
  9416  0035AC  0B01               	andlw	1
  9417  0035AE  6E1E               	movwf	LCD_write_char@D0,c
  9418                           
  9419                           ;src\LCD_44780.c: 157: LCD_send_command (D3,D2,D1,D0);
  9420  0035B0  C01C  F017         	movff	LCD_write_char@D2,LCD_send_command@D2
  9421  0035B4  C01D  F018         	movff	LCD_write_char@D1,LCD_send_command@D1
  9422  0035B8  C01E  F019         	movff	LCD_write_char@D0,LCD_send_command@D0
  9423  0035BC  501B               	movf	LCD_write_char@D3,w,c
  9424  0035BE  EC60  F01C         	call	_LCD_send_command
  9425                           
  9426                           ;src\LCD_44780.c: 160: D3 = (value & 0b00001000) >> 3;
  9427  0035C2  381F               	swapf	LCD_write_char@value,w,c
  9428  0035C4  46E8               	rlncf	wreg,f,c
  9429  0035C6  0B1F               	andlw	31
  9430  0035C8  0B01               	andlw	1
  9431  0035CA  6E1B               	movwf	LCD_write_char@D3,c
  9432                           
  9433                           ;src\LCD_44780.c: 161: D2 = (value & 0b00000100) >> 2;
  9434  0035CC  401F               	rrncf	LCD_write_char@value,w,c
  9435  0035CE  42E8               	rrncf	wreg,f,c
  9436  0035D0  0B3F               	andlw	63
  9437  0035D2  0B01               	andlw	1
  9438  0035D4  6E1C               	movwf	LCD_write_char@D2,c
  9439                           
  9440                           ;src\LCD_44780.c: 162: D1 = (value & 0b00000010) >> 1;
  9441  0035D6  90D8               	bcf	status,0,c
  9442  0035D8  301F               	rrcf	LCD_write_char@value,w,c
  9443  0035DA  0B01               	andlw	1
  9444  0035DC  6E1D               	movwf	LCD_write_char@D1,c
  9445                           
  9446                           ;src\LCD_44780.c: 163: D0 = (value & 0b00000001);
  9447  0035DE  501F               	movf	LCD_write_char@value,w,c
  9448  0035E0  0B01               	andlw	1
  9449  0035E2  6E1E               	movwf	LCD_write_char@D0,c
  9450                           
  9451                           ;src\LCD_44780.c: 165: LCD_send_command (D3,D2,D1,D0);
  9452  0035E4  C01C  F017         	movff	LCD_write_char@D2,LCD_send_command@D2
  9453  0035E8  C01D  F018         	movff	LCD_write_char@D1,LCD_send_command@D1
  9454  0035EC  C01E  F019         	movff	LCD_write_char@D0,LCD_send_command@D0
  9455  0035F0  501B               	movf	LCD_write_char@D3,w,c
  9456  0035F2  EC60  F01C         	call	_LCD_send_command
  9457                           
  9458                           ;src\LCD_44780.c: 167: LATBbits.LATB1 = 0;
  9459  0035F6  928A               	bcf	3978,1,c	;volatile
  9460  0035F8  0012               	return		;funcret
  9461  0035FA                     __end_of_LCD_write_char:
  9462                           	opt stack 0
  9463                           tblptru	equ	0xFF8
  9464                           tblptrh	equ	0xFF7
  9465                           tblptrl	equ	0xFF6
  9466                           tablat	equ	0xFF5
  9467                           prodh	equ	0xFF4
  9468                           prodl	equ	0xFF3
  9469                           intcon	equ	0xFF2
  9470                           postinc0	equ	0xFEE
  9471                           wreg	equ	0xFE8
  9472                           indf1	equ	0xFE7
  9473                           plusw1	equ	0xFE3
  9474                           fsr1h	equ	0xFE2
  9475                           fsr1l	equ	0xFE1
  9476                           indf2	equ	0xFDF
  9477                           postinc2	equ	0xFDE
  9478                           postdec2	equ	0xFDD
  9479                           plusw2	equ	0xFDB
  9480                           fsr2h	equ	0xFDA
  9481                           fsr2l	equ	0xFD9
  9482                           status	equ	0xFD8
  9483                           
  9484 ;; *************** function _LCD_initialize *****************
  9485 ;; Defined at:
  9486 ;;		line 283 in file "../../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  9487 ;; Parameters:    Size  Location     Type
  9488 ;;  quartz_frequ    1    wreg     unsigned char 
  9489 ;; Auto vars:     Size  Location     Type
  9490 ;;  quartz_frequ    1   28[COMRAM] unsigned char 
  9491 ;; Return value:  Size  Location     Type
  9492 ;;		None               void
  9493 ;; Registers used:
  9494 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9495 ;; Tracked objects:
  9496 ;;		On entry : 0/0
  9497 ;;		On exit  : 0/0
  9498 ;;		Unchanged: 0/0
  9499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9500 ;;      Params:         0       0       0       0       0       0       0       0       0
  9501 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9502 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9503 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9504 ;;Total ram usage:        1 bytes
  9505 ;; Hardware stack levels used:    1
  9506 ;; Hardware stack levels required when called:    6
  9507 ;; This function calls:
  9508 ;;		_LCD_clear
  9509 ;;		_LCD_cursor
  9510 ;;		_LCD_send_command
  9511 ;;		_delay_ms
  9512 ;;		_delay_set_quartz
  9513 ;; This function is called by:
  9514 ;;		_inizializzazione
  9515 ;; This function uses a non-reentrant model
  9516 ;;
  9517                           
  9518                           	psect	text33
  9519  002FDC                     __ptext33:
  9520                           	opt stack 0
  9521  002FDC                     _LCD_initialize:
  9522                           	opt stack 23
  9523                           
  9524                           ;incstack = 0
  9525                           ;LCD_initialize@quartz_frequency stored from wreg
  9526  002FDC  6E1D               	movwf	LCD_initialize@quartz_frequency,c
  9527                           
  9528                           ;src\LCD_44780.c: 285: delay_set_quartz (quartz_frequency);
  9529  002FDE  501D               	movf	LCD_initialize@quartz_frequency,w,c
  9530  002FE0  EC1E  F01D         	call	_delay_set_quartz
  9531                           
  9532                           ;src\LCD_44780.c: 287: LATBbits.LATB1 = 0x00;
  9533  002FE4  928A               	bcf	3978,1,c	;volatile
  9534                           
  9535                           ;src\LCD_44780.c: 288: LATBbits.LATB3 = 0x00;
  9536  002FE6  968A               	bcf	3978,3,c	;volatile
  9537                           
  9538                           ;src\LCD_44780.c: 289: LATBbits.LATB2 = 0x00;
  9539  002FE8  948A               	bcf	3978,2,c	;volatile
  9540                           
  9541                           ;src\LCD_44780.c: 291: delay_ms (100);
  9542  002FEA  0E00               	movlw	0
  9543  002FEC  6E16               	movwf	delay_ms@value_ms+1,c
  9544  002FEE  0E64               	movlw	100
  9545  002FF0  6E15               	movwf	delay_ms@value_ms,c
  9546  002FF2  EC47  F01C         	call	_delay_ms	;wreg free
  9547                           
  9548                           ;src\LCD_44780.c: 292: LCD_send_command (0,0,1,1);
  9549  002FF6  0E00               	movlw	0
  9550  002FF8  6E17               	movwf	LCD_send_command@D2,c
  9551  002FFA  0E01               	movlw	1
  9552  002FFC  6E18               	movwf	LCD_send_command@D1,c
  9553  002FFE  0E01               	movlw	1
  9554  003000  6E19               	movwf	LCD_send_command@D0,c
  9555  003002  0E00               	movlw	0
  9556  003004  EC60  F01C         	call	_LCD_send_command
  9557                           
  9558                           ;src\LCD_44780.c: 293: delay_ms (100);
  9559  003008  0E00               	movlw	0
  9560  00300A  6E16               	movwf	delay_ms@value_ms+1,c
  9561  00300C  0E64               	movlw	100
  9562  00300E  6E15               	movwf	delay_ms@value_ms,c
  9563  003010  EC47  F01C         	call	_delay_ms	;wreg free
  9564                           
  9565                           ;src\LCD_44780.c: 294: LCD_send_command (0,0,1,1);
  9566  003014  0E00               	movlw	0
  9567  003016  6E17               	movwf	LCD_send_command@D2,c
  9568  003018  0E01               	movlw	1
  9569  00301A  6E18               	movwf	LCD_send_command@D1,c
  9570  00301C  0E01               	movlw	1
  9571  00301E  6E19               	movwf	LCD_send_command@D0,c
  9572  003020  0E00               	movlw	0
  9573  003022  EC60  F01C         	call	_LCD_send_command
  9574                           
  9575                           ;src\LCD_44780.c: 295: delay_ms (10);
  9576  003026  0E00               	movlw	0
  9577  003028  6E16               	movwf	delay_ms@value_ms+1,c
  9578  00302A  0E0A               	movlw	10
  9579  00302C  6E15               	movwf	delay_ms@value_ms,c
  9580  00302E  EC47  F01C         	call	_delay_ms	;wreg free
  9581                           
  9582                           ;src\LCD_44780.c: 296: LCD_send_command (0,0,1,1);
  9583  003032  0E00               	movlw	0
  9584  003034  6E17               	movwf	LCD_send_command@D2,c
  9585  003036  0E01               	movlw	1
  9586  003038  6E18               	movwf	LCD_send_command@D1,c
  9587  00303A  0E01               	movlw	1
  9588  00303C  6E19               	movwf	LCD_send_command@D0,c
  9589  00303E  0E00               	movlw	0
  9590  003040  EC60  F01C         	call	_LCD_send_command
  9591                           
  9592                           ;src\LCD_44780.c: 298: LCD_send_command (0,0,1,0);
  9593  003044  0E00               	movlw	0
  9594  003046  6E17               	movwf	LCD_send_command@D2,c
  9595  003048  0E01               	movlw	1
  9596  00304A  6E18               	movwf	LCD_send_command@D1,c
  9597  00304C  0E00               	movlw	0
  9598  00304E  6E19               	movwf	LCD_send_command@D0,c
  9599  003050  0E00               	movlw	0
  9600  003052  EC60  F01C         	call	_LCD_send_command
  9601                           
  9602                           ;src\LCD_44780.c: 300: LCD_send_command (0,0,1,0);
  9603  003056  0E00               	movlw	0
  9604  003058  6E17               	movwf	LCD_send_command@D2,c
  9605  00305A  0E01               	movlw	1
  9606  00305C  6E18               	movwf	LCD_send_command@D1,c
  9607  00305E  0E00               	movlw	0
  9608  003060  6E19               	movwf	LCD_send_command@D0,c
  9609  003062  0E00               	movlw	0
  9610  003064  EC60  F01C         	call	_LCD_send_command
  9611                           
  9612                           ;src\LCD_44780.c: 301: LCD_send_command (1,0,0,0);
  9613  003068  0E00               	movlw	0
  9614  00306A  6E17               	movwf	LCD_send_command@D2,c
  9615  00306C  0E00               	movlw	0
  9616  00306E  6E18               	movwf	LCD_send_command@D1,c
  9617  003070  0E00               	movlw	0
  9618  003072  6E19               	movwf	LCD_send_command@D0,c
  9619  003074  0E01               	movlw	1
  9620  003076  EC60  F01C         	call	_LCD_send_command
  9621                           
  9622                           ;src\LCD_44780.c: 303: LCD_send_command (0,0,0,0);
  9623  00307A  0E00               	movlw	0
  9624  00307C  6E17               	movwf	LCD_send_command@D2,c
  9625  00307E  0E00               	movlw	0
  9626  003080  6E18               	movwf	LCD_send_command@D1,c
  9627  003082  0E00               	movlw	0
  9628  003084  6E19               	movwf	LCD_send_command@D0,c
  9629  003086  0E00               	movlw	0
  9630  003088  EC60  F01C         	call	_LCD_send_command
  9631                           
  9632                           ;src\LCD_44780.c: 304: LCD_send_command (1,0,0,0);
  9633  00308C  0E00               	movlw	0
  9634  00308E  6E17               	movwf	LCD_send_command@D2,c
  9635  003090  0E00               	movlw	0
  9636  003092  6E18               	movwf	LCD_send_command@D1,c
  9637  003094  0E00               	movlw	0
  9638  003096  6E19               	movwf	LCD_send_command@D0,c
  9639  003098  0E01               	movlw	1
  9640  00309A  EC60  F01C         	call	_LCD_send_command
  9641                           
  9642                           ;src\LCD_44780.c: 306: LCD_send_command (0,0,0,0);
  9643  00309E  0E00               	movlw	0
  9644  0030A0  6E17               	movwf	LCD_send_command@D2,c
  9645  0030A2  0E00               	movlw	0
  9646  0030A4  6E18               	movwf	LCD_send_command@D1,c
  9647  0030A6  0E00               	movlw	0
  9648  0030A8  6E19               	movwf	LCD_send_command@D0,c
  9649  0030AA  0E00               	movlw	0
  9650  0030AC  EC60  F01C         	call	_LCD_send_command
  9651                           
  9652                           ;src\LCD_44780.c: 307: LCD_send_command (0,0,0,1);
  9653  0030B0  0E00               	movlw	0
  9654  0030B2  6E17               	movwf	LCD_send_command@D2,c
  9655  0030B4  0E00               	movlw	0
  9656  0030B6  6E18               	movwf	LCD_send_command@D1,c
  9657  0030B8  0E01               	movlw	1
  9658  0030BA  6E19               	movwf	LCD_send_command@D0,c
  9659  0030BC  0E00               	movlw	0
  9660  0030BE  EC60  F01C         	call	_LCD_send_command
  9661                           
  9662                           ;src\LCD_44780.c: 309: LCD_send_command (0,0,0,0);
  9663  0030C2  0E00               	movlw	0
  9664  0030C4  6E17               	movwf	LCD_send_command@D2,c
  9665  0030C6  0E00               	movlw	0
  9666  0030C8  6E18               	movwf	LCD_send_command@D1,c
  9667  0030CA  0E00               	movlw	0
  9668  0030CC  6E19               	movwf	LCD_send_command@D0,c
  9669  0030CE  0E00               	movlw	0
  9670  0030D0  EC60  F01C         	call	_LCD_send_command
  9671                           
  9672                           ;src\LCD_44780.c: 310: LCD_send_command (0,1,1,0);
  9673  0030D4  0E01               	movlw	1
  9674  0030D6  6E17               	movwf	LCD_send_command@D2,c
  9675  0030D8  0E01               	movlw	1
  9676  0030DA  6E18               	movwf	LCD_send_command@D1,c
  9677  0030DC  0E00               	movlw	0
  9678  0030DE  6E19               	movwf	LCD_send_command@D0,c
  9679  0030E0  0E00               	movlw	0
  9680  0030E2  EC60  F01C         	call	_LCD_send_command
  9681                           
  9682                           ;src\LCD_44780.c: 312: LCD_clear ();
  9683  0030E6  ECB8  F01C         	call	_LCD_clear	;wreg free
  9684                           
  9685                           ;src\LCD_44780.c: 314: LCD_cursor (0,0);
  9686  0030EA  0E00               	movlw	0
  9687  0030EC  6E1B               	movwf	LCD_cursor@blinking,c
  9688  0030EE  0E00               	movlw	0
  9689  0030F0  ECA4  F01C         	call	_LCD_cursor
  9690  0030F4  0012               	return		;funcret
  9691  0030F6                     __end_of_LCD_initialize:
  9692                           	opt stack 0
  9693                           tblptru	equ	0xFF8
  9694                           tblptrh	equ	0xFF7
  9695                           tblptrl	equ	0xFF6
  9696                           tablat	equ	0xFF5
  9697                           prodh	equ	0xFF4
  9698                           prodl	equ	0xFF3
  9699                           intcon	equ	0xFF2
  9700                           postinc0	equ	0xFEE
  9701                           wreg	equ	0xFE8
  9702                           indf1	equ	0xFE7
  9703                           plusw1	equ	0xFE3
  9704                           fsr1h	equ	0xFE2
  9705                           fsr1l	equ	0xFE1
  9706                           indf2	equ	0xFDF
  9707                           postinc2	equ	0xFDE
  9708                           postdec2	equ	0xFDD
  9709                           plusw2	equ	0xFDB
  9710                           fsr2h	equ	0xFDA
  9711                           fsr2l	equ	0xFD9
  9712                           status	equ	0xFD8
  9713                           
  9714 ;; *************** function _delay_set_quartz *****************
  9715 ;; Defined at:
  9716 ;;		line 115 in file "../../LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
  9717 ;; Parameters:    Size  Location     Type
  9718 ;;  frequency       1    wreg     unsigned char 
  9719 ;; Auto vars:     Size  Location     Type
  9720 ;;  frequency       1   14[COMRAM] unsigned char 
  9721 ;; Return value:  Size  Location     Type
  9722 ;;		None               void
  9723 ;; Registers used:
  9724 ;;		wreg
  9725 ;; Tracked objects:
  9726 ;;		On entry : 0/0
  9727 ;;		On exit  : 0/0
  9728 ;;		Unchanged: 0/0
  9729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9730 ;;      Params:         0       0       0       0       0       0       0       0       0
  9731 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9732 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9733 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9734 ;;Total ram usage:        1 bytes
  9735 ;; Hardware stack levels used:    1
  9736 ;; Hardware stack levels required when called:    1
  9737 ;; This function calls:
  9738 ;;		Nothing
  9739 ;; This function is called by:
  9740 ;;		_LCD_initialize
  9741 ;;		_main
  9742 ;; This function uses a non-reentrant model
  9743 ;;
  9744                           
  9745                           	psect	text34
  9746  003A3C                     __ptext34:
  9747                           	opt stack 0
  9748  003A3C                     _delay_set_quartz:
  9749                           	opt stack 27
  9750                           
  9751                           ;incstack = 0
  9752                           ;delay_set_quartz@frequency stored from wreg
  9753  003A3C  6E0F               	movwf	delay_set_quartz@frequency,c
  9754                           
  9755                           ;src\delay.c: 117: delay_quartz_frequency_value = frequency;
  9756  003A3E  C00F  F050         	movff	delay_set_quartz@frequency,_delay_quartz_frequency_value	;volatile
  9757  003A42  0012               	return		;funcret
  9758  003A44                     __end_of_delay_set_quartz:
  9759                           	opt stack 0
  9760                           tblptru	equ	0xFF8
  9761                           tblptrh	equ	0xFF7
  9762                           tblptrl	equ	0xFF6
  9763                           tablat	equ	0xFF5
  9764                           prodh	equ	0xFF4
  9765                           prodl	equ	0xFF3
  9766                           intcon	equ	0xFF2
  9767                           postinc0	equ	0xFEE
  9768                           wreg	equ	0xFE8
  9769                           indf1	equ	0xFE7
  9770                           plusw1	equ	0xFE3
  9771                           fsr1h	equ	0xFE2
  9772                           fsr1l	equ	0xFE1
  9773                           indf2	equ	0xFDF
  9774                           postinc2	equ	0xFDE
  9775                           postdec2	equ	0xFDD
  9776                           plusw2	equ	0xFDB
  9777                           fsr2h	equ	0xFDA
  9778                           fsr2l	equ	0xFD9
  9779                           status	equ	0xFD8
  9780                           
  9781 ;; *************** function _LCD_cursor *****************
  9782 ;; Defined at:
  9783 ;;		line 266 in file "../../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  9784 ;; Parameters:    Size  Location     Type
  9785 ;;  active          1    wreg     unsigned char 
  9786 ;;  blinking        1   26[COMRAM] unsigned char 
  9787 ;; Auto vars:     Size  Location     Type
  9788 ;;  active          1   27[COMRAM] unsigned char 
  9789 ;; Return value:  Size  Location     Type
  9790 ;;		None               void
  9791 ;; Registers used:
  9792 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9793 ;; Tracked objects:
  9794 ;;		On entry : 0/0
  9795 ;;		On exit  : 0/0
  9796 ;;		Unchanged: 0/0
  9797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9798 ;;      Params:         1       0       0       0       0       0       0       0       0
  9799 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9800 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9801 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9802 ;;Total ram usage:        2 bytes
  9803 ;; Hardware stack levels used:    1
  9804 ;; Hardware stack levels required when called:    5
  9805 ;; This function calls:
  9806 ;;		_LCD_send_command
  9807 ;; This function is called by:
  9808 ;;		_LCD_initialize
  9809 ;; This function uses a non-reentrant model
  9810 ;;
  9811                           
  9812                           	psect	text35
  9813  003948                     __ptext35:
  9814                           	opt stack 0
  9815  003948                     _LCD_cursor:
  9816                           	opt stack 23
  9817                           
  9818                           ;incstack = 0
  9819                           ;LCD_cursor@active stored from wreg
  9820  003948  6E1C               	movwf	LCD_cursor@active,c
  9821                           
  9822                           ;src\LCD_44780.c: 268: LCD_send_command (0,0,0,0);
  9823  00394A  0E00               	movlw	0
  9824  00394C  6E17               	movwf	LCD_send_command@D2,c
  9825  00394E  0E00               	movlw	0
  9826  003950  6E18               	movwf	LCD_send_command@D1,c
  9827  003952  0E00               	movlw	0
  9828  003954  6E19               	movwf	LCD_send_command@D0,c
  9829  003956  0E00               	movlw	0
  9830  003958  EC60  F01C         	call	_LCD_send_command
  9831                           
  9832                           ;src\LCD_44780.c: 269: LCD_send_command (1,1,active,blinking);
  9833  00395C  0E01               	movlw	1
  9834  00395E  6E17               	movwf	LCD_send_command@D2,c
  9835  003960  C01C  F018         	movff	LCD_cursor@active,LCD_send_command@D1
  9836  003964  C01B  F019         	movff	LCD_cursor@blinking,LCD_send_command@D0
  9837  003968  0E01               	movlw	1
  9838  00396A  EC60  F01C         	call	_LCD_send_command
  9839  00396E  0012               	return		;funcret
  9840  003970                     __end_of_LCD_cursor:
  9841                           	opt stack 0
  9842                           tblptru	equ	0xFF8
  9843                           tblptrh	equ	0xFF7
  9844                           tblptrl	equ	0xFF6
  9845                           tablat	equ	0xFF5
  9846                           prodh	equ	0xFF4
  9847                           prodl	equ	0xFF3
  9848                           intcon	equ	0xFF2
  9849                           postinc0	equ	0xFEE
  9850                           wreg	equ	0xFE8
  9851                           indf1	equ	0xFE7
  9852                           plusw1	equ	0xFE3
  9853                           fsr1h	equ	0xFE2
  9854                           fsr1l	equ	0xFE1
  9855                           indf2	equ	0xFDF
  9856                           postinc2	equ	0xFDE
  9857                           postdec2	equ	0xFDD
  9858                           plusw2	equ	0xFDB
  9859                           fsr2h	equ	0xFDA
  9860                           fsr2l	equ	0xFD9
  9861                           status	equ	0xFD8
  9862                           
  9863 ;; *************** function _LCD_clear *****************
  9864 ;; Defined at:
  9865 ;;		line 257 in file "../../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  9866 ;; Parameters:    Size  Location     Type
  9867 ;;		None
  9868 ;; Auto vars:     Size  Location     Type
  9869 ;;		None
  9870 ;; Return value:  Size  Location     Type
  9871 ;;		None               void
  9872 ;; Registers used:
  9873 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9874 ;; Tracked objects:
  9875 ;;		On entry : 0/0
  9876 ;;		On exit  : 0/0
  9877 ;;		Unchanged: 0/0
  9878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9879 ;;      Params:         0       0       0       0       0       0       0       0       0
  9880 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9881 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9882 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9883 ;;Total ram usage:        0 bytes
  9884 ;; Hardware stack levels used:    1
  9885 ;; Hardware stack levels required when called:    5
  9886 ;; This function calls:
  9887 ;;		_LCD_send_command
  9888 ;; This function is called by:
  9889 ;;		_LCD_initialize
  9890 ;;		_scarica
  9891 ;;		_ricarica
  9892 ;;		_inizializzazione
  9893 ;; This function uses a non-reentrant model
  9894 ;;
  9895                           
  9896                           	psect	text36
  9897  003970                     __ptext36:
  9898                           	opt stack 0
  9899  003970                     _LCD_clear:
  9900                           	opt stack 24
  9901                           
  9902                           ;src\LCD_44780.c: 259: LCD_send_command (0,0,0,0);
  9903                           
  9904                           ;incstack = 0
  9905  003970  0E00               	movlw	0
  9906  003972  6E17               	movwf	LCD_send_command@D2,c
  9907  003974  0E00               	movlw	0
  9908  003976  6E18               	movwf	LCD_send_command@D1,c
  9909  003978  0E00               	movlw	0
  9910  00397A  6E19               	movwf	LCD_send_command@D0,c
  9911  00397C  0E00               	movlw	0
  9912  00397E  EC60  F01C         	call	_LCD_send_command
  9913                           
  9914                           ;src\LCD_44780.c: 260: LCD_send_command (0,0,0,1);
  9915  003982  0E00               	movlw	0
  9916  003984  6E17               	movwf	LCD_send_command@D2,c
  9917  003986  0E00               	movlw	0
  9918  003988  6E18               	movwf	LCD_send_command@D1,c
  9919  00398A  0E01               	movlw	1
  9920  00398C  6E19               	movwf	LCD_send_command@D0,c
  9921  00398E  0E00               	movlw	0
  9922  003990  EC60  F01C         	call	_LCD_send_command
  9923  003994  0012               	return		;funcret
  9924  003996                     __end_of_LCD_clear:
  9925                           	opt stack 0
  9926                           tblptru	equ	0xFF8
  9927                           tblptrh	equ	0xFF7
  9928                           tblptrl	equ	0xFF6
  9929                           tablat	equ	0xFF5
  9930                           prodh	equ	0xFF4
  9931                           prodl	equ	0xFF3
  9932                           intcon	equ	0xFF2
  9933                           postinc0	equ	0xFEE
  9934                           wreg	equ	0xFE8
  9935                           indf1	equ	0xFE7
  9936                           plusw1	equ	0xFE3
  9937                           fsr1h	equ	0xFE2
  9938                           fsr1l	equ	0xFE1
  9939                           indf2	equ	0xFDF
  9940                           postinc2	equ	0xFDE
  9941                           postdec2	equ	0xFDD
  9942                           plusw2	equ	0xFDB
  9943                           fsr2h	equ	0xFDA
  9944                           fsr2l	equ	0xFD9
  9945                           status	equ	0xFD8
  9946                           
  9947 ;; *************** function _LCD_send_command *****************
  9948 ;; Defined at:
  9949 ;;		line 61 in file "../../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  9950 ;; Parameters:    Size  Location     Type
  9951 ;;  D3              1    wreg     unsigned char 
  9952 ;;  D2              1   22[COMRAM] unsigned char 
  9953 ;;  D1              1   23[COMRAM] unsigned char 
  9954 ;;  D0              1   24[COMRAM] unsigned char 
  9955 ;; Auto vars:     Size  Location     Type
  9956 ;;  D3              1   25[COMRAM] unsigned char 
  9957 ;; Return value:  Size  Location     Type
  9958 ;;		None               void
  9959 ;; Registers used:
  9960 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9961 ;; Tracked objects:
  9962 ;;		On entry : 0/0
  9963 ;;		On exit  : 0/0
  9964 ;;		Unchanged: 0/0
  9965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9966 ;;      Params:         3       0       0       0       0       0       0       0       0
  9967 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9968 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9969 ;;      Totals:         4       0       0       0       0       0       0       0       0
  9970 ;;Total ram usage:        4 bytes
  9971 ;; Hardware stack levels used:    1
  9972 ;; Hardware stack levels required when called:    4
  9973 ;; This function calls:
  9974 ;;		_LCD_enable_pulse
  9975 ;; This function is called by:
  9976 ;;		_LCD_goto_line
  9977 ;;		_LCD_write_char
  9978 ;;		_LCD_clear
  9979 ;;		_LCD_cursor
  9980 ;;		_LCD_initialize
  9981 ;;		_LCD_home
  9982 ;;		_LCD_shift
  9983 ;;		_LCD_shift_cursor
  9984 ;; This function uses a non-reentrant model
  9985 ;;
  9986                           
  9987                           	psect	text37
  9988  0038C0                     __ptext37:
  9989                           	opt stack 0
  9990  0038C0                     _LCD_send_command:
  9991                           	opt stack 23
  9992                           
  9993                           ;incstack = 0
  9994                           ;LCD_send_command@D3 stored from wreg
  9995  0038C0  6E1A               	movwf	LCD_send_command@D3,c
  9996                           
  9997                           ;src\LCD_44780.c: 63: LATBbits.LATB4 = D0;
  9998  0038C2  B019               	btfsc	LCD_send_command@D0,0,c
  9999  0038C4  D002               	bra	u2215
 10000  0038C6  988A               	bcf	3978,4,c	;volatile
 10001  0038C8  D001               	bra	u2216
 10002  0038CA                     u2215:
 10003  0038CA  888A               	bsf	3978,4,c	;volatile
 10004  0038CC                     u2216:
 10005                           
 10006                           ;src\LCD_44780.c: 64: LATBbits.LATB5 = D1;
 10007  0038CC  B018               	btfsc	LCD_send_command@D1,0,c
 10008  0038CE  D002               	bra	u2225
 10009  0038D0  9A8A               	bcf	3978,5,c	;volatile
 10010  0038D2  D001               	bra	u2226
 10011  0038D4                     u2225:
 10012  0038D4  8A8A               	bsf	3978,5,c	;volatile
 10013  0038D6                     u2226:
 10014                           
 10015                           ;src\LCD_44780.c: 65: LATBbits.LATB6 = D2;
 10016  0038D6  B017               	btfsc	LCD_send_command@D2,0,c
 10017  0038D8  D002               	bra	u2235
 10018  0038DA  9C8A               	bcf	3978,6,c	;volatile
 10019  0038DC  D001               	bra	u2236
 10020  0038DE                     u2235:
 10021  0038DE  8C8A               	bsf	3978,6,c	;volatile
 10022  0038E0                     u2236:
 10023                           
 10024                           ;src\LCD_44780.c: 66: LATBbits.LATB7 = D3;
 10025  0038E0  B01A               	btfsc	LCD_send_command@D3,0,c
 10026  0038E2  D002               	bra	u2245
 10027  0038E4  9E8A               	bcf	3978,7,c	;volatile
 10028  0038E6  D001               	bra	u2246
 10029  0038E8                     u2245:
 10030  0038E8  8E8A               	bsf	3978,7,c	;volatile
 10031  0038EA                     u2246:
 10032                           
 10033                           ;src\LCD_44780.c: 67: LCD_enable_pulse ();
 10034  0038EA  EC0F  F01D         	call	_LCD_enable_pulse	;wreg free
 10035  0038EE  0012               	return		;funcret
 10036  0038F0                     __end_of_LCD_send_command:
 10037                           	opt stack 0
 10038                           tblptru	equ	0xFF8
 10039                           tblptrh	equ	0xFF7
 10040                           tblptrl	equ	0xFF6
 10041                           tablat	equ	0xFF5
 10042                           prodh	equ	0xFF4
 10043                           prodl	equ	0xFF3
 10044                           intcon	equ	0xFF2
 10045                           postinc0	equ	0xFEE
 10046                           wreg	equ	0xFE8
 10047                           indf1	equ	0xFE7
 10048                           plusw1	equ	0xFE3
 10049                           fsr1h	equ	0xFE2
 10050                           fsr1l	equ	0xFE1
 10051                           indf2	equ	0xFDF
 10052                           postinc2	equ	0xFDE
 10053                           postdec2	equ	0xFDD
 10054                           plusw2	equ	0xFDB
 10055                           fsr2h	equ	0xFDA
 10056                           fsr2l	equ	0xFD9
 10057                           status	equ	0xFD8
 10058                           
 10059 ;; *************** function _LCD_enable_pulse *****************
 10060 ;; Defined at:
 10061 ;;		line 49 in file "../../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
 10062 ;; Parameters:    Size  Location     Type
 10063 ;;		None
 10064 ;; Auto vars:     Size  Location     Type
 10065 ;;		None
 10066 ;; Return value:  Size  Location     Type
 10067 ;;		None               void
 10068 ;; Registers used:
 10069 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10070 ;; Tracked objects:
 10071 ;;		On entry : 0/0
 10072 ;;		On exit  : 0/0
 10073 ;;		Unchanged: 0/0
 10074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10075 ;;      Params:         0       0       0       0       0       0       0       0       0
 10076 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10077 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10078 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10079 ;;Total ram usage:        0 bytes
 10080 ;; Hardware stack levels used:    1
 10081 ;; Hardware stack levels required when called:    3
 10082 ;; This function calls:
 10083 ;;		_delay_ms
 10084 ;; This function is called by:
 10085 ;;		_LCD_send_command
 10086 ;; This function uses a non-reentrant model
 10087 ;;
 10088                           
 10089                           	psect	text38
 10090  003A1E                     __ptext38:
 10091                           	opt stack 0
 10092  003A1E                     _LCD_enable_pulse:
 10093                           	opt stack 23
 10094                           
 10095                           ;src\LCD_44780.c: 51: LATBbits.LATB3 = 1;
 10096                           
 10097                           ;incstack = 0
 10098  003A1E  868A               	bsf	3978,3,c	;volatile
 10099                           
 10100                           ;src\LCD_44780.c: 52: delay_ms (1);
 10101  003A20  0E00               	movlw	0
 10102  003A22  6E16               	movwf	delay_ms@value_ms+1,c
 10103  003A24  0E01               	movlw	1
 10104  003A26  6E15               	movwf	delay_ms@value_ms,c
 10105  003A28  EC47  F01C         	call	_delay_ms	;wreg free
 10106                           
 10107                           ;src\LCD_44780.c: 53: LATBbits.LATB3 = 0;
 10108  003A2C  968A               	bcf	3978,3,c	;volatile
 10109                           
 10110                           ;src\LCD_44780.c: 54: delay_ms (1);
 10111  003A2E  0E00               	movlw	0
 10112  003A30  6E16               	movwf	delay_ms@value_ms+1,c
 10113  003A32  0E01               	movlw	1
 10114  003A34  6E15               	movwf	delay_ms@value_ms,c
 10115  003A36  EC47  F01C         	call	_delay_ms	;wreg free
 10116  003A3A  0012               	return		;funcret
 10117  003A3C                     __end_of_LCD_enable_pulse:
 10118                           	opt stack 0
 10119                           tblptru	equ	0xFF8
 10120                           tblptrh	equ	0xFF7
 10121                           tblptrl	equ	0xFF6
 10122                           tablat	equ	0xFF5
 10123                           prodh	equ	0xFF4
 10124                           prodl	equ	0xFF3
 10125                           intcon	equ	0xFF2
 10126                           postinc0	equ	0xFEE
 10127                           wreg	equ	0xFE8
 10128                           indf1	equ	0xFE7
 10129                           plusw1	equ	0xFE3
 10130                           fsr1h	equ	0xFE2
 10131                           fsr1l	equ	0xFE1
 10132                           indf2	equ	0xFDF
 10133                           postinc2	equ	0xFDE
 10134                           postdec2	equ	0xFDD
 10135                           plusw2	equ	0xFDB
 10136                           fsr2h	equ	0xFDA
 10137                           fsr2l	equ	0xFD9
 10138                           status	equ	0xFD8
 10139                           
 10140 ;; *************** function _delay_ms *****************
 10141 ;; Defined at:
 10142 ;;		line 61 in file "../../LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
 10143 ;; Parameters:    Size  Location     Type
 10144 ;;  value_ms        2   20[COMRAM] unsigned int 
 10145 ;; Auto vars:     Size  Location     Type
 10146 ;;		None
 10147 ;; Return value:  Size  Location     Type
 10148 ;;		None               void
 10149 ;; Registers used:
 10150 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10151 ;; Tracked objects:
 10152 ;;		On entry : 0/0
 10153 ;;		On exit  : 0/0
 10154 ;;		Unchanged: 0/0
 10155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10156 ;;      Params:         2       0       0       0       0       0       0       0       0
 10157 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10158 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10159 ;;      Totals:         2       0       0       0       0       0       0       0       0
 10160 ;;Total ram usage:        2 bytes
 10161 ;; Hardware stack levels used:    1
 10162 ;; Hardware stack levels required when called:    2
 10163 ;; This function calls:
 10164 ;;		___wmul
 10165 ;; This function is called by:
 10166 ;;		_LCD_enable_pulse
 10167 ;;		_LCD_initialize
 10168 ;;		_delay_s
 10169 ;;		_ricarica
 10170 ;;		_read_adc
 10171 ;;		_inizializzazione
 10172 ;; This function uses a non-reentrant model
 10173 ;;
 10174                           
 10175                           	psect	text39
 10176  00388E                     __ptext39:
 10177                           	opt stack 0
 10178  00388E                     _delay_ms:
 10179                           	opt stack 26
 10180                           
 10181                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
 10182                           
 10183                           ;incstack = 0
 10184  00388E  C050  F00F         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
 10185  003892  6A10               	clrf	___wmul@multiplier+1,c
 10186  003894  C015  F011         	movff	delay_ms@value_ms,___wmul@multiplicand
 10187  003898  C016  F012         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
 10188  00389C  ECCB  F01C         	call	___wmul	;wreg free
 10189  0038A0  C00F  F044         	movff	?___wmul,_clock_counter_reference	;volatile
 10190  0038A4  C010  F045         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
 10191                           
 10192                           ;src\delay.c: 75: while (clock_counter_reference) {
 10193  0038A8  D006               	goto	l138
 10194  0038AA                     l2572:
 10195                           
 10196                           ;src\delay.c: 85: _delay(240);
 10197  0038AA  0E50               	movlw	80
 10198  0038AC                     u5497:
 10199  0038AC  2EE8               	decfsz	wreg,f,c
 10200  0038AE  D7FE               	goto	u5497
 10201                           
 10202                           ;src\delay.c: 88: clock_counter_reference--;
 10203  0038B0  0644               	decf	_clock_counter_reference,f,c	;volatile
 10204  0038B2  A0D8               	btfss	status,0,c
 10205  0038B4  0645               	decf	_clock_counter_reference+1,f,c	;volatile
 10206  0038B6                     l138:
 10207  0038B6  5044               	movf	_clock_counter_reference,w,c	;volatile
 10208  0038B8  1045               	iorwf	_clock_counter_reference+1,w,c	;volatile
 10209  0038BA  B4D8               	btfsc	status,2,c
 10210  0038BC  0012               	return	
 10211  0038BE  D7F5               	goto	l2572
 10212  0038C0                     __end_of_delay_ms:
 10213                           	opt stack 0
 10214                           tblptru	equ	0xFF8
 10215                           tblptrh	equ	0xFF7
 10216                           tblptrl	equ	0xFF6
 10217                           tablat	equ	0xFF5
 10218                           prodh	equ	0xFF4
 10219                           prodl	equ	0xFF3
 10220                           intcon	equ	0xFF2
 10221                           postinc0	equ	0xFEE
 10222                           wreg	equ	0xFE8
 10223                           indf1	equ	0xFE7
 10224                           plusw1	equ	0xFE3
 10225                           fsr1h	equ	0xFE2
 10226                           fsr1l	equ	0xFE1
 10227                           indf2	equ	0xFDF
 10228                           postinc2	equ	0xFDE
 10229                           postdec2	equ	0xFDD
 10230                           plusw2	equ	0xFDB
 10231                           fsr2h	equ	0xFDA
 10232                           fsr2l	equ	0xFD9
 10233                           status	equ	0xFD8
 10234                           
 10235 ;; *************** function ___wmul *****************
 10236 ;; Defined at:
 10237 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 10238 ;; Parameters:    Size  Location     Type
 10239 ;;  multiplier      2   14[COMRAM] unsigned int 
 10240 ;;  multiplicand    2   16[COMRAM] unsigned int 
 10241 ;; Auto vars:     Size  Location     Type
 10242 ;;  product         2   18[COMRAM] unsigned int 
 10243 ;; Return value:  Size  Location     Type
 10244 ;;                  2   14[COMRAM] unsigned int 
 10245 ;; Registers used:
 10246 ;;		wreg, status,2, status,0, prodl, prodh
 10247 ;; Tracked objects:
 10248 ;;		On entry : 0/0
 10249 ;;		On exit  : 0/0
 10250 ;;		Unchanged: 0/0
 10251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10252 ;;      Params:         4       0       0       0       0       0       0       0       0
 10253 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10254 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10255 ;;      Totals:         6       0       0       0       0       0       0       0       0
 10256 ;;Total ram usage:        6 bytes
 10257 ;; Hardware stack levels used:    1
 10258 ;; Hardware stack levels required when called:    1
 10259 ;; This function calls:
 10260 ;;		Nothing
 10261 ;; This function is called by:
 10262 ;;		_delay_ms
 10263 ;;		_sprintf
 10264 ;; This function uses a non-reentrant model
 10265 ;;
 10266                           
 10267                           	psect	text40
 10268  003996                     __ptext40:
 10269                           	opt stack 0
 10270  003996                     ___wmul:
 10271                           	opt stack 27
 10272                           
 10273                           ;incstack = 0
 10274  003996  500F               	movf	___wmul@multiplier,w,c
 10275  003998  0211               	mulwf	___wmul@multiplicand,c
 10276  00399A  CFF3 F013          	movff	prodl,___wmul@product
 10277  00399E  CFF4 F014          	movff	prodh,___wmul@product+1
 10278  0039A2  500F               	movf	___wmul@multiplier,w,c
 10279  0039A4  0212               	mulwf	___wmul@multiplicand+1,c
 10280  0039A6  50F3               	movf	prodl,w,c
 10281  0039A8  2614               	addwf	___wmul@product+1,f,c
 10282  0039AA  5010               	movf	___wmul@multiplier+1,w,c
 10283  0039AC  0211               	mulwf	___wmul@multiplicand,c
 10284  0039AE  50F3               	movf	prodl,w,c
 10285  0039B0  2614               	addwf	___wmul@product+1,f,c
 10286  0039B2  C013  F00F         	movff	___wmul@product,?___wmul
 10287  0039B6  C014  F010         	movff	___wmul@product+1,?___wmul+1
 10288  0039BA  0012               	return	
 10289  0039BC                     __end_of___wmul:
 10290                           	opt stack 0
 10291                           tblptru	equ	0xFF8
 10292                           tblptrh	equ	0xFF7
 10293                           tblptrl	equ	0xFF6
 10294                           tablat	equ	0xFF5
 10295                           prodh	equ	0xFF4
 10296                           prodl	equ	0xFF3
 10297                           intcon	equ	0xFF2
 10298                           postinc0	equ	0xFEE
 10299                           wreg	equ	0xFE8
 10300                           indf1	equ	0xFE7
 10301                           plusw1	equ	0xFE3
 10302                           fsr1h	equ	0xFE2
 10303                           fsr1l	equ	0xFE1
 10304                           indf2	equ	0xFDF
 10305                           postinc2	equ	0xFDE
 10306                           postdec2	equ	0xFDD
 10307                           plusw2	equ	0xFDB
 10308                           fsr2h	equ	0xFDA
 10309                           fsr2l	equ	0xFD9
 10310                           status	equ	0xFD8
 10311                           
 10312 ;; *************** function _isr_alta *****************
 10313 ;; Defined at:
 10314 ;;		line 51 in file "tester.c"
 10315 ;; Parameters:    Size  Location     Type
 10316 ;;		None
 10317 ;; Auto vars:     Size  Location     Type
 10318 ;;		None
 10319 ;; Return value:  Size  Location     Type
 10320 ;;		None               void
 10321 ;; Registers used:
 10322 ;;		wreg, status,2, status,0
 10323 ;; Tracked objects:
 10324 ;;		On entry : 0/0
 10325 ;;		On exit  : 0/0
 10326 ;;		Unchanged: 0/0
 10327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10328 ;;      Params:         0       0       0       0       0       0       0       0       0
 10329 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10330 ;;      Temps:         14       0       0       0       0       0       0       0       0
 10331 ;;      Totals:        14       0       0       0       0       0       0       0       0
 10332 ;;Total ram usage:       14 bytes
 10333 ;; Hardware stack levels used:    1
 10334 ;; This function calls:
 10335 ;;		Nothing
 10336 ;; This function is called by:
 10337 ;;		Interrupt level 2
 10338 ;; This function uses a non-reentrant model
 10339 ;;
 10340                           
 10341                           	psect	intcode
 10342  000008                     __pintcode:
 10343                           	opt stack 0
 10344  000008                     _isr_alta:
 10345                           	opt stack 22
 10346                           
 10347                           ;incstack = 0
 10348  000008  8251               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 10349  00000A  CFFA F001          	movff	pclath,??_isr_alta
 10350  00000E  CFFB F002          	movff	pclatu,??_isr_alta+1
 10351  000012  EDF8  F018         	call	int_func,f	;refresh shadow registers
 10352                           pclatu	equ	0xFFB
 10353                           pclath	equ	0xFFA
 10354                           tblptru	equ	0xFF8
 10355                           tblptrh	equ	0xFF7
 10356                           tblptrl	equ	0xFF6
 10357                           tablat	equ	0xFF5
 10358                           prodh	equ	0xFF4
 10359                           prodl	equ	0xFF3
 10360                           intcon	equ	0xFF2
 10361                           postinc0	equ	0xFEE
 10362                           wreg	equ	0xFE8
 10363                           indf1	equ	0xFE7
 10364                           plusw1	equ	0xFE3
 10365                           fsr1h	equ	0xFE2
 10366                           fsr1l	equ	0xFE1
 10367                           indf2	equ	0xFDF
 10368                           postinc2	equ	0xFDE
 10369                           postdec2	equ	0xFDD
 10370                           plusw2	equ	0xFDB
 10371                           fsr2h	equ	0xFDA
 10372                           fsr2l	equ	0xFD9
 10373                           status	equ	0xFD8
 10374                           
 10375                           	psect	intcode_body
 10376  0031F0                     __pintcode_body:
 10377                           	opt stack 22
 10378  0031F0                     int_func:
 10379                           	opt stack 22
 10380  0031F0  0006               	pop		; remove dummy address from shadow register refresh
 10381  0031F2  CFE9 F003          	movff	fsr0l,??_isr_alta+2
 10382  0031F6  CFEA F004          	movff	fsr0h,??_isr_alta+3
 10383  0031FA  CFE1 F005          	movff	fsr1l,??_isr_alta+4
 10384  0031FE  CFE2 F006          	movff	fsr1h,??_isr_alta+5
 10385  003202  CFD9 F007          	movff	fsr2l,??_isr_alta+6
 10386  003206  CFDA F008          	movff	fsr2h,??_isr_alta+7
 10387  00320A  CFF3 F009          	movff	prodl,??_isr_alta+8
 10388  00320E  CFF4 F00A          	movff	prodh,??_isr_alta+9
 10389  003212  CFF6 F00B          	movff	tblptrl,??_isr_alta+10
 10390  003216  CFF7 F00C          	movff	tblptrh,??_isr_alta+11
 10391  00321A  CFF8 F00D          	movff	tblptru,??_isr_alta+12
 10392  00321E  CFF5 F00E          	movff	tablat,??_isr_alta+13
 10393                           
 10394                           ;tester.c: 52: INTCONbits.TMR0IF = 0;
 10395  003222  94F2               	bcf	intcon,2,c	;volatile
 10396                           
 10397                           ;tester.c: 53: TMR0H = 0x0B;
 10398  003224  0E0B               	movlw	11
 10399  003226  6ED7               	movwf	4055,c	;volatile
 10400                           
 10401                           ;tester.c: 54: TMR0L = 0xDC;
 10402  003228  0EDC               	movlw	220
 10403  00322A  6ED6               	movwf	4054,c	;volatile
 10404                           
 10405                           ;tester.c: 55: tempo++;
 10406  00322C  0E01               	movlw	1
 10407  00322E  0100               	movlb	0	; () banked
 10408  003230  27B5               	addwf	_tempo& (0+255),f,b
 10409  003232  0E00               	movlw	0
 10410  003234  23B6               	addwfc	(_tempo+1)& (0+255),f,b
 10411  003236  23B7               	addwfc	(_tempo+2)& (0+255),f,b
 10412  003238  23B8               	addwfc	(_tempo+3)& (0+255),f,b
 10413                           
 10414                           ; BSR set to: 0
 10415                           ;tester.c: 56: secondi++;
 10416  00323A  0100               	movlb	0	; () banked
 10417  00323C  4BC5               	infsnz	_secondi& (0+255),f,b
 10418  00323E  2BC6               	incf	(_secondi+1)& (0+255),f,b
 10419                           
 10420                           ; BSR set to: 0
 10421                           ;tester.c: 57: if (secondi == 59) {
 10422  003240  0E3B               	movlw	59
 10423  003242  0100               	movlb	0	; () banked
 10424  003244  19C5               	xorwf	_secondi& (0+255),w,b
 10425  003246  0100               	movlb	0	; () banked
 10426  003248  11C6               	iorwf	(_secondi+1)& (0+255),w,b
 10427  00324A  A4D8               	btfss	status,2,c
 10428  00324C  D017               	goto	i2l179
 10429                           
 10430                           ; BSR set to: 0
 10431                           ;tester.c: 58: secondi = 0;
 10432  00324E  0E00               	movlw	0
 10433  003250  0100               	movlb	0	; () banked
 10434  003252  6FC6               	movwf	(_secondi+1)& (0+255),b
 10435  003254  0E00               	movlw	0
 10436  003256  6FC5               	movwf	_secondi& (0+255),b
 10437                           
 10438                           ; BSR set to: 0
 10439                           ;tester.c: 59: minuti++;
 10440  003258  0100               	movlb	0	; () banked
 10441  00325A  4BC1               	infsnz	_minuti& (0+255),f,b
 10442  00325C  2BC2               	incf	(_minuti+1)& (0+255),f,b
 10443                           
 10444                           ; BSR set to: 0
 10445                           ;tester.c: 60: if (minuti == 59) {
 10446  00325E  0E3B               	movlw	59
 10447  003260  0100               	movlb	0	; () banked
 10448  003262  19C1               	xorwf	_minuti& (0+255),w,b
 10449  003264  0100               	movlb	0	; () banked
 10450  003266  11C2               	iorwf	(_minuti+1)& (0+255),w,b
 10451  003268  A4D8               	btfss	status,2,c
 10452  00326A  D008               	goto	i2l179
 10453                           
 10454                           ; BSR set to: 0
 10455                           ;tester.c: 61: minuti = 0;
 10456  00326C  0E00               	movlw	0
 10457  00326E  0100               	movlb	0	; () banked
 10458  003270  6FC2               	movwf	(_minuti+1)& (0+255),b
 10459  003272  0E00               	movlw	0
 10460  003274  6FC1               	movwf	_minuti& (0+255),b
 10461                           
 10462                           ; BSR set to: 0
 10463                           ;tester.c: 62: ore++;
 10464  003276  0100               	movlb	0	; () banked
 10465  003278  4BC3               	infsnz	_ore& (0+255),f,b
 10466  00327A  2BC4               	incf	(_ore+1)& (0+255),f,b
 10467  00327C                     i2l179:
 10468                           
 10469                           ; BSR set to: 0
 10470  00327C  C00E  FFF5         	movff	??_isr_alta+13,tablat
 10471  003280  C00D  FFF8         	movff	??_isr_alta+12,tblptru
 10472  003284  C00C  FFF7         	movff	??_isr_alta+11,tblptrh
 10473  003288  C00B  FFF6         	movff	??_isr_alta+10,tblptrl
 10474  00328C  C00A  FFF4         	movff	??_isr_alta+9,prodh
 10475  003290  C009  FFF3         	movff	??_isr_alta+8,prodl
 10476  003294  C008  FFDA         	movff	??_isr_alta+7,fsr2h
 10477  003298  C007  FFD9         	movff	??_isr_alta+6,fsr2l
 10478  00329C  C006  FFE2         	movff	??_isr_alta+5,fsr1h
 10479  0032A0  C005  FFE1         	movff	??_isr_alta+4,fsr1l
 10480  0032A4  C004  FFEA         	movff	??_isr_alta+3,fsr0h
 10481  0032A8  C003  FFE9         	movff	??_isr_alta+2,fsr0l
 10482  0032AC  C002  FFFB         	movff	??_isr_alta+1,pclatu
 10483  0032B0  C001  FFFA         	movff	??_isr_alta,pclath
 10484  0032B4  9251               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 10485  0032B6  0011               	retfie		f
 10486  0032B8                     __end_of_isr_alta:
 10487                           	opt stack 0
 10488                           pclatu	equ	0xFFB
 10489                           pclath	equ	0xFFA
 10490                           tblptru	equ	0xFF8
 10491                           tblptrh	equ	0xFF7
 10492                           tblptrl	equ	0xFF6
 10493                           tablat	equ	0xFF5
 10494                           prodh	equ	0xFF4
 10495                           prodl	equ	0xFF3
 10496                           intcon	equ	0xFF2
 10497                           postinc0	equ	0xFEE
 10498                           fsr0h	equ	0xFEA
 10499                           fsr0l	equ	0xFE9
 10500                           wreg	equ	0xFE8
 10501                           indf1	equ	0xFE7
 10502                           plusw1	equ	0xFE3
 10503                           fsr1h	equ	0xFE2
 10504                           fsr1l	equ	0xFE1
 10505                           indf2	equ	0xFDF
 10506                           postinc2	equ	0xFDE
 10507                           postdec2	equ	0xFDD
 10508                           plusw2	equ	0xFDB
 10509                           fsr2h	equ	0xFDA
 10510                           fsr2l	equ	0xFD9
 10511                           status	equ	0xFD8
 10512                           pclatu	equ	0xFFB
 10513                           pclath	equ	0xFFA
 10514                           tblptru	equ	0xFF8
 10515                           tblptrh	equ	0xFF7
 10516                           tblptrl	equ	0xFF6
 10517                           tablat	equ	0xFF5
 10518                           prodh	equ	0xFF4
 10519                           prodl	equ	0xFF3
 10520                           intcon	equ	0xFF2
 10521                           postinc0	equ	0xFEE
 10522                           fsr0h	equ	0xFEA
 10523                           fsr0l	equ	0xFE9
 10524                           wreg	equ	0xFE8
 10525                           indf1	equ	0xFE7
 10526                           plusw1	equ	0xFE3
 10527                           fsr1h	equ	0xFE2
 10528                           fsr1l	equ	0xFE1
 10529                           indf2	equ	0xFDF
 10530                           postinc2	equ	0xFDE
 10531                           postdec2	equ	0xFDD
 10532                           plusw2	equ	0xFDB
 10533                           fsr2h	equ	0xFDA
 10534                           fsr2l	equ	0xFD9
 10535                           status	equ	0xFD8
 10536                           
 10537                           	psect	rparam
 10538  0000                     pclatu	equ	0xFFB
 10539                           pclath	equ	0xFFA
 10540                           tblptru	equ	0xFF8
 10541                           tblptrh	equ	0xFF7
 10542                           tblptrl	equ	0xFF6
 10543                           tablat	equ	0xFF5
 10544                           prodh	equ	0xFF4
 10545                           prodl	equ	0xFF3
 10546                           intcon	equ	0xFF2
 10547                           postinc0	equ	0xFEE
 10548                           fsr0h	equ	0xFEA
 10549                           fsr0l	equ	0xFE9
 10550                           wreg	equ	0xFE8
 10551                           indf1	equ	0xFE7
 10552                           plusw1	equ	0xFE3
 10553                           fsr1h	equ	0xFE2
 10554                           fsr1l	equ	0xFE1
 10555                           indf2	equ	0xFDF
 10556                           postinc2	equ	0xFDE
 10557                           postdec2	equ	0xFDD
 10558                           plusw2	equ	0xFDB
 10559                           fsr2h	equ	0xFDA
 10560                           fsr2l	equ	0xFD9
 10561                           status	equ	0xFD8
 10562                           
 10563                           	psect	temp
 10564  000051                     btemp:
 10565                           	opt stack 0
 10566  000051                     	ds	1
 10567  0000                     int$flags	set	btemp
 10568                           pclatu	equ	0xFFB
 10569                           pclath	equ	0xFFA
 10570                           tblptru	equ	0xFF8
 10571                           tblptrh	equ	0xFF7
 10572                           tblptrl	equ	0xFF6
 10573                           tablat	equ	0xFF5
 10574                           prodh	equ	0xFF4
 10575                           prodl	equ	0xFF3
 10576                           intcon	equ	0xFF2
 10577                           postinc0	equ	0xFEE
 10578                           fsr0h	equ	0xFEA
 10579                           fsr0l	equ	0xFE9
 10580                           wreg	equ	0xFE8
 10581                           indf1	equ	0xFE7
 10582                           plusw1	equ	0xFE3
 10583                           fsr1h	equ	0xFE2
 10584                           fsr1l	equ	0xFE1
 10585                           indf2	equ	0xFDF
 10586                           postinc2	equ	0xFDE
 10587                           postdec2	equ	0xFDD
 10588                           plusw2	equ	0xFDB
 10589                           fsr2h	equ	0xFDA
 10590                           fsr2l	equ	0xFD9
 10591                           status	equ	0xFD8


Data Sizes:
    Strings     104
    Constant    144
    Data        4
    BSS         46
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     67      80
    BANK0           160     71     114
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(COMRAM[6]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(COMRAM[6]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(COMRAM[6]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(COMRAM[6]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_12(CODE[8]), STR_11(CODE[7]), STR_8(CODE[5]), STR_5(CODE[8]), 
		 -> STR_4(CODE[7]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 8
		 -> str(BANK0[8]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(COMRAM[6]), 

    LCD_write_string@buffer	PTR unsigned char  size(2) Largest target is 8
		 -> str(BANK0[8]), LCD_write_integer@convertedInt(COMRAM[6]), 

    LCD_write_message@buffer	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_14(CODE[7]), STR_13(CODE[17]), STR_10(CODE[17]), STR_9(CODE[3]), 
		 -> STR_7(CODE[11]), STR_6(CODE[17]), STR_3(CODE[2]), STR_2(CODE[2]), 
		 -> STR_1(CODE[12]), 


Critical Paths under _main in COMRAM

    _main->_read_adc
    _scarica->_read_adc
    _delay_s->_delay_ms
    _LCD_write_integer->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _ricarica->_read_adc
    _sprintf->___fltol
    _sprintf->_fround
    _scale->___flmul
    _fround->___flmul
    ___awdiv->___awmod
    ___fltol->_scale
    ___fladd->_fround
    _read_adc->___fldiv
    ___flmul->___awdiv
    ___fldiv->___flmul
    _LCD_write_string->_LCD_write_char
    _LCD_goto_line->_LCD_send_command
    _inizializzazione->_LCD_write_message
    _LCD_write_message->_LCD_write_char
    _LCD_write_char->_LCD_send_command
    _LCD_initialize->_LCD_cursor
    _LCD_cursor->_LCD_send_command
    _LCD_clear->_LCD_send_command
    _LCD_enable_pulse->_delay_ms
    _delay_ms->___wmul

Critical Paths under _isr_alta in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_scarica
    _scarica->_sprintf
    _ricarica->_sprintf
    _sprintf->___flsub
    ___flsub->___fladd
    _read_adc->___fldiv

Critical Paths under _isr_alta in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr_alta in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr_alta in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr_alta in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr_alta in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr_alta in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr_alta in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr_alta in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  226100
                            ___fldiv
                   _delay_set_quartz
                   _inizializzazione
                           _read_adc
                           _ricarica
                            _scarica
 ---------------------------------------------------------------------------------
 (1) _scarica                                              8     8      0   95857
                                             63 BANK0      8     8      0
                          _LCD_clear
                      _LCD_goto_line
                  _LCD_write_integer
                  _LCD_write_message
                   _LCD_write_string
                            ___fladd
                            ___fldiv
                             ___flge
                           ___xxtofl
                            _delay_s
                           _read_adc
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _delay_s                                              2     2      0    1315
                                             22 COMRAM     2     2      0
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _LCD_write_integer                                   16    12      4   11118
                                             38 COMRAM    16    12      4
                   _LCD_write_string
                               _itoa
 ---------------------------------------------------------------------------------
 (3) _itoa                                                 8     2      6    1554
                                             30 COMRAM     8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                 9     3      6    1199
                                             21 COMRAM     9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     287
                                             14 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     418
                                             14 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _ricarica                                             0     0      0   77790
                          _LCD_clear
                      _LCD_goto_line
                  _LCD_write_message
                   _LCD_write_string
                             ___flge
                           _delay_ms
                           _read_adc
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             43    35      8   35057
                                             28 BANK0     35    27      8
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               13     9      4    7133
                                             53 COMRAM     9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      68
                                             14 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              17    13      4    6935
                                             53 COMRAM    13     9      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1448
                                             14 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1580
                                             20 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         17     9      8     431
                                             14 COMRAM    17     9      8
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          14     6      8     431
                                             14 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     543
                                             14 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     418
                                             14 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     568
                                             62 COMRAM     4     0      4
                                              0 BANK0      6     6      0
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3851
                                             20 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    3518
                                              0 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     109
                                             14 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8    1206
                                             14 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) _read_adc                                             3     3      0    8462
                                             65 COMRAM     2     2      0
                                             13 BANK0      1     1      0
                            ___fldiv
                            ___flmul
                           ___xxtofl
                           _delay_ms
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     578
                                             14 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    3616
                                             28 COMRAM    25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    2807
                                             53 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCD_write_string                                     2     0      2    8290
                                             31 COMRAM     2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (2) _LCD_goto_line                                        1     1      0    7523
                                             26 COMRAM     1     1      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (1) _inizializzazione                                     0     0      0   41169
                          _LCD_clear
                     _LCD_initialize
                  _LCD_write_message
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _LCD_write_message                                    2     0      2    8482
                                             31 COMRAM     2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (3) _LCD_write_char                                       5     5      0    7861
                                             26 COMRAM     5     5      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_initialize                                       1     1      0   23917
                                             28 COMRAM     1     1      0
                          _LCD_clear
                         _LCD_cursor
                   _LCD_send_command
                           _delay_ms
                   _delay_set_quartz
 ---------------------------------------------------------------------------------
 (3) _delay_set_quartz                                     1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _LCD_cursor                                           2     1      1    7609
                                             26 COMRAM     2     1      1
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_clear                                            0     0      0    7501
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (4) _LCD_send_command                                     4     1      3    7501
                                             22 COMRAM     4     1      3
                   _LCD_enable_pulse
 ---------------------------------------------------------------------------------
 (5) _LCD_enable_pulse                                     0     0      0    1269
                           _delay_ms
 ---------------------------------------------------------------------------------
 (3) _delay_ms                                             2     0      2    1269
                                             20 COMRAM     2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     543
                                             14 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _isr_alta                                            14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___fldiv
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     ___xxtofl (ARG)
   _delay_set_quartz
   _inizializzazione
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _delay_ms
       ___wmul
   _read_adc
     ___fldiv
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___xxtofl (ARG)
     ___flmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     ___xxtofl
     _delay_ms
       ___wmul
   _ricarica
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _LCD_write_string
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     ___flge
     _delay_ms
       ___wmul
     _read_adc
       ___fldiv
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___xxtofl (ARG)
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___xxtofl
       _delay_ms
         ___wmul
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___flneg
       ___flsub
         ___fladd
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
       ___wmul
       ___xxtofl
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _scarica
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_write_integer
       _LCD_write_string
         _LCD_write_char
           _LCD_send_command
             _LCD_enable_pulse
               _delay_ms
                 ___wmul
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _LCD_write_string
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     ___fladd
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___fldiv
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___xxtofl (ARG)
     ___flge
     ___xxtofl
     _delay_s
       _delay_ms
         ___wmul
     _read_adc
       ___fldiv
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___xxtofl (ARG)
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___xxtofl
       _delay_ms
         ___wmul
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___flneg
       ___flsub
         ___fladd
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
       ___wmul
       ___xxtofl
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)

 _isr_alta (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     47      72       5       71.3%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     43      50       1       85.1%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      C2      20        0.0%
DATA                 0      0      C2       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sun Feb 28 21:38:22 2016

                     ___fldiv@aexp 006C                       ___fldiv@bexp 006B  
        __size_of_delay_set_quartz 0008                       ___fldiv@sign 0060  
                     ___awdiv@sign 001A                 delay_s@repeat_loop 0018  
                      __CFG_BOR$ON 000000                ___wmul@multiplicand 0011  
                      __CFG_BORV$3 000000                       __CFG_CP0$OFF 000000  
                     __CFG_CP1$OFF 000000                       __CFG_CP2$OFF 000000  
                     __CFG_CP3$OFF 000000                                l206 2648  
                              l138 38B6                                l290 0EAC  
                              l515 2EAA                                l612 2CF4  
                              l188 228E                                l525 2FA0  
                              l613 2D1C                                l198 2864  
                              l802 131A                                l803 130E  
                              l619 2D82                                l804 12DA  
                              l708 3508                                l910 2A12  
                              l718 364E                                l905 1D16  
                              l761 37B8                                l682 33F0  
                              l819 148E                                l771 3884  
                              l924 2ACC                                l828 1522  
                              l925 2AE0                                l917 2A90  
                              l858 1F20                                l869 1FAC  
                              l888 1A7A                                l897 1C90  
                     __CFG_CPB$OFF 000000                       __CFG_CPD$OFF 000000  
                      ?_LCD_cursor 001B                 _sommatoriaCorrente 00B1  
                              _ore 00C3                                _str 00C7  
                     ___awmod@sign 0014                                prod 000FF3  
                              wreg 000FE8                       __CFG_FOSC$HS 000000  
                     ___flmul@aexp 002E                       ___flmul@bexp 002F  
                     ___flmul@sign 0029                       ___flmul@temp 0034  
                     ___flmul@prod 0030                       __CFG_LVP$OFF 000000  
           __size_of_LCD_goto_line 00B8                       ___fltol@exp1 0065  
                     __CFG_WDT$OFF 000000                               l3000 345A  
                             l3012 3480                               l3102 382E  
                             l3016 348E                               l3008 3476  
                             l3040 3554                               l3032 353A  
                             l3120 2504                               l3052 3580  
                             l3044 3568                               l3036 3548  
                             l3028 352E                               l3038 3550  
                             l3142 1724                               l3224 2D48  
                             l3048 3572                               l3128 25D0  
                             l3160 192C                               l3152 17F2  
                             l4210 125A                               l3250 2DD0  
                             l3234 2D70                               l3058 3378  
                             l3092 39D0                               l4300 151C  
                             l3244 2DB2                               l3236 2D7C  
                             l3228 2D58                               l3148 17C8  
                             l3068 33B2                               l4310 1578  
                             l4222 12EE                               l3166 19D0  
                             l2606 37AE                               l2622 387A  
                             l2614 385A                               l3600 3308  
                             l3088 39BE                               l4400 1EB2  
                             l4224 12F4                               l4144 117C  
                             l3520 34BA                               l3272 2E42  
                             l3264 2E12                               l2616 3862  
                             l3602 332E                               l4330 15D0  
                             l4322 15B8                               l4314 158A  
                             l4162 11C6                               l4138 1158  
                             l3522 34C6                               l3194 2CBA  
                             l3178 3A16                               l2618 3866  
                             l2572 38AA                               l3612 3934  
                             l3604 3354                               l4420 1F42  
                             l4340 1D62                               l3452 2F62  
                             l3444 2EF0                               l4324 15BC  
                             l4252 138C                               l4228 12FE  
                             l4180 121E                               l4172 11F4  
                             l4156 11B2                               l4148 1186  
                             l3532 34FA                               l3524 34CA  
                             l3540 360C                               l3284 2E70  
                             l3188 2C8E                               l4414 1F1C  
                             l4350 1D88                               l4318 15AC  
                             l4246 137C                               l4238 133E  
                             l4510 31BA                               l4502 3192  
                             l3542 3618                               l3294 2E98  
                             l3622 2B6E                               l3608 3920  
                             l4408 1EE4                               l4360 1DB0  
                             l3448 2F24                               l4280 14D6  
                             l4248 1382                               l4256 139E  
                             l4168 11EA                               l4512 31C4  
                             l3544 361C                               l3296 2EA4  
                             l3288 2E80                               l4600 0A4E  
                             l3624 2B72                               l3640 2C04  
                             l4450 2022                               l4426 1F66  
                             l4370 1DD6                               l4346 1D84  
                             l3570 2A78                               l4522 2624  
                             l3458 2FD8                               l3466 390C  
                             l4274 14C0                               l4290 14F6  
                             l4266 146E                               l2594 3786  
                             l3634 2BDA                               l4460 2064  
                             l4452 2036                               l4436 1FA6  
                             l2860 1A2A                               l3564 2A40  
                             l4540 26C0                               l4284 14E2  
                             l4292 14FC                               l4516 31DE  
                             l4508 31AC                               l3548 3640  
                             l4700 0EB0                               l2596 378E  
                             l3644 2C54                               l4462 2066  
                             l4454 2056                               l4446 1FF6  
                             l4390 1E48                               l4382 1E1C  
                             l4366 1DD2                               l2934 1C58  
                             l2862 1A3A                               l3590 2B12  
                             l3566 2A46                               l3558 2A22  
                             l4526 262E                               l4630 0B92  
                             l2598 3792                               l2960 1D00  
                             l2944 1C8C                               l2928 1C3A  
                             l3576 2AB6                               l3568 2A52  
                             l4712 0F42                               l4640 0C2E  
                             l4632 0BCE                               l4624 0B4E  
                             l4616 0ACE                               l4560 0922  
                             l2970 1D34                               l2954 1CD4  
                             l2882 1A86                               l2858 1A26  
                             l3578 2AC2                               l4482 3118  
                             l4730 1050                               l4722 1028  
                             l4634 0BE4                               l4554 090A  
                             l3690 39E8                               l3596 32BC  
                             l2876 1A66                               l4724 1036  
                             l4708 0EE0                               l4660 0D44  
                             l4644 0C5C                               l4628 0B7C  
                             l4732 105E                               l4572 0990  
                             l4820 211E                               l3598 32E2  
                             l2958 1CF2                               l2886 1A98  
                             l2878 1A6A                               l2990 3438  
                             l4750 1108                               l4742 10AC  
                             l4654 0CC6                               l4590 09FC  
                             l4582 09BC                               l4574 09A6  
                             l3694 39F6                               l4806 20CA  
                             l2984 3428                               l4672 0D8A  
                             l4584 09E2                               l4568 0954  
                             l4752 110E                               l4498 3180  
                             l4746 10DC                               l4738 1084  
                             l4658 0D3E                               l4578 09B6  
                             l4754 112C                               l4826 2152  
                             l2996 344E                               l4676 0DB6  
                             l2998 3456                               l4694 0E7A  
                             l4678 0DBE                               l4686 0E52  
                             l4696 0E8E                               l4688 0E60  
                             l4786 291A                               l4876 3710  
                             STR_1 08C4                               STR_2 08D9  
                             STR_3 08D9                               STR_4 08EA  
                             STR_5 08DB                               STR_6 08A2  
                             STR_7 08D0                               STR_8 08F1  
                             STR_9 08F6                               _LATA 000F89  
                             _LATB 000F8A                               u2215 38CA  
                             _LATC 000F8B                               u2216 38CC  
                             u2225 38D4                               u2226 38D6  
                             u2235 38DE                               u2236 38E0  
                             u2245 38E8                               u2246 38EA  
                             u3151 2C72                               u5010 3138  
                             u3171 2C9E                               u5015 312C  
                             u5320 0EA4                               u2860 1CE2  
                             u2780 1BFC                               u4470 12A4  
                             u4480 12BC                               u2785 1BF2  
                             u3841 2B2E                               u4490 12BE  
                             u5470 224A                               u5497 38AC  
                             u4970 200A                               _main 36BE  
                             _itoa 380A          __size_of_LCD_send_command 0030  
                             fsr0h 000FEA                               fsr1h 000FE2  
                             fsr0l 000FE9                               fsr2h 000FDA  
                             indf1 000FE7                               fsr1l 000FE1  
                             indf2 000FDF                               fsr2l 000FD9  
                             btemp 0051                               _utoa 3370  
                             pclat 000FFA                               prodh 000FF4  
                             prodl 000FF3                               start 0016  
                    __CFG_IESO$OFF 000000                    ___fldiv@new_exp 0065  
               __size_of_LCD_clear 0026                       _sprintf$1357 0086  
                   delay_s@value_s 0017                      __CFG_MCLRE$ON 000000  
                     ___param_bank 000010           __end_of_LCD_enable_pulse 3A3C  
          __size_of_LCD_initialize 011A                      __CFG_PLLDIV$1 000000  
                   __CFG_CCP2MX$ON 000000                      ___fltol@sign1 0064  
                  __end_of___fladd 15E2                              ?_main 0001  
                  __end_of___fldiv 2086                              ?_itoa 001F  
                  __end_of___awdiv 3498                    __end_of___flneg 391E  
                            STR_10 0891                              STR_11 08EA  
                            STR_12 08DB                              STR_13 08B3  
                            STR_14 08E3                    __end_of___awmod 358A  
                  __end_of___flmul 1D4A                    __end_of___flsub 380A  
                  __end_of___fltol 31F0                    __end_of___lldiv 351A  
                            ?_utoa 0016                              _T0CON 000FD5  
                  ___awdiv@divisor 0017                    __end_of___llmod 3660  
                  __end_of___lwdiv 37C2                    __end_of___lwmod 388E  
                            i2l179 327C                    ___awdiv@counter 0019  
                            _TMR0H 000FD7                              _TMR0L 000FD6  
                    __CFG_USBDIV$1 000000                              _TRISA 000F92  
                            _TRISB 000F93                              _TRISC 000F94  
                    __CFG_PWRT$OFF 000000                    __end_of_delay_s 3A00  
                    __CFG_WRT0$OFF 000000                      __CFG_WRT1$OFF 000000  
                    __CFG_WRT2$OFF 000000                      __CFG_WRT3$OFF 000000  
                   __CFG_EBTR0$OFF 000000                     __CFG_FCMEN$OFF 000000  
                   __CFG_EBTR1$OFF 000000                     __CFG_EBTR2$OFF 000000  
                   __CFG_EBTR3$OFF 000000                      __CFG_WRTB$OFF 000000  
                    __CFG_WRTC$OFF 000000                      __CFG_WRTD$OFF 000000  
                   __CFG_EBTRB$OFF 000000                    __end_of_dpowers 0891  
                            _scale 15E2                    __end_of_isdigit 3A1E  
                            _tempo 00B5                    __end_of_scarica 23A4  
                            tablat 000FF5                              plusw1 000FE3  
                            plusw2 000FDB                              utoa@c 001E  
                            utoa@v 001C                              status 000FD8  
                  __end_of_sprintf 113A                   _inizializzazione 3660  
                   __CFG_PBADEN$ON 000000                __size_of_LCD_cursor 0028  
                  __initialization 371A                       __end_of_main 371A  
                     __end_of_itoa 384C                      _LCD_goto_line 32B8  
                     __end_of_utoa 3414                  ?_LCD_write_string 0020  
                           ??_main 0044                             ??_itoa 0025  
                           ??_utoa 001C                      __activetblptr 000002  
               ??_LCD_write_string 0022               __size_of__tdiv_to_l_ 0132  
                __end_of_LCD_clear 3996             LCD_write_string@buffer 0020  
                           _ADCON0 000FC2                             _ADCON1 000FC1  
                           _ADCON2 000FC0                   ___llmod@dividend 000F  
                           ?_scale 0036                             _ADRESH 000FC4  
                           _ADRESL 000FC3                   ___awdiv@dividend 0015  
                 __end_of___xxtofl 2B24                   __end_of_delay_ms 38C0  
                   __CFG_XINST$OFF 000000                   __end_of__powers_ 0869  
                   ?_LCD_goto_line 0001                             ___flge 2EBC  
                        ??___fladd 0068                   _delay_set_quartz 3A3C  
                           ___wmul 3996                          ??___fldiv 003E  
                        ??___awdiv 0019                          ??___flneg 0013  
                   __CFG_STVREN$ON 000000                          ??___awmod 0013  
                        ??___flmul 0025                          ??___flsub 0043  
                        ??___fltol 0060                          ??___lldiv 0017  
                        ??___llmod 0017                          ??___lwdiv 0013  
                        ??___lwmod 0013            __size_of_LCD_write_char 0070  
                 __end_of_read_adc 285E                             _fround 23A4  
   LCD_initialize@quartz_frequency 001D                             clear_0 3720  
                 ___awdiv@quotient 001B                             _minuti 00C1  
                  ___awmod@divisor 0011                          ??_delay_s 0017  
                  ___awmod@counter 0013                   __end_of_isr_alta 32B8  
                 __end_of_ricarica 29D4                             itoa@cp 0025  
                     __pdataCOMRAM 0050                          ??_isdigit 000F  
                        ??_scarica 009F                       __mediumconst 0000  
                           tblptrh 000FF7                             tblptrl 000FF6  
                           tblptru 000FF8                          ??_sprintf 0084  
                       ___flge@ff1 000F                         ___flge@ff2 0013  
                     ___xxtofl@arg 0019                       ___xxtofl@exp 0018  
                     ___xxtofl@val 000F                         __accesstop 0060  
          __end_of__initialization 3762                         ___flneg@f1 000F  
                 _LCD_send_command 38C0                      ___rparam_used 000001  
LCD_write_integer@number_of_digits 0029                         ___fltol@f1 003F  
           LCD_write_integer@F4919 004A                     __pcstackCOMRAM 0001  
                     __pidataBANK0 3A44                      __end_of_scale 19FA  
                   _LCD_initialize 2FDC                  _LCD_write_integer 2B24  
                _LCD_write_message 391E                 ?_LCD_write_integer 0027  
           LCD_write_integer@index 0036                 ?_LCD_write_message 0020  
                       __div_to_l_ 2D94                       ??_LCD_cursor 001C  
           LCD_write_integer@value 0027      LCD_write_integer@convertedInt 0030  
              ??_LCD_write_integer 002B                    __div_to_l_@exp1 001C  
              ??_LCD_write_message 0022                    __div_to_l_@cntr 001B  
                          ??_scale 003A                    __div_to_l_@quot 0017  
                       __pbssBANK0 00A7                         __pnvCOMRAM 0044  
                    __div_to_l_@f1 000F                      __div_to_l_@f2 0013  
                  ??_LCD_goto_line 001B                 __end_of_LCD_cursor 3970  
           __end_of_LCD_initialize 30F6                            ?___flge 000F  
                          ?___wmul 000F          __end_of_LCD_write_integer 2C62  
        __end_of_LCD_write_message 3948                  ?_LCD_enable_pulse 0001  
                          ?_fround 0036                 ??_LCD_enable_pulse 0017  
         __end_of_inizializzazione 36BE                          ?___xxtofl 000F  
                 LCD_cursor@active 001C                          ?_delay_ms 0015  
                  __CFG_VREGEN$OFF 000000                          ?_read_adc 0001  
                        ?_isr_alta 0001                          ?_ricarica 0001  
                __end_of__npowers_ 0835                            __Hparam 0000  
                       _scale$1356 003A                            __Lparam 0000  
                 delay_ms@value_ms 0015                    ?_LCD_initialize 0001  
                  __size_of___flge 0120                            ___fladd 113A  
                          ___fldiv 1D4A                            ___awdiv 3414  
                          ___flneg 38F0                            ___awmod 351A  
                          ___flmul 19FA                            ___flsub 37C2  
                          ___fltol 30F6                            ___lldiv 3498  
                  __size_of___wmul 0026                     _LCD_write_char 358A  
                          ___llmod 35FA                            ___lwdiv 3770  
                          ___lwmod 384C                       __psmallconst 0800  
                          __pcinit 371A                    __size_of_fround 027A  
                          _delay_s 39E0                            __ramtop 0800  
              LCD_write_char@value 001F                            __ptext0 36BE  
                          __ptext1 2086                            __ptext2 39E0  
                          __ptext3 2B24                            __ptext4 380A  
                          __ptext5 3370                            __ptext6 384C  
                          __ptext7 3770                            __ptext8 285E  
                          __ptext9 08FA                        ?__div_to_l_ 000F  
                 LCD_write_char@D0 001E                   LCD_write_char@D1 001D  
                 LCD_write_char@D2 001C                   LCD_write_char@D3 001B  
                          _dpowers 0869                            _current 00AD  
                          _isdigit 3A00                         ??___xxtofl 0013  
                 ___awmod@dividend 000F                            _scarica 2086  
                          _lettura 00A7                            _secondi 00C5  
                       ??_delay_ms 0017           __end_of_delay_set_quartz 3A44  
                          _sprintf 08FA                            _voltage 00BD  
                   __pintcode_body 31F0                          _LCD_clear 3970  
             end_of_initialization 3762          __size_of_LCD_write_string 0024  
                     _combinazioni 00CF                            itoa@buf 001F  
                          itoa@val 0021                      __Lmediumconst 0000  
                       ??_read_adc 0042                            int_func 31F0  
                       ??_isr_alta 0001                         ??_ricarica 0044  
                  ___lldiv@divisor 0013                 LCD_cursor@blinking 001B  
                  ___lldiv@counter 001B             __end_of_LCD_write_char 35FA  
                          postdec2 000FDD                            postinc0 000FEE  
                          postinc2 000FDE         __size_of_LCD_write_integer 013E  
       __size_of_LCD_write_message 002A                            utoa@buf 0016  
                   __tdiv_to_l_@f1 000F                     __tdiv_to_l_@f2 0013  
                          utoa@val 0018                      ??__tdiv_to_l_ 0017  
                        _PORTAbits 000F80                          _PORTCbits 000F82  
         __end_of_LCD_send_command 38F0                        ___fladd@grs 0073  
                    ___xxtofl@sign 0017                        ___fldiv@grs 0067  
                      ___fldiv@rem 0061                         ?_LCD_clear 0001  
          _clock_counter_reference 0044                        ___flmul@grs 002A  
              __size_of__div_to_l_ 0128                    ?_LCD_write_char 0001  
                   __end_of___flge 2FDC                     __end_of___wmul 39BC  
                    __pidataCOMRAM 3A47                     __end_of_fround 261E  
              start_initialization 371A                __end_of__tdiv_to_l_ 2D94  
                  ___llmod@divisor 0013                    ___llmod@counter 0017  
                         ??___flge 0017                           ??___wmul 0013  
                      __pdataBANK0 00CF                   __CFG_LPT1OSC$OFF 000000  
                         ??_fround 003A                      sprintf@tmpval 0094  
                        ___fladd@a 0064                          ___fladd@b 0060  
                       fround@prec 0042                          ___fldiv@a 003A  
                        ___fldiv@b 0036                  ?_inizializzazione 0001  
                        ___flmul@a 0021                          ___flmul@b 001D  
                      __pbssCOMRAM 004A                          ___flsub@a 0078  
                        ___flsub@b 0074                      __pcstackBANK0 0060  
               ??_inizializzazione 0022                  __size_of___xxtofl 0150  
        __size_of_LCD_enable_pulse 001E                  __size_of_delay_ms 0032  
                      ??_LCD_clear 001B            LCD_write_message@buffer 0020  
                 _LCD_write_string 39BC                        sprintf@flag 008C  
                      sprintf@fval 009A                        sprintf@prec 0098  
                 ??_LCD_initialize 001D          delay_set_quartz@frequency 000F  
                __size_of_read_adc 0240                   ___lwdiv@dividend 000F  
               LCD_send_command@D0 0019                 LCD_send_command@D1 0018  
               LCD_send_command@D2 0017                 LCD_send_command@D3 001A  
                __size_of_isr_alta 32B0              __end_of_LCD_goto_line 3370  
                        __pintcode 0008                  __size_of_ricarica 0176  
                         ?___fladd 0060                           ?___fldiv 0036  
                         ?___awdiv 0015                           ?___flneg 000F  
                         ?___awmod 000F                           ?___flmul 001D  
                         ?___flsub 0074                           ?___fltol 003F  
                         ?___lldiv 000F                           ?___llmod 000F  
                        __npowers_ 0801                           ?___lwdiv 000F  
                         ?___lwmod 000F                           ?_delay_s 0001  
                      __tdiv_to_l_ 2C62                       ??__div_to_l_ 0017  
                      __smallconst 0800                           ?_isdigit 0001  
                         ?_scarica 0001                   ___lwdiv@quotient 0013  
                         ?_sprintf 007C                     __size_of_scale 0418  
                ?_delay_set_quartz 0001                 ??_delay_set_quartz 000F  
                   ___wmul@product 0013                           _LATBbits 000F8A  
                         _LATCbits 000F8B       _delay_quartz_frequency_value 0050  
               __end_of__div_to_l_ 2EBC                   __CFG_WDTPS$32768 000000  
                        _tempo_old 00B9     LCD_write_integer@zero_cleaning 002A  
                       _ADCON0bits 000FC2                  ___wmul@multiplier 000F  
                ?_LCD_send_command 0017                 ??_LCD_send_command 001A  
                 ??_LCD_write_char 001B                  LCD_goto_line@line 001B  
                         __Hrparam 0000                           __Lrparam 0000  
                        read_adc@i 006D                   __size_of___fladd 04A8  
                 __size_of___fldiv 033C                   __size_of___awdiv 0084  
                 __size_of___flneg 002E                   __size_of___awmod 0070  
                 __size_of___flmul 0350                   __size_of___flsub 0048  
                 __size_of___fltol 00FA                   __size_of___lldiv 0082  
                 __size_of___llmod 0066                   __size_of___lwdiv 0052  
                 __size_of___lwmod 0042                        _fround$1354 003E  
                      _fround$1355 003A                        _isdigit$980 0010  
                 __size_of_delay_s 0020                         sprintf@exp 0092  
                       sprintf@val 008E                           ___xxtofl 29D4  
                 __size_of_isdigit 001E                           _delay_ms 388E  
                  ___lwdiv@divisor 0011                   __size_of_scarica 031E  
                  ___lwdiv@counter 0015                   _LCD_enable_pulse 3A1E  
                         __ptext10 15E2                           __ptext11 3A00  
                         __ptext20 37C2                           __ptext12 23A4  
                         __ptext21 113A                           __ptext13 351A  
                         __ptext30 3660                           __ptext22 38F0  
                         __ptext14 3414                           __ptext31 391E  
                         __ptext23 2EBC                           __ptext15 2C62  
                         __ptext40 3996                           __ptext32 358A  
                         __ptext24 261E                           __ptext16 2D94  
                         __ptext33 2FDC                           __ptext25 29D4  
                         __ptext17 35FA                           __ptext34 3A3C  
                         __ptext26 19FA                           __ptext18 3498  
                         __ptext35 3948                           __ptext27 1D4A  
                         __ptext19 30F6                           __ptext36 3970  
                         __ptext28 39BC                           __ptext37 38C0  
                         __ptext29 32B8                           __ptext38 3A1E  
                         __ptext39 388E                           __powers_ 0835  
                 __size_of_sprintf 0840                           _read_adc 261E  
                    __size_of_main 005C                      __size_of_itoa 0042  
                    __size_of_utoa 00A4                           _isr_alta 0008  
                         _ricarica 285E                           _rapporto 0046  
                         int$flags 0051           __end_of_LCD_write_string 39E0  
            __CFG_CPUDIV$OSC1_PLL2 000000                         _LCD_cursor 3948  
                       _INTCONbits 000FF2                           itoa@base 0023  
                         isdigit@c 0011                           scale@scl 003E  
                         intlevel2 0000                          sprintf@ap 008A  
                 __tdiv_to_l_@exp1 001F                   __tdiv_to_l_@cntr 001E  
                        sprintf@sp 007C                   __tdiv_to_l_@quot 001A  
                 ___lwmod@dividend 000F                   ___lldiv@dividend 000F  
        __size_of_inizializzazione 005E                       ?__tdiv_to_l_ 000F  
                         utoa@base 001A                           sprintf@c 009E  
                         sprintf@f 007E                   ___lldiv@quotient 0017  
                  ___lwmod@divisor 0011                    ___lwmod@counter 0013  
                    ___fladd@signs 0070                       ___fladd@aexp 0071  
                     ___fladd@bexp 0072  
