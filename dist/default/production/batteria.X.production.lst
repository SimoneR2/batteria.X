

Microchip Technology PIC18 LITE Macro Assembler V1.36 build -262312587 
                                                                                               Sun Feb 28 13:08:26 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    52                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    53  0000                     
    54                           	psect	idataCOMRAM
    55  003051                     __pidataCOMRAM:
    56                           	opt stack 0
    57                           
    58                           ;initializer for _delay_quartz_frequency_value
    59  003051  14                 	db	20
    60                           
    61                           	psect	idataBANK0
    62  00304E                     __pidataBANK0:
    63                           	opt stack 0
    64                           
    65                           ;initializer for _combinazioni
    66  00304E  00                 	db	0
    67  00304F  01                 	db	1
    68  003050  03                 	db	3
    69                           
    70                           	psect	smallconst
    71  000800                     __psmallconst:
    72                           	opt stack 0
    73  000800  00                 	db	0
    74  000801                     __npowers_:
    75                           	opt stack 0
    76  000801  0000               	dw	0
    77  000803  3F80               	dw	16256
    78  000805  CCCD               	dw	52429
    79  000807  3DCC               	dw	15820
    80  000809  D70A               	dw	55050
    81  00080B  3C23               	dw	15395
    82  00080D  126F               	dw	4719
    83  00080F  3A83               	dw	14979
    84  000811  B717               	dw	46871
    85  000813  38D1               	dw	14545
    86  000815  C5AC               	dw	50604
    87  000817  3727               	dw	14119
    88  000819  37BD               	dw	14269
    89  00081B  3586               	dw	13702
    90  00081D  BF95               	dw	49045
    91  00081F  33D6               	dw	13270
    92  000821  CC77               	dw	52343
    93  000823  322B               	dw	12843
    94  000825  705F               	dw	28767
    95  000827  3089               	dw	12425
    96  000829  E6FF               	dw	59135
    97  00082B  2EDB               	dw	11995
    98  00082D  E508               	dw	58632
    99  00082F  1E3C               	dw	7740
   100  000831  4260               	dw	16992
   101  000833  0DA2               	dw	3490
   102  000835                     __end_of__npowers_:
   103                           	opt stack 0
   104  000835                     __powers_:
   105                           	opt stack 0
   106  000835  0000               	dw	0
   107  000837  3F80               	dw	16256
   108  000839  0000               	dw	0
   109  00083B  4120               	dw	16672
   110  00083D  0000               	dw	0
   111  00083F  42C8               	dw	17096
   112  000841  0000               	dw	0
   113  000843  447A               	dw	17530
   114  000845  4000               	dw	16384
   115  000847  461C               	dw	17948
   116  000849  5000               	dw	20480
   117  00084B  47C3               	dw	18371
   118  00084D  2400               	dw	9216
   119  00084F  4974               	dw	18804
   120  000851  9680               	dw	38528
   121  000853  4B18               	dw	19224
   122  000855  BC20               	dw	48160
   123  000857  4CBE               	dw	19646
   124  000859  6B28               	dw	27432
   125  00085B  4E6E               	dw	20078
   126  00085D  02F9               	dw	761
   127  00085F  5015               	dw	20501
   128  000861  78EC               	dw	30956
   129  000863  60AD               	dw	24749
   130  000865  F2CA               	dw	62154
   131  000867  7149               	dw	29001
   132  000869                     __end_of__powers_:
   133                           	opt stack 0
   134  000869                     _dpowers:
   135                           	opt stack 0
   136  000869  0001               	dw	1
   137  00086B  0000               	dw	0
   138  00086D  000A               	dw	10
   139  00086F  0000               	dw	0
   140  000871  0064               	dw	100
   141  000873  0000               	dw	0
   142  000875  03E8               	dw	1000
   143  000877  0000               	dw	0
   144  000879  2710               	dw	10000
   145  00087B  0000               	dw	0
   146  00087D  86A0               	dw	34464
   147  00087F  0001               	dw	1
   148  000881  4240               	dw	16960
   149  000883  000F               	dw	15
   150  000885  9680               	dw	38528
   151  000887  0098               	dw	152
   152  000889  E100               	dw	57600
   153  00088B  05F5               	dw	1525
   154  00088D  CA00               	dw	51712
   155  00088F  3B9A               	dw	15258
   156  000891                     __end_of_dpowers:
   157                           	opt stack 0
   158  000891                     STR_1:
   159  000891  43                 	db	67	;'C'
   160  000892  69                 	db	105	;'i'
   161  000893  63                 	db	99	;'c'
   162  000894  6C                 	db	108	;'l'
   163  000895  6F                 	db	111	;'o'
   164  000896  20                 	db	32
   165  000897  72                 	db	114	;'r'
   166  000898  69                 	db	105	;'i'
   167  000899  63                 	db	99	;'c'
   168  00089A  61                 	db	97	;'a'
   169  00089B  72                 	db	114	;'r'
   170  00089C  69                 	db	105	;'i'
   171  00089D  63                 	db	99	;'c'
   172  00089E  61                 	db	97	;'a'
   173  00089F  2E                 	db	46
   174  0008A0  2E                 	db	46
   175  0008A1  00                 	db	0
   176  0008A2                     STR_4:
   177  0008A2  43                 	db	67	;'C'
   178  0008A3  61                 	db	97	;'a'
   179  0008A4  72                 	db	114	;'r'
   180  0008A5  69                 	db	105	;'i'
   181  0008A6  63                 	db	99	;'c'
   182  0008A7  61                 	db	97	;'a'
   183  0008A8  20                 	db	32
   184  0008A9  74                 	db	116	;'t'
   185  0008AA  65                 	db	101	;'e'
   186  0008AB  72                 	db	114	;'r'
   187  0008AC  6D                 	db	109	;'m'
   188  0008AD  69                 	db	105	;'i'
   189  0008AE  6E                 	db	110	;'n'
   190  0008AF  61                 	db	97	;'a'
   191  0008B0  74                 	db	116	;'t'
   192  0008B1  61                 	db	97	;'a'
   193  0008B2  00                 	db	0
   194  0008B3                     STR_5:
   195  0008B3  69                 	db	105	;'i'
   196  0008B4  6E                 	db	110	;'n'
   197  0008B5  69                 	db	105	;'i'
   198  0008B6  7A                 	db	122	;'z'
   199  0008B7  69                 	db	105	;'i'
   200  0008B8  61                 	db	97	;'a'
   201  0008B9  6C                 	db	108	;'l'
   202  0008BA  69                 	db	105	;'i'
   203  0008BB  7A                 	db	122	;'z'
   204  0008BC  7A                 	db	122	;'z'
   205  0008BD  61                 	db	97	;'a'
   206  0008BE  7A                 	db	122	;'z'
   207  0008BF  69                 	db	105	;'i'
   208  0008C0  6F                 	db	111	;'o'
   209  0008C1  6E                 	db	110	;'n'
   210  0008C2  65                 	db	101	;'e'
   211  0008C3  00                 	db	0
   212  0008C4                     STR_2:
   213  0008C4  56                 	db	86	;'V'
   214  0008C5  3A                 	db	58	;':'
   215  0008C6  25                 	db	37
   216  0008C7  2E                 	db	46
   217  0008C8  32                 	db	50	;'2'
   218  0008C9  66                 	db	102	;'f'
   219  0008CA  20                 	db	32
   220  0008CB  00                 	db	0
   221  0008CC                     STR_3:
   222  0008CC  49                 	db	73	;'I'
   223  0008CD  3A                 	db	58	;':'
   224  0008CE  25                 	db	37
   225  0008CF  2E                 	db	46
   226  0008D0  32                 	db	50	;'2'
   227  0008D1  66                 	db	102	;'f'
   228  0008D2  00                 	db	0
   229                           
   230                           ; #config settings
   231  0008D3  00                 	db	0	; dummy byte at the end
   232  0000                     
   233                           	psect	nvCOMRAM
   234  00005B                     __pnvCOMRAM:
   235                           	opt stack 0
   236  00005B                     _clock_counter_reference:
   237                           	opt stack 0
   238  00005B                     	ds	2
   239                           
   240                           	psect	nvBANK0
   241  00008F                     __pnvBANK0:
   242                           	opt stack 0
   243  00008F                     _rapporto:
   244                           	opt stack 0
   245  00008F                     	ds	4
   246  0000                     _ADCON0	set	4034
   247  0000                     _ADCON0bits	set	4034
   248  0000                     _ADCON1	set	4033
   249  0000                     _ADCON2	set	4032
   250  0000                     _ADRESH	set	4036
   251  0000                     _ADRESL	set	4035
   252  0000                     _LATA	set	3977
   253  0000                     _LATB	set	3978
   254  0000                     _LATBbits	set	3978
   255  0000                     _LATC	set	3979
   256  0000                     _LATCbits	set	3979
   257  0000                     _PORTCbits	set	3970
   258  0000                     _TRISA	set	3986
   259  0000                     _TRISB	set	3987
   260  0000                     _TRISC	set	3988
   261                           
   262                           	psect	cinit
   263  002E28                     __pcinit:
   264                           	opt stack 0
   265  002E28                     start_initialization:
   266                           	opt stack 0
   267  002E28                     __initialization:
   268                           	opt stack 0
   269                           
   270                           ; Clear objects allocated to BANK0 (22 bytes)
   271  002E28  EE00  F079         	lfsr	0,__pbssBANK0
   272  002E2C  0E16               	movlw	22
   273  002E2E                     clear_0:
   274  002E2E  6AEE               	clrf	postinc0,c
   275  002E30  06E8               	decf	wreg,f,c
   276  002E32  E1FD               	bnz	clear_0
   277                           
   278                           ; Clear objects allocated to COMRAM (2 bytes)
   279  002E34  6A5E               	clrf	(__pbssCOMRAM+1)& (0+255),c
   280  002E36  6A5D               	clrf	__pbssCOMRAM& (0+255),c
   281                           
   282                           ; Initialize objects allocated to BANK0 (3 bytes)
   283                           ; load TBLPTR registers with __pidataBANK0
   284  002E38  0E4E               	movlw	low __pidataBANK0
   285  002E3A  6EF6               	movwf	tblptrl,c
   286  002E3C  0E30               	movlw	high __pidataBANK0
   287  002E3E  6EF7               	movwf	tblptrh,c
   288  002E40  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   289  002E42  6EF8               	movwf	tblptru,c
   290  002E44  0009               	tblrd		*+	;fetch initializer
   291  002E46  CFF5 F093          	movff	tablat,__pdataBANK0
   292  002E4A  0009               	tblrd		*+	;fetch initializer
   293  002E4C  CFF5 F094          	movff	tablat,__pdataBANK0+1
   294  002E50  0009               	tblrd		*+	;fetch initializer
   295  002E52  CFF5 F095          	movff	tablat,__pdataBANK0+2
   296                           
   297                           ; Initialize objects allocated to COMRAM (1 bytes)
   298                           ; load TBLPTR registers with __pidataCOMRAM
   299  002E56  0E51               	movlw	low __pidataCOMRAM
   300  002E58  6EF6               	movwf	tblptrl,c
   301  002E5A  0E30               	movlw	high __pidataCOMRAM
   302  002E5C  6EF7               	movwf	tblptrh,c
   303  002E5E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   304  002E60  6EF8               	movwf	tblptru,c
   305  002E62  0009               	tblrd		*+	;fetch initializer
   306  002E64  CFF5 F05F          	movff	tablat,__pdataCOMRAM
   307  002E68                     end_of_initialization:
   308                           	opt stack 0
   309  002E68                     __end_of__initialization:
   310                           	opt stack 0
   311  002E68  0E00               	movlw	low (__Lmediumconst shr (0+16))
   312  002E6A  6EF8               	movwf	tblptru,c
   313  002E6C  0100               	movlb	0
   314  002E6E  EFBE  F016         	goto	_main	;jump to C main() function
   315                           tblptru	equ	0xFF8
   316                           tblptrh	equ	0xFF7
   317                           tblptrl	equ	0xFF6
   318                           tablat	equ	0xFF5
   319                           postinc0	equ	0xFEE
   320                           wreg	equ	0xFE8
   321                           
   322                           	psect	bssCOMRAM
   323  00005D                     __pbssCOMRAM:
   324                           	opt stack 0
   325  00005D                     _lettura:
   326                           	opt stack 0
   327  00005D                     	ds	2
   328                           tblptru	equ	0xFF8
   329                           tblptrh	equ	0xFF7
   330                           tblptrl	equ	0xFF6
   331                           tablat	equ	0xFF5
   332                           postinc0	equ	0xFEE
   333                           wreg	equ	0xFE8
   334                           
   335                           	psect	dataCOMRAM
   336  00005F                     __pdataCOMRAM:
   337                           	opt stack 0
   338  00005F                     _delay_quartz_frequency_value:
   339                           	opt stack 0
   340  00005F                     	ds	1
   341                           tblptru	equ	0xFF8
   342                           tblptrh	equ	0xFF7
   343                           tblptrl	equ	0xFF6
   344                           tablat	equ	0xFF5
   345                           postinc0	equ	0xFEE
   346                           wreg	equ	0xFE8
   347                           
   348                           	psect	bssBANK0
   349  000079                     __pbssBANK0:
   350                           	opt stack 0
   351  000079                     LCD_write_integer@F4700:
   352                           	opt stack 0
   353  000079                     	ds	6
   354  00007F                     _current:
   355                           	opt stack 0
   356  00007F                     	ds	4
   357  000083                     _voltage:
   358                           	opt stack 0
   359  000083                     	ds	4
   360  000087                     _str:
   361                           	opt stack 0
   362  000087                     	ds	8
   363                           tblptru	equ	0xFF8
   364                           tblptrh	equ	0xFF7
   365                           tblptrl	equ	0xFF6
   366                           tablat	equ	0xFF5
   367                           postinc0	equ	0xFEE
   368                           wreg	equ	0xFE8
   369                           
   370                           	psect	dataBANK0
   371  000093                     __pdataBANK0:
   372                           	opt stack 0
   373  000093                     _combinazioni:
   374                           	opt stack 0
   375  000093                     	ds	3
   376                           tblptru	equ	0xFF8
   377                           tblptrh	equ	0xFF7
   378                           tblptrl	equ	0xFF6
   379                           tablat	equ	0xFF5
   380                           postinc0	equ	0xFEE
   381                           wreg	equ	0xFE8
   382                           
   383                           	psect	cstackBANK0
   384  000060                     __pcstackBANK0:
   385                           	opt stack 0
   386  000060                     _sprintf$1109:
   387                           	opt stack 0
   388                           
   389                           ; 4 bytes @ 0x0
   390  000060                     	ds	4
   391  000064                     sprintf@ap:
   392                           	opt stack 0
   393                           
   394                           ; 2 bytes @ 0x4
   395  000064                     	ds	2
   396  000066                     sprintf@flag:
   397                           	opt stack 0
   398                           
   399                           ; 2 bytes @ 0x6
   400  000066                     	ds	2
   401  000068                     sprintf@val:
   402                           	opt stack 0
   403                           
   404                           ; 4 bytes @ 0x8
   405  000068                     	ds	4
   406  00006C                     sprintf@exp:
   407                           	opt stack 0
   408                           
   409                           ; 2 bytes @ 0xC
   410  00006C                     	ds	2
   411  00006E                     sprintf@tmpval:
   412                           	opt stack 0
   413                           
   414                           ; 4 bytes @ 0xE
   415  00006E                     	ds	4
   416  000072                     sprintf@prec:
   417                           	opt stack 0
   418                           
   419                           ; 2 bytes @ 0x12
   420  000072                     	ds	2
   421  000074                     sprintf@fval:
   422                           	opt stack 0
   423                           
   424                           ; 4 bytes @ 0x14
   425  000074                     	ds	4
   426  000078                     sprintf@c:
   427                           	opt stack 0
   428                           
   429                           ; 1 bytes @ 0x18
   430  000078                     	ds	1
   431                           tblptru	equ	0xFF8
   432                           tblptrh	equ	0xFF7
   433                           tblptrl	equ	0xFF6
   434                           tablat	equ	0xFF5
   435                           postinc0	equ	0xFEE
   436                           wreg	equ	0xFE8
   437                           
   438                           	psect	cstackCOMRAM
   439  000001                     __pcstackCOMRAM:
   440                           	opt stack 0
   441  000001                     ??_isdigit:
   442  000001                     ?___wmul:
   443                           	opt stack 0
   444  000001                     ?___awmod:
   445                           	opt stack 0
   446  000001                     ?__tdiv_to_l_:
   447                           	opt stack 0
   448  000001                     ?__div_to_l_:
   449                           	opt stack 0
   450  000001                     ?___fldiv:
   451                           	opt stack 0
   452  000001                     ?___flneg:
   453                           	opt stack 0
   454  000001                     ?___lldiv:
   455                           	opt stack 0
   456  000001                     ?___llmod:
   457                           	opt stack 0
   458  000001                     delay_set_quartz@frequency:
   459                           	opt stack 0
   460  000001                     ___wmul@multiplier:
   461                           	opt stack 0
   462  000001                     ___awmod@dividend:
   463                           	opt stack 0
   464  000001                     __div_to_l_@f1:
   465                           	opt stack 0
   466  000001                     ___flge@ff1:
   467                           	opt stack 0
   468  000001                     ___flneg@f1:
   469                           	opt stack 0
   470  000001                     __tdiv_to_l_@f1:
   471                           	opt stack 0
   472  000001                     ___lldiv@dividend:
   473                           	opt stack 0
   474  000001                     ___llmod@dividend:
   475                           	opt stack 0
   476  000001                     ___fldiv@b:
   477                           	opt stack 0
   478                           
   479                           ; 4 bytes @ 0x0
   480  000001                     	ds	1
   481  000002                     _isdigit$733:
   482                           	opt stack 0
   483                           
   484                           ; 1 bytes @ 0x1
   485  000002                     	ds	1
   486  000003                     isdigit@c:
   487                           	opt stack 0
   488  000003                     ___wmul@multiplicand:
   489                           	opt stack 0
   490  000003                     ___awmod@divisor:
   491                           	opt stack 0
   492                           
   493                           ; 2 bytes @ 0x2
   494  000003                     	ds	2
   495  000005                     ___awmod@counter:
   496                           	opt stack 0
   497  000005                     ___wmul@product:
   498                           	opt stack 0
   499  000005                     __div_to_l_@f2:
   500                           	opt stack 0
   501  000005                     ___flge@ff2:
   502                           	opt stack 0
   503  000005                     __tdiv_to_l_@f2:
   504                           	opt stack 0
   505  000005                     ___lldiv@divisor:
   506                           	opt stack 0
   507  000005                     ___llmod@divisor:
   508                           	opt stack 0
   509  000005                     ___fldiv@a:
   510                           	opt stack 0
   511                           
   512                           ; 4 bytes @ 0x4
   513  000005                     	ds	1
   514  000006                     ___awmod@sign:
   515                           	opt stack 0
   516                           
   517                           ; 1 bytes @ 0x5
   518  000006                     	ds	1
   519  000007                     ?___awdiv:
   520                           	opt stack 0
   521  000007                     delay_ms@value_ms:
   522                           	opt stack 0
   523  000007                     ___awdiv@dividend:
   524                           	opt stack 0
   525                           
   526                           ; 2 bytes @ 0x6
   527  000007                     	ds	2
   528  000009                     ??__tdiv_to_l_:
   529  000009                     ??___fldiv:
   530  000009                     ??___flge:
   531  000009                     LCD_send_command@D2:
   532                           	opt stack 0
   533  000009                     ___llmod@counter:
   534                           	opt stack 0
   535  000009                     ___awdiv@divisor:
   536                           	opt stack 0
   537  000009                     __div_to_l_@quot:
   538                           	opt stack 0
   539  000009                     ___lldiv@quotient:
   540                           	opt stack 0
   541                           
   542                           ; 4 bytes @ 0x8
   543  000009                     	ds	1
   544  00000A                     LCD_send_command@D1:
   545                           	opt stack 0
   546                           
   547                           ; 1 bytes @ 0x9
   548  00000A                     	ds	1
   549  00000B                     LCD_send_command@D0:
   550                           	opt stack 0
   551  00000B                     ___awdiv@counter:
   552                           	opt stack 0
   553                           
   554                           ; 1 bytes @ 0xA
   555  00000B                     	ds	1
   556  00000C                     LCD_send_command@D3:
   557                           	opt stack 0
   558  00000C                     ___awdiv@sign:
   559                           	opt stack 0
   560  00000C                     __tdiv_to_l_@quot:
   561                           	opt stack 0
   562                           
   563                           ; 4 bytes @ 0xB
   564  00000C                     	ds	1
   565  00000D                     LCD_goto_line@line:
   566                           	opt stack 0
   567  00000D                     LCD_write_char@D3:
   568                           	opt stack 0
   569  00000D                     LCD_cursor@blinking:
   570                           	opt stack 0
   571  00000D                     __div_to_l_@cntr:
   572                           	opt stack 0
   573  00000D                     ___lldiv@counter:
   574                           	opt stack 0
   575  00000D                     ___fldiv@sign:
   576                           	opt stack 0
   577  00000D                     ___awdiv@quotient:
   578                           	opt stack 0
   579                           
   580                           ; 2 bytes @ 0xC
   581  00000D                     	ds	1
   582  00000E                     LCD_write_char@D2:
   583                           	opt stack 0
   584  00000E                     LCD_cursor@active:
   585                           	opt stack 0
   586  00000E                     __div_to_l_@exp1:
   587                           	opt stack 0
   588  00000E                     ___fldiv@rem:
   589                           	opt stack 0
   590                           
   591                           ; 4 bytes @ 0xD
   592  00000E                     	ds	1
   593  00000F                     ?___flmul:
   594                           	opt stack 0
   595  00000F                     ?___xxtofl:
   596                           	opt stack 0
   597  00000F                     LCD_write_char@D1:
   598                           	opt stack 0
   599  00000F                     LCD_initialize@quartz_frequency:
   600                           	opt stack 0
   601  00000F                     ___flmul@b:
   602                           	opt stack 0
   603  00000F                     ___xxtofl@val:
   604                           	opt stack 0
   605                           
   606                           ; 4 bytes @ 0xE
   607  00000F                     	ds	1
   608  000010                     LCD_write_char@D0:
   609                           	opt stack 0
   610  000010                     __tdiv_to_l_@cntr:
   611                           	opt stack 0
   612                           
   613                           ; 1 bytes @ 0xF
   614  000010                     	ds	1
   615  000011                     LCD_write_char@value:
   616                           	opt stack 0
   617  000011                     __tdiv_to_l_@exp1:
   618                           	opt stack 0
   619                           
   620                           ; 1 bytes @ 0x10
   621  000011                     	ds	1
   622  000012                     LCD_write_message@buffer:
   623                           	opt stack 0
   624  000012                     LCD_write_string@buffer:
   625                           	opt stack 0
   626  000012                     ___fldiv@new_exp:
   627                           	opt stack 0
   628                           
   629                           ; 2 bytes @ 0x11
   630  000012                     	ds	1
   631  000013                     ??___xxtofl:
   632  000013                     ___flmul@a:
   633                           	opt stack 0
   634                           
   635                           ; 4 bytes @ 0x12
   636  000013                     	ds	1
   637  000014                     ___fldiv@grs:
   638                           	opt stack 0
   639                           
   640                           ; 4 bytes @ 0x13
   641  000014                     	ds	3
   642  000017                     ??___flmul:
   643  000017                     ___xxtofl@sign:
   644                           	opt stack 0
   645                           
   646                           ; 1 bytes @ 0x16
   647  000017                     	ds	1
   648  000018                     ___fldiv@bexp:
   649                           	opt stack 0
   650  000018                     ___xxtofl@exp:
   651                           	opt stack 0
   652                           
   653                           ; 1 bytes @ 0x17
   654  000018                     	ds	1
   655  000019                     ___fldiv@aexp:
   656                           	opt stack 0
   657  000019                     ___xxtofl@arg:
   658                           	opt stack 0
   659                           
   660                           ; 4 bytes @ 0x18
   661  000019                     	ds	2
   662  00001B                     ___flmul@sign:
   663                           	opt stack 0
   664                           
   665                           ; 1 bytes @ 0x1A
   666  00001B                     	ds	1
   667  00001C                     ___flmul@grs:
   668                           	opt stack 0
   669                           
   670                           ; 4 bytes @ 0x1B
   671  00001C                     	ds	4
   672  000020                     ___flmul@aexp:
   673                           	opt stack 0
   674                           
   675                           ; 1 bytes @ 0x1F
   676  000020                     	ds	1
   677  000021                     ___flmul@bexp:
   678                           	opt stack 0
   679                           
   680                           ; 1 bytes @ 0x20
   681  000021                     	ds	1
   682  000022                     ___flmul@prod:
   683                           	opt stack 0
   684                           
   685                           ; 4 bytes @ 0x21
   686  000022                     	ds	4
   687  000026                     ___flmul@temp:
   688                           	opt stack 0
   689                           
   690                           ; 2 bytes @ 0x25
   691  000026                     	ds	2
   692  000028                     ??_read_adc:
   693  000028                     ?_fround:
   694                           	opt stack 0
   695  000028                     ?_scale:
   696                           	opt stack 0
   697                           
   698                           ; 4 bytes @ 0x27
   699  000028                     	ds	2
   700  00002A                     read_adc@i:
   701                           	opt stack 0
   702                           
   703                           ; 1 bytes @ 0x29
   704  00002A                     	ds	2
   705  00002C                     _fround$1107:
   706                           	opt stack 0
   707  00002C                     _scale$1108:
   708                           	opt stack 0
   709                           
   710                           ; 4 bytes @ 0x2B
   711  00002C                     	ds	4
   712  000030                     scale@scl:
   713                           	opt stack 0
   714  000030                     _fround$1106:
   715                           	opt stack 0
   716                           
   717                           ; 4 bytes @ 0x2F
   718  000030                     	ds	1
   719  000031                     ?___fltol:
   720                           	opt stack 0
   721  000031                     ___fltol@f1:
   722                           	opt stack 0
   723                           
   724                           ; 4 bytes @ 0x30
   725  000031                     	ds	3
   726  000034                     fround@prec:
   727                           	opt stack 0
   728                           
   729                           ; 1 bytes @ 0x33
   730  000034                     	ds	1
   731  000035                     ??___fltol:
   732  000035                     ?___fladd:
   733                           	opt stack 0
   734  000035                     ___fladd@b:
   735                           	opt stack 0
   736                           
   737                           ; 4 bytes @ 0x34
   738  000035                     	ds	4
   739  000039                     ___fltol@sign1:
   740                           	opt stack 0
   741  000039                     ___fladd@a:
   742                           	opt stack 0
   743                           
   744                           ; 4 bytes @ 0x38
   745  000039                     	ds	1
   746  00003A                     ___fltol@exp1:
   747                           	opt stack 0
   748                           
   749                           ; 1 bytes @ 0x39
   750  00003A                     	ds	3
   751  00003D                     ??___fladd:
   752                           
   753                           ; 1 bytes @ 0x3C
   754  00003D                     	ds	8
   755  000045                     ___fladd@signs:
   756                           	opt stack 0
   757                           
   758                           ; 1 bytes @ 0x44
   759  000045                     	ds	1
   760  000046                     ___fladd@aexp:
   761                           	opt stack 0
   762                           
   763                           ; 1 bytes @ 0x45
   764  000046                     	ds	1
   765  000047                     ___fladd@bexp:
   766                           	opt stack 0
   767                           
   768                           ; 1 bytes @ 0x46
   769  000047                     	ds	1
   770  000048                     ___fladd@grs:
   771                           	opt stack 0
   772                           
   773                           ; 1 bytes @ 0x47
   774  000048                     	ds	1
   775  000049                     ?___flsub:
   776                           	opt stack 0
   777  000049                     ___flsub@b:
   778                           	opt stack 0
   779                           
   780                           ; 4 bytes @ 0x48
   781  000049                     	ds	4
   782  00004D                     ___flsub@a:
   783                           	opt stack 0
   784                           
   785                           ; 4 bytes @ 0x4C
   786  00004D                     	ds	4
   787  000051                     ?_sprintf:
   788                           	opt stack 0
   789  000051                     sprintf@sp:
   790                           	opt stack 0
   791                           
   792                           ; 2 bytes @ 0x50
   793  000051                     	ds	2
   794  000053                     sprintf@f:
   795                           	opt stack 0
   796                           
   797                           ; 2 bytes @ 0x52
   798  000053                     	ds	6
   799  000059                     ??_sprintf:
   800                           
   801                           ; 1 bytes @ 0x58
   802  000059                     	ds	2
   803  00005B                     tblptru	equ	0xFF8
   804                           tblptrh	equ	0xFF7
   805                           tblptrl	equ	0xFF6
   806                           tablat	equ	0xFF5
   807                           postinc0	equ	0xFEE
   808                           wreg	equ	0xFE8
   809                           
   810                           ; 1 bytes @ 0x5A
   811 ;;
   812 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   813 ;;
   814 ;; *************** function _main *****************
   815 ;; Defined at:
   816 ;;		line 45 in file "tester.c"
   817 ;; Parameters:    Size  Location     Type
   818 ;;		None
   819 ;; Auto vars:     Size  Location     Type
   820 ;;		None
   821 ;; Return value:  Size  Location     Type
   822 ;;                  1    wreg      void 
   823 ;; Registers used:
   824 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   825 ;; Tracked objects:
   826 ;;		On entry : 0/0
   827 ;;		On exit  : 0/0
   828 ;;		Unchanged: 0/0
   829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   830 ;;      Params:         0       0       0       0       0       0       0       0       0
   831 ;;      Locals:         0       0       0       0       0       0       0       0       0
   832 ;;      Temps:          0       0       0       0       0       0       0       0       0
   833 ;;      Totals:         0       0       0       0       0       0       0       0       0
   834 ;;Total ram usage:        0 bytes
   835 ;; Hardware stack levels required when called:    7
   836 ;; This function calls:
   837 ;;		___fldiv
   838 ;;		_delay_set_quartz
   839 ;;		_inizializzazione
   840 ;;		_read_adc
   841 ;;		_ricarica
   842 ;; This function is called by:
   843 ;;		Startup code after reset
   844 ;; This function uses a non-reentrant model
   845 ;;
   846                           
   847                           	psect	text0
   848  002D7C                     __ptext0:
   849                           	opt stack 0
   850  002D7C                     _main:
   851                           	opt stack 24
   852                           
   853                           ;tester.c: 46: delay_set_quartz (16);
   854                           
   855                           ;incstack = 0
   856  002D7C  0E10               	movlw	16
   857  002D7E  EC23  F018         	call	_delay_set_quartz
   858                           
   859                           ;tester.c: 47: rapporto = (15000 + 7500);
   860  002D82  0E00               	movlw	0
   861  002D84  0100               	movlb	0	; () banked
   862  002D86  6F8F               	movwf	_rapporto& (0+255),b
   863  002D88  0EC8               	movlw	200
   864  002D8A  6F90               	movwf	(_rapporto+1)& (0+255),b
   865  002D8C  0EAF               	movlw	175
   866  002D8E  6F91               	movwf	(_rapporto+2)& (0+255),b
   867  002D90  0E46               	movlw	70
   868  002D92  6F92               	movwf	(_rapporto+3)& (0+255),b
   869                           
   870                           ; BSR set to: 0
   871                           ;tester.c: 48: rapporto = 7500 / rapporto;
   872  002D94  0E00               	movlw	0
   873  002D96  6E01               	movwf	___fldiv@b,c
   874  002D98  0E60               	movlw	96
   875  002D9A  6E02               	movwf	___fldiv@b+1,c
   876  002D9C  0EEA               	movlw	234
   877  002D9E  6E03               	movwf	___fldiv@b+2,c
   878  002DA0  0E45               	movlw	69
   879  002DA2  6E04               	movwf	___fldiv@b+3,c
   880  002DA4  C08F  F005         	movff	_rapporto,___fldiv@a
   881  002DA8  C090  F006         	movff	_rapporto+1,___fldiv@a+1
   882  002DAC  C091  F007         	movff	_rapporto+2,___fldiv@a+2
   883  002DB0  C092  F008         	movff	_rapporto+3,___fldiv@a+3
   884  002DB4  ECC4  F00D         	call	___fldiv	;wreg free
   885  002DB8  C001  F08F         	movff	?___fldiv,_rapporto
   886  002DBC  C002  F090         	movff	?___fldiv+1,_rapporto+1
   887  002DC0  C003  F091         	movff	?___fldiv+2,_rapporto+2
   888  002DC4  C004  F092         	movff	?___fldiv+3,_rapporto+3
   889                           
   890                           ;tester.c: 49: inizializzazione();
   891  002DC8  ECED  F016         	call	_inizializzazione	;wreg free
   892                           
   893                           ;tester.c: 50: read_adc();
   894  002DCC  EC5B  F010         	call	_read_adc	;wreg free
   895  002DD0                     l3722:
   896                           
   897                           ;tester.c: 52: ricarica();
   898  002DD0  EC34  F011         	call	_ricarica	;wreg free
   899                           
   900                           ;tester.c: 53: read_adc();
   901  002DD4  EC5B  F010         	call	_read_adc	;wreg free
   902  002DD8  D7FB               	goto	l3722
   903  002DDA                     __end_of_main:
   904                           	opt stack 0
   905                           tblptru	equ	0xFF8
   906                           tblptrh	equ	0xFF7
   907                           tblptrl	equ	0xFF6
   908                           tablat	equ	0xFF5
   909                           postinc0	equ	0xFEE
   910                           wreg	equ	0xFE8
   911                           
   912 ;; *************** function _ricarica *****************
   913 ;; Defined at:
   914 ;;		line 57 in file "tester.c"
   915 ;; Parameters:    Size  Location     Type
   916 ;;		None
   917 ;; Auto vars:     Size  Location     Type
   918 ;;		None
   919 ;; Return value:  Size  Location     Type
   920 ;;                  1    wreg      void 
   921 ;; Registers used:
   922 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   923 ;; Tracked objects:
   924 ;;		On entry : 0/0
   925 ;;		On exit  : 0/0
   926 ;;		Unchanged: 0/0
   927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   928 ;;      Params:         0       0       0       0       0       0       0       0       0
   929 ;;      Locals:         0       0       0       0       0       0       0       0       0
   930 ;;      Temps:          0       0       0       0       0       0       0       0       0
   931 ;;      Totals:         0       0       0       0       0       0       0       0       0
   932 ;;Total ram usage:        0 bytes
   933 ;; Hardware stack levels used:    1
   934 ;; Hardware stack levels required when called:    6
   935 ;; This function calls:
   936 ;;		_LCD_goto_line
   937 ;;		_LCD_write_message
   938 ;;		_LCD_write_string
   939 ;;		___flge
   940 ;;		_delay_ms
   941 ;;		_read_adc
   942 ;;		_sprintf
   943 ;; This function is called by:
   944 ;;		_main
   945 ;; This function uses a non-reentrant model
   946 ;;
   947                           
   948                           	psect	text1
   949  002268                     __ptext1:
   950                           	opt stack 0
   951  002268                     _ricarica:
   952                           	opt stack 24
   953                           
   954                           ;tester.c: 58: read_adc();
   955                           
   956                           ;incstack = 0
   957  002268  EC5B  F010         	call	_read_adc	;wreg free
   958                           
   959                           ;tester.c: 59: while ((current < -1)&&(voltage < 14.5)) {
   960  00226C  D048               	goto	l3636
   961  00226E                     l160:
   962                           
   963                           ;tester.c: 60: PORTCbits.RC6 = 1;
   964  00226E  8C82               	bsf	3970,6,c	;volatile
   965                           
   966                           ;tester.c: 61: LCD_write_message("Ciclo ricarica..");
   967  002270  0E91               	movlw	low STR_1
   968  002272  6E12               	movwf	LCD_write_message@buffer,c
   969  002274  0E08               	movlw	high STR_1
   970  002276  6E13               	movwf	LCD_write_message@buffer+1,c
   971  002278  ECA4  F017         	call	_LCD_write_message	;wreg free
   972                           
   973                           ;tester.c: 62: LCD_goto_line(2);
   974  00227C  0E02               	movlw	2
   975  00227E  EC3C  F015         	call	_LCD_goto_line
   976                           
   977                           ;tester.c: 63: sprintf(str, "V:%.2f ", voltage);
   978  002282  0E87               	movlw	low _str
   979  002284  6E51               	movwf	sprintf@sp,c
   980  002286  0E00               	movlw	high _str
   981  002288  6E52               	movwf	sprintf@sp+1,c
   982  00228A  0EC4               	movlw	low STR_2
   983  00228C  6E53               	movwf	sprintf@f,c
   984  00228E  0E08               	movlw	high STR_2
   985  002290  6E54               	movwf	sprintf@f+1,c
   986  002292  C083  F055         	movff	_voltage,?_sprintf+4
   987  002296  C084  F056         	movff	_voltage+1,?_sprintf+5
   988  00229A  C085  F057         	movff	_voltage+2,?_sprintf+6
   989  00229E  C086  F058         	movff	_voltage+3,?_sprintf+7
   990  0022A2  EC6A  F004         	call	_sprintf	;wreg free
   991                           
   992                           ;tester.c: 64: str[7] = '\0';
   993  0022A6  0E00               	movlw	0
   994  0022A8  0100               	movlb	0	; () banked
   995  0022AA  6F8E               	movwf	(_str+7)& (0+255),b
   996                           
   997                           ; BSR set to: 0
   998                           ;tester.c: 65: LCD_write_string(str);
   999  0022AC  0E87               	movlw	low _str
  1000  0022AE  6E12               	movwf	LCD_write_string@buffer,c
  1001  0022B0  0E00               	movlw	high _str
  1002  0022B2  6E13               	movwf	LCD_write_string@buffer+1,c
  1003  0022B4  ECF3  F017         	call	_LCD_write_string	;wreg free
  1004                           
  1005                           ;tester.c: 66: sprintf(str, "I:%.2f", current);
  1006  0022B8  0E87               	movlw	low _str
  1007  0022BA  6E51               	movwf	sprintf@sp,c
  1008  0022BC  0E00               	movlw	high _str
  1009  0022BE  6E52               	movwf	sprintf@sp+1,c
  1010  0022C0  0ECC               	movlw	low STR_3
  1011  0022C2  6E53               	movwf	sprintf@f,c
  1012  0022C4  0E08               	movlw	high STR_3
  1013  0022C6  6E54               	movwf	sprintf@f+1,c
  1014  0022C8  C07F  F055         	movff	_current,?_sprintf+4
  1015  0022CC  C080  F056         	movff	_current+1,?_sprintf+5
  1016  0022D0  C081  F057         	movff	_current+2,?_sprintf+6
  1017  0022D4  C082  F058         	movff	_current+3,?_sprintf+7
  1018  0022D8  EC6A  F004         	call	_sprintf	;wreg free
  1019                           
  1020                           ;tester.c: 67: str[7] = '\0';
  1021  0022DC  0E00               	movlw	0
  1022  0022DE  0100               	movlb	0	; () banked
  1023  0022E0  6F8E               	movwf	(_str+7)& (0+255),b
  1024                           
  1025                           ; BSR set to: 0
  1026                           ;tester.c: 68: LCD_write_string(str);
  1027  0022E2  0E87               	movlw	low _str
  1028  0022E4  6E12               	movwf	LCD_write_string@buffer,c
  1029  0022E6  0E00               	movlw	high _str
  1030  0022E8  6E13               	movwf	LCD_write_string@buffer+1,c
  1031  0022EA  ECF3  F017         	call	_LCD_write_string	;wreg free
  1032                           
  1033                           ;tester.c: 69: read_adc();
  1034  0022EE  EC5B  F010         	call	_read_adc	;wreg free
  1035                           
  1036                           ;tester.c: 70: delay_ms(500);
  1037  0022F2  0E01               	movlw	1
  1038  0022F4  6E08               	movwf	delay_ms@value_ms+1,c
  1039  0022F6  0EF4               	movlw	244
  1040  0022F8  6E07               	movwf	delay_ms@value_ms,c
  1041  0022FA  EC5C  F017         	call	_delay_ms	;wreg free
  1042  0022FE                     l3636:
  1043  0022FE  C07F  F001         	movff	_current,___flge@ff1
  1044  002302  C080  F002         	movff	_current+1,___flge@ff1+1
  1045  002306  C081  F003         	movff	_current+2,___flge@ff1+2
  1046  00230A  C082  F004         	movff	_current+3,___flge@ff1+3
  1047  00230E  0E00               	movlw	0
  1048  002310  6E05               	movwf	___flge@ff2,c
  1049  002312  0E00               	movlw	0
  1050  002314  6E06               	movwf	___flge@ff2+1,c
  1051  002316  0E80               	movlw	128
  1052  002318  6E07               	movwf	___flge@ff2+2,c
  1053  00231A  0EBF               	movlw	191
  1054  00231C  6E08               	movwf	___flge@ff2+3,c
  1055  00231E  ECB1  F013         	call	___flge	;wreg free
  1056  002322  B0D8               	btfsc	status,0,c
  1057  002324  D014               	goto	l3640
  1058  002326  C083  F001         	movff	_voltage,___flge@ff1
  1059  00232A  C084  F002         	movff	_voltage+1,___flge@ff1+1
  1060  00232E  C085  F003         	movff	_voltage+2,___flge@ff1+2
  1061  002332  C086  F004         	movff	_voltage+3,___flge@ff1+3
  1062  002336  0E00               	movlw	0
  1063  002338  6E05               	movwf	___flge@ff2,c
  1064  00233A  0E00               	movlw	0
  1065  00233C  6E06               	movwf	___flge@ff2+1,c
  1066  00233E  0E68               	movlw	104
  1067  002340  6E07               	movwf	___flge@ff2+2,c
  1068  002342  0E41               	movlw	65
  1069  002344  6E08               	movwf	___flge@ff2+3,c
  1070  002346  ECB1  F013         	call	___flge	;wreg free
  1071  00234A  A0D8               	btfss	status,0,c
  1072  00234C  D790               	goto	l160
  1073  00234E                     l3640:
  1074                           
  1075                           ;tester.c: 71: }
  1076                           ;tester.c: 72: if ((current > -1)&&(voltage > 14.5)) {
  1077  00234E  0E00               	movlw	0
  1078  002350  6E01               	movwf	___flge@ff1,c
  1079  002352  0E00               	movlw	0
  1080  002354  6E02               	movwf	___flge@ff1+1,c
  1081  002356  0E80               	movlw	128
  1082  002358  6E03               	movwf	___flge@ff1+2,c
  1083  00235A  0EBF               	movlw	191
  1084  00235C  6E04               	movwf	___flge@ff1+3,c
  1085  00235E  C07F  F005         	movff	_current,___flge@ff2
  1086  002362  C080  F006         	movff	_current+1,___flge@ff2+1
  1087  002366  C081  F007         	movff	_current+2,___flge@ff2+2
  1088  00236A  C082  F008         	movff	_current+3,___flge@ff2+3
  1089  00236E  ECB1  F013         	call	___flge	;wreg free
  1090  002372  B0D8               	btfsc	status,0,c
  1091  002374  0012               	return	
  1092  002376  0E00               	movlw	0
  1093  002378  6E01               	movwf	___flge@ff1,c
  1094  00237A  0E00               	movlw	0
  1095  00237C  6E02               	movwf	___flge@ff1+1,c
  1096  00237E  0E68               	movlw	104
  1097  002380  6E03               	movwf	___flge@ff1+2,c
  1098  002382  0E41               	movlw	65
  1099  002384  6E04               	movwf	___flge@ff1+3,c
  1100  002386  C083  F005         	movff	_voltage,___flge@ff2
  1101  00238A  C084  F006         	movff	_voltage+1,___flge@ff2+1
  1102  00238E  C085  F007         	movff	_voltage+2,___flge@ff2+2
  1103  002392  C086  F008         	movff	_voltage+3,___flge@ff2+3
  1104  002396  ECB1  F013         	call	___flge	;wreg free
  1105  00239A  B0D8               	btfsc	status,0,c
  1106  00239C  0012               	return	
  1107                           
  1108                           ;tester.c: 73: LCD_write_message("Carica terminata");
  1109  00239E  0EA2               	movlw	low STR_4
  1110  0023A0  6E12               	movwf	LCD_write_message@buffer,c
  1111  0023A2  0E08               	movlw	high STR_4
  1112  0023A4  6E13               	movwf	LCD_write_message@buffer+1,c
  1113  0023A6  ECA4  F017         	call	_LCD_write_message	;wreg free
  1114                           
  1115                           ;tester.c: 74: delay_ms(5000);
  1116  0023AA  0E13               	movlw	19
  1117  0023AC  6E08               	movwf	delay_ms@value_ms+1,c
  1118  0023AE  0E88               	movlw	136
  1119  0023B0  6E07               	movwf	delay_ms@value_ms,c
  1120  0023B2  EC5C  F017         	call	_delay_ms	;wreg free
  1121  0023B6  0012               	return	
  1122  0023B8                     __end_of_ricarica:
  1123                           	opt stack 0
  1124                           tblptru	equ	0xFF8
  1125                           tblptrh	equ	0xFF7
  1126                           tblptrl	equ	0xFF6
  1127                           tablat	equ	0xFF5
  1128                           postinc0	equ	0xFEE
  1129                           wreg	equ	0xFE8
  1130                           status	equ	0xFD8
  1131                           
  1132 ;; *************** function _sprintf *****************
  1133 ;; Defined at:
  1134 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\doprnt.c"
  1135 ;; Parameters:    Size  Location     Type
  1136 ;;  sp              2   80[COMRAM] PTR unsigned char 
  1137 ;;		 -> str(8), 
  1138 ;;  f               2   82[COMRAM] PTR const unsigned char 
  1139 ;;		 -> STR_3(7), STR_2(8), 
  1140 ;; Auto vars:     Size  Location     Type
  1141 ;;  fval            4   20[BANK0 ] PTR const unsigned char 
  1142 ;;  tmpval          4   14[BANK0 ] struct .
  1143 ;;  val             4    8[BANK0 ] unsigned long 
  1144 ;;  cp              3    0        PTR const unsigned char 
  1145 ;;  prec            2   18[BANK0 ] int 
  1146 ;;  exp             2   12[BANK0 ] int 
  1147 ;;  flag            2    6[BANK0 ] unsigned short 
  1148 ;;  ap              2    4[BANK0 ] PTR void [1]
  1149 ;;		 -> ?_sprintf(2), 
  1150 ;;  len             2    0        unsigned int 
  1151 ;;  width           2    0        int 
  1152 ;;  c               1   24[BANK0 ] char 
  1153 ;;  d               1    0        unsigned char 
  1154 ;; Return value:  Size  Location     Type
  1155 ;;                  2   80[COMRAM] int 
  1156 ;; Registers used:
  1157 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1158 ;; Tracked objects:
  1159 ;;		On entry : 0/0
  1160 ;;		On exit  : 0/0
  1161 ;;		Unchanged: 0/0
  1162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1163 ;;      Params:         8       0       0       0       0       0       0       0       0
  1164 ;;      Locals:         0      25       0       0       0       0       0       0       0
  1165 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1166 ;;      Totals:        10      25       0       0       0       0       0       0       0
  1167 ;;Total ram usage:       35 bytes
  1168 ;; Hardware stack levels used:    1
  1169 ;; Hardware stack levels required when called:    2
  1170 ;; This function calls:
  1171 ;;		___awdiv
  1172 ;;		___fladd
  1173 ;;		___flge
  1174 ;;		___flmul
  1175 ;;		___flneg
  1176 ;;		___flsub
  1177 ;;		___fltol
  1178 ;;		___lldiv
  1179 ;;		___llmod
  1180 ;;		___wmul
  1181 ;;		___xxtofl
  1182 ;;		__div_to_l_
  1183 ;;		__tdiv_to_l_
  1184 ;;		_fround
  1185 ;;		_isdigit
  1186 ;;		_scale
  1187 ;; This function is called by:
  1188 ;;		_ricarica
  1189 ;; This function uses a non-reentrant model
  1190 ;;
  1191                           
  1192                           	psect	text2
  1193  0008D4                     __ptext2:
  1194                           	opt stack 0
  1195  0008D4                     _sprintf:
  1196                           	opt stack 27
  1197                           
  1198                           ;doprnt.c: 494: va_list ap;
  1199                           ;doprnt.c: 499: signed char c;
  1200                           ;doprnt.c: 501: int width;
  1201                           ;doprnt.c: 504: int prec;
  1202                           ;doprnt.c: 508: unsigned short flag;
  1203                           ;doprnt.c: 515: char d;
  1204                           ;doprnt.c: 516: double fval;
  1205                           ;doprnt.c: 517: int exp;
  1206                           ;doprnt.c: 523: union {
  1207                           ;doprnt.c: 524: unsigned long vd;
  1208                           ;doprnt.c: 525: double integ;
  1209                           ;doprnt.c: 526: } tmpval;
  1210                           ;doprnt.c: 528: unsigned long val;
  1211                           ;doprnt.c: 529: unsigned len;
  1212                           ;doprnt.c: 530: const char * cp;
  1213                           ;doprnt.c: 533: *ap = __va_start();
  1214                           
  1215                           ;incstack = 0
  1216  0008D4  0E55               	movlw	low (?_sprintf+4)
  1217  0008D6  0100               	movlb	0	; () banked
  1218  0008D8  6F64               	movwf	sprintf@ap& (0+255),b
  1219  0008DA  0E00               	movlw	high (?_sprintf+4)
  1220  0008DC  0100               	movlb	0	; () banked
  1221  0008DE  6F65               	movwf	(sprintf@ap+1)& (0+255),b
  1222                           
  1223                           ;doprnt.c: 536: while(c = *f++) {
  1224  0008E0  D3ED               	goto	l3578
  1225  0008E2                     l3380:
  1226                           
  1227                           ; BSR set to: 0
  1228                           ;doprnt.c: 538: if(c != '%')
  1229  0008E2  0E25               	movlw	37
  1230  0008E4  0100               	movlb	0	; () banked
  1231  0008E6  1978               	xorwf	sprintf@c& (0+255),w,b
  1232  0008E8  B4D8               	btfsc	status,2,c
  1233  0008EA  D007               	goto	l3386
  1234                           
  1235                           ; BSR set to: 0
  1236                           ;doprnt.c: 540: {
  1237                           ;doprnt.c: 541: ((*sp++ = (c)));
  1238  0008EC  C051  FFD9         	movff	sprintf@sp,fsr2l
  1239  0008F0  C052  FFDA         	movff	sprintf@sp+1,fsr2h
  1240  0008F4  C078  FFDF         	movff	sprintf@c,indf2
  1241  0008F8  D3DF               	goto	l3576
  1242  0008FA                     l3386:
  1243                           
  1244                           ; BSR set to: 0
  1245                           ;doprnt.c: 543: }
  1246                           ;doprnt.c: 548: flag = 0;
  1247  0008FA  0E00               	movlw	0
  1248  0008FC  0100               	movlb	0	; () banked
  1249  0008FE  6F67               	movwf	(sprintf@flag+1)& (0+255),b
  1250  000900  0E00               	movlw	0
  1251  000902  6F66               	movwf	sprintf@flag& (0+255),b
  1252                           
  1253                           ; BSR set to: 0
  1254                           ;doprnt.c: 611: if(*f == '.') {
  1255  000904  C053  FFF6         	movff	sprintf@f,tblptrl
  1256  000908  C054  FFF7         	movff	sprintf@f+1,tblptrh
  1257  00090C                     	if	0	;tblptru may be non-zero
  1258  00090C                     	endif
  1259  00090C                     	if	0	;tblptru may be non-zero
  1260  00090C                     	endif
  1261  00090C  0008               	tblrd		*
  1262  00090E  50F5               	movf	tablat,w,c
  1263  000910  0A2E               	xorlw	46
  1264  000912  A4D8               	btfss	status,2,c
  1265  000914  D032               	goto	l3400
  1266                           
  1267                           ; BSR set to: 0
  1268                           ;doprnt.c: 612: flag |= 0x4000;
  1269  000916  0100               	movlb	0	; () banked
  1270  000918  8D67               	bsf	(sprintf@flag+1)& (0+255),6,b
  1271                           
  1272                           ;doprnt.c: 613: f++;
  1273  00091A  4A53               	infsnz	sprintf@f,f,c
  1274  00091C  2A54               	incf	sprintf@f+1,f,c
  1275                           
  1276                           ; BSR set to: 0
  1277                           ;doprnt.c: 620: {
  1278                           ;doprnt.c: 621: prec = 0;
  1279  00091E  0E00               	movlw	0
  1280  000920  0100               	movlb	0	; () banked
  1281  000922  6F73               	movwf	(sprintf@prec+1)& (0+255),b
  1282  000924  0E00               	movlw	0
  1283  000926  6F72               	movwf	sprintf@prec& (0+255),b
  1284                           
  1285                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  1286  000928  D01D               	goto	l3398
  1287  00092A                     l3394:
  1288                           
  1289                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  1290  00092A  C072  F001         	movff	sprintf@prec,___wmul@multiplier
  1291  00092E  C073  F002         	movff	sprintf@prec+1,___wmul@multiplier+1
  1292  000932  0E00               	movlw	0
  1293  000934  6E04               	movwf	___wmul@multiplicand+1,c
  1294  000936  0E0A               	movlw	10
  1295  000938  6E03               	movwf	___wmul@multiplicand,c
  1296  00093A  ECE0  F017         	call	___wmul	;wreg free
  1297  00093E  C053  FFF6         	movff	sprintf@f,tblptrl
  1298  000942  C054  FFF7         	movff	sprintf@f+1,tblptrh
  1299  000946                     	if	0	;tblptru may be non-zero
  1300  000946                     	endif
  1301  000946                     	if	0	;tblptru may be non-zero
  1302  000946                     	endif
  1303  000946  0008               	tblrd		*
  1304  000948  50F5               	movf	tablat,w,c
  1305  00094A  2601               	addwf	?___wmul,f,c
  1306  00094C  0E00               	movlw	0
  1307  00094E  2202               	addwfc	?___wmul+1,f,c
  1308  000950  0ED0               	movlw	208
  1309  000952  2401               	addwf	?___wmul,w,c
  1310  000954  0100               	movlb	0	; () banked
  1311  000956  6F72               	movwf	sprintf@prec& (0+255),b
  1312  000958  0EFF               	movlw	255
  1313  00095A  2002               	addwfc	?___wmul+1,w,c
  1314  00095C  0100               	movlb	0	; () banked
  1315  00095E  6F73               	movwf	(sprintf@prec+1)& (0+255),b
  1316                           
  1317                           ; BSR set to: 0
  1318  000960  4A53               	infsnz	sprintf@f,f,c
  1319  000962  2A54               	incf	sprintf@f+1,f,c
  1320  000964                     l3398:
  1321                           
  1322                           ; BSR set to: 0
  1323  000964  C053  FFF6         	movff	sprintf@f,tblptrl
  1324  000968  C054  FFF7         	movff	sprintf@f+1,tblptrh
  1325  00096C                     	if	0	;tblptru may be non-zero
  1326  00096C                     	endif
  1327  00096C                     	if	0	;tblptru may be non-zero
  1328  00096C                     	endif
  1329  00096C  0008               	tblrd		*
  1330  00096E  50F5               	movf	tablat,w,c
  1331  000970  EC05  F018         	call	_isdigit
  1332  000974  A0D8               	btfss	status,0,c
  1333  000976  D00C               	goto	l3408
  1334  000978  D7D8               	goto	l3394
  1335  00097A                     l3400:
  1336                           
  1337                           ;doprnt.c: 626: prec = 0;
  1338  00097A  0E00               	movlw	0
  1339  00097C  0100               	movlb	0	; () banked
  1340  00097E  6F73               	movwf	(sprintf@prec+1)& (0+255),b
  1341  000980  0E00               	movlw	0
  1342  000982  6F72               	movwf	sprintf@prec& (0+255),b
  1343                           
  1344                           ; BSR set to: 0
  1345                           ;doprnt.c: 628: flag |= 0x1000;
  1346  000984  0100               	movlb	0	; () banked
  1347  000986  8967               	bsf	(sprintf@flag+1)& (0+255),4,b
  1348                           
  1349                           ; BSR set to: 0
  1350                           ;doprnt.c: 630: }
  1351                           ;doprnt.c: 635: switch(c = *f++) {
  1352  000988  D003               	goto	l3408
  1353  00098A                     l3404:
  1354                           
  1355                           ; BSR set to: 0
  1356                           ;doprnt.c: 663: flag |= 0x400;
  1357  00098A  0100               	movlb	0	; () banked
  1358  00098C  8567               	bsf	(sprintf@flag+1)& (0+255),2,b
  1359                           
  1360                           ;doprnt.c: 664: break;
  1361  00098E  D012               	goto	l3410
  1362  000990                     l3408:
  1363  000990  C053  FFF6         	movff	sprintf@f,tblptrl
  1364  000994  C054  FFF7         	movff	sprintf@f+1,tblptrh
  1365  000998  4A53               	infsnz	sprintf@f,f,c
  1366  00099A  2A54               	incf	sprintf@f+1,f,c
  1367  00099C                     	if	0	;tblptru may be non-zero
  1368  00099C                     	endif
  1369  00099C                     	if	0	;tblptru may be non-zero
  1370  00099C                     	endif
  1371  00099C  0008               	tblrd		*
  1372  00099E  CFF5 F078          	movff	tablat,sprintf@c
  1373  0009A2  0100               	movlb	0	; () banked
  1374  0009A4  5178               	movf	sprintf@c& (0+255),w,b
  1375                           
  1376                           ; Switch size 1, requested type "space"
  1377                           ; Number of cases is 2, Range of values is 0 to 102
  1378                           ; switch strategies available:
  1379                           ; Name         Instructions Cycles
  1380                           ; simple_byte            7     4 (average)
  1381                           ;	Chosen strategy is simple_byte
  1382  0009A6  0A00               	xorlw	0	; case 0
  1383  0009A8  B4D8               	btfsc	status,2,c
  1384  0009AA  D395               	goto	l3580
  1385  0009AC  0A66               	xorlw	102	; case 102
  1386  0009AE  B4D8               	btfsc	status,2,c
  1387  0009B0  D7EC               	goto	l3404
  1388  0009B2  D384               	goto	l3578
  1389  0009B4                     l3410:
  1390                           
  1391                           ; BSR set to: 0
  1392                           ;doprnt.c: 825: if(flag & (0x700)) {
  1393  0009B4  0E07               	movlw	7
  1394  0009B6  0100               	movlb	0	; () banked
  1395  0009B8  1567               	andwf	(sprintf@flag+1)& (0+255),w,b
  1396  0009BA  B4D8               	btfsc	status,2,c
  1397  0009BC  D330               	goto	l3558
  1398                           
  1399                           ; BSR set to: 0
  1400                           ;doprnt.c: 827: if(flag & 0x1000)
  1401  0009BE  0100               	movlb	0	; () banked
  1402  0009C0  A967               	btfss	(sprintf@flag+1)& (0+255),4,b
  1403  0009C2  D005               	goto	l3416
  1404                           
  1405                           ; BSR set to: 0
  1406                           ;doprnt.c: 829: prec = 6;
  1407  0009C4  0E00               	movlw	0
  1408  0009C6  0100               	movlb	0	; () banked
  1409  0009C8  6F73               	movwf	(sprintf@prec+1)& (0+255),b
  1410  0009CA  0E06               	movlw	6
  1411  0009CC  6F72               	movwf	sprintf@prec& (0+255),b
  1412  0009CE                     l3416:
  1413                           
  1414                           ; BSR set to: 0
  1415                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  1416  0009CE  C064  FFD9         	movff	sprintf@ap,fsr2l
  1417  0009D2  C065  FFDA         	movff	sprintf@ap+1,fsr2h
  1418  0009D6  CFDE F074          	movff	postinc2,sprintf@fval
  1419  0009DA  CFDE F075          	movff	postinc2,sprintf@fval+1
  1420  0009DE  CFDE F076          	movff	postinc2,sprintf@fval+2
  1421  0009E2  CFDE F077          	movff	postinc2,sprintf@fval+3
  1422                           
  1423                           ; BSR set to: 0
  1424  0009E6  0E04               	movlw	4
  1425  0009E8  0100               	movlb	0	; () banked
  1426  0009EA  2764               	addwf	sprintf@ap& (0+255),f,b
  1427  0009EC  0E00               	movlw	0
  1428  0009EE  2365               	addwfc	(sprintf@ap+1)& (0+255),f,b
  1429                           
  1430                           ; BSR set to: 0
  1431                           ;doprnt.c: 831: if(fval < 0.0) {
  1432  0009F0  0100               	movlb	0	; () banked
  1433  0009F2  AF77               	btfss	(sprintf@fval+3)& (0+255),7,b
  1434  0009F4  D015               	goto	l3426
  1435                           
  1436                           ; BSR set to: 0
  1437                           ;doprnt.c: 832: fval = -fval;
  1438  0009F6  C074  F001         	movff	sprintf@fval,___flneg@f1
  1439  0009FA  C075  F002         	movff	sprintf@fval+1,___flneg@f1+1
  1440  0009FE  C076  F003         	movff	sprintf@fval+2,___flneg@f1+2
  1441  000A02  C077  F004         	movff	sprintf@fval+3,___flneg@f1+3
  1442  000A06  EC8D  F017         	call	___flneg	;wreg free
  1443  000A0A  C001  F074         	movff	?___flneg,sprintf@fval
  1444  000A0E  C002  F075         	movff	?___flneg+1,sprintf@fval+1
  1445  000A12  C003  F076         	movff	?___flneg+2,sprintf@fval+2
  1446  000A16  C004  F077         	movff	?___flneg+3,sprintf@fval+3
  1447                           
  1448                           ;doprnt.c: 833: flag |= 0x03;
  1449  000A1A  0E03               	movlw	3
  1450  000A1C  0100               	movlb	0	; () banked
  1451  000A1E  1366               	iorwf	sprintf@flag& (0+255),f,b
  1452  000A20                     l3426:
  1453                           
  1454                           ; BSR set to: 0
  1455                           ;doprnt.c: 834: }
  1456                           ;doprnt.c: 835: exp = 0;
  1457  000A20  0E00               	movlw	0
  1458  000A22  0100               	movlb	0	; () banked
  1459  000A24  6F6D               	movwf	(sprintf@exp+1)& (0+255),b
  1460  000A26  0E00               	movlw	0
  1461  000A28  6F6C               	movwf	sprintf@exp& (0+255),b
  1462                           
  1463                           ; BSR set to: 0
  1464                           ;doprnt.c: 836: if( fval!=0) {
  1465  000A2A  0100               	movlb	0	; () banked
  1466  000A2C  5174               	movf	sprintf@fval& (0+255),w,b
  1467  000A2E  0100               	movlb	0	; () banked
  1468  000A30  1175               	iorwf	(sprintf@fval+1)& (0+255),w,b
  1469  000A32  0100               	movlb	0	; () banked
  1470  000A34  1176               	iorwf	(sprintf@fval+2)& (0+255),w,b
  1471  000A36  0100               	movlb	0	; () banked
  1472  000A38  1177               	iorwf	(sprintf@fval+3)& (0+255),w,b
  1473  000A3A  B4D8               	btfsc	status,2,c
  1474  000A3C  D088               	goto	l3454
  1475                           
  1476                           ; BSR set to: 0
  1477                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
  1478  000A3E  0100               	movlb	0	; () banked
  1479  000A40  3576               	rlcf	(sprintf@fval+2)& (0+255),w,b
  1480  000A42  3577               	rlcf	(sprintf@fval+3)& (0+255),w,b
  1481  000A44  0F82               	addlw	130
  1482  000A46  0100               	movlb	0	; () banked
  1483  000A48  6F6C               	movwf	sprintf@exp& (0+255),b
  1484  000A4A  0100               	movlb	0	; () banked
  1485  000A4C  6B6D               	clrf	(sprintf@exp+1)& (0+255),b
  1486  000A4E  0EFF               	movlw	255
  1487  000A50  236D               	addwfc	(sprintf@exp+1)& (0+255),f,b
  1488                           
  1489                           ; BSR set to: 0
  1490                           ;doprnt.c: 838: exp--;
  1491  000A52  0100               	movlb	0	; () banked
  1492  000A54  076C               	decf	sprintf@exp& (0+255),f,b
  1493  000A56  A0D8               	btfss	status,0,c
  1494  000A58  076D               	decf	(sprintf@exp+1)& (0+255),f,b
  1495                           
  1496                           ; BSR set to: 0
  1497                           ;doprnt.c: 839: exp *= 3;
  1498  000A5A  C06C  F001         	movff	sprintf@exp,___wmul@multiplier
  1499  000A5E  C06D  F002         	movff	sprintf@exp+1,___wmul@multiplier+1
  1500  000A62  0E00               	movlw	0
  1501  000A64  6E04               	movwf	___wmul@multiplicand+1,c
  1502  000A66  0E03               	movlw	3
  1503  000A68  6E03               	movwf	___wmul@multiplicand,c
  1504  000A6A  ECE0  F017         	call	___wmul	;wreg free
  1505  000A6E  C001  F06C         	movff	?___wmul,sprintf@exp
  1506  000A72  C002  F06D         	movff	?___wmul+1,sprintf@exp+1
  1507                           
  1508                           ;doprnt.c: 840: exp /= 10;
  1509  000A76  C06C  F007         	movff	sprintf@exp,___awdiv@dividend
  1510  000A7A  C06D  F008         	movff	sprintf@exp+1,___awdiv@dividend+1
  1511  000A7E  0E00               	movlw	0
  1512  000A80  6E0A               	movwf	___awdiv@divisor+1,c
  1513  000A82  0E0A               	movlw	10
  1514  000A84  6E09               	movwf	___awdiv@divisor,c
  1515  000A86  EC98  F015         	call	___awdiv	;wreg free
  1516  000A8A  C007  F06C         	movff	?___awdiv,sprintf@exp
  1517  000A8E  C008  F06D         	movff	?___awdiv+1,sprintf@exp+1
  1518                           
  1519                           ;doprnt.c: 841: if(exp < 0)
  1520  000A92  0100               	movlb	0	; () banked
  1521  000A94  AF6D               	btfss	(sprintf@exp+1)& (0+255),7,b
  1522  000A96  D004               	goto	l3442
  1523                           
  1524                           ; BSR set to: 0
  1525                           ;doprnt.c: 842: exp--;
  1526  000A98  0100               	movlb	0	; () banked
  1527  000A9A  076C               	decf	sprintf@exp& (0+255),f,b
  1528  000A9C  A0D8               	btfss	status,0,c
  1529  000A9E  076D               	decf	(sprintf@exp+1)& (0+255),f,b
  1530  000AA0                     l3442:
  1531                           
  1532                           ; BSR set to: 0
  1533                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  1534  000AA0  0100               	movlb	0	; () banked
  1535  000AA2  516C               	movf	sprintf@exp& (0+255),w,b
  1536  000AA4  0800               	sublw	0
  1537  000AA6  EC72  F008         	call	_scale
  1538  000AAA  C028  F06E         	movff	?_scale,sprintf@tmpval
  1539  000AAE  C029  F06F         	movff	?_scale+1,sprintf@tmpval+1
  1540  000AB2  C02A  F070         	movff	?_scale+2,sprintf@tmpval+2
  1541  000AB6  C02B  F071         	movff	?_scale+3,sprintf@tmpval+3
  1542                           
  1543                           ;doprnt.c: 847: tmpval.integ *= fval;
  1544  000ABA  C06E  F00F         	movff	sprintf@tmpval,___flmul@b
  1545  000ABE  C06F  F010         	movff	sprintf@tmpval+1,___flmul@b+1
  1546  000AC2  C070  F011         	movff	sprintf@tmpval+2,___flmul@b+2
  1547  000AC6  C071  F012         	movff	sprintf@tmpval+3,___flmul@b+3
  1548  000ACA  C074  F013         	movff	sprintf@fval,___flmul@a
  1549  000ACE  C075  F014         	movff	sprintf@fval+1,___flmul@a+1
  1550  000AD2  C076  F015         	movff	sprintf@fval+2,___flmul@a+2
  1551  000AD6  C077  F016         	movff	sprintf@fval+3,___flmul@a+3
  1552  000ADA  EC7E  F00A         	call	___flmul	;wreg free
  1553  000ADE  C00F  F06E         	movff	?___flmul,sprintf@tmpval
  1554  000AE2  C010  F06F         	movff	?___flmul+1,sprintf@tmpval+1
  1555  000AE6  C011  F070         	movff	?___flmul+2,sprintf@tmpval+2
  1556  000AEA  C012  F071         	movff	?___flmul+3,sprintf@tmpval+3
  1557                           
  1558                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  1559  000AEE  C06E  F001         	movff	sprintf@tmpval,___flge@ff1
  1560  000AF2  C06F  F002         	movff	sprintf@tmpval+1,___flge@ff1+1
  1561  000AF6  C070  F003         	movff	sprintf@tmpval+2,___flge@ff1+2
  1562  000AFA  C071  F004         	movff	sprintf@tmpval+3,___flge@ff1+3
  1563  000AFE  0E00               	movlw	0
  1564  000B00  6E05               	movwf	___flge@ff2,c
  1565  000B02  0E00               	movlw	0
  1566  000B04  6E06               	movwf	___flge@ff2+1,c
  1567  000B06  0E80               	movlw	128
  1568  000B08  6E07               	movwf	___flge@ff2+2,c
  1569  000B0A  0E3F               	movlw	63
  1570  000B0C  6E08               	movwf	___flge@ff2+3,c
  1571  000B0E  ECB1  F013         	call	___flge	;wreg free
  1572  000B12  B0D8               	btfsc	status,0,c
  1573  000B14  D005               	goto	l3450
  1574                           
  1575                           ;doprnt.c: 849: exp--;
  1576  000B16  0100               	movlb	0	; () banked
  1577  000B18  076C               	decf	sprintf@exp& (0+255),f,b
  1578  000B1A  A0D8               	btfss	status,0,c
  1579  000B1C  076D               	decf	(sprintf@exp+1)& (0+255),f,b
  1580  000B1E  D017               	goto	l3454
  1581  000B20                     l3450:
  1582                           
  1583                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  1584  000B20  C06E  F001         	movff	sprintf@tmpval,___flge@ff1
  1585  000B24  C06F  F002         	movff	sprintf@tmpval+1,___flge@ff1+1
  1586  000B28  C070  F003         	movff	sprintf@tmpval+2,___flge@ff1+2
  1587  000B2C  C071  F004         	movff	sprintf@tmpval+3,___flge@ff1+3
  1588  000B30  0E00               	movlw	0
  1589  000B32  6E05               	movwf	___flge@ff2,c
  1590  000B34  0E00               	movlw	0
  1591  000B36  6E06               	movwf	___flge@ff2+1,c
  1592  000B38  0E20               	movlw	32
  1593  000B3A  6E07               	movwf	___flge@ff2+2,c
  1594  000B3C  0E41               	movlw	65
  1595  000B3E  6E08               	movwf	___flge@ff2+3,c
  1596  000B40  ECB1  F013         	call	___flge	;wreg free
  1597  000B44  A0D8               	btfss	status,0,c
  1598  000B46  D003               	goto	l3454
  1599                           
  1600                           ;doprnt.c: 851: exp++;
  1601  000B48  0100               	movlb	0	; () banked
  1602  000B4A  4B6C               	infsnz	sprintf@exp& (0+255),f,b
  1603  000B4C  2B6D               	incf	(sprintf@exp+1)& (0+255),f,b
  1604  000B4E                     l3454:
  1605                           
  1606                           ;doprnt.c: 852: }
  1607                           ;doprnt.c: 1112: if(prec <= 12)
  1608  000B4E  0100               	movlb	0	; () banked
  1609  000B50  BF73               	btfsc	(sprintf@prec+1)& (0+255),7,b
  1610  000B52  D008               	goto	l3456
  1611  000B54  0100               	movlb	0	; () banked
  1612  000B56  5173               	movf	(sprintf@prec+1)& (0+255),w,b
  1613  000B58  E123               	bnz	l3458
  1614  000B5A  0E0D               	movlw	13
  1615  000B5C  0100               	movlb	0	; () banked
  1616  000B5E  5D72               	subwf	sprintf@prec& (0+255),w,b
  1617  000B60  B0D8               	btfsc	status,0,c
  1618  000B62  D01E               	goto	l3458
  1619  000B64                     l3456:
  1620                           
  1621                           ; BSR set to: 0
  1622                           ;doprnt.c: 1113: fval += fround(prec);
  1623  000B64  C074  F035         	movff	sprintf@fval,___fladd@b
  1624  000B68  C075  F036         	movff	sprintf@fval+1,___fladd@b+1
  1625  000B6C  C076  F037         	movff	sprintf@fval+2,___fladd@b+2
  1626  000B70  C077  F038         	movff	sprintf@fval+3,___fladd@b+3
  1627  000B74  0100               	movlb	0	; () banked
  1628  000B76  5172               	movf	sprintf@prec& (0+255),w,b
  1629  000B78  EC1E  F00F         	call	_fround
  1630  000B7C  C028  F039         	movff	?_fround,___fladd@a
  1631  000B80  C029  F03A         	movff	?_fround+1,___fladd@a+1
  1632  000B84  C02A  F03B         	movff	?_fround+2,___fladd@a+2
  1633  000B88  C02B  F03C         	movff	?_fround+3,___fladd@a+3
  1634  000B8C  EC26  F00C         	call	___fladd	;wreg free
  1635  000B90  C035  F074         	movff	?___fladd,sprintf@fval
  1636  000B94  C036  F075         	movff	?___fladd+1,sprintf@fval+1
  1637  000B98  C037  F076         	movff	?___fladd+2,sprintf@fval+2
  1638  000B9C  C038  F077         	movff	?___fladd+3,sprintf@fval+3
  1639  000BA0                     l3458:
  1640                           
  1641                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  1642  000BA0  0100               	movlb	0	; () banked
  1643  000BA2  BF6D               	btfsc	(sprintf@exp+1)& (0+255),7,b
  1644  000BA4  D008               	goto	l3460
  1645  000BA6  0100               	movlb	0	; () banked
  1646  000BA8  516D               	movf	(sprintf@exp+1)& (0+255),w,b
  1647  000BAA  E12A               	bnz	l3466
  1648  000BAC  0E0A               	movlw	10
  1649  000BAE  0100               	movlb	0	; () banked
  1650  000BB0  5D6C               	subwf	sprintf@exp& (0+255),w,b
  1651  000BB2  B0D8               	btfsc	status,0,c
  1652  000BB4  D025               	goto	l3466
  1653  000BB6                     l3460:
  1654                           
  1655                           ; BSR set to: 0
  1656  000BB6  0100               	movlb	0	; () banked
  1657  000BB8  5174               	movf	sprintf@fval& (0+255),w,b
  1658  000BBA  0100               	movlb	0	; () banked
  1659  000BBC  1175               	iorwf	(sprintf@fval+1)& (0+255),w,b
  1660  000BBE  0100               	movlb	0	; () banked
  1661  000BC0  1176               	iorwf	(sprintf@fval+2)& (0+255),w,b
  1662  000BC2  0100               	movlb	0	; () banked
  1663  000BC4  1177               	iorwf	(sprintf@fval+3)& (0+255),w,b
  1664  000BC6  B4D8               	btfsc	status,2,c
  1665  000BC8  D067               	goto	l3480
  1666                           
  1667                           ; BSR set to: 0
  1668  000BCA  C074  F031         	movff	sprintf@fval,___fltol@f1
  1669  000BCE  C075  F032         	movff	sprintf@fval+1,___fltol@f1+1
  1670  000BD2  C076  F033         	movff	sprintf@fval+2,___fltol@f1+2
  1671  000BD6  C077  F034         	movff	sprintf@fval+3,___fltol@f1+3
  1672  000BDA  ECCE  F014         	call	___fltol	;wreg free
  1673  000BDE  5031               	movf	?___fltol,w,c
  1674  000BE0  1032               	iorwf	?___fltol+1,w,c
  1675  000BE2  1033               	iorwf	?___fltol+2,w,c
  1676  000BE4  1034               	iorwf	?___fltol+3,w,c
  1677  000BE6  A4D8               	btfss	status,2,c
  1678  000BE8  D057               	goto	l3480
  1679  000BEA  0100               	movlb	0	; () banked
  1680  000BEC  BF6D               	btfsc	(sprintf@exp+1)& (0+255),7,b
  1681  000BEE  D054               	goto	l3480
  1682  000BF0  0100               	movlb	0	; () banked
  1683  000BF2  516D               	movf	(sprintf@exp+1)& (0+255),w,b
  1684  000BF4  E105               	bnz	l3466
  1685  000BF6  0E02               	movlw	2
  1686  000BF8  0100               	movlb	0	; () banked
  1687  000BFA  5D6C               	subwf	sprintf@exp& (0+255),w,b
  1688  000BFC  A0D8               	btfss	status,0,c
  1689  000BFE  D04C               	goto	l3480
  1690  000C00                     l3466:
  1691                           
  1692                           ; BSR set to: 0
  1693                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  1694  000C00  C06E  F001         	movff	sprintf@tmpval,___flge@ff1
  1695  000C04  C06F  F002         	movff	sprintf@tmpval+1,___flge@ff1+1
  1696  000C08  C070  F003         	movff	sprintf@tmpval+2,___flge@ff1+2
  1697  000C0C  C071  F004         	movff	sprintf@tmpval+3,___flge@ff1+3
  1698  000C10  0E5F               	movlw	95
  1699  000C12  6E05               	movwf	___flge@ff2,c
  1700  000C14  0E70               	movlw	112
  1701  000C16  6E06               	movwf	___flge@ff2+1,c
  1702  000C18  0E89               	movlw	137
  1703  000C1A  6E07               	movwf	___flge@ff2+2,c
  1704  000C1C  0E40               	movlw	64
  1705  000C1E  6E08               	movwf	___flge@ff2+3,c
  1706  000C20  ECB1  F013         	call	___flge	;wreg free
  1707  000C24  B0D8               	btfsc	status,0,c
  1708  000C26  D003               	goto	l3470
  1709                           
  1710                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  1711  000C28  0100               	movlb	0	; () banked
  1712  000C2A  0EF7               	movlw	247
  1713  000C2C  D002               	goto	L1
  1714  000C2E                     l3470:
  1715                           
  1716                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  1717  000C2E  0100               	movlb	0	; () banked
  1718  000C30  0EF8               	movlw	248
  1719  000C32                     L1:
  1720  000C32  276C               	addwf	sprintf@exp& (0+255),f,b
  1721  000C34  0EFF               	movlw	255
  1722  000C36  236D               	addwfc	(sprintf@exp+1)& (0+255),f,b
  1723                           
  1724                           ; BSR set to: 0
  1725                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  1726                           
  1727                           ; BSR set to: 0
  1728  000C38  0100               	movlb	0	; () banked
  1729  000C3A  516C               	movf	sprintf@exp& (0+255),w,b
  1730  000C3C  EC72  F008         	call	_scale
  1731  000C40  C028  F06E         	movff	?_scale,sprintf@tmpval
  1732  000C44  C029  F06F         	movff	?_scale+1,sprintf@tmpval+1
  1733  000C48  C02A  F070         	movff	?_scale+2,sprintf@tmpval+2
  1734  000C4C  C02B  F071         	movff	?_scale+3,sprintf@tmpval+3
  1735  000C50  C074  F001         	movff	sprintf@fval,__div_to_l_@f1
  1736  000C54  C075  F002         	movff	sprintf@fval+1,__div_to_l_@f1+1
  1737  000C58  C076  F003         	movff	sprintf@fval+2,__div_to_l_@f1+2
  1738  000C5C  C077  F004         	movff	sprintf@fval+3,__div_to_l_@f1+3
  1739  000C60  C06E  F005         	movff	sprintf@tmpval,__div_to_l_@f2
  1740  000C64  C06F  F006         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
  1741  000C68  C070  F007         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
  1742  000C6C  C071  F008         	movff	sprintf@tmpval+3,__div_to_l_@f2+3
  1743  000C70  EC1D  F013         	call	__div_to_l_	;wreg free
  1744  000C74  C001  F068         	movff	?__div_to_l_,sprintf@val
  1745  000C78  C002  F069         	movff	?__div_to_l_+1,sprintf@val+1
  1746  000C7C  C003  F06A         	movff	?__div_to_l_+2,sprintf@val+2
  1747  000C80  C004  F06B         	movff	?__div_to_l_+3,sprintf@val+3
  1748                           
  1749                           ;doprnt.c: 1129: fval = 0.0;
  1750  000C84  0E00               	movlw	0
  1751  000C86  0100               	movlb	0	; () banked
  1752  000C88  6F74               	movwf	sprintf@fval& (0+255),b
  1753  000C8A  0E00               	movlw	0
  1754  000C8C  6F75               	movwf	(sprintf@fval+1)& (0+255),b
  1755  000C8E  0E00               	movlw	0
  1756  000C90  6F76               	movwf	(sprintf@fval+2)& (0+255),b
  1757  000C92  0E00               	movlw	0
  1758  000C94  6F77               	movwf	(sprintf@fval+3)& (0+255),b
  1759                           
  1760                           ;doprnt.c: 1130: } else {
  1761  000C96  D03C               	goto	l3484
  1762  000C98                     l3480:
  1763                           
  1764                           ;doprnt.c: 1131: val = (unsigned long)fval;
  1765  000C98  C074  F031         	movff	sprintf@fval,___fltol@f1
  1766  000C9C  C075  F032         	movff	sprintf@fval+1,___fltol@f1+1
  1767  000CA0  C076  F033         	movff	sprintf@fval+2,___fltol@f1+2
  1768  000CA4  C077  F034         	movff	sprintf@fval+3,___fltol@f1+3
  1769  000CA8  ECCE  F014         	call	___fltol	;wreg free
  1770  000CAC  C031  F068         	movff	?___fltol,sprintf@val
  1771  000CB0  C032  F069         	movff	?___fltol+1,sprintf@val+1
  1772  000CB4  C033  F06A         	movff	?___fltol+2,sprintf@val+2
  1773  000CB8  C034  F06B         	movff	?___fltol+3,sprintf@val+3
  1774                           
  1775                           ;doprnt.c: 1132: fval -= (double)val;
  1776  000CBC  C074  F049         	movff	sprintf@fval,___flsub@b
  1777  000CC0  C075  F04A         	movff	sprintf@fval+1,___flsub@b+1
  1778  000CC4  C076  F04B         	movff	sprintf@fval+2,___flsub@b+2
  1779  000CC8  C077  F04C         	movff	sprintf@fval+3,___flsub@b+3
  1780  000CCC  C068  F00F         	movff	sprintf@val,___xxtofl@val
  1781  000CD0  C069  F010         	movff	sprintf@val+1,___xxtofl@val+1
  1782  000CD4  C06A  F011         	movff	sprintf@val+2,___xxtofl@val+2
  1783  000CD8  C06B  F012         	movff	sprintf@val+3,___xxtofl@val+3
  1784  000CDC  0E00               	movlw	0
  1785  000CDE  ECDC  F011         	call	___xxtofl
  1786  000CE2  C00F  F04D         	movff	?___xxtofl,___flsub@a
  1787  000CE6  C010  F04E         	movff	?___xxtofl+1,___flsub@a+1
  1788  000CEA  C011  F04F         	movff	?___xxtofl+2,___flsub@a+2
  1789  000CEE  C012  F050         	movff	?___xxtofl+3,___flsub@a+3
  1790  000CF2  EC39  F017         	call	___flsub	;wreg free
  1791  000CF6  C049  F074         	movff	?___flsub,sprintf@fval
  1792  000CFA  C04A  F075         	movff	?___flsub+1,sprintf@fval+1
  1793  000CFE  C04B  F076         	movff	?___flsub+2,sprintf@fval+2
  1794  000D02  C04C  F077         	movff	?___flsub+3,sprintf@fval+3
  1795                           
  1796                           ;doprnt.c: 1133: exp = 0;
  1797  000D06  0E00               	movlw	0
  1798  000D08  0100               	movlb	0	; () banked
  1799  000D0A  6F6D               	movwf	(sprintf@exp+1)& (0+255),b
  1800  000D0C  0E00               	movlw	0
  1801  000D0E  6F6C               	movwf	sprintf@exp& (0+255),b
  1802  000D10                     l3484:
  1803                           
  1804                           ; BSR set to: 0
  1805                           ;doprnt.c: 1134: }
  1806                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  1807  000D10  0E01               	movlw	1
  1808  000D12  0100               	movlb	0	; () banked
  1809  000D14  6F78               	movwf	sprintf@c& (0+255),b
  1810  000D16                     l3486:
  1811                           
  1812                           ; BSR set to: 0
  1813  000D16  0E0A               	movlw	10
  1814  000D18  0100               	movlb	0	; () banked
  1815  000D1A  1978               	xorwf	sprintf@c& (0+255),w,b
  1816  000D1C  B4D8               	btfsc	status,2,c
  1817  000D1E  D01E               	goto	l3498
  1818                           
  1819                           ; BSR set to: 0
  1820                           ;doprnt.c: 1137: if(val < dpowers[c])
  1821                           
  1822                           ; BSR set to: 0
  1823                           
  1824                           ; BSR set to: 0
  1825  000D20  0100               	movlb	0	; () banked
  1826  000D22  5178               	movf	sprintf@c& (0+255),w,b
  1827  000D24  0D04               	mullw	4
  1828  000D26  0E69               	movlw	low _dpowers
  1829  000D28  24F3               	addwf	prodl,w,c
  1830  000D2A  6EF6               	movwf	tblptrl,c
  1831  000D2C  0E08               	movlw	high _dpowers
  1832  000D2E  20F4               	addwfc	prodh,w,c
  1833  000D30  6EF7               	movwf	tblptrh,c
  1834  000D32                     	if	0	;There are less than 3 active tblptr bytes
  1835  000D32                     	endif
  1836  000D32  0009               	tblrd		*+
  1837  000D34  50F5               	movf	tablat,w,c
  1838  000D36  0100               	movlb	0	; () banked
  1839  000D38  5D68               	subwf	sprintf@val& (0+255),w,b
  1840  000D3A  0009               	tblrd		*+
  1841  000D3C  50F5               	movf	tablat,w,c
  1842  000D3E  0100               	movlb	0	; () banked
  1843  000D40  5969               	subwfb	(sprintf@val+1)& (0+255),w,b
  1844  000D42  0009               	tblrd		*+
  1845  000D44  50F5               	movf	tablat,w,c
  1846  000D46  0100               	movlb	0	; () banked
  1847  000D48  596A               	subwfb	(sprintf@val+2)& (0+255),w,b
  1848  000D4A  0009               	tblrd		*+
  1849  000D4C  50F5               	movf	tablat,w,c
  1850  000D4E  0100               	movlb	0	; () banked
  1851  000D50  596B               	subwfb	(sprintf@val+3)& (0+255),w,b
  1852  000D52  A0D8               	btfss	status,0,c
  1853  000D54  D003               	goto	l3498
  1854                           
  1855                           ; BSR set to: 0
  1856                           
  1857                           ; BSR set to: 0
  1858                           
  1859                           ; BSR set to: 0
  1860                           ;doprnt.c: 1138: break;
  1861  000D56  0100               	movlb	0	; () banked
  1862  000D58  2B78               	incf	sprintf@c& (0+255),f,b
  1863  000D5A  D7DD               	goto	l3486
  1864  000D5C                     l3498:
  1865                           
  1866                           ; BSR set to: 0
  1867                           ;doprnt.c: 1175: {
  1868                           ;doprnt.c: 1188: if(flag & 0x03)
  1869  000D5C  0E03               	movlw	3
  1870  000D5E  0100               	movlb	0	; () banked
  1871  000D60  1566               	andwf	sprintf@flag& (0+255),w,b
  1872  000D62  6E59               	movwf	??_sprintf& (0+255),c
  1873  000D64  0E00               	movlw	0
  1874  000D66  0100               	movlb	0	; () banked
  1875  000D68  1567               	andwf	(sprintf@flag+1)& (0+255),w,b
  1876  000D6A  6E5A               	movwf	(??_sprintf+1)& (0+255),c
  1877  000D6C  5059               	movf	??_sprintf,w,c
  1878  000D6E  105A               	iorwf	??_sprintf+1,w,c
  1879  000D70  B4D8               	btfsc	status,2,c
  1880  000D72  D053               	goto	l3512
  1881                           
  1882                           ; BSR set to: 0
  1883                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  1884  000D74  C051  FFD9         	movff	sprintf@sp,fsr2l
  1885  000D78  C052  FFDA         	movff	sprintf@sp+1,fsr2h
  1886  000D7C  0E2D               	movlw	45
  1887  000D7E  D04B               	goto	L2
  1888  000D80                     l3502:
  1889                           
  1890                           ; BSR set to: 0
  1891  000D80  4A51               	infsnz	sprintf@sp,f,c
  1892  000D82  2A52               	incf	sprintf@sp+1,f,c
  1893                           
  1894                           ; BSR set to: 0
  1895                           ;doprnt.c: 1195: }
  1896                           ;doprnt.c: 1196: while(c--) {
  1897  000D84  D04A               	goto	l3512
  1898  000D86                     l3504:
  1899                           
  1900                           ; BSR set to: 0
  1901                           ;doprnt.c: 1200: {
  1902                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  1903  000D86  C068  F001         	movff	sprintf@val,___lldiv@dividend
  1904  000D8A  C069  F002         	movff	sprintf@val+1,___lldiv@dividend+1
  1905  000D8E  C06A  F003         	movff	sprintf@val+2,___lldiv@dividend+2
  1906  000D92  C06B  F004         	movff	sprintf@val+3,___lldiv@dividend+3
  1907  000D96  0100               	movlb	0	; () banked
  1908  000D98  5178               	movf	sprintf@c& (0+255),w,b
  1909  000D9A  0D04               	mullw	4
  1910  000D9C  0E69               	movlw	low _dpowers
  1911  000D9E  24F3               	addwf	prodl,w,c
  1912  000DA0  6EF6               	movwf	tblptrl,c
  1913  000DA2  0E08               	movlw	high _dpowers
  1914  000DA4  20F4               	addwfc	prodh,w,c
  1915  000DA6  6EF7               	movwf	tblptrh,c
  1916  000DA8                     	if	0	;There are less than 3 active tblptr bytes
  1917  000DA8                     	endif
  1918  000DA8  0009               	tblrd		*+
  1919  000DAA  CFF5 F005          	movff	tablat,___lldiv@divisor
  1920  000DAE  0009               	tblrd		*+
  1921  000DB0  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  1922  000DB4  0009               	tblrd		*+
  1923  000DB6  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  1924  000DBA  000A               	tblrd		*-
  1925  000DBC  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  1926  000DC0  ECDA  F015         	call	___lldiv	;wreg free
  1927  000DC4  C001  F06E         	movff	?___lldiv,sprintf@tmpval
  1928  000DC8  C002  F06F         	movff	?___lldiv+1,sprintf@tmpval+1
  1929  000DCC  C003  F070         	movff	?___lldiv+2,sprintf@tmpval+2
  1930  000DD0  C004  F071         	movff	?___lldiv+3,sprintf@tmpval+3
  1931                           
  1932                           ;doprnt.c: 1202: tmpval.vd %= 10;
  1933  000DD4  C06E  F001         	movff	sprintf@tmpval,___llmod@dividend
  1934  000DD8  C06F  F002         	movff	sprintf@tmpval+1,___llmod@dividend+1
  1935  000DDC  C070  F003         	movff	sprintf@tmpval+2,___llmod@dividend+2
  1936  000DE0  C071  F004         	movff	sprintf@tmpval+3,___llmod@dividend+3
  1937  000DE4  0E0A               	movlw	10
  1938  000DE6  6E05               	movwf	___llmod@divisor,c
  1939  000DE8  0E00               	movlw	0
  1940  000DEA  6E06               	movwf	___llmod@divisor+1,c
  1941  000DEC  0E00               	movlw	0
  1942  000DEE  6E07               	movwf	___llmod@divisor+2,c
  1943  000DF0  0E00               	movlw	0
  1944  000DF2  6E08               	movwf	___llmod@divisor+3,c
  1945  000DF4  EC8B  F016         	call	___llmod	;wreg free
  1946  000DF8  C001  F06E         	movff	?___llmod,sprintf@tmpval
  1947  000DFC  C002  F06F         	movff	?___llmod+1,sprintf@tmpval+1
  1948  000E00  C003  F070         	movff	?___llmod+2,sprintf@tmpval+2
  1949  000E04  C004  F071         	movff	?___llmod+3,sprintf@tmpval+3
  1950                           
  1951                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  1952  000E08  0100               	movlb	0	; () banked
  1953  000E0A  516E               	movf	sprintf@tmpval& (0+255),w,b
  1954  000E0C  0F30               	addlw	48
  1955  000E0E  C051  FFD9         	movff	sprintf@sp,fsr2l
  1956  000E12  C052  FFDA         	movff	sprintf@sp+1,fsr2h
  1957  000E16                     L2:
  1958  000E16  6EDF               	movwf	indf2,c
  1959  000E18  D7B3               	goto	l3502
  1960  000E1A                     l3512:
  1961                           
  1962                           ; BSR set to: 0
  1963  000E1A  0100               	movlb	0	; () banked
  1964  000E1C  0778               	decf	sprintf@c& (0+255),f,b
  1965  000E1E  0100               	movlb	0	; () banked
  1966  000E20  2978               	incf	sprintf@c& (0+255),w,b
  1967  000E22  B4D8               	btfsc	status,2,c
  1968  000E24  D00D               	goto	l3520
  1969  000E26  D7AF               	goto	l3504
  1970  000E28                     l3514:
  1971                           
  1972                           ; BSR set to: 0
  1973                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  1974  000E28  C051  FFD9         	movff	sprintf@sp,fsr2l
  1975  000E2C  C052  FFDA         	movff	sprintf@sp+1,fsr2h
  1976  000E30  0E30               	movlw	48
  1977  000E32  6EDF               	movwf	indf2,c
  1978                           
  1979                           ; BSR set to: 0
  1980  000E34  4A51               	infsnz	sprintf@sp,f,c
  1981  000E36  2A52               	incf	sprintf@sp+1,f,c
  1982                           
  1983                           ; BSR set to: 0
  1984                           ;doprnt.c: 1209: exp--;
  1985  000E38  0100               	movlb	0	; () banked
  1986  000E3A  076C               	decf	sprintf@exp& (0+255),f,b
  1987  000E3C  A0D8               	btfss	status,0,c
  1988  000E3E  076D               	decf	(sprintf@exp+1)& (0+255),f,b
  1989  000E40                     l3520:
  1990                           
  1991                           ; BSR set to: 0
  1992  000E40  0100               	movlb	0	; () banked
  1993  000E42  BF6D               	btfsc	(sprintf@exp+1)& (0+255),7,b
  1994  000E44  D007               	goto	l3522
  1995  000E46  0100               	movlb	0	; () banked
  1996  000E48  516D               	movf	(sprintf@exp+1)& (0+255),w,b
  1997  000E4A  E1EE               	bnz	l3514
  1998  000E4C  0100               	movlb	0	; () banked
  1999  000E4E  056C               	decf	sprintf@exp& (0+255),w,b
  2000  000E50  B0D8               	btfsc	status,0,c
  2001  000E52  D7EA               	goto	l3514
  2002  000E54                     l3522:
  2003                           
  2004                           ; BSR set to: 0
  2005                           ;doprnt.c: 1210: }
  2006                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  2007  000E54  0100               	movlb	0	; () banked
  2008  000E56  BF73               	btfsc	(sprintf@prec+1)& (0+255),7,b
  2009  000E58  D00C               	goto	l254
  2010  000E5A  0100               	movlb	0	; () banked
  2011  000E5C  5173               	movf	(sprintf@prec+1)& (0+255),w,b
  2012  000E5E  E105               	bnz	u3840
  2013  000E60  0E09               	movlw	9
  2014  000E62  0100               	movlb	0	; () banked
  2015  000E64  5D72               	subwf	sprintf@prec& (0+255),w,b
  2016  000E66  A0D8               	btfss	status,0,c
  2017  000E68  D004               	goto	l254
  2018  000E6A                     u3840:
  2019                           
  2020                           ; BSR set to: 0
  2021                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  2022  000E6A  0E08               	movlw	8
  2023  000E6C  0100               	movlb	0	; () banked
  2024  000E6E  6F78               	movwf	sprintf@c& (0+255),b
  2025  000E70  D002               	goto	l3526
  2026  000E72                     l254:
  2027                           
  2028                           ; BSR set to: 0
  2029                           ;doprnt.c: 1213: else
  2030                           ;doprnt.c: 1214: c = prec;
  2031  000E72  C072  F078         	movff	sprintf@prec,sprintf@c
  2032  000E76                     l3526:
  2033                           
  2034                           ; BSR set to: 0
  2035                           ;doprnt.c: 1215: prec -= c;
  2036  000E76  0100               	movlb	0	; () banked
  2037  000E78  5178               	movf	sprintf@c& (0+255),w,b
  2038  000E7A  0100               	movlb	0	; () banked
  2039  000E7C  5F72               	subwf	sprintf@prec& (0+255),f,b
  2040  000E7E  0E00               	movlw	0
  2041  000E80  0100               	movlb	0	; () banked
  2042  000E82  BF78               	btfsc	sprintf@c& (0+255),7,b
  2043  000E84  0EFF               	movlw	255
  2044  000E86  0100               	movlb	0	; () banked
  2045  000E88  5B73               	subwfb	(sprintf@prec+1)& (0+255),f,b
  2046                           
  2047                           ; BSR set to: 0
  2048                           ;doprnt.c: 1219: if(c)
  2049  000E8A  0100               	movlb	0	; () banked
  2050  000E8C  5178               	movf	sprintf@c& (0+255),w,b
  2051  000E8E  0100               	movlb	0	; () banked
  2052  000E90  B4D8               	btfsc	status,2,c
  2053  000E92  D008               	goto	l3534
  2054                           
  2055                           ; BSR set to: 0
  2056                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  2057  000E94  C051  FFD9         	movff	sprintf@sp,fsr2l
  2058  000E98  C052  FFDA         	movff	sprintf@sp+1,fsr2h
  2059  000E9C  0E2E               	movlw	46
  2060  000E9E  6EDF               	movwf	indf2,c
  2061                           
  2062                           ; BSR set to: 0
  2063  000EA0  4A51               	infsnz	sprintf@sp,f,c
  2064  000EA2  2A52               	incf	sprintf@sp+1,f,c
  2065  000EA4                     l3534:
  2066                           
  2067                           ; BSR set to: 0
  2068                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  2069  000EA4  0100               	movlb	0	; () banked
  2070  000EA6  5178               	movf	sprintf@c& (0+255),w,b
  2071  000EA8  EC72  F008         	call	_scale
  2072  000EAC  C028  F060         	movff	?_scale,_sprintf$1109
  2073  000EB0  C029  F061         	movff	?_scale+1,_sprintf$1109+1
  2074  000EB4  C02A  F062         	movff	?_scale+2,_sprintf$1109+2
  2075  000EB8  C02B  F063         	movff	?_scale+3,_sprintf$1109+3
  2076                           
  2077                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  2078  000EBC  C074  F013         	movff	sprintf@fval,___flmul@a
  2079  000EC0  C075  F014         	movff	sprintf@fval+1,___flmul@a+1
  2080  000EC4  C076  F015         	movff	sprintf@fval+2,___flmul@a+2
  2081  000EC8  C077  F016         	movff	sprintf@fval+3,___flmul@a+3
  2082  000ECC  C060  F00F         	movff	_sprintf$1109,___flmul@b
  2083  000ED0  C061  F010         	movff	_sprintf$1109+1,___flmul@b+1
  2084  000ED4  C062  F011         	movff	_sprintf$1109+2,___flmul@b+2
  2085  000ED8  C063  F012         	movff	_sprintf$1109+3,___flmul@b+3
  2086  000EDC  EC7E  F00A         	call	___flmul	;wreg free
  2087  000EE0  C00F  F031         	movff	?___flmul,___fltol@f1
  2088  000EE4  C010  F032         	movff	?___flmul+1,___fltol@f1+1
  2089  000EE8  C011  F033         	movff	?___flmul+2,___fltol@f1+2
  2090  000EEC  C012  F034         	movff	?___flmul+3,___fltol@f1+3
  2091  000EF0  ECCE  F014         	call	___fltol	;wreg free
  2092  000EF4  C031  F068         	movff	?___fltol,sprintf@val
  2093  000EF8  C032  F069         	movff	?___fltol+1,sprintf@val+1
  2094  000EFC  C033  F06A         	movff	?___fltol+2,sprintf@val+2
  2095  000F00  C034  F06B         	movff	?___fltol+3,sprintf@val+3
  2096                           
  2097                           ;doprnt.c: 1228: while(c--) {
  2098  000F04  D072               	goto	l3548
  2099  000F06                     l3538:
  2100                           
  2101                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  2102  000F06  C068  F001         	movff	sprintf@val,___lldiv@dividend
  2103  000F0A  C069  F002         	movff	sprintf@val+1,___lldiv@dividend+1
  2104  000F0E  C06A  F003         	movff	sprintf@val+2,___lldiv@dividend+2
  2105  000F12  C06B  F004         	movff	sprintf@val+3,___lldiv@dividend+3
  2106  000F16  0100               	movlb	0	; () banked
  2107  000F18  5178               	movf	sprintf@c& (0+255),w,b
  2108  000F1A  0D04               	mullw	4
  2109  000F1C  0E69               	movlw	low _dpowers
  2110  000F1E  24F3               	addwf	prodl,w,c
  2111  000F20  6EF6               	movwf	tblptrl,c
  2112  000F22  0E08               	movlw	high _dpowers
  2113  000F24  20F4               	addwfc	prodh,w,c
  2114  000F26  6EF7               	movwf	tblptrh,c
  2115  000F28                     	if	0	;There are less than 3 active tblptr bytes
  2116  000F28                     	endif
  2117  000F28  0009               	tblrd		*+
  2118  000F2A  CFF5 F005          	movff	tablat,___lldiv@divisor
  2119  000F2E  0009               	tblrd		*+
  2120  000F30  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  2121  000F34  0009               	tblrd		*+
  2122  000F36  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  2123  000F3A  000A               	tblrd		*-
  2124  000F3C  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  2125  000F40  ECDA  F015         	call	___lldiv	;wreg free
  2126  000F44  C001  F06E         	movff	?___lldiv,sprintf@tmpval
  2127  000F48  C002  F06F         	movff	?___lldiv+1,sprintf@tmpval+1
  2128  000F4C  C003  F070         	movff	?___lldiv+2,sprintf@tmpval+2
  2129  000F50  C004  F071         	movff	?___lldiv+3,sprintf@tmpval+3
  2130                           
  2131                           ;doprnt.c: 1230: tmpval.vd %= 10;
  2132  000F54  C06E  F001         	movff	sprintf@tmpval,___llmod@dividend
  2133  000F58  C06F  F002         	movff	sprintf@tmpval+1,___llmod@dividend+1
  2134  000F5C  C070  F003         	movff	sprintf@tmpval+2,___llmod@dividend+2
  2135  000F60  C071  F004         	movff	sprintf@tmpval+3,___llmod@dividend+3
  2136  000F64  0E0A               	movlw	10
  2137  000F66  6E05               	movwf	___llmod@divisor,c
  2138  000F68  0E00               	movlw	0
  2139  000F6A  6E06               	movwf	___llmod@divisor+1,c
  2140  000F6C  0E00               	movlw	0
  2141  000F6E  6E07               	movwf	___llmod@divisor+2,c
  2142  000F70  0E00               	movlw	0
  2143  000F72  6E08               	movwf	___llmod@divisor+3,c
  2144  000F74  EC8B  F016         	call	___llmod	;wreg free
  2145  000F78  C001  F06E         	movff	?___llmod,sprintf@tmpval
  2146  000F7C  C002  F06F         	movff	?___llmod+1,sprintf@tmpval+1
  2147  000F80  C003  F070         	movff	?___llmod+2,sprintf@tmpval+2
  2148  000F84  C004  F071         	movff	?___llmod+3,sprintf@tmpval+3
  2149                           
  2150                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  2151  000F88  0100               	movlb	0	; () banked
  2152  000F8A  516E               	movf	sprintf@tmpval& (0+255),w,b
  2153  000F8C  0F30               	addlw	48
  2154  000F8E  C051  FFD9         	movff	sprintf@sp,fsr2l
  2155  000F92  C052  FFDA         	movff	sprintf@sp+1,fsr2h
  2156  000F96  6EDF               	movwf	indf2,c
  2157                           
  2158                           ; BSR set to: 0
  2159  000F98  4A51               	infsnz	sprintf@sp,f,c
  2160  000F9A  2A52               	incf	sprintf@sp+1,f,c
  2161                           
  2162                           ; BSR set to: 0
  2163                           ;doprnt.c: 1232: val %= dpowers[c];
  2164  000F9C  C068  F001         	movff	sprintf@val,___llmod@dividend
  2165  000FA0  C069  F002         	movff	sprintf@val+1,___llmod@dividend+1
  2166  000FA4  C06A  F003         	movff	sprintf@val+2,___llmod@dividend+2
  2167  000FA8  C06B  F004         	movff	sprintf@val+3,___llmod@dividend+3
  2168  000FAC  0100               	movlb	0	; () banked
  2169  000FAE  5178               	movf	sprintf@c& (0+255),w,b
  2170  000FB0  0D04               	mullw	4
  2171  000FB2  0E69               	movlw	low _dpowers
  2172  000FB4  24F3               	addwf	prodl,w,c
  2173  000FB6  6EF6               	movwf	tblptrl,c
  2174  000FB8  0E08               	movlw	high _dpowers
  2175  000FBA  20F4               	addwfc	prodh,w,c
  2176  000FBC  6EF7               	movwf	tblptrh,c
  2177  000FBE                     	if	0	;There are less than 3 active tblptr bytes
  2178  000FBE                     	endif
  2179  000FBE  0009               	tblrd		*+
  2180  000FC0  CFF5 F005          	movff	tablat,___llmod@divisor
  2181  000FC4  0009               	tblrd		*+
  2182  000FC6  CFF5 F006          	movff	tablat,___llmod@divisor+1
  2183  000FCA  0009               	tblrd		*+
  2184  000FCC  CFF5 F007          	movff	tablat,___llmod@divisor+2
  2185  000FD0  000A               	tblrd		*-
  2186  000FD2  CFF5 F008          	movff	tablat,___llmod@divisor+3
  2187  000FD6  EC8B  F016         	call	___llmod	;wreg free
  2188  000FDA  C001  F068         	movff	?___llmod,sprintf@val
  2189  000FDE  C002  F069         	movff	?___llmod+1,sprintf@val+1
  2190  000FE2  C003  F06A         	movff	?___llmod+2,sprintf@val+2
  2191  000FE6  C004  F06B         	movff	?___llmod+3,sprintf@val+3
  2192  000FEA                     l3548:
  2193  000FEA  0100               	movlb	0	; () banked
  2194  000FEC  0778               	decf	sprintf@c& (0+255),f,b
  2195  000FEE  0100               	movlb	0	; () banked
  2196  000FF0  2978               	incf	sprintf@c& (0+255),w,b
  2197  000FF2  B4D8               	btfsc	status,2,c
  2198  000FF4  D00D               	goto	l3556
  2199  000FF6  D787               	goto	l3538
  2200  000FF8                     l3550:
  2201                           
  2202                           ; BSR set to: 0
  2203                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  2204  000FF8  C051  FFD9         	movff	sprintf@sp,fsr2l
  2205  000FFC  C052  FFDA         	movff	sprintf@sp+1,fsr2h
  2206  001000  0E30               	movlw	48
  2207  001002  6EDF               	movwf	indf2,c
  2208                           
  2209                           ; BSR set to: 0
  2210  001004  4A51               	infsnz	sprintf@sp,f,c
  2211  001006  2A52               	incf	sprintf@sp+1,f,c
  2212                           
  2213                           ; BSR set to: 0
  2214                           ;doprnt.c: 1237: prec--;
  2215  001008  0100               	movlb	0	; () banked
  2216  00100A  0772               	decf	sprintf@prec& (0+255),f,b
  2217  00100C  A0D8               	btfss	status,0,c
  2218  00100E  0773               	decf	(sprintf@prec+1)& (0+255),f,b
  2219  001010                     l3556:
  2220                           
  2221                           ; BSR set to: 0
  2222  001010  0100               	movlb	0	; () banked
  2223  001012  5172               	movf	sprintf@prec& (0+255),w,b
  2224  001014  0100               	movlb	0	; () banked
  2225  001016  1173               	iorwf	(sprintf@prec+1)& (0+255),w,b
  2226  001018  B4D8               	btfsc	status,2,c
  2227  00101A  D050               	goto	l3578
  2228  00101C  D7ED               	goto	l3550
  2229  00101E                     l3558:
  2230                           
  2231                           ; BSR set to: 0
  2232                           ;doprnt.c: 1246: }
  2233                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  2234  00101E  0100               	movlb	0	; () banked
  2235  001020  5172               	movf	sprintf@prec& (0+255),w,b
  2236  001022  0100               	movlb	0	; () banked
  2237  001024  1173               	iorwf	(sprintf@prec+1)& (0+255),w,b
  2238  001026  A4D8               	btfss	status,2,c
  2239  001028  D00D               	goto	l3564
  2240                           
  2241                           ; BSR set to: 0
  2242  00102A  0100               	movlb	0	; () banked
  2243  00102C  5168               	movf	sprintf@val& (0+255),w,b
  2244  00102E  0100               	movlb	0	; () banked
  2245  001030  1169               	iorwf	(sprintf@val+1)& (0+255),w,b
  2246  001032  0100               	movlb	0	; () banked
  2247  001034  116A               	iorwf	(sprintf@val+2)& (0+255),w,b
  2248  001036  0100               	movlb	0	; () banked
  2249  001038  116B               	iorwf	(sprintf@val+3)& (0+255),w,b
  2250  00103A  A4D8               	btfss	status,2,c
  2251  00103C  D003               	goto	l3564
  2252                           
  2253                           ; BSR set to: 0
  2254                           ;doprnt.c: 1291: prec++;
  2255  00103E  0100               	movlb	0	; () banked
  2256  001040  4B72               	infsnz	sprintf@prec& (0+255),f,b
  2257  001042  2B73               	incf	(sprintf@prec+1)& (0+255),f,b
  2258  001044                     l3564:
  2259                           
  2260                           ; BSR set to: 0
  2261                           ;doprnt.c: 1339: if(c < prec)
  2262  001044  0E80               	movlw	128
  2263  001046  0100               	movlb	0	; () banked
  2264  001048  BF78               	btfsc	sprintf@c& (0+255),7,b
  2265  00104A  0E7F               	movlw	127
  2266  00104C  6E59               	movwf	??_sprintf& (0+255),c
  2267  00104E  0100               	movlb	0	; () banked
  2268  001050  5172               	movf	sprintf@prec& (0+255),w,b
  2269  001052  0100               	movlb	0	; () banked
  2270  001054  5D78               	subwf	sprintf@c& (0+255),w,b
  2271  001056  0100               	movlb	0	; () banked
  2272  001058  5173               	movf	(sprintf@prec+1)& (0+255),w,b
  2273  00105A  0A80               	xorlw	128
  2274  00105C  5859               	subwfb	??_sprintf& (0+255),w,c
  2275  00105E  B0D8               	btfsc	status,0,c
  2276  001060  D003               	goto	l3568
  2277                           
  2278                           ; BSR set to: 0
  2279                           ;doprnt.c: 1340: c = prec;
  2280  001062  C072  F078         	movff	sprintf@prec,sprintf@c
  2281  001066  D016               	goto	l3572
  2282  001068                     l3568:
  2283                           
  2284                           ; BSR set to: 0
  2285                           ;doprnt.c: 1341: else if(prec < c)
  2286  001068  0100               	movlb	0	; () banked
  2287  00106A  5173               	movf	(sprintf@prec+1)& (0+255),w,b
  2288  00106C  0A80               	xorlw	128
  2289  00106E  6E59               	movwf	??_sprintf& (0+255),c
  2290  001070  0100               	movlb	0	; () banked
  2291  001072  5178               	movf	sprintf@c& (0+255),w,b
  2292  001074  0100               	movlb	0	; () banked
  2293  001076  5D72               	subwf	sprintf@prec& (0+255),w,b
  2294  001078  0E80               	movlw	128
  2295  00107A  0100               	movlb	0	; () banked
  2296  00107C  BF78               	btfsc	sprintf@c& (0+255),7,b
  2297  00107E  0E7F               	movlw	127
  2298  001080  5859               	subwfb	??_sprintf& (0+255),w,c
  2299  001082  B0D8               	btfsc	status,0,c
  2300  001084  D007               	goto	l3572
  2301                           
  2302                           ; BSR set to: 0
  2303                           ;doprnt.c: 1342: prec = c;
  2304  001086  0100               	movlb	0	; () banked
  2305  001088  5178               	movf	sprintf@c& (0+255),w,b
  2306  00108A  0100               	movlb	0	; () banked
  2307  00108C  6F72               	movwf	sprintf@prec& (0+255),b
  2308  00108E  6B73               	clrf	(sprintf@prec+1)& (0+255),b
  2309  001090  BF72               	btfsc	sprintf@prec& (0+255),7,b
  2310  001092  0773               	decf	(sprintf@prec+1)& (0+255),f,b
  2311  001094                     l3572:
  2312                           
  2313                           ; BSR set to: 0
  2314                           ;doprnt.c: 1422: {
  2315                           ;doprnt.c: 1438: if(flag & 0x03)
  2316  001094  0E03               	movlw	3
  2317  001096  0100               	movlb	0	; () banked
  2318  001098  1566               	andwf	sprintf@flag& (0+255),w,b
  2319  00109A  6E59               	movwf	??_sprintf& (0+255),c
  2320  00109C  0E00               	movlw	0
  2321  00109E  0100               	movlb	0	; () banked
  2322  0010A0  1567               	andwf	(sprintf@flag+1)& (0+255),w,b
  2323  0010A2  6E5A               	movwf	(??_sprintf+1)& (0+255),c
  2324  0010A4  5059               	movf	??_sprintf,w,c
  2325  0010A6  105A               	iorwf	??_sprintf+1,w,c
  2326  0010A8  B4D8               	btfsc	status,2,c
  2327  0010AA  D008               	goto	l3578
  2328                           
  2329                           ; BSR set to: 0
  2330                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  2331  0010AC  C051  FFD9         	movff	sprintf@sp,fsr2l
  2332  0010B0  C052  FFDA         	movff	sprintf@sp+1,fsr2h
  2333  0010B4  0E2D               	movlw	45
  2334  0010B6  6EDF               	movwf	indf2,c
  2335  0010B8                     l3576:
  2336                           
  2337                           ; BSR set to: 0
  2338  0010B8  4A51               	infsnz	sprintf@sp,f,c
  2339  0010BA  2A52               	incf	sprintf@sp+1,f,c
  2340  0010BC                     l3578:
  2341                           
  2342                           ; BSR set to: 0
  2343  0010BC  C053  FFF6         	movff	sprintf@f,tblptrl
  2344  0010C0  C054  FFF7         	movff	sprintf@f+1,tblptrh
  2345  0010C4  4A53               	infsnz	sprintf@f,f,c
  2346  0010C6  2A54               	incf	sprintf@f+1,f,c
  2347  0010C8                     	if	0	;tblptru may be non-zero
  2348  0010C8                     	endif
  2349  0010C8                     	if	0	;tblptru may be non-zero
  2350  0010C8                     	endif
  2351  0010C8  0008               	tblrd		*
  2352  0010CA  CFF5 F078          	movff	tablat,sprintf@c
  2353  0010CE  0100               	movlb	0	; () banked
  2354  0010D0  5178               	movf	sprintf@c& (0+255),w,b
  2355  0010D2  A4D8               	btfss	status,2,c
  2356  0010D4  D406               	goto	l3380
  2357  0010D6                     l3580:
  2358                           
  2359                           ; BSR set to: 0
  2360                           ;doprnt.c: 1538: *sp = 0;
  2361  0010D6  C051  FFD9         	movff	sprintf@sp,fsr2l
  2362  0010DA  C052  FFDA         	movff	sprintf@sp+1,fsr2h
  2363  0010DE  0E00               	movlw	0
  2364  0010E0  6EDF               	movwf	indf2,c
  2365  0010E2  0012               	return	
  2366  0010E4                     __end_of_sprintf:
  2367                           	opt stack 0
  2368                           tblptru	equ	0xFF8
  2369                           tblptrh	equ	0xFF7
  2370                           tblptrl	equ	0xFF6
  2371                           tablat	equ	0xFF5
  2372                           prodh	equ	0xFF4
  2373                           prodl	equ	0xFF3
  2374                           postinc0	equ	0xFEE
  2375                           wreg	equ	0xFE8
  2376                           indf2	equ	0xFDF
  2377                           postinc2	equ	0xFDE
  2378                           fsr2h	equ	0xFDA
  2379                           fsr2l	equ	0xFD9
  2380                           status	equ	0xFD8
  2381                           
  2382 ;; *************** function _scale *****************
  2383 ;; Defined at:
  2384 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\doprnt.c"
  2385 ;; Parameters:    Size  Location     Type
  2386 ;;  scl             1    wreg     char 
  2387 ;; Auto vars:     Size  Location     Type
  2388 ;;  scl             1   47[COMRAM] char 
  2389 ;; Return value:  Size  Location     Type
  2390 ;;                  4   39[COMRAM] char 
  2391 ;; Registers used:
  2392 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2393 ;; Tracked objects:
  2394 ;;		On entry : 0/0
  2395 ;;		On exit  : 0/0
  2396 ;;		Unchanged: 0/0
  2397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2398 ;;      Params:         4       0       0       0       0       0       0       0       0
  2399 ;;      Locals:         5       0       0       0       0       0       0       0       0
  2400 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2401 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2402 ;;Total ram usage:        9 bytes
  2403 ;; Hardware stack levels used:    1
  2404 ;; Hardware stack levels required when called:    1
  2405 ;; This function calls:
  2406 ;;		___awdiv
  2407 ;;		___awmod
  2408 ;;		___flmul
  2409 ;; This function is called by:
  2410 ;;		_sprintf
  2411 ;; This function uses a non-reentrant model
  2412 ;;
  2413                           
  2414                           	psect	text3
  2415  0010E4                     __ptext3:
  2416                           	opt stack 0
  2417  0010E4                     _scale:
  2418                           	opt stack 27
  2419                           
  2420                           ; BSR set to: 0
  2421                           ;incstack = 0
  2422                           ;scale@scl stored from wreg
  2423  0010E4  6E30               	movwf	scale@scl,c
  2424                           
  2425                           ;doprnt.c: 428: if(scl < 0) {
  2426  0010E6  AE30               	btfss	scale@scl,7,c
  2427  0010E8  D105               	goto	l2838
  2428                           
  2429                           ;doprnt.c: 429: scl = -scl;
  2430  0010EA  6C30               	negf	scale@scl,c
  2431                           
  2432                           ;doprnt.c: 430: if(scl>=110)
  2433  0010EC  5030               	movf	scale@scl,w,c
  2434  0010EE  0A80               	xorlw	128
  2435  0010F0  0F12               	addlw	-238
  2436  0010F2  A0D8               	btfss	status,0,c
  2437  0010F4  D098               	goto	l2828
  2438                           
  2439                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  2440  0010F6  0E00               	movlw	0
  2441  0010F8  6E0A               	movwf	___awdiv@divisor+1,c
  2442  0010FA  0E0A               	movlw	10
  2443  0010FC  6E09               	movwf	___awdiv@divisor,c
  2444  0010FE  0E00               	movlw	0
  2445  001100  6E04               	movwf	___awmod@divisor+1,c
  2446  001102  0E64               	movlw	100
  2447  001104  6E03               	movwf	___awmod@divisor,c
  2448  001106  5030               	movf	scale@scl,w,c
  2449  001108  6E01               	movwf	___awmod@dividend,c
  2450  00110A  6A02               	clrf	___awmod@dividend+1,c
  2451  00110C  BE01               	btfsc	___awmod@dividend,7,c
  2452  00110E  0602               	decf	___awmod@dividend+1,f,c
  2453  001110  EC1B  F016         	call	___awmod	;wreg free
  2454  001114  C001  F007         	movff	?___awmod,___awdiv@dividend
  2455  001118  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  2456  00111C  EC98  F015         	call	___awdiv	;wreg free
  2457  001120  90D8               	bcf	status,0,c
  2458  001122  3607               	rlcf	?___awdiv,f,c
  2459  001124  3608               	rlcf	?___awdiv+1,f,c
  2460  001126  90D8               	bcf	status,0,c
  2461  001128  3607               	rlcf	?___awdiv,f,c
  2462  00112A  3608               	rlcf	?___awdiv+1,f,c
  2463  00112C  0E24               	movlw	36
  2464  00112E  2607               	addwf	?___awdiv,f,c
  2465  001130  0E00               	movlw	0
  2466  001132  2208               	addwfc	?___awdiv+1,f,c
  2467  001134  0E01               	movlw	low __npowers_
  2468  001136  2407               	addwf	?___awdiv,w,c
  2469  001138  6EF6               	movwf	tblptrl,c
  2470  00113A  0E08               	movlw	high __npowers_
  2471  00113C  2008               	addwfc	?___awdiv+1,w,c
  2472  00113E  6EF7               	movwf	tblptrh,c
  2473  001140                     	if	0	;There are less than 3 active tblptr bytes
  2474  001140                     	endif
  2475  001140  0009               	tblrd		*+
  2476  001142  CFF5 F013          	movff	tablat,___flmul@a
  2477  001146  0009               	tblrd		*+
  2478  001148  CFF5 F014          	movff	tablat,___flmul@a+1
  2479  00114C  0009               	tblrd		*+
  2480  00114E  CFF5 F015          	movff	tablat,___flmul@a+2
  2481  001152  000A               	tblrd		*-
  2482  001154  CFF5 F016          	movff	tablat,___flmul@a+3
  2483  001158  0E00               	movlw	0
  2484  00115A  6E0A               	movwf	___awdiv@divisor+1,c
  2485  00115C  0E64               	movlw	100
  2486  00115E  6E09               	movwf	___awdiv@divisor,c
  2487  001160  5030               	movf	scale@scl,w,c
  2488  001162  6E07               	movwf	___awdiv@dividend,c
  2489  001164  6A08               	clrf	___awdiv@dividend+1,c
  2490  001166  BE07               	btfsc	___awdiv@dividend,7,c
  2491  001168  0608               	decf	___awdiv@dividend+1,f,c
  2492  00116A  EC98  F015         	call	___awdiv	;wreg free
  2493  00116E  90D8               	bcf	status,0,c
  2494  001170  3607               	rlcf	?___awdiv,f,c
  2495  001172  3608               	rlcf	?___awdiv+1,f,c
  2496  001174  90D8               	bcf	status,0,c
  2497  001176  3607               	rlcf	?___awdiv,f,c
  2498  001178  3608               	rlcf	?___awdiv+1,f,c
  2499  00117A  0E48               	movlw	72
  2500  00117C  2607               	addwf	?___awdiv,f,c
  2501  00117E  0E00               	movlw	0
  2502  001180  2208               	addwfc	?___awdiv+1,f,c
  2503  001182  0E01               	movlw	low __npowers_
  2504  001184  2407               	addwf	?___awdiv,w,c
  2505  001186  6EF6               	movwf	tblptrl,c
  2506  001188  0E08               	movlw	high __npowers_
  2507  00118A  2008               	addwfc	?___awdiv+1,w,c
  2508  00118C  6EF7               	movwf	tblptrh,c
  2509  00118E                     	if	0	;There are less than 3 active tblptr bytes
  2510  00118E                     	endif
  2511  00118E  0009               	tblrd		*+
  2512  001190  CFF5 F00F          	movff	tablat,___flmul@b
  2513  001194  0009               	tblrd		*+
  2514  001196  CFF5 F010          	movff	tablat,___flmul@b+1
  2515  00119A  0009               	tblrd		*+
  2516  00119C  CFF5 F011          	movff	tablat,___flmul@b+2
  2517  0011A0  000A               	tblrd		*-
  2518  0011A2  CFF5 F012          	movff	tablat,___flmul@b+3
  2519  0011A6  EC7E  F00A         	call	___flmul	;wreg free
  2520  0011AA  C00F  F02C         	movff	?___flmul,_scale$1108
  2521  0011AE  C010  F02D         	movff	?___flmul+1,_scale$1108+1
  2522  0011B2  C011  F02E         	movff	?___flmul+2,_scale$1108+2
  2523  0011B6  C012  F02F         	movff	?___flmul+3,_scale$1108+3
  2524                           
  2525                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  2526  0011BA  C02C  F00F         	movff	_scale$1108,___flmul@b
  2527  0011BE  C02D  F010         	movff	_scale$1108+1,___flmul@b+1
  2528  0011C2  C02E  F011         	movff	_scale$1108+2,___flmul@b+2
  2529  0011C6  C02F  F012         	movff	_scale$1108+3,___flmul@b+3
  2530  0011CA  0E00               	movlw	0
  2531  0011CC  6E04               	movwf	___awmod@divisor+1,c
  2532  0011CE  0E0A               	movlw	10
  2533  0011D0  6E03               	movwf	___awmod@divisor,c
  2534  0011D2  5030               	movf	scale@scl,w,c
  2535  0011D4  6E01               	movwf	___awmod@dividend,c
  2536  0011D6  6A02               	clrf	___awmod@dividend+1,c
  2537  0011D8  BE01               	btfsc	___awmod@dividend,7,c
  2538  0011DA  0602               	decf	___awmod@dividend+1,f,c
  2539  0011DC  EC1B  F016         	call	___awmod	;wreg free
  2540  0011E0  90D8               	bcf	status,0,c
  2541  0011E2  3601               	rlcf	?___awmod,f,c
  2542  0011E4  3602               	rlcf	?___awmod+1,f,c
  2543  0011E6  90D8               	bcf	status,0,c
  2544  0011E8  3601               	rlcf	?___awmod,f,c
  2545  0011EA  3602               	rlcf	?___awmod+1,f,c
  2546  0011EC  0E01               	movlw	low __npowers_
  2547  0011EE  2401               	addwf	?___awmod,w,c
  2548  0011F0  6EF6               	movwf	tblptrl,c
  2549  0011F2  0E08               	movlw	high __npowers_
  2550  0011F4  2002               	addwfc	?___awmod+1,w,c
  2551  0011F6  6EF7               	movwf	tblptrh,c
  2552  0011F8                     	if	0	;There are less than 3 active tblptr bytes
  2553  0011F8                     	endif
  2554  0011F8  0009               	tblrd		*+
  2555  0011FA  CFF5 F013          	movff	tablat,___flmul@a
  2556  0011FE  0009               	tblrd		*+
  2557  001200  CFF5 F014          	movff	tablat,___flmul@a+1
  2558  001204  0009               	tblrd		*+
  2559  001206  CFF5 F015          	movff	tablat,___flmul@a+2
  2560  00120A  000A               	tblrd		*-
  2561  00120C  CFF5 F016          	movff	tablat,___flmul@a+3
  2562  001210  EC7E  F00A         	call	___flmul	;wreg free
  2563  001214  C00F  F028         	movff	?___flmul,?_scale
  2564  001218  C010  F029         	movff	?___flmul+1,?_scale+1
  2565  00121C  C011  F02A         	movff	?___flmul+2,?_scale+2
  2566  001220  C012  F02B         	movff	?___flmul+3,?_scale+3
  2567  001224  0012               	return	
  2568  001226                     l2828:
  2569                           
  2570                           ;doprnt.c: 432: else if(scl > 10)
  2571  001226  5030               	movf	scale@scl,w,c
  2572  001228  0A80               	xorlw	128
  2573  00122A  0F75               	addlw	-139
  2574  00122C  A0D8               	btfss	status,0,c
  2575  00122E  D04D               	goto	l2834
  2576                           
  2577                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  2578  001230  0E00               	movlw	0
  2579  001232  6E0A               	movwf	___awdiv@divisor+1,c
  2580  001234  0E0A               	movlw	10
  2581  001236  6E09               	movwf	___awdiv@divisor,c
  2582  001238  5030               	movf	scale@scl,w,c
  2583  00123A  6E07               	movwf	___awdiv@dividend,c
  2584  00123C  6A08               	clrf	___awdiv@dividend+1,c
  2585  00123E  BE07               	btfsc	___awdiv@dividend,7,c
  2586  001240  0608               	decf	___awdiv@dividend+1,f,c
  2587  001242  EC98  F015         	call	___awdiv	;wreg free
  2588  001246  90D8               	bcf	status,0,c
  2589  001248  3607               	rlcf	?___awdiv,f,c
  2590  00124A  3608               	rlcf	?___awdiv+1,f,c
  2591  00124C  90D8               	bcf	status,0,c
  2592  00124E  3607               	rlcf	?___awdiv,f,c
  2593  001250  3608               	rlcf	?___awdiv+1,f,c
  2594  001252  0E24               	movlw	36
  2595  001254  2607               	addwf	?___awdiv,f,c
  2596  001256  0E00               	movlw	0
  2597  001258  2208               	addwfc	?___awdiv+1,f,c
  2598  00125A  0E01               	movlw	low __npowers_
  2599  00125C  2407               	addwf	?___awdiv,w,c
  2600  00125E  6EF6               	movwf	tblptrl,c
  2601  001260  0E08               	movlw	high __npowers_
  2602  001262  2008               	addwfc	?___awdiv+1,w,c
  2603  001264  6EF7               	movwf	tblptrh,c
  2604  001266                     	if	0	;There are less than 3 active tblptr bytes
  2605  001266                     	endif
  2606  001266  0009               	tblrd		*+
  2607  001268  CFF5 F00F          	movff	tablat,___flmul@b
  2608  00126C  0009               	tblrd		*+
  2609  00126E  CFF5 F010          	movff	tablat,___flmul@b+1
  2610  001272  0009               	tblrd		*+
  2611  001274  CFF5 F011          	movff	tablat,___flmul@b+2
  2612  001278  000A               	tblrd		*-
  2613  00127A  CFF5 F012          	movff	tablat,___flmul@b+3
  2614  00127E  0E00               	movlw	0
  2615  001280  6E04               	movwf	___awmod@divisor+1,c
  2616  001282  0E0A               	movlw	10
  2617  001284  6E03               	movwf	___awmod@divisor,c
  2618  001286  5030               	movf	scale@scl,w,c
  2619  001288  6E01               	movwf	___awmod@dividend,c
  2620  00128A  6A02               	clrf	___awmod@dividend+1,c
  2621  00128C  BE01               	btfsc	___awmod@dividend,7,c
  2622  00128E  0602               	decf	___awmod@dividend+1,f,c
  2623  001290  EC1B  F016         	call	___awmod	;wreg free
  2624  001294  90D8               	bcf	status,0,c
  2625  001296  3601               	rlcf	?___awmod,f,c
  2626  001298  3602               	rlcf	?___awmod+1,f,c
  2627  00129A  90D8               	bcf	status,0,c
  2628  00129C  3601               	rlcf	?___awmod,f,c
  2629  00129E  3602               	rlcf	?___awmod+1,f,c
  2630  0012A0  0E01               	movlw	low __npowers_
  2631  0012A2  2401               	addwf	?___awmod,w,c
  2632  0012A4  6EF6               	movwf	tblptrl,c
  2633  0012A6  0E08               	movlw	high __npowers_
  2634  0012A8  2002               	addwfc	?___awmod+1,w,c
  2635  0012AA  6EF7               	movwf	tblptrh,c
  2636  0012AC                     	if	0	;There are less than 3 active tblptr bytes
  2637  0012AC                     	endif
  2638  0012AC  0009               	tblrd		*+
  2639  0012AE  CFF5 F013          	movff	tablat,___flmul@a
  2640  0012B2  0009               	tblrd		*+
  2641  0012B4  CFF5 F014          	movff	tablat,___flmul@a+1
  2642  0012B8  0009               	tblrd		*+
  2643  0012BA  CFF5 F015          	movff	tablat,___flmul@a+2
  2644  0012BE  000A               	tblrd		*-
  2645  0012C0  CFF5 F016          	movff	tablat,___flmul@a+3
  2646  0012C4  EC7E  F00A         	call	___flmul	;wreg free
  2647  0012C8  D7A5               	goto	L3
  2648  0012CA                     l2834:
  2649                           
  2650                           ;doprnt.c: 434: return _npowers_[scl];
  2651  0012CA  5030               	movf	scale@scl,w,c
  2652  0012CC  0D04               	mullw	4
  2653  0012CE  0E01               	movlw	low __npowers_
  2654  0012D0  24F3               	addwf	prodl,w,c
  2655  0012D2  6EF6               	movwf	tblptrl,c
  2656  0012D4  0E08               	movlw	high __npowers_
  2657  0012D6  20F4               	addwfc	prodh,w,c
  2658  0012D8  6EF7               	movwf	tblptrh,c
  2659  0012DA                     	if	0	;There are less than 3 active tblptr bytes
  2660  0012DA                     	endif
  2661  0012DA  0009               	tblrd		*+
  2662  0012DC  CFF5 F028          	movff	tablat,?_scale
  2663  0012E0  0009               	tblrd		*+
  2664  0012E2  CFF5 F029          	movff	tablat,?_scale+1
  2665  0012E6  0009               	tblrd		*+
  2666  0012E8  CFF5 F02A          	movff	tablat,?_scale+2
  2667  0012EC  000A               	tblrd		*-
  2668  0012EE  CFF5 F02B          	movff	tablat,?_scale+3
  2669  0012F2  0012               	return	
  2670  0012F4                     l2838:
  2671                           
  2672                           ;doprnt.c: 435: }
  2673                           ;doprnt.c: 436: if(scl>=110)
  2674  0012F4  5030               	movf	scale@scl,w,c
  2675  0012F6  0A80               	xorlw	128
  2676  0012F8  0F12               	addlw	-238
  2677  0012FA  A0D8               	btfss	status,0,c
  2678  0012FC  D098               	goto	l2846
  2679                           
  2680                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  2681  0012FE  0E00               	movlw	0
  2682  001300  6E0A               	movwf	___awdiv@divisor+1,c
  2683  001302  0E0A               	movlw	10
  2684  001304  6E09               	movwf	___awdiv@divisor,c
  2685  001306  0E00               	movlw	0
  2686  001308  6E04               	movwf	___awmod@divisor+1,c
  2687  00130A  0E64               	movlw	100
  2688  00130C  6E03               	movwf	___awmod@divisor,c
  2689  00130E  5030               	movf	scale@scl,w,c
  2690  001310  6E01               	movwf	___awmod@dividend,c
  2691  001312  6A02               	clrf	___awmod@dividend+1,c
  2692  001314  BE01               	btfsc	___awmod@dividend,7,c
  2693  001316  0602               	decf	___awmod@dividend+1,f,c
  2694  001318  EC1B  F016         	call	___awmod	;wreg free
  2695  00131C  C001  F007         	movff	?___awmod,___awdiv@dividend
  2696  001320  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  2697  001324  EC98  F015         	call	___awdiv	;wreg free
  2698  001328  90D8               	bcf	status,0,c
  2699  00132A  3607               	rlcf	?___awdiv,f,c
  2700  00132C  3608               	rlcf	?___awdiv+1,f,c
  2701  00132E  90D8               	bcf	status,0,c
  2702  001330  3607               	rlcf	?___awdiv,f,c
  2703  001332  3608               	rlcf	?___awdiv+1,f,c
  2704  001334  0E24               	movlw	36
  2705  001336  2607               	addwf	?___awdiv,f,c
  2706  001338  0E00               	movlw	0
  2707  00133A  2208               	addwfc	?___awdiv+1,f,c
  2708  00133C  0E35               	movlw	low __powers_
  2709  00133E  2407               	addwf	?___awdiv,w,c
  2710  001340  6EF6               	movwf	tblptrl,c
  2711  001342  0E08               	movlw	high __powers_
  2712  001344  2008               	addwfc	?___awdiv+1,w,c
  2713  001346  6EF7               	movwf	tblptrh,c
  2714  001348                     	if	0	;There are less than 3 active tblptr bytes
  2715  001348                     	endif
  2716  001348  0009               	tblrd		*+
  2717  00134A  CFF5 F013          	movff	tablat,___flmul@a
  2718  00134E  0009               	tblrd		*+
  2719  001350  CFF5 F014          	movff	tablat,___flmul@a+1
  2720  001354  0009               	tblrd		*+
  2721  001356  CFF5 F015          	movff	tablat,___flmul@a+2
  2722  00135A  000A               	tblrd		*-
  2723  00135C  CFF5 F016          	movff	tablat,___flmul@a+3
  2724  001360  0E00               	movlw	0
  2725  001362  6E0A               	movwf	___awdiv@divisor+1,c
  2726  001364  0E64               	movlw	100
  2727  001366  6E09               	movwf	___awdiv@divisor,c
  2728  001368  5030               	movf	scale@scl,w,c
  2729  00136A  6E07               	movwf	___awdiv@dividend,c
  2730  00136C  6A08               	clrf	___awdiv@dividend+1,c
  2731  00136E  BE07               	btfsc	___awdiv@dividend,7,c
  2732  001370  0608               	decf	___awdiv@dividend+1,f,c
  2733  001372  EC98  F015         	call	___awdiv	;wreg free
  2734  001376  90D8               	bcf	status,0,c
  2735  001378  3607               	rlcf	?___awdiv,f,c
  2736  00137A  3608               	rlcf	?___awdiv+1,f,c
  2737  00137C  90D8               	bcf	status,0,c
  2738  00137E  3607               	rlcf	?___awdiv,f,c
  2739  001380  3608               	rlcf	?___awdiv+1,f,c
  2740  001382  0E48               	movlw	72
  2741  001384  2607               	addwf	?___awdiv,f,c
  2742  001386  0E00               	movlw	0
  2743  001388  2208               	addwfc	?___awdiv+1,f,c
  2744  00138A  0E35               	movlw	low __powers_
  2745  00138C  2407               	addwf	?___awdiv,w,c
  2746  00138E  6EF6               	movwf	tblptrl,c
  2747  001390  0E08               	movlw	high __powers_
  2748  001392  2008               	addwfc	?___awdiv+1,w,c
  2749  001394  6EF7               	movwf	tblptrh,c
  2750  001396                     	if	0	;There are less than 3 active tblptr bytes
  2751  001396                     	endif
  2752  001396  0009               	tblrd		*+
  2753  001398  CFF5 F00F          	movff	tablat,___flmul@b
  2754  00139C  0009               	tblrd		*+
  2755  00139E  CFF5 F010          	movff	tablat,___flmul@b+1
  2756  0013A2  0009               	tblrd		*+
  2757  0013A4  CFF5 F011          	movff	tablat,___flmul@b+2
  2758  0013A8  000A               	tblrd		*-
  2759  0013AA  CFF5 F012          	movff	tablat,___flmul@b+3
  2760  0013AE  EC7E  F00A         	call	___flmul	;wreg free
  2761  0013B2  C00F  F02C         	movff	?___flmul,_scale$1108
  2762  0013B6  C010  F02D         	movff	?___flmul+1,_scale$1108+1
  2763  0013BA  C011  F02E         	movff	?___flmul+2,_scale$1108+2
  2764  0013BE  C012  F02F         	movff	?___flmul+3,_scale$1108+3
  2765                           
  2766                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  2767  0013C2  C02C  F00F         	movff	_scale$1108,___flmul@b
  2768  0013C6  C02D  F010         	movff	_scale$1108+1,___flmul@b+1
  2769  0013CA  C02E  F011         	movff	_scale$1108+2,___flmul@b+2
  2770  0013CE  C02F  F012         	movff	_scale$1108+3,___flmul@b+3
  2771  0013D2  0E00               	movlw	0
  2772  0013D4  6E04               	movwf	___awmod@divisor+1,c
  2773  0013D6  0E0A               	movlw	10
  2774  0013D8  6E03               	movwf	___awmod@divisor,c
  2775  0013DA  5030               	movf	scale@scl,w,c
  2776  0013DC  6E01               	movwf	___awmod@dividend,c
  2777  0013DE  6A02               	clrf	___awmod@dividend+1,c
  2778  0013E0  BE01               	btfsc	___awmod@dividend,7,c
  2779  0013E2  0602               	decf	___awmod@dividend+1,f,c
  2780  0013E4  EC1B  F016         	call	___awmod	;wreg free
  2781  0013E8  90D8               	bcf	status,0,c
  2782  0013EA  3601               	rlcf	?___awmod,f,c
  2783  0013EC  3602               	rlcf	?___awmod+1,f,c
  2784  0013EE  90D8               	bcf	status,0,c
  2785  0013F0  3601               	rlcf	?___awmod,f,c
  2786  0013F2  3602               	rlcf	?___awmod+1,f,c
  2787  0013F4  0E35               	movlw	low __powers_
  2788  0013F6  2401               	addwf	?___awmod,w,c
  2789  0013F8  6EF6               	movwf	tblptrl,c
  2790  0013FA  0E08               	movlw	high __powers_
  2791  0013FC  2002               	addwfc	?___awmod+1,w,c
  2792  0013FE  6EF7               	movwf	tblptrh,c
  2793  001400                     	if	0	;There are less than 3 active tblptr bytes
  2794  001400                     	endif
  2795  001400  0009               	tblrd		*+
  2796  001402  CFF5 F013          	movff	tablat,___flmul@a
  2797  001406  0009               	tblrd		*+
  2798  001408  CFF5 F014          	movff	tablat,___flmul@a+1
  2799  00140C  0009               	tblrd		*+
  2800  00140E  CFF5 F015          	movff	tablat,___flmul@a+2
  2801  001412  000A               	tblrd		*-
  2802  001414  CFF5 F016          	movff	tablat,___flmul@a+3
  2803  001418  EC7E  F00A         	call	___flmul	;wreg free
  2804  00141C  C00F  F028         	movff	?___flmul,?_scale
  2805  001420  C010  F029         	movff	?___flmul+1,?_scale+1
  2806  001424  C011  F02A         	movff	?___flmul+2,?_scale+2
  2807  001428  C012  F02B         	movff	?___flmul+3,?_scale+3
  2808  00142C  0012               	return	
  2809  00142E                     l2846:
  2810                           
  2811                           ;doprnt.c: 438: else if(scl > 10)
  2812  00142E  5030               	movf	scale@scl,w,c
  2813  001430  0A80               	xorlw	128
  2814  001432  0F75               	addlw	-139
  2815  001434  A0D8               	btfss	status,0,c
  2816  001436  D04D               	goto	l2852
  2817                           
  2818                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  2819  001438  0E00               	movlw	0
  2820  00143A  6E0A               	movwf	___awdiv@divisor+1,c
  2821  00143C  0E0A               	movlw	10
  2822  00143E  6E09               	movwf	___awdiv@divisor,c
  2823  001440  5030               	movf	scale@scl,w,c
  2824  001442  6E07               	movwf	___awdiv@dividend,c
  2825  001444  6A08               	clrf	___awdiv@dividend+1,c
  2826  001446  BE07               	btfsc	___awdiv@dividend,7,c
  2827  001448  0608               	decf	___awdiv@dividend+1,f,c
  2828  00144A  EC98  F015         	call	___awdiv	;wreg free
  2829  00144E  90D8               	bcf	status,0,c
  2830  001450  3607               	rlcf	?___awdiv,f,c
  2831  001452  3608               	rlcf	?___awdiv+1,f,c
  2832  001454  90D8               	bcf	status,0,c
  2833  001456  3607               	rlcf	?___awdiv,f,c
  2834  001458  3608               	rlcf	?___awdiv+1,f,c
  2835  00145A  0E24               	movlw	36
  2836  00145C  2607               	addwf	?___awdiv,f,c
  2837  00145E  0E00               	movlw	0
  2838  001460  2208               	addwfc	?___awdiv+1,f,c
  2839  001462  0E35               	movlw	low __powers_
  2840  001464  2407               	addwf	?___awdiv,w,c
  2841  001466  6EF6               	movwf	tblptrl,c
  2842  001468  0E08               	movlw	high __powers_
  2843  00146A  2008               	addwfc	?___awdiv+1,w,c
  2844  00146C  6EF7               	movwf	tblptrh,c
  2845  00146E                     	if	0	;There are less than 3 active tblptr bytes
  2846  00146E                     	endif
  2847  00146E  0009               	tblrd		*+
  2848  001470  CFF5 F00F          	movff	tablat,___flmul@b
  2849  001474  0009               	tblrd		*+
  2850  001476  CFF5 F010          	movff	tablat,___flmul@b+1
  2851  00147A  0009               	tblrd		*+
  2852  00147C  CFF5 F011          	movff	tablat,___flmul@b+2
  2853  001480  000A               	tblrd		*-
  2854  001482  CFF5 F012          	movff	tablat,___flmul@b+3
  2855  001486  0E00               	movlw	0
  2856  001488  6E04               	movwf	___awmod@divisor+1,c
  2857  00148A  0E0A               	movlw	10
  2858  00148C  6E03               	movwf	___awmod@divisor,c
  2859  00148E  5030               	movf	scale@scl,w,c
  2860  001490  6E01               	movwf	___awmod@dividend,c
  2861  001492  6A02               	clrf	___awmod@dividend+1,c
  2862  001494  BE01               	btfsc	___awmod@dividend,7,c
  2863  001496  0602               	decf	___awmod@dividend+1,f,c
  2864  001498  EC1B  F016         	call	___awmod	;wreg free
  2865  00149C  90D8               	bcf	status,0,c
  2866  00149E  3601               	rlcf	?___awmod,f,c
  2867  0014A0  3602               	rlcf	?___awmod+1,f,c
  2868  0014A2  90D8               	bcf	status,0,c
  2869  0014A4  3601               	rlcf	?___awmod,f,c
  2870  0014A6  3602               	rlcf	?___awmod+1,f,c
  2871  0014A8  0E35               	movlw	low __powers_
  2872  0014AA  2401               	addwf	?___awmod,w,c
  2873  0014AC  6EF6               	movwf	tblptrl,c
  2874  0014AE  0E08               	movlw	high __powers_
  2875  0014B0  2002               	addwfc	?___awmod+1,w,c
  2876  0014B2  6EF7               	movwf	tblptrh,c
  2877  0014B4                     	if	0	;There are less than 3 active tblptr bytes
  2878  0014B4                     	endif
  2879  0014B4  0009               	tblrd		*+
  2880  0014B6  CFF5 F013          	movff	tablat,___flmul@a
  2881  0014BA  0009               	tblrd		*+
  2882  0014BC  CFF5 F014          	movff	tablat,___flmul@a+1
  2883  0014C0  0009               	tblrd		*+
  2884  0014C2  CFF5 F015          	movff	tablat,___flmul@a+2
  2885  0014C6  000A               	tblrd		*-
  2886  0014C8  CFF5 F016          	movff	tablat,___flmul@a+3
  2887  0014CC  EC7E  F00A         	call	___flmul	;wreg free
  2888  0014D0  D7A5               	goto	L4
  2889  0014D2                     l2852:
  2890                           
  2891                           ;doprnt.c: 440: return _powers_[scl];
  2892  0014D2  5030               	movf	scale@scl,w,c
  2893  0014D4  0D04               	mullw	4
  2894  0014D6  0E35               	movlw	low __powers_
  2895  0014D8  24F3               	addwf	prodl,w,c
  2896  0014DA  6EF6               	movwf	tblptrl,c
  2897  0014DC  0E08               	movlw	high __powers_
  2898  0014DE  20F4               	addwfc	prodh,w,c
  2899  0014E0  6EF7               	movwf	tblptrh,c
  2900  0014E2                     	if	0	;There are less than 3 active tblptr bytes
  2901  0014E2                     	endif
  2902  0014E2  0009               	tblrd		*+
  2903  0014E4  CFF5 F028          	movff	tablat,?_scale
  2904  0014E8  0009               	tblrd		*+
  2905  0014EA  CFF5 F029          	movff	tablat,?_scale+1
  2906  0014EE  0009               	tblrd		*+
  2907  0014F0  CFF5 F02A          	movff	tablat,?_scale+2
  2908  0014F4  000A               	tblrd		*-
  2909  0014F6  CFF5 F02B          	movff	tablat,?_scale+3
  2910  0014FA  0012               	return	
  2911  0014FC                     __end_of_scale:
  2912                           	opt stack 0
  2913                           tblptru	equ	0xFF8
  2914                           tblptrh	equ	0xFF7
  2915                           tblptrl	equ	0xFF6
  2916                           tablat	equ	0xFF5
  2917                           prodh	equ	0xFF4
  2918                           prodl	equ	0xFF3
  2919                           postinc0	equ	0xFEE
  2920                           wreg	equ	0xFE8
  2921                           indf2	equ	0xFDF
  2922                           postinc2	equ	0xFDE
  2923                           fsr2h	equ	0xFDA
  2924                           fsr2l	equ	0xFD9
  2925                           status	equ	0xFD8
  2926                           
  2927 ;; *************** function _isdigit *****************
  2928 ;; Defined at:
  2929 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\isdigit.c"
  2930 ;; Parameters:    Size  Location     Type
  2931 ;;  c               1    wreg     unsigned char 
  2932 ;; Auto vars:     Size  Location     Type
  2933 ;;  c               1    2[COMRAM] unsigned char 
  2934 ;; Return value:  Size  Location     Type
  2935 ;;		None               void
  2936 ;; Registers used:
  2937 ;;		wreg, status,2, status,0
  2938 ;; Tracked objects:
  2939 ;;		On entry : 0/0
  2940 ;;		On exit  : 0/0
  2941 ;;		Unchanged: 0/0
  2942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2943 ;;      Params:         0       0       0       0       0       0       0       0       0
  2944 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2945 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2946 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2947 ;;Total ram usage:        3 bytes
  2948 ;; Hardware stack levels used:    1
  2949 ;; This function calls:
  2950 ;;		Nothing
  2951 ;; This function is called by:
  2952 ;;		_sprintf
  2953 ;; This function uses a non-reentrant model
  2954 ;;
  2955                           
  2956                           	psect	text4
  2957  00300A                     __ptext4:
  2958                           	opt stack 0
  2959  00300A                     _isdigit:
  2960                           	opt stack 28
  2961                           
  2962                           ;incstack = 0
  2963                           ;isdigit@c stored from wreg
  2964  00300A  6E03               	movwf	isdigit@c,c
  2965  00300C  0E00               	movlw	0
  2966  00300E  6E02               	movwf	_isdigit$733,c
  2967  003010  0E3A               	movlw	58
  2968  003012  6003               	cpfslt	isdigit@c,c
  2969  003014  D005               	goto	l2864
  2970  003016  0E2F               	movlw	47
  2971  003018  6403               	cpfsgt	isdigit@c,c
  2972  00301A  D002               	goto	l2864
  2973  00301C  0E01               	movlw	1
  2974  00301E  6E02               	movwf	_isdigit$733,c
  2975  003020                     l2864:
  2976  003020  C002  F001         	movff	_isdigit$733,??_isdigit
  2977  003024  3001               	rrcf	??_isdigit,w,c
  2978  003026  0012               	return	
  2979  003028                     __end_of_isdigit:
  2980                           	opt stack 0
  2981                           tblptru	equ	0xFF8
  2982                           tblptrh	equ	0xFF7
  2983                           tblptrl	equ	0xFF6
  2984                           tablat	equ	0xFF5
  2985                           prodh	equ	0xFF4
  2986                           prodl	equ	0xFF3
  2987                           postinc0	equ	0xFEE
  2988                           wreg	equ	0xFE8
  2989                           indf2	equ	0xFDF
  2990                           postinc2	equ	0xFDE
  2991                           fsr2h	equ	0xFDA
  2992                           fsr2l	equ	0xFD9
  2993                           status	equ	0xFD8
  2994                           
  2995 ;; *************** function _fround *****************
  2996 ;; Defined at:
  2997 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\doprnt.c"
  2998 ;; Parameters:    Size  Location     Type
  2999 ;;  prec            1    wreg     unsigned char 
  3000 ;; Auto vars:     Size  Location     Type
  3001 ;;  prec            1   51[COMRAM] unsigned char 
  3002 ;; Return value:  Size  Location     Type
  3003 ;;                  4   39[COMRAM] unsigned char 
  3004 ;; Registers used:
  3005 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3006 ;; Tracked objects:
  3007 ;;		On entry : 0/0
  3008 ;;		On exit  : 0/0
  3009 ;;		Unchanged: 0/0
  3010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3011 ;;      Params:         4       0       0       0       0       0       0       0       0
  3012 ;;      Locals:         9       0       0       0       0       0       0       0       0
  3013 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3014 ;;      Totals:        13       0       0       0       0       0       0       0       0
  3015 ;;Total ram usage:       13 bytes
  3016 ;; Hardware stack levels used:    1
  3017 ;; Hardware stack levels required when called:    1
  3018 ;; This function calls:
  3019 ;;		___awdiv
  3020 ;;		___awmod
  3021 ;;		___flmul
  3022 ;; This function is called by:
  3023 ;;		_sprintf
  3024 ;; This function uses a non-reentrant model
  3025 ;;
  3026                           
  3027                           	psect	text5
  3028  001E3C                     __ptext5:
  3029                           	opt stack 0
  3030  001E3C                     _fround:
  3031                           	opt stack 27
  3032                           
  3033                           ;incstack = 0
  3034                           ;fround@prec stored from wreg
  3035  001E3C  6E34               	movwf	fround@prec,c
  3036                           
  3037                           ;doprnt.c: 413: if(prec>=110)
  3038  001E3E  0E6D               	movlw	109
  3039  001E40  6434               	cpfsgt	fround@prec,c
  3040  001E42  D0AC               	goto	l2806
  3041                           
  3042                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  3043  001E44  0E00               	movlw	0
  3044  001E46  6E0A               	movwf	___awdiv@divisor+1,c
  3045  001E48  0E0A               	movlw	10
  3046  001E4A  6E09               	movwf	___awdiv@divisor,c
  3047  001E4C  0E00               	movlw	0
  3048  001E4E  6E04               	movwf	___awmod@divisor+1,c
  3049  001E50  0E64               	movlw	100
  3050  001E52  6E03               	movwf	___awmod@divisor,c
  3051  001E54  C034  F001         	movff	fround@prec,___awmod@dividend
  3052  001E58  6A02               	clrf	___awmod@dividend+1,c
  3053  001E5A  EC1B  F016         	call	___awmod	;wreg free
  3054  001E5E  C001  F007         	movff	?___awmod,___awdiv@dividend
  3055  001E62  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  3056  001E66  EC98  F015         	call	___awdiv	;wreg free
  3057  001E6A  90D8               	bcf	status,0,c
  3058  001E6C  3607               	rlcf	?___awdiv,f,c
  3059  001E6E  3608               	rlcf	?___awdiv+1,f,c
  3060  001E70  90D8               	bcf	status,0,c
  3061  001E72  3607               	rlcf	?___awdiv,f,c
  3062  001E74  3608               	rlcf	?___awdiv+1,f,c
  3063  001E76  0E24               	movlw	36
  3064  001E78  2607               	addwf	?___awdiv,f,c
  3065  001E7A  0E00               	movlw	0
  3066  001E7C  2208               	addwfc	?___awdiv+1,f,c
  3067  001E7E  0E01               	movlw	low __npowers_
  3068  001E80  2407               	addwf	?___awdiv,w,c
  3069  001E82  6EF6               	movwf	tblptrl,c
  3070  001E84  0E08               	movlw	high __npowers_
  3071  001E86  2008               	addwfc	?___awdiv+1,w,c
  3072  001E88  6EF7               	movwf	tblptrh,c
  3073  001E8A                     	if	0	;There are less than 3 active tblptr bytes
  3074  001E8A                     	endif
  3075  001E8A  0009               	tblrd		*+
  3076  001E8C  CFF5 F013          	movff	tablat,___flmul@a
  3077  001E90  0009               	tblrd		*+
  3078  001E92  CFF5 F014          	movff	tablat,___flmul@a+1
  3079  001E96  0009               	tblrd		*+
  3080  001E98  CFF5 F015          	movff	tablat,___flmul@a+2
  3081  001E9C  000A               	tblrd		*-
  3082  001E9E  CFF5 F016          	movff	tablat,___flmul@a+3
  3083  001EA2  0E00               	movlw	0
  3084  001EA4  6E0A               	movwf	___awdiv@divisor+1,c
  3085  001EA6  0E64               	movlw	100
  3086  001EA8  6E09               	movwf	___awdiv@divisor,c
  3087  001EAA  C034  F007         	movff	fround@prec,___awdiv@dividend
  3088  001EAE  6A08               	clrf	___awdiv@dividend+1,c
  3089  001EB0  EC98  F015         	call	___awdiv	;wreg free
  3090  001EB4  90D8               	bcf	status,0,c
  3091  001EB6  3607               	rlcf	?___awdiv,f,c
  3092  001EB8  3608               	rlcf	?___awdiv+1,f,c
  3093  001EBA  90D8               	bcf	status,0,c
  3094  001EBC  3607               	rlcf	?___awdiv,f,c
  3095  001EBE  3608               	rlcf	?___awdiv+1,f,c
  3096  001EC0  0E48               	movlw	72
  3097  001EC2  2607               	addwf	?___awdiv,f,c
  3098  001EC4  0E00               	movlw	0
  3099  001EC6  2208               	addwfc	?___awdiv+1,f,c
  3100  001EC8  0E01               	movlw	low __npowers_
  3101  001ECA  2407               	addwf	?___awdiv,w,c
  3102  001ECC  6EF6               	movwf	tblptrl,c
  3103  001ECE  0E08               	movlw	high __npowers_
  3104  001ED0  2008               	addwfc	?___awdiv+1,w,c
  3105  001ED2  6EF7               	movwf	tblptrh,c
  3106  001ED4                     	if	0	;There are less than 3 active tblptr bytes
  3107  001ED4                     	endif
  3108  001ED4  0009               	tblrd		*+
  3109  001ED6  CFF5 F00F          	movff	tablat,___flmul@b
  3110  001EDA  0009               	tblrd		*+
  3111  001EDC  CFF5 F010          	movff	tablat,___flmul@b+1
  3112  001EE0  0009               	tblrd		*+
  3113  001EE2  CFF5 F011          	movff	tablat,___flmul@b+2
  3114  001EE6  000A               	tblrd		*-
  3115  001EE8  CFF5 F012          	movff	tablat,___flmul@b+3
  3116  001EEC  EC7E  F00A         	call	___flmul	;wreg free
  3117  001EF0  C00F  F030         	movff	?___flmul,_fround$1106
  3118  001EF4  C010  F031         	movff	?___flmul+1,_fround$1106+1
  3119  001EF8  C011  F032         	movff	?___flmul+2,_fround$1106+2
  3120  001EFC  C012  F033         	movff	?___flmul+3,_fround$1106+3
  3121                           
  3122                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  3123  001F00  0E00               	movlw	0
  3124  001F02  6E04               	movwf	___awmod@divisor+1,c
  3125  001F04  0E0A               	movlw	10
  3126  001F06  6E03               	movwf	___awmod@divisor,c
  3127  001F08  C034  F001         	movff	fround@prec,___awmod@dividend
  3128  001F0C  6A02               	clrf	___awmod@dividend+1,c
  3129  001F0E  EC1B  F016         	call	___awmod	;wreg free
  3130  001F12  90D8               	bcf	status,0,c
  3131  001F14  3601               	rlcf	?___awmod,f,c
  3132  001F16  3602               	rlcf	?___awmod+1,f,c
  3133  001F18  90D8               	bcf	status,0,c
  3134  001F1A  3601               	rlcf	?___awmod,f,c
  3135  001F1C  3602               	rlcf	?___awmod+1,f,c
  3136  001F1E  0E01               	movlw	low __npowers_
  3137  001F20  2401               	addwf	?___awmod,w,c
  3138  001F22  6EF6               	movwf	tblptrl,c
  3139  001F24  0E08               	movlw	high __npowers_
  3140  001F26  2002               	addwfc	?___awmod+1,w,c
  3141  001F28  6EF7               	movwf	tblptrh,c
  3142  001F2A                     	if	0	;There are less than 3 active tblptr bytes
  3143  001F2A                     	endif
  3144  001F2A  0009               	tblrd		*+
  3145  001F2C  CFF5 F013          	movff	tablat,___flmul@a
  3146  001F30  0009               	tblrd		*+
  3147  001F32  CFF5 F014          	movff	tablat,___flmul@a+1
  3148  001F36  0009               	tblrd		*+
  3149  001F38  CFF5 F015          	movff	tablat,___flmul@a+2
  3150  001F3C  000A               	tblrd		*-
  3151  001F3E  CFF5 F016          	movff	tablat,___flmul@a+3
  3152  001F42  C030  F00F         	movff	_fround$1106,___flmul@b
  3153  001F46  C031  F010         	movff	_fround$1106+1,___flmul@b+1
  3154  001F4A  C032  F011         	movff	_fround$1106+2,___flmul@b+2
  3155  001F4E  C033  F012         	movff	_fround$1106+3,___flmul@b+3
  3156  001F52  EC7E  F00A         	call	___flmul	;wreg free
  3157  001F56  C00F  F02C         	movff	?___flmul,_fround$1107
  3158  001F5A  C010  F02D         	movff	?___flmul+1,_fround$1107+1
  3159  001F5E  C011  F02E         	movff	?___flmul+2,_fround$1107+2
  3160  001F62  C012  F02F         	movff	?___flmul+3,_fround$1107+3
  3161                           
  3162                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  3163  001F66  C02C  F00F         	movff	_fround$1107,___flmul@b
  3164  001F6A  C02D  F010         	movff	_fround$1107+1,___flmul@b+1
  3165  001F6E  C02E  F011         	movff	_fround$1107+2,___flmul@b+2
  3166  001F72  C02F  F012         	movff	_fround$1107+3,___flmul@b+3
  3167  001F76  0E00               	movlw	0
  3168  001F78  6E13               	movwf	___flmul@a,c
  3169  001F7A  0E00               	movlw	0
  3170  001F7C  6E14               	movwf	___flmul@a+1,c
  3171  001F7E  0E00               	movlw	0
  3172  001F80  6E15               	movwf	___flmul@a+2,c
  3173  001F82  0E3F               	movlw	63
  3174  001F84  6E16               	movwf	___flmul@a+3,c
  3175  001F86  EC7E  F00A         	call	___flmul	;wreg free
  3176  001F8A  C00F  F028         	movff	?___flmul,?_fround
  3177  001F8E  C010  F029         	movff	?___flmul+1,?_fround+1
  3178  001F92  C011  F02A         	movff	?___flmul+2,?_fround+2
  3179  001F96  C012  F02B         	movff	?___flmul+3,?_fround+3
  3180  001F9A  0012               	return	
  3181  001F9C                     l2806:
  3182                           
  3183                           ;doprnt.c: 415: else if(prec > 10)
  3184  001F9C  0E0A               	movlw	10
  3185  001F9E  6434               	cpfsgt	fround@prec,c
  3186  001FA0  D063               	goto	l2814
  3187                           
  3188                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  3189  001FA2  0E00               	movlw	0
  3190  001FA4  6E04               	movwf	___awmod@divisor+1,c
  3191  001FA6  0E0A               	movlw	10
  3192  001FA8  6E03               	movwf	___awmod@divisor,c
  3193  001FAA  C034  F001         	movff	fround@prec,___awmod@dividend
  3194  001FAE  6A02               	clrf	___awmod@dividend+1,c
  3195  001FB0  EC1B  F016         	call	___awmod	;wreg free
  3196  001FB4  90D8               	bcf	status,0,c
  3197  001FB6  3601               	rlcf	?___awmod,f,c
  3198  001FB8  3602               	rlcf	?___awmod+1,f,c
  3199  001FBA  90D8               	bcf	status,0,c
  3200  001FBC  3601               	rlcf	?___awmod,f,c
  3201  001FBE  3602               	rlcf	?___awmod+1,f,c
  3202  001FC0  0E01               	movlw	low __npowers_
  3203  001FC2  2401               	addwf	?___awmod,w,c
  3204  001FC4  6EF6               	movwf	tblptrl,c
  3205  001FC6  0E08               	movlw	high __npowers_
  3206  001FC8  2002               	addwfc	?___awmod+1,w,c
  3207  001FCA  6EF7               	movwf	tblptrh,c
  3208  001FCC                     	if	0	;There are less than 3 active tblptr bytes
  3209  001FCC                     	endif
  3210  001FCC  0009               	tblrd		*+
  3211  001FCE  CFF5 F013          	movff	tablat,___flmul@a
  3212  001FD2  0009               	tblrd		*+
  3213  001FD4  CFF5 F014          	movff	tablat,___flmul@a+1
  3214  001FD8  0009               	tblrd		*+
  3215  001FDA  CFF5 F015          	movff	tablat,___flmul@a+2
  3216  001FDE  000A               	tblrd		*-
  3217  001FE0  CFF5 F016          	movff	tablat,___flmul@a+3
  3218  001FE4  0E00               	movlw	0
  3219  001FE6  6E0A               	movwf	___awdiv@divisor+1,c
  3220  001FE8  0E0A               	movlw	10
  3221  001FEA  6E09               	movwf	___awdiv@divisor,c
  3222  001FEC  C034  F007         	movff	fround@prec,___awdiv@dividend
  3223  001FF0  6A08               	clrf	___awdiv@dividend+1,c
  3224  001FF2  EC98  F015         	call	___awdiv	;wreg free
  3225  001FF6  90D8               	bcf	status,0,c
  3226  001FF8  3607               	rlcf	?___awdiv,f,c
  3227  001FFA  3608               	rlcf	?___awdiv+1,f,c
  3228  001FFC  90D8               	bcf	status,0,c
  3229  001FFE  3607               	rlcf	?___awdiv,f,c
  3230  002000  3608               	rlcf	?___awdiv+1,f,c
  3231  002002  0E24               	movlw	36
  3232  002004  2607               	addwf	?___awdiv,f,c
  3233  002006  0E00               	movlw	0
  3234  002008  2208               	addwfc	?___awdiv+1,f,c
  3235  00200A  0E01               	movlw	low __npowers_
  3236  00200C  2407               	addwf	?___awdiv,w,c
  3237  00200E  6EF6               	movwf	tblptrl,c
  3238  002010  0E08               	movlw	high __npowers_
  3239  002012  2008               	addwfc	?___awdiv+1,w,c
  3240  002014  6EF7               	movwf	tblptrh,c
  3241  002016                     	if	0	;There are less than 3 active tblptr bytes
  3242  002016                     	endif
  3243  002016  0009               	tblrd		*+
  3244  002018  CFF5 F00F          	movff	tablat,___flmul@b
  3245  00201C  0009               	tblrd		*+
  3246  00201E  CFF5 F010          	movff	tablat,___flmul@b+1
  3247  002022  0009               	tblrd		*+
  3248  002024  CFF5 F011          	movff	tablat,___flmul@b+2
  3249  002028  000A               	tblrd		*-
  3250  00202A  CFF5 F012          	movff	tablat,___flmul@b+3
  3251  00202E  EC7E  F00A         	call	___flmul	;wreg free
  3252  002032  C00F  F030         	movff	?___flmul,_fround$1106
  3253  002036  C010  F031         	movff	?___flmul+1,_fround$1106+1
  3254  00203A  C011  F032         	movff	?___flmul+2,_fround$1106+2
  3255  00203E  C012  F033         	movff	?___flmul+3,_fround$1106+3
  3256                           
  3257                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  3258  002042  C030  F00F         	movff	_fround$1106,___flmul@b
  3259  002046  C031  F010         	movff	_fround$1106+1,___flmul@b+1
  3260  00204A  C032  F011         	movff	_fround$1106+2,___flmul@b+2
  3261  00204E  C033  F012         	movff	_fround$1106+3,___flmul@b+3
  3262  002052  0E00               	movlw	0
  3263  002054  6E13               	movwf	___flmul@a,c
  3264  002056  0E00               	movlw	0
  3265  002058  6E14               	movwf	___flmul@a+1,c
  3266  00205A  0E00               	movlw	0
  3267  00205C  6E15               	movwf	___flmul@a+2,c
  3268  00205E  0E3F               	movlw	63
  3269  002060  6E16               	movwf	___flmul@a+3,c
  3270  002062  EC7E  F00A         	call	___flmul	;wreg free
  3271  002066  D791               	goto	L5
  3272  002068                     l2814:
  3273                           
  3274                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  3275  002068  5034               	movf	fround@prec,w,c
  3276  00206A  0D04               	mullw	4
  3277  00206C  0E01               	movlw	low __npowers_
  3278  00206E  24F3               	addwf	prodl,w,c
  3279  002070  6EF6               	movwf	tblptrl,c
  3280  002072  0E08               	movlw	high __npowers_
  3281  002074  20F4               	addwfc	prodh,w,c
  3282  002076  6EF7               	movwf	tblptrh,c
  3283  002078                     	if	0	;There are less than 3 active tblptr bytes
  3284  002078                     	endif
  3285  002078  0009               	tblrd		*+
  3286  00207A  CFF5 F00F          	movff	tablat,___flmul@b
  3287  00207E  0009               	tblrd		*+
  3288  002080  CFF5 F010          	movff	tablat,___flmul@b+1
  3289  002084  0009               	tblrd		*+
  3290  002086  CFF5 F011          	movff	tablat,___flmul@b+2
  3291  00208A  000A               	tblrd		*-
  3292  00208C  CFF5 F012          	movff	tablat,___flmul@b+3
  3293  002090  0E00               	movlw	0
  3294  002092  6E13               	movwf	___flmul@a,c
  3295  002094  0E00               	movlw	0
  3296  002096  6E14               	movwf	___flmul@a+1,c
  3297  002098  0E00               	movlw	0
  3298  00209A  6E15               	movwf	___flmul@a+2,c
  3299  00209C  0E3F               	movlw	63
  3300  00209E  6E16               	movwf	___flmul@a+3,c
  3301  0020A0  EC7E  F00A         	call	___flmul	;wreg free
  3302  0020A4  C00F  F028         	movff	?___flmul,?_fround
  3303  0020A8  C010  F029         	movff	?___flmul+1,?_fround+1
  3304  0020AC  C011  F02A         	movff	?___flmul+2,?_fround+2
  3305  0020B0  C012  F02B         	movff	?___flmul+3,?_fround+3
  3306  0020B4  0012               	return	
  3307  0020B6                     __end_of_fround:
  3308                           	opt stack 0
  3309                           tblptru	equ	0xFF8
  3310                           tblptrh	equ	0xFF7
  3311                           tblptrl	equ	0xFF6
  3312                           tablat	equ	0xFF5
  3313                           prodh	equ	0xFF4
  3314                           prodl	equ	0xFF3
  3315                           postinc0	equ	0xFEE
  3316                           wreg	equ	0xFE8
  3317                           indf2	equ	0xFDF
  3318                           postinc2	equ	0xFDE
  3319                           fsr2h	equ	0xFDA
  3320                           fsr2l	equ	0xFD9
  3321                           status	equ	0xFD8
  3322                           
  3323 ;; *************** function ___awmod *****************
  3324 ;; Defined at:
  3325 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\awmod.c"
  3326 ;; Parameters:    Size  Location     Type
  3327 ;;  dividend        2    0[COMRAM] int 
  3328 ;;  divisor         2    2[COMRAM] int 
  3329 ;; Auto vars:     Size  Location     Type
  3330 ;;  sign            1    5[COMRAM] unsigned char 
  3331 ;;  counter         1    4[COMRAM] unsigned char 
  3332 ;; Return value:  Size  Location     Type
  3333 ;;                  2    0[COMRAM] int 
  3334 ;; Registers used:
  3335 ;;		wreg, status,2, status,0
  3336 ;; Tracked objects:
  3337 ;;		On entry : 0/0
  3338 ;;		On exit  : 0/0
  3339 ;;		Unchanged: 0/0
  3340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3341 ;;      Params:         4       0       0       0       0       0       0       0       0
  3342 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3343 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3344 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3345 ;;Total ram usage:        6 bytes
  3346 ;; Hardware stack levels used:    1
  3347 ;; This function calls:
  3348 ;;		Nothing
  3349 ;; This function is called by:
  3350 ;;		_fround
  3351 ;;		_scale
  3352 ;; This function uses a non-reentrant model
  3353 ;;
  3354                           
  3355                           	psect	text6
  3356  002C36                     __ptext6:
  3357                           	opt stack 0
  3358  002C36                     ___awmod:
  3359                           	opt stack 27
  3360                           
  3361                           ;incstack = 0
  3362  002C36  0E00               	movlw	0
  3363  002C38  6E06               	movwf	___awmod@sign,c
  3364  002C3A  AE02               	btfss	___awmod@dividend+1,7,c
  3365  002C3C  D006               	goto	l2744
  3366  002C3E  6C01               	negf	___awmod@dividend,c
  3367  002C40  1E02               	comf	___awmod@dividend+1,f,c
  3368  002C42  B0D8               	btfsc	status,0,c
  3369  002C44  2A02               	incf	___awmod@dividend+1,f,c
  3370  002C46  0E01               	movlw	1
  3371  002C48  6E06               	movwf	___awmod@sign,c
  3372  002C4A                     l2744:
  3373  002C4A  AE04               	btfss	___awmod@divisor+1,7,c
  3374  002C4C  D004               	goto	l2748
  3375  002C4E  6C03               	negf	___awmod@divisor,c
  3376  002C50  1E04               	comf	___awmod@divisor+1,f,c
  3377  002C52  B0D8               	btfsc	status,0,c
  3378  002C54  2A04               	incf	___awmod@divisor+1,f,c
  3379  002C56                     l2748:
  3380  002C56  5003               	movf	___awmod@divisor,w,c
  3381  002C58  1004               	iorwf	___awmod@divisor+1,w,c
  3382  002C5A  B4D8               	btfsc	status,2,c
  3383  002C5C  D018               	goto	l2764
  3384  002C5E  0E01               	movlw	1
  3385  002C60  6E05               	movwf	___awmod@counter,c
  3386  002C62  D004               	goto	l2754
  3387  002C64                     l2752:
  3388  002C64  90D8               	bcf	status,0,c
  3389  002C66  3603               	rlcf	___awmod@divisor,f,c
  3390  002C68  3604               	rlcf	___awmod@divisor+1,f,c
  3391  002C6A  2A05               	incf	___awmod@counter,f,c
  3392  002C6C                     l2754:
  3393  002C6C  AE04               	btfss	___awmod@divisor+1,7,c
  3394  002C6E  D7FA               	goto	l2752
  3395  002C70                     l2756:
  3396  002C70  5003               	movf	___awmod@divisor,w,c
  3397  002C72  5C01               	subwf	___awmod@dividend,w,c
  3398  002C74  5004               	movf	___awmod@divisor+1,w,c
  3399  002C76  5802               	subwfb	___awmod@dividend+1,w,c
  3400  002C78  A0D8               	btfss	status,0,c
  3401  002C7A  D004               	goto	l2760
  3402  002C7C  5003               	movf	___awmod@divisor,w,c
  3403  002C7E  5E01               	subwf	___awmod@dividend,f,c
  3404  002C80  5004               	movf	___awmod@divisor+1,w,c
  3405  002C82  5A02               	subwfb	___awmod@dividend+1,f,c
  3406  002C84                     l2760:
  3407  002C84  90D8               	bcf	status,0,c
  3408  002C86  3204               	rrcf	___awmod@divisor+1,f,c
  3409  002C88  3203               	rrcf	___awmod@divisor,f,c
  3410  002C8A  2E05               	decfsz	___awmod@counter,f,c
  3411  002C8C  D7F1               	goto	l2756
  3412  002C8E                     l2764:
  3413  002C8E  5006               	movf	___awmod@sign,w,c
  3414  002C90  B4D8               	btfsc	status,2,c
  3415  002C92  D004               	goto	l2768
  3416  002C94  6C01               	negf	___awmod@dividend,c
  3417  002C96  1E02               	comf	___awmod@dividend+1,f,c
  3418  002C98  B0D8               	btfsc	status,0,c
  3419  002C9A  2A02               	incf	___awmod@dividend+1,f,c
  3420  002C9C                     l2768:
  3421  002C9C  C001  F001         	movff	___awmod@dividend,?___awmod
  3422  002CA0  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  3423  002CA4  0012               	return	
  3424  002CA6                     __end_of___awmod:
  3425                           	opt stack 0
  3426                           tblptru	equ	0xFF8
  3427                           tblptrh	equ	0xFF7
  3428                           tblptrl	equ	0xFF6
  3429                           tablat	equ	0xFF5
  3430                           prodh	equ	0xFF4
  3431                           prodl	equ	0xFF3
  3432                           postinc0	equ	0xFEE
  3433                           wreg	equ	0xFE8
  3434                           indf2	equ	0xFDF
  3435                           postinc2	equ	0xFDE
  3436                           fsr2h	equ	0xFDA
  3437                           fsr2l	equ	0xFD9
  3438                           status	equ	0xFD8
  3439                           
  3440 ;; *************** function __tdiv_to_l_ *****************
  3441 ;; Defined at:
  3442 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\ftdivl.c"
  3443 ;; Parameters:    Size  Location     Type
  3444 ;;  f1              4    0[COMRAM] float 
  3445 ;;  f2              4    4[COMRAM] float 
  3446 ;; Auto vars:     Size  Location     Type
  3447 ;;  quot            4   11[COMRAM] unsigned long 
  3448 ;;  exp1            1   16[COMRAM] unsigned char 
  3449 ;;  cntr            1   15[COMRAM] unsigned char 
  3450 ;; Return value:  Size  Location     Type
  3451 ;;                  4    0[COMRAM] unsigned long 
  3452 ;; Registers used:
  3453 ;;		wreg, status,2, status,0
  3454 ;; Tracked objects:
  3455 ;;		On entry : 0/0
  3456 ;;		On exit  : 0/0
  3457 ;;		Unchanged: 0/0
  3458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3459 ;;      Params:         8       0       0       0       0       0       0       0       0
  3460 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3461 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3462 ;;      Totals:        17       0       0       0       0       0       0       0       0
  3463 ;;Total ram usage:       17 bytes
  3464 ;; Hardware stack levels used:    1
  3465 ;; This function calls:
  3466 ;;		Nothing
  3467 ;; This function is called by:
  3468 ;;		_sprintf
  3469 ;; This function uses a non-reentrant model
  3470 ;;
  3471                           
  3472                           	psect	text7
  3473  002508                     __ptext7:
  3474                           	opt stack 0
  3475  002508                     __tdiv_to_l_:
  3476                           	opt stack 28
  3477                           
  3478                           ;incstack = 0
  3479  002508  C003  F009         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  3480  00250C  6A0A               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  3481  00250E  6A0B               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  3482  002510  3402               	rlcf	__tdiv_to_l_@f1+1,w,c
  3483  002512  3609               	rlcf	??__tdiv_to_l_& (0+255),f,c
  3484  002514  E301               	bnc	u2891
  3485  002516  800A               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  3486  002518                     u2891:
  3487  002518  5009               	movf	??__tdiv_to_l_,w,c
  3488  00251A  6E11               	movwf	__tdiv_to_l_@exp1,c
  3489  00251C  5011               	movf	__tdiv_to_l_@exp1,w,c
  3490  00251E  A4D8               	btfss	status,2,c
  3491  002520  D009               	goto	l2874
  3492  002522  0E00               	movlw	0
  3493  002524  6E01               	movwf	?__tdiv_to_l_,c
  3494  002526  0E00               	movlw	0
  3495  002528  6E02               	movwf	?__tdiv_to_l_+1,c
  3496  00252A  0E00               	movlw	0
  3497  00252C  6E03               	movwf	?__tdiv_to_l_+2,c
  3498  00252E  0E00               	movlw	0
  3499  002530  6E04               	movwf	?__tdiv_to_l_+3,c
  3500  002532  0012               	return	
  3501  002534                     l2874:
  3502  002534  C007  F009         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  3503  002538  6A0A               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  3504  00253A  6A0B               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  3505  00253C  3406               	rlcf	__tdiv_to_l_@f2+1,w,c
  3506  00253E  3609               	rlcf	??__tdiv_to_l_& (0+255),f,c
  3507  002540  E301               	bnc	u2911
  3508  002542  800A               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  3509  002544                     u2911:
  3510  002544  5009               	movf	??__tdiv_to_l_,w,c
  3511  002546  6E10               	movwf	__tdiv_to_l_@cntr,c
  3512  002548  5010               	movf	__tdiv_to_l_@cntr,w,c
  3513  00254A  A4D8               	btfss	status,2,c
  3514  00254C  D009               	goto	l2880
  3515  00254E  0E00               	movlw	0
  3516  002550  6E01               	movwf	?__tdiv_to_l_,c
  3517  002552  0E00               	movlw	0
  3518  002554  6E02               	movwf	?__tdiv_to_l_+1,c
  3519  002556  0E00               	movlw	0
  3520  002558  6E03               	movwf	?__tdiv_to_l_+2,c
  3521  00255A  0E00               	movlw	0
  3522  00255C  6E04               	movwf	?__tdiv_to_l_+3,c
  3523  00255E  0012               	return	
  3524  002560                     l2880:
  3525  002560  8E02               	bsf	__tdiv_to_l_@f1+1,7,c
  3526  002562  0EFF               	movlw	255
  3527  002564  1601               	andwf	__tdiv_to_l_@f1,f,c
  3528  002566  0EFF               	movlw	255
  3529  002568  1602               	andwf	__tdiv_to_l_@f1+1,f,c
  3530  00256A  0E00               	movlw	0
  3531  00256C  1603               	andwf	__tdiv_to_l_@f1+2,f,c
  3532  00256E  8E06               	bsf	__tdiv_to_l_@f2+1,7,c
  3533  002570  0EFF               	movlw	255
  3534  002572  1605               	andwf	__tdiv_to_l_@f2,f,c
  3535  002574  0EFF               	movlw	255
  3536  002576  1606               	andwf	__tdiv_to_l_@f2+1,f,c
  3537  002578  0E00               	movlw	0
  3538  00257A  1607               	andwf	__tdiv_to_l_@f2+2,f,c
  3539  00257C  0E00               	movlw	0
  3540  00257E  6E0C               	movwf	__tdiv_to_l_@quot,c
  3541  002580  0E00               	movlw	0
  3542  002582  6E0D               	movwf	__tdiv_to_l_@quot+1,c
  3543  002584  0E00               	movlw	0
  3544  002586  6E0E               	movwf	__tdiv_to_l_@quot+2,c
  3545  002588  0E00               	movlw	0
  3546  00258A  6E0F               	movwf	__tdiv_to_l_@quot+3,c
  3547  00258C  0E7F               	movlw	127
  3548  00258E  5E11               	subwf	__tdiv_to_l_@exp1,f,c
  3549  002590  5010               	movf	__tdiv_to_l_@cntr,w,c
  3550  002592  0F98               	addlw	152
  3551  002594  5E11               	subwf	__tdiv_to_l_@exp1,f,c
  3552  002596  0E18               	movlw	24
  3553  002598  6E10               	movwf	__tdiv_to_l_@cntr,c
  3554  00259A                     l576:
  3555  00259A  90D8               	bcf	status,0,c
  3556  00259C  360C               	rlcf	__tdiv_to_l_@quot,f,c
  3557  00259E  360D               	rlcf	__tdiv_to_l_@quot+1,f,c
  3558  0025A0  360E               	rlcf	__tdiv_to_l_@quot+2,f,c
  3559  0025A2  360F               	rlcf	__tdiv_to_l_@quot+3,f,c
  3560  0025A4  5005               	movf	__tdiv_to_l_@f2,w,c
  3561  0025A6  5C01               	subwf	__tdiv_to_l_@f1,w,c
  3562  0025A8  5006               	movf	__tdiv_to_l_@f2+1,w,c
  3563  0025AA  5802               	subwfb	__tdiv_to_l_@f1+1,w,c
  3564  0025AC  5007               	movf	__tdiv_to_l_@f2+2,w,c
  3565  0025AE  5803               	subwfb	__tdiv_to_l_@f1+2,w,c
  3566  0025B0  A0D8               	btfss	status,0,c
  3567  0025B2  D007               	goto	l577
  3568  0025B4  5005               	movf	__tdiv_to_l_@f2,w,c
  3569  0025B6  5E01               	subwf	__tdiv_to_l_@f1,f,c
  3570  0025B8  5006               	movf	__tdiv_to_l_@f2+1,w,c
  3571  0025BA  5A02               	subwfb	__tdiv_to_l_@f1+1,f,c
  3572  0025BC  5007               	movf	__tdiv_to_l_@f2+2,w,c
  3573  0025BE  5A03               	subwfb	__tdiv_to_l_@f1+2,f,c
  3574  0025C0  800C               	bsf	__tdiv_to_l_@quot,0,c
  3575  0025C2                     l577:
  3576  0025C2  90D8               	bcf	status,0,c
  3577  0025C4  3601               	rlcf	__tdiv_to_l_@f1,f,c
  3578  0025C6  3602               	rlcf	__tdiv_to_l_@f1+1,f,c
  3579  0025C8  3603               	rlcf	__tdiv_to_l_@f1+2,f,c
  3580  0025CA  2E10               	decfsz	__tdiv_to_l_@cntr,f,c
  3581  0025CC  D7E6               	goto	l576
  3582  0025CE  AE11               	btfss	__tdiv_to_l_@exp1,7,c
  3583  0025D0  D016               	goto	l2914
  3584  0025D2  5011               	movf	__tdiv_to_l_@exp1,w,c
  3585  0025D4  0A80               	xorlw	128
  3586  0025D6  0F97               	addlw	151
  3587  0025D8  B0D8               	btfsc	status,0,c
  3588  0025DA  D009               	goto	l2910
  3589  0025DC  0E00               	movlw	0
  3590  0025DE  6E01               	movwf	?__tdiv_to_l_,c
  3591  0025E0  0E00               	movlw	0
  3592  0025E2  6E02               	movwf	?__tdiv_to_l_+1,c
  3593  0025E4  0E00               	movlw	0
  3594  0025E6  6E03               	movwf	?__tdiv_to_l_+2,c
  3595  0025E8  0E00               	movlw	0
  3596  0025EA  6E04               	movwf	?__tdiv_to_l_+3,c
  3597  0025EC  0012               	return	
  3598  0025EE                     l2910:
  3599  0025EE  90D8               	bcf	status,0,c
  3600  0025F0  320F               	rrcf	__tdiv_to_l_@quot+3,f,c
  3601  0025F2  320E               	rrcf	__tdiv_to_l_@quot+2,f,c
  3602  0025F4  320D               	rrcf	__tdiv_to_l_@quot+1,f,c
  3603  0025F6  320C               	rrcf	__tdiv_to_l_@quot,f,c
  3604  0025F8  3E11               	incfsz	__tdiv_to_l_@exp1,f,c
  3605  0025FA  D7F9               	goto	l2910
  3606  0025FC  D015               	goto	l583
  3607  0025FE                     l2914:
  3608  0025FE  0E17               	movlw	23
  3609  002600  6411               	cpfsgt	__tdiv_to_l_@exp1,c
  3610  002602  D00F               	goto	l2922
  3611  002604  0E00               	movlw	0
  3612  002606  6E01               	movwf	?__tdiv_to_l_,c
  3613  002608  0E00               	movlw	0
  3614  00260A  6E02               	movwf	?__tdiv_to_l_+1,c
  3615  00260C  0E00               	movlw	0
  3616  00260E  6E03               	movwf	?__tdiv_to_l_+2,c
  3617  002610  0E00               	movlw	0
  3618  002612  6E04               	movwf	?__tdiv_to_l_+3,c
  3619  002614  0012               	return	
  3620  002616                     l2920:
  3621  002616  90D8               	bcf	status,0,c
  3622  002618  360C               	rlcf	__tdiv_to_l_@quot,f,c
  3623  00261A  360D               	rlcf	__tdiv_to_l_@quot+1,f,c
  3624  00261C  360E               	rlcf	__tdiv_to_l_@quot+2,f,c
  3625  00261E  360F               	rlcf	__tdiv_to_l_@quot+3,f,c
  3626  002620  0611               	decf	__tdiv_to_l_@exp1,f,c
  3627  002622                     l2922:
  3628  002622  5011               	movf	__tdiv_to_l_@exp1,w,c
  3629  002624  A4D8               	btfss	status,2,c
  3630  002626  D7F7               	goto	l2920
  3631  002628                     l583:
  3632  002628  C00C  F001         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  3633  00262C  C00D  F002         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  3634  002630  C00E  F003         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  3635  002634  C00F  F004         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  3636  002638  0012               	return		;funcret
  3637  00263A                     __end_of__tdiv_to_l_:
  3638                           	opt stack 0
  3639                           tblptru	equ	0xFF8
  3640                           tblptrh	equ	0xFF7
  3641                           tblptrl	equ	0xFF6
  3642                           tablat	equ	0xFF5
  3643                           prodh	equ	0xFF4
  3644                           prodl	equ	0xFF3
  3645                           postinc0	equ	0xFEE
  3646                           wreg	equ	0xFE8
  3647                           indf2	equ	0xFDF
  3648                           postinc2	equ	0xFDE
  3649                           fsr2h	equ	0xFDA
  3650                           fsr2l	equ	0xFD9
  3651                           status	equ	0xFD8
  3652                           
  3653 ;; *************** function __div_to_l_ *****************
  3654 ;; Defined at:
  3655 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\fldivl.c"
  3656 ;; Parameters:    Size  Location     Type
  3657 ;;  f1              4    0[COMRAM] unsigned long 
  3658 ;;  f2              4    4[COMRAM] unsigned long 
  3659 ;; Auto vars:     Size  Location     Type
  3660 ;;  quot            4    8[COMRAM] unsigned long 
  3661 ;;  exp1            1   13[COMRAM] unsigned char 
  3662 ;;  cntr            1   12[COMRAM] unsigned char 
  3663 ;; Return value:  Size  Location     Type
  3664 ;;                  4    0[COMRAM] unsigned long 
  3665 ;; Registers used:
  3666 ;;		wreg, status,2, status,0
  3667 ;; Tracked objects:
  3668 ;;		On entry : 0/0
  3669 ;;		On exit  : 0/0
  3670 ;;		Unchanged: 0/0
  3671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3672 ;;      Params:         8       0       0       0       0       0       0       0       0
  3673 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3674 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3675 ;;      Totals:        14       0       0       0       0       0       0       0       0
  3676 ;;Total ram usage:       14 bytes
  3677 ;; Hardware stack levels used:    1
  3678 ;; This function calls:
  3679 ;;		Nothing
  3680 ;; This function is called by:
  3681 ;;		_sprintf
  3682 ;; This function uses a non-reentrant model
  3683 ;;
  3684                           
  3685                           	psect	text8
  3686  00263A                     __ptext8:
  3687                           	opt stack 0
  3688  00263A                     __div_to_l_:
  3689                           	opt stack 28
  3690                           
  3691                           ;incstack = 0
  3692  00263A  3403               	rlcf	__div_to_l_@f1+2,w,c
  3693  00263C  3404               	rlcf	__div_to_l_@f1+3,w,c
  3694  00263E  6E0E               	movwf	__div_to_l_@exp1,c
  3695  002640  500E               	movf	__div_to_l_@exp1,w,c
  3696  002642  A4D8               	btfss	status,2,c
  3697  002644  D009               	goto	l2930
  3698  002646  0E00               	movlw	0
  3699  002648  6E01               	movwf	?__div_to_l_,c
  3700  00264A  0E00               	movlw	0
  3701  00264C  6E02               	movwf	?__div_to_l_+1,c
  3702  00264E  0E00               	movlw	0
  3703  002650  6E03               	movwf	?__div_to_l_+2,c
  3704  002652  0E00               	movlw	0
  3705  002654  6E04               	movwf	?__div_to_l_+3,c
  3706  002656  0012               	return	
  3707  002658                     l2930:
  3708  002658  3407               	rlcf	__div_to_l_@f2+2,w,c
  3709  00265A  3408               	rlcf	__div_to_l_@f2+3,w,c
  3710  00265C  6E0D               	movwf	__div_to_l_@cntr,c
  3711  00265E  500D               	movf	__div_to_l_@cntr,w,c
  3712  002660  A4D8               	btfss	status,2,c
  3713  002662  D009               	goto	l2936
  3714  002664  0E00               	movlw	0
  3715  002666  6E01               	movwf	?__div_to_l_,c
  3716  002668  0E00               	movlw	0
  3717  00266A  6E02               	movwf	?__div_to_l_+1,c
  3718  00266C  0E00               	movlw	0
  3719  00266E  6E03               	movwf	?__div_to_l_+2,c
  3720  002670  0E00               	movlw	0
  3721  002672  6E04               	movwf	?__div_to_l_+3,c
  3722  002674  0012               	return	
  3723  002676                     l2936:
  3724  002676  8E03               	bsf	__div_to_l_@f1+2,7,c
  3725  002678  0EFF               	movlw	255
  3726  00267A  1601               	andwf	__div_to_l_@f1,f,c
  3727  00267C  0EFF               	movlw	255
  3728  00267E  1602               	andwf	__div_to_l_@f1+1,f,c
  3729  002680  0EFF               	movlw	255
  3730  002682  1603               	andwf	__div_to_l_@f1+2,f,c
  3731  002684  0E00               	movlw	0
  3732  002686  1604               	andwf	__div_to_l_@f1+3,f,c
  3733  002688  8E07               	bsf	__div_to_l_@f2+2,7,c
  3734  00268A  0EFF               	movlw	255
  3735  00268C  1605               	andwf	__div_to_l_@f2,f,c
  3736  00268E  0EFF               	movlw	255
  3737  002690  1606               	andwf	__div_to_l_@f2+1,f,c
  3738  002692  0EFF               	movlw	255
  3739  002694  1607               	andwf	__div_to_l_@f2+2,f,c
  3740  002696  0E00               	movlw	0
  3741  002698  1608               	andwf	__div_to_l_@f2+3,f,c
  3742  00269A  0E00               	movlw	0
  3743  00269C  6E09               	movwf	__div_to_l_@quot,c
  3744  00269E  0E00               	movlw	0
  3745  0026A0  6E0A               	movwf	__div_to_l_@quot+1,c
  3746  0026A2  0E00               	movlw	0
  3747  0026A4  6E0B               	movwf	__div_to_l_@quot+2,c
  3748  0026A6  0E00               	movlw	0
  3749  0026A8  6E0C               	movwf	__div_to_l_@quot+3,c
  3750  0026AA  0E7F               	movlw	127
  3751  0026AC  5E0E               	subwf	__div_to_l_@exp1,f,c
  3752  0026AE  500D               	movf	__div_to_l_@cntr,w,c
  3753  0026B0  0FA0               	addlw	160
  3754  0026B2  5E0E               	subwf	__div_to_l_@exp1,f,c
  3755  0026B4  0E20               	movlw	32
  3756  0026B6  6E0D               	movwf	__div_to_l_@cntr,c
  3757  0026B8                     l2950:
  3758  0026B8  90D8               	bcf	status,0,c
  3759  0026BA  3609               	rlcf	__div_to_l_@quot,f,c
  3760  0026BC  360A               	rlcf	__div_to_l_@quot+1,f,c
  3761  0026BE  360B               	rlcf	__div_to_l_@quot+2,f,c
  3762  0026C0  360C               	rlcf	__div_to_l_@quot+3,f,c
  3763  0026C2  5005               	movf	__div_to_l_@f2,w,c
  3764  0026C4  5C01               	subwf	__div_to_l_@f1,w,c
  3765  0026C6  5006               	movf	__div_to_l_@f2+1,w,c
  3766  0026C8  5802               	subwfb	__div_to_l_@f1+1,w,c
  3767  0026CA  5007               	movf	__div_to_l_@f2+2,w,c
  3768  0026CC  5803               	subwfb	__div_to_l_@f1+2,w,c
  3769  0026CE  5008               	movf	__div_to_l_@f2+3,w,c
  3770  0026D0  5804               	subwfb	__div_to_l_@f1+3,w,c
  3771  0026D2  A0D8               	btfss	status,0,c
  3772  0026D4  D009               	goto	l2958
  3773  0026D6  5005               	movf	__div_to_l_@f2,w,c
  3774  0026D8  5E01               	subwf	__div_to_l_@f1,f,c
  3775  0026DA  5006               	movf	__div_to_l_@f2+1,w,c
  3776  0026DC  5A02               	subwfb	__div_to_l_@f1+1,f,c
  3777  0026DE  5007               	movf	__div_to_l_@f2+2,w,c
  3778  0026E0  5A03               	subwfb	__div_to_l_@f1+2,f,c
  3779  0026E2  5008               	movf	__div_to_l_@f2+3,w,c
  3780  0026E4  5A04               	subwfb	__div_to_l_@f1+3,f,c
  3781  0026E6  8009               	bsf	__div_to_l_@quot,0,c
  3782  0026E8                     l2958:
  3783  0026E8  90D8               	bcf	status,0,c
  3784  0026EA  3601               	rlcf	__div_to_l_@f1,f,c
  3785  0026EC  3602               	rlcf	__div_to_l_@f1+1,f,c
  3786  0026EE  3603               	rlcf	__div_to_l_@f1+2,f,c
  3787  0026F0  3604               	rlcf	__div_to_l_@f1+3,f,c
  3788  0026F2  2E0D               	decfsz	__div_to_l_@cntr,f,c
  3789  0026F4  D7E1               	goto	l2950
  3790  0026F6  AE0E               	btfss	__div_to_l_@exp1,7,c
  3791  0026F8  D016               	goto	l2974
  3792  0026FA  500E               	movf	__div_to_l_@exp1,w,c
  3793  0026FC  0A80               	xorlw	128
  3794  0026FE  0F9F               	addlw	159
  3795  002700  B0D8               	btfsc	status,0,c
  3796  002702  D009               	goto	l2970
  3797  002704  0E00               	movlw	0
  3798  002706  6E01               	movwf	?__div_to_l_,c
  3799  002708  0E00               	movlw	0
  3800  00270A  6E02               	movwf	?__div_to_l_+1,c
  3801  00270C  0E00               	movlw	0
  3802  00270E  6E03               	movwf	?__div_to_l_+2,c
  3803  002710  0E00               	movlw	0
  3804  002712  6E04               	movwf	?__div_to_l_+3,c
  3805  002714  0012               	return	
  3806  002716                     l2970:
  3807  002716  90D8               	bcf	status,0,c
  3808  002718  320C               	rrcf	__div_to_l_@quot+3,f,c
  3809  00271A  320B               	rrcf	__div_to_l_@quot+2,f,c
  3810  00271C  320A               	rrcf	__div_to_l_@quot+1,f,c
  3811  00271E  3209               	rrcf	__div_to_l_@quot,f,c
  3812  002720  3E0E               	incfsz	__div_to_l_@exp1,f,c
  3813  002722  D7F9               	goto	l2970
  3814  002724  D015               	goto	l479
  3815  002726                     l2974:
  3816  002726  0E1F               	movlw	31
  3817  002728  640E               	cpfsgt	__div_to_l_@exp1,c
  3818  00272A  D00F               	goto	l2982
  3819  00272C  0E00               	movlw	0
  3820  00272E  6E01               	movwf	?__div_to_l_,c
  3821  002730  0E00               	movlw	0
  3822  002732  6E02               	movwf	?__div_to_l_+1,c
  3823  002734  0E00               	movlw	0
  3824  002736  6E03               	movwf	?__div_to_l_+2,c
  3825  002738  0E00               	movlw	0
  3826  00273A  6E04               	movwf	?__div_to_l_+3,c
  3827  00273C  0012               	return	
  3828  00273E                     l2980:
  3829  00273E  90D8               	bcf	status,0,c
  3830  002740  3609               	rlcf	__div_to_l_@quot,f,c
  3831  002742  360A               	rlcf	__div_to_l_@quot+1,f,c
  3832  002744  360B               	rlcf	__div_to_l_@quot+2,f,c
  3833  002746  360C               	rlcf	__div_to_l_@quot+3,f,c
  3834  002748  060E               	decf	__div_to_l_@exp1,f,c
  3835  00274A                     l2982:
  3836  00274A  500E               	movf	__div_to_l_@exp1,w,c
  3837  00274C  A4D8               	btfss	status,2,c
  3838  00274E  D7F7               	goto	l2980
  3839  002750                     l479:
  3840  002750  C009  F001         	movff	__div_to_l_@quot,?__div_to_l_
  3841  002754  C00A  F002         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  3842  002758  C00B  F003         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  3843  00275C  C00C  F004         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  3844  002760  0012               	return		;funcret
  3845  002762                     __end_of__div_to_l_:
  3846                           	opt stack 0
  3847                           tblptru	equ	0xFF8
  3848                           tblptrh	equ	0xFF7
  3849                           tblptrl	equ	0xFF6
  3850                           tablat	equ	0xFF5
  3851                           prodh	equ	0xFF4
  3852                           prodl	equ	0xFF3
  3853                           postinc0	equ	0xFEE
  3854                           wreg	equ	0xFE8
  3855                           indf2	equ	0xFDF
  3856                           postinc2	equ	0xFDE
  3857                           fsr2h	equ	0xFDA
  3858                           fsr2l	equ	0xFD9
  3859                           status	equ	0xFD8
  3860                           
  3861 ;; *************** function ___llmod *****************
  3862 ;; Defined at:
  3863 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\llmod.c"
  3864 ;; Parameters:    Size  Location     Type
  3865 ;;  dividend        4    0[COMRAM] unsigned long 
  3866 ;;  divisor         4    4[COMRAM] unsigned long 
  3867 ;; Auto vars:     Size  Location     Type
  3868 ;;  counter         1    8[COMRAM] unsigned char 
  3869 ;; Return value:  Size  Location     Type
  3870 ;;                  4    0[COMRAM] unsigned long 
  3871 ;; Registers used:
  3872 ;;		wreg, status,2, status,0
  3873 ;; Tracked objects:
  3874 ;;		On entry : 0/0
  3875 ;;		On exit  : 0/0
  3876 ;;		Unchanged: 0/0
  3877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3878 ;;      Params:         8       0       0       0       0       0       0       0       0
  3879 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3880 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3881 ;;      Totals:         9       0       0       0       0       0       0       0       0
  3882 ;;Total ram usage:        9 bytes
  3883 ;; Hardware stack levels used:    1
  3884 ;; This function calls:
  3885 ;;		Nothing
  3886 ;; This function is called by:
  3887 ;;		_sprintf
  3888 ;; This function uses a non-reentrant model
  3889 ;;
  3890                           
  3891                           	psect	text9
  3892  002D16                     __ptext9:
  3893                           	opt stack 0
  3894  002D16                     ___llmod:
  3895                           	opt stack 28
  3896                           
  3897                           ;incstack = 0
  3898  002D16  5005               	movf	___llmod@divisor,w,c
  3899  002D18  1006               	iorwf	___llmod@divisor+1,w,c
  3900  002D1A  1007               	iorwf	___llmod@divisor+2,w,c
  3901  002D1C  1008               	iorwf	___llmod@divisor+3,w,c
  3902  002D1E  B4D8               	btfsc	status,2,c
  3903  002D20  D024               	goto	l682
  3904  002D22  0E01               	movlw	1
  3905  002D24  6E09               	movwf	___llmod@counter,c
  3906  002D26  D006               	goto	l3228
  3907  002D28                     l3226:
  3908  002D28  90D8               	bcf	status,0,c
  3909  002D2A  3605               	rlcf	___llmod@divisor,f,c
  3910  002D2C  3606               	rlcf	___llmod@divisor+1,f,c
  3911  002D2E  3607               	rlcf	___llmod@divisor+2,f,c
  3912  002D30  3608               	rlcf	___llmod@divisor+3,f,c
  3913  002D32  2A09               	incf	___llmod@counter,f,c
  3914  002D34                     l3228:
  3915  002D34  AE08               	btfss	___llmod@divisor+3,7,c
  3916  002D36  D7F8               	goto	l3226
  3917  002D38                     l3230:
  3918  002D38  5005               	movf	___llmod@divisor,w,c
  3919  002D3A  5C01               	subwf	___llmod@dividend,w,c
  3920  002D3C  5006               	movf	___llmod@divisor+1,w,c
  3921  002D3E  5802               	subwfb	___llmod@dividend+1,w,c
  3922  002D40  5007               	movf	___llmod@divisor+2,w,c
  3923  002D42  5803               	subwfb	___llmod@dividend+2,w,c
  3924  002D44  5008               	movf	___llmod@divisor+3,w,c
  3925  002D46  5804               	subwfb	___llmod@dividend+3,w,c
  3926  002D48  A0D8               	btfss	status,0,c
  3927  002D4A  D008               	goto	l3234
  3928  002D4C  5005               	movf	___llmod@divisor,w,c
  3929  002D4E  5E01               	subwf	___llmod@dividend,f,c
  3930  002D50  5006               	movf	___llmod@divisor+1,w,c
  3931  002D52  5A02               	subwfb	___llmod@dividend+1,f,c
  3932  002D54  5007               	movf	___llmod@divisor+2,w,c
  3933  002D56  5A03               	subwfb	___llmod@dividend+2,f,c
  3934  002D58  5008               	movf	___llmod@divisor+3,w,c
  3935  002D5A  5A04               	subwfb	___llmod@dividend+3,f,c
  3936  002D5C                     l3234:
  3937  002D5C  90D8               	bcf	status,0,c
  3938  002D5E  3208               	rrcf	___llmod@divisor+3,f,c
  3939  002D60  3207               	rrcf	___llmod@divisor+2,f,c
  3940  002D62  3206               	rrcf	___llmod@divisor+1,f,c
  3941  002D64  3205               	rrcf	___llmod@divisor,f,c
  3942  002D66  2E09               	decfsz	___llmod@counter,f,c
  3943  002D68  D7E7               	goto	l3230
  3944  002D6A                     l682:
  3945  002D6A  C001  F001         	movff	___llmod@dividend,?___llmod
  3946  002D6E  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
  3947  002D72  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
  3948  002D76  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
  3949  002D7A  0012               	return		;funcret
  3950  002D7C                     __end_of___llmod:
  3951                           	opt stack 0
  3952                           tblptru	equ	0xFF8
  3953                           tblptrh	equ	0xFF7
  3954                           tblptrl	equ	0xFF6
  3955                           tablat	equ	0xFF5
  3956                           prodh	equ	0xFF4
  3957                           prodl	equ	0xFF3
  3958                           postinc0	equ	0xFEE
  3959                           wreg	equ	0xFE8
  3960                           indf2	equ	0xFDF
  3961                           postinc2	equ	0xFDE
  3962                           fsr2h	equ	0xFDA
  3963                           fsr2l	equ	0xFD9
  3964                           status	equ	0xFD8
  3965                           
  3966 ;; *************** function ___lldiv *****************
  3967 ;; Defined at:
  3968 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\lldiv.c"
  3969 ;; Parameters:    Size  Location     Type
  3970 ;;  dividend        4    0[COMRAM] unsigned long 
  3971 ;;  divisor         4    4[COMRAM] unsigned long 
  3972 ;; Auto vars:     Size  Location     Type
  3973 ;;  quotient        4    8[COMRAM] unsigned long 
  3974 ;;  counter         1   12[COMRAM] unsigned char 
  3975 ;; Return value:  Size  Location     Type
  3976 ;;                  4    0[COMRAM] unsigned long 
  3977 ;; Registers used:
  3978 ;;		wreg, status,2, status,0
  3979 ;; Tracked objects:
  3980 ;;		On entry : 0/0
  3981 ;;		On exit  : 0/0
  3982 ;;		Unchanged: 0/0
  3983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3984 ;;      Params:         8       0       0       0       0       0       0       0       0
  3985 ;;      Locals:         5       0       0       0       0       0       0       0       0
  3986 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3987 ;;      Totals:        13       0       0       0       0       0       0       0       0
  3988 ;;Total ram usage:       13 bytes
  3989 ;; Hardware stack levels used:    1
  3990 ;; This function calls:
  3991 ;;		Nothing
  3992 ;; This function is called by:
  3993 ;;		_sprintf
  3994 ;; This function uses a non-reentrant model
  3995 ;;
  3996                           
  3997                           	psect	text10
  3998  002BB4                     __ptext10:
  3999                           	opt stack 0
  4000  002BB4                     ___lldiv:
  4001                           	opt stack 28
  4002                           
  4003                           ;incstack = 0
  4004  002BB4  0E00               	movlw	0
  4005  002BB6  6E09               	movwf	___lldiv@quotient,c
  4006  002BB8  0E00               	movlw	0
  4007  002BBA  6E0A               	movwf	___lldiv@quotient+1,c
  4008  002BBC  0E00               	movlw	0
  4009  002BBE  6E0B               	movwf	___lldiv@quotient+2,c
  4010  002BC0  0E00               	movlw	0
  4011  002BC2  6E0C               	movwf	___lldiv@quotient+3,c
  4012  002BC4  5005               	movf	___lldiv@divisor,w,c
  4013  002BC6  1006               	iorwf	___lldiv@divisor+1,w,c
  4014  002BC8  1007               	iorwf	___lldiv@divisor+2,w,c
  4015  002BCA  1008               	iorwf	___lldiv@divisor+3,w,c
  4016  002BCC  B4D8               	btfsc	status,2,c
  4017  002BCE  D02A               	goto	l672
  4018  002BD0  0E01               	movlw	1
  4019  002BD2  6E0D               	movwf	___lldiv@counter,c
  4020  002BD4  D006               	goto	l3208
  4021  002BD6                     l3206:
  4022  002BD6  90D8               	bcf	status,0,c
  4023  002BD8  3605               	rlcf	___lldiv@divisor,f,c
  4024  002BDA  3606               	rlcf	___lldiv@divisor+1,f,c
  4025  002BDC  3607               	rlcf	___lldiv@divisor+2,f,c
  4026  002BDE  3608               	rlcf	___lldiv@divisor+3,f,c
  4027  002BE0  2A0D               	incf	___lldiv@counter,f,c
  4028  002BE2                     l3208:
  4029  002BE2  AE08               	btfss	___lldiv@divisor+3,7,c
  4030  002BE4  D7F8               	goto	l3206
  4031  002BE6                     l3210:
  4032  002BE6  90D8               	bcf	status,0,c
  4033  002BE8  3609               	rlcf	___lldiv@quotient,f,c
  4034  002BEA  360A               	rlcf	___lldiv@quotient+1,f,c
  4035  002BEC  360B               	rlcf	___lldiv@quotient+2,f,c
  4036  002BEE  360C               	rlcf	___lldiv@quotient+3,f,c
  4037  002BF0  5005               	movf	___lldiv@divisor,w,c
  4038  002BF2  5C01               	subwf	___lldiv@dividend,w,c
  4039  002BF4  5006               	movf	___lldiv@divisor+1,w,c
  4040  002BF6  5802               	subwfb	___lldiv@dividend+1,w,c
  4041  002BF8  5007               	movf	___lldiv@divisor+2,w,c
  4042  002BFA  5803               	subwfb	___lldiv@dividend+2,w,c
  4043  002BFC  5008               	movf	___lldiv@divisor+3,w,c
  4044  002BFE  5804               	subwfb	___lldiv@dividend+3,w,c
  4045  002C00  A0D8               	btfss	status,0,c
  4046  002C02  D009               	goto	l3218
  4047  002C04  5005               	movf	___lldiv@divisor,w,c
  4048  002C06  5E01               	subwf	___lldiv@dividend,f,c
  4049  002C08  5006               	movf	___lldiv@divisor+1,w,c
  4050  002C0A  5A02               	subwfb	___lldiv@dividend+1,f,c
  4051  002C0C  5007               	movf	___lldiv@divisor+2,w,c
  4052  002C0E  5A03               	subwfb	___lldiv@dividend+2,f,c
  4053  002C10  5008               	movf	___lldiv@divisor+3,w,c
  4054  002C12  5A04               	subwfb	___lldiv@dividend+3,f,c
  4055  002C14  8009               	bsf	___lldiv@quotient,0,c
  4056  002C16                     l3218:
  4057  002C16  90D8               	bcf	status,0,c
  4058  002C18  3208               	rrcf	___lldiv@divisor+3,f,c
  4059  002C1A  3207               	rrcf	___lldiv@divisor+2,f,c
  4060  002C1C  3206               	rrcf	___lldiv@divisor+1,f,c
  4061  002C1E  3205               	rrcf	___lldiv@divisor,f,c
  4062  002C20  2E0D               	decfsz	___lldiv@counter,f,c
  4063  002C22  D7E1               	goto	l3210
  4064  002C24                     l672:
  4065  002C24  C009  F001         	movff	___lldiv@quotient,?___lldiv
  4066  002C28  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  4067  002C2C  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  4068  002C30  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  4069  002C34  0012               	return		;funcret
  4070  002C36                     __end_of___lldiv:
  4071                           	opt stack 0
  4072                           tblptru	equ	0xFF8
  4073                           tblptrh	equ	0xFF7
  4074                           tblptrl	equ	0xFF6
  4075                           tablat	equ	0xFF5
  4076                           prodh	equ	0xFF4
  4077                           prodl	equ	0xFF3
  4078                           postinc0	equ	0xFEE
  4079                           wreg	equ	0xFE8
  4080                           indf2	equ	0xFDF
  4081                           postinc2	equ	0xFDE
  4082                           fsr2h	equ	0xFDA
  4083                           fsr2l	equ	0xFD9
  4084                           status	equ	0xFD8
  4085                           
  4086 ;; *************** function ___fltol *****************
  4087 ;; Defined at:
  4088 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\fltol.c"
  4089 ;; Parameters:    Size  Location     Type
  4090 ;;  f1              4   48[COMRAM] unsigned long 
  4091 ;; Auto vars:     Size  Location     Type
  4092 ;;  exp1            1   57[COMRAM] unsigned char 
  4093 ;;  sign1           1   56[COMRAM] unsigned char 
  4094 ;; Return value:  Size  Location     Type
  4095 ;;                  4   48[COMRAM] long 
  4096 ;; Registers used:
  4097 ;;		wreg, status,2, status,0
  4098 ;; Tracked objects:
  4099 ;;		On entry : 0/0
  4100 ;;		On exit  : 0/0
  4101 ;;		Unchanged: 0/0
  4102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4103 ;;      Params:         4       0       0       0       0       0       0       0       0
  4104 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4105 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4106 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4107 ;;Total ram usage:       10 bytes
  4108 ;; Hardware stack levels used:    1
  4109 ;; This function calls:
  4110 ;;		Nothing
  4111 ;; This function is called by:
  4112 ;;		_sprintf
  4113 ;; This function uses a non-reentrant model
  4114 ;;
  4115                           
  4116                           	psect	text11
  4117  00299C                     __ptext11:
  4118                           	opt stack 0
  4119  00299C                     ___fltol:
  4120                           	opt stack 28
  4121                           
  4122                           ;incstack = 0
  4123  00299C  3433               	rlcf	___fltol@f1+2,w,c
  4124  00299E  3434               	rlcf	___fltol@f1+3,w,c
  4125  0029A0  6E3A               	movwf	___fltol@exp1,c
  4126  0029A2  503A               	movf	___fltol@exp1,w,c
  4127  0029A4  A4D8               	btfss	status,2,c
  4128  0029A6  D009               	goto	l3162
  4129  0029A8  0E00               	movlw	0
  4130  0029AA  6E31               	movwf	?___fltol,c
  4131  0029AC  0E00               	movlw	0
  4132  0029AE  6E32               	movwf	?___fltol+1,c
  4133  0029B0  0E00               	movlw	0
  4134  0029B2  6E33               	movwf	?___fltol+2,c
  4135  0029B4  0E00               	movlw	0
  4136  0029B6  6E34               	movwf	?___fltol+3,c
  4137  0029B8  0012               	return	
  4138  0029BA                     l3162:
  4139  0029BA  C031  F035         	movff	___fltol@f1,??___fltol
  4140  0029BE  C032  F036         	movff	___fltol@f1+1,??___fltol+1
  4141  0029C2  C033  F037         	movff	___fltol@f1+2,??___fltol+2
  4142  0029C6  C034  F038         	movff	___fltol@f1+3,??___fltol+3
  4143  0029CA  0E20               	movlw	32
  4144  0029CC  D005               	goto	u3350
  4145  0029CE                     u3355:
  4146  0029CE  90D8               	bcf	status,0,c
  4147  0029D0  3238               	rrcf	??___fltol+3,f,c
  4148  0029D2  3237               	rrcf	??___fltol+2,f,c
  4149  0029D4  3236               	rrcf	??___fltol+1,f,c
  4150  0029D6  3235               	rrcf	??___fltol,f,c
  4151  0029D8                     u3350:
  4152  0029D8  2EE8               	decfsz	wreg,f,c
  4153  0029DA  D7F9               	goto	u3355
  4154  0029DC  5035               	movf	??___fltol,w,c
  4155  0029DE  6E39               	movwf	___fltol@sign1,c
  4156  0029E0  8E33               	bsf	___fltol@f1+2,7,c
  4157  0029E2  0EFF               	movlw	255
  4158  0029E4  1631               	andwf	___fltol@f1,f,c
  4159  0029E6  0EFF               	movlw	255
  4160  0029E8  1632               	andwf	___fltol@f1+1,f,c
  4161  0029EA  0EFF               	movlw	255
  4162  0029EC  1633               	andwf	___fltol@f1+2,f,c
  4163  0029EE  0E00               	movlw	0
  4164  0029F0  1634               	andwf	___fltol@f1+3,f,c
  4165  0029F2  0E96               	movlw	150
  4166  0029F4  5E3A               	subwf	___fltol@exp1,f,c
  4167  0029F6  AE3A               	btfss	___fltol@exp1,7,c
  4168  0029F8  D016               	goto	l3182
  4169  0029FA  503A               	movf	___fltol@exp1,w,c
  4170  0029FC  0A80               	xorlw	128
  4171  0029FE  0F97               	addlw	151
  4172  002A00  B0D8               	btfsc	status,0,c
  4173  002A02  D009               	goto	l3178
  4174  002A04  0E00               	movlw	0
  4175  002A06  6E31               	movwf	?___fltol,c
  4176  002A08  0E00               	movlw	0
  4177  002A0A  6E32               	movwf	?___fltol+1,c
  4178  002A0C  0E00               	movlw	0
  4179  002A0E  6E33               	movwf	?___fltol+2,c
  4180  002A10  0E00               	movlw	0
  4181  002A12  6E34               	movwf	?___fltol+3,c
  4182  002A14  0012               	return	
  4183  002A16                     l3178:
  4184  002A16  90D8               	bcf	status,0,c
  4185  002A18  3234               	rrcf	___fltol@f1+3,f,c
  4186  002A1A  3233               	rrcf	___fltol@f1+2,f,c
  4187  002A1C  3232               	rrcf	___fltol@f1+1,f,c
  4188  002A1E  3231               	rrcf	___fltol@f1,f,c
  4189  002A20  3E3A               	incfsz	___fltol@exp1,f,c
  4190  002A22  D7F9               	goto	l3178
  4191  002A24  D015               	goto	l3192
  4192  002A26                     l3182:
  4193  002A26  0E1F               	movlw	31
  4194  002A28  643A               	cpfsgt	___fltol@exp1,c
  4195  002A2A  D00F               	goto	l3190
  4196  002A2C  0E00               	movlw	0
  4197  002A2E  6E31               	movwf	?___fltol,c
  4198  002A30  0E00               	movlw	0
  4199  002A32  6E32               	movwf	?___fltol+1,c
  4200  002A34  0E00               	movlw	0
  4201  002A36  6E33               	movwf	?___fltol+2,c
  4202  002A38  0E00               	movlw	0
  4203  002A3A  6E34               	movwf	?___fltol+3,c
  4204  002A3C  0012               	return	
  4205  002A3E                     l3188:
  4206  002A3E  90D8               	bcf	status,0,c
  4207  002A40  3631               	rlcf	___fltol@f1,f,c
  4208  002A42  3632               	rlcf	___fltol@f1+1,f,c
  4209  002A44  3633               	rlcf	___fltol@f1+2,f,c
  4210  002A46  3634               	rlcf	___fltol@f1+3,f,c
  4211  002A48  063A               	decf	___fltol@exp1,f,c
  4212  002A4A                     l3190:
  4213  002A4A  503A               	movf	___fltol@exp1,w,c
  4214  002A4C  A4D8               	btfss	status,2,c
  4215  002A4E  D7F7               	goto	l3188
  4216  002A50                     l3192:
  4217  002A50  5039               	movf	___fltol@sign1,w,c
  4218  002A52  B4D8               	btfsc	status,2,c
  4219  002A54  D008               	goto	l3196
  4220  002A56  1E34               	comf	___fltol@f1+3,f,c
  4221  002A58  1E33               	comf	___fltol@f1+2,f,c
  4222  002A5A  1E32               	comf	___fltol@f1+1,f,c
  4223  002A5C  6C31               	negf	___fltol@f1,c
  4224  002A5E  0E00               	movlw	0
  4225  002A60  2232               	addwfc	___fltol@f1+1,f,c
  4226  002A62  2233               	addwfc	___fltol@f1+2,f,c
  4227  002A64  2234               	addwfc	___fltol@f1+3,f,c
  4228  002A66                     l3196:
  4229  002A66  C031  F031         	movff	___fltol@f1,?___fltol
  4230  002A6A  C032  F032         	movff	___fltol@f1+1,?___fltol+1
  4231  002A6E  C033  F033         	movff	___fltol@f1+2,?___fltol+2
  4232  002A72  C034  F034         	movff	___fltol@f1+3,?___fltol+3
  4233  002A76  0012               	return	
  4234  002A78                     __end_of___fltol:
  4235                           	opt stack 0
  4236                           tblptru	equ	0xFF8
  4237                           tblptrh	equ	0xFF7
  4238                           tblptrl	equ	0xFF6
  4239                           tablat	equ	0xFF5
  4240                           prodh	equ	0xFF4
  4241                           prodl	equ	0xFF3
  4242                           postinc0	equ	0xFEE
  4243                           wreg	equ	0xFE8
  4244                           indf2	equ	0xFDF
  4245                           postinc2	equ	0xFDE
  4246                           fsr2h	equ	0xFDA
  4247                           fsr2l	equ	0xFD9
  4248                           status	equ	0xFD8
  4249                           
  4250 ;; *************** function ___flsub *****************
  4251 ;; Defined at:
  4252 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\sprcadd.c"
  4253 ;; Parameters:    Size  Location     Type
  4254 ;;  b               4   72[COMRAM] long 
  4255 ;;  a               4   76[COMRAM] long 
  4256 ;; Auto vars:     Size  Location     Type
  4257 ;;		None
  4258 ;; Return value:  Size  Location     Type
  4259 ;;                  4   72[COMRAM] long 
  4260 ;; Registers used:
  4261 ;;		wreg, status,2, status,0, cstack
  4262 ;; Tracked objects:
  4263 ;;		On entry : 0/0
  4264 ;;		On exit  : 0/0
  4265 ;;		Unchanged: 0/0
  4266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4267 ;;      Params:         8       0       0       0       0       0       0       0       0
  4268 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4269 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4270 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4271 ;;Total ram usage:        8 bytes
  4272 ;; Hardware stack levels used:    1
  4273 ;; Hardware stack levels required when called:    1
  4274 ;; This function calls:
  4275 ;;		___fladd
  4276 ;; This function is called by:
  4277 ;;		_sprintf
  4278 ;; This function uses a non-reentrant model
  4279 ;;
  4280                           
  4281                           	psect	text12
  4282  002E72                     __ptext12:
  4283                           	opt stack 0
  4284  002E72                     ___flsub:
  4285                           	opt stack 27
  4286                           
  4287                           ;incstack = 0
  4288  002E72  0E00               	movlw	0
  4289  002E74  1A4D               	xorwf	___flsub@a,f,c
  4290  002E76  0E00               	movlw	0
  4291  002E78  1A4E               	xorwf	___flsub@a+1,f,c
  4292  002E7A  0E00               	movlw	0
  4293  002E7C  1A4F               	xorwf	___flsub@a+2,f,c
  4294  002E7E  0E80               	movlw	128
  4295  002E80  1A50               	xorwf	___flsub@a+3,f,c
  4296  002E82  C049  F035         	movff	___flsub@b,___fladd@b
  4297  002E86  C04A  F036         	movff	___flsub@b+1,___fladd@b+1
  4298  002E8A  C04B  F037         	movff	___flsub@b+2,___fladd@b+2
  4299  002E8E  C04C  F038         	movff	___flsub@b+3,___fladd@b+3
  4300  002E92  C04D  F039         	movff	___flsub@a,___fladd@a
  4301  002E96  C04E  F03A         	movff	___flsub@a+1,___fladd@a+1
  4302  002E9A  C04F  F03B         	movff	___flsub@a+2,___fladd@a+2
  4303  002E9E  C050  F03C         	movff	___flsub@a+3,___fladd@a+3
  4304  002EA2  EC26  F00C         	call	___fladd	;wreg free
  4305  002EA6  C035  F049         	movff	?___fladd,?___flsub
  4306  002EAA  C036  F04A         	movff	?___fladd+1,?___flsub+1
  4307  002EAE  C037  F04B         	movff	?___fladd+2,?___flsub+2
  4308  002EB2  C038  F04C         	movff	?___fladd+3,?___flsub+3
  4309  002EB6  0012               	return	
  4310  002EB8                     __end_of___flsub:
  4311                           	opt stack 0
  4312                           tblptru	equ	0xFF8
  4313                           tblptrh	equ	0xFF7
  4314                           tblptrl	equ	0xFF6
  4315                           tablat	equ	0xFF5
  4316                           prodh	equ	0xFF4
  4317                           prodl	equ	0xFF3
  4318                           postinc0	equ	0xFEE
  4319                           wreg	equ	0xFE8
  4320                           indf2	equ	0xFDF
  4321                           postinc2	equ	0xFDE
  4322                           fsr2h	equ	0xFDA
  4323                           fsr2l	equ	0xFD9
  4324                           status	equ	0xFD8
  4325                           
  4326 ;; *************** function ___fladd *****************
  4327 ;; Defined at:
  4328 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\sprcadd.c"
  4329 ;; Parameters:    Size  Location     Type
  4330 ;;  b               4   52[COMRAM] long 
  4331 ;;  a               4   56[COMRAM] long 
  4332 ;; Auto vars:     Size  Location     Type
  4333 ;;  grs             1   71[COMRAM] unsigned char 
  4334 ;;  bexp            1   70[COMRAM] unsigned char 
  4335 ;;  aexp            1   69[COMRAM] unsigned char 
  4336 ;;  signs           1   68[COMRAM] unsigned char 
  4337 ;; Return value:  Size  Location     Type
  4338 ;;                  4   52[COMRAM] unsigned char 
  4339 ;; Registers used:
  4340 ;;		wreg, status,2, status,0
  4341 ;; Tracked objects:
  4342 ;;		On entry : 0/0
  4343 ;;		On exit  : 0/0
  4344 ;;		Unchanged: 0/0
  4345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4346 ;;      Params:         8       0       0       0       0       0       0       0       0
  4347 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4348 ;;      Temps:          8       0       0       0       0       0       0       0       0
  4349 ;;      Totals:        20       0       0       0       0       0       0       0       0
  4350 ;;Total ram usage:       20 bytes
  4351 ;; Hardware stack levels used:    1
  4352 ;; This function calls:
  4353 ;;		Nothing
  4354 ;; This function is called by:
  4355 ;;		_sprintf
  4356 ;;		___flsub
  4357 ;; This function uses a non-reentrant model
  4358 ;;
  4359                           
  4360                           	psect	text13
  4361  00184C                     __ptext13:
  4362                           	opt stack 0
  4363  00184C                     ___fladd:
  4364                           	opt stack 27
  4365                           
  4366                           ;incstack = 0
  4367  00184C  5038               	movf	___fladd@b+3,w,c
  4368  00184E  0B80               	andlw	128
  4369  001850  6E45               	movwf	___fladd@signs,c
  4370  001852  5038               	movf	___fladd@b+3,w,c
  4371  001854  2438               	addwf	___fladd@b+3,w,c
  4372  001856  6E47               	movwf	___fladd@bexp,c
  4373  001858  BE37               	btfsc	___fladd@b+2,7,c
  4374  00185A  8047               	bsf	___fladd@bexp,0,c
  4375  00185C  5047               	movf	___fladd@bexp,w,c
  4376  00185E  B4D8               	btfsc	status,2,c
  4377  001860  D00D               	goto	l2376
  4378  001862  2847               	incf	___fladd@bexp,w,c
  4379  001864  A4D8               	btfss	status,2,c
  4380  001866  D008               	goto	l2372
  4381  001868  0E00               	movlw	0
  4382  00186A  6E35               	movwf	___fladd@b,c
  4383  00186C  0E00               	movlw	0
  4384  00186E  6E36               	movwf	___fladd@b+1,c
  4385  001870  0E00               	movlw	0
  4386  001872  6E37               	movwf	___fladd@b+2,c
  4387  001874  0E00               	movlw	0
  4388  001876  6E38               	movwf	___fladd@b+3,c
  4389  001878                     l2372:
  4390  001878  8E37               	bsf	___fladd@b+2,7,c
  4391  00187A  D006               	goto	L6
  4392  00187C                     l2376:
  4393  00187C  0E00               	movlw	0
  4394  00187E  6E35               	movwf	___fladd@b,c
  4395  001880  0E00               	movlw	0
  4396  001882  6E36               	movwf	___fladd@b+1,c
  4397  001884  0E00               	movlw	0
  4398  001886  6E37               	movwf	___fladd@b+2,c
  4399  001888                     L6:
  4400  001888  0E00               	movlw	0
  4401  00188A  6E38               	movwf	___fladd@b+3,c
  4402  00188C  503C               	movf	___fladd@a+3,w,c
  4403  00188E  0B80               	andlw	128
  4404  001890  6E46               	movwf	___fladd@aexp,c
  4405  001892  5045               	movf	___fladd@signs,w,c
  4406  001894  1846               	xorwf	___fladd@aexp,w,c
  4407  001896  A4D8               	btfss	status,2,c
  4408  001898  8C45               	bsf	___fladd@signs,6,c
  4409  00189A  503C               	movf	___fladd@a+3,w,c
  4410  00189C  243C               	addwf	___fladd@a+3,w,c
  4411  00189E  6E46               	movwf	___fladd@aexp,c
  4412  0018A0  BE3B               	btfsc	___fladd@a+2,7,c
  4413  0018A2  8046               	bsf	___fladd@aexp,0,c
  4414  0018A4  5046               	movf	___fladd@aexp,w,c
  4415  0018A6  B4D8               	btfsc	status,2,c
  4416  0018A8  D00D               	goto	l2400
  4417  0018AA  2846               	incf	___fladd@aexp,w,c
  4418  0018AC  A4D8               	btfss	status,2,c
  4419  0018AE  D008               	goto	l2396
  4420  0018B0  0E00               	movlw	0
  4421  0018B2  6E39               	movwf	___fladd@a,c
  4422  0018B4  0E00               	movlw	0
  4423  0018B6  6E3A               	movwf	___fladd@a+1,c
  4424  0018B8  0E00               	movlw	0
  4425  0018BA  6E3B               	movwf	___fladd@a+2,c
  4426  0018BC  0E00               	movlw	0
  4427  0018BE  6E3C               	movwf	___fladd@a+3,c
  4428  0018C0                     l2396:
  4429  0018C0  8E3B               	bsf	___fladd@a+2,7,c
  4430  0018C2  D006               	goto	L7
  4431  0018C4                     l2400:
  4432  0018C4  0E00               	movlw	0
  4433  0018C6  6E39               	movwf	___fladd@a,c
  4434  0018C8  0E00               	movlw	0
  4435  0018CA  6E3A               	movwf	___fladd@a+1,c
  4436  0018CC  0E00               	movlw	0
  4437  0018CE  6E3B               	movwf	___fladd@a+2,c
  4438  0018D0                     L7:
  4439  0018D0  0E00               	movlw	0
  4440  0018D2  6E3C               	movwf	___fladd@a+3,c
  4441  0018D4  5047               	movf	___fladd@bexp,w,c
  4442  0018D6  5C46               	subwf	___fladd@aexp,w,c
  4443  0018D8  B0D8               	btfsc	status,0,c
  4444  0018DA  D022               	goto	l2438
  4445  0018DC  AC45               	btfss	___fladd@signs,6,c
  4446  0018DE  D002               	goto	l2408
  4447  0018E0  0E80               	movlw	128
  4448  0018E2  1A45               	xorwf	___fladd@signs,f,c
  4449  0018E4                     l2408:
  4450  0018E4  C047  F048         	movff	___fladd@bexp,___fladd@grs
  4451  0018E8  C046  F047         	movff	___fladd@aexp,___fladd@bexp
  4452  0018EC  C048  F046         	movff	___fladd@grs,___fladd@aexp
  4453  0018F0  C035  F048         	movff	___fladd@b,___fladd@grs
  4454  0018F4  C039  F035         	movff	___fladd@a,___fladd@b
  4455  0018F8  C048  F039         	movff	___fladd@grs,___fladd@a
  4456  0018FC  C036  F048         	movff	___fladd@b+1,___fladd@grs
  4457  001900  C03A  F036         	movff	___fladd@a+1,___fladd@b+1
  4458  001904  C048  F03A         	movff	___fladd@grs,___fladd@a+1
  4459  001908  C037  F048         	movff	___fladd@b+2,___fladd@grs
  4460  00190C  C03B  F037         	movff	___fladd@a+2,___fladd@b+2
  4461  001910  C048  F03B         	movff	___fladd@grs,___fladd@a+2
  4462  001914  C038  F048         	movff	___fladd@b+3,___fladd@grs
  4463  001918  C03C  F038         	movff	___fladd@a+3,___fladd@b+3
  4464  00191C  C048  F03C         	movff	___fladd@grs,___fladd@a+3
  4465  001920                     l2438:
  4466  001920  0E00               	movlw	0
  4467  001922  6E48               	movwf	___fladd@grs,c
  4468  001924  5047               	movf	___fladd@bexp,w,c
  4469  001926  6E3D               	movwf	??___fladd& (0+255),c
  4470  001928  6A3E               	clrf	(??___fladd+1)& (0+255),c
  4471  00192A  1E3D               	comf	??___fladd,f,c
  4472  00192C  1E3E               	comf	??___fladd+1,f,c
  4473  00192E  4A3D               	infsnz	??___fladd,f,c
  4474  001930  2A3E               	incf	??___fladd+1,f,c
  4475  001932  5046               	movf	___fladd@aexp,w,c
  4476  001934  6E3F               	movwf	(??___fladd+2)& (0+255),c
  4477  001936  6A40               	clrf	(??___fladd+3)& (0+255),c
  4478  001938  503D               	movf	??___fladd,w,c
  4479  00193A  263F               	addwf	??___fladd+2,f,c
  4480  00193C  503E               	movf	??___fladd+1,w,c
  4481  00193E  2240               	addwfc	??___fladd+3,f,c
  4482  001940  BE40               	btfsc	??___fladd+3,7,c
  4483  001942  D02C               	goto	l767
  4484  001944  5040               	movf	??___fladd+3,w,c
  4485  001946  E104               	bnz	u2190
  4486  001948  0E1A               	movlw	26
  4487  00194A  5C3F               	subwf	??___fladd+2,w,c
  4488  00194C  A0D8               	btfss	status,0,c
  4489  00194E  D026               	goto	l767
  4490  001950                     u2190:
  4491  001950  5035               	movf	___fladd@b,w,c
  4492  001952  1036               	iorwf	___fladd@b+1,w,c
  4493  001954  1037               	iorwf	___fladd@b+2,w,c
  4494  001956  1038               	iorwf	___fladd@b+3,w,c
  4495  001958  B4D8               	btfsc	status,2,c
  4496  00195A  D002               	goto	u2200
  4497  00195C  0E01               	movlw	1
  4498  00195E  D001               	goto	u2210
  4499  001960                     u2200:
  4500  001960  0E00               	movlw	0
  4501  001962                     u2210:
  4502  001962  6E48               	movwf	___fladd@grs,c
  4503  001964  0E00               	movlw	0
  4504  001966  6E35               	movwf	___fladd@b,c
  4505  001968  0E00               	movlw	0
  4506  00196A  6E36               	movwf	___fladd@b+1,c
  4507  00196C  0E00               	movlw	0
  4508  00196E  6E37               	movwf	___fladd@b+2,c
  4509  001970  0E00               	movlw	0
  4510  001972  6E38               	movwf	___fladd@b+3,c
  4511  001974  C046  F047         	movff	___fladd@aexp,___fladd@bexp
  4512  001978  D015               	goto	l766
  4513  00197A                     l768:
  4514  00197A  A048               	btfss	___fladd@grs,0,c
  4515  00197C  D005               	goto	l2450
  4516  00197E  90D8               	bcf	status,0,c
  4517  001980  3048               	rrcf	___fladd@grs,w,c
  4518  001982  0901               	iorlw	1
  4519  001984  6E48               	movwf	___fladd@grs,c
  4520  001986  D002               	goto	l2452
  4521  001988                     l2450:
  4522  001988  90D8               	bcf	status,0,c
  4523  00198A  3248               	rrcf	___fladd@grs,f,c
  4524  00198C                     l2452:
  4525  00198C  B035               	btfsc	___fladd@b,0,c
  4526  00198E  8E48               	bsf	___fladd@grs,7,c
  4527  001990  3438               	rlcf	___fladd@b+3,w,c
  4528  001992  3238               	rrcf	___fladd@b+3,f,c
  4529  001994  3237               	rrcf	___fladd@b+2,f,c
  4530  001996  3236               	rrcf	___fladd@b+1,f,c
  4531  001998  3235               	rrcf	___fladd@b,f,c
  4532  00199A  2A47               	incf	___fladd@bexp,f,c
  4533  00199C                     l767:
  4534  00199C  5046               	movf	___fladd@aexp,w,c
  4535  00199E  5C47               	subwf	___fladd@bexp,w,c
  4536  0019A0  A0D8               	btfss	status,0,c
  4537  0019A2  D7EB               	goto	l768
  4538  0019A4                     l766:
  4539  0019A4  BC45               	btfsc	___fladd@signs,6,c
  4540  0019A6  D029               	goto	l2484
  4541  0019A8  5047               	movf	___fladd@bexp,w,c
  4542  0019AA  A4D8               	btfss	status,2,c
  4543  0019AC  D009               	goto	l2466
  4544  0019AE  0E00               	movlw	0
  4545  0019B0  6E35               	movwf	?___fladd,c
  4546  0019B2  0E00               	movlw	0
  4547  0019B4  6E36               	movwf	?___fladd+1,c
  4548  0019B6  0E00               	movlw	0
  4549  0019B8  6E37               	movwf	?___fladd+2,c
  4550  0019BA  0E00               	movlw	0
  4551  0019BC  6E38               	movwf	?___fladd+3,c
  4552  0019BE  0012               	return	
  4553  0019C0                     l2466:
  4554  0019C0  5039               	movf	___fladd@a,w,c
  4555  0019C2  2635               	addwf	___fladd@b,f,c
  4556  0019C4  503A               	movf	___fladd@a+1,w,c
  4557  0019C6  2236               	addwfc	___fladd@b+1,f,c
  4558  0019C8  503B               	movf	___fladd@a+2,w,c
  4559  0019CA  2237               	addwfc	___fladd@b+2,f,c
  4560  0019CC  503C               	movf	___fladd@a+3,w,c
  4561  0019CE  2238               	addwfc	___fladd@b+3,f,c
  4562  0019D0  A038               	btfss	___fladd@b+3,0,c
  4563  0019D2  D083               	goto	l2520
  4564  0019D4  A048               	btfss	___fladd@grs,0,c
  4565  0019D6  D006               	goto	l2474
  4566  0019D8  90D8               	bcf	status,0,c
  4567  0019DA  3248               	rrcf	___fladd@grs,f,c
  4568  0019DC  5048               	movf	___fladd@grs,w,c
  4569  0019DE  0901               	iorlw	1
  4570  0019E0  6E48               	movwf	___fladd@grs,c
  4571  0019E2  D002               	goto	l2476
  4572  0019E4                     l2474:
  4573  0019E4  90D8               	bcf	status,0,c
  4574  0019E6  3248               	rrcf	___fladd@grs,f,c
  4575  0019E8                     l2476:
  4576  0019E8  B035               	btfsc	___fladd@b,0,c
  4577  0019EA  8E48               	bsf	___fladd@grs,7,c
  4578  0019EC  3438               	rlcf	___fladd@b+3,w,c
  4579  0019EE  3238               	rrcf	___fladd@b+3,f,c
  4580  0019F0  3237               	rrcf	___fladd@b+2,f,c
  4581  0019F2  3236               	rrcf	___fladd@b+1,f,c
  4582  0019F4  3235               	rrcf	___fladd@b,f,c
  4583  0019F6  2A47               	incf	___fladd@bexp,f,c
  4584  0019F8  D070               	goto	l2520
  4585  0019FA                     l2484:
  4586  0019FA  5039               	movf	___fladd@a,w,c
  4587  0019FC  5C35               	subwf	___fladd@b,w,c
  4588  0019FE  503A               	movf	___fladd@a+1,w,c
  4589  001A00  5836               	subwfb	___fladd@b+1,w,c
  4590  001A02  503B               	movf	___fladd@a+2,w,c
  4591  001A04  5837               	subwfb	___fladd@b+2,w,c
  4592  001A06  5038               	movf	___fladd@b+3,w,c
  4593  001A08  0A80               	xorlw	128
  4594  001A0A  6E3D               	movwf	??___fladd& (0+255),c
  4595  001A0C  503C               	movf	___fladd@a+3,w,c
  4596  001A0E  0A80               	xorlw	128
  4597  001A10  583D               	subwfb	??___fladd& (0+255),w,c
  4598  001A12  B0D8               	btfsc	status,0,c
  4599  001A14  D036               	goto	l2494
  4600  001A16  C035  F03D         	movff	___fladd@b,??___fladd
  4601  001A1A  C036  F03E         	movff	___fladd@b+1,??___fladd+1
  4602  001A1E  C037  F03F         	movff	___fladd@b+2,??___fladd+2
  4603  001A22  C038  F040         	movff	___fladd@b+3,??___fladd+3
  4604  001A26  1E3D               	comf	??___fladd,f,c
  4605  001A28  1E3E               	comf	??___fladd+1,f,c
  4606  001A2A  1E3F               	comf	??___fladd+2,f,c
  4607  001A2C  1E40               	comf	??___fladd+3,f,c
  4608  001A2E  2A3D               	incf	??___fladd,f,c
  4609  001A30  0E00               	movlw	0
  4610  001A32  223E               	addwfc	??___fladd+1,f,c
  4611  001A34  223F               	addwfc	??___fladd+2,f,c
  4612  001A36  2240               	addwfc	??___fladd+3,f,c
  4613  001A38  5039               	movf	___fladd@a,w,c
  4614  001A3A  243D               	addwf	??___fladd,w,c
  4615  001A3C  6E41               	movwf	(??___fladd+4)& (0+255),c
  4616  001A3E  503A               	movf	___fladd@a+1,w,c
  4617  001A40  203E               	addwfc	??___fladd+1,w,c
  4618  001A42  6E42               	movwf	(??___fladd+5)& (0+255),c
  4619  001A44  503B               	movf	___fladd@a+2,w,c
  4620  001A46  203F               	addwfc	??___fladd+2,w,c
  4621  001A48  6E43               	movwf	(??___fladd+6)& (0+255),c
  4622  001A4A  503C               	movf	___fladd@a+3,w,c
  4623  001A4C  2040               	addwfc	??___fladd+3,w,c
  4624  001A4E  6E44               	movwf	(??___fladd+7)& (0+255),c
  4625  001A50  0EFF               	movlw	255
  4626  001A52  2441               	addwf	??___fladd+4,w,c
  4627  001A54  6E35               	movwf	___fladd@b,c
  4628  001A56  0EFF               	movlw	255
  4629  001A58  2042               	addwfc	??___fladd+5,w,c
  4630  001A5A  6E36               	movwf	___fladd@b+1,c
  4631  001A5C  0EFF               	movlw	255
  4632  001A5E  2043               	addwfc	??___fladd+6,w,c
  4633  001A60  6E37               	movwf	___fladd@b+2,c
  4634  001A62  0EFF               	movlw	255
  4635  001A64  2044               	addwfc	??___fladd+7,w,c
  4636  001A66  6E38               	movwf	___fladd@b+3,c
  4637  001A68  0E80               	movlw	128
  4638  001A6A  1A45               	xorwf	___fladd@signs,f,c
  4639  001A6C  6C48               	negf	___fladd@grs,c
  4640  001A6E  5048               	movf	___fladd@grs,w,c
  4641  001A70  A4D8               	btfss	status,2,c
  4642  001A72  D00F               	goto	l783
  4643  001A74  0E01               	movlw	1
  4644  001A76  2635               	addwf	___fladd@b,f,c
  4645  001A78  0E00               	movlw	0
  4646  001A7A  2236               	addwfc	___fladd@b+1,f,c
  4647  001A7C  2237               	addwfc	___fladd@b+2,f,c
  4648  001A7E  2238               	addwfc	___fladd@b+3,f,c
  4649  001A80  D008               	goto	l783
  4650  001A82                     l2494:
  4651  001A82  5039               	movf	___fladd@a,w,c
  4652  001A84  5E35               	subwf	___fladd@b,f,c
  4653  001A86  503A               	movf	___fladd@a+1,w,c
  4654  001A88  5A36               	subwfb	___fladd@b+1,f,c
  4655  001A8A  503B               	movf	___fladd@a+2,w,c
  4656  001A8C  5A37               	subwfb	___fladd@b+2,f,c
  4657  001A8E  503C               	movf	___fladd@a+3,w,c
  4658  001A90  5A38               	subwfb	___fladd@b+3,f,c
  4659  001A92                     l783:
  4660  001A92  5035               	movf	___fladd@b,w,c
  4661  001A94  1036               	iorwf	___fladd@b+1,w,c
  4662  001A96  1037               	iorwf	___fladd@b+2,w,c
  4663  001A98  1038               	iorwf	___fladd@b+3,w,c
  4664  001A9A  A4D8               	btfss	status,2,c
  4665  001A9C  D01C               	goto	l2518
  4666  001A9E  5048               	movf	___fladd@grs,w,c
  4667  001AA0  A4D8               	btfss	status,2,c
  4668  001AA2  D019               	goto	l2518
  4669  001AA4  0E00               	movlw	0
  4670  001AA6  6E35               	movwf	?___fladd,c
  4671  001AA8  0E00               	movlw	0
  4672  001AAA  6E36               	movwf	?___fladd+1,c
  4673  001AAC  0E00               	movlw	0
  4674  001AAE  6E37               	movwf	?___fladd+2,c
  4675  001AB0  0E00               	movlw	0
  4676  001AB2  6E38               	movwf	?___fladd+3,c
  4677  001AB4  0012               	return	
  4678  001AB6                     l2502:
  4679  001AB6  90D8               	bcf	status,0,c
  4680  001AB8  3635               	rlcf	___fladd@b,f,c
  4681  001ABA  3636               	rlcf	___fladd@b+1,f,c
  4682  001ABC  3637               	rlcf	___fladd@b+2,f,c
  4683  001ABE  3638               	rlcf	___fladd@b+3,f,c
  4684  001AC0  BE48               	btfsc	___fladd@grs,7,c
  4685  001AC2  8035               	bsf	___fladd@b,0,c
  4686  001AC4  A048               	btfss	___fladd@grs,0,c
  4687  001AC6  D002               	goto	l2512
  4688  001AC8  80D8               	bsf	status,0,c
  4689  001ACA  D001               	goto	L8
  4690  001ACC                     l2512:
  4691  001ACC  90D8               	bcf	status,0,c
  4692  001ACE                     L8:
  4693  001ACE  3648               	rlcf	___fladd@grs,f,c
  4694  001AD0  5047               	movf	___fladd@bexp,w,c
  4695  001AD2  A4D8               	btfss	status,2,c
  4696  001AD4  0647               	decf	___fladd@bexp,f,c
  4697  001AD6                     l2518:
  4698  001AD6  AE37               	btfss	___fladd@b+2,7,c
  4699  001AD8  D7EE               	goto	l2502
  4700  001ADA                     l2520:
  4701  001ADA  0E00               	movlw	0
  4702  001ADC  6E46               	movwf	___fladd@aexp,c
  4703  001ADE  AE48               	btfss	___fladd@grs,7,c
  4704  001AE0  D00A               	goto	l792
  4705  001AE2  C048  F03D         	movff	___fladd@grs,??___fladd
  4706  001AE6  0E7F               	movlw	127
  4707  001AE8  163D               	andwf	??___fladd,f,c
  4708  001AEA  A4D8               	btfss	status,2,c
  4709  001AEC  D002               	goto	l2528
  4710  001AEE  A035               	btfss	___fladd@b,0,c
  4711  001AF0  D002               	goto	l792
  4712  001AF2                     l2528:
  4713  001AF2  0E01               	movlw	1
  4714  001AF4  6E46               	movwf	___fladd@aexp,c
  4715  001AF6                     l792:
  4716  001AF6  5046               	movf	___fladd@aexp,w,c
  4717  001AF8  B4D8               	btfsc	status,2,c
  4718  001AFA  D020               	goto	l2538
  4719  001AFC  0E01               	movlw	1
  4720  001AFE  2635               	addwf	___fladd@b,f,c
  4721  001B00  0E00               	movlw	0
  4722  001B02  2236               	addwfc	___fladd@b+1,f,c
  4723  001B04  2237               	addwfc	___fladd@b+2,f,c
  4724  001B06  2238               	addwfc	___fladd@b+3,f,c
  4725  001B08  A038               	btfss	___fladd@b+3,0,c
  4726  001B0A  D018               	goto	l2538
  4727  001B0C  C035  F03D         	movff	___fladd@b,??___fladd
  4728  001B10  C036  F03E         	movff	___fladd@b+1,??___fladd+1
  4729  001B14  C037  F03F         	movff	___fladd@b+2,??___fladd+2
  4730  001B18  C038  F040         	movff	___fladd@b+3,??___fladd+3
  4731  001B1C  3440               	rlcf	??___fladd+3,w,c
  4732  001B1E  3240               	rrcf	??___fladd+3,f,c
  4733  001B20  323F               	rrcf	??___fladd+2,f,c
  4734  001B22  323E               	rrcf	??___fladd+1,f,c
  4735  001B24  323D               	rrcf	??___fladd,f,c
  4736  001B26  C03D  F035         	movff	??___fladd,___fladd@b
  4737  001B2A  C03E  F036         	movff	??___fladd+1,___fladd@b+1
  4738  001B2E  C03F  F037         	movff	??___fladd+2,___fladd@b+2
  4739  001B32  C040  F038         	movff	??___fladd+3,___fladd@b+3
  4740  001B36  2847               	incf	___fladd@bexp,w,c
  4741  001B38  A4D8               	btfss	status,2,c
  4742  001B3A  2A47               	incf	___fladd@bexp,f,c
  4743  001B3C                     l2538:
  4744  001B3C  2847               	incf	___fladd@bexp,w,c
  4745  001B3E  B4D8               	btfsc	status,2,c
  4746  001B40  D003               	goto	l2542
  4747  001B42  5047               	movf	___fladd@bexp,w,c
  4748  001B44  A4D8               	btfss	status,2,c
  4749  001B46  D00D               	goto	l2546
  4750  001B48                     l2542:
  4751  001B48  0E00               	movlw	0
  4752  001B4A  6E35               	movwf	___fladd@b,c
  4753  001B4C  0E00               	movlw	0
  4754  001B4E  6E36               	movwf	___fladd@b+1,c
  4755  001B50  0E00               	movlw	0
  4756  001B52  6E37               	movwf	___fladd@b+2,c
  4757  001B54  0E00               	movlw	0
  4758  001B56  6E38               	movwf	___fladd@b+3,c
  4759  001B58  5047               	movf	___fladd@bexp,w,c
  4760  001B5A  A4D8               	btfss	status,2,c
  4761  001B5C  D002               	goto	l2546
  4762  001B5E  0E00               	movlw	0
  4763  001B60  6E45               	movwf	___fladd@signs,c
  4764  001B62                     l2546:
  4765  001B62  A047               	btfss	___fladd@bexp,0,c
  4766  001B64  D002               	goto	l2550
  4767  001B66  8E37               	bsf	___fladd@b+2,7,c
  4768  001B68  D001               	goto	l2552
  4769  001B6A                     l2550:
  4770  001B6A  9E37               	bcf	___fladd@b+2,7,c
  4771  001B6C                     l2552:
  4772  001B6C  90D8               	bcf	status,0,c
  4773  001B6E  3047               	rrcf	___fladd@bexp,w,c
  4774  001B70  6E38               	movwf	___fladd@b+3,c
  4775  001B72  BE45               	btfsc	___fladd@signs,7,c
  4776  001B74  8E38               	bsf	___fladd@b+3,7,c
  4777  001B76  C035  F035         	movff	___fladd@b,?___fladd
  4778  001B7A  C036  F036         	movff	___fladd@b+1,?___fladd+1
  4779  001B7E  C037  F037         	movff	___fladd@b+2,?___fladd+2
  4780  001B82  C038  F038         	movff	___fladd@b+3,?___fladd+3
  4781  001B86  0012               	return	
  4782  001B88                     __end_of___fladd:
  4783                           	opt stack 0
  4784                           tblptru	equ	0xFF8
  4785                           tblptrh	equ	0xFF7
  4786                           tblptrl	equ	0xFF6
  4787                           tablat	equ	0xFF5
  4788                           prodh	equ	0xFF4
  4789                           prodl	equ	0xFF3
  4790                           postinc0	equ	0xFEE
  4791                           wreg	equ	0xFE8
  4792                           indf2	equ	0xFDF
  4793                           postinc2	equ	0xFDE
  4794                           fsr2h	equ	0xFDA
  4795                           fsr2l	equ	0xFD9
  4796                           status	equ	0xFD8
  4797                           
  4798 ;; *************** function ___flneg *****************
  4799 ;; Defined at:
  4800 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\flneg.c"
  4801 ;; Parameters:    Size  Location     Type
  4802 ;;  f1              4    0[COMRAM] unsigned char 
  4803 ;; Auto vars:     Size  Location     Type
  4804 ;;		None
  4805 ;; Return value:  Size  Location     Type
  4806 ;;                  4    0[COMRAM] unsigned char 
  4807 ;; Registers used:
  4808 ;;		wreg, status,2, status,0
  4809 ;; Tracked objects:
  4810 ;;		On entry : 0/0
  4811 ;;		On exit  : 0/0
  4812 ;;		Unchanged: 0/0
  4813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4814 ;;      Params:         4       0       0       0       0       0       0       0       0
  4815 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4816 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4817 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4818 ;;Total ram usage:        4 bytes
  4819 ;; Hardware stack levels used:    1
  4820 ;; This function calls:
  4821 ;;		Nothing
  4822 ;; This function is called by:
  4823 ;;		_sprintf
  4824 ;; This function uses a non-reentrant model
  4825 ;;
  4826                           
  4827                           	psect	text14
  4828  002F1A                     __ptext14:
  4829                           	opt stack 0
  4830  002F1A                     ___flneg:
  4831                           	opt stack 28
  4832                           
  4833                           ;incstack = 0
  4834  002F1A  5001               	movf	___flneg@f1,w,c
  4835  002F1C  1002               	iorwf	___flneg@f1+1,w,c
  4836  002F1E  1003               	iorwf	___flneg@f1+2,w,c
  4837  002F20  1004               	iorwf	___flneg@f1+3,w,c
  4838  002F22  B4D8               	btfsc	status,2,c
  4839  002F24  D008               	goto	l3152
  4840  002F26  0E00               	movlw	0
  4841  002F28  1A01               	xorwf	___flneg@f1,f,c
  4842  002F2A  0E00               	movlw	0
  4843  002F2C  1A02               	xorwf	___flneg@f1+1,f,c
  4844  002F2E  0E00               	movlw	0
  4845  002F30  1A03               	xorwf	___flneg@f1+2,f,c
  4846  002F32  0E80               	movlw	128
  4847  002F34  1A04               	xorwf	___flneg@f1+3,f,c
  4848  002F36                     l3152:
  4849  002F36  C001  F001         	movff	___flneg@f1,?___flneg
  4850  002F3A  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  4851  002F3E  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  4852  002F42  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  4853  002F46  0012               	return	
  4854  002F48                     __end_of___flneg:
  4855                           	opt stack 0
  4856                           tblptru	equ	0xFF8
  4857                           tblptrh	equ	0xFF7
  4858                           tblptrl	equ	0xFF6
  4859                           tablat	equ	0xFF5
  4860                           prodh	equ	0xFF4
  4861                           prodl	equ	0xFF3
  4862                           postinc0	equ	0xFEE
  4863                           wreg	equ	0xFE8
  4864                           indf2	equ	0xFDF
  4865                           postinc2	equ	0xFDE
  4866                           fsr2h	equ	0xFDA
  4867                           fsr2l	equ	0xFD9
  4868                           status	equ	0xFD8
  4869                           
  4870 ;; *************** function ___flge *****************
  4871 ;; Defined at:
  4872 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\flge.c"
  4873 ;; Parameters:    Size  Location     Type
  4874 ;;  ff1             4    0[COMRAM] unsigned char 
  4875 ;;  ff2             4    4[COMRAM] unsigned char 
  4876 ;; Auto vars:     Size  Location     Type
  4877 ;;		None
  4878 ;; Return value:  Size  Location     Type
  4879 ;;		None               void
  4880 ;; Registers used:
  4881 ;;		wreg, status,2, status,0
  4882 ;; Tracked objects:
  4883 ;;		On entry : 0/0
  4884 ;;		On exit  : 0/0
  4885 ;;		Unchanged: 0/0
  4886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4887 ;;      Params:         8       0       0       0       0       0       0       0       0
  4888 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4889 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4890 ;;      Totals:        12       0       0       0       0       0       0       0       0
  4891 ;;Total ram usage:       12 bytes
  4892 ;; Hardware stack levels used:    1
  4893 ;; This function calls:
  4894 ;;		Nothing
  4895 ;; This function is called by:
  4896 ;;		_ricarica
  4897 ;;		_sprintf
  4898 ;; This function uses a non-reentrant model
  4899 ;;
  4900                           
  4901                           	psect	text15
  4902  002762                     __ptext15:
  4903                           	opt stack 0
  4904  002762                     ___flge:
  4905                           	opt stack 28
  4906                           
  4907                           ;incstack = 0
  4908  002762  0E00               	movlw	0
  4909  002764  1401               	andwf	___flge@ff1,w,c
  4910  002766  6E09               	movwf	??___flge& (0+255),c
  4911  002768  0E00               	movlw	0
  4912  00276A  1402               	andwf	___flge@ff1+1,w,c
  4913  00276C  6E0A               	movwf	(??___flge+1)& (0+255),c
  4914  00276E  0E80               	movlw	128
  4915  002770  1403               	andwf	___flge@ff1+2,w,c
  4916  002772  6E0B               	movwf	(??___flge+2)& (0+255),c
  4917  002774  0E7F               	movlw	127
  4918  002776  1404               	andwf	___flge@ff1+3,w,c
  4919  002778  6E0C               	movwf	(??___flge+3)& (0+255),c
  4920  00277A  5009               	movf	??___flge,w,c
  4921  00277C  100A               	iorwf	??___flge+1,w,c
  4922  00277E  100B               	iorwf	??___flge+2,w,c
  4923  002780  100C               	iorwf	??___flge+3,w,c
  4924  002782  A4D8               	btfss	status,2,c
  4925  002784  D008               	goto	l3130
  4926  002786  0E00               	movlw	0
  4927  002788  6E01               	movwf	___flge@ff1,c
  4928  00278A  0E00               	movlw	0
  4929  00278C  6E02               	movwf	___flge@ff1+1,c
  4930  00278E  0E00               	movlw	0
  4931  002790  6E03               	movwf	___flge@ff1+2,c
  4932  002792  0E00               	movlw	0
  4933  002794  6E04               	movwf	___flge@ff1+3,c
  4934  002796                     l3130:
  4935  002796  0E00               	movlw	0
  4936  002798  1405               	andwf	___flge@ff2,w,c
  4937  00279A  6E09               	movwf	??___flge& (0+255),c
  4938  00279C  0E00               	movlw	0
  4939  00279E  1406               	andwf	___flge@ff2+1,w,c
  4940  0027A0  6E0A               	movwf	(??___flge+1)& (0+255),c
  4941  0027A2  0E80               	movlw	128
  4942  0027A4  1407               	andwf	___flge@ff2+2,w,c
  4943  0027A6  6E0B               	movwf	(??___flge+2)& (0+255),c
  4944  0027A8  0E7F               	movlw	127
  4945  0027AA  1408               	andwf	___flge@ff2+3,w,c
  4946  0027AC  6E0C               	movwf	(??___flge+3)& (0+255),c
  4947  0027AE  5009               	movf	??___flge,w,c
  4948  0027B0  100A               	iorwf	??___flge+1,w,c
  4949  0027B2  100B               	iorwf	??___flge+2,w,c
  4950  0027B4  100C               	iorwf	??___flge+3,w,c
  4951  0027B6  A4D8               	btfss	status,2,c
  4952  0027B8  D008               	goto	l3134
  4953  0027BA  0E00               	movlw	0
  4954  0027BC  6E05               	movwf	___flge@ff2,c
  4955  0027BE  0E00               	movlw	0
  4956  0027C0  6E06               	movwf	___flge@ff2+1,c
  4957  0027C2  0E00               	movlw	0
  4958  0027C4  6E07               	movwf	___flge@ff2+2,c
  4959  0027C6  0E00               	movlw	0
  4960  0027C8  6E08               	movwf	___flge@ff2+3,c
  4961  0027CA                     l3134:
  4962  0027CA  AE04               	btfss	___flge@ff1+3,7,c
  4963  0027CC  D01D               	goto	l3138
  4964  0027CE  C001  F009         	movff	___flge@ff1,??___flge
  4965  0027D2  C002  F00A         	movff	___flge@ff1+1,??___flge+1
  4966  0027D6  C003  F00B         	movff	___flge@ff1+2,??___flge+2
  4967  0027DA  C004  F00C         	movff	___flge@ff1+3,??___flge+3
  4968  0027DE  1E09               	comf	??___flge,f,c
  4969  0027E0  1E0A               	comf	??___flge+1,f,c
  4970  0027E2  1E0B               	comf	??___flge+2,f,c
  4971  0027E4  1E0C               	comf	??___flge+3,f,c
  4972  0027E6  2A09               	incf	??___flge,f,c
  4973  0027E8  0E00               	movlw	0
  4974  0027EA  220A               	addwfc	??___flge+1,f,c
  4975  0027EC  220B               	addwfc	??___flge+2,f,c
  4976  0027EE  220C               	addwfc	??___flge+3,f,c
  4977  0027F0  0E00               	movlw	0
  4978  0027F2  2409               	addwf	??___flge,w,c
  4979  0027F4  6E01               	movwf	___flge@ff1,c
  4980  0027F6  0E00               	movlw	0
  4981  0027F8  200A               	addwfc	??___flge+1,w,c
  4982  0027FA  6E02               	movwf	___flge@ff1+1,c
  4983  0027FC  0E00               	movlw	0
  4984  0027FE  200B               	addwfc	??___flge+2,w,c
  4985  002800  6E03               	movwf	___flge@ff1+2,c
  4986  002802  0E80               	movlw	128
  4987  002804  200C               	addwfc	??___flge+3,w,c
  4988  002806  6E04               	movwf	___flge@ff1+3,c
  4989  002808                     l3138:
  4990  002808  AE08               	btfss	___flge@ff2+3,7,c
  4991  00280A  D01D               	goto	l489
  4992  00280C  C005  F009         	movff	___flge@ff2,??___flge
  4993  002810  C006  F00A         	movff	___flge@ff2+1,??___flge+1
  4994  002814  C007  F00B         	movff	___flge@ff2+2,??___flge+2
  4995  002818  C008  F00C         	movff	___flge@ff2+3,??___flge+3
  4996  00281C  1E09               	comf	??___flge,f,c
  4997  00281E  1E0A               	comf	??___flge+1,f,c
  4998  002820  1E0B               	comf	??___flge+2,f,c
  4999  002822  1E0C               	comf	??___flge+3,f,c
  5000  002824  2A09               	incf	??___flge,f,c
  5001  002826  0E00               	movlw	0
  5002  002828  220A               	addwfc	??___flge+1,f,c
  5003  00282A  220B               	addwfc	??___flge+2,f,c
  5004  00282C  220C               	addwfc	??___flge+3,f,c
  5005  00282E  0E00               	movlw	0
  5006  002830  2409               	addwf	??___flge,w,c
  5007  002832  6E05               	movwf	___flge@ff2,c
  5008  002834  0E00               	movlw	0
  5009  002836  200A               	addwfc	??___flge+1,w,c
  5010  002838  6E06               	movwf	___flge@ff2+1,c
  5011  00283A  0E00               	movlw	0
  5012  00283C  200B               	addwfc	??___flge+2,w,c
  5013  00283E  6E07               	movwf	___flge@ff2+2,c
  5014  002840  0E80               	movlw	128
  5015  002842  200C               	addwfc	??___flge+3,w,c
  5016  002844  6E08               	movwf	___flge@ff2+3,c
  5017  002846                     l489:
  5018  002846  0E00               	movlw	0
  5019  002848  1A01               	xorwf	___flge@ff1,f,c
  5020  00284A  0E00               	movlw	0
  5021  00284C  1A02               	xorwf	___flge@ff1+1,f,c
  5022  00284E  0E00               	movlw	0
  5023  002850  1A03               	xorwf	___flge@ff1+2,f,c
  5024  002852  0E80               	movlw	128
  5025  002854  1A04               	xorwf	___flge@ff1+3,f,c
  5026  002856  0E00               	movlw	0
  5027  002858  1A05               	xorwf	___flge@ff2,f,c
  5028  00285A  0E00               	movlw	0
  5029  00285C  1A06               	xorwf	___flge@ff2+1,f,c
  5030  00285E  0E00               	movlw	0
  5031  002860  1A07               	xorwf	___flge@ff2+2,f,c
  5032  002862  0E80               	movlw	128
  5033  002864  1A08               	xorwf	___flge@ff2+3,f,c
  5034  002866  5005               	movf	___flge@ff2,w,c
  5035  002868  5C01               	subwf	___flge@ff1,w,c
  5036  00286A  5006               	movf	___flge@ff2+1,w,c
  5037  00286C  5802               	subwfb	___flge@ff1+1,w,c
  5038  00286E  5007               	movf	___flge@ff2+2,w,c
  5039  002870  5803               	subwfb	___flge@ff1+2,w,c
  5040  002872  5008               	movf	___flge@ff2+3,w,c
  5041  002874  5804               	subwfb	___flge@ff1+3,w,c
  5042  002876  B0D8               	btfsc	status,0,c
  5043  002878  D002               	goto	l3144
  5044  00287A  90D8               	bcf	status,0,c
  5045  00287C  0012               	return	
  5046  00287E                     l3144:
  5047  00287E  80D8               	bsf	status,0,c
  5048  002880  0012               	return	
  5049  002882                     __end_of___flge:
  5050                           	opt stack 0
  5051                           tblptru	equ	0xFF8
  5052                           tblptrh	equ	0xFF7
  5053                           tblptrl	equ	0xFF6
  5054                           tablat	equ	0xFF5
  5055                           prodh	equ	0xFF4
  5056                           prodl	equ	0xFF3
  5057                           postinc0	equ	0xFEE
  5058                           wreg	equ	0xFE8
  5059                           indf2	equ	0xFDF
  5060                           postinc2	equ	0xFDE
  5061                           fsr2h	equ	0xFDA
  5062                           fsr2l	equ	0xFD9
  5063                           status	equ	0xFD8
  5064                           
  5065 ;; *************** function _read_adc *****************
  5066 ;; Defined at:
  5067 ;;		line 78 in file "tester.c"
  5068 ;; Parameters:    Size  Location     Type
  5069 ;;		None
  5070 ;; Auto vars:     Size  Location     Type
  5071 ;;  i               1   41[COMRAM] unsigned char 
  5072 ;; Return value:  Size  Location     Type
  5073 ;;                  1    wreg      void 
  5074 ;; Registers used:
  5075 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5076 ;; Tracked objects:
  5077 ;;		On entry : 0/0
  5078 ;;		On exit  : 0/0
  5079 ;;		Unchanged: 0/0
  5080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5081 ;;      Params:         0       0       0       0       0       0       0       0       0
  5082 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5083 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5084 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5085 ;;Total ram usage:        3 bytes
  5086 ;; Hardware stack levels used:    1
  5087 ;; Hardware stack levels required when called:    2
  5088 ;; This function calls:
  5089 ;;		___awdiv
  5090 ;;		___fldiv
  5091 ;;		___flmul
  5092 ;;		___wmul
  5093 ;;		___xxtofl
  5094 ;;		_delay_ms
  5095 ;; This function is called by:
  5096 ;;		_main
  5097 ;;		_ricarica
  5098 ;; This function uses a non-reentrant model
  5099 ;;
  5100                           
  5101                           	psect	text16
  5102  0020B6                     __ptext16:
  5103                           	opt stack 0
  5104  0020B6                     _read_adc:
  5105                           	opt stack 27
  5106                           
  5107                           ;tester.c: 79: for (char i = 0; i < 3; i++) {
  5108                           
  5109                           ;incstack = 0
  5110  0020B6  0E00               	movlw	0
  5111  0020B8  6E2A               	movwf	read_adc@i,c
  5112  0020BA                     l3352:
  5113  0020BA  0E02               	movlw	2
  5114  0020BC  642A               	cpfsgt	read_adc@i,c
  5115  0020BE  D001               	goto	l3356
  5116  0020C0  D044               	goto	l3370
  5117  0020C2                     l3356:
  5118                           
  5119                           ;tester.c: 80: ADCON0 = combinazioni[i];
  5120  0020C2  502A               	movf	read_adc@i,w,c
  5121  0020C4  0D01               	mullw	1
  5122  0020C6  0E93               	movlw	low _combinazioni
  5123  0020C8  24F3               	addwf	prodl,w,c
  5124  0020CA  6ED9               	movwf	fsr2l,c
  5125  0020CC  0E00               	movlw	high _combinazioni
  5126  0020CE  20F4               	addwfc	prodh,w,c
  5127  0020D0  6EDA               	movwf	fsr2h,c
  5128  0020D2  50DF               	movf	indf2,w,c
  5129  0020D4  6EC2               	movwf	4034,c	;volatile
  5130                           
  5131                           ;tester.c: 81: ADCON0bits.ADON = 1;
  5132  0020D6  80C2               	bsf	4034,0,c	;volatile
  5133                           
  5134                           ;tester.c: 82: ADCON0bits.GO = 1;
  5135  0020D8  82C2               	bsf	4034,1,c	;volatile
  5136  0020DA                     l170:
  5137  0020DA  B2C2               	btfsc	4034,1,c	;volatile
  5138  0020DC  D7FE               	goto	l170
  5139                           
  5140                           ;tester.c: 84: lettura [i] = ADRESH;
  5141  0020DE  50C4               	movf	4036,w,c	;volatile
  5142  0020E0  6E28               	movwf	??_read_adc& (0+255),c
  5143  0020E2  6A29               	clrf	(??_read_adc+1)& (0+255),c
  5144  0020E4  502A               	movf	read_adc@i,w,c
  5145  0020E6  0D02               	mullw	2
  5146  0020E8  0E5D               	movlw	low _lettura
  5147  0020EA  24F3               	addwf	prodl,w,c
  5148  0020EC  6ED9               	movwf	fsr2l,c
  5149  0020EE  0E00               	movlw	high _lettura
  5150  0020F0  20F4               	addwfc	prodh,w,c
  5151  0020F2  6EDA               	movwf	fsr2h,c
  5152  0020F4  C028  FFDE         	movff	??_read_adc,postinc2
  5153  0020F8  C029  FFDD         	movff	??_read_adc+1,postdec2
  5154                           
  5155                           ;tester.c: 85: lettura [i] = ((lettura[i] << 8) | ADRESL);
  5156  0020FC  502A               	movf	read_adc@i,w,c
  5157  0020FE  0D02               	mullw	2
  5158  002100  0E5D               	movlw	low _lettura
  5159  002102  24F3               	addwf	prodl,w,c
  5160  002104  6ED9               	movwf	fsr2l,c
  5161  002106  0E00               	movlw	high _lettura
  5162  002108  20F4               	addwfc	prodh,w,c
  5163  00210A  6EDA               	movwf	fsr2h,c
  5164  00210C  CFDE F028          	movff	postinc2,??_read_adc
  5165  002110  CFDD F029          	movff	postdec2,??_read_adc+1
  5166  002114  C028  F029         	movff	??_read_adc,??_read_adc+1
  5167  002118  6A28               	clrf	??_read_adc,c
  5168  00211A  50C3               	movf	4035,w,c	;volatile
  5169  00211C  1228               	iorwf	??_read_adc,f,c
  5170  00211E  0E00               	movlw	0
  5171  002120  1229               	iorwf	??_read_adc+1,f,c
  5172  002122  502A               	movf	read_adc@i,w,c
  5173  002124  0D02               	mullw	2
  5174  002126  0E5D               	movlw	low _lettura
  5175  002128  24F3               	addwf	prodl,w,c
  5176  00212A  6ED9               	movwf	fsr2l,c
  5177  00212C  0E00               	movlw	high _lettura
  5178  00212E  20F4               	addwfc	prodh,w,c
  5179  002130  6EDA               	movwf	fsr2h,c
  5180  002132  C028  FFDE         	movff	??_read_adc,postinc2
  5181  002136  C029  FFDD         	movff	??_read_adc+1,postdec2
  5182                           
  5183                           ;tester.c: 86: delay_ms(5);
  5184  00213A  0E00               	movlw	0
  5185  00213C  6E08               	movwf	delay_ms@value_ms+1,c
  5186  00213E  0E05               	movlw	5
  5187  002140  6E07               	movwf	delay_ms@value_ms,c
  5188  002142  EC5C  F017         	call	_delay_ms	;wreg free
  5189  002146  2A2A               	incf	read_adc@i,f,c
  5190  002148  D7B8               	goto	l3352
  5191  00214A                     l3370:
  5192                           
  5193                           ;tester.c: 87: }
  5194                           ;tester.c: 88: current = ((lettura[1] - lettura[0])*5) / 1024;
  5195  00214A  0E04               	movlw	4
  5196  00214C  6E0A               	movwf	___awdiv@divisor+1,c
  5197  00214E  0E00               	movlw	0
  5198  002150  6E09               	movwf	___awdiv@divisor,c
  5199  002152  C05D  F028         	movff	_lettura,??_read_adc
  5200  002156  C05E  F029         	movff	_lettura+1,??_read_adc+1
  5201  00215A  1E28               	comf	??_read_adc,f,c
  5202  00215C  1E29               	comf	??_read_adc+1,f,c
  5203  00215E  4A28               	infsnz	??_read_adc,f,c
  5204  002160  2A29               	incf	??_read_adc+1,f,c
  5205  002162  505F               	movf	_lettura+2,w,c
  5206  002164  2428               	addwf	??_read_adc,w,c
  5207  002166  6E01               	movwf	___wmul@multiplier,c
  5208  002168  5060               	movf	_lettura+3,w,c
  5209  00216A  2029               	addwfc	??_read_adc+1,w,c
  5210  00216C  6E02               	movwf	___wmul@multiplier+1,c
  5211  00216E  0E00               	movlw	0
  5212  002170  6E04               	movwf	___wmul@multiplicand+1,c
  5213  002172  0E05               	movlw	5
  5214  002174  6E03               	movwf	___wmul@multiplicand,c
  5215  002176  ECE0  F017         	call	___wmul	;wreg free
  5216  00217A  C001  F007         	movff	?___wmul,___awdiv@dividend
  5217  00217E  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
  5218  002182  EC98  F015         	call	___awdiv	;wreg free
  5219  002186  C007  F00F         	movff	?___awdiv,___xxtofl@val
  5220  00218A  C008  F010         	movff	?___awdiv+1,___xxtofl@val+1
  5221  00218E  0E00               	movlw	0
  5222  002190  BE10               	btfsc	___xxtofl@val+1,7,c
  5223  002192  0EFF               	movlw	-1
  5224  002194  6E11               	movwf	___xxtofl@val+2,c
  5225  002196  6E12               	movwf	___xxtofl@val+3,c
  5226  002198  0E01               	movlw	1
  5227  00219A  ECDC  F011         	call	___xxtofl
  5228  00219E  C00F  F07F         	movff	?___xxtofl,_current
  5229  0021A2  C010  F080         	movff	?___xxtofl+1,_current+1
  5230  0021A6  C011  F081         	movff	?___xxtofl+2,_current+2
  5231  0021AA  C012  F082         	movff	?___xxtofl+3,_current+3
  5232                           
  5233                           ;tester.c: 89: current = current/0.200;
  5234  0021AE  C07F  F001         	movff	_current,___fldiv@b
  5235  0021B2  C080  F002         	movff	_current+1,___fldiv@b+1
  5236  0021B6  C081  F003         	movff	_current+2,___fldiv@b+2
  5237  0021BA  C082  F004         	movff	_current+3,___fldiv@b+3
  5238  0021BE  0ECD               	movlw	205
  5239  0021C0  6E05               	movwf	___fldiv@a,c
  5240  0021C2  0ECC               	movlw	204
  5241  0021C4  6E06               	movwf	___fldiv@a+1,c
  5242  0021C6  0E4C               	movlw	76
  5243  0021C8  6E07               	movwf	___fldiv@a+2,c
  5244  0021CA  0E3E               	movlw	62
  5245  0021CC  6E08               	movwf	___fldiv@a+3,c
  5246  0021CE  ECC4  F00D         	call	___fldiv	;wreg free
  5247  0021D2  C001  F07F         	movff	?___fldiv,_current
  5248  0021D6  C002  F080         	movff	?___fldiv+1,_current+1
  5249  0021DA  C003  F081         	movff	?___fldiv+2,_current+2
  5250  0021DE  C004  F082         	movff	?___fldiv+3,_current+3
  5251                           
  5252                           ;tester.c: 90: voltage = (lettura[2]*5) / 1024;
  5253  0021E2  0E04               	movlw	4
  5254  0021E4  6E0A               	movwf	___awdiv@divisor+1,c
  5255  0021E6  0E00               	movlw	0
  5256  0021E8  6E09               	movwf	___awdiv@divisor,c
  5257  0021EA  C061  F001         	movff	_lettura+4,___wmul@multiplier
  5258  0021EE  C062  F002         	movff	_lettura+5,___wmul@multiplier+1
  5259  0021F2  0E00               	movlw	0
  5260  0021F4  6E04               	movwf	___wmul@multiplicand+1,c
  5261  0021F6  0E05               	movlw	5
  5262  0021F8  6E03               	movwf	___wmul@multiplicand,c
  5263  0021FA  ECE0  F017         	call	___wmul	;wreg free
  5264  0021FE  C001  F007         	movff	?___wmul,___awdiv@dividend
  5265  002202  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
  5266  002206  EC98  F015         	call	___awdiv	;wreg free
  5267  00220A  C007  F00F         	movff	?___awdiv,___xxtofl@val
  5268  00220E  C008  F010         	movff	?___awdiv+1,___xxtofl@val+1
  5269  002212  0E00               	movlw	0
  5270  002214  BE10               	btfsc	___xxtofl@val+1,7,c
  5271  002216  0EFF               	movlw	-1
  5272  002218  6E11               	movwf	___xxtofl@val+2,c
  5273  00221A  6E12               	movwf	___xxtofl@val+3,c
  5274  00221C  0E01               	movlw	1
  5275  00221E  ECDC  F011         	call	___xxtofl
  5276  002222  C00F  F083         	movff	?___xxtofl,_voltage
  5277  002226  C010  F084         	movff	?___xxtofl+1,_voltage+1
  5278  00222A  C011  F085         	movff	?___xxtofl+2,_voltage+2
  5279  00222E  C012  F086         	movff	?___xxtofl+3,_voltage+3
  5280                           
  5281                           ;tester.c: 91: voltage = voltage * rapporto;
  5282  002232  C083  F00F         	movff	_voltage,___flmul@b
  5283  002236  C084  F010         	movff	_voltage+1,___flmul@b+1
  5284  00223A  C085  F011         	movff	_voltage+2,___flmul@b+2
  5285  00223E  C086  F012         	movff	_voltage+3,___flmul@b+3
  5286  002242  C08F  F013         	movff	_rapporto,___flmul@a
  5287  002246  C090  F014         	movff	_rapporto+1,___flmul@a+1
  5288  00224A  C091  F015         	movff	_rapporto+2,___flmul@a+2
  5289  00224E  C092  F016         	movff	_rapporto+3,___flmul@a+3
  5290  002252  EC7E  F00A         	call	___flmul	;wreg free
  5291  002256  C00F  F083         	movff	?___flmul,_voltage
  5292  00225A  C010  F084         	movff	?___flmul+1,_voltage+1
  5293  00225E  C011  F085         	movff	?___flmul+2,_voltage+2
  5294  002262  C012  F086         	movff	?___flmul+3,_voltage+3
  5295  002266  0012               	return		;funcret
  5296  002268                     __end_of_read_adc:
  5297                           	opt stack 0
  5298                           tblptru	equ	0xFF8
  5299                           tblptrh	equ	0xFF7
  5300                           tblptrl	equ	0xFF6
  5301                           tablat	equ	0xFF5
  5302                           prodh	equ	0xFF4
  5303                           prodl	equ	0xFF3
  5304                           postinc0	equ	0xFEE
  5305                           wreg	equ	0xFE8
  5306                           indf2	equ	0xFDF
  5307                           postinc2	equ	0xFDE
  5308                           postdec2	equ	0xFDD
  5309                           fsr2h	equ	0xFDA
  5310                           fsr2l	equ	0xFD9
  5311                           status	equ	0xFD8
  5312                           
  5313 ;; *************** function ___xxtofl *****************
  5314 ;; Defined at:
  5315 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\xxtofl.c"
  5316 ;; Parameters:    Size  Location     Type
  5317 ;;  sign            1    wreg     unsigned char 
  5318 ;;  val             4   14[COMRAM] long 
  5319 ;; Auto vars:     Size  Location     Type
  5320 ;;  sign            1   22[COMRAM] unsigned char 
  5321 ;;  arg             4   24[COMRAM] unsigned long 
  5322 ;;  exp             1   23[COMRAM] unsigned char 
  5323 ;; Return value:  Size  Location     Type
  5324 ;;                  4   14[COMRAM] unsigned char 
  5325 ;; Registers used:
  5326 ;;		wreg, status,2, status,0
  5327 ;; Tracked objects:
  5328 ;;		On entry : 0/0
  5329 ;;		On exit  : 0/0
  5330 ;;		Unchanged: 0/0
  5331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5332 ;;      Params:         4       0       0       0       0       0       0       0       0
  5333 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5334 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5335 ;;      Totals:        14       0       0       0       0       0       0       0       0
  5336 ;;Total ram usage:       14 bytes
  5337 ;; Hardware stack levels used:    1
  5338 ;; This function calls:
  5339 ;;		Nothing
  5340 ;; This function is called by:
  5341 ;;		_read_adc
  5342 ;;		_sprintf
  5343 ;; This function uses a non-reentrant model
  5344 ;;
  5345                           
  5346                           	psect	text17
  5347  0023B8                     __ptext17:
  5348                           	opt stack 0
  5349  0023B8                     ___xxtofl:
  5350                           	opt stack 28
  5351                           
  5352                           ;incstack = 0
  5353                           ;___xxtofl@sign stored from wreg
  5354  0023B8  6E17               	movwf	___xxtofl@sign,c
  5355  0023BA  5017               	movf	___xxtofl@sign,w,c
  5356  0023BC  A4D8               	btfss	status,2,c
  5357  0023BE  AE12               	btfss	___xxtofl@val+3,7,c
  5358  0023C0  D01A               	goto	l874
  5359  0023C2  C00F  F013         	movff	___xxtofl@val,??___xxtofl
  5360  0023C6  C010  F014         	movff	___xxtofl@val+1,??___xxtofl+1
  5361  0023CA  C011  F015         	movff	___xxtofl@val+2,??___xxtofl+2
  5362  0023CE  C012  F016         	movff	___xxtofl@val+3,??___xxtofl+3
  5363  0023D2  1E13               	comf	??___xxtofl,f,c
  5364  0023D4  1E14               	comf	??___xxtofl+1,f,c
  5365  0023D6  1E15               	comf	??___xxtofl+2,f,c
  5366  0023D8  1E16               	comf	??___xxtofl+3,f,c
  5367  0023DA  2A13               	incf	??___xxtofl,f,c
  5368  0023DC  0E00               	movlw	0
  5369  0023DE  2214               	addwfc	??___xxtofl+1,f,c
  5370  0023E0  2215               	addwfc	??___xxtofl+2,f,c
  5371  0023E2  2216               	addwfc	??___xxtofl+3,f,c
  5372  0023E4  C013  F019         	movff	??___xxtofl,___xxtofl@arg
  5373  0023E8  C014  F01A         	movff	??___xxtofl+1,___xxtofl@arg+1
  5374  0023EC  C015  F01B         	movff	??___xxtofl+2,___xxtofl@arg+2
  5375  0023F0  C016  F01C         	movff	??___xxtofl+3,___xxtofl@arg+3
  5376  0023F4  D008               	goto	l3244
  5377  0023F6                     l874:
  5378  0023F6  C00F  F019         	movff	___xxtofl@val,___xxtofl@arg
  5379  0023FA  C010  F01A         	movff	___xxtofl@val+1,___xxtofl@arg+1
  5380  0023FE  C011  F01B         	movff	___xxtofl@val+2,___xxtofl@arg+2
  5381  002402  C012  F01C         	movff	___xxtofl@val+3,___xxtofl@arg+3
  5382  002406                     l3244:
  5383  002406  500F               	movf	___xxtofl@val,w,c
  5384  002408  1010               	iorwf	___xxtofl@val+1,w,c
  5385  00240A  1011               	iorwf	___xxtofl@val+2,w,c
  5386  00240C  1012               	iorwf	___xxtofl@val+3,w,c
  5387  00240E  A4D8               	btfss	status,2,c
  5388  002410  D009               	goto	l3250
  5389  002412  0E00               	movlw	0
  5390  002414  6E0F               	movwf	?___xxtofl,c
  5391  002416  0E00               	movlw	0
  5392  002418  6E10               	movwf	?___xxtofl+1,c
  5393  00241A  0E00               	movlw	0
  5394  00241C  6E11               	movwf	?___xxtofl+2,c
  5395  00241E  0E00               	movlw	0
  5396  002420  6E12               	movwf	?___xxtofl+3,c
  5397  002422  0012               	return	
  5398  002424                     l3250:
  5399  002424  0E96               	movlw	150
  5400  002426  6E18               	movwf	___xxtofl@exp,c
  5401  002428  D006               	goto	l3254
  5402  00242A                     l3252:
  5403  00242A  2A18               	incf	___xxtofl@exp,f,c
  5404  00242C  90D8               	bcf	status,0,c
  5405  00242E  321C               	rrcf	___xxtofl@arg+3,f,c
  5406  002430  321B               	rrcf	___xxtofl@arg+2,f,c
  5407  002432  321A               	rrcf	___xxtofl@arg+1,f,c
  5408  002434  3219               	rrcf	___xxtofl@arg,f,c
  5409  002436                     l3254:
  5410  002436  0E00               	movlw	0
  5411  002438  1419               	andwf	___xxtofl@arg,w,c
  5412  00243A  6E13               	movwf	??___xxtofl& (0+255),c
  5413  00243C  0E00               	movlw	0
  5414  00243E  141A               	andwf	___xxtofl@arg+1,w,c
  5415  002440  6E14               	movwf	(??___xxtofl+1)& (0+255),c
  5416  002442  0E00               	movlw	0
  5417  002444  141B               	andwf	___xxtofl@arg+2,w,c
  5418  002446  6E15               	movwf	(??___xxtofl+2)& (0+255),c
  5419  002448  0EFE               	movlw	254
  5420  00244A  141C               	andwf	___xxtofl@arg+3,w,c
  5421  00244C  6E16               	movwf	(??___xxtofl+3)& (0+255),c
  5422  00244E  5013               	movf	??___xxtofl,w,c
  5423  002450  1014               	iorwf	??___xxtofl+1,w,c
  5424  002452  1015               	iorwf	??___xxtofl+2,w,c
  5425  002454  1016               	iorwf	??___xxtofl+3,w,c
  5426  002456  B4D8               	btfsc	status,2,c
  5427  002458  D00D               	goto	l881
  5428  00245A  D7E7               	goto	l3252
  5429  00245C                     l3256:
  5430  00245C  2A18               	incf	___xxtofl@exp,f,c
  5431  00245E  0E01               	movlw	1
  5432  002460  2619               	addwf	___xxtofl@arg,f,c
  5433  002462  0E00               	movlw	0
  5434  002464  221A               	addwfc	___xxtofl@arg+1,f,c
  5435  002466  221B               	addwfc	___xxtofl@arg+2,f,c
  5436  002468  221C               	addwfc	___xxtofl@arg+3,f,c
  5437  00246A  90D8               	bcf	status,0,c
  5438  00246C  321C               	rrcf	___xxtofl@arg+3,f,c
  5439  00246E  321B               	rrcf	___xxtofl@arg+2,f,c
  5440  002470  321A               	rrcf	___xxtofl@arg+1,f,c
  5441  002472  3219               	rrcf	___xxtofl@arg,f,c
  5442  002474                     l881:
  5443  002474  0E00               	movlw	0
  5444  002476  1419               	andwf	___xxtofl@arg,w,c
  5445  002478  6E13               	movwf	??___xxtofl& (0+255),c
  5446  00247A  0E00               	movlw	0
  5447  00247C  141A               	andwf	___xxtofl@arg+1,w,c
  5448  00247E  6E14               	movwf	(??___xxtofl+1)& (0+255),c
  5449  002480  0E00               	movlw	0
  5450  002482  141B               	andwf	___xxtofl@arg+2,w,c
  5451  002484  6E15               	movwf	(??___xxtofl+2)& (0+255),c
  5452  002486  0EFF               	movlw	255
  5453  002488  141C               	andwf	___xxtofl@arg+3,w,c
  5454  00248A  6E16               	movwf	(??___xxtofl+3)& (0+255),c
  5455  00248C  5013               	movf	??___xxtofl,w,c
  5456  00248E  1014               	iorwf	??___xxtofl+1,w,c
  5457  002490  1015               	iorwf	??___xxtofl+2,w,c
  5458  002492  1016               	iorwf	??___xxtofl+3,w,c
  5459  002494  B4D8               	btfsc	status,2,c
  5460  002496  D007               	goto	l3264
  5461  002498  D7E1               	goto	l3256
  5462  00249A                     l3262:
  5463  00249A  0618               	decf	___xxtofl@exp,f,c
  5464  00249C  90D8               	bcf	status,0,c
  5465  00249E  3619               	rlcf	___xxtofl@arg,f,c
  5466  0024A0  361A               	rlcf	___xxtofl@arg+1,f,c
  5467  0024A2  361B               	rlcf	___xxtofl@arg+2,f,c
  5468  0024A4  361C               	rlcf	___xxtofl@arg+3,f,c
  5469  0024A6                     l3264:
  5470  0024A6  BE1B               	btfsc	___xxtofl@arg+2,7,c
  5471  0024A8  D003               	goto	l888
  5472  0024AA  0E02               	movlw	2
  5473  0024AC  6018               	cpfslt	___xxtofl@exp,c
  5474  0024AE  D7F5               	goto	l3262
  5475  0024B0                     l888:
  5476  0024B0  B018               	btfsc	___xxtofl@exp,0,c
  5477  0024B2  D008               	goto	l889
  5478  0024B4  0EFF               	movlw	255
  5479  0024B6  1619               	andwf	___xxtofl@arg,f,c
  5480  0024B8  0EFF               	movlw	255
  5481  0024BA  161A               	andwf	___xxtofl@arg+1,f,c
  5482  0024BC  0E7F               	movlw	127
  5483  0024BE  161B               	andwf	___xxtofl@arg+2,f,c
  5484  0024C0  0EFF               	movlw	255
  5485  0024C2  161C               	andwf	___xxtofl@arg+3,f,c
  5486  0024C4                     l889:
  5487  0024C4  90D8               	bcf	status,0,c
  5488  0024C6  3218               	rrcf	___xxtofl@exp,f,c
  5489  0024C8  C018  F013         	movff	___xxtofl@exp,??___xxtofl
  5490  0024CC  6A14               	clrf	(??___xxtofl+1)& (0+255),c
  5491  0024CE  6A15               	clrf	(??___xxtofl+2)& (0+255),c
  5492  0024D0  6A16               	clrf	(??___xxtofl+3)& (0+255),c
  5493  0024D2  C013  F016         	movff	??___xxtofl,??___xxtofl+3
  5494  0024D6  6A15               	clrf	??___xxtofl+2,c
  5495  0024D8  6A14               	clrf	??___xxtofl+1,c
  5496  0024DA  6A13               	clrf	??___xxtofl,c
  5497  0024DC  5013               	movf	??___xxtofl,w,c
  5498  0024DE  1219               	iorwf	___xxtofl@arg,f,c
  5499  0024E0  5014               	movf	??___xxtofl+1,w,c
  5500  0024E2  121A               	iorwf	___xxtofl@arg+1,f,c
  5501  0024E4  5015               	movf	??___xxtofl+2,w,c
  5502  0024E6  121B               	iorwf	___xxtofl@arg+2,f,c
  5503  0024E8  5016               	movf	??___xxtofl+3,w,c
  5504  0024EA  121C               	iorwf	___xxtofl@arg+3,f,c
  5505  0024EC  5017               	movf	___xxtofl@sign,w,c
  5506  0024EE  A4D8               	btfss	status,2,c
  5507  0024F0  AE12               	btfss	___xxtofl@val+3,7,c
  5508  0024F2  D001               	goto	l3276
  5509  0024F4  8E1C               	bsf	___xxtofl@arg+3,7,c
  5510  0024F6                     l3276:
  5511  0024F6  C019  F00F         	movff	___xxtofl@arg,?___xxtofl
  5512  0024FA  C01A  F010         	movff	___xxtofl@arg+1,?___xxtofl+1
  5513  0024FE  C01B  F011         	movff	___xxtofl@arg+2,?___xxtofl+2
  5514  002502  C01C  F012         	movff	___xxtofl@arg+3,?___xxtofl+3
  5515  002506  0012               	return	
  5516  002508                     __end_of___xxtofl:
  5517                           	opt stack 0
  5518                           tblptru	equ	0xFF8
  5519                           tblptrh	equ	0xFF7
  5520                           tblptrl	equ	0xFF6
  5521                           tablat	equ	0xFF5
  5522                           prodh	equ	0xFF4
  5523                           prodl	equ	0xFF3
  5524                           postinc0	equ	0xFEE
  5525                           wreg	equ	0xFE8
  5526                           indf2	equ	0xFDF
  5527                           postinc2	equ	0xFDE
  5528                           postdec2	equ	0xFDD
  5529                           fsr2h	equ	0xFDA
  5530                           fsr2l	equ	0xFD9
  5531                           status	equ	0xFD8
  5532                           
  5533 ;; *************** function ___flmul *****************
  5534 ;; Defined at:
  5535 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\sprcmul.c"
  5536 ;; Parameters:    Size  Location     Type
  5537 ;;  b               4   14[COMRAM] unsigned char 
  5538 ;;  a               4   18[COMRAM] unsigned char 
  5539 ;; Auto vars:     Size  Location     Type
  5540 ;;  prod            4   33[COMRAM] struct .
  5541 ;;  grs             4   27[COMRAM] unsigned long 
  5542 ;;  temp            2   37[COMRAM] struct .
  5543 ;;  bexp            1   32[COMRAM] unsigned char 
  5544 ;;  aexp            1   31[COMRAM] unsigned char 
  5545 ;;  sign            1   26[COMRAM] unsigned char 
  5546 ;; Return value:  Size  Location     Type
  5547 ;;                  4   14[COMRAM] unsigned char 
  5548 ;; Registers used:
  5549 ;;		wreg, status,2, status,0, prodl, prodh
  5550 ;; Tracked objects:
  5551 ;;		On entry : 0/0
  5552 ;;		On exit  : 0/0
  5553 ;;		Unchanged: 0/0
  5554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5555 ;;      Params:         8       0       0       0       0       0       0       0       0
  5556 ;;      Locals:        13       0       0       0       0       0       0       0       0
  5557 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5558 ;;      Totals:        25       0       0       0       0       0       0       0       0
  5559 ;;Total ram usage:       25 bytes
  5560 ;; Hardware stack levels used:    1
  5561 ;; This function calls:
  5562 ;;		Nothing
  5563 ;; This function is called by:
  5564 ;;		_read_adc
  5565 ;;		_fround
  5566 ;;		_scale
  5567 ;;		_sprintf
  5568 ;; This function uses a non-reentrant model
  5569 ;;
  5570                           
  5571                           	psect	text18
  5572  0014FC                     __ptext18:
  5573                           	opt stack 0
  5574  0014FC                     ___flmul:
  5575                           	opt stack 27
  5576                           
  5577                           ;incstack = 0
  5578  0014FC  5012               	movf	___flmul@b+3,w,c
  5579  0014FE  0B80               	andlw	128
  5580  001500  6E1B               	movwf	___flmul@sign,c
  5581  001502  5012               	movf	___flmul@b+3,w,c
  5582  001504  2412               	addwf	___flmul@b+3,w,c
  5583  001506  6E21               	movwf	___flmul@bexp,c
  5584  001508  BE11               	btfsc	___flmul@b+2,7,c
  5585  00150A  8021               	bsf	___flmul@bexp,0,c
  5586  00150C  5021               	movf	___flmul@bexp,w,c
  5587  00150E  B4D8               	btfsc	status,2,c
  5588  001510  D00D               	goto	l2576
  5589  001512  2821               	incf	___flmul@bexp,w,c
  5590  001514  A4D8               	btfss	status,2,c
  5591  001516  D008               	goto	l2574
  5592  001518  0E00               	movlw	0
  5593  00151A  6E0F               	movwf	___flmul@b,c
  5594  00151C  0E00               	movlw	0
  5595  00151E  6E10               	movwf	___flmul@b+1,c
  5596  001520  0E00               	movlw	0
  5597  001522  6E11               	movwf	___flmul@b+2,c
  5598  001524  0E00               	movlw	0
  5599  001526  6E12               	movwf	___flmul@b+3,c
  5600  001528                     l2574:
  5601  001528  8E11               	bsf	___flmul@b+2,7,c
  5602  00152A  D008               	goto	l2578
  5603  00152C                     l2576:
  5604  00152C  0E00               	movlw	0
  5605  00152E  6E0F               	movwf	___flmul@b,c
  5606  001530  0E00               	movlw	0
  5607  001532  6E10               	movwf	___flmul@b+1,c
  5608  001534  0E00               	movlw	0
  5609  001536  6E11               	movwf	___flmul@b+2,c
  5610  001538  0E00               	movlw	0
  5611  00153A  6E12               	movwf	___flmul@b+3,c
  5612  00153C                     l2578:
  5613  00153C  5016               	movf	___flmul@a+3,w,c
  5614  00153E  0B80               	andlw	128
  5615  001540  1A1B               	xorwf	___flmul@sign,f,c
  5616  001542  5016               	movf	___flmul@a+3,w,c
  5617  001544  2416               	addwf	___flmul@a+3,w,c
  5618  001546  6E20               	movwf	___flmul@aexp,c
  5619  001548  BE15               	btfsc	___flmul@a+2,7,c
  5620  00154A  8020               	bsf	___flmul@aexp,0,c
  5621  00154C  5020               	movf	___flmul@aexp,w,c
  5622  00154E  B4D8               	btfsc	status,2,c
  5623  001550  D00D               	goto	l2594
  5624  001552  2820               	incf	___flmul@aexp,w,c
  5625  001554  A4D8               	btfss	status,2,c
  5626  001556  D008               	goto	l2592
  5627  001558  0E00               	movlw	0
  5628  00155A  6E13               	movwf	___flmul@a,c
  5629  00155C  0E00               	movlw	0
  5630  00155E  6E14               	movwf	___flmul@a+1,c
  5631  001560  0E00               	movlw	0
  5632  001562  6E15               	movwf	___flmul@a+2,c
  5633  001564  0E00               	movlw	0
  5634  001566  6E16               	movwf	___flmul@a+3,c
  5635  001568                     l2592:
  5636  001568  8E15               	bsf	___flmul@a+2,7,c
  5637  00156A  D008               	goto	l852
  5638  00156C                     l2594:
  5639  00156C  0E00               	movlw	0
  5640  00156E  6E13               	movwf	___flmul@a,c
  5641  001570  0E00               	movlw	0
  5642  001572  6E14               	movwf	___flmul@a+1,c
  5643  001574  0E00               	movlw	0
  5644  001576  6E15               	movwf	___flmul@a+2,c
  5645  001578  0E00               	movlw	0
  5646  00157A  6E16               	movwf	___flmul@a+3,c
  5647  00157C                     l852:
  5648  00157C  5020               	movf	___flmul@aexp,w,c
  5649  00157E  B4D8               	btfsc	status,2,c
  5650  001580  D003               	goto	l2598
  5651  001582  5021               	movf	___flmul@bexp,w,c
  5652  001584  A4D8               	btfss	status,2,c
  5653  001586  D009               	goto	l2602
  5654  001588                     l2598:
  5655  001588  0E00               	movlw	0
  5656  00158A  6E0F               	movwf	?___flmul,c
  5657  00158C  0E00               	movlw	0
  5658  00158E  6E10               	movwf	?___flmul+1,c
  5659  001590  0E00               	movlw	0
  5660  001592  6E11               	movwf	?___flmul+2,c
  5661  001594  0E00               	movlw	0
  5662  001596  6E12               	movwf	?___flmul+3,c
  5663  001598  0012               	return	
  5664  00159A                     l2602:
  5665  00159A  5015               	movf	___flmul@a+2,w,c
  5666  00159C  020F               	mulwf	___flmul@b,c
  5667  00159E  CFF3 F026          	movff	prodl,___flmul@temp
  5668  0015A2  CFF4 F027          	movff	prodh,___flmul@temp+1
  5669  0015A6  5026               	movf	___flmul@temp,w,c
  5670  0015A8  6E1C               	movwf	___flmul@grs,c
  5671  0015AA  6A1D               	clrf	___flmul@grs+1,c
  5672  0015AC  6A1E               	clrf	___flmul@grs+2,c
  5673  0015AE  6A1F               	clrf	___flmul@grs+3,c
  5674  0015B0  5027               	movf	___flmul@temp+1,w,c
  5675  0015B2  6E22               	movwf	___flmul@prod,c
  5676  0015B4  6A23               	clrf	___flmul@prod+1,c
  5677  0015B6  6A24               	clrf	___flmul@prod+2,c
  5678  0015B8  6A25               	clrf	___flmul@prod+3,c
  5679  0015BA  5014               	movf	___flmul@a+1,w,c
  5680  0015BC  0210               	mulwf	___flmul@b+1,c
  5681  0015BE  CFF3 F026          	movff	prodl,___flmul@temp
  5682  0015C2  CFF4 F027          	movff	prodh,___flmul@temp+1
  5683  0015C6  5026               	movf	___flmul@temp,w,c
  5684  0015C8  261C               	addwf	___flmul@grs,f,c
  5685  0015CA  0E00               	movlw	0
  5686  0015CC  221D               	addwfc	___flmul@grs+1,f,c
  5687  0015CE  221E               	addwfc	___flmul@grs+2,f,c
  5688  0015D0  221F               	addwfc	___flmul@grs+3,f,c
  5689  0015D2  5027               	movf	___flmul@temp+1,w,c
  5690  0015D4  2622               	addwf	___flmul@prod,f,c
  5691  0015D6  0E00               	movlw	0
  5692  0015D8  2223               	addwfc	___flmul@prod+1,f,c
  5693  0015DA  2224               	addwfc	___flmul@prod+2,f,c
  5694  0015DC  2225               	addwfc	___flmul@prod+3,f,c
  5695  0015DE  5013               	movf	___flmul@a,w,c
  5696  0015E0  0211               	mulwf	___flmul@b+2,c
  5697  0015E2  CFF3 F026          	movff	prodl,___flmul@temp
  5698  0015E6  CFF4 F027          	movff	prodh,___flmul@temp+1
  5699  0015EA  5026               	movf	___flmul@temp,w,c
  5700  0015EC  261C               	addwf	___flmul@grs,f,c
  5701  0015EE  0E00               	movlw	0
  5702  0015F0  221D               	addwfc	___flmul@grs+1,f,c
  5703  0015F2  221E               	addwfc	___flmul@grs+2,f,c
  5704  0015F4  221F               	addwfc	___flmul@grs+3,f,c
  5705  0015F6  5027               	movf	___flmul@temp+1,w,c
  5706  0015F8  2622               	addwf	___flmul@prod,f,c
  5707  0015FA  0E00               	movlw	0
  5708  0015FC  2223               	addwfc	___flmul@prod+1,f,c
  5709  0015FE  2224               	addwfc	___flmul@prod+2,f,c
  5710  001600  2225               	addwfc	___flmul@prod+3,f,c
  5711  001602  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5712  001606  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5713  00160A  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5714  00160E  6A1C               	clrf	___flmul@grs,c
  5715  001610  5013               	movf	___flmul@a,w,c
  5716  001612  0210               	mulwf	___flmul@b+1,c
  5717  001614  CFF3 F026          	movff	prodl,___flmul@temp
  5718  001618  CFF4 F027          	movff	prodh,___flmul@temp+1
  5719  00161C  5026               	movf	___flmul@temp,w,c
  5720  00161E  261C               	addwf	___flmul@grs,f,c
  5721  001620  5027               	movf	___flmul@temp+1,w,c
  5722  001622  221D               	addwfc	___flmul@grs+1,f,c
  5723  001624  0E00               	movlw	0
  5724  001626  221E               	addwfc	___flmul@grs+2,f,c
  5725  001628  0E00               	movlw	0
  5726  00162A  221F               	addwfc	___flmul@grs+3,f,c
  5727  00162C  5014               	movf	___flmul@a+1,w,c
  5728  00162E  020F               	mulwf	___flmul@b,c
  5729  001630  CFF3 F026          	movff	prodl,___flmul@temp
  5730  001634  CFF4 F027          	movff	prodh,___flmul@temp+1
  5731  001638  5026               	movf	___flmul@temp,w,c
  5732  00163A  261C               	addwf	___flmul@grs,f,c
  5733  00163C  5027               	movf	___flmul@temp+1,w,c
  5734  00163E  221D               	addwfc	___flmul@grs+1,f,c
  5735  001640  0E00               	movlw	0
  5736  001642  221E               	addwfc	___flmul@grs+2,f,c
  5737  001644  0E00               	movlw	0
  5738  001646  221F               	addwfc	___flmul@grs+3,f,c
  5739  001648  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5740  00164C  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5741  001650  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5742  001654  6A1C               	clrf	___flmul@grs,c
  5743  001656  5013               	movf	___flmul@a,w,c
  5744  001658  020F               	mulwf	___flmul@b,c
  5745  00165A  CFF3 F026          	movff	prodl,___flmul@temp
  5746  00165E  CFF4 F027          	movff	prodh,___flmul@temp+1
  5747  001662  5026               	movf	___flmul@temp,w,c
  5748  001664  261C               	addwf	___flmul@grs,f,c
  5749  001666  5027               	movf	___flmul@temp+1,w,c
  5750  001668  221D               	addwfc	___flmul@grs+1,f,c
  5751  00166A  0E00               	movlw	0
  5752  00166C  221E               	addwfc	___flmul@grs+2,f,c
  5753  00166E  0E00               	movlw	0
  5754  001670  221F               	addwfc	___flmul@grs+3,f,c
  5755  001672  5015               	movf	___flmul@a+2,w,c
  5756  001674  0210               	mulwf	___flmul@b+1,c
  5757  001676  CFF3 F026          	movff	prodl,___flmul@temp
  5758  00167A  CFF4 F027          	movff	prodh,___flmul@temp+1
  5759  00167E  5026               	movf	___flmul@temp,w,c
  5760  001680  2622               	addwf	___flmul@prod,f,c
  5761  001682  5027               	movf	___flmul@temp+1,w,c
  5762  001684  2223               	addwfc	___flmul@prod+1,f,c
  5763  001686  0E00               	movlw	0
  5764  001688  2224               	addwfc	___flmul@prod+2,f,c
  5765  00168A  0E00               	movlw	0
  5766  00168C  2225               	addwfc	___flmul@prod+3,f,c
  5767  00168E  5014               	movf	___flmul@a+1,w,c
  5768  001690  0211               	mulwf	___flmul@b+2,c
  5769  001692  CFF3 F026          	movff	prodl,___flmul@temp
  5770  001696  CFF4 F027          	movff	prodh,___flmul@temp+1
  5771  00169A  5026               	movf	___flmul@temp,w,c
  5772  00169C  2622               	addwf	___flmul@prod,f,c
  5773  00169E  5027               	movf	___flmul@temp+1,w,c
  5774  0016A0  2223               	addwfc	___flmul@prod+1,f,c
  5775  0016A2  0E00               	movlw	0
  5776  0016A4  2224               	addwfc	___flmul@prod+2,f,c
  5777  0016A6  0E00               	movlw	0
  5778  0016A8  2225               	addwfc	___flmul@prod+3,f,c
  5779  0016AA  5015               	movf	___flmul@a+2,w,c
  5780  0016AC  0211               	mulwf	___flmul@b+2,c
  5781  0016AE  CFF3 F026          	movff	prodl,___flmul@temp
  5782  0016B2  CFF4 F027          	movff	prodh,___flmul@temp+1
  5783  0016B6  5026               	movf	___flmul@temp,w,c
  5784  0016B8  6E17               	movwf	??___flmul& (0+255),c
  5785  0016BA  5027               	movf	___flmul@temp+1,w,c
  5786  0016BC  6E18               	movwf	(??___flmul+1)& (0+255),c
  5787  0016BE  6A19               	clrf	(??___flmul+2)& (0+255),c
  5788  0016C0  6A1A               	clrf	(??___flmul+3)& (0+255),c
  5789  0016C2  C019  F01A         	movff	??___flmul+2,??___flmul+3
  5790  0016C6  C018  F019         	movff	??___flmul+1,??___flmul+2
  5791  0016CA  C017  F018         	movff	??___flmul,??___flmul+1
  5792  0016CE  6A17               	clrf	??___flmul,c
  5793  0016D0  5017               	movf	??___flmul,w,c
  5794  0016D2  2622               	addwf	___flmul@prod,f,c
  5795  0016D4  5018               	movf	??___flmul+1,w,c
  5796  0016D6  2223               	addwfc	___flmul@prod+1,f,c
  5797  0016D8  5019               	movf	??___flmul+2,w,c
  5798  0016DA  2224               	addwfc	___flmul@prod+2,f,c
  5799  0016DC  501A               	movf	??___flmul+3,w,c
  5800  0016DE  2225               	addwfc	___flmul@prod+3,f,c
  5801  0016E0  C01C  F017         	movff	___flmul@grs,??___flmul
  5802  0016E4  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  5803  0016E8  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  5804  0016EC  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  5805  0016F0  0E19               	movlw	25
  5806  0016F2  D005               	goto	u2570
  5807  0016F4                     u2575:
  5808  0016F4  90D8               	bcf	status,0,c
  5809  0016F6  321A               	rrcf	??___flmul+3,f,c
  5810  0016F8  3219               	rrcf	??___flmul+2,f,c
  5811  0016FA  3218               	rrcf	??___flmul+1,f,c
  5812  0016FC  3217               	rrcf	??___flmul,f,c
  5813  0016FE                     u2570:
  5814  0016FE  2EE8               	decfsz	wreg,f,c
  5815  001700  D7F9               	goto	u2575
  5816  001702  5017               	movf	??___flmul,w,c
  5817  001704  2622               	addwf	___flmul@prod,f,c
  5818  001706  5018               	movf	??___flmul+1,w,c
  5819  001708  2223               	addwfc	___flmul@prod+1,f,c
  5820  00170A  5019               	movf	??___flmul+2,w,c
  5821  00170C  2224               	addwfc	___flmul@prod+2,f,c
  5822  00170E  501A               	movf	??___flmul+3,w,c
  5823  001710  2225               	addwfc	___flmul@prod+3,f,c
  5824  001712  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5825  001716  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5826  00171A  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5827  00171E  6A1C               	clrf	___flmul@grs,c
  5828  001720  5020               	movf	___flmul@aexp,w,c
  5829  001722  C021  F017         	movff	___flmul@bexp,??___flmul
  5830  001726  6A18               	clrf	(??___flmul+1)& (0+255),c
  5831  001728  2617               	addwf	??___flmul,f,c
  5832  00172A  0E00               	movlw	0
  5833  00172C  2218               	addwfc	??___flmul+1,f,c
  5834  00172E  0E82               	movlw	130
  5835  001730  2417               	addwf	??___flmul,w,c
  5836  001732  6E26               	movwf	___flmul@temp,c
  5837  001734  0EFF               	movlw	255
  5838  001736  2018               	addwfc	??___flmul+1,w,c
  5839  001738  6E27               	movwf	___flmul@temp+1,c
  5840  00173A  D00F               	goto	l2650
  5841  00173C                     l2644:
  5842  00173C  90D8               	bcf	status,0,c
  5843  00173E  3622               	rlcf	___flmul@prod,f,c
  5844  001740  3623               	rlcf	___flmul@prod+1,f,c
  5845  001742  3624               	rlcf	___flmul@prod+2,f,c
  5846  001744  3625               	rlcf	___flmul@prod+3,f,c
  5847  001746  BE1F               	btfsc	___flmul@grs+3,7,c
  5848  001748  8022               	bsf	___flmul@prod,0,c
  5849  00174A  90D8               	bcf	status,0,c
  5850  00174C  361C               	rlcf	___flmul@grs,f,c
  5851  00174E  361D               	rlcf	___flmul@grs+1,f,c
  5852  001750  361E               	rlcf	___flmul@grs+2,f,c
  5853  001752  361F               	rlcf	___flmul@grs+3,f,c
  5854  001754  0626               	decf	___flmul@temp,f,c
  5855  001756  A0D8               	btfss	status,0,c
  5856  001758  0627               	decf	___flmul@temp+1,f,c
  5857  00175A                     l2650:
  5858  00175A  AE24               	btfss	___flmul@prod+2,7,c
  5859  00175C  D7EF               	goto	l2644
  5860  00175E  0E00               	movlw	0
  5861  001760  6E20               	movwf	___flmul@aexp,c
  5862  001762  AE1F               	btfss	___flmul@grs+3,7,c
  5863  001764  D016               	goto	l861
  5864  001766  0EFF               	movlw	255
  5865  001768  141C               	andwf	___flmul@grs,w,c
  5866  00176A  6E17               	movwf	??___flmul& (0+255),c
  5867  00176C  0EFF               	movlw	255
  5868  00176E  141D               	andwf	___flmul@grs+1,w,c
  5869  001770  6E18               	movwf	(??___flmul+1)& (0+255),c
  5870  001772  0EFF               	movlw	255
  5871  001774  141E               	andwf	___flmul@grs+2,w,c
  5872  001776  6E19               	movwf	(??___flmul+2)& (0+255),c
  5873  001778  0E7F               	movlw	127
  5874  00177A  141F               	andwf	___flmul@grs+3,w,c
  5875  00177C  6E1A               	movwf	(??___flmul+3)& (0+255),c
  5876  00177E  5017               	movf	??___flmul,w,c
  5877  001780  1018               	iorwf	??___flmul+1,w,c
  5878  001782  1019               	iorwf	??___flmul+2,w,c
  5879  001784  101A               	iorwf	??___flmul+3,w,c
  5880  001786  A4D8               	btfss	status,2,c
  5881  001788  D002               	goto	l2660
  5882  00178A  A022               	btfss	___flmul@prod,0,c
  5883  00178C  D002               	goto	l861
  5884  00178E                     l2660:
  5885  00178E  0E01               	movlw	1
  5886  001790  6E20               	movwf	___flmul@aexp,c
  5887  001792                     l861:
  5888  001792  5020               	movf	___flmul@aexp,w,c
  5889  001794  B4D8               	btfsc	status,2,c
  5890  001796  D01F               	goto	l2670
  5891  001798  0E01               	movlw	1
  5892  00179A  2622               	addwf	___flmul@prod,f,c
  5893  00179C  0E00               	movlw	0
  5894  00179E  2223               	addwfc	___flmul@prod+1,f,c
  5895  0017A0  2224               	addwfc	___flmul@prod+2,f,c
  5896  0017A2  2225               	addwfc	___flmul@prod+3,f,c
  5897  0017A4  A025               	btfss	___flmul@prod+3,0,c
  5898  0017A6  D017               	goto	l2670
  5899  0017A8  C022  F017         	movff	___flmul@prod,??___flmul
  5900  0017AC  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  5901  0017B0  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  5902  0017B4  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  5903  0017B8  341A               	rlcf	??___flmul+3,w,c
  5904  0017BA  321A               	rrcf	??___flmul+3,f,c
  5905  0017BC  3219               	rrcf	??___flmul+2,f,c
  5906  0017BE  3218               	rrcf	??___flmul+1,f,c
  5907  0017C0  3217               	rrcf	??___flmul,f,c
  5908  0017C2  C017  F022         	movff	??___flmul,___flmul@prod
  5909  0017C6  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  5910  0017CA  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  5911  0017CE  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  5912  0017D2  4A26               	infsnz	___flmul@temp,f,c
  5913  0017D4  2A27               	incf	___flmul@temp+1,f,c
  5914  0017D6                     l2670:
  5915  0017D6  BE27               	btfsc	___flmul@temp+1,7,c
  5916  0017D8  D00D               	goto	l2674
  5917  0017DA  5027               	movf	___flmul@temp+1,w,c
  5918  0017DC  E103               	bnz	u2650
  5919  0017DE  2826               	incf	___flmul@temp,w,c
  5920  0017E0  A0D8               	btfss	status,0,c
  5921  0017E2  D008               	goto	l2674
  5922  0017E4                     u2650:
  5923  0017E4  0E00               	movlw	0
  5924  0017E6  6E22               	movwf	___flmul@prod,c
  5925  0017E8  0E00               	movlw	0
  5926  0017EA  6E23               	movwf	___flmul@prod+1,c
  5927  0017EC  0E80               	movlw	128
  5928  0017EE  6E24               	movwf	___flmul@prod+2,c
  5929  0017F0  0E7F               	movlw	127
  5930  0017F2  D020               	goto	L9
  5931  0017F4                     l2674:
  5932  0017F4  BE27               	btfsc	___flmul@temp+1,7,c
  5933  0017F6  D005               	goto	l2676
  5934  0017F8  5027               	movf	___flmul@temp+1,w,c
  5935  0017FA  E10E               	bnz	l869
  5936  0017FC  0426               	decf	___flmul@temp,w,c
  5937  0017FE  B0D8               	btfsc	status,0,c
  5938  001800  D00B               	goto	l869
  5939  001802                     l2676:
  5940  001802  0E00               	movlw	0
  5941  001804  6E22               	movwf	___flmul@prod,c
  5942  001806  0E00               	movlw	0
  5943  001808  6E23               	movwf	___flmul@prod+1,c
  5944  00180A  0E00               	movlw	0
  5945  00180C  6E24               	movwf	___flmul@prod+2,c
  5946  00180E  0E00               	movlw	0
  5947  001810  6E25               	movwf	___flmul@prod+3,c
  5948  001812  0E00               	movlw	0
  5949  001814  6E1B               	movwf	___flmul@sign,c
  5950  001816  D00F               	goto	l2686
  5951  001818                     l869:
  5952  001818  C026  F021         	movff	___flmul@temp,___flmul@bexp
  5953  00181C  0EFF               	movlw	255
  5954  00181E  1622               	andwf	___flmul@prod,f,c
  5955  001820  0EFF               	movlw	255
  5956  001822  1623               	andwf	___flmul@prod+1,f,c
  5957  001824  0E7F               	movlw	127
  5958  001826  1624               	andwf	___flmul@prod+2,f,c
  5959  001828  0E00               	movlw	0
  5960  00182A  1625               	andwf	___flmul@prod+3,f,c
  5961  00182C  B021               	btfsc	___flmul@bexp,0,c
  5962  00182E  8E24               	bsf	___flmul@prod+2,7,c
  5963  001830  90D8               	bcf	status,0,c
  5964  001832  3021               	rrcf	___flmul@bexp,w,c
  5965  001834                     L9:
  5966  001834  6E25               	movwf	___flmul@prod+3,c
  5967  001836                     l2686:
  5968  001836  501B               	movf	___flmul@sign,w,c
  5969  001838  1225               	iorwf	___flmul@prod+3,f,c
  5970  00183A  C022  F00F         	movff	___flmul@prod,?___flmul
  5971  00183E  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  5972  001842  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  5973  001846  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  5974  00184A  0012               	return	
  5975  00184C                     __end_of___flmul:
  5976                           	opt stack 0
  5977                           tblptru	equ	0xFF8
  5978                           tblptrh	equ	0xFF7
  5979                           tblptrl	equ	0xFF6
  5980                           tablat	equ	0xFF5
  5981                           prodh	equ	0xFF4
  5982                           prodl	equ	0xFF3
  5983                           postinc0	equ	0xFEE
  5984                           wreg	equ	0xFE8
  5985                           indf2	equ	0xFDF
  5986                           postinc2	equ	0xFDE
  5987                           postdec2	equ	0xFDD
  5988                           fsr2h	equ	0xFDA
  5989                           fsr2l	equ	0xFD9
  5990                           status	equ	0xFD8
  5991                           
  5992 ;; *************** function ___fldiv *****************
  5993 ;; Defined at:
  5994 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\sprcdiv.c"
  5995 ;; Parameters:    Size  Location     Type
  5996 ;;  b               4    0[COMRAM] unsigned char 
  5997 ;;  a               4    4[COMRAM] unsigned char 
  5998 ;; Auto vars:     Size  Location     Type
  5999 ;;  grs             4   19[COMRAM] unsigned long 
  6000 ;;  rem             4   13[COMRAM] unsigned long 
  6001 ;;  new_exp         2   17[COMRAM] int 
  6002 ;;  aexp            1   24[COMRAM] unsigned char 
  6003 ;;  bexp            1   23[COMRAM] unsigned char 
  6004 ;;  sign            1   12[COMRAM] unsigned char 
  6005 ;; Return value:  Size  Location     Type
  6006 ;;                  4    0[COMRAM] unsigned char 
  6007 ;; Registers used:
  6008 ;;		wreg, status,2, status,0
  6009 ;; Tracked objects:
  6010 ;;		On entry : 0/0
  6011 ;;		On exit  : 0/0
  6012 ;;		Unchanged: 0/0
  6013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6014 ;;      Params:         8       0       0       0       0       0       0       0       0
  6015 ;;      Locals:        13       0       0       0       0       0       0       0       0
  6016 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6017 ;;      Totals:        25       0       0       0       0       0       0       0       0
  6018 ;;Total ram usage:       25 bytes
  6019 ;; Hardware stack levels used:    1
  6020 ;; This function calls:
  6021 ;;		Nothing
  6022 ;; This function is called by:
  6023 ;;		_main
  6024 ;;		_read_adc
  6025 ;; This function uses a non-reentrant model
  6026 ;;
  6027                           
  6028                           	psect	text19
  6029  001B88                     __ptext19:
  6030                           	opt stack 0
  6031  001B88                     ___fldiv:
  6032                           	opt stack 28
  6033                           
  6034                           ;incstack = 0
  6035  001B88  5004               	movf	___fldiv@b+3,w,c
  6036  001B8A  0B80               	andlw	128
  6037  001B8C  6E0D               	movwf	___fldiv@sign,c
  6038  001B8E  5004               	movf	___fldiv@b+3,w,c
  6039  001B90  2404               	addwf	___fldiv@b+3,w,c
  6040  001B92  6E18               	movwf	___fldiv@bexp,c
  6041  001B94  BE03               	btfsc	___fldiv@b+2,7,c
  6042  001B96  8018               	bsf	___fldiv@bexp,0,c
  6043  001B98  5018               	movf	___fldiv@bexp,w,c
  6044  001B9A  B4D8               	btfsc	status,2,c
  6045  001B9C  D00D               	goto	l3000
  6046  001B9E  2818               	incf	___fldiv@bexp,w,c
  6047  001BA0  A4D8               	btfss	status,2,c
  6048  001BA2  D008               	goto	l2996
  6049  001BA4  0E00               	movlw	0
  6050  001BA6  6E01               	movwf	___fldiv@b,c
  6051  001BA8  0E00               	movlw	0
  6052  001BAA  6E02               	movwf	___fldiv@b+1,c
  6053  001BAC  0E00               	movlw	0
  6054  001BAE  6E03               	movwf	___fldiv@b+2,c
  6055  001BB0  0E00               	movlw	0
  6056  001BB2  6E04               	movwf	___fldiv@b+3,c
  6057  001BB4                     l2996:
  6058  001BB4  8E03               	bsf	___fldiv@b+2,7,c
  6059  001BB6  D006               	goto	L10
  6060  001BB8                     l3000:
  6061  001BB8  0E00               	movlw	0
  6062  001BBA  6E01               	movwf	___fldiv@b,c
  6063  001BBC  0E00               	movlw	0
  6064  001BBE  6E02               	movwf	___fldiv@b+1,c
  6065  001BC0  0E00               	movlw	0
  6066  001BC2  6E03               	movwf	___fldiv@b+2,c
  6067  001BC4                     L10:
  6068  001BC4  0E00               	movlw	0
  6069  001BC6  6E04               	movwf	___fldiv@b+3,c
  6070  001BC8  5008               	movf	___fldiv@a+3,w,c
  6071  001BCA  0B80               	andlw	128
  6072  001BCC  1A0D               	xorwf	___fldiv@sign,f,c
  6073  001BCE  5008               	movf	___fldiv@a+3,w,c
  6074  001BD0  2408               	addwf	___fldiv@a+3,w,c
  6075  001BD2  6E19               	movwf	___fldiv@aexp,c
  6076  001BD4  BE07               	btfsc	___fldiv@a+2,7,c
  6077  001BD6  8019               	bsf	___fldiv@aexp,0,c
  6078  001BD8  5019               	movf	___fldiv@aexp,w,c
  6079  001BDA  B4D8               	btfsc	status,2,c
  6080  001BDC  D00D               	goto	l3020
  6081  001BDE  2819               	incf	___fldiv@aexp,w,c
  6082  001BE0  A4D8               	btfss	status,2,c
  6083  001BE2  D008               	goto	l3016
  6084  001BE4  0E00               	movlw	0
  6085  001BE6  6E05               	movwf	___fldiv@a,c
  6086  001BE8  0E00               	movlw	0
  6087  001BEA  6E06               	movwf	___fldiv@a+1,c
  6088  001BEC  0E00               	movlw	0
  6089  001BEE  6E07               	movwf	___fldiv@a+2,c
  6090  001BF0  0E00               	movlw	0
  6091  001BF2  6E08               	movwf	___fldiv@a+3,c
  6092  001BF4                     l3016:
  6093  001BF4  8E07               	bsf	___fldiv@a+2,7,c
  6094  001BF6  D006               	goto	L11
  6095  001BF8                     l3020:
  6096  001BF8  0E00               	movlw	0
  6097  001BFA  6E05               	movwf	___fldiv@a,c
  6098  001BFC  0E00               	movlw	0
  6099  001BFE  6E06               	movwf	___fldiv@a+1,c
  6100  001C00  0E00               	movlw	0
  6101  001C02  6E07               	movwf	___fldiv@a+2,c
  6102  001C04                     L11:
  6103  001C04  0E00               	movlw	0
  6104  001C06  6E08               	movwf	___fldiv@a+3,c
  6105  001C08  5005               	movf	___fldiv@a,w,c
  6106  001C0A  1006               	iorwf	___fldiv@a+1,w,c
  6107  001C0C  1007               	iorwf	___fldiv@a+2,w,c
  6108  001C0E  1008               	iorwf	___fldiv@a+3,w,c
  6109  001C10  A4D8               	btfss	status,2,c
  6110  001C12  D015               	goto	l3032
  6111  001C14  0E00               	movlw	0
  6112  001C16  6E01               	movwf	___fldiv@b,c
  6113  001C18  0E00               	movlw	0
  6114  001C1A  6E02               	movwf	___fldiv@b+1,c
  6115  001C1C  0E00               	movlw	0
  6116  001C1E  6E03               	movwf	___fldiv@b+2,c
  6117  001C20  0E00               	movlw	0
  6118  001C22  6E04               	movwf	___fldiv@b+3,c
  6119  001C24  0E80               	movlw	128
  6120  001C26  1203               	iorwf	___fldiv@b+2,f,c
  6121  001C28  0E7F               	movlw	127
  6122  001C2A  1204               	iorwf	___fldiv@b+3,f,c
  6123  001C2C  C001  F001         	movff	___fldiv@b,?___fldiv
  6124  001C30  C002  F002         	movff	___fldiv@b+1,?___fldiv+1
  6125  001C34  C003  F003         	movff	___fldiv@b+2,?___fldiv+2
  6126  001C38  C004  F004         	movff	___fldiv@b+3,?___fldiv+3
  6127  001C3C  0012               	return	
  6128  001C3E                     l3032:
  6129  001C3E  5018               	movf	___fldiv@bexp,w,c
  6130  001C40  A4D8               	btfss	status,2,c
  6131  001C42  D011               	goto	l3040
  6132  001C44  0E00               	movlw	0
  6133  001C46  6E01               	movwf	___fldiv@b,c
  6134  001C48  0E00               	movlw	0
  6135  001C4A  6E02               	movwf	___fldiv@b+1,c
  6136  001C4C  0E00               	movlw	0
  6137  001C4E  6E03               	movwf	___fldiv@b+2,c
  6138  001C50  0E00               	movlw	0
  6139  001C52  6E04               	movwf	___fldiv@b+3,c
  6140  001C54  C001  F001         	movff	___fldiv@b,?___fldiv
  6141  001C58  C002  F002         	movff	___fldiv@b+1,?___fldiv+1
  6142  001C5C  C003  F003         	movff	___fldiv@b+2,?___fldiv+2
  6143  001C60  C004  F004         	movff	___fldiv@b+3,?___fldiv+3
  6144  001C64  0012               	return	
  6145  001C66                     l3040:
  6146  001C66  5019               	movf	___fldiv@aexp,w,c
  6147  001C68  6E09               	movwf	??___fldiv& (0+255),c
  6148  001C6A  6A0A               	clrf	(??___fldiv+1)& (0+255),c
  6149  001C6C  1E09               	comf	??___fldiv,f,c
  6150  001C6E  1E0A               	comf	??___fldiv+1,f,c
  6151  001C70  4A09               	infsnz	??___fldiv,f,c
  6152  001C72  2A0A               	incf	??___fldiv+1,f,c
  6153  001C74  5018               	movf	___fldiv@bexp,w,c
  6154  001C76  6E0B               	movwf	(??___fldiv+2)& (0+255),c
  6155  001C78  6A0C               	clrf	(??___fldiv+3)& (0+255),c
  6156  001C7A  5009               	movf	??___fldiv,w,c
  6157  001C7C  260B               	addwf	??___fldiv+2,f,c
  6158  001C7E  500A               	movf	??___fldiv+1,w,c
  6159  001C80  220C               	addwfc	??___fldiv+3,f,c
  6160  001C82  0E7F               	movlw	127
  6161  001C84  240B               	addwf	??___fldiv+2,w,c
  6162  001C86  6E12               	movwf	___fldiv@new_exp,c
  6163  001C88  0E00               	movlw	0
  6164  001C8A  200C               	addwfc	??___fldiv+3,w,c
  6165  001C8C  6E13               	movwf	___fldiv@new_exp+1,c
  6166  001C8E  C001  F00E         	movff	___fldiv@b,___fldiv@rem
  6167  001C92  C002  F00F         	movff	___fldiv@b+1,___fldiv@rem+1
  6168  001C96  C003  F010         	movff	___fldiv@b+2,___fldiv@rem+2
  6169  001C9A  C004  F011         	movff	___fldiv@b+3,___fldiv@rem+3
  6170  001C9E  0E00               	movlw	0
  6171  001CA0  6E01               	movwf	___fldiv@b,c
  6172  001CA2  0E00               	movlw	0
  6173  001CA4  6E02               	movwf	___fldiv@b+1,c
  6174  001CA6  0E00               	movlw	0
  6175  001CA8  6E03               	movwf	___fldiv@b+2,c
  6176  001CAA  0E00               	movlw	0
  6177  001CAC  6E04               	movwf	___fldiv@b+3,c
  6178  001CAE  0E00               	movlw	0
  6179  001CB0  6E14               	movwf	___fldiv@grs,c
  6180  001CB2  0E00               	movlw	0
  6181  001CB4  6E15               	movwf	___fldiv@grs+1,c
  6182  001CB6  0E00               	movlw	0
  6183  001CB8  6E16               	movwf	___fldiv@grs+2,c
  6184  001CBA  0E00               	movlw	0
  6185  001CBC  6E17               	movwf	___fldiv@grs+3,c
  6186  001CBE  0E00               	movlw	0
  6187  001CC0  6E19               	movwf	___fldiv@aexp,c
  6188  001CC2  D028               	goto	l822
  6189  001CC4                     l3050:
  6190  001CC4  5019               	movf	___fldiv@aexp,w,c
  6191  001CC6  B4D8               	btfsc	status,2,c
  6192  001CC8  D011               	goto	l3058
  6193  001CCA  90D8               	bcf	status,0,c
  6194  001CCC  360E               	rlcf	___fldiv@rem,f,c
  6195  001CCE  360F               	rlcf	___fldiv@rem+1,f,c
  6196  001CD0  3610               	rlcf	___fldiv@rem+2,f,c
  6197  001CD2  3611               	rlcf	___fldiv@rem+3,f,c
  6198  001CD4  90D8               	bcf	status,0,c
  6199  001CD6  3601               	rlcf	___fldiv@b,f,c
  6200  001CD8  3602               	rlcf	___fldiv@b+1,f,c
  6201  001CDA  3603               	rlcf	___fldiv@b+2,f,c
  6202  001CDC  3604               	rlcf	___fldiv@b+3,f,c
  6203  001CDE  BE17               	btfsc	___fldiv@grs+3,7,c
  6204  001CE0  8001               	bsf	___fldiv@b,0,c
  6205  001CE2  90D8               	bcf	status,0,c
  6206  001CE4  3614               	rlcf	___fldiv@grs,f,c
  6207  001CE6  3615               	rlcf	___fldiv@grs+1,f,c
  6208  001CE8  3616               	rlcf	___fldiv@grs+2,f,c
  6209  001CEA  3617               	rlcf	___fldiv@grs+3,f,c
  6210  001CEC                     l3058:
  6211  001CEC  5005               	movf	___fldiv@a,w,c
  6212  001CEE  5C0E               	subwf	___fldiv@rem,w,c
  6213  001CF0  5006               	movf	___fldiv@a+1,w,c
  6214  001CF2  580F               	subwfb	___fldiv@rem+1,w,c
  6215  001CF4  5007               	movf	___fldiv@a+2,w,c
  6216  001CF6  5810               	subwfb	___fldiv@rem+2,w,c
  6217  001CF8  5008               	movf	___fldiv@a+3,w,c
  6218  001CFA  5811               	subwfb	___fldiv@rem+3,w,c
  6219  001CFC  A0D8               	btfss	status,0,c
  6220  001CFE  D009               	goto	l3064
  6221  001D00  8C17               	bsf	___fldiv@grs+3,6,c
  6222  001D02  5005               	movf	___fldiv@a,w,c
  6223  001D04  5E0E               	subwf	___fldiv@rem,f,c
  6224  001D06  5006               	movf	___fldiv@a+1,w,c
  6225  001D08  5A0F               	subwfb	___fldiv@rem+1,f,c
  6226  001D0A  5007               	movf	___fldiv@a+2,w,c
  6227  001D0C  5A10               	subwfb	___fldiv@rem+2,f,c
  6228  001D0E  5008               	movf	___fldiv@a+3,w,c
  6229  001D10  5A11               	subwfb	___fldiv@rem+3,f,c
  6230  001D12                     l3064:
  6231  001D12  2A19               	incf	___fldiv@aexp,f,c
  6232  001D14                     l822:
  6233  001D14  0E19               	movlw	25
  6234  001D16  6419               	cpfsgt	___fldiv@aexp,c
  6235  001D18  D7D5               	goto	l3050
  6236  001D1A  500E               	movf	___fldiv@rem,w,c
  6237  001D1C  100F               	iorwf	___fldiv@rem+1,w,c
  6238  001D1E  1010               	iorwf	___fldiv@rem+2,w,c
  6239  001D20  1011               	iorwf	___fldiv@rem+3,w,c
  6240  001D22  B4D8               	btfsc	status,2,c
  6241  001D24  D011               	goto	l3076
  6242  001D26  8014               	bsf	___fldiv@grs,0,c
  6243  001D28  D00F               	goto	l3076
  6244  001D2A                     l3070:
  6245  001D2A  90D8               	bcf	status,0,c
  6246  001D2C  3601               	rlcf	___fldiv@b,f,c
  6247  001D2E  3602               	rlcf	___fldiv@b+1,f,c
  6248  001D30  3603               	rlcf	___fldiv@b+2,f,c
  6249  001D32  3604               	rlcf	___fldiv@b+3,f,c
  6250  001D34  BE17               	btfsc	___fldiv@grs+3,7,c
  6251  001D36  8001               	bsf	___fldiv@b,0,c
  6252  001D38  90D8               	bcf	status,0,c
  6253  001D3A  3614               	rlcf	___fldiv@grs,f,c
  6254  001D3C  3615               	rlcf	___fldiv@grs+1,f,c
  6255  001D3E  3616               	rlcf	___fldiv@grs+2,f,c
  6256  001D40  3617               	rlcf	___fldiv@grs+3,f,c
  6257  001D42  0612               	decf	___fldiv@new_exp,f,c
  6258  001D44  A0D8               	btfss	status,0,c
  6259  001D46  0613               	decf	___fldiv@new_exp+1,f,c
  6260  001D48                     l3076:
  6261  001D48  AE03               	btfss	___fldiv@b+2,7,c
  6262  001D4A  D7EF               	goto	l3070
  6263  001D4C  0E00               	movlw	0
  6264  001D4E  6E19               	movwf	___fldiv@aexp,c
  6265  001D50  AE17               	btfss	___fldiv@grs+3,7,c
  6266  001D52  D016               	goto	l833
  6267  001D54  0EFF               	movlw	255
  6268  001D56  1414               	andwf	___fldiv@grs,w,c
  6269  001D58  6E09               	movwf	??___fldiv& (0+255),c
  6270  001D5A  0EFF               	movlw	255
  6271  001D5C  1415               	andwf	___fldiv@grs+1,w,c
  6272  001D5E  6E0A               	movwf	(??___fldiv+1)& (0+255),c
  6273  001D60  0EFF               	movlw	255
  6274  001D62  1416               	andwf	___fldiv@grs+2,w,c
  6275  001D64  6E0B               	movwf	(??___fldiv+2)& (0+255),c
  6276  001D66  0E7F               	movlw	127
  6277  001D68  1417               	andwf	___fldiv@grs+3,w,c
  6278  001D6A  6E0C               	movwf	(??___fldiv+3)& (0+255),c
  6279  001D6C  5009               	movf	??___fldiv,w,c
  6280  001D6E  100A               	iorwf	??___fldiv+1,w,c
  6281  001D70  100B               	iorwf	??___fldiv+2,w,c
  6282  001D72  100C               	iorwf	??___fldiv+3,w,c
  6283  001D74  A4D8               	btfss	status,2,c
  6284  001D76  D002               	goto	l3086
  6285  001D78  A001               	btfss	___fldiv@b,0,c
  6286  001D7A  D002               	goto	l833
  6287  001D7C                     l3086:
  6288  001D7C  0E01               	movlw	1
  6289  001D7E  6E19               	movwf	___fldiv@aexp,c
  6290  001D80                     l833:
  6291  001D80  5019               	movf	___fldiv@aexp,w,c
  6292  001D82  B4D8               	btfsc	status,2,c
  6293  001D84  D01F               	goto	l3096
  6294  001D86  0E01               	movlw	1
  6295  001D88  2601               	addwf	___fldiv@b,f,c
  6296  001D8A  0E00               	movlw	0
  6297  001D8C  2202               	addwfc	___fldiv@b+1,f,c
  6298  001D8E  2203               	addwfc	___fldiv@b+2,f,c
  6299  001D90  2204               	addwfc	___fldiv@b+3,f,c
  6300  001D92  A004               	btfss	___fldiv@b+3,0,c
  6301  001D94  D017               	goto	l3096
  6302  001D96  C001  F009         	movff	___fldiv@b,??___fldiv
  6303  001D9A  C002  F00A         	movff	___fldiv@b+1,??___fldiv+1
  6304  001D9E  C003  F00B         	movff	___fldiv@b+2,??___fldiv+2
  6305  001DA2  C004  F00C         	movff	___fldiv@b+3,??___fldiv+3
  6306  001DA6  340C               	rlcf	??___fldiv+3,w,c
  6307  001DA8  320C               	rrcf	??___fldiv+3,f,c
  6308  001DAA  320B               	rrcf	??___fldiv+2,f,c
  6309  001DAC  320A               	rrcf	??___fldiv+1,f,c
  6310  001DAE  3209               	rrcf	??___fldiv,f,c
  6311  001DB0  C009  F001         	movff	??___fldiv,___fldiv@b
  6312  001DB4  C00A  F002         	movff	??___fldiv+1,___fldiv@b+1
  6313  001DB8  C00B  F003         	movff	??___fldiv+2,___fldiv@b+2
  6314  001DBC  C00C  F004         	movff	??___fldiv+3,___fldiv@b+3
  6315  001DC0  4A12               	infsnz	___fldiv@new_exp,f,c
  6316  001DC2  2A13               	incf	___fldiv@new_exp+1,f,c
  6317  001DC4                     l3096:
  6318  001DC4  BE13               	btfsc	___fldiv@new_exp+1,7,c
  6319  001DC6  D010               	goto	l3100
  6320  001DC8  5013               	movf	___fldiv@new_exp+1,w,c
  6321  001DCA  E103               	bnz	u3250
  6322  001DCC  2812               	incf	___fldiv@new_exp,w,c
  6323  001DCE  A0D8               	btfss	status,0,c
  6324  001DD0  D00B               	goto	l3100
  6325  001DD2                     u3250:
  6326  001DD2  0E00               	movlw	0
  6327  001DD4  6E13               	movwf	___fldiv@new_exp+1,c
  6328  001DD6  6812               	setf	___fldiv@new_exp,c
  6329  001DD8  0E00               	movlw	0
  6330  001DDA  6E01               	movwf	___fldiv@b,c
  6331  001DDC  0E00               	movlw	0
  6332  001DDE  6E02               	movwf	___fldiv@b+1,c
  6333  001DE0  0E00               	movlw	0
  6334  001DE2  6E03               	movwf	___fldiv@b+2,c
  6335  001DE4  0E00               	movlw	0
  6336  001DE6  6E04               	movwf	___fldiv@b+3,c
  6337  001DE8                     l3100:
  6338  001DE8  BE13               	btfsc	___fldiv@new_exp+1,7,c
  6339  001DEA  D005               	goto	l3102
  6340  001DEC  5013               	movf	___fldiv@new_exp+1,w,c
  6341  001DEE  E111               	bnz	l3104
  6342  001DF0  0412               	decf	___fldiv@new_exp,w,c
  6343  001DF2  B0D8               	btfsc	status,0,c
  6344  001DF4  D00E               	goto	l3104
  6345  001DF6                     l3102:
  6346  001DF6  0E00               	movlw	0
  6347  001DF8  6E13               	movwf	___fldiv@new_exp+1,c
  6348  001DFA  0E00               	movlw	0
  6349  001DFC  6E12               	movwf	___fldiv@new_exp,c
  6350  001DFE  0E00               	movlw	0
  6351  001E00  6E01               	movwf	___fldiv@b,c
  6352  001E02  0E00               	movlw	0
  6353  001E04  6E02               	movwf	___fldiv@b+1,c
  6354  001E06  0E00               	movlw	0
  6355  001E08  6E03               	movwf	___fldiv@b+2,c
  6356  001E0A  0E00               	movlw	0
  6357  001E0C  6E04               	movwf	___fldiv@b+3,c
  6358  001E0E  0E00               	movlw	0
  6359  001E10  6E0D               	movwf	___fldiv@sign,c
  6360  001E12                     l3104:
  6361  001E12  C012  F018         	movff	___fldiv@new_exp,___fldiv@bexp
  6362  001E16  A018               	btfss	___fldiv@bexp,0,c
  6363  001E18  D002               	goto	l3110
  6364  001E1A  8E03               	bsf	___fldiv@b+2,7,c
  6365  001E1C  D001               	goto	l3112
  6366  001E1E                     l3110:
  6367  001E1E  9E03               	bcf	___fldiv@b+2,7,c
  6368  001E20                     l3112:
  6369  001E20  90D8               	bcf	status,0,c
  6370  001E22  3018               	rrcf	___fldiv@bexp,w,c
  6371  001E24  6E04               	movwf	___fldiv@b+3,c
  6372  001E26  500D               	movf	___fldiv@sign,w,c
  6373  001E28  1204               	iorwf	___fldiv@b+3,f,c
  6374  001E2A  C001  F001         	movff	___fldiv@b,?___fldiv
  6375  001E2E  C002  F002         	movff	___fldiv@b+1,?___fldiv+1
  6376  001E32  C003  F003         	movff	___fldiv@b+2,?___fldiv+2
  6377  001E36  C004  F004         	movff	___fldiv@b+3,?___fldiv+3
  6378  001E3A  0012               	return	
  6379  001E3C                     __end_of___fldiv:
  6380                           	opt stack 0
  6381                           tblptru	equ	0xFF8
  6382                           tblptrh	equ	0xFF7
  6383                           tblptrl	equ	0xFF6
  6384                           tablat	equ	0xFF5
  6385                           prodh	equ	0xFF4
  6386                           prodl	equ	0xFF3
  6387                           postinc0	equ	0xFEE
  6388                           wreg	equ	0xFE8
  6389                           indf2	equ	0xFDF
  6390                           postinc2	equ	0xFDE
  6391                           postdec2	equ	0xFDD
  6392                           fsr2h	equ	0xFDA
  6393                           fsr2l	equ	0xFD9
  6394                           status	equ	0xFD8
  6395                           
  6396 ;; *************** function ___awdiv *****************
  6397 ;; Defined at:
  6398 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\awdiv.c"
  6399 ;; Parameters:    Size  Location     Type
  6400 ;;  dividend        2    6[COMRAM] int 
  6401 ;;  divisor         2    8[COMRAM] int 
  6402 ;; Auto vars:     Size  Location     Type
  6403 ;;  quotient        2   12[COMRAM] int 
  6404 ;;  sign            1   11[COMRAM] unsigned char 
  6405 ;;  counter         1   10[COMRAM] unsigned char 
  6406 ;; Return value:  Size  Location     Type
  6407 ;;                  2    6[COMRAM] int 
  6408 ;; Registers used:
  6409 ;;		wreg, status,2, status,0
  6410 ;; Tracked objects:
  6411 ;;		On entry : 0/0
  6412 ;;		On exit  : 0/0
  6413 ;;		Unchanged: 0/0
  6414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6415 ;;      Params:         4       0       0       0       0       0       0       0       0
  6416 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6417 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6418 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6419 ;;Total ram usage:        8 bytes
  6420 ;; Hardware stack levels used:    1
  6421 ;; This function calls:
  6422 ;;		Nothing
  6423 ;; This function is called by:
  6424 ;;		_read_adc
  6425 ;;		_fround
  6426 ;;		_scale
  6427 ;;		_sprintf
  6428 ;; This function uses a non-reentrant model
  6429 ;;
  6430                           
  6431                           	psect	text20
  6432  002B30                     __ptext20:
  6433                           	opt stack 0
  6434  002B30                     ___awdiv:
  6435                           	opt stack 27
  6436                           
  6437                           ;incstack = 0
  6438  002B30  0E00               	movlw	0
  6439  002B32  6E0C               	movwf	___awdiv@sign,c
  6440  002B34  AE0A               	btfss	___awdiv@divisor+1,7,c
  6441  002B36  D006               	goto	l2700
  6442  002B38  6C09               	negf	___awdiv@divisor,c
  6443  002B3A  1E0A               	comf	___awdiv@divisor+1,f,c
  6444  002B3C  B0D8               	btfsc	status,0,c
  6445  002B3E  2A0A               	incf	___awdiv@divisor+1,f,c
  6446  002B40  0E01               	movlw	1
  6447  002B42  6E0C               	movwf	___awdiv@sign,c
  6448  002B44                     l2700:
  6449  002B44  AE08               	btfss	___awdiv@dividend+1,7,c
  6450  002B46  D006               	goto	l2706
  6451  002B48  6C07               	negf	___awdiv@dividend,c
  6452  002B4A  1E08               	comf	___awdiv@dividend+1,f,c
  6453  002B4C  B0D8               	btfsc	status,0,c
  6454  002B4E  2A08               	incf	___awdiv@dividend+1,f,c
  6455  002B50  0E01               	movlw	1
  6456  002B52  1A0C               	xorwf	___awdiv@sign,f,c
  6457  002B54                     l2706:
  6458  002B54  0E00               	movlw	0
  6459  002B56  6E0E               	movwf	___awdiv@quotient+1,c
  6460  002B58  0E00               	movlw	0
  6461  002B5A  6E0D               	movwf	___awdiv@quotient,c
  6462  002B5C  5009               	movf	___awdiv@divisor,w,c
  6463  002B5E  100A               	iorwf	___awdiv@divisor+1,w,c
  6464  002B60  B4D8               	btfsc	status,2,c
  6465  002B62  D01C               	goto	l2728
  6466  002B64  0E01               	movlw	1
  6467  002B66  6E0B               	movwf	___awdiv@counter,c
  6468  002B68  D004               	goto	l2714
  6469  002B6A                     l2712:
  6470  002B6A  90D8               	bcf	status,0,c
  6471  002B6C  3609               	rlcf	___awdiv@divisor,f,c
  6472  002B6E  360A               	rlcf	___awdiv@divisor+1,f,c
  6473  002B70  2A0B               	incf	___awdiv@counter,f,c
  6474  002B72                     l2714:
  6475  002B72  AE0A               	btfss	___awdiv@divisor+1,7,c
  6476  002B74  D7FA               	goto	l2712
  6477  002B76                     l2716:
  6478  002B76  90D8               	bcf	status,0,c
  6479  002B78  360D               	rlcf	___awdiv@quotient,f,c
  6480  002B7A  360E               	rlcf	___awdiv@quotient+1,f,c
  6481  002B7C  5009               	movf	___awdiv@divisor,w,c
  6482  002B7E  5C07               	subwf	___awdiv@dividend,w,c
  6483  002B80  500A               	movf	___awdiv@divisor+1,w,c
  6484  002B82  5808               	subwfb	___awdiv@dividend+1,w,c
  6485  002B84  A0D8               	btfss	status,0,c
  6486  002B86  D005               	goto	l2724
  6487  002B88  5009               	movf	___awdiv@divisor,w,c
  6488  002B8A  5E07               	subwf	___awdiv@dividend,f,c
  6489  002B8C  500A               	movf	___awdiv@divisor+1,w,c
  6490  002B8E  5A08               	subwfb	___awdiv@dividend+1,f,c
  6491  002B90  800D               	bsf	___awdiv@quotient,0,c
  6492  002B92                     l2724:
  6493  002B92  90D8               	bcf	status,0,c
  6494  002B94  320A               	rrcf	___awdiv@divisor+1,f,c
  6495  002B96  3209               	rrcf	___awdiv@divisor,f,c
  6496  002B98  2E0B               	decfsz	___awdiv@counter,f,c
  6497  002B9A  D7ED               	goto	l2716
  6498  002B9C                     l2728:
  6499  002B9C  500C               	movf	___awdiv@sign,w,c
  6500  002B9E  B4D8               	btfsc	status,2,c
  6501  002BA0  D004               	goto	l2732
  6502  002BA2  6C0D               	negf	___awdiv@quotient,c
  6503  002BA4  1E0E               	comf	___awdiv@quotient+1,f,c
  6504  002BA6  B0D8               	btfsc	status,0,c
  6505  002BA8  2A0E               	incf	___awdiv@quotient+1,f,c
  6506  002BAA                     l2732:
  6507  002BAA  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  6508  002BAE  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  6509  002BB2  0012               	return	
  6510  002BB4                     __end_of___awdiv:
  6511                           	opt stack 0
  6512                           tblptru	equ	0xFF8
  6513                           tblptrh	equ	0xFF7
  6514                           tblptrl	equ	0xFF6
  6515                           tablat	equ	0xFF5
  6516                           prodh	equ	0xFF4
  6517                           prodl	equ	0xFF3
  6518                           postinc0	equ	0xFEE
  6519                           wreg	equ	0xFE8
  6520                           indf2	equ	0xFDF
  6521                           postinc2	equ	0xFDE
  6522                           postdec2	equ	0xFDD
  6523                           fsr2h	equ	0xFDA
  6524                           fsr2l	equ	0xFD9
  6525                           status	equ	0xFD8
  6526                           
  6527 ;; *************** function _LCD_write_string *****************
  6528 ;; Defined at:
  6529 ;;		line 194 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  6530 ;; Parameters:    Size  Location     Type
  6531 ;;  buffer          2   17[COMRAM] PTR unsigned char 
  6532 ;;		 -> str(8), LCD_write_integer@convertedInt(6), 
  6533 ;; Auto vars:     Size  Location     Type
  6534 ;;		None
  6535 ;; Return value:  Size  Location     Type
  6536 ;;                  1    wreg      void 
  6537 ;; Registers used:
  6538 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6539 ;; Tracked objects:
  6540 ;;		On entry : 0/0
  6541 ;;		On exit  : 0/0
  6542 ;;		Unchanged: 0/0
  6543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6544 ;;      Params:         2       0       0       0       0       0       0       0       0
  6545 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6546 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6547 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6548 ;;Total ram usage:        2 bytes
  6549 ;; Hardware stack levels used:    1
  6550 ;; Hardware stack levels required when called:    5
  6551 ;; This function calls:
  6552 ;;		_LCD_write_char
  6553 ;; This function is called by:
  6554 ;;		_ricarica
  6555 ;;		_LCD_write_integer
  6556 ;; This function uses a non-reentrant model
  6557 ;;
  6558                           
  6559                           	psect	text21
  6560  002FE6                     __ptext21:
  6561                           	opt stack 0
  6562  002FE6                     _LCD_write_string:
  6563                           	opt stack 24
  6564                           
  6565                           ;src\LCD_44780.c: 197: while(*buffer){
  6566                           
  6567                           ;incstack = 0
  6568  002FE6  D009               	goto	l3306
  6569  002FE8                     l3302:
  6570                           
  6571                           ;src\LCD_44780.c: 200: LCD_write_char(*buffer);
  6572  002FE8  C012  FFD9         	movff	LCD_write_string@buffer,fsr2l
  6573  002FEC  C013  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
  6574  002FF0  50DF               	movf	indf2,w,c
  6575  002FF2  EC53  F016         	call	_LCD_write_char
  6576                           
  6577                           ;src\LCD_44780.c: 202: buffer++;
  6578  002FF6  4A12               	infsnz	LCD_write_string@buffer,f,c
  6579  002FF8  2A13               	incf	LCD_write_string@buffer+1,f,c
  6580  002FFA                     l3306:
  6581  002FFA  C012  FFD9         	movff	LCD_write_string@buffer,fsr2l
  6582  002FFE  C013  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
  6583  003002  50DF               	movf	indf2,w,c
  6584  003004  B4D8               	btfsc	status,2,c
  6585  003006  0012               	return	
  6586  003008  D7EF               	goto	l3302
  6587  00300A                     __end_of_LCD_write_string:
  6588                           	opt stack 0
  6589                           tblptru	equ	0xFF8
  6590                           tblptrh	equ	0xFF7
  6591                           tblptrl	equ	0xFF6
  6592                           tablat	equ	0xFF5
  6593                           prodh	equ	0xFF4
  6594                           prodl	equ	0xFF3
  6595                           postinc0	equ	0xFEE
  6596                           wreg	equ	0xFE8
  6597                           indf2	equ	0xFDF
  6598                           postinc2	equ	0xFDE
  6599                           postdec2	equ	0xFDD
  6600                           fsr2h	equ	0xFDA
  6601                           fsr2l	equ	0xFD9
  6602                           status	equ	0xFD8
  6603                           
  6604 ;; *************** function _LCD_goto_line *****************
  6605 ;; Defined at:
  6606 ;;		line 111 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  6607 ;; Parameters:    Size  Location     Type
  6608 ;;  line            1    wreg     unsigned char 
  6609 ;; Auto vars:     Size  Location     Type
  6610 ;;  line            1   12[COMRAM] unsigned char 
  6611 ;; Return value:  Size  Location     Type
  6612 ;;                  1    wreg      void 
  6613 ;; Registers used:
  6614 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6615 ;; Tracked objects:
  6616 ;;		On entry : 0/0
  6617 ;;		On exit  : 0/0
  6618 ;;		Unchanged: 0/0
  6619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6620 ;;      Params:         0       0       0       0       0       0       0       0       0
  6621 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6622 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6623 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6624 ;;Total ram usage:        1 bytes
  6625 ;; Hardware stack levels used:    1
  6626 ;; Hardware stack levels required when called:    4
  6627 ;; This function calls:
  6628 ;;		_LCD_send_command
  6629 ;; This function is called by:
  6630 ;;		_ricarica
  6631 ;;		_LCD_goto_xy
  6632 ;; This function uses a non-reentrant model
  6633 ;;
  6634                           
  6635                           	psect	text22
  6636  002A78                     __ptext22:
  6637                           	opt stack 0
  6638  002A78                     _LCD_goto_line:
  6639                           	opt stack 25
  6640                           
  6641                           ;incstack = 0
  6642                           ;LCD_goto_line@line stored from wreg
  6643  002A78  6E0D               	movwf	LCD_goto_line@line,c
  6644                           
  6645                           ;src\LCD_44780.c: 113: switch(line) {
  6646  002A7A  D04C               	goto	l3290
  6647  002A7C                     l3282:
  6648  002A7C  0E00               	movlw	0
  6649  002A7E  6E09               	movwf	LCD_send_command@D2,c
  6650  002A80  0E00               	movlw	0
  6651  002A82  6E0A               	movwf	LCD_send_command@D1,c
  6652  002A84  0E00               	movlw	0
  6653  002A86  6E0B               	movwf	LCD_send_command@D0,c
  6654  002A88  0E01               	movlw	1
  6655  002A8A  EC75  F017         	call	_LCD_send_command
  6656                           
  6657                           ;src\LCD_44780.c: 116: LCD_send_command(0,0,0,0);
  6658  002A8E  0E00               	movlw	0
  6659  002A90  6E09               	movwf	LCD_send_command@D2,c
  6660  002A92  0E00               	movlw	0
  6661  002A94  6E0A               	movwf	LCD_send_command@D1,c
  6662  002A96  0E00               	movlw	0
  6663  002A98  6E0B               	movwf	LCD_send_command@D0,c
  6664  002A9A  0E00               	movlw	0
  6665  002A9C  EC75  F017         	call	_LCD_send_command
  6666                           
  6667                           ;src\LCD_44780.c: 117: break;
  6668  002AA0  0012               	return	
  6669  002AA2                     l3284:
  6670  002AA2  0E01               	movlw	1
  6671  002AA4  6E09               	movwf	LCD_send_command@D2,c
  6672  002AA6  0E00               	movlw	0
  6673  002AA8  6E0A               	movwf	LCD_send_command@D1,c
  6674  002AAA  0E00               	movlw	0
  6675  002AAC  6E0B               	movwf	LCD_send_command@D0,c
  6676  002AAE  0E01               	movlw	1
  6677  002AB0  EC75  F017         	call	_LCD_send_command
  6678                           
  6679                           ;src\LCD_44780.c: 120: LCD_send_command(0,0,0,0);
  6680  002AB4  0E00               	movlw	0
  6681  002AB6  6E09               	movwf	LCD_send_command@D2,c
  6682  002AB8  0E00               	movlw	0
  6683  002ABA  6E0A               	movwf	LCD_send_command@D1,c
  6684  002ABC  0E00               	movlw	0
  6685  002ABE  6E0B               	movwf	LCD_send_command@D0,c
  6686  002AC0  0E00               	movlw	0
  6687  002AC2  EC75  F017         	call	_LCD_send_command
  6688                           
  6689                           ;src\LCD_44780.c: 121: break;
  6690  002AC6  0012               	return	
  6691  002AC8                     l3286:
  6692  002AC8  0E00               	movlw	0
  6693  002ACA  6E09               	movwf	LCD_send_command@D2,c
  6694  002ACC  0E00               	movlw	0
  6695  002ACE  6E0A               	movwf	LCD_send_command@D1,c
  6696  002AD0  0E01               	movlw	1
  6697  002AD2  6E0B               	movwf	LCD_send_command@D0,c
  6698  002AD4  0E01               	movlw	1
  6699  002AD6  EC75  F017         	call	_LCD_send_command
  6700                           
  6701                           ;src\LCD_44780.c: 124: LCD_send_command(0,1,0,0);
  6702  002ADA  0E01               	movlw	1
  6703  002ADC  6E09               	movwf	LCD_send_command@D2,c
  6704  002ADE  0E00               	movlw	0
  6705  002AE0  6E0A               	movwf	LCD_send_command@D1,c
  6706  002AE2  0E00               	movlw	0
  6707  002AE4  6E0B               	movwf	LCD_send_command@D0,c
  6708  002AE6  0E00               	movlw	0
  6709  002AE8  EC75  F017         	call	_LCD_send_command
  6710                           
  6711                           ;src\LCD_44780.c: 125: break;
  6712  002AEC  0012               	return	
  6713  002AEE                     l3288:
  6714  002AEE  0E01               	movlw	1
  6715  002AF0  6E09               	movwf	LCD_send_command@D2,c
  6716  002AF2  0E00               	movlw	0
  6717  002AF4  6E0A               	movwf	LCD_send_command@D1,c
  6718  002AF6  0E01               	movlw	1
  6719  002AF8  6E0B               	movwf	LCD_send_command@D0,c
  6720  002AFA  0E01               	movlw	1
  6721  002AFC  EC75  F017         	call	_LCD_send_command
  6722                           
  6723                           ;src\LCD_44780.c: 128: LCD_send_command(0,1,0,0);
  6724  002B00  0E01               	movlw	1
  6725  002B02  6E09               	movwf	LCD_send_command@D2,c
  6726  002B04  0E00               	movlw	0
  6727  002B06  6E0A               	movwf	LCD_send_command@D1,c
  6728  002B08  0E00               	movlw	0
  6729  002B0A  6E0B               	movwf	LCD_send_command@D0,c
  6730  002B0C  0E00               	movlw	0
  6731  002B0E  EC75  F017         	call	_LCD_send_command
  6732                           
  6733                           ;src\LCD_44780.c: 129: }
  6734  002B12  0012               	return	
  6735  002B14                     l3290:
  6736  002B14  500D               	movf	LCD_goto_line@line,w,c
  6737                           
  6738                           ; Switch size 1, requested type "space"
  6739                           ; Number of cases is 4, Range of values is 1 to 4
  6740                           ; switch strategies available:
  6741                           ; Name         Instructions Cycles
  6742                           ; simple_byte           13     7 (average)
  6743                           ;	Chosen strategy is simple_byte
  6744  002B16  0A01               	xorlw	1	; case 1
  6745  002B18  B4D8               	btfsc	status,2,c
  6746  002B1A  D7B0               	goto	l3282
  6747  002B1C  0A03               	xorlw	3	; case 2
  6748  002B1E  B4D8               	btfsc	status,2,c
  6749  002B20  D7C0               	goto	l3284
  6750  002B22  0A01               	xorlw	1	; case 3
  6751  002B24  B4D8               	btfsc	status,2,c
  6752  002B26  D7D0               	goto	l3286
  6753  002B28  0A07               	xorlw	7	; case 4
  6754  002B2A  A4D8               	btfss	status,2,c
  6755  002B2C  0012               	return	
  6756  002B2E  D7DF               	goto	l3288
  6757  002B30                     __end_of_LCD_goto_line:
  6758                           	opt stack 0
  6759                           tblptru	equ	0xFF8
  6760                           tblptrh	equ	0xFF7
  6761                           tblptrl	equ	0xFF6
  6762                           tablat	equ	0xFF5
  6763                           prodh	equ	0xFF4
  6764                           prodl	equ	0xFF3
  6765                           postinc0	equ	0xFEE
  6766                           wreg	equ	0xFE8
  6767                           indf2	equ	0xFDF
  6768                           postinc2	equ	0xFDE
  6769                           postdec2	equ	0xFDD
  6770                           fsr2h	equ	0xFDA
  6771                           fsr2l	equ	0xFD9
  6772                           status	equ	0xFD8
  6773                           
  6774 ;; *************** function _inizializzazione *****************
  6775 ;; Defined at:
  6776 ;;		line 94 in file "tester.c"
  6777 ;; Parameters:    Size  Location     Type
  6778 ;;		None
  6779 ;; Auto vars:     Size  Location     Type
  6780 ;;		None
  6781 ;; Return value:  Size  Location     Type
  6782 ;;                  1    wreg      void 
  6783 ;; Registers used:
  6784 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6785 ;; Tracked objects:
  6786 ;;		On entry : 0/0
  6787 ;;		On exit  : 0/0
  6788 ;;		Unchanged: 0/0
  6789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6790 ;;      Params:         0       0       0       0       0       0       0       0       0
  6791 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6792 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6793 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6794 ;;Total ram usage:        0 bytes
  6795 ;; Hardware stack levels used:    1
  6796 ;; Hardware stack levels required when called:    6
  6797 ;; This function calls:
  6798 ;;		_LCD_clear
  6799 ;;		_LCD_initialize
  6800 ;;		_LCD_write_message
  6801 ;;		_delay_ms
  6802 ;; This function is called by:
  6803 ;;		_main
  6804 ;; This function uses a non-reentrant model
  6805 ;;
  6806                           
  6807                           	psect	text23
  6808  002DDA                     __ptext23:
  6809                           	opt stack 0
  6810  002DDA                     _inizializzazione:
  6811                           	opt stack 24
  6812                           
  6813                           ;tester.c: 95: LATA = 0x00;
  6814                           
  6815                           ;incstack = 0
  6816  002DDA  0E00               	movlw	0
  6817  002DDC  6E89               	movwf	3977,c	;volatile
  6818                           
  6819                           ;tester.c: 96: TRISA = 0b11111011;
  6820  002DDE  0EFB               	movlw	251
  6821  002DE0  6E92               	movwf	3986,c	;volatile
  6822                           
  6823                           ;tester.c: 98: LATB = 0x00;
  6824  002DE2  0E00               	movlw	0
  6825  002DE4  6E8A               	movwf	3978,c	;volatile
  6826                           
  6827                           ;tester.c: 99: TRISB = 0b00;
  6828  002DE6  0E00               	movlw	0
  6829  002DE8  6E93               	movwf	3987,c	;volatile
  6830                           
  6831                           ;tester.c: 101: LATC = 0x00;
  6832  002DEA  0E00               	movlw	0
  6833  002DEC  6E8B               	movwf	3979,c	;volatile
  6834                           
  6835                           ;tester.c: 102: TRISC = 0b11011111;
  6836  002DEE  0EDF               	movlw	223
  6837  002DF0  6E94               	movwf	3988,c	;volatile
  6838                           
  6839                           ;tester.c: 104: LCD_initialize(16);
  6840  002DF2  0E10               	movlw	16
  6841  002DF4  EC41  F014         	call	_LCD_initialize
  6842                           
  6843                           ;tester.c: 105: LCD_write_message("inizializzazione");
  6844  002DF8  0EB3               	movlw	low STR_5
  6845  002DFA  6E12               	movwf	LCD_write_message@buffer,c
  6846  002DFC  0E08               	movlw	high STR_5
  6847  002DFE  6E13               	movwf	LCD_write_message@buffer+1,c
  6848  002E00  ECA4  F017         	call	_LCD_write_message	;wreg free
  6849                           
  6850                           ;tester.c: 106: delay_ms(1000);
  6851  002E04  0E03               	movlw	3
  6852  002E06  6E08               	movwf	delay_ms@value_ms+1,c
  6853  002E08  0EE8               	movlw	232
  6854  002E0A  6E07               	movwf	delay_ms@value_ms,c
  6855  002E0C  EC5C  F017         	call	_delay_ms	;wreg free
  6856                           
  6857                           ;tester.c: 107: LCD_clear();
  6858  002E10  ECCD  F017         	call	_LCD_clear	;wreg free
  6859                           
  6860                           ;tester.c: 109: ADCON0 = 0b00000000;
  6861  002E14  0E00               	movlw	0
  6862  002E16  6EC2               	movwf	4034,c	;volatile
  6863                           
  6864                           ;tester.c: 110: ADCON1 = 0b00001011;
  6865  002E18  0E0B               	movlw	11
  6866  002E1A  6EC1               	movwf	4033,c	;volatile
  6867                           
  6868                           ;tester.c: 111: ADCON2 = 0b10110010;
  6869  002E1C  0EB2               	movlw	178
  6870  002E1E  6EC0               	movwf	4032,c	;volatile
  6871                           
  6872                           ;tester.c: 112: ADCON0bits.CHS3 = 0;
  6873  002E20  9AC2               	bcf	4034,5,c	;volatile
  6874                           
  6875                           ;tester.c: 113: ADCON0bits.CHS2 = 0;
  6876  002E22  98C2               	bcf	4034,4,c	;volatile
  6877                           
  6878                           ;tester.c: 114: ADCON0bits.CHS1 = 0;
  6879  002E24  96C2               	bcf	4034,3,c	;volatile
  6880  002E26  0012               	return		;funcret
  6881  002E28                     __end_of_inizializzazione:
  6882                           	opt stack 0
  6883                           tblptru	equ	0xFF8
  6884                           tblptrh	equ	0xFF7
  6885                           tblptrl	equ	0xFF6
  6886                           tablat	equ	0xFF5
  6887                           prodh	equ	0xFF4
  6888                           prodl	equ	0xFF3
  6889                           postinc0	equ	0xFEE
  6890                           wreg	equ	0xFE8
  6891                           indf2	equ	0xFDF
  6892                           postinc2	equ	0xFDE
  6893                           postdec2	equ	0xFDD
  6894                           fsr2h	equ	0xFDA
  6895                           fsr2l	equ	0xFD9
  6896                           status	equ	0xFD8
  6897                           
  6898 ;; *************** function _LCD_write_message *****************
  6899 ;; Defined at:
  6900 ;;		line 178 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  6901 ;; Parameters:    Size  Location     Type
  6902 ;;  buffer          2   17[COMRAM] PTR const unsigned char 
  6903 ;;		 -> STR_5(17), STR_4(17), STR_1(17), 
  6904 ;; Auto vars:     Size  Location     Type
  6905 ;;		None
  6906 ;; Return value:  Size  Location     Type
  6907 ;;                  1    wreg      void 
  6908 ;; Registers used:
  6909 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6910 ;; Tracked objects:
  6911 ;;		On entry : 0/0
  6912 ;;		On exit  : 0/0
  6913 ;;		Unchanged: 0/0
  6914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6915 ;;      Params:         2       0       0       0       0       0       0       0       0
  6916 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6917 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6918 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6919 ;;Total ram usage:        2 bytes
  6920 ;; Hardware stack levels used:    1
  6921 ;; Hardware stack levels required when called:    5
  6922 ;; This function calls:
  6923 ;;		_LCD_write_char
  6924 ;; This function is called by:
  6925 ;;		_ricarica
  6926 ;;		_inizializzazione
  6927 ;; This function uses a non-reentrant model
  6928 ;;
  6929                           
  6930                           	psect	text24
  6931  002F48                     __ptext24:
  6932                           	opt stack 0
  6933  002F48                     _LCD_write_message:
  6934                           	opt stack 24
  6935                           
  6936                           ;src\LCD_44780.c: 181: while(*buffer) {
  6937                           
  6938                           ;incstack = 0
  6939  002F48  D00A               	goto	l3298
  6940  002F4A                     l3294:
  6941                           
  6942                           ;src\LCD_44780.c: 184: LCD_write_char(*buffer);
  6943  002F4A  C012  FFF6         	movff	LCD_write_message@buffer,tblptrl
  6944  002F4E  C013  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
  6945  002F52                     	if	0	;tblptru may be non-zero
  6946  002F52                     	endif
  6947  002F52                     	if	0	;tblptru may be non-zero
  6948  002F52                     	endif
  6949  002F52  0008               	tblrd		*
  6950  002F54  50F5               	movf	tablat,w,c
  6951  002F56  EC53  F016         	call	_LCD_write_char
  6952                           
  6953                           ;src\LCD_44780.c: 186: buffer++;
  6954  002F5A  4A12               	infsnz	LCD_write_message@buffer,f,c
  6955  002F5C  2A13               	incf	LCD_write_message@buffer+1,f,c
  6956  002F5E                     l3298:
  6957  002F5E  C012  FFF6         	movff	LCD_write_message@buffer,tblptrl
  6958  002F62  C013  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
  6959  002F66                     	if	0	;tblptru may be non-zero
  6960  002F66                     	endif
  6961  002F66                     	if	0	;tblptru may be non-zero
  6962  002F66                     	endif
  6963  002F66  0008               	tblrd		*
  6964  002F68  50F5               	movf	tablat,w,c
  6965  002F6A  0900               	iorlw	0
  6966  002F6C  B4D8               	btfsc	status,2,c
  6967  002F6E  0012               	return	
  6968  002F70  D7EC               	goto	l3294
  6969  002F72                     __end_of_LCD_write_message:
  6970                           	opt stack 0
  6971                           tblptru	equ	0xFF8
  6972                           tblptrh	equ	0xFF7
  6973                           tblptrl	equ	0xFF6
  6974                           tablat	equ	0xFF5
  6975                           prodh	equ	0xFF4
  6976                           prodl	equ	0xFF3
  6977                           postinc0	equ	0xFEE
  6978                           wreg	equ	0xFE8
  6979                           indf2	equ	0xFDF
  6980                           postinc2	equ	0xFDE
  6981                           postdec2	equ	0xFDD
  6982                           fsr2h	equ	0xFDA
  6983                           fsr2l	equ	0xFD9
  6984                           status	equ	0xFD8
  6985                           
  6986 ;; *************** function _LCD_write_char *****************
  6987 ;; Defined at:
  6988 ;;		line 145 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  6989 ;; Parameters:    Size  Location     Type
  6990 ;;  value           1    wreg     unsigned char 
  6991 ;; Auto vars:     Size  Location     Type
  6992 ;;  value           1   16[COMRAM] unsigned char 
  6993 ;;  D0              1   15[COMRAM] unsigned char 
  6994 ;;  D1              1   14[COMRAM] unsigned char 
  6995 ;;  D2              1   13[COMRAM] unsigned char 
  6996 ;;  D3              1   12[COMRAM] unsigned char 
  6997 ;; Return value:  Size  Location     Type
  6998 ;;                  1    wreg      void 
  6999 ;; Registers used:
  7000 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7001 ;; Tracked objects:
  7002 ;;		On entry : 0/0
  7003 ;;		On exit  : 0/0
  7004 ;;		Unchanged: 0/0
  7005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7006 ;;      Params:         0       0       0       0       0       0       0       0       0
  7007 ;;      Locals:         5       0       0       0       0       0       0       0       0
  7008 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7009 ;;      Totals:         5       0       0       0       0       0       0       0       0
  7010 ;;Total ram usage:        5 bytes
  7011 ;; Hardware stack levels used:    1
  7012 ;; Hardware stack levels required when called:    4
  7013 ;; This function calls:
  7014 ;;		_LCD_send_command
  7015 ;; This function is called by:
  7016 ;;		_LCD_write_message
  7017 ;;		_LCD_write_string
  7018 ;; This function uses a non-reentrant model
  7019 ;;
  7020                           
  7021                           	psect	text25
  7022  002CA6                     __ptext25:
  7023                           	opt stack 0
  7024  002CA6                     _LCD_write_char:
  7025                           	opt stack 24
  7026                           
  7027                           ;incstack = 0
  7028                           ;LCD_write_char@value stored from wreg
  7029  002CA6  6E11               	movwf	LCD_write_char@value,c
  7030                           
  7031                           ;src\LCD_44780.c: 147: unsigned char D3,D2,D1,D0;
  7032                           ;src\LCD_44780.c: 149: LATBbits.LATB1 = 1;
  7033  002CA8  828A               	bsf	3978,1,c	;volatile
  7034                           
  7035                           ;src\LCD_44780.c: 152: D3 = (value & 0b10000000) >> 7;
  7036  002CAA  4411               	rlncf	LCD_write_char@value,w,c
  7037  002CAC  0B01               	andlw	1
  7038  002CAE  6E0D               	movwf	LCD_write_char@D3,c
  7039                           
  7040                           ;src\LCD_44780.c: 153: D2 = (value & 0b01000000) >> 6;
  7041  002CB0  4411               	rlncf	LCD_write_char@value,w,c
  7042  002CB2  46E8               	rlncf	wreg,f,c
  7043  002CB4  0B03               	andlw	3
  7044  002CB6  0B01               	andlw	1
  7045  002CB8  6E0E               	movwf	LCD_write_char@D2,c
  7046                           
  7047                           ;src\LCD_44780.c: 154: D1 = (value & 0b00100000) >> 5;
  7048  002CBA  3811               	swapf	LCD_write_char@value,w,c
  7049  002CBC  42E8               	rrncf	wreg,f,c
  7050  002CBE  0B07               	andlw	7
  7051  002CC0  0B01               	andlw	1
  7052  002CC2  6E0F               	movwf	LCD_write_char@D1,c
  7053                           
  7054                           ;src\LCD_44780.c: 155: D0 = (value & 0b00010000) >> 4;
  7055  002CC4  3811               	swapf	LCD_write_char@value,w,c
  7056  002CC6  0B0F               	andlw	15
  7057  002CC8  0B01               	andlw	1
  7058  002CCA  6E10               	movwf	LCD_write_char@D0,c
  7059                           
  7060                           ;src\LCD_44780.c: 157: LCD_send_command (D3,D2,D1,D0);
  7061  002CCC  C00E  F009         	movff	LCD_write_char@D2,LCD_send_command@D2
  7062  002CD0  C00F  F00A         	movff	LCD_write_char@D1,LCD_send_command@D1
  7063  002CD4  C010  F00B         	movff	LCD_write_char@D0,LCD_send_command@D0
  7064  002CD8  500D               	movf	LCD_write_char@D3,w,c
  7065  002CDA  EC75  F017         	call	_LCD_send_command
  7066                           
  7067                           ;src\LCD_44780.c: 160: D3 = (value & 0b00001000) >> 3;
  7068  002CDE  3811               	swapf	LCD_write_char@value,w,c
  7069  002CE0  46E8               	rlncf	wreg,f,c
  7070  002CE2  0B1F               	andlw	31
  7071  002CE4  0B01               	andlw	1
  7072  002CE6  6E0D               	movwf	LCD_write_char@D3,c
  7073                           
  7074                           ;src\LCD_44780.c: 161: D2 = (value & 0b00000100) >> 2;
  7075  002CE8  4011               	rrncf	LCD_write_char@value,w,c
  7076  002CEA  42E8               	rrncf	wreg,f,c
  7077  002CEC  0B3F               	andlw	63
  7078  002CEE  0B01               	andlw	1
  7079  002CF0  6E0E               	movwf	LCD_write_char@D2,c
  7080                           
  7081                           ;src\LCD_44780.c: 162: D1 = (value & 0b00000010) >> 1;
  7082  002CF2  90D8               	bcf	status,0,c
  7083  002CF4  3011               	rrcf	LCD_write_char@value,w,c
  7084  002CF6  0B01               	andlw	1
  7085  002CF8  6E0F               	movwf	LCD_write_char@D1,c
  7086                           
  7087                           ;src\LCD_44780.c: 163: D0 = (value & 0b00000001);
  7088  002CFA  5011               	movf	LCD_write_char@value,w,c
  7089  002CFC  0B01               	andlw	1
  7090  002CFE  6E10               	movwf	LCD_write_char@D0,c
  7091                           
  7092                           ;src\LCD_44780.c: 165: LCD_send_command (D3,D2,D1,D0);
  7093  002D00  C00E  F009         	movff	LCD_write_char@D2,LCD_send_command@D2
  7094  002D04  C00F  F00A         	movff	LCD_write_char@D1,LCD_send_command@D1
  7095  002D08  C010  F00B         	movff	LCD_write_char@D0,LCD_send_command@D0
  7096  002D0C  500D               	movf	LCD_write_char@D3,w,c
  7097  002D0E  EC75  F017         	call	_LCD_send_command
  7098                           
  7099                           ;src\LCD_44780.c: 167: LATBbits.LATB1 = 0;
  7100  002D12  928A               	bcf	3978,1,c	;volatile
  7101  002D14  0012               	return		;funcret
  7102  002D16                     __end_of_LCD_write_char:
  7103                           	opt stack 0
  7104                           tblptru	equ	0xFF8
  7105                           tblptrh	equ	0xFF7
  7106                           tblptrl	equ	0xFF6
  7107                           tablat	equ	0xFF5
  7108                           prodh	equ	0xFF4
  7109                           prodl	equ	0xFF3
  7110                           postinc0	equ	0xFEE
  7111                           wreg	equ	0xFE8
  7112                           indf2	equ	0xFDF
  7113                           postinc2	equ	0xFDE
  7114                           postdec2	equ	0xFDD
  7115                           fsr2h	equ	0xFDA
  7116                           fsr2l	equ	0xFD9
  7117                           status	equ	0xFD8
  7118                           
  7119 ;; *************** function _LCD_initialize *****************
  7120 ;; Defined at:
  7121 ;;		line 283 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  7122 ;; Parameters:    Size  Location     Type
  7123 ;;  quartz_frequ    1    wreg     unsigned char 
  7124 ;; Auto vars:     Size  Location     Type
  7125 ;;  quartz_frequ    1   14[COMRAM] unsigned char 
  7126 ;; Return value:  Size  Location     Type
  7127 ;;                  1    wreg      void 
  7128 ;; Registers used:
  7129 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7130 ;; Tracked objects:
  7131 ;;		On entry : 0/0
  7132 ;;		On exit  : 0/0
  7133 ;;		Unchanged: 0/0
  7134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7135 ;;      Params:         0       0       0       0       0       0       0       0       0
  7136 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7137 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7138 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7139 ;;Total ram usage:        1 bytes
  7140 ;; Hardware stack levels used:    1
  7141 ;; Hardware stack levels required when called:    5
  7142 ;; This function calls:
  7143 ;;		_LCD_clear
  7144 ;;		_LCD_cursor
  7145 ;;		_LCD_send_command
  7146 ;;		_delay_ms
  7147 ;;		_delay_set_quartz
  7148 ;; This function is called by:
  7149 ;;		_inizializzazione
  7150 ;; This function uses a non-reentrant model
  7151 ;;
  7152                           
  7153                           	psect	text26
  7154  002882                     __ptext26:
  7155                           	opt stack 0
  7156  002882                     _LCD_initialize:
  7157                           	opt stack 24
  7158                           
  7159                           ;incstack = 0
  7160                           ;LCD_initialize@quartz_frequency stored from wreg
  7161  002882  6E0F               	movwf	LCD_initialize@quartz_frequency,c
  7162                           
  7163                           ;src\LCD_44780.c: 285: delay_set_quartz (quartz_frequency);
  7164  002884  500F               	movf	LCD_initialize@quartz_frequency,w,c
  7165  002886  EC23  F018         	call	_delay_set_quartz
  7166                           
  7167                           ;src\LCD_44780.c: 287: LATBbits.LATB1 = 0x00;
  7168  00288A  928A               	bcf	3978,1,c	;volatile
  7169                           
  7170                           ;src\LCD_44780.c: 288: LATBbits.LATB3 = 0x00;
  7171  00288C  968A               	bcf	3978,3,c	;volatile
  7172                           
  7173                           ;src\LCD_44780.c: 289: LATBbits.LATB2 = 0x00;
  7174  00288E  948A               	bcf	3978,2,c	;volatile
  7175                           
  7176                           ;src\LCD_44780.c: 291: delay_ms (100);
  7177  002890  0E00               	movlw	0
  7178  002892  6E08               	movwf	delay_ms@value_ms+1,c
  7179  002894  0E64               	movlw	100
  7180  002896  6E07               	movwf	delay_ms@value_ms,c
  7181  002898  EC5C  F017         	call	_delay_ms	;wreg free
  7182                           
  7183                           ;src\LCD_44780.c: 292: LCD_send_command (0,0,1,1);
  7184  00289C  0E00               	movlw	0
  7185  00289E  6E09               	movwf	LCD_send_command@D2,c
  7186  0028A0  0E01               	movlw	1
  7187  0028A2  6E0A               	movwf	LCD_send_command@D1,c
  7188  0028A4  0E01               	movlw	1
  7189  0028A6  6E0B               	movwf	LCD_send_command@D0,c
  7190  0028A8  0E00               	movlw	0
  7191  0028AA  EC75  F017         	call	_LCD_send_command
  7192                           
  7193                           ;src\LCD_44780.c: 293: delay_ms (100);
  7194  0028AE  0E00               	movlw	0
  7195  0028B0  6E08               	movwf	delay_ms@value_ms+1,c
  7196  0028B2  0E64               	movlw	100
  7197  0028B4  6E07               	movwf	delay_ms@value_ms,c
  7198  0028B6  EC5C  F017         	call	_delay_ms	;wreg free
  7199                           
  7200                           ;src\LCD_44780.c: 294: LCD_send_command (0,0,1,1);
  7201  0028BA  0E00               	movlw	0
  7202  0028BC  6E09               	movwf	LCD_send_command@D2,c
  7203  0028BE  0E01               	movlw	1
  7204  0028C0  6E0A               	movwf	LCD_send_command@D1,c
  7205  0028C2  0E01               	movlw	1
  7206  0028C4  6E0B               	movwf	LCD_send_command@D0,c
  7207  0028C6  0E00               	movlw	0
  7208  0028C8  EC75  F017         	call	_LCD_send_command
  7209                           
  7210                           ;src\LCD_44780.c: 295: delay_ms (10);
  7211  0028CC  0E00               	movlw	0
  7212  0028CE  6E08               	movwf	delay_ms@value_ms+1,c
  7213  0028D0  0E0A               	movlw	10
  7214  0028D2  6E07               	movwf	delay_ms@value_ms,c
  7215  0028D4  EC5C  F017         	call	_delay_ms	;wreg free
  7216                           
  7217                           ;src\LCD_44780.c: 296: LCD_send_command (0,0,1,1);
  7218  0028D8  0E00               	movlw	0
  7219  0028DA  6E09               	movwf	LCD_send_command@D2,c
  7220  0028DC  0E01               	movlw	1
  7221  0028DE  6E0A               	movwf	LCD_send_command@D1,c
  7222  0028E0  0E01               	movlw	1
  7223  0028E2  6E0B               	movwf	LCD_send_command@D0,c
  7224  0028E4  0E00               	movlw	0
  7225  0028E6  EC75  F017         	call	_LCD_send_command
  7226                           
  7227                           ;src\LCD_44780.c: 298: LCD_send_command (0,0,1,0);
  7228  0028EA  0E00               	movlw	0
  7229  0028EC  6E09               	movwf	LCD_send_command@D2,c
  7230  0028EE  0E01               	movlw	1
  7231  0028F0  6E0A               	movwf	LCD_send_command@D1,c
  7232  0028F2  0E00               	movlw	0
  7233  0028F4  6E0B               	movwf	LCD_send_command@D0,c
  7234  0028F6  0E00               	movlw	0
  7235  0028F8  EC75  F017         	call	_LCD_send_command
  7236                           
  7237                           ;src\LCD_44780.c: 300: LCD_send_command (0,0,1,0);
  7238  0028FC  0E00               	movlw	0
  7239  0028FE  6E09               	movwf	LCD_send_command@D2,c
  7240  002900  0E01               	movlw	1
  7241  002902  6E0A               	movwf	LCD_send_command@D1,c
  7242  002904  0E00               	movlw	0
  7243  002906  6E0B               	movwf	LCD_send_command@D0,c
  7244  002908  0E00               	movlw	0
  7245  00290A  EC75  F017         	call	_LCD_send_command
  7246                           
  7247                           ;src\LCD_44780.c: 301: LCD_send_command (1,0,0,0);
  7248  00290E  0E00               	movlw	0
  7249  002910  6E09               	movwf	LCD_send_command@D2,c
  7250  002912  0E00               	movlw	0
  7251  002914  6E0A               	movwf	LCD_send_command@D1,c
  7252  002916  0E00               	movlw	0
  7253  002918  6E0B               	movwf	LCD_send_command@D0,c
  7254  00291A  0E01               	movlw	1
  7255  00291C  EC75  F017         	call	_LCD_send_command
  7256                           
  7257                           ;src\LCD_44780.c: 303: LCD_send_command (0,0,0,0);
  7258  002920  0E00               	movlw	0
  7259  002922  6E09               	movwf	LCD_send_command@D2,c
  7260  002924  0E00               	movlw	0
  7261  002926  6E0A               	movwf	LCD_send_command@D1,c
  7262  002928  0E00               	movlw	0
  7263  00292A  6E0B               	movwf	LCD_send_command@D0,c
  7264  00292C  0E00               	movlw	0
  7265  00292E  EC75  F017         	call	_LCD_send_command
  7266                           
  7267                           ;src\LCD_44780.c: 304: LCD_send_command (1,0,0,0);
  7268  002932  0E00               	movlw	0
  7269  002934  6E09               	movwf	LCD_send_command@D2,c
  7270  002936  0E00               	movlw	0
  7271  002938  6E0A               	movwf	LCD_send_command@D1,c
  7272  00293A  0E00               	movlw	0
  7273  00293C  6E0B               	movwf	LCD_send_command@D0,c
  7274  00293E  0E01               	movlw	1
  7275  002940  EC75  F017         	call	_LCD_send_command
  7276                           
  7277                           ;src\LCD_44780.c: 306: LCD_send_command (0,0,0,0);
  7278  002944  0E00               	movlw	0
  7279  002946  6E09               	movwf	LCD_send_command@D2,c
  7280  002948  0E00               	movlw	0
  7281  00294A  6E0A               	movwf	LCD_send_command@D1,c
  7282  00294C  0E00               	movlw	0
  7283  00294E  6E0B               	movwf	LCD_send_command@D0,c
  7284  002950  0E00               	movlw	0
  7285  002952  EC75  F017         	call	_LCD_send_command
  7286                           
  7287                           ;src\LCD_44780.c: 307: LCD_send_command (0,0,0,1);
  7288  002956  0E00               	movlw	0
  7289  002958  6E09               	movwf	LCD_send_command@D2,c
  7290  00295A  0E00               	movlw	0
  7291  00295C  6E0A               	movwf	LCD_send_command@D1,c
  7292  00295E  0E01               	movlw	1
  7293  002960  6E0B               	movwf	LCD_send_command@D0,c
  7294  002962  0E00               	movlw	0
  7295  002964  EC75  F017         	call	_LCD_send_command
  7296                           
  7297                           ;src\LCD_44780.c: 309: LCD_send_command (0,0,0,0);
  7298  002968  0E00               	movlw	0
  7299  00296A  6E09               	movwf	LCD_send_command@D2,c
  7300  00296C  0E00               	movlw	0
  7301  00296E  6E0A               	movwf	LCD_send_command@D1,c
  7302  002970  0E00               	movlw	0
  7303  002972  6E0B               	movwf	LCD_send_command@D0,c
  7304  002974  0E00               	movlw	0
  7305  002976  EC75  F017         	call	_LCD_send_command
  7306                           
  7307                           ;src\LCD_44780.c: 310: LCD_send_command (0,1,1,0);
  7308  00297A  0E01               	movlw	1
  7309  00297C  6E09               	movwf	LCD_send_command@D2,c
  7310  00297E  0E01               	movlw	1
  7311  002980  6E0A               	movwf	LCD_send_command@D1,c
  7312  002982  0E00               	movlw	0
  7313  002984  6E0B               	movwf	LCD_send_command@D0,c
  7314  002986  0E00               	movlw	0
  7315  002988  EC75  F017         	call	_LCD_send_command
  7316                           
  7317                           ;src\LCD_44780.c: 312: LCD_clear ();
  7318  00298C  ECCD  F017         	call	_LCD_clear	;wreg free
  7319                           
  7320                           ;src\LCD_44780.c: 314: LCD_cursor (0,0);
  7321  002990  0E00               	movlw	0
  7322  002992  6E0D               	movwf	LCD_cursor@blinking,c
  7323  002994  0E00               	movlw	0
  7324  002996  ECB9  F017         	call	_LCD_cursor
  7325  00299A  0012               	return		;funcret
  7326  00299C                     __end_of_LCD_initialize:
  7327                           	opt stack 0
  7328                           tblptru	equ	0xFF8
  7329                           tblptrh	equ	0xFF7
  7330                           tblptrl	equ	0xFF6
  7331                           tablat	equ	0xFF5
  7332                           prodh	equ	0xFF4
  7333                           prodl	equ	0xFF3
  7334                           postinc0	equ	0xFEE
  7335                           wreg	equ	0xFE8
  7336                           indf2	equ	0xFDF
  7337                           postinc2	equ	0xFDE
  7338                           postdec2	equ	0xFDD
  7339                           fsr2h	equ	0xFDA
  7340                           fsr2l	equ	0xFD9
  7341                           status	equ	0xFD8
  7342                           
  7343 ;; *************** function _delay_set_quartz *****************
  7344 ;; Defined at:
  7345 ;;		line 115 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
  7346 ;; Parameters:    Size  Location     Type
  7347 ;;  frequency       1    wreg     unsigned char 
  7348 ;; Auto vars:     Size  Location     Type
  7349 ;;  frequency       1    0[COMRAM] unsigned char 
  7350 ;; Return value:  Size  Location     Type
  7351 ;;                  1    wreg      void 
  7352 ;; Registers used:
  7353 ;;		wreg
  7354 ;; Tracked objects:
  7355 ;;		On entry : 0/0
  7356 ;;		On exit  : 0/0
  7357 ;;		Unchanged: 0/0
  7358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7359 ;;      Params:         0       0       0       0       0       0       0       0       0
  7360 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7361 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7362 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7363 ;;Total ram usage:        1 bytes
  7364 ;; Hardware stack levels used:    1
  7365 ;; This function calls:
  7366 ;;		Nothing
  7367 ;; This function is called by:
  7368 ;;		_LCD_initialize
  7369 ;;		_main
  7370 ;; This function uses a non-reentrant model
  7371 ;;
  7372                           
  7373                           	psect	text27
  7374  003046                     __ptext27:
  7375                           	opt stack 0
  7376  003046                     _delay_set_quartz:
  7377                           	opt stack 28
  7378                           
  7379                           ;incstack = 0
  7380                           ;delay_set_quartz@frequency stored from wreg
  7381  003046  6E01               	movwf	delay_set_quartz@frequency,c
  7382                           
  7383                           ;src\delay.c: 117: delay_quartz_frequency_value = frequency;
  7384  003048  C001  F05F         	movff	delay_set_quartz@frequency,_delay_quartz_frequency_value	;volatile
  7385  00304C  0012               	return		;funcret
  7386  00304E                     __end_of_delay_set_quartz:
  7387                           	opt stack 0
  7388                           tblptru	equ	0xFF8
  7389                           tblptrh	equ	0xFF7
  7390                           tblptrl	equ	0xFF6
  7391                           tablat	equ	0xFF5
  7392                           prodh	equ	0xFF4
  7393                           prodl	equ	0xFF3
  7394                           postinc0	equ	0xFEE
  7395                           wreg	equ	0xFE8
  7396                           indf2	equ	0xFDF
  7397                           postinc2	equ	0xFDE
  7398                           postdec2	equ	0xFDD
  7399                           fsr2h	equ	0xFDA
  7400                           fsr2l	equ	0xFD9
  7401                           status	equ	0xFD8
  7402                           
  7403 ;; *************** function _LCD_cursor *****************
  7404 ;; Defined at:
  7405 ;;		line 266 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  7406 ;; Parameters:    Size  Location     Type
  7407 ;;  active          1    wreg     unsigned char 
  7408 ;;  blinking        1   12[COMRAM] unsigned char 
  7409 ;; Auto vars:     Size  Location     Type
  7410 ;;  active          1   13[COMRAM] unsigned char 
  7411 ;; Return value:  Size  Location     Type
  7412 ;;                  1    wreg      void 
  7413 ;; Registers used:
  7414 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7415 ;; Tracked objects:
  7416 ;;		On entry : 0/0
  7417 ;;		On exit  : 0/0
  7418 ;;		Unchanged: 0/0
  7419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7420 ;;      Params:         1       0       0       0       0       0       0       0       0
  7421 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7422 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7423 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7424 ;;Total ram usage:        2 bytes
  7425 ;; Hardware stack levels used:    1
  7426 ;; Hardware stack levels required when called:    4
  7427 ;; This function calls:
  7428 ;;		_LCD_send_command
  7429 ;; This function is called by:
  7430 ;;		_LCD_initialize
  7431 ;; This function uses a non-reentrant model
  7432 ;;
  7433                           
  7434                           	psect	text28
  7435  002F72                     __ptext28:
  7436                           	opt stack 0
  7437  002F72                     _LCD_cursor:
  7438                           	opt stack 24
  7439                           
  7440                           ;incstack = 0
  7441                           ;LCD_cursor@active stored from wreg
  7442  002F72  6E0E               	movwf	LCD_cursor@active,c
  7443                           
  7444                           ;src\LCD_44780.c: 268: LCD_send_command (0,0,0,0);
  7445  002F74  0E00               	movlw	0
  7446  002F76  6E09               	movwf	LCD_send_command@D2,c
  7447  002F78  0E00               	movlw	0
  7448  002F7A  6E0A               	movwf	LCD_send_command@D1,c
  7449  002F7C  0E00               	movlw	0
  7450  002F7E  6E0B               	movwf	LCD_send_command@D0,c
  7451  002F80  0E00               	movlw	0
  7452  002F82  EC75  F017         	call	_LCD_send_command
  7453                           
  7454                           ;src\LCD_44780.c: 269: LCD_send_command (1,1,active,blinking);
  7455  002F86  0E01               	movlw	1
  7456  002F88  6E09               	movwf	LCD_send_command@D2,c
  7457  002F8A  C00E  F00A         	movff	LCD_cursor@active,LCD_send_command@D1
  7458  002F8E  C00D  F00B         	movff	LCD_cursor@blinking,LCD_send_command@D0
  7459  002F92  0E01               	movlw	1
  7460  002F94  EC75  F017         	call	_LCD_send_command
  7461  002F98  0012               	return		;funcret
  7462  002F9A                     __end_of_LCD_cursor:
  7463                           	opt stack 0
  7464                           tblptru	equ	0xFF8
  7465                           tblptrh	equ	0xFF7
  7466                           tblptrl	equ	0xFF6
  7467                           tablat	equ	0xFF5
  7468                           prodh	equ	0xFF4
  7469                           prodl	equ	0xFF3
  7470                           postinc0	equ	0xFEE
  7471                           wreg	equ	0xFE8
  7472                           indf2	equ	0xFDF
  7473                           postinc2	equ	0xFDE
  7474                           postdec2	equ	0xFDD
  7475                           fsr2h	equ	0xFDA
  7476                           fsr2l	equ	0xFD9
  7477                           status	equ	0xFD8
  7478                           
  7479 ;; *************** function _LCD_clear *****************
  7480 ;; Defined at:
  7481 ;;		line 257 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  7482 ;; Parameters:    Size  Location     Type
  7483 ;;		None
  7484 ;; Auto vars:     Size  Location     Type
  7485 ;;		None
  7486 ;; Return value:  Size  Location     Type
  7487 ;;                  1    wreg      void 
  7488 ;; Registers used:
  7489 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7490 ;; Tracked objects:
  7491 ;;		On entry : 0/0
  7492 ;;		On exit  : 0/0
  7493 ;;		Unchanged: 0/0
  7494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7495 ;;      Params:         0       0       0       0       0       0       0       0       0
  7496 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7497 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7498 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7499 ;;Total ram usage:        0 bytes
  7500 ;; Hardware stack levels used:    1
  7501 ;; Hardware stack levels required when called:    4
  7502 ;; This function calls:
  7503 ;;		_LCD_send_command
  7504 ;; This function is called by:
  7505 ;;		_LCD_initialize
  7506 ;;		_inizializzazione
  7507 ;; This function uses a non-reentrant model
  7508 ;;
  7509                           
  7510                           	psect	text29
  7511  002F9A                     __ptext29:
  7512                           	opt stack 0
  7513  002F9A                     _LCD_clear:
  7514                           	opt stack 24
  7515                           
  7516                           ;src\LCD_44780.c: 259: LCD_send_command (0,0,0,0);
  7517                           
  7518                           ;incstack = 0
  7519  002F9A  0E00               	movlw	0
  7520  002F9C  6E09               	movwf	LCD_send_command@D2,c
  7521  002F9E  0E00               	movlw	0
  7522  002FA0  6E0A               	movwf	LCD_send_command@D1,c
  7523  002FA2  0E00               	movlw	0
  7524  002FA4  6E0B               	movwf	LCD_send_command@D0,c
  7525  002FA6  0E00               	movlw	0
  7526  002FA8  EC75  F017         	call	_LCD_send_command
  7527                           
  7528                           ;src\LCD_44780.c: 260: LCD_send_command (0,0,0,1);
  7529  002FAC  0E00               	movlw	0
  7530  002FAE  6E09               	movwf	LCD_send_command@D2,c
  7531  002FB0  0E00               	movlw	0
  7532  002FB2  6E0A               	movwf	LCD_send_command@D1,c
  7533  002FB4  0E01               	movlw	1
  7534  002FB6  6E0B               	movwf	LCD_send_command@D0,c
  7535  002FB8  0E00               	movlw	0
  7536  002FBA  EC75  F017         	call	_LCD_send_command
  7537  002FBE  0012               	return		;funcret
  7538  002FC0                     __end_of_LCD_clear:
  7539                           	opt stack 0
  7540                           tblptru	equ	0xFF8
  7541                           tblptrh	equ	0xFF7
  7542                           tblptrl	equ	0xFF6
  7543                           tablat	equ	0xFF5
  7544                           prodh	equ	0xFF4
  7545                           prodl	equ	0xFF3
  7546                           postinc0	equ	0xFEE
  7547                           wreg	equ	0xFE8
  7548                           indf2	equ	0xFDF
  7549                           postinc2	equ	0xFDE
  7550                           postdec2	equ	0xFDD
  7551                           fsr2h	equ	0xFDA
  7552                           fsr2l	equ	0xFD9
  7553                           status	equ	0xFD8
  7554                           
  7555 ;; *************** function _LCD_send_command *****************
  7556 ;; Defined at:
  7557 ;;		line 61 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  7558 ;; Parameters:    Size  Location     Type
  7559 ;;  D3              1    wreg     unsigned char 
  7560 ;;  D2              1    8[COMRAM] unsigned char 
  7561 ;;  D1              1    9[COMRAM] unsigned char 
  7562 ;;  D0              1   10[COMRAM] unsigned char 
  7563 ;; Auto vars:     Size  Location     Type
  7564 ;;  D3              1   11[COMRAM] unsigned char 
  7565 ;; Return value:  Size  Location     Type
  7566 ;;                  1    wreg      void 
  7567 ;; Registers used:
  7568 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7569 ;; Tracked objects:
  7570 ;;		On entry : 0/0
  7571 ;;		On exit  : 0/0
  7572 ;;		Unchanged: 0/0
  7573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7574 ;;      Params:         3       0       0       0       0       0       0       0       0
  7575 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7576 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7577 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7578 ;;Total ram usage:        4 bytes
  7579 ;; Hardware stack levels used:    1
  7580 ;; Hardware stack levels required when called:    3
  7581 ;; This function calls:
  7582 ;;		_LCD_enable_pulse
  7583 ;; This function is called by:
  7584 ;;		_LCD_goto_line
  7585 ;;		_LCD_write_char
  7586 ;;		_LCD_clear
  7587 ;;		_LCD_cursor
  7588 ;;		_LCD_initialize
  7589 ;;		_LCD_home
  7590 ;;		_LCD_shift
  7591 ;;		_LCD_shift_cursor
  7592 ;; This function uses a non-reentrant model
  7593 ;;
  7594                           
  7595                           	psect	text30
  7596  002EEA                     __ptext30:
  7597                           	opt stack 0
  7598  002EEA                     _LCD_send_command:
  7599                           	opt stack 24
  7600                           
  7601                           ;incstack = 0
  7602                           ;LCD_send_command@D3 stored from wreg
  7603  002EEA  6E0C               	movwf	LCD_send_command@D3,c
  7604                           
  7605                           ;src\LCD_44780.c: 63: LATBbits.LATB4 = D0;
  7606  002EEC  B00B               	btfsc	LCD_send_command@D0,0,c
  7607  002EEE  D002               	bra	u2065
  7608  002EF0  988A               	bcf	3978,4,c	;volatile
  7609  002EF2  D001               	bra	u2066
  7610  002EF4                     u2065:
  7611  002EF4  888A               	bsf	3978,4,c	;volatile
  7612  002EF6                     u2066:
  7613                           
  7614                           ;src\LCD_44780.c: 64: LATBbits.LATB5 = D1;
  7615  002EF6  B00A               	btfsc	LCD_send_command@D1,0,c
  7616  002EF8  D002               	bra	u2075
  7617  002EFA  9A8A               	bcf	3978,5,c	;volatile
  7618  002EFC  D001               	bra	u2076
  7619  002EFE                     u2075:
  7620  002EFE  8A8A               	bsf	3978,5,c	;volatile
  7621  002F00                     u2076:
  7622                           
  7623                           ;src\LCD_44780.c: 65: LATBbits.LATB6 = D2;
  7624  002F00  B009               	btfsc	LCD_send_command@D2,0,c
  7625  002F02  D002               	bra	u2085
  7626  002F04  9C8A               	bcf	3978,6,c	;volatile
  7627  002F06  D001               	bra	u2086
  7628  002F08                     u2085:
  7629  002F08  8C8A               	bsf	3978,6,c	;volatile
  7630  002F0A                     u2086:
  7631                           
  7632                           ;src\LCD_44780.c: 66: LATBbits.LATB7 = D3;
  7633  002F0A  B00C               	btfsc	LCD_send_command@D3,0,c
  7634  002F0C  D002               	bra	u2095
  7635  002F0E  9E8A               	bcf	3978,7,c	;volatile
  7636  002F10  D001               	bra	u2096
  7637  002F12                     u2095:
  7638  002F12  8E8A               	bsf	3978,7,c	;volatile
  7639  002F14                     u2096:
  7640                           
  7641                           ;src\LCD_44780.c: 67: LCD_enable_pulse ();
  7642  002F14  EC14  F018         	call	_LCD_enable_pulse	;wreg free
  7643  002F18  0012               	return		;funcret
  7644  002F1A                     __end_of_LCD_send_command:
  7645                           	opt stack 0
  7646                           tblptru	equ	0xFF8
  7647                           tblptrh	equ	0xFF7
  7648                           tblptrl	equ	0xFF6
  7649                           tablat	equ	0xFF5
  7650                           prodh	equ	0xFF4
  7651                           prodl	equ	0xFF3
  7652                           postinc0	equ	0xFEE
  7653                           wreg	equ	0xFE8
  7654                           indf2	equ	0xFDF
  7655                           postinc2	equ	0xFDE
  7656                           postdec2	equ	0xFDD
  7657                           fsr2h	equ	0xFDA
  7658                           fsr2l	equ	0xFD9
  7659                           status	equ	0xFD8
  7660                           
  7661 ;; *************** function _LCD_enable_pulse *****************
  7662 ;; Defined at:
  7663 ;;		line 49 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  7664 ;; Parameters:    Size  Location     Type
  7665 ;;		None
  7666 ;; Auto vars:     Size  Location     Type
  7667 ;;		None
  7668 ;; Return value:  Size  Location     Type
  7669 ;;                  1    wreg      void 
  7670 ;; Registers used:
  7671 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7672 ;; Tracked objects:
  7673 ;;		On entry : 0/0
  7674 ;;		On exit  : 0/0
  7675 ;;		Unchanged: 0/0
  7676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7677 ;;      Params:         0       0       0       0       0       0       0       0       0
  7678 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7679 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7680 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7681 ;;Total ram usage:        0 bytes
  7682 ;; Hardware stack levels used:    1
  7683 ;; Hardware stack levels required when called:    2
  7684 ;; This function calls:
  7685 ;;		_delay_ms
  7686 ;; This function is called by:
  7687 ;;		_LCD_send_command
  7688 ;; This function uses a non-reentrant model
  7689 ;;
  7690                           
  7691                           	psect	text31
  7692  003028                     __ptext31:
  7693                           	opt stack 0
  7694  003028                     _LCD_enable_pulse:
  7695                           	opt stack 24
  7696                           
  7697                           ;src\LCD_44780.c: 51: LATBbits.LATB3 = 1;
  7698                           
  7699                           ;incstack = 0
  7700  003028  868A               	bsf	3978,3,c	;volatile
  7701                           
  7702                           ;src\LCD_44780.c: 52: delay_ms (1);
  7703  00302A  0E00               	movlw	0
  7704  00302C  6E08               	movwf	delay_ms@value_ms+1,c
  7705  00302E  0E01               	movlw	1
  7706  003030  6E07               	movwf	delay_ms@value_ms,c
  7707  003032  EC5C  F017         	call	_delay_ms	;wreg free
  7708                           
  7709                           ;src\LCD_44780.c: 53: LATBbits.LATB3 = 0;
  7710  003036  968A               	bcf	3978,3,c	;volatile
  7711                           
  7712                           ;src\LCD_44780.c: 54: delay_ms (1);
  7713  003038  0E00               	movlw	0
  7714  00303A  6E08               	movwf	delay_ms@value_ms+1,c
  7715  00303C  0E01               	movlw	1
  7716  00303E  6E07               	movwf	delay_ms@value_ms,c
  7717  003040  EC5C  F017         	call	_delay_ms	;wreg free
  7718  003044  0012               	return		;funcret
  7719  003046                     __end_of_LCD_enable_pulse:
  7720                           	opt stack 0
  7721                           tblptru	equ	0xFF8
  7722                           tblptrh	equ	0xFF7
  7723                           tblptrl	equ	0xFF6
  7724                           tablat	equ	0xFF5
  7725                           prodh	equ	0xFF4
  7726                           prodl	equ	0xFF3
  7727                           postinc0	equ	0xFEE
  7728                           wreg	equ	0xFE8
  7729                           indf2	equ	0xFDF
  7730                           postinc2	equ	0xFDE
  7731                           postdec2	equ	0xFDD
  7732                           fsr2h	equ	0xFDA
  7733                           fsr2l	equ	0xFD9
  7734                           status	equ	0xFD8
  7735                           
  7736 ;; *************** function _delay_ms *****************
  7737 ;; Defined at:
  7738 ;;		line 61 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
  7739 ;; Parameters:    Size  Location     Type
  7740 ;;  value_ms        2    6[COMRAM] unsigned int 
  7741 ;; Auto vars:     Size  Location     Type
  7742 ;;		None
  7743 ;; Return value:  Size  Location     Type
  7744 ;;                  1    wreg      void 
  7745 ;; Registers used:
  7746 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7747 ;; Tracked objects:
  7748 ;;		On entry : 0/0
  7749 ;;		On exit  : 0/0
  7750 ;;		Unchanged: 0/0
  7751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7752 ;;      Params:         2       0       0       0       0       0       0       0       0
  7753 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7754 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7755 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7756 ;;Total ram usage:        2 bytes
  7757 ;; Hardware stack levels used:    1
  7758 ;; Hardware stack levels required when called:    1
  7759 ;; This function calls:
  7760 ;;		___wmul
  7761 ;; This function is called by:
  7762 ;;		_LCD_enable_pulse
  7763 ;;		_LCD_initialize
  7764 ;;		_ricarica
  7765 ;;		_read_adc
  7766 ;;		_inizializzazione
  7767 ;;		_delay_s
  7768 ;; This function uses a non-reentrant model
  7769 ;;
  7770                           
  7771                           	psect	text32
  7772  002EB8                     __ptext32:
  7773                           	opt stack 0
  7774  002EB8                     _delay_ms:
  7775                           	opt stack 27
  7776                           
  7777                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
  7778                           
  7779                           ;incstack = 0
  7780  002EB8  C05F  F001         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
  7781  002EBC  6A02               	clrf	___wmul@multiplier+1,c
  7782  002EBE  C007  F003         	movff	delay_ms@value_ms,___wmul@multiplicand
  7783  002EC2  C008  F004         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
  7784  002EC6  ECE0  F017         	call	___wmul	;wreg free
  7785  002ECA  C001  F05B         	movff	?___wmul,_clock_counter_reference	;volatile
  7786  002ECE  C002  F05C         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
  7787                           
  7788                           ;src\delay.c: 75: while (clock_counter_reference) {
  7789  002ED2  D006               	goto	l126
  7790  002ED4                     l2344:
  7791                           
  7792                           ;src\delay.c: 85: _delay(240);
  7793  002ED4  0E50               	movlw	80
  7794  002ED6                     u4187:
  7795  002ED6  2EE8               	decfsz	wreg,f,c
  7796  002ED8  D7FE               	goto	u4187
  7797                           
  7798                           ;src\delay.c: 88: clock_counter_reference--;
  7799  002EDA  065B               	decf	_clock_counter_reference,f,c	;volatile
  7800  002EDC  A0D8               	btfss	status,0,c
  7801  002EDE  065C               	decf	_clock_counter_reference+1,f,c	;volatile
  7802  002EE0                     l126:
  7803  002EE0  505B               	movf	_clock_counter_reference,w,c	;volatile
  7804  002EE2  105C               	iorwf	_clock_counter_reference+1,w,c	;volatile
  7805  002EE4  B4D8               	btfsc	status,2,c
  7806  002EE6  0012               	return	
  7807  002EE8  D7F5               	goto	l2344
  7808  002EEA                     __end_of_delay_ms:
  7809                           	opt stack 0
  7810                           tblptru	equ	0xFF8
  7811                           tblptrh	equ	0xFF7
  7812                           tblptrl	equ	0xFF6
  7813                           tablat	equ	0xFF5
  7814                           prodh	equ	0xFF4
  7815                           prodl	equ	0xFF3
  7816                           postinc0	equ	0xFEE
  7817                           wreg	equ	0xFE8
  7818                           indf2	equ	0xFDF
  7819                           postinc2	equ	0xFDE
  7820                           postdec2	equ	0xFDD
  7821                           fsr2h	equ	0xFDA
  7822                           fsr2l	equ	0xFD9
  7823                           status	equ	0xFD8
  7824                           
  7825 ;; *************** function ___wmul *****************
  7826 ;; Defined at:
  7827 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\Umul16.c"
  7828 ;; Parameters:    Size  Location     Type
  7829 ;;  multiplier      2    0[COMRAM] unsigned int 
  7830 ;;  multiplicand    2    2[COMRAM] unsigned int 
  7831 ;; Auto vars:     Size  Location     Type
  7832 ;;  product         2    4[COMRAM] unsigned int 
  7833 ;; Return value:  Size  Location     Type
  7834 ;;                  2    0[COMRAM] unsigned int 
  7835 ;; Registers used:
  7836 ;;		wreg, status,2, status,0, prodl, prodh
  7837 ;; Tracked objects:
  7838 ;;		On entry : 0/0
  7839 ;;		On exit  : 0/0
  7840 ;;		Unchanged: 0/0
  7841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7842 ;;      Params:         4       0       0       0       0       0       0       0       0
  7843 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7844 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7845 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7846 ;;Total ram usage:        6 bytes
  7847 ;; Hardware stack levels used:    1
  7848 ;; This function calls:
  7849 ;;		Nothing
  7850 ;; This function is called by:
  7851 ;;		_delay_ms
  7852 ;;		_read_adc
  7853 ;;		_sprintf
  7854 ;; This function uses a non-reentrant model
  7855 ;;
  7856                           
  7857                           	psect	text33
  7858  002FC0                     __ptext33:
  7859                           	opt stack 0
  7860  002FC0                     ___wmul:
  7861                           	opt stack 28
  7862                           
  7863                           ;incstack = 0
  7864  002FC0  5001               	movf	___wmul@multiplier,w,c
  7865  002FC2  0203               	mulwf	___wmul@multiplicand,c
  7866  002FC4  CFF3 F005          	movff	prodl,___wmul@product
  7867  002FC8  CFF4 F006          	movff	prodh,___wmul@product+1
  7868  002FCC  5001               	movf	___wmul@multiplier,w,c
  7869  002FCE  0204               	mulwf	___wmul@multiplicand+1,c
  7870  002FD0  50F3               	movf	prodl,w,c
  7871  002FD2  2606               	addwf	___wmul@product+1,f,c
  7872  002FD4  5002               	movf	___wmul@multiplier+1,w,c
  7873  002FD6  0203               	mulwf	___wmul@multiplicand,c
  7874  002FD8  50F3               	movf	prodl,w,c
  7875  002FDA  2606               	addwf	___wmul@product+1,f,c
  7876  002FDC  C005  F001         	movff	___wmul@product,?___wmul
  7877  002FE0  C006  F002         	movff	___wmul@product+1,?___wmul+1
  7878  002FE4  0012               	return	
  7879  002FE6                     __end_of___wmul:
  7880                           	opt stack 0
  7881                           tblptru	equ	0xFF8
  7882                           tblptrh	equ	0xFF7
  7883                           tblptrl	equ	0xFF6
  7884                           tablat	equ	0xFF5
  7885                           prodh	equ	0xFF4
  7886                           prodl	equ	0xFF3
  7887                           postinc0	equ	0xFEE
  7888                           wreg	equ	0xFE8
  7889                           indf2	equ	0xFDF
  7890                           postinc2	equ	0xFDE
  7891                           postdec2	equ	0xFDD
  7892                           fsr2h	equ	0xFDA
  7893                           fsr2l	equ	0xFD9
  7894                           status	equ	0xFD8
  7895                           tblptru	equ	0xFF8
  7896                           tblptrh	equ	0xFF7
  7897                           tblptrl	equ	0xFF6
  7898                           tablat	equ	0xFF5
  7899                           prodh	equ	0xFF4
  7900                           prodl	equ	0xFF3
  7901                           postinc0	equ	0xFEE
  7902                           wreg	equ	0xFE8
  7903                           indf2	equ	0xFDF
  7904                           postinc2	equ	0xFDE
  7905                           postdec2	equ	0xFDD
  7906                           fsr2h	equ	0xFDA
  7907                           fsr2l	equ	0xFD9
  7908                           status	equ	0xFD8
  7909                           
  7910                           	psect	rparam
  7911  0000                     tblptru	equ	0xFF8
  7912                           tblptrh	equ	0xFF7
  7913                           tblptrl	equ	0xFF6
  7914                           tablat	equ	0xFF5
  7915                           prodh	equ	0xFF4
  7916                           prodl	equ	0xFF3
  7917                           postinc0	equ	0xFEE
  7918                           wreg	equ	0xFE8
  7919                           indf2	equ	0xFDF
  7920                           postinc2	equ	0xFDE
  7921                           postdec2	equ	0xFDD
  7922                           fsr2h	equ	0xFDA
  7923                           fsr2l	equ	0xFD9
  7924                           status	equ	0xFD8


Data Sizes:
    Strings     66
    Constant    144
    Data        4
    BSS         24
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     90      95
    BANK0           160     25      54
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    sp__utoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(COMRAM[6]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_3(CODE[7]), STR_2(CODE[8]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 8
		 -> str(BANK0[8]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(COMRAM[6]), 

    LCD_write_string@buffer	PTR unsigned char  size(2) Largest target is 8
		 -> str(BANK0[8]), LCD_write_integer@convertedInt(COMRAM[6]), 

    LCD_write_message@buffer	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    _ricarica->_sprintf
    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _read_adc->___flmul
    ___xxtofl->___awdiv
    ___flmul->___awdiv
    ___awdiv->___awmod
    ___awdiv->___wmul
    _LCD_write_string->_LCD_write_char
    _LCD_goto_line->_LCD_send_command
    _inizializzazione->_LCD_write_message
    _LCD_write_message->_LCD_write_char
    _LCD_write_char->_LCD_send_command
    _LCD_initialize->_LCD_cursor
    _LCD_cursor->_LCD_send_command
    _LCD_clear->_LCD_send_command
    _LCD_enable_pulse->_delay_ms
    _delay_ms->___wmul

Critical Paths under _main in BANK0

    _ricarica->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  121318
                            ___fldiv
                   _delay_set_quartz
                   _inizializzazione
                           _read_adc
                           _ricarica
 ---------------------------------------------------------------------------------
 (1) _ricarica                                             0     0      0   68062
                      _LCD_goto_line
                  _LCD_write_message
                   _LCD_write_string
                             ___flge
                           _delay_ms
                           _read_adc
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             43    35      8   31563
                                             80 COMRAM    10     2      8
                                              0 BANK0     25    25      0
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               13     9      4    7261
                                             39 COMRAM     9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              17    13      4    7063
                                             39 COMRAM    13     9      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         17     9      8     431
                                              0 COMRAM    17     9      8
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          14     6      8     431
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     543
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     418
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     421
                                             48 COMRAM    10     6      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    2617
                                             72 COMRAM     8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    2342
                                             52 COMRAM    20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     109
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8    1078
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) _read_adc                                             3     3      0    9665
                                             39 COMRAM     3     3      0
                            ___awdiv
                            ___fldiv
                            ___flmul
                             ___wmul
                           ___xxtofl
                           _delay_ms
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     514
                                             14 COMRAM    14    10      4
                            ___awdiv (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    3488
                                             14 COMRAM    25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    1433
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1836
                                              6 COMRAM     8     4      4
                            ___awmod (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCD_write_string                                     2     0      2    8290
                                             17 COMRAM     2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (2) _LCD_goto_line                                        1     1      0    7715
                                             12 COMRAM     1     1      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (1) _inizializzazione                                     0     0      0   42136
                          _LCD_clear
                     _LCD_initialize
                  _LCD_write_message
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _LCD_write_message                                    2     0      2    8290
                                             17 COMRAM     2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (3) _LCD_write_char                                       5     5      0    8053
                                             12 COMRAM     5     5      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_initialize                                       1     1      0   24692
                                             14 COMRAM     1     1      0
                          _LCD_clear
                         _LCD_cursor
                   _LCD_send_command
                           _delay_ms
                   _delay_set_quartz
 ---------------------------------------------------------------------------------
 (3) _delay_set_quartz                                     1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _LCD_cursor                                           2     1      1    7801
                                             12 COMRAM     2     1      1
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (3) _LCD_clear                                            0     0      0    7693
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (4) _LCD_send_command                                     4     1      3    7693
                                              8 COMRAM     4     1      3
                   _LCD_enable_pulse
 ---------------------------------------------------------------------------------
 (5) _LCD_enable_pulse                                     0     0      0    1461
                           _delay_ms
 ---------------------------------------------------------------------------------
 (3) _delay_ms                                             2     0      2    1461
                                              6 COMRAM     2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     799
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___fldiv
   _delay_set_quartz
   _inizializzazione
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _delay_ms
       ___wmul
   _read_adc
     ___awdiv
       ___awmod (ARG)
       ___wmul (ARG)
     ___fldiv
     ___flmul
       ___awdiv (ARG)
         ___awmod (ARG)
         ___wmul (ARG)
       ___awmod (ARG)
     ___wmul
     ___xxtofl
       ___awdiv (ARG)
         ___awmod (ARG)
         ___wmul (ARG)
       ___wmul (ARG)
     _delay_ms
       ___wmul
   _ricarica
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _LCD_write_string
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     ___flge
     _delay_ms
       ___wmul
     _read_adc
       ___awdiv
         ___awmod (ARG)
         ___wmul (ARG)
       ___fldiv
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
         ___awmod (ARG)
       ___wmul
       ___xxtofl
         ___awdiv (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       _delay_ms
         ___wmul
     _sprintf
       ___awdiv
         ___awmod (ARG)
         ___wmul (ARG)
       ___fladd
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
             ___wmul (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
               ___wmul (ARG)
             ___awmod (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
         ___awmod (ARG)
       ___flneg
       ___flsub
         ___fladd
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
               ___wmul (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
                 ___wmul (ARG)
               ___awmod (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
       ___fltol
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
             ___wmul (ARG)
           ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
             ___wmul (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
               ___wmul (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
       ___wmul
       ___xxtofl
         ___awdiv (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
           ___wmul (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
             ___wmul (ARG)
           ___awmod (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
           ___wmul (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
             ___wmul (ARG)
           ___awmod (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     19      36       5       33.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5A      5F       1      100.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      95      20        0.0%
DATA                 0      0      95       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Sun Feb 28 13:08:26 2016

                  ___fldiv@aexp 0019                    ___fldiv@bexp 0018       __size_of_delay_set_quartz 0008  
                  ___fldiv@sign 000D                    ___awdiv@sign 000C                     __CFG_BOR$ON 000000  
           ___wmul@multiplicand 0003                     __CFG_BORV$3 000000                    __CFG_CP0$OFF 000000  
                  __CFG_CP1$OFF 000000                    __CFG_CP2$OFF 000000                    __CFG_CP3$OFF 000000  
                           l126 2EE0                             l160 226E                             l170 20DA  
                           l254 0E72                             l822 1D14                             l479 2750  
                           l583 2628                             l672 2C24                             l576 259A  
                           l833 1D80                             l489 2846                             l577 25C2  
                           l682 2D6A                             l852 157C                             l861 1792  
                           l766 19A4                             l783 1A92                             l767 199C  
                           l792 1AF6                             l768 197A                             l881 2474  
                           l874 23F6                             l869 1818                             l888 24B0  
                           l889 24C4                    __CFG_CPB$OFF 000000                    __CFG_CPD$OFF 000000  
                   ?_LCD_cursor 000D                             _str 0087                    ___awmod@sign 0006  
                           prod 000FF3                             wreg 000FE8                    __CFG_FOSC$HS 000000  
                  ___flmul@aexp 0020                    ___flmul@bexp 0021                    ___flmul@sign 001B  
                  ___flmul@temp 0026                    ___flmul@prod 0022                    __CFG_LVP$OFF 000000  
        __size_of_LCD_goto_line 00B8                    ___fltol@exp1 003A                    __CFG_WDT$OFF 000000  
                          l3000 1BB8                            l3100 1DE8                            l3020 1BF8  
                          l3110 1E1E                            l3102 1DF6                            l3112 1E20  
                          l3104 1E12                            l3040 1C66                            l3032 1C3E  
                          l3016 1BF4                            l2400 18C4                            l3050 1CC4  
                          l3130 2796                            l3210 2BE6                            l3302 2FE8  
                          l3070 1D2A                            l3134 27CA                            l2502 1AB6  
                          l3206 2BD6                            l3230 2D38                            l2344 2ED4  
                          l3064 1D12                            l3144 287E                            l3152 2F36  
                          l2512 1ACC                            l2520 1ADA                            l2408 18E4  
                          l3208 2BE2                            l3400 097A                            l3306 2FFA  
                          l3058 1CEC                            l2602 159A                            l3250 2424  
                          l3138 2808                            l2450 1988                            l3162 29BA  
                          l3218 2C16                            l3234 2D5C                            l3226 2D28  
                          l3410 09B4                            l2700 2B44                            l3076 1D48  
                          l3252 242A                            l3244 2406                            l2452 198C  
                          l2372 1878                            l3228 2D34                            l3404 098A  
                          l3086 1D7C                            l3262 249A                            l3254 2436  
                          l2550 1B6A                            l2542 1B48                            l2518 1AD6  
                          l2438 1920                            l3190 2A4A                            l3182 2A26  
                          l3502 0D80                            l2712 2B6A                            l3096 1DC4  
                          l3264 24A6                            l3256 245C                            l3352 20BA  
                          l2552 1B6C                            l2528 1AF2                            l2376 187C  
                          l3192 2A50                            l3520 0E40                            l3504 0D86  
                          l3512 0E1A                            l3416 09CE                            l3408 0990  
                          l3282 2A7C                            l3290 2B14                            l2714 2B72  
                          l2706 2B54                            l2650 175A                            l3370 214A  
                          l2546 1B62                            l2538 1B3C                            l2474 19E4  
                          l2466 19C0                            l3178 2A16                            l3522 0E54  
                          l3514 0E28                            l3450 0B20                            l3442 0AA0  
                          l3426 0A20                            l3284 2AA2                            l2732 2BAA  
                          l2724 2B92                            l2716 2B76                            l2660 178E  
                          l2644 173C                            l3276 24F6                            l3356 20C2  
                          l2476 19E8                            l2484 19FA                            l2396 18C0  
                          l3196 2A66                            l3188 2A3E                            l3460 0BB6  
                          l3380 08E2                            l3294 2F4A                            l3286 2AC8  
                          l2670 17D6                            l2574 1528                            l2494 1A82  
                          l2910 25EE                            l2814 2068                            l2806 1F9C  
                          l3550 0FF8                            l3534 0EA4                            l3526 0E76  
                          l3470 0C2E                            l3454 0B4E                            l3288 2AEE  
                          l2728 2B9C                            l2592 1568                            l2576 152C  
                          l2920 2616                            l2760 2C84                            l2752 2C64  
                          l2744 2C4A                            l3480 0C98                            l3456 0B64  
                          l3640 234E                            l3298 2F5E                            l2674 17F4  
                          l2594 156C                            l2578 153C                            l2930 2658  
                          l2922 2622                            l2914 25FE                            l2754 2C6C  
                          l2834 12CA                            l3538 0F06                            l3466 0C00  
                          l3458 0BA0                            l3394 092A                            l3386 08FA  
                          l3722 2DD0                            l2676 1802                            l2756 2C70  
                          l2764 2C8E                            l2748 2C56                            l2852 14D2  
                          l2828 1226                            l3572 1094                            l3564 1044  
                          l3556 1010                            l3548 0FEA                            l3484 0D10  
                          l3580 10D6                            l3636 22FE                            l2686 1836  
                          l2598 1588                            l2950 26B8                            l2846 142E  
                          l2838 12F4                            l3486 0D16                            l3558 101E  
                          l3398 0964                            l2936 2676                            l2880 2560  
                          l2768 2C9C                            l2864 3020                            l3576 10B8  
                          l3568 1068                            l2970 2716                            l2874 2534  
                          l3498 0D5C                            l3578 10BC                            l2980 273E  
                          l2982 274A                            l2974 2726                            l2958 26E8  
                          l2996 1BB4                            STR_1 0891                            STR_2 08C4  
                          STR_3 08CC                            STR_4 08A2                            STR_5 08B3  
                          u2200 1960                            u2210 1962                            _LATA 000F89  
                          _LATB 000F8A                            _LATC 000F8B                            u2065 2EF4  
                          u2066 2EF6                            u2075 2EFE                            u2076 2F00  
                          u2085 2F08                            u2086 2F0A                            u2190 1950  
                          u2095 2F12                            u2096 2F14                            u3250 1DD2  
                          u3350 29D8                            u2650 17E4                            u2570 16FE  
                          u3355 29CE                            u2575 16F4                            u2911 2544  
                          u4187 2ED6                            u3840 0E6A                            u2891 2518  
                          _main 2D7C       __size_of_LCD_send_command 0030                            fsr2h 000FDA  
                          indf2 000FDF                            fsr2l 000FD9                            prodh 000FF4  
                          prodl 000FF3                            start 0000                   __CFG_IESO$OFF 000000  
               ___fldiv@new_exp 0012              __size_of_LCD_clear 0026                    _sprintf$1109 0060  
                 __CFG_MCLRE$ON 000000                    ___param_bank 000010        __end_of_LCD_enable_pulse 3046  
       __size_of_LCD_initialize 011A                   __CFG_PLLDIV$1 000000                  __CFG_CCP2MX$ON 000000  
                 ___fltol@sign1 0039                 __end_of___fladd 1B88                           ?_main 0001  
               __end_of___fldiv 1E3C                 __end_of___awdiv 2BB4                 __end_of___flneg 2F48  
               __end_of___awmod 2CA6                 __end_of___flmul 184C                 __end_of___flsub 2EB8  
               __end_of___fltol 2A78                 __end_of___lldiv 2C36                 ___awdiv@divisor 0009  
               __end_of___llmod 2D7C                 ___awdiv@counter 000B                   __CFG_USBDIV$1 000000  
                         _TRISA 000F92                           _TRISB 000F93                           _TRISC 000F94  
                 __CFG_PWRT$OFF 000000                   __CFG_WRT0$OFF 000000                   __CFG_WRT1$OFF 000000  
                 __CFG_WRT2$OFF 000000                   __CFG_WRT3$OFF 000000                  __CFG_EBTR0$OFF 000000  
                __CFG_FCMEN$OFF 000000                  __CFG_EBTR1$OFF 000000                  __CFG_EBTR2$OFF 000000  
                __CFG_EBTR3$OFF 000000                   __CFG_WRTB$OFF 000000                   __CFG_WRTC$OFF 000000  
                 __CFG_WRTD$OFF 000000                  __CFG_EBTRB$OFF 000000                 __end_of_dpowers 0891  
                         _scale 10E4                 __end_of_isdigit 3028                           tablat 000FF5  
                         status 000FD8                 __end_of_sprintf 10E4                _inizializzazione 2DDA  
                __CFG_PBADEN$ON 000000             __size_of_LCD_cursor 0028                 __initialization 2E28  
                  __end_of_main 2DDA                   _LCD_goto_line 2A78               ?_LCD_write_string 0012  
                        ??_main 005B                   __activetblptr 000002              ??_LCD_write_string 0014  
          __size_of__tdiv_to_l_ 0132               __end_of_LCD_clear 2FC0          LCD_write_string@buffer 0012  
                        _ADCON0 000FC2                          _ADCON1 000FC1                          _ADCON2 000FC0  
              ___llmod@dividend 0001                          ?_scale 0028                          _ADRESH 000FC4  
                        _ADRESL 000FC3                ___awdiv@dividend 0007                __end_of___xxtofl 2508  
              __end_of_delay_ms 2EEA                  __CFG_XINST$OFF 000000                __end_of__powers_ 0869  
                ?_LCD_goto_line 0001                          ___flge 2762                       ??___fladd 003D  
              _delay_set_quartz 3046                          ___wmul 2FC0                       ??___fldiv 0009  
                     ??___awdiv 000B                       ??___flneg 0005                  __CFG_STVREN$ON 000000  
                     ??___awmod 0005                       ??___flmul 0017                       ??___flsub 0051  
                     ??___fltol 0035                       ??___lldiv 0009                       ??___llmod 0009  
       __size_of_LCD_write_char 0070                __end_of_read_adc 2268                          _fround 1E3C  
LCD_initialize@quartz_frequency 000F                          clear_0 2E2E                ___awdiv@quotient 000D  
               ___awmod@divisor 0003                 ___awmod@counter 0005                __end_of_ricarica 23B8  
                  __pdataCOMRAM 005F                       ??_isdigit 0001                    __mediumconst 0000  
                        tblptrh 000FF7                          tblptrl 000FF6                          tblptru 000FF8  
                     ??_sprintf 0059                      ___flge@ff1 0001                      ___flge@ff2 0005  
                  ___xxtofl@arg 0019                    ___xxtofl@exp 0018                    ___xxtofl@val 000F  
                    __accesstop 0060         __end_of__initialization 2E68                      ___flneg@f1 0001  
              _LCD_send_command 2EEA                   ___rparam_used 000001                      ___fltol@f1 0031  
        LCD_write_integer@F4700 0079                  __pcstackCOMRAM 0001                    __pidataBANK0 304E  
                 __end_of_scale 14FC                  _LCD_initialize 2882               _LCD_write_message 2F48  
            ?_LCD_write_message 0012                      __div_to_l_ 263A                    ??_LCD_cursor 000E  
               __div_to_l_@exp1 000E             ??_LCD_write_message 0014                 __div_to_l_@cntr 000D  
                       ??_scale 002C                 __div_to_l_@quot 0009                      __pbssBANK0 0079  
                    __pnvCOMRAM 005B                   __div_to_l_@f1 0001                   __div_to_l_@f2 0005  
               ??_LCD_goto_line 000D              __end_of_LCD_cursor 2F9A          __end_of_LCD_initialize 299C  
                       ?___flge 0001                         ?___wmul 0001       __end_of_LCD_write_message 2F72  
             ?_LCD_enable_pulse 0001                         ?_fround 0028              ??_LCD_enable_pulse 0009  
      __end_of_inizializzazione 2E28                       ?___xxtofl 000F                LCD_cursor@active 000E  
                     ?_delay_ms 0007                 __CFG_VREGEN$OFF 000000                       ?_read_adc 0001  
                     ?_ricarica 0001               __end_of__npowers_ 0835                         __Hparam 0000  
                    _scale$1108 002C                         __Lparam 0000                delay_ms@value_ms 0007  
               ?_LCD_initialize 0001                 __size_of___flge 0120                         ___fladd 184C  
                       ___fldiv 1B88                         ___awdiv 2B30                         ___flneg 2F1A  
                       ___awmod 2C36                         ___flmul 14FC                         ___flsub 2E72  
                       ___fltol 299C                         ___lldiv 2BB4                 __size_of___wmul 0026  
                _LCD_write_char 2CA6                         ___llmod 2D16                    __psmallconst 0800  
                       __pcinit 2E28                 __size_of_fround 027A                         __ramtop 0800  
           LCD_write_char@value 0011                         __ptext0 2D7C                         __ptext1 2268  
                       __ptext2 08D4                         __ptext3 10E4                         __ptext4 300A  
                       __ptext5 1E3C                         __ptext6 2C36                         __ptext7 2508  
                       __ptext8 263A                         __ptext9 2D16                     ?__div_to_l_ 0001  
              LCD_write_char@D0 0010                LCD_write_char@D1 000F                LCD_write_char@D2 000E  
              LCD_write_char@D3 000D                         _dpowers 0869                         _current 007F  
                       _isdigit 300A                      ??___xxtofl 0013                ___awmod@dividend 0001  
                       _lettura 005D                      ??_delay_ms 0009        __end_of_delay_set_quartz 304E  
                       _sprintf 08D4                         _voltage 0083                       _LCD_clear 2F9A  
          end_of_initialization 2E68       __size_of_LCD_write_string 0024                    _combinazioni 0093  
                 __Lmediumconst 0000                      ??_read_adc 0028                      ??_ricarica 005B  
               ___lldiv@divisor 0005              LCD_cursor@blinking 000D                 ___lldiv@counter 000D  
        __end_of_LCD_write_char 2D16                         postdec2 000FDD                         postinc0 000FEE  
                       postinc2 000FDE      __size_of_LCD_write_message 002A                  __tdiv_to_l_@f1 0001  
                __tdiv_to_l_@f2 0005                   ??__tdiv_to_l_ 0009                       _PORTCbits 000F82  
      __end_of_LCD_send_command 2F1A                     ___fladd@grs 0048                   ___xxtofl@sign 0017  
                   ___fldiv@grs 0014                     ___fldiv@rem 000E                      ?_LCD_clear 0001  
       _clock_counter_reference 005B                     ___flmul@grs 001C             __size_of__div_to_l_ 0128  
               ?_LCD_write_char 0001                  __end_of___flge 2882                  __end_of___wmul 2FE6  
                 __pidataCOMRAM 3051                  __end_of_fround 20B6             start_initialization 2E28  
           __end_of__tdiv_to_l_ 263A                 ___llmod@divisor 0005                 ___llmod@counter 0009  
                      ??___flge 0009                        ??___wmul 0005                     __pdataBANK0 0093  
              __CFG_LPT1OSC$OFF 000000                        ??_fround 002C                   sprintf@tmpval 006E  
                     ___fladd@a 0039                       ___fladd@b 0035                      fround@prec 0034  
                     ___fldiv@a 0005                       ___fldiv@b 0001               ?_inizializzazione 0001  
                     ___flmul@a 0013                       ___flmul@b 000F                     __pbssCOMRAM 005D  
                     ___flsub@a 004D                       ___flsub@b 0049                   __pcstackBANK0 0060  
            ??_inizializzazione 0014               __size_of___xxtofl 0150       __size_of_LCD_enable_pulse 001E  
             __size_of_delay_ms 0032                     ??_LCD_clear 000D         LCD_write_message@buffer 0012  
              _LCD_write_string 2FE6                     sprintf@flag 0066                     sprintf@fval 0074  
                   sprintf@prec 0072                ??_LCD_initialize 000F                       __pnvBANK0 008F  
     delay_set_quartz@frequency 0001               __size_of_read_adc 01B2              LCD_send_command@D0 000B  
            LCD_send_command@D1 000A              LCD_send_command@D2 0009              LCD_send_command@D3 000C  
         __end_of_LCD_goto_line 2B30               __size_of_ricarica 0150                        ?___fladd 0035  
                      ?___fldiv 0001                        ?___awdiv 0007                        ?___flneg 0001  
                      ?___awmod 0001                        ?___flmul 000F                        ?___flsub 0049  
                      ?___fltol 0031                        ?___lldiv 0001                        ?___llmod 0001  
                     __npowers_ 0801                     __tdiv_to_l_ 2508                    ??__div_to_l_ 0009  
                   __smallconst 0800                        ?_isdigit 0001                        ?_sprintf 0051  
                __size_of_scale 0418               ?_delay_set_quartz 0001              ??_delay_set_quartz 0001  
                ___wmul@product 0005                        _LATBbits 000F8A                        _LATCbits 000F8B  
  _delay_quartz_frequency_value 005F              __end_of__div_to_l_ 2762                __CFG_WDTPS$32768 000000  
                    _ADCON0bits 000FC2               ___wmul@multiplier 0001               ?_LCD_send_command 0009  
            ??_LCD_send_command 000C                ??_LCD_write_char 000D               LCD_goto_line@line 000D  
                      __Hrparam 0000                        __Lrparam 0000                       read_adc@i 002A  
              __size_of___fladd 033C                __size_of___fldiv 02B4                __size_of___awdiv 0084  
              __size_of___flneg 002E                __size_of___awmod 0070                __size_of___flmul 0350  
              __size_of___flsub 0046                __size_of___fltol 00DC                __size_of___lldiv 0082  
              __size_of___llmod 0066                     _fround$1106 0030                     _fround$1107 002C  
                   _isdigit$733 0002                      sprintf@exp 006C                      sprintf@val 0068  
                      ___xxtofl 23B8                __size_of_isdigit 001E                        _delay_ms 2EB8  
              _LCD_enable_pulse 3028                        __ptext10 2BB4                        __ptext11 299C  
                      __ptext20 2B30                        __ptext12 2E72                        __ptext21 2FE6  
                      __ptext13 184C                        __ptext30 2EEA                        __ptext22 2A78  
                      __ptext14 2F1A                        __ptext31 3028                        __ptext23 2DDA  
                      __ptext15 2762                        __ptext32 2EB8                        __ptext24 2F48  
                      __ptext16 20B6                        __ptext33 2FC0                        __ptext25 2CA6  
                      __ptext17 23B8                        __ptext26 2882                        __ptext18 14FC  
                      __ptext27 3046                        __ptext19 1B88                        __ptext28 2F72  
                      __ptext29 2F9A                        __powers_ 0835                __size_of_sprintf 0810  
                      _read_adc 20B6                   __size_of_main 005E                        _ricarica 2268  
                      _rapporto 008F        __end_of_LCD_write_string 300A           __CFG_CPUDIV$OSC1_PLL2 000000  
                    _LCD_cursor 2F72                        isdigit@c 0003                        scale@scl 0030  
                     sprintf@ap 0064                __tdiv_to_l_@exp1 0011                       sprintf@sp 0051  
              __tdiv_to_l_@cntr 0010                __tdiv_to_l_@quot 000C                ___lldiv@dividend 0001  
     __size_of_inizializzazione 004E                    ?__tdiv_to_l_ 0001                        sprintf@c 0078  
                      sprintf@f 0053                ___lldiv@quotient 0009                   ___fladd@signs 0045  
                  ___fladd@aexp 0046                    ___fladd@bexp 0047  
