

Microchip Technology PIC18 LITE Macro Assembler V1.36 build -262312587 
                                                                                               Sat Feb 27 22:53:03 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    52                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    53  0000                     
    54                           	psect	idataCOMRAM
    55  002FA1                     __pidataCOMRAM:
    56                           	opt stack 0
    57                           
    58                           ;initializer for _delay_quartz_frequency_value
    59  002FA1  14                 	db	20
    60                           
    61                           	psect	idataBANK0
    62  002F9E                     __pidataBANK0:
    63                           	opt stack 0
    64                           
    65                           ;initializer for _combinazioni
    66  002F9E  00                 	db	0
    67  002F9F  01                 	db	1
    68  002FA0  03                 	db	3
    69                           
    70                           	psect	smallconst
    71  000800                     __psmallconst:
    72                           	opt stack 0
    73  000800  00                 	db	0
    74  000801                     __npowers_:
    75                           	opt stack 0
    76  000801  0000               	dw	0
    77  000803  3F80               	dw	16256
    78  000805  CCCD               	dw	52429
    79  000807  3DCC               	dw	15820
    80  000809  D70A               	dw	55050
    81  00080B  3C23               	dw	15395
    82  00080D  126F               	dw	4719
    83  00080F  3A83               	dw	14979
    84  000811  B717               	dw	46871
    85  000813  38D1               	dw	14545
    86  000815  C5AC               	dw	50604
    87  000817  3727               	dw	14119
    88  000819  37BD               	dw	14269
    89  00081B  3586               	dw	13702
    90  00081D  BF95               	dw	49045
    91  00081F  33D6               	dw	13270
    92  000821  CC77               	dw	52343
    93  000823  322B               	dw	12843
    94  000825  705F               	dw	28767
    95  000827  3089               	dw	12425
    96  000829  E6FF               	dw	59135
    97  00082B  2EDB               	dw	11995
    98  00082D  E508               	dw	58632
    99  00082F  1E3C               	dw	7740
   100  000831  4260               	dw	16992
   101  000833  0DA2               	dw	3490
   102  000835                     __end_of__npowers_:
   103                           	opt stack 0
   104  000835                     __powers_:
   105                           	opt stack 0
   106  000835  0000               	dw	0
   107  000837  3F80               	dw	16256
   108  000839  0000               	dw	0
   109  00083B  4120               	dw	16672
   110  00083D  0000               	dw	0
   111  00083F  42C8               	dw	17096
   112  000841  0000               	dw	0
   113  000843  447A               	dw	17530
   114  000845  4000               	dw	16384
   115  000847  461C               	dw	17948
   116  000849  5000               	dw	20480
   117  00084B  47C3               	dw	18371
   118  00084D  2400               	dw	9216
   119  00084F  4974               	dw	18804
   120  000851  9680               	dw	38528
   121  000853  4B18               	dw	19224
   122  000855  BC20               	dw	48160
   123  000857  4CBE               	dw	19646
   124  000859  6B28               	dw	27432
   125  00085B  4E6E               	dw	20078
   126  00085D  02F9               	dw	761
   127  00085F  5015               	dw	20501
   128  000861  78EC               	dw	30956
   129  000863  60AD               	dw	24749
   130  000865  F2CA               	dw	62154
   131  000867  7149               	dw	29001
   132  000869                     __end_of__powers_:
   133                           	opt stack 0
   134  000869                     _dpowers:
   135                           	opt stack 0
   136  000869  0001               	dw	1
   137  00086B  0000               	dw	0
   138  00086D  000A               	dw	10
   139  00086F  0000               	dw	0
   140  000871  0064               	dw	100
   141  000873  0000               	dw	0
   142  000875  03E8               	dw	1000
   143  000877  0000               	dw	0
   144  000879  2710               	dw	10000
   145  00087B  0000               	dw	0
   146  00087D  86A0               	dw	34464
   147  00087F  0001               	dw	1
   148  000881  4240               	dw	16960
   149  000883  000F               	dw	15
   150  000885  9680               	dw	38528
   151  000887  0098               	dw	152
   152  000889  E100               	dw	57600
   153  00088B  05F5               	dw	1525
   154  00088D  CA00               	dw	51712
   155  00088F  3B9A               	dw	15258
   156  000891                     __end_of_dpowers:
   157                           	opt stack 0
   158  000891                     STR_2:
   159  000891  43                 	db	67	;'C'
   160  000892  69                 	db	105	;'i'
   161  000893  63                 	db	99	;'c'
   162  000894  6C                 	db	108	;'l'
   163  000895  6F                 	db	111	;'o'
   164  000896  20                 	db	32
   165  000897  72                 	db	114	;'r'
   166  000898  69                 	db	105	;'i'
   167  000899  63                 	db	99	;'c'
   168  00089A  61                 	db	97	;'a'
   169  00089B  72                 	db	114	;'r'
   170  00089C  69                 	db	105	;'i'
   171  00089D  63                 	db	99	;'c'
   172  00089E  61                 	db	97	;'a'
   173  00089F  2E                 	db	46
   174  0008A0  2E                 	db	46
   175  0008A1  00                 	db	0
   176  0008A2                     STR_1:
   177  0008A2  43                 	db	67	;'C'
   178  0008A3  61                 	db	97	;'a'
   179  0008A4  72                 	db	114	;'r'
   180  0008A5  69                 	db	105	;'i'
   181  0008A6  63                 	db	99	;'c'
   182  0008A7  61                 	db	97	;'a'
   183  0008A8  20                 	db	32
   184  0008A9  74                 	db	116	;'t'
   185  0008AA  65                 	db	101	;'e'
   186  0008AB  72                 	db	114	;'r'
   187  0008AC  6D                 	db	109	;'m'
   188  0008AD  69                 	db	105	;'i'
   189  0008AE  6E                 	db	110	;'n'
   190  0008AF  61                 	db	97	;'a'
   191  0008B0  74                 	db	116	;'t'
   192  0008B1  61                 	db	97	;'a'
   193  0008B2  00                 	db	0
   194  0008B3                     STR_5:
   195  0008B3  69                 	db	105	;'i'
   196  0008B4  6E                 	db	110	;'n'
   197  0008B5  69                 	db	105	;'i'
   198  0008B6  7A                 	db	122	;'z'
   199  0008B7  69                 	db	105	;'i'
   200  0008B8  61                 	db	97	;'a'
   201  0008B9  6C                 	db	108	;'l'
   202  0008BA  69                 	db	105	;'i'
   203  0008BB  7A                 	db	122	;'z'
   204  0008BC  7A                 	db	122	;'z'
   205  0008BD  61                 	db	97	;'a'
   206  0008BE  7A                 	db	122	;'z'
   207  0008BF  69                 	db	105	;'i'
   208  0008C0  6F                 	db	111	;'o'
   209  0008C1  6E                 	db	110	;'n'
   210  0008C2  65                 	db	101	;'e'
   211  0008C3  00                 	db	0
   212  0008C4                     STR_3:
   213  0008C4  56                 	db	86	;'V'
   214  0008C5  3A                 	db	58	;':'
   215  0008C6  25                 	db	37
   216  0008C7  2E                 	db	46
   217  0008C8  32                 	db	50	;'2'
   218  0008C9  66                 	db	102	;'f'
   219  0008CA  20                 	db	32
   220  0008CB  00                 	db	0
   221  0008CC                     STR_4:
   222  0008CC  49                 	db	73	;'I'
   223  0008CD  3A                 	db	58	;':'
   224  0008CE  25                 	db	37
   225  0008CF  2E                 	db	46
   226  0008D0  32                 	db	50	;'2'
   227  0008D1  66                 	db	102	;'f'
   228  0008D2  00                 	db	0
   229                           
   230                           ; #config settings
   231  0008D3  00                 	db	0	; dummy byte at the end
   232  0000                     
   233                           	psect	nvCOMRAM
   234  00005B                     __pnvCOMRAM:
   235                           	opt stack 0
   236  00005B                     _clock_counter_reference:
   237                           	opt stack 0
   238  00005B                     	ds	2
   239                           
   240                           	psect	nvBANK0
   241  00008F                     __pnvBANK0:
   242                           	opt stack 0
   243  00008F                     _rapporto:
   244                           	opt stack 0
   245  00008F                     	ds	4
   246  0000                     _ADCON0	set	4034
   247  0000                     _ADCON0bits	set	4034
   248  0000                     _ADCON1	set	4033
   249  0000                     _ADCON2	set	4032
   250  0000                     _ADRESH	set	4036
   251  0000                     _ADRESL	set	4035
   252  0000                     _LATA	set	3977
   253  0000                     _LATB	set	3978
   254  0000                     _LATBbits	set	3978
   255  0000                     _LATC	set	3979
   256  0000                     _LATCbits	set	3979
   257  0000                     _PORTCbits	set	3970
   258  0000                     _TRISA	set	3986
   259  0000                     _TRISB	set	3987
   260  0000                     _TRISC	set	3988
   261                           
   262                           	psect	cinit
   263  002D78                     __pcinit:
   264                           	opt stack 0
   265  002D78                     start_initialization:
   266                           	opt stack 0
   267  002D78                     __initialization:
   268                           	opt stack 0
   269                           
   270                           ; Clear objects allocated to BANK0 (22 bytes)
   271  002D78  EE00  F079         	lfsr	0,__pbssBANK0
   272  002D7C  0E16               	movlw	22
   273  002D7E                     clear_0:
   274  002D7E  6AEE               	clrf	postinc0,c
   275  002D80  06E8               	decf	wreg,f,c
   276  002D82  E1FD               	bnz	clear_0
   277                           
   278                           ; Clear objects allocated to COMRAM (2 bytes)
   279  002D84  6A5E               	clrf	(__pbssCOMRAM+1)& (0+255),c
   280  002D86  6A5D               	clrf	__pbssCOMRAM& (0+255),c
   281                           
   282                           ; Initialize objects allocated to BANK0 (3 bytes)
   283                           ; load TBLPTR registers with __pidataBANK0
   284  002D88  0E9E               	movlw	low __pidataBANK0
   285  002D8A  6EF6               	movwf	tblptrl,c
   286  002D8C  0E2F               	movlw	high __pidataBANK0
   287  002D8E  6EF7               	movwf	tblptrh,c
   288  002D90  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   289  002D92  6EF8               	movwf	tblptru,c
   290  002D94  0009               	tblrd		*+	;fetch initializer
   291  002D96  CFF5 F093          	movff	tablat,__pdataBANK0
   292  002D9A  0009               	tblrd		*+	;fetch initializer
   293  002D9C  CFF5 F094          	movff	tablat,__pdataBANK0+1
   294  002DA0  0009               	tblrd		*+	;fetch initializer
   295  002DA2  CFF5 F095          	movff	tablat,__pdataBANK0+2
   296                           
   297                           ; Initialize objects allocated to COMRAM (1 bytes)
   298                           ; load TBLPTR registers with __pidataCOMRAM
   299  002DA6  0EA1               	movlw	low __pidataCOMRAM
   300  002DA8  6EF6               	movwf	tblptrl,c
   301  002DAA  0E2F               	movlw	high __pidataCOMRAM
   302  002DAC  6EF7               	movwf	tblptrh,c
   303  002DAE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   304  002DB0  6EF8               	movwf	tblptru,c
   305  002DB2  0009               	tblrd		*+	;fetch initializer
   306  002DB4  CFF5 F05F          	movff	tablat,__pdataCOMRAM
   307  002DB8                     end_of_initialization:
   308                           	opt stack 0
   309  002DB8                     __end_of__initialization:
   310                           	opt stack 0
   311  002DB8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   312  002DBA  6EF8               	movwf	tblptru,c
   313  002DBC  0100               	movlb	0
   314  002DBE  EF69  F016         	goto	_main	;jump to C main() function
   315                           tblptru	equ	0xFF8
   316                           tblptrh	equ	0xFF7
   317                           tblptrl	equ	0xFF6
   318                           tablat	equ	0xFF5
   319                           postinc0	equ	0xFEE
   320                           wreg	equ	0xFE8
   321                           
   322                           	psect	bssCOMRAM
   323  00005D                     __pbssCOMRAM:
   324                           	opt stack 0
   325  00005D                     _lettura:
   326                           	opt stack 0
   327  00005D                     	ds	2
   328                           tblptru	equ	0xFF8
   329                           tblptrh	equ	0xFF7
   330                           tblptrl	equ	0xFF6
   331                           tablat	equ	0xFF5
   332                           postinc0	equ	0xFEE
   333                           wreg	equ	0xFE8
   334                           
   335                           	psect	dataCOMRAM
   336  00005F                     __pdataCOMRAM:
   337                           	opt stack 0
   338  00005F                     _delay_quartz_frequency_value:
   339                           	opt stack 0
   340  00005F                     	ds	1
   341                           tblptru	equ	0xFF8
   342                           tblptrh	equ	0xFF7
   343                           tblptrl	equ	0xFF6
   344                           tablat	equ	0xFF5
   345                           postinc0	equ	0xFEE
   346                           wreg	equ	0xFE8
   347                           
   348                           	psect	bssBANK0
   349  000079                     __pbssBANK0:
   350                           	opt stack 0
   351  000079                     LCD_write_integer@F3929:
   352                           	opt stack 0
   353  000079                     	ds	6
   354  00007F                     _current:
   355                           	opt stack 0
   356  00007F                     	ds	4
   357  000083                     _voltage:
   358                           	opt stack 0
   359  000083                     	ds	4
   360  000087                     _str:
   361                           	opt stack 0
   362  000087                     	ds	8
   363                           tblptru	equ	0xFF8
   364                           tblptrh	equ	0xFF7
   365                           tblptrl	equ	0xFF6
   366                           tablat	equ	0xFF5
   367                           postinc0	equ	0xFEE
   368                           wreg	equ	0xFE8
   369                           
   370                           	psect	dataBANK0
   371  000093                     __pdataBANK0:
   372                           	opt stack 0
   373  000093                     _combinazioni:
   374                           	opt stack 0
   375  000093                     	ds	3
   376                           tblptru	equ	0xFF8
   377                           tblptrh	equ	0xFF7
   378                           tblptrl	equ	0xFF6
   379                           tablat	equ	0xFF5
   380                           postinc0	equ	0xFEE
   381                           wreg	equ	0xFE8
   382                           
   383                           	psect	cstackBANK0
   384  000060                     __pcstackBANK0:
   385                           	opt stack 0
   386  000060                     _sprintf$1109:
   387                           	opt stack 0
   388                           
   389                           ; 4 bytes @ 0x0
   390  000060                     	ds	4
   391  000064                     sprintf@ap:
   392                           	opt stack 0
   393                           
   394                           ; 2 bytes @ 0x4
   395  000064                     	ds	2
   396  000066                     sprintf@flag:
   397                           	opt stack 0
   398                           
   399                           ; 2 bytes @ 0x6
   400  000066                     	ds	2
   401  000068                     sprintf@val:
   402                           	opt stack 0
   403                           
   404                           ; 4 bytes @ 0x8
   405  000068                     	ds	4
   406  00006C                     sprintf@exp:
   407                           	opt stack 0
   408                           
   409                           ; 2 bytes @ 0xC
   410  00006C                     	ds	2
   411  00006E                     sprintf@tmpval:
   412                           	opt stack 0
   413                           
   414                           ; 4 bytes @ 0xE
   415  00006E                     	ds	4
   416  000072                     sprintf@prec:
   417                           	opt stack 0
   418                           
   419                           ; 2 bytes @ 0x12
   420  000072                     	ds	2
   421  000074                     sprintf@fval:
   422                           	opt stack 0
   423                           
   424                           ; 4 bytes @ 0x14
   425  000074                     	ds	4
   426  000078                     sprintf@c:
   427                           	opt stack 0
   428                           
   429                           ; 1 bytes @ 0x18
   430  000078                     	ds	1
   431                           tblptru	equ	0xFF8
   432                           tblptrh	equ	0xFF7
   433                           tblptrl	equ	0xFF6
   434                           tablat	equ	0xFF5
   435                           postinc0	equ	0xFEE
   436                           wreg	equ	0xFE8
   437                           
   438                           	psect	cstackCOMRAM
   439  000001                     __pcstackCOMRAM:
   440                           	opt stack 0
   441  000001                     ??_isdigit:
   442  000001                     ?___wmul:
   443                           	opt stack 0
   444  000001                     ?___awmod:
   445                           	opt stack 0
   446  000001                     ?__tdiv_to_l_:
   447                           	opt stack 0
   448  000001                     ?__div_to_l_:
   449                           	opt stack 0
   450  000001                     ?___fldiv:
   451                           	opt stack 0
   452  000001                     ?___flneg:
   453                           	opt stack 0
   454  000001                     ?___lldiv:
   455                           	opt stack 0
   456  000001                     ?___llmod:
   457                           	opt stack 0
   458  000001                     delay_set_quartz@frequency:
   459                           	opt stack 0
   460  000001                     ___wmul@multiplier:
   461                           	opt stack 0
   462  000001                     ___awmod@dividend:
   463                           	opt stack 0
   464  000001                     __div_to_l_@f1:
   465                           	opt stack 0
   466  000001                     ___flge@ff1:
   467                           	opt stack 0
   468  000001                     ___flneg@f1:
   469                           	opt stack 0
   470  000001                     __tdiv_to_l_@f1:
   471                           	opt stack 0
   472  000001                     ___lldiv@dividend:
   473                           	opt stack 0
   474  000001                     ___llmod@dividend:
   475                           	opt stack 0
   476  000001                     ___fldiv@b:
   477                           	opt stack 0
   478                           
   479                           ; 4 bytes @ 0x0
   480  000001                     	ds	1
   481  000002                     _isdigit$733:
   482                           	opt stack 0
   483                           
   484                           ; 1 bytes @ 0x1
   485  000002                     	ds	1
   486  000003                     isdigit@c:
   487                           	opt stack 0
   488  000003                     ___wmul@multiplicand:
   489                           	opt stack 0
   490  000003                     ___awmod@divisor:
   491                           	opt stack 0
   492                           
   493                           ; 2 bytes @ 0x2
   494  000003                     	ds	2
   495  000005                     ___awmod@counter:
   496                           	opt stack 0
   497  000005                     ___wmul@product:
   498                           	opt stack 0
   499  000005                     __div_to_l_@f2:
   500                           	opt stack 0
   501  000005                     ___flge@ff2:
   502                           	opt stack 0
   503  000005                     __tdiv_to_l_@f2:
   504                           	opt stack 0
   505  000005                     ___lldiv@divisor:
   506                           	opt stack 0
   507  000005                     ___llmod@divisor:
   508                           	opt stack 0
   509  000005                     ___fldiv@a:
   510                           	opt stack 0
   511                           
   512                           ; 4 bytes @ 0x4
   513  000005                     	ds	1
   514  000006                     ___awmod@sign:
   515                           	opt stack 0
   516                           
   517                           ; 1 bytes @ 0x5
   518  000006                     	ds	1
   519  000007                     ?___awdiv:
   520                           	opt stack 0
   521  000007                     delay_ms@value_ms:
   522                           	opt stack 0
   523  000007                     ___awdiv@dividend:
   524                           	opt stack 0
   525                           
   526                           ; 2 bytes @ 0x6
   527  000007                     	ds	2
   528  000009                     ??__tdiv_to_l_:
   529  000009                     ??___fldiv:
   530  000009                     ??___flge:
   531  000009                     LCD_send_command@D2:
   532                           	opt stack 0
   533  000009                     ___llmod@counter:
   534                           	opt stack 0
   535  000009                     ___awdiv@divisor:
   536                           	opt stack 0
   537  000009                     __div_to_l_@quot:
   538                           	opt stack 0
   539  000009                     ___lldiv@quotient:
   540                           	opt stack 0
   541                           
   542                           ; 4 bytes @ 0x8
   543  000009                     	ds	1
   544  00000A                     LCD_send_command@D1:
   545                           	opt stack 0
   546                           
   547                           ; 1 bytes @ 0x9
   548  00000A                     	ds	1
   549  00000B                     LCD_send_command@D0:
   550                           	opt stack 0
   551  00000B                     ___awdiv@counter:
   552                           	opt stack 0
   553                           
   554                           ; 1 bytes @ 0xA
   555  00000B                     	ds	1
   556  00000C                     LCD_send_command@D3:
   557                           	opt stack 0
   558  00000C                     ___awdiv@sign:
   559                           	opt stack 0
   560  00000C                     __tdiv_to_l_@quot:
   561                           	opt stack 0
   562                           
   563                           ; 4 bytes @ 0xB
   564  00000C                     	ds	1
   565  00000D                     LCD_goto_line@line:
   566                           	opt stack 0
   567  00000D                     LCD_write_char@D3:
   568                           	opt stack 0
   569  00000D                     LCD_cursor@blinking:
   570                           	opt stack 0
   571  00000D                     __div_to_l_@cntr:
   572                           	opt stack 0
   573  00000D                     ___lldiv@counter:
   574                           	opt stack 0
   575  00000D                     ___fldiv@sign:
   576                           	opt stack 0
   577  00000D                     ___awdiv@quotient:
   578                           	opt stack 0
   579                           
   580                           ; 2 bytes @ 0xC
   581  00000D                     	ds	1
   582  00000E                     LCD_write_char@D2:
   583                           	opt stack 0
   584  00000E                     LCD_cursor@active:
   585                           	opt stack 0
   586  00000E                     __div_to_l_@exp1:
   587                           	opt stack 0
   588  00000E                     ___fldiv@rem:
   589                           	opt stack 0
   590                           
   591                           ; 4 bytes @ 0xD
   592  00000E                     	ds	1
   593  00000F                     ?___flmul:
   594                           	opt stack 0
   595  00000F                     ?___xxtofl:
   596                           	opt stack 0
   597  00000F                     LCD_write_char@D1:
   598                           	opt stack 0
   599  00000F                     LCD_initialize@quartz_frequency:
   600                           	opt stack 0
   601  00000F                     ___flmul@b:
   602                           	opt stack 0
   603  00000F                     ___xxtofl@val:
   604                           	opt stack 0
   605                           
   606                           ; 4 bytes @ 0xE
   607  00000F                     	ds	1
   608  000010                     LCD_write_char@D0:
   609                           	opt stack 0
   610  000010                     __tdiv_to_l_@cntr:
   611                           	opt stack 0
   612                           
   613                           ; 1 bytes @ 0xF
   614  000010                     	ds	1
   615  000011                     LCD_write_char@value:
   616                           	opt stack 0
   617  000011                     __tdiv_to_l_@exp1:
   618                           	opt stack 0
   619                           
   620                           ; 1 bytes @ 0x10
   621  000011                     	ds	1
   622  000012                     LCD_write_message@buffer:
   623                           	opt stack 0
   624  000012                     LCD_write_string@buffer:
   625                           	opt stack 0
   626  000012                     ___fldiv@new_exp:
   627                           	opt stack 0
   628                           
   629                           ; 2 bytes @ 0x11
   630  000012                     	ds	1
   631  000013                     ??___xxtofl:
   632  000013                     ___flmul@a:
   633                           	opt stack 0
   634                           
   635                           ; 4 bytes @ 0x12
   636  000013                     	ds	1
   637  000014                     ___fldiv@grs:
   638                           	opt stack 0
   639                           
   640                           ; 4 bytes @ 0x13
   641  000014                     	ds	3
   642  000017                     ??___flmul:
   643  000017                     ___xxtofl@sign:
   644                           	opt stack 0
   645                           
   646                           ; 1 bytes @ 0x16
   647  000017                     	ds	1
   648  000018                     ___fldiv@bexp:
   649                           	opt stack 0
   650  000018                     ___xxtofl@exp:
   651                           	opt stack 0
   652                           
   653                           ; 1 bytes @ 0x17
   654  000018                     	ds	1
   655  000019                     ___fldiv@aexp:
   656                           	opt stack 0
   657  000019                     ___xxtofl@arg:
   658                           	opt stack 0
   659                           
   660                           ; 4 bytes @ 0x18
   661  000019                     	ds	2
   662  00001B                     ___flmul@sign:
   663                           	opt stack 0
   664                           
   665                           ; 1 bytes @ 0x1A
   666  00001B                     	ds	1
   667  00001C                     ___flmul@grs:
   668                           	opt stack 0
   669                           
   670                           ; 4 bytes @ 0x1B
   671  00001C                     	ds	4
   672  000020                     ___flmul@aexp:
   673                           	opt stack 0
   674                           
   675                           ; 1 bytes @ 0x1F
   676  000020                     	ds	1
   677  000021                     ___flmul@bexp:
   678                           	opt stack 0
   679                           
   680                           ; 1 bytes @ 0x20
   681  000021                     	ds	1
   682  000022                     ___flmul@prod:
   683                           	opt stack 0
   684                           
   685                           ; 4 bytes @ 0x21
   686  000022                     	ds	4
   687  000026                     ___flmul@temp:
   688                           	opt stack 0
   689                           
   690                           ; 2 bytes @ 0x25
   691  000026                     	ds	2
   692  000028                     ??_read_adc:
   693  000028                     ?_fround:
   694                           	opt stack 0
   695  000028                     ?_scale:
   696                           	opt stack 0
   697                           
   698                           ; 4 bytes @ 0x27
   699  000028                     	ds	2
   700  00002A                     read_adc@i:
   701                           	opt stack 0
   702                           
   703                           ; 1 bytes @ 0x29
   704  00002A                     	ds	2
   705  00002C                     _fround$1107:
   706                           	opt stack 0
   707  00002C                     _scale$1108:
   708                           	opt stack 0
   709                           
   710                           ; 4 bytes @ 0x2B
   711  00002C                     	ds	4
   712  000030                     scale@scl:
   713                           	opt stack 0
   714  000030                     _fround$1106:
   715                           	opt stack 0
   716                           
   717                           ; 4 bytes @ 0x2F
   718  000030                     	ds	1
   719  000031                     ?___fltol:
   720                           	opt stack 0
   721  000031                     ___fltol@f1:
   722                           	opt stack 0
   723                           
   724                           ; 4 bytes @ 0x30
   725  000031                     	ds	3
   726  000034                     fround@prec:
   727                           	opt stack 0
   728                           
   729                           ; 1 bytes @ 0x33
   730  000034                     	ds	1
   731  000035                     ??___fltol:
   732  000035                     ?___fladd:
   733                           	opt stack 0
   734  000035                     ___fladd@b:
   735                           	opt stack 0
   736                           
   737                           ; 4 bytes @ 0x34
   738  000035                     	ds	4
   739  000039                     ___fltol@sign1:
   740                           	opt stack 0
   741  000039                     ___fladd@a:
   742                           	opt stack 0
   743                           
   744                           ; 4 bytes @ 0x38
   745  000039                     	ds	1
   746  00003A                     ___fltol@exp1:
   747                           	opt stack 0
   748                           
   749                           ; 1 bytes @ 0x39
   750  00003A                     	ds	3
   751  00003D                     ??___fladd:
   752                           
   753                           ; 1 bytes @ 0x3C
   754  00003D                     	ds	8
   755  000045                     ___fladd@signs:
   756                           	opt stack 0
   757                           
   758                           ; 1 bytes @ 0x44
   759  000045                     	ds	1
   760  000046                     ___fladd@aexp:
   761                           	opt stack 0
   762                           
   763                           ; 1 bytes @ 0x45
   764  000046                     	ds	1
   765  000047                     ___fladd@bexp:
   766                           	opt stack 0
   767                           
   768                           ; 1 bytes @ 0x46
   769  000047                     	ds	1
   770  000048                     ___fladd@grs:
   771                           	opt stack 0
   772                           
   773                           ; 1 bytes @ 0x47
   774  000048                     	ds	1
   775  000049                     ?___flsub:
   776                           	opt stack 0
   777  000049                     ___flsub@b:
   778                           	opt stack 0
   779                           
   780                           ; 4 bytes @ 0x48
   781  000049                     	ds	4
   782  00004D                     ___flsub@a:
   783                           	opt stack 0
   784                           
   785                           ; 4 bytes @ 0x4C
   786  00004D                     	ds	4
   787  000051                     ?_sprintf:
   788                           	opt stack 0
   789  000051                     sprintf@sp:
   790                           	opt stack 0
   791                           
   792                           ; 2 bytes @ 0x50
   793  000051                     	ds	2
   794  000053                     sprintf@f:
   795                           	opt stack 0
   796                           
   797                           ; 2 bytes @ 0x52
   798  000053                     	ds	6
   799  000059                     ??_sprintf:
   800                           
   801                           ; 1 bytes @ 0x58
   802  000059                     	ds	2
   803  00005B                     tblptru	equ	0xFF8
   804                           tblptrh	equ	0xFF7
   805                           tblptrl	equ	0xFF6
   806                           tablat	equ	0xFF5
   807                           postinc0	equ	0xFEE
   808                           wreg	equ	0xFE8
   809                           
   810                           ; 1 bytes @ 0x5A
   811 ;;
   812 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   813 ;;
   814 ;; *************** function _main *****************
   815 ;; Defined at:
   816 ;;		line 45 in file "tester.c"
   817 ;; Parameters:    Size  Location     Type
   818 ;;		None
   819 ;; Auto vars:     Size  Location     Type
   820 ;;		None
   821 ;; Return value:  Size  Location     Type
   822 ;;                  1    wreg      void 
   823 ;; Registers used:
   824 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   825 ;; Tracked objects:
   826 ;;		On entry : 0/0
   827 ;;		On exit  : 0/0
   828 ;;		Unchanged: 0/0
   829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   830 ;;      Params:         0       0       0       0       0       0       0       0       0
   831 ;;      Locals:         0       0       0       0       0       0       0       0       0
   832 ;;      Temps:          0       0       0       0       0       0       0       0       0
   833 ;;      Totals:         0       0       0       0       0       0       0       0       0
   834 ;;Total ram usage:        0 bytes
   835 ;; Hardware stack levels required when called:    7
   836 ;; This function calls:
   837 ;;		___fldiv
   838 ;;		_inizializzazione
   839 ;;		_read_adc
   840 ;;		_ricarica
   841 ;; This function is called by:
   842 ;;		Startup code after reset
   843 ;; This function uses a non-reentrant model
   844 ;;
   845                           
   846                           	psect	text0
   847  002CD2                     __ptext0:
   848                           	opt stack 0
   849  002CD2                     _main:
   850                           	opt stack 24
   851                           
   852                           ;tester.c: 46: rapporto = (15000+7500);
   853                           
   854                           ;incstack = 0
   855  002CD2  0E00               	movlw	0
   856  002CD4  0100               	movlb	0	; () banked
   857  002CD6  6F8F               	movwf	_rapporto& (0+255),b
   858  002CD8  0EC8               	movlw	200
   859  002CDA  6F90               	movwf	(_rapporto+1)& (0+255),b
   860  002CDC  0EAF               	movlw	175
   861  002CDE  6F91               	movwf	(_rapporto+2)& (0+255),b
   862  002CE0  0E46               	movlw	70
   863  002CE2  6F92               	movwf	(_rapporto+3)& (0+255),b
   864                           
   865                           ; BSR set to: 0
   866                           ;tester.c: 47: rapporto = 7500/rapporto;
   867  002CE4  0E00               	movlw	0
   868  002CE6  6E01               	movwf	___fldiv@b,c
   869  002CE8  0E60               	movlw	96
   870  002CEA  6E02               	movwf	___fldiv@b+1,c
   871  002CEC  0EEA               	movlw	234
   872  002CEE  6E03               	movwf	___fldiv@b+2,c
   873  002CF0  0E45               	movlw	69
   874  002CF2  6E04               	movwf	___fldiv@b+3,c
   875  002CF4  C08F  F005         	movff	_rapporto,___fldiv@a
   876  002CF8  C090  F006         	movff	_rapporto+1,___fldiv@a+1
   877  002CFC  C091  F007         	movff	_rapporto+2,___fldiv@a+2
   878  002D00  C092  F008         	movff	_rapporto+3,___fldiv@a+3
   879  002D04  ECC4  F00D         	call	___fldiv	;wreg free
   880  002D08  C001  F08F         	movff	?___fldiv,_rapporto
   881  002D0C  C002  F090         	movff	?___fldiv+1,_rapporto+1
   882  002D10  C003  F091         	movff	?___fldiv+2,_rapporto+2
   883  002D14  C004  F092         	movff	?___fldiv+3,_rapporto+3
   884                           
   885                           ;tester.c: 48: inizializzazione();
   886  002D18  EC95  F016         	call	_inizializzazione	;wreg free
   887                           
   888                           ;tester.c: 49: read_adc();
   889  002D1C  EC5B  F010         	call	_read_adc	;wreg free
   890  002D20                     l3673:
   891                           
   892                           ;tester.c: 51: ricarica();
   893  002D20  EC7A  F014         	call	_ricarica	;wreg free
   894                           
   895                           ;tester.c: 52: read_adc();
   896  002D24  EC5B  F010         	call	_read_adc	;wreg free
   897  002D28  D7FB               	goto	l3673
   898  002D2A                     __end_of_main:
   899                           	opt stack 0
   900                           tblptru	equ	0xFF8
   901                           tblptrh	equ	0xFF7
   902                           tblptrl	equ	0xFF6
   903                           tablat	equ	0xFF5
   904                           postinc0	equ	0xFEE
   905                           wreg	equ	0xFE8
   906                           
   907 ;; *************** function _ricarica *****************
   908 ;; Defined at:
   909 ;;		line 55 in file "tester.c"
   910 ;; Parameters:    Size  Location     Type
   911 ;;		None
   912 ;; Auto vars:     Size  Location     Type
   913 ;;		None
   914 ;; Return value:  Size  Location     Type
   915 ;;                  1    wreg      void 
   916 ;; Registers used:
   917 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   918 ;; Tracked objects:
   919 ;;		On entry : 0/0
   920 ;;		On exit  : 0/0
   921 ;;		Unchanged: 0/0
   922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   923 ;;      Params:         0       0       0       0       0       0       0       0       0
   924 ;;      Locals:         0       0       0       0       0       0       0       0       0
   925 ;;      Temps:          0       0       0       0       0       0       0       0       0
   926 ;;      Totals:         0       0       0       0       0       0       0       0       0
   927 ;;Total ram usage:        0 bytes
   928 ;; Hardware stack levels used:    1
   929 ;; Hardware stack levels required when called:    6
   930 ;; This function calls:
   931 ;;		_LCD_goto_line
   932 ;;		_LCD_write_message
   933 ;;		_LCD_write_string
   934 ;;		___flge
   935 ;;		_read_adc
   936 ;;		_sprintf
   937 ;; This function is called by:
   938 ;;		_main
   939 ;; This function uses a non-reentrant model
   940 ;;
   941                           
   942                           	psect	text1
   943  0028F4                     __ptext1:
   944                           	opt stack 0
   945  0028F4                     _ricarica:
   946                           	opt stack 24
   947                           
   948                           ;tester.c: 56: read_adc();
   949                           
   950                           ;incstack = 0
   951  0028F4  EC5B  F010         	call	_read_adc	;wreg free
   952                           
   953                           ;tester.c: 57: if((current > -1)&&(voltage>14.5)){
   954  0028F8  0E00               	movlw	0
   955  0028FA  6E01               	movwf	___flge@ff1,c
   956  0028FC  0E00               	movlw	0
   957  0028FE  6E02               	movwf	___flge@ff1+1,c
   958  002900  0E80               	movlw	128
   959  002902  6E03               	movwf	___flge@ff1+2,c
   960  002904  0EBF               	movlw	191
   961  002906  6E04               	movwf	___flge@ff1+3,c
   962  002908  C07F  F005         	movff	_current,___flge@ff2
   963  00290C  C080  F006         	movff	_current+1,___flge@ff2+1
   964  002910  C081  F007         	movff	_current+2,___flge@ff2+2
   965  002914  C082  F008         	movff	_current+3,___flge@ff2+3
   966  002918  ECEF  F012         	call	___flge	;wreg free
   967  00291C  B0D8               	btfsc	status,0,c
   968  00291E  D01A               	goto	l3453
   969  002920  0E00               	movlw	0
   970  002922  6E01               	movwf	___flge@ff1,c
   971  002924  0E00               	movlw	0
   972  002926  6E02               	movwf	___flge@ff1+1,c
   973  002928  0E68               	movlw	104
   974  00292A  6E03               	movwf	___flge@ff1+2,c
   975  00292C  0E41               	movlw	65
   976  00292E  6E04               	movwf	___flge@ff1+3,c
   977  002930  C083  F005         	movff	_voltage,___flge@ff2
   978  002934  C084  F006         	movff	_voltage+1,___flge@ff2+1
   979  002938  C085  F007         	movff	_voltage+2,___flge@ff2+2
   980  00293C  C086  F008         	movff	_voltage+3,___flge@ff2+3
   981  002940  ECEF  F012         	call	___flge	;wreg free
   982  002944  B0D8               	btfsc	status,0,c
   983  002946  D006               	goto	l3453
   984                           
   985                           ;tester.c: 58: LCD_write_message("Carica terminata");
   986  002948  0EA2               	movlw	low STR_1
   987  00294A  6E12               	movwf	LCD_write_message@buffer,c
   988  00294C  0E08               	movlw	high STR_1
   989  00294E  6E13               	movwf	LCD_write_message@buffer+1,c
   990  002950  EC4C  F017         	call	_LCD_write_message	;wreg free
   991  002954                     l3453:
   992                           
   993                           ;tester.c: 59: }
   994                           ;tester.c: 60: PORTCbits.RC6 = 1;
   995  002954  8C82               	bsf	3970,6,c	;volatile
   996                           
   997                           ;tester.c: 61: LCD_write_message("Ciclo ricarica..");
   998  002956  0E91               	movlw	low STR_2
   999  002958  6E12               	movwf	LCD_write_message@buffer,c
  1000  00295A  0E08               	movlw	high STR_2
  1001  00295C  6E13               	movwf	LCD_write_message@buffer+1,c
  1002  00295E  EC4C  F017         	call	_LCD_write_message	;wreg free
  1003                           
  1004                           ;tester.c: 62: LCD_goto_line(2);
  1005  002962  0E02               	movlw	2
  1006  002964  ECE7  F014         	call	_LCD_goto_line
  1007                           
  1008                           ;tester.c: 63: sprintf(str, "V:%.2f ", voltage);
  1009  002968  0E87               	movlw	low _str
  1010  00296A  6E51               	movwf	sprintf@sp,c
  1011  00296C  0E00               	movlw	high _str
  1012  00296E  6E52               	movwf	sprintf@sp+1,c
  1013  002970  0EC4               	movlw	low STR_3
  1014  002972  6E53               	movwf	sprintf@f,c
  1015  002974  0E08               	movlw	high STR_3
  1016  002976  6E54               	movwf	sprintf@f+1,c
  1017  002978  C083  F055         	movff	_voltage,?_sprintf+4
  1018  00297C  C084  F056         	movff	_voltage+1,?_sprintf+5
  1019  002980  C085  F057         	movff	_voltage+2,?_sprintf+6
  1020  002984  C086  F058         	movff	_voltage+3,?_sprintf+7
  1021  002988  EC6A  F004         	call	_sprintf	;wreg free
  1022                           
  1023                           ;tester.c: 64: LCD_write_string(str);
  1024  00298C  0E87               	movlw	low _str
  1025  00298E  6E12               	movwf	LCD_write_string@buffer,c
  1026  002990  0E00               	movlw	high _str
  1027  002992  6E13               	movwf	LCD_write_string@buffer+1,c
  1028  002994  EC9B  F017         	call	_LCD_write_string	;wreg free
  1029                           
  1030                           ;tester.c: 65: sprintf(str, "I:%.2f", current);
  1031  002998  0E87               	movlw	low _str
  1032  00299A  6E51               	movwf	sprintf@sp,c
  1033  00299C  0E00               	movlw	high _str
  1034  00299E  6E52               	movwf	sprintf@sp+1,c
  1035  0029A0  0ECC               	movlw	low STR_4
  1036  0029A2  6E53               	movwf	sprintf@f,c
  1037  0029A4  0E08               	movlw	high STR_4
  1038  0029A6  6E54               	movwf	sprintf@f+1,c
  1039  0029A8  C07F  F055         	movff	_current,?_sprintf+4
  1040  0029AC  C080  F056         	movff	_current+1,?_sprintf+5
  1041  0029B0  C081  F057         	movff	_current+2,?_sprintf+6
  1042  0029B4  C082  F058         	movff	_current+3,?_sprintf+7
  1043  0029B8  EC6A  F004         	call	_sprintf	;wreg free
  1044                           
  1045                           ;tester.c: 67: LCD_write_string(str);
  1046  0029BC  0E87               	movlw	low _str
  1047  0029BE  6E12               	movwf	LCD_write_string@buffer,c
  1048  0029C0  0E00               	movlw	high _str
  1049  0029C2  6E13               	movwf	LCD_write_string@buffer+1,c
  1050  0029C4  EC9B  F017         	call	_LCD_write_string	;wreg free
  1051                           
  1052                           ;tester.c: 68: read_adc();
  1053  0029C8  EC5B  F010         	call	_read_adc	;wreg free
  1054  0029CC  0012               	return		;funcret
  1055  0029CE                     __end_of_ricarica:
  1056                           	opt stack 0
  1057                           tblptru	equ	0xFF8
  1058                           tblptrh	equ	0xFF7
  1059                           tblptrl	equ	0xFF6
  1060                           tablat	equ	0xFF5
  1061                           postinc0	equ	0xFEE
  1062                           wreg	equ	0xFE8
  1063                           status	equ	0xFD8
  1064                           
  1065 ;; *************** function _sprintf *****************
  1066 ;; Defined at:
  1067 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\doprnt.c"
  1068 ;; Parameters:    Size  Location     Type
  1069 ;;  sp              2   80[COMRAM] PTR unsigned char 
  1070 ;;		 -> str(8), 
  1071 ;;  f               2   82[COMRAM] PTR const unsigned char 
  1072 ;;		 -> STR_4(7), STR_3(8), 
  1073 ;; Auto vars:     Size  Location     Type
  1074 ;;  fval            4   20[BANK0 ] PTR const unsigned char 
  1075 ;;  tmpval          4   14[BANK0 ] struct .
  1076 ;;  val             4    8[BANK0 ] unsigned long 
  1077 ;;  cp              3    0        PTR const unsigned char 
  1078 ;;  prec            2   18[BANK0 ] int 
  1079 ;;  exp             2   12[BANK0 ] int 
  1080 ;;  flag            2    6[BANK0 ] unsigned short 
  1081 ;;  ap              2    4[BANK0 ] PTR void [1]
  1082 ;;		 -> ?_sprintf(2), 
  1083 ;;  len             2    0        unsigned int 
  1084 ;;  width           2    0        int 
  1085 ;;  c               1   24[BANK0 ] char 
  1086 ;;  d               1    0        unsigned char 
  1087 ;; Return value:  Size  Location     Type
  1088 ;;                  2   80[COMRAM] int 
  1089 ;; Registers used:
  1090 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1091 ;; Tracked objects:
  1092 ;;		On entry : 0/0
  1093 ;;		On exit  : 0/0
  1094 ;;		Unchanged: 0/0
  1095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1096 ;;      Params:         8       0       0       0       0       0       0       0       0
  1097 ;;      Locals:         0      25       0       0       0       0       0       0       0
  1098 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1099 ;;      Totals:        10      25       0       0       0       0       0       0       0
  1100 ;;Total ram usage:       35 bytes
  1101 ;; Hardware stack levels used:    1
  1102 ;; Hardware stack levels required when called:    2
  1103 ;; This function calls:
  1104 ;;		___awdiv
  1105 ;;		___fladd
  1106 ;;		___flge
  1107 ;;		___flmul
  1108 ;;		___flneg
  1109 ;;		___flsub
  1110 ;;		___fltol
  1111 ;;		___lldiv
  1112 ;;		___llmod
  1113 ;;		___wmul
  1114 ;;		___xxtofl
  1115 ;;		__div_to_l_
  1116 ;;		__tdiv_to_l_
  1117 ;;		_fround
  1118 ;;		_isdigit
  1119 ;;		_scale
  1120 ;; This function is called by:
  1121 ;;		_ricarica
  1122 ;; This function uses a non-reentrant model
  1123 ;;
  1124                           
  1125                           	psect	text2
  1126  0008D4                     __ptext2:
  1127                           	opt stack 0
  1128  0008D4                     _sprintf:
  1129                           	opt stack 27
  1130                           
  1131                           ;doprnt.c: 494: va_list ap;
  1132                           ;doprnt.c: 499: signed char c;
  1133                           ;doprnt.c: 501: int width;
  1134                           ;doprnt.c: 504: int prec;
  1135                           ;doprnt.c: 508: unsigned short flag;
  1136                           ;doprnt.c: 515: char d;
  1137                           ;doprnt.c: 516: double fval;
  1138                           ;doprnt.c: 517: int exp;
  1139                           ;doprnt.c: 523: union {
  1140                           ;doprnt.c: 524: unsigned long vd;
  1141                           ;doprnt.c: 525: double integ;
  1142                           ;doprnt.c: 526: } tmpval;
  1143                           ;doprnt.c: 528: unsigned long val;
  1144                           ;doprnt.c: 529: unsigned len;
  1145                           ;doprnt.c: 530: const char * cp;
  1146                           ;doprnt.c: 533: *ap = __va_start();
  1147                           
  1148                           ;incstack = 0
  1149  0008D4  0E55               	movlw	low (?_sprintf+4)
  1150  0008D6  0100               	movlb	0	; () banked
  1151  0008D8  6F64               	movwf	sprintf@ap& (0+255),b
  1152  0008DA  0E00               	movlw	high (?_sprintf+4)
  1153  0008DC  0100               	movlb	0	; () banked
  1154  0008DE  6F65               	movwf	(sprintf@ap+1)& (0+255),b
  1155                           
  1156                           ;doprnt.c: 536: while(c = *f++) {
  1157  0008E0  D3ED               	goto	l3409
  1158  0008E2                     l3211:
  1159                           
  1160                           ; BSR set to: 0
  1161                           ;doprnt.c: 538: if(c != '%')
  1162  0008E2  0E25               	movlw	37
  1163  0008E4  0100               	movlb	0	; () banked
  1164  0008E6  1978               	xorwf	sprintf@c& (0+255),w,b
  1165  0008E8  B4D8               	btfsc	status,2,c
  1166  0008EA  D007               	goto	l3217
  1167                           
  1168                           ; BSR set to: 0
  1169                           ;doprnt.c: 540: {
  1170                           ;doprnt.c: 541: ((*sp++ = (c)));
  1171  0008EC  C051  FFD9         	movff	sprintf@sp,fsr2l
  1172  0008F0  C052  FFDA         	movff	sprintf@sp+1,fsr2h
  1173  0008F4  C078  FFDF         	movff	sprintf@c,indf2
  1174  0008F8  D3DF               	goto	l3407
  1175  0008FA                     l3217:
  1176                           
  1177                           ; BSR set to: 0
  1178                           ;doprnt.c: 543: }
  1179                           ;doprnt.c: 548: flag = 0;
  1180  0008FA  0E00               	movlw	0
  1181  0008FC  0100               	movlb	0	; () banked
  1182  0008FE  6F67               	movwf	(sprintf@flag+1)& (0+255),b
  1183  000900  0E00               	movlw	0
  1184  000902  6F66               	movwf	sprintf@flag& (0+255),b
  1185                           
  1186                           ; BSR set to: 0
  1187                           ;doprnt.c: 611: if(*f == '.') {
  1188  000904  C053  FFF6         	movff	sprintf@f,tblptrl
  1189  000908  C054  FFF7         	movff	sprintf@f+1,tblptrh
  1190  00090C                     	if	0	;tblptru may be non-zero
  1191  00090C                     	endif
  1192  00090C                     	if	0	;tblptru may be non-zero
  1193  00090C                     	endif
  1194  00090C  0008               	tblrd		*
  1195  00090E  50F5               	movf	tablat,w,c
  1196  000910  0A2E               	xorlw	46
  1197  000912  A4D8               	btfss	status,2,c
  1198  000914  D032               	goto	l3231
  1199                           
  1200                           ; BSR set to: 0
  1201                           ;doprnt.c: 612: flag |= 0x4000;
  1202  000916  0100               	movlb	0	; () banked
  1203  000918  8D67               	bsf	(sprintf@flag+1)& (0+255),6,b
  1204                           
  1205                           ;doprnt.c: 613: f++;
  1206  00091A  4A53               	infsnz	sprintf@f,f,c
  1207  00091C  2A54               	incf	sprintf@f+1,f,c
  1208                           
  1209                           ; BSR set to: 0
  1210                           ;doprnt.c: 620: {
  1211                           ;doprnt.c: 621: prec = 0;
  1212  00091E  0E00               	movlw	0
  1213  000920  0100               	movlb	0	; () banked
  1214  000922  6F73               	movwf	(sprintf@prec+1)& (0+255),b
  1215  000924  0E00               	movlw	0
  1216  000926  6F72               	movwf	sprintf@prec& (0+255),b
  1217                           
  1218                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  1219  000928  D01D               	goto	l3229
  1220  00092A                     l3225:
  1221                           
  1222                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  1223  00092A  C072  F001         	movff	sprintf@prec,___wmul@multiplier
  1224  00092E  C073  F002         	movff	sprintf@prec+1,___wmul@multiplier+1
  1225  000932  0E00               	movlw	0
  1226  000934  6E04               	movwf	___wmul@multiplicand+1,c
  1227  000936  0E0A               	movlw	10
  1228  000938  6E03               	movwf	___wmul@multiplicand,c
  1229  00093A  EC88  F017         	call	___wmul	;wreg free
  1230  00093E  C053  FFF6         	movff	sprintf@f,tblptrl
  1231  000942  C054  FFF7         	movff	sprintf@f+1,tblptrh
  1232  000946                     	if	0	;tblptru may be non-zero
  1233  000946                     	endif
  1234  000946                     	if	0	;tblptru may be non-zero
  1235  000946                     	endif
  1236  000946  0008               	tblrd		*
  1237  000948  50F5               	movf	tablat,w,c
  1238  00094A  2601               	addwf	?___wmul,f,c
  1239  00094C  0E00               	movlw	0
  1240  00094E  2202               	addwfc	?___wmul+1,f,c
  1241  000950  0ED0               	movlw	208
  1242  000952  2401               	addwf	?___wmul,w,c
  1243  000954  0100               	movlb	0	; () banked
  1244  000956  6F72               	movwf	sprintf@prec& (0+255),b
  1245  000958  0EFF               	movlw	255
  1246  00095A  2002               	addwfc	?___wmul+1,w,c
  1247  00095C  0100               	movlb	0	; () banked
  1248  00095E  6F73               	movwf	(sprintf@prec+1)& (0+255),b
  1249                           
  1250                           ; BSR set to: 0
  1251  000960  4A53               	infsnz	sprintf@f,f,c
  1252  000962  2A54               	incf	sprintf@f+1,f,c
  1253  000964                     l3229:
  1254                           
  1255                           ; BSR set to: 0
  1256  000964  C053  FFF6         	movff	sprintf@f,tblptrl
  1257  000968  C054  FFF7         	movff	sprintf@f+1,tblptrh
  1258  00096C                     	if	0	;tblptru may be non-zero
  1259  00096C                     	endif
  1260  00096C                     	if	0	;tblptru may be non-zero
  1261  00096C                     	endif
  1262  00096C  0008               	tblrd		*
  1263  00096E  50F5               	movf	tablat,w,c
  1264  000970  ECAD  F017         	call	_isdigit
  1265  000974  A0D8               	btfss	status,0,c
  1266  000976  D00C               	goto	l3239
  1267  000978  D7D8               	goto	l3225
  1268  00097A                     l3231:
  1269                           
  1270                           ;doprnt.c: 626: prec = 0;
  1271  00097A  0E00               	movlw	0
  1272  00097C  0100               	movlb	0	; () banked
  1273  00097E  6F73               	movwf	(sprintf@prec+1)& (0+255),b
  1274  000980  0E00               	movlw	0
  1275  000982  6F72               	movwf	sprintf@prec& (0+255),b
  1276                           
  1277                           ; BSR set to: 0
  1278                           ;doprnt.c: 628: flag |= 0x1000;
  1279  000984  0100               	movlb	0	; () banked
  1280  000986  8967               	bsf	(sprintf@flag+1)& (0+255),4,b
  1281                           
  1282                           ; BSR set to: 0
  1283                           ;doprnt.c: 630: }
  1284                           ;doprnt.c: 635: switch(c = *f++) {
  1285  000988  D003               	goto	l3239
  1286  00098A                     l3235:
  1287                           
  1288                           ; BSR set to: 0
  1289                           ;doprnt.c: 663: flag |= 0x400;
  1290  00098A  0100               	movlb	0	; () banked
  1291  00098C  8567               	bsf	(sprintf@flag+1)& (0+255),2,b
  1292                           
  1293                           ;doprnt.c: 664: break;
  1294  00098E  D012               	goto	l3241
  1295  000990                     l3239:
  1296  000990  C053  FFF6         	movff	sprintf@f,tblptrl
  1297  000994  C054  FFF7         	movff	sprintf@f+1,tblptrh
  1298  000998  4A53               	infsnz	sprintf@f,f,c
  1299  00099A  2A54               	incf	sprintf@f+1,f,c
  1300  00099C                     	if	0	;tblptru may be non-zero
  1301  00099C                     	endif
  1302  00099C                     	if	0	;tblptru may be non-zero
  1303  00099C                     	endif
  1304  00099C  0008               	tblrd		*
  1305  00099E  CFF5 F078          	movff	tablat,sprintf@c
  1306  0009A2  0100               	movlb	0	; () banked
  1307  0009A4  5178               	movf	sprintf@c& (0+255),w,b
  1308                           
  1309                           ; Switch size 1, requested type "space"
  1310                           ; Number of cases is 2, Range of values is 0 to 102
  1311                           ; switch strategies available:
  1312                           ; Name         Instructions Cycles
  1313                           ; simple_byte            7     4 (average)
  1314                           ;	Chosen strategy is simple_byte
  1315  0009A6  0A00               	xorlw	0	; case 0
  1316  0009A8  B4D8               	btfsc	status,2,c
  1317  0009AA  D395               	goto	l3411
  1318  0009AC  0A66               	xorlw	102	; case 102
  1319  0009AE  B4D8               	btfsc	status,2,c
  1320  0009B0  D7EC               	goto	l3235
  1321  0009B2  D384               	goto	l3409
  1322  0009B4                     l3241:
  1323                           
  1324                           ; BSR set to: 0
  1325                           ;doprnt.c: 825: if(flag & (0x700)) {
  1326  0009B4  0E07               	movlw	7
  1327  0009B6  0100               	movlb	0	; () banked
  1328  0009B8  1567               	andwf	(sprintf@flag+1)& (0+255),w,b
  1329  0009BA  B4D8               	btfsc	status,2,c
  1330  0009BC  D330               	goto	l3389
  1331                           
  1332                           ; BSR set to: 0
  1333                           ;doprnt.c: 827: if(flag & 0x1000)
  1334  0009BE  0100               	movlb	0	; () banked
  1335  0009C0  A967               	btfss	(sprintf@flag+1)& (0+255),4,b
  1336  0009C2  D005               	goto	l3247
  1337                           
  1338                           ; BSR set to: 0
  1339                           ;doprnt.c: 829: prec = 6;
  1340  0009C4  0E00               	movlw	0
  1341  0009C6  0100               	movlb	0	; () banked
  1342  0009C8  6F73               	movwf	(sprintf@prec+1)& (0+255),b
  1343  0009CA  0E06               	movlw	6
  1344  0009CC  6F72               	movwf	sprintf@prec& (0+255),b
  1345  0009CE                     l3247:
  1346                           
  1347                           ; BSR set to: 0
  1348                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  1349  0009CE  C064  FFD9         	movff	sprintf@ap,fsr2l
  1350  0009D2  C065  FFDA         	movff	sprintf@ap+1,fsr2h
  1351  0009D6  CFDE F074          	movff	postinc2,sprintf@fval
  1352  0009DA  CFDE F075          	movff	postinc2,sprintf@fval+1
  1353  0009DE  CFDE F076          	movff	postinc2,sprintf@fval+2
  1354  0009E2  CFDE F077          	movff	postinc2,sprintf@fval+3
  1355                           
  1356                           ; BSR set to: 0
  1357  0009E6  0E04               	movlw	4
  1358  0009E8  0100               	movlb	0	; () banked
  1359  0009EA  2764               	addwf	sprintf@ap& (0+255),f,b
  1360  0009EC  0E00               	movlw	0
  1361  0009EE  2365               	addwfc	(sprintf@ap+1)& (0+255),f,b
  1362                           
  1363                           ; BSR set to: 0
  1364                           ;doprnt.c: 831: if(fval < 0.0) {
  1365  0009F0  0100               	movlb	0	; () banked
  1366  0009F2  AF77               	btfss	(sprintf@fval+3)& (0+255),7,b
  1367  0009F4  D015               	goto	l3257
  1368                           
  1369                           ; BSR set to: 0
  1370                           ;doprnt.c: 832: fval = -fval;
  1371  0009F6  C074  F001         	movff	sprintf@fval,___flneg@f1
  1372  0009FA  C075  F002         	movff	sprintf@fval+1,___flneg@f1+1
  1373  0009FE  C076  F003         	movff	sprintf@fval+2,___flneg@f1+2
  1374  000A02  C077  F004         	movff	sprintf@fval+3,___flneg@f1+3
  1375  000A06  EC35  F017         	call	___flneg	;wreg free
  1376  000A0A  C001  F074         	movff	?___flneg,sprintf@fval
  1377  000A0E  C002  F075         	movff	?___flneg+1,sprintf@fval+1
  1378  000A12  C003  F076         	movff	?___flneg+2,sprintf@fval+2
  1379  000A16  C004  F077         	movff	?___flneg+3,sprintf@fval+3
  1380                           
  1381                           ;doprnt.c: 833: flag |= 0x03;
  1382  000A1A  0E03               	movlw	3
  1383  000A1C  0100               	movlb	0	; () banked
  1384  000A1E  1366               	iorwf	sprintf@flag& (0+255),f,b
  1385  000A20                     l3257:
  1386                           
  1387                           ; BSR set to: 0
  1388                           ;doprnt.c: 834: }
  1389                           ;doprnt.c: 835: exp = 0;
  1390  000A20  0E00               	movlw	0
  1391  000A22  0100               	movlb	0	; () banked
  1392  000A24  6F6D               	movwf	(sprintf@exp+1)& (0+255),b
  1393  000A26  0E00               	movlw	0
  1394  000A28  6F6C               	movwf	sprintf@exp& (0+255),b
  1395                           
  1396                           ; BSR set to: 0
  1397                           ;doprnt.c: 836: if( fval!=0) {
  1398  000A2A  0100               	movlb	0	; () banked
  1399  000A2C  5174               	movf	sprintf@fval& (0+255),w,b
  1400  000A2E  0100               	movlb	0	; () banked
  1401  000A30  1175               	iorwf	(sprintf@fval+1)& (0+255),w,b
  1402  000A32  0100               	movlb	0	; () banked
  1403  000A34  1176               	iorwf	(sprintf@fval+2)& (0+255),w,b
  1404  000A36  0100               	movlb	0	; () banked
  1405  000A38  1177               	iorwf	(sprintf@fval+3)& (0+255),w,b
  1406  000A3A  B4D8               	btfsc	status,2,c
  1407  000A3C  D088               	goto	l3285
  1408                           
  1409                           ; BSR set to: 0
  1410                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
  1411  000A3E  0100               	movlb	0	; () banked
  1412  000A40  3576               	rlcf	(sprintf@fval+2)& (0+255),w,b
  1413  000A42  3577               	rlcf	(sprintf@fval+3)& (0+255),w,b
  1414  000A44  0F82               	addlw	130
  1415  000A46  0100               	movlb	0	; () banked
  1416  000A48  6F6C               	movwf	sprintf@exp& (0+255),b
  1417  000A4A  0100               	movlb	0	; () banked
  1418  000A4C  6B6D               	clrf	(sprintf@exp+1)& (0+255),b
  1419  000A4E  0EFF               	movlw	255
  1420  000A50  236D               	addwfc	(sprintf@exp+1)& (0+255),f,b
  1421                           
  1422                           ; BSR set to: 0
  1423                           ;doprnt.c: 838: exp--;
  1424  000A52  0100               	movlb	0	; () banked
  1425  000A54  076C               	decf	sprintf@exp& (0+255),f,b
  1426  000A56  A0D8               	btfss	status,0,c
  1427  000A58  076D               	decf	(sprintf@exp+1)& (0+255),f,b
  1428                           
  1429                           ; BSR set to: 0
  1430                           ;doprnt.c: 839: exp *= 3;
  1431  000A5A  C06C  F001         	movff	sprintf@exp,___wmul@multiplier
  1432  000A5E  C06D  F002         	movff	sprintf@exp+1,___wmul@multiplier+1
  1433  000A62  0E00               	movlw	0
  1434  000A64  6E04               	movwf	___wmul@multiplicand+1,c
  1435  000A66  0E03               	movlw	3
  1436  000A68  6E03               	movwf	___wmul@multiplicand,c
  1437  000A6A  EC88  F017         	call	___wmul	;wreg free
  1438  000A6E  C001  F06C         	movff	?___wmul,sprintf@exp
  1439  000A72  C002  F06D         	movff	?___wmul+1,sprintf@exp+1
  1440                           
  1441                           ;doprnt.c: 840: exp /= 10;
  1442  000A76  C06C  F007         	movff	sprintf@exp,___awdiv@dividend
  1443  000A7A  C06D  F008         	movff	sprintf@exp+1,___awdiv@dividend+1
  1444  000A7E  0E00               	movlw	0
  1445  000A80  6E0A               	movwf	___awdiv@divisor+1,c
  1446  000A82  0E0A               	movlw	10
  1447  000A84  6E09               	movwf	___awdiv@divisor,c
  1448  000A86  EC43  F015         	call	___awdiv	;wreg free
  1449  000A8A  C007  F06C         	movff	?___awdiv,sprintf@exp
  1450  000A8E  C008  F06D         	movff	?___awdiv+1,sprintf@exp+1
  1451                           
  1452                           ;doprnt.c: 841: if(exp < 0)
  1453  000A92  0100               	movlb	0	; () banked
  1454  000A94  AF6D               	btfss	(sprintf@exp+1)& (0+255),7,b
  1455  000A96  D004               	goto	l3273
  1456                           
  1457                           ; BSR set to: 0
  1458                           ;doprnt.c: 842: exp--;
  1459  000A98  0100               	movlb	0	; () banked
  1460  000A9A  076C               	decf	sprintf@exp& (0+255),f,b
  1461  000A9C  A0D8               	btfss	status,0,c
  1462  000A9E  076D               	decf	(sprintf@exp+1)& (0+255),f,b
  1463  000AA0                     l3273:
  1464                           
  1465                           ; BSR set to: 0
  1466                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  1467  000AA0  0100               	movlb	0	; () banked
  1468  000AA2  516C               	movf	sprintf@exp& (0+255),w,b
  1469  000AA4  0800               	sublw	0
  1470  000AA6  EC72  F008         	call	_scale
  1471  000AAA  C028  F06E         	movff	?_scale,sprintf@tmpval
  1472  000AAE  C029  F06F         	movff	?_scale+1,sprintf@tmpval+1
  1473  000AB2  C02A  F070         	movff	?_scale+2,sprintf@tmpval+2
  1474  000AB6  C02B  F071         	movff	?_scale+3,sprintf@tmpval+3
  1475                           
  1476                           ;doprnt.c: 847: tmpval.integ *= fval;
  1477  000ABA  C06E  F00F         	movff	sprintf@tmpval,___flmul@b
  1478  000ABE  C06F  F010         	movff	sprintf@tmpval+1,___flmul@b+1
  1479  000AC2  C070  F011         	movff	sprintf@tmpval+2,___flmul@b+2
  1480  000AC6  C071  F012         	movff	sprintf@tmpval+3,___flmul@b+3
  1481  000ACA  C074  F013         	movff	sprintf@fval,___flmul@a
  1482  000ACE  C075  F014         	movff	sprintf@fval+1,___flmul@a+1
  1483  000AD2  C076  F015         	movff	sprintf@fval+2,___flmul@a+2
  1484  000AD6  C077  F016         	movff	sprintf@fval+3,___flmul@a+3
  1485  000ADA  EC7E  F00A         	call	___flmul	;wreg free
  1486  000ADE  C00F  F06E         	movff	?___flmul,sprintf@tmpval
  1487  000AE2  C010  F06F         	movff	?___flmul+1,sprintf@tmpval+1
  1488  000AE6  C011  F070         	movff	?___flmul+2,sprintf@tmpval+2
  1489  000AEA  C012  F071         	movff	?___flmul+3,sprintf@tmpval+3
  1490                           
  1491                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  1492  000AEE  C06E  F001         	movff	sprintf@tmpval,___flge@ff1
  1493  000AF2  C06F  F002         	movff	sprintf@tmpval+1,___flge@ff1+1
  1494  000AF6  C070  F003         	movff	sprintf@tmpval+2,___flge@ff1+2
  1495  000AFA  C071  F004         	movff	sprintf@tmpval+3,___flge@ff1+3
  1496  000AFE  0E00               	movlw	0
  1497  000B00  6E05               	movwf	___flge@ff2,c
  1498  000B02  0E00               	movlw	0
  1499  000B04  6E06               	movwf	___flge@ff2+1,c
  1500  000B06  0E80               	movlw	128
  1501  000B08  6E07               	movwf	___flge@ff2+2,c
  1502  000B0A  0E3F               	movlw	63
  1503  000B0C  6E08               	movwf	___flge@ff2+3,c
  1504  000B0E  ECEF  F012         	call	___flge	;wreg free
  1505  000B12  B0D8               	btfsc	status,0,c
  1506  000B14  D005               	goto	l3281
  1507                           
  1508                           ;doprnt.c: 849: exp--;
  1509  000B16  0100               	movlb	0	; () banked
  1510  000B18  076C               	decf	sprintf@exp& (0+255),f,b
  1511  000B1A  A0D8               	btfss	status,0,c
  1512  000B1C  076D               	decf	(sprintf@exp+1)& (0+255),f,b
  1513  000B1E  D017               	goto	l3285
  1514  000B20                     l3281:
  1515                           
  1516                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  1517  000B20  C06E  F001         	movff	sprintf@tmpval,___flge@ff1
  1518  000B24  C06F  F002         	movff	sprintf@tmpval+1,___flge@ff1+1
  1519  000B28  C070  F003         	movff	sprintf@tmpval+2,___flge@ff1+2
  1520  000B2C  C071  F004         	movff	sprintf@tmpval+3,___flge@ff1+3
  1521  000B30  0E00               	movlw	0
  1522  000B32  6E05               	movwf	___flge@ff2,c
  1523  000B34  0E00               	movlw	0
  1524  000B36  6E06               	movwf	___flge@ff2+1,c
  1525  000B38  0E20               	movlw	32
  1526  000B3A  6E07               	movwf	___flge@ff2+2,c
  1527  000B3C  0E41               	movlw	65
  1528  000B3E  6E08               	movwf	___flge@ff2+3,c
  1529  000B40  ECEF  F012         	call	___flge	;wreg free
  1530  000B44  A0D8               	btfss	status,0,c
  1531  000B46  D003               	goto	l3285
  1532                           
  1533                           ;doprnt.c: 851: exp++;
  1534  000B48  0100               	movlb	0	; () banked
  1535  000B4A  4B6C               	infsnz	sprintf@exp& (0+255),f,b
  1536  000B4C  2B6D               	incf	(sprintf@exp+1)& (0+255),f,b
  1537  000B4E                     l3285:
  1538                           
  1539                           ;doprnt.c: 852: }
  1540                           ;doprnt.c: 1112: if(prec <= 12)
  1541  000B4E  0100               	movlb	0	; () banked
  1542  000B50  BF73               	btfsc	(sprintf@prec+1)& (0+255),7,b
  1543  000B52  D008               	goto	l3287
  1544  000B54  0100               	movlb	0	; () banked
  1545  000B56  5173               	movf	(sprintf@prec+1)& (0+255),w,b
  1546  000B58  E123               	bnz	l3289
  1547  000B5A  0E0D               	movlw	13
  1548  000B5C  0100               	movlb	0	; () banked
  1549  000B5E  5D72               	subwf	sprintf@prec& (0+255),w,b
  1550  000B60  B0D8               	btfsc	status,0,c
  1551  000B62  D01E               	goto	l3289
  1552  000B64                     l3287:
  1553                           
  1554                           ; BSR set to: 0
  1555                           ;doprnt.c: 1113: fval += fround(prec);
  1556  000B64  C074  F035         	movff	sprintf@fval,___fladd@b
  1557  000B68  C075  F036         	movff	sprintf@fval+1,___fladd@b+1
  1558  000B6C  C076  F037         	movff	sprintf@fval+2,___fladd@b+2
  1559  000B70  C077  F038         	movff	sprintf@fval+3,___fladd@b+3
  1560  000B74  0100               	movlb	0	; () banked
  1561  000B76  5172               	movf	sprintf@prec& (0+255),w,b
  1562  000B78  EC1E  F00F         	call	_fround
  1563  000B7C  C028  F039         	movff	?_fround,___fladd@a
  1564  000B80  C029  F03A         	movff	?_fround+1,___fladd@a+1
  1565  000B84  C02A  F03B         	movff	?_fround+2,___fladd@a+2
  1566  000B88  C02B  F03C         	movff	?_fround+3,___fladd@a+3
  1567  000B8C  EC26  F00C         	call	___fladd	;wreg free
  1568  000B90  C035  F074         	movff	?___fladd,sprintf@fval
  1569  000B94  C036  F075         	movff	?___fladd+1,sprintf@fval+1
  1570  000B98  C037  F076         	movff	?___fladd+2,sprintf@fval+2
  1571  000B9C  C038  F077         	movff	?___fladd+3,sprintf@fval+3
  1572  000BA0                     l3289:
  1573                           
  1574                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  1575  000BA0  0100               	movlb	0	; () banked
  1576  000BA2  BF6D               	btfsc	(sprintf@exp+1)& (0+255),7,b
  1577  000BA4  D008               	goto	l3291
  1578  000BA6  0100               	movlb	0	; () banked
  1579  000BA8  516D               	movf	(sprintf@exp+1)& (0+255),w,b
  1580  000BAA  E12A               	bnz	l3297
  1581  000BAC  0E0A               	movlw	10
  1582  000BAE  0100               	movlb	0	; () banked
  1583  000BB0  5D6C               	subwf	sprintf@exp& (0+255),w,b
  1584  000BB2  B0D8               	btfsc	status,0,c
  1585  000BB4  D025               	goto	l3297
  1586  000BB6                     l3291:
  1587                           
  1588                           ; BSR set to: 0
  1589  000BB6  0100               	movlb	0	; () banked
  1590  000BB8  5174               	movf	sprintf@fval& (0+255),w,b
  1591  000BBA  0100               	movlb	0	; () banked
  1592  000BBC  1175               	iorwf	(sprintf@fval+1)& (0+255),w,b
  1593  000BBE  0100               	movlb	0	; () banked
  1594  000BC0  1176               	iorwf	(sprintf@fval+2)& (0+255),w,b
  1595  000BC2  0100               	movlb	0	; () banked
  1596  000BC4  1177               	iorwf	(sprintf@fval+3)& (0+255),w,b
  1597  000BC6  B4D8               	btfsc	status,2,c
  1598  000BC8  D067               	goto	l3311
  1599                           
  1600                           ; BSR set to: 0
  1601  000BCA  C074  F031         	movff	sprintf@fval,___fltol@f1
  1602  000BCE  C075  F032         	movff	sprintf@fval+1,___fltol@f1+1
  1603  000BD2  C076  F033         	movff	sprintf@fval+2,___fltol@f1+2
  1604  000BD6  C077  F034         	movff	sprintf@fval+3,___fltol@f1+3
  1605  000BDA  EC0C  F014         	call	___fltol	;wreg free
  1606  000BDE  5031               	movf	?___fltol,w,c
  1607  000BE0  1032               	iorwf	?___fltol+1,w,c
  1608  000BE2  1033               	iorwf	?___fltol+2,w,c
  1609  000BE4  1034               	iorwf	?___fltol+3,w,c
  1610  000BE6  A4D8               	btfss	status,2,c
  1611  000BE8  D057               	goto	l3311
  1612  000BEA  0100               	movlb	0	; () banked
  1613  000BEC  BF6D               	btfsc	(sprintf@exp+1)& (0+255),7,b
  1614  000BEE  D054               	goto	l3311
  1615  000BF0  0100               	movlb	0	; () banked
  1616  000BF2  516D               	movf	(sprintf@exp+1)& (0+255),w,b
  1617  000BF4  E105               	bnz	l3297
  1618  000BF6  0E02               	movlw	2
  1619  000BF8  0100               	movlb	0	; () banked
  1620  000BFA  5D6C               	subwf	sprintf@exp& (0+255),w,b
  1621  000BFC  A0D8               	btfss	status,0,c
  1622  000BFE  D04C               	goto	l3311
  1623  000C00                     l3297:
  1624                           
  1625                           ; BSR set to: 0
  1626                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  1627  000C00  C06E  F001         	movff	sprintf@tmpval,___flge@ff1
  1628  000C04  C06F  F002         	movff	sprintf@tmpval+1,___flge@ff1+1
  1629  000C08  C070  F003         	movff	sprintf@tmpval+2,___flge@ff1+2
  1630  000C0C  C071  F004         	movff	sprintf@tmpval+3,___flge@ff1+3
  1631  000C10  0E5F               	movlw	95
  1632  000C12  6E05               	movwf	___flge@ff2,c
  1633  000C14  0E70               	movlw	112
  1634  000C16  6E06               	movwf	___flge@ff2+1,c
  1635  000C18  0E89               	movlw	137
  1636  000C1A  6E07               	movwf	___flge@ff2+2,c
  1637  000C1C  0E40               	movlw	64
  1638  000C1E  6E08               	movwf	___flge@ff2+3,c
  1639  000C20  ECEF  F012         	call	___flge	;wreg free
  1640  000C24  B0D8               	btfsc	status,0,c
  1641  000C26  D003               	goto	l3301
  1642                           
  1643                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  1644  000C28  0100               	movlb	0	; () banked
  1645  000C2A  0EF7               	movlw	247
  1646  000C2C  D002               	goto	L1
  1647  000C2E                     l3301:
  1648                           
  1649                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  1650  000C2E  0100               	movlb	0	; () banked
  1651  000C30  0EF8               	movlw	248
  1652  000C32                     L1:
  1653  000C32  276C               	addwf	sprintf@exp& (0+255),f,b
  1654  000C34  0EFF               	movlw	255
  1655  000C36  236D               	addwfc	(sprintf@exp+1)& (0+255),f,b
  1656                           
  1657                           ; BSR set to: 0
  1658                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  1659                           
  1660                           ; BSR set to: 0
  1661  000C38  0100               	movlb	0	; () banked
  1662  000C3A  516C               	movf	sprintf@exp& (0+255),w,b
  1663  000C3C  EC72  F008         	call	_scale
  1664  000C40  C028  F06E         	movff	?_scale,sprintf@tmpval
  1665  000C44  C029  F06F         	movff	?_scale+1,sprintf@tmpval+1
  1666  000C48  C02A  F070         	movff	?_scale+2,sprintf@tmpval+2
  1667  000C4C  C02B  F071         	movff	?_scale+3,sprintf@tmpval+3
  1668  000C50  C074  F001         	movff	sprintf@fval,__div_to_l_@f1
  1669  000C54  C075  F002         	movff	sprintf@fval+1,__div_to_l_@f1+1
  1670  000C58  C076  F003         	movff	sprintf@fval+2,__div_to_l_@f1+2
  1671  000C5C  C077  F004         	movff	sprintf@fval+3,__div_to_l_@f1+3
  1672  000C60  C06E  F005         	movff	sprintf@tmpval,__div_to_l_@f2
  1673  000C64  C06F  F006         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
  1674  000C68  C070  F007         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
  1675  000C6C  C071  F008         	movff	sprintf@tmpval+3,__div_to_l_@f2+3
  1676  000C70  EC5B  F012         	call	__div_to_l_	;wreg free
  1677  000C74  C001  F068         	movff	?__div_to_l_,sprintf@val
  1678  000C78  C002  F069         	movff	?__div_to_l_+1,sprintf@val+1
  1679  000C7C  C003  F06A         	movff	?__div_to_l_+2,sprintf@val+2
  1680  000C80  C004  F06B         	movff	?__div_to_l_+3,sprintf@val+3
  1681                           
  1682                           ;doprnt.c: 1129: fval = 0.0;
  1683  000C84  0E00               	movlw	0
  1684  000C86  0100               	movlb	0	; () banked
  1685  000C88  6F74               	movwf	sprintf@fval& (0+255),b
  1686  000C8A  0E00               	movlw	0
  1687  000C8C  6F75               	movwf	(sprintf@fval+1)& (0+255),b
  1688  000C8E  0E00               	movlw	0
  1689  000C90  6F76               	movwf	(sprintf@fval+2)& (0+255),b
  1690  000C92  0E00               	movlw	0
  1691  000C94  6F77               	movwf	(sprintf@fval+3)& (0+255),b
  1692                           
  1693                           ;doprnt.c: 1130: } else {
  1694  000C96  D03C               	goto	l3315
  1695  000C98                     l3311:
  1696                           
  1697                           ;doprnt.c: 1131: val = (unsigned long)fval;
  1698  000C98  C074  F031         	movff	sprintf@fval,___fltol@f1
  1699  000C9C  C075  F032         	movff	sprintf@fval+1,___fltol@f1+1
  1700  000CA0  C076  F033         	movff	sprintf@fval+2,___fltol@f1+2
  1701  000CA4  C077  F034         	movff	sprintf@fval+3,___fltol@f1+3
  1702  000CA8  EC0C  F014         	call	___fltol	;wreg free
  1703  000CAC  C031  F068         	movff	?___fltol,sprintf@val
  1704  000CB0  C032  F069         	movff	?___fltol+1,sprintf@val+1
  1705  000CB4  C033  F06A         	movff	?___fltol+2,sprintf@val+2
  1706  000CB8  C034  F06B         	movff	?___fltol+3,sprintf@val+3
  1707                           
  1708                           ;doprnt.c: 1132: fval -= (double)val;
  1709  000CBC  C074  F049         	movff	sprintf@fval,___flsub@b
  1710  000CC0  C075  F04A         	movff	sprintf@fval+1,___flsub@b+1
  1711  000CC4  C076  F04B         	movff	sprintf@fval+2,___flsub@b+2
  1712  000CC8  C077  F04C         	movff	sprintf@fval+3,___flsub@b+3
  1713  000CCC  C068  F00F         	movff	sprintf@val,___xxtofl@val
  1714  000CD0  C069  F010         	movff	sprintf@val+1,___xxtofl@val+1
  1715  000CD4  C06A  F011         	movff	sprintf@val+2,___xxtofl@val+2
  1716  000CD8  C06B  F012         	movff	sprintf@val+3,___xxtofl@val+3
  1717  000CDC  0E00               	movlw	0
  1718  000CDE  EC1A  F011         	call	___xxtofl
  1719  000CE2  C00F  F04D         	movff	?___xxtofl,___flsub@a
  1720  000CE6  C010  F04E         	movff	?___xxtofl+1,___flsub@a+1
  1721  000CEA  C011  F04F         	movff	?___xxtofl+2,___flsub@a+2
  1722  000CEE  C012  F050         	movff	?___xxtofl+3,___flsub@a+3
  1723  000CF2  ECE1  F016         	call	___flsub	;wreg free
  1724  000CF6  C049  F074         	movff	?___flsub,sprintf@fval
  1725  000CFA  C04A  F075         	movff	?___flsub+1,sprintf@fval+1
  1726  000CFE  C04B  F076         	movff	?___flsub+2,sprintf@fval+2
  1727  000D02  C04C  F077         	movff	?___flsub+3,sprintf@fval+3
  1728                           
  1729                           ;doprnt.c: 1133: exp = 0;
  1730  000D06  0E00               	movlw	0
  1731  000D08  0100               	movlb	0	; () banked
  1732  000D0A  6F6D               	movwf	(sprintf@exp+1)& (0+255),b
  1733  000D0C  0E00               	movlw	0
  1734  000D0E  6F6C               	movwf	sprintf@exp& (0+255),b
  1735  000D10                     l3315:
  1736                           
  1737                           ; BSR set to: 0
  1738                           ;doprnt.c: 1134: }
  1739                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  1740  000D10  0E01               	movlw	1
  1741  000D12  0100               	movlb	0	; () banked
  1742  000D14  6F78               	movwf	sprintf@c& (0+255),b
  1743  000D16                     l3317:
  1744                           
  1745                           ; BSR set to: 0
  1746  000D16  0E0A               	movlw	10
  1747  000D18  0100               	movlb	0	; () banked
  1748  000D1A  1978               	xorwf	sprintf@c& (0+255),w,b
  1749  000D1C  B4D8               	btfsc	status,2,c
  1750  000D1E  D01E               	goto	l3329
  1751                           
  1752                           ; BSR set to: 0
  1753                           ;doprnt.c: 1137: if(val < dpowers[c])
  1754                           
  1755                           ; BSR set to: 0
  1756                           
  1757                           ; BSR set to: 0
  1758  000D20  0100               	movlb	0	; () banked
  1759  000D22  5178               	movf	sprintf@c& (0+255),w,b
  1760  000D24  0D04               	mullw	4
  1761  000D26  0E69               	movlw	low _dpowers
  1762  000D28  24F3               	addwf	prodl,w,c
  1763  000D2A  6EF6               	movwf	tblptrl,c
  1764  000D2C  0E08               	movlw	high _dpowers
  1765  000D2E  20F4               	addwfc	prodh,w,c
  1766  000D30  6EF7               	movwf	tblptrh,c
  1767  000D32                     	if	0	;There are less than 3 active tblptr bytes
  1768  000D32                     	endif
  1769  000D32  0009               	tblrd		*+
  1770  000D34  50F5               	movf	tablat,w,c
  1771  000D36  0100               	movlb	0	; () banked
  1772  000D38  5D68               	subwf	sprintf@val& (0+255),w,b
  1773  000D3A  0009               	tblrd		*+
  1774  000D3C  50F5               	movf	tablat,w,c
  1775  000D3E  0100               	movlb	0	; () banked
  1776  000D40  5969               	subwfb	(sprintf@val+1)& (0+255),w,b
  1777  000D42  0009               	tblrd		*+
  1778  000D44  50F5               	movf	tablat,w,c
  1779  000D46  0100               	movlb	0	; () banked
  1780  000D48  596A               	subwfb	(sprintf@val+2)& (0+255),w,b
  1781  000D4A  0009               	tblrd		*+
  1782  000D4C  50F5               	movf	tablat,w,c
  1783  000D4E  0100               	movlb	0	; () banked
  1784  000D50  596B               	subwfb	(sprintf@val+3)& (0+255),w,b
  1785  000D52  A0D8               	btfss	status,0,c
  1786  000D54  D003               	goto	l3329
  1787                           
  1788                           ; BSR set to: 0
  1789                           
  1790                           ; BSR set to: 0
  1791                           
  1792                           ; BSR set to: 0
  1793                           ;doprnt.c: 1138: break;
  1794  000D56  0100               	movlb	0	; () banked
  1795  000D58  2B78               	incf	sprintf@c& (0+255),f,b
  1796  000D5A  D7DD               	goto	l3317
  1797  000D5C                     l3329:
  1798                           
  1799                           ; BSR set to: 0
  1800                           ;doprnt.c: 1175: {
  1801                           ;doprnt.c: 1188: if(flag & 0x03)
  1802  000D5C  0E03               	movlw	3
  1803  000D5E  0100               	movlb	0	; () banked
  1804  000D60  1566               	andwf	sprintf@flag& (0+255),w,b
  1805  000D62  6E59               	movwf	??_sprintf& (0+255),c
  1806  000D64  0E00               	movlw	0
  1807  000D66  0100               	movlb	0	; () banked
  1808  000D68  1567               	andwf	(sprintf@flag+1)& (0+255),w,b
  1809  000D6A  6E5A               	movwf	(??_sprintf+1)& (0+255),c
  1810  000D6C  5059               	movf	??_sprintf,w,c
  1811  000D6E  105A               	iorwf	??_sprintf+1,w,c
  1812  000D70  B4D8               	btfsc	status,2,c
  1813  000D72  D053               	goto	l3343
  1814                           
  1815                           ; BSR set to: 0
  1816                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  1817  000D74  C051  FFD9         	movff	sprintf@sp,fsr2l
  1818  000D78  C052  FFDA         	movff	sprintf@sp+1,fsr2h
  1819  000D7C  0E2D               	movlw	45
  1820  000D7E  D04B               	goto	L2
  1821  000D80                     l3333:
  1822                           
  1823                           ; BSR set to: 0
  1824  000D80  4A51               	infsnz	sprintf@sp,f,c
  1825  000D82  2A52               	incf	sprintf@sp+1,f,c
  1826                           
  1827                           ; BSR set to: 0
  1828                           ;doprnt.c: 1195: }
  1829                           ;doprnt.c: 1196: while(c--) {
  1830  000D84  D04A               	goto	l3343
  1831  000D86                     l3335:
  1832                           
  1833                           ; BSR set to: 0
  1834                           ;doprnt.c: 1200: {
  1835                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  1836  000D86  C068  F001         	movff	sprintf@val,___lldiv@dividend
  1837  000D8A  C069  F002         	movff	sprintf@val+1,___lldiv@dividend+1
  1838  000D8E  C06A  F003         	movff	sprintf@val+2,___lldiv@dividend+2
  1839  000D92  C06B  F004         	movff	sprintf@val+3,___lldiv@dividend+3
  1840  000D96  0100               	movlb	0	; () banked
  1841  000D98  5178               	movf	sprintf@c& (0+255),w,b
  1842  000D9A  0D04               	mullw	4
  1843  000D9C  0E69               	movlw	low _dpowers
  1844  000D9E  24F3               	addwf	prodl,w,c
  1845  000DA0  6EF6               	movwf	tblptrl,c
  1846  000DA2  0E08               	movlw	high _dpowers
  1847  000DA4  20F4               	addwfc	prodh,w,c
  1848  000DA6  6EF7               	movwf	tblptrh,c
  1849  000DA8                     	if	0	;There are less than 3 active tblptr bytes
  1850  000DA8                     	endif
  1851  000DA8  0009               	tblrd		*+
  1852  000DAA  CFF5 F005          	movff	tablat,___lldiv@divisor
  1853  000DAE  0009               	tblrd		*+
  1854  000DB0  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  1855  000DB4  0009               	tblrd		*+
  1856  000DB6  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  1857  000DBA  000A               	tblrd		*-
  1858  000DBC  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  1859  000DC0  EC85  F015         	call	___lldiv	;wreg free
  1860  000DC4  C001  F06E         	movff	?___lldiv,sprintf@tmpval
  1861  000DC8  C002  F06F         	movff	?___lldiv+1,sprintf@tmpval+1
  1862  000DCC  C003  F070         	movff	?___lldiv+2,sprintf@tmpval+2
  1863  000DD0  C004  F071         	movff	?___lldiv+3,sprintf@tmpval+3
  1864                           
  1865                           ;doprnt.c: 1202: tmpval.vd %= 10;
  1866  000DD4  C06E  F001         	movff	sprintf@tmpval,___llmod@dividend
  1867  000DD8  C06F  F002         	movff	sprintf@tmpval+1,___llmod@dividend+1
  1868  000DDC  C070  F003         	movff	sprintf@tmpval+2,___llmod@dividend+2
  1869  000DE0  C071  F004         	movff	sprintf@tmpval+3,___llmod@dividend+3
  1870  000DE4  0E0A               	movlw	10
  1871  000DE6  6E05               	movwf	___llmod@divisor,c
  1872  000DE8  0E00               	movlw	0
  1873  000DEA  6E06               	movwf	___llmod@divisor+1,c
  1874  000DEC  0E00               	movlw	0
  1875  000DEE  6E07               	movwf	___llmod@divisor+2,c
  1876  000DF0  0E00               	movlw	0
  1877  000DF2  6E08               	movwf	___llmod@divisor+3,c
  1878  000DF4  EC36  F016         	call	___llmod	;wreg free
  1879  000DF8  C001  F06E         	movff	?___llmod,sprintf@tmpval
  1880  000DFC  C002  F06F         	movff	?___llmod+1,sprintf@tmpval+1
  1881  000E00  C003  F070         	movff	?___llmod+2,sprintf@tmpval+2
  1882  000E04  C004  F071         	movff	?___llmod+3,sprintf@tmpval+3
  1883                           
  1884                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  1885  000E08  0100               	movlb	0	; () banked
  1886  000E0A  516E               	movf	sprintf@tmpval& (0+255),w,b
  1887  000E0C  0F30               	addlw	48
  1888  000E0E  C051  FFD9         	movff	sprintf@sp,fsr2l
  1889  000E12  C052  FFDA         	movff	sprintf@sp+1,fsr2h
  1890  000E16                     L2:
  1891  000E16  6EDF               	movwf	indf2,c
  1892  000E18  D7B3               	goto	l3333
  1893  000E1A                     l3343:
  1894                           
  1895                           ; BSR set to: 0
  1896  000E1A  0100               	movlb	0	; () banked
  1897  000E1C  0778               	decf	sprintf@c& (0+255),f,b
  1898  000E1E  0100               	movlb	0	; () banked
  1899  000E20  2978               	incf	sprintf@c& (0+255),w,b
  1900  000E22  B4D8               	btfsc	status,2,c
  1901  000E24  D00D               	goto	l3351
  1902  000E26  D7AF               	goto	l3335
  1903  000E28                     l3345:
  1904                           
  1905                           ; BSR set to: 0
  1906                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  1907  000E28  C051  FFD9         	movff	sprintf@sp,fsr2l
  1908  000E2C  C052  FFDA         	movff	sprintf@sp+1,fsr2h
  1909  000E30  0E30               	movlw	48
  1910  000E32  6EDF               	movwf	indf2,c
  1911                           
  1912                           ; BSR set to: 0
  1913  000E34  4A51               	infsnz	sprintf@sp,f,c
  1914  000E36  2A52               	incf	sprintf@sp+1,f,c
  1915                           
  1916                           ; BSR set to: 0
  1917                           ;doprnt.c: 1209: exp--;
  1918  000E38  0100               	movlb	0	; () banked
  1919  000E3A  076C               	decf	sprintf@exp& (0+255),f,b
  1920  000E3C  A0D8               	btfss	status,0,c
  1921  000E3E  076D               	decf	(sprintf@exp+1)& (0+255),f,b
  1922  000E40                     l3351:
  1923                           
  1924                           ; BSR set to: 0
  1925  000E40  0100               	movlb	0	; () banked
  1926  000E42  BF6D               	btfsc	(sprintf@exp+1)& (0+255),7,b
  1927  000E44  D007               	goto	l3353
  1928  000E46  0100               	movlb	0	; () banked
  1929  000E48  516D               	movf	(sprintf@exp+1)& (0+255),w,b
  1930  000E4A  E1EE               	bnz	l3345
  1931  000E4C  0100               	movlb	0	; () banked
  1932  000E4E  056C               	decf	sprintf@exp& (0+255),w,b
  1933  000E50  B0D8               	btfsc	status,0,c
  1934  000E52  D7EA               	goto	l3345
  1935  000E54                     l3353:
  1936                           
  1937                           ; BSR set to: 0
  1938                           ;doprnt.c: 1210: }
  1939                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  1940  000E54  0100               	movlb	0	; () banked
  1941  000E56  BF73               	btfsc	(sprintf@prec+1)& (0+255),7,b
  1942  000E58  D00C               	goto	l249
  1943  000E5A  0100               	movlb	0	; () banked
  1944  000E5C  5173               	movf	(sprintf@prec+1)& (0+255),w,b
  1945  000E5E  E105               	bnz	u3590
  1946  000E60  0E09               	movlw	9
  1947  000E62  0100               	movlb	0	; () banked
  1948  000E64  5D72               	subwf	sprintf@prec& (0+255),w,b
  1949  000E66  A0D8               	btfss	status,0,c
  1950  000E68  D004               	goto	l249
  1951  000E6A                     u3590:
  1952                           
  1953                           ; BSR set to: 0
  1954                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  1955  000E6A  0E08               	movlw	8
  1956  000E6C  0100               	movlb	0	; () banked
  1957  000E6E  6F78               	movwf	sprintf@c& (0+255),b
  1958  000E70  D002               	goto	l3357
  1959  000E72                     l249:
  1960                           
  1961                           ; BSR set to: 0
  1962                           ;doprnt.c: 1213: else
  1963                           ;doprnt.c: 1214: c = prec;
  1964  000E72  C072  F078         	movff	sprintf@prec,sprintf@c
  1965  000E76                     l3357:
  1966                           
  1967                           ; BSR set to: 0
  1968                           ;doprnt.c: 1215: prec -= c;
  1969  000E76  0100               	movlb	0	; () banked
  1970  000E78  5178               	movf	sprintf@c& (0+255),w,b
  1971  000E7A  0100               	movlb	0	; () banked
  1972  000E7C  5F72               	subwf	sprintf@prec& (0+255),f,b
  1973  000E7E  0E00               	movlw	0
  1974  000E80  0100               	movlb	0	; () banked
  1975  000E82  BF78               	btfsc	sprintf@c& (0+255),7,b
  1976  000E84  0EFF               	movlw	255
  1977  000E86  0100               	movlb	0	; () banked
  1978  000E88  5B73               	subwfb	(sprintf@prec+1)& (0+255),f,b
  1979                           
  1980                           ; BSR set to: 0
  1981                           ;doprnt.c: 1219: if(c)
  1982  000E8A  0100               	movlb	0	; () banked
  1983  000E8C  5178               	movf	sprintf@c& (0+255),w,b
  1984  000E8E  0100               	movlb	0	; () banked
  1985  000E90  B4D8               	btfsc	status,2,c
  1986  000E92  D008               	goto	l3365
  1987                           
  1988                           ; BSR set to: 0
  1989                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  1990  000E94  C051  FFD9         	movff	sprintf@sp,fsr2l
  1991  000E98  C052  FFDA         	movff	sprintf@sp+1,fsr2h
  1992  000E9C  0E2E               	movlw	46
  1993  000E9E  6EDF               	movwf	indf2,c
  1994                           
  1995                           ; BSR set to: 0
  1996  000EA0  4A51               	infsnz	sprintf@sp,f,c
  1997  000EA2  2A52               	incf	sprintf@sp+1,f,c
  1998  000EA4                     l3365:
  1999                           
  2000                           ; BSR set to: 0
  2001                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  2002  000EA4  0100               	movlb	0	; () banked
  2003  000EA6  5178               	movf	sprintf@c& (0+255),w,b
  2004  000EA8  EC72  F008         	call	_scale
  2005  000EAC  C028  F060         	movff	?_scale,_sprintf$1109
  2006  000EB0  C029  F061         	movff	?_scale+1,_sprintf$1109+1
  2007  000EB4  C02A  F062         	movff	?_scale+2,_sprintf$1109+2
  2008  000EB8  C02B  F063         	movff	?_scale+3,_sprintf$1109+3
  2009                           
  2010                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  2011  000EBC  C074  F013         	movff	sprintf@fval,___flmul@a
  2012  000EC0  C075  F014         	movff	sprintf@fval+1,___flmul@a+1
  2013  000EC4  C076  F015         	movff	sprintf@fval+2,___flmul@a+2
  2014  000EC8  C077  F016         	movff	sprintf@fval+3,___flmul@a+3
  2015  000ECC  C060  F00F         	movff	_sprintf$1109,___flmul@b
  2016  000ED0  C061  F010         	movff	_sprintf$1109+1,___flmul@b+1
  2017  000ED4  C062  F011         	movff	_sprintf$1109+2,___flmul@b+2
  2018  000ED8  C063  F012         	movff	_sprintf$1109+3,___flmul@b+3
  2019  000EDC  EC7E  F00A         	call	___flmul	;wreg free
  2020  000EE0  C00F  F031         	movff	?___flmul,___fltol@f1
  2021  000EE4  C010  F032         	movff	?___flmul+1,___fltol@f1+1
  2022  000EE8  C011  F033         	movff	?___flmul+2,___fltol@f1+2
  2023  000EEC  C012  F034         	movff	?___flmul+3,___fltol@f1+3
  2024  000EF0  EC0C  F014         	call	___fltol	;wreg free
  2025  000EF4  C031  F068         	movff	?___fltol,sprintf@val
  2026  000EF8  C032  F069         	movff	?___fltol+1,sprintf@val+1
  2027  000EFC  C033  F06A         	movff	?___fltol+2,sprintf@val+2
  2028  000F00  C034  F06B         	movff	?___fltol+3,sprintf@val+3
  2029                           
  2030                           ;doprnt.c: 1228: while(c--) {
  2031  000F04  D072               	goto	l3379
  2032  000F06                     l3369:
  2033                           
  2034                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  2035  000F06  C068  F001         	movff	sprintf@val,___lldiv@dividend
  2036  000F0A  C069  F002         	movff	sprintf@val+1,___lldiv@dividend+1
  2037  000F0E  C06A  F003         	movff	sprintf@val+2,___lldiv@dividend+2
  2038  000F12  C06B  F004         	movff	sprintf@val+3,___lldiv@dividend+3
  2039  000F16  0100               	movlb	0	; () banked
  2040  000F18  5178               	movf	sprintf@c& (0+255),w,b
  2041  000F1A  0D04               	mullw	4
  2042  000F1C  0E69               	movlw	low _dpowers
  2043  000F1E  24F3               	addwf	prodl,w,c
  2044  000F20  6EF6               	movwf	tblptrl,c
  2045  000F22  0E08               	movlw	high _dpowers
  2046  000F24  20F4               	addwfc	prodh,w,c
  2047  000F26  6EF7               	movwf	tblptrh,c
  2048  000F28                     	if	0	;There are less than 3 active tblptr bytes
  2049  000F28                     	endif
  2050  000F28  0009               	tblrd		*+
  2051  000F2A  CFF5 F005          	movff	tablat,___lldiv@divisor
  2052  000F2E  0009               	tblrd		*+
  2053  000F30  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  2054  000F34  0009               	tblrd		*+
  2055  000F36  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  2056  000F3A  000A               	tblrd		*-
  2057  000F3C  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  2058  000F40  EC85  F015         	call	___lldiv	;wreg free
  2059  000F44  C001  F06E         	movff	?___lldiv,sprintf@tmpval
  2060  000F48  C002  F06F         	movff	?___lldiv+1,sprintf@tmpval+1
  2061  000F4C  C003  F070         	movff	?___lldiv+2,sprintf@tmpval+2
  2062  000F50  C004  F071         	movff	?___lldiv+3,sprintf@tmpval+3
  2063                           
  2064                           ;doprnt.c: 1230: tmpval.vd %= 10;
  2065  000F54  C06E  F001         	movff	sprintf@tmpval,___llmod@dividend
  2066  000F58  C06F  F002         	movff	sprintf@tmpval+1,___llmod@dividend+1
  2067  000F5C  C070  F003         	movff	sprintf@tmpval+2,___llmod@dividend+2
  2068  000F60  C071  F004         	movff	sprintf@tmpval+3,___llmod@dividend+3
  2069  000F64  0E0A               	movlw	10
  2070  000F66  6E05               	movwf	___llmod@divisor,c
  2071  000F68  0E00               	movlw	0
  2072  000F6A  6E06               	movwf	___llmod@divisor+1,c
  2073  000F6C  0E00               	movlw	0
  2074  000F6E  6E07               	movwf	___llmod@divisor+2,c
  2075  000F70  0E00               	movlw	0
  2076  000F72  6E08               	movwf	___llmod@divisor+3,c
  2077  000F74  EC36  F016         	call	___llmod	;wreg free
  2078  000F78  C001  F06E         	movff	?___llmod,sprintf@tmpval
  2079  000F7C  C002  F06F         	movff	?___llmod+1,sprintf@tmpval+1
  2080  000F80  C003  F070         	movff	?___llmod+2,sprintf@tmpval+2
  2081  000F84  C004  F071         	movff	?___llmod+3,sprintf@tmpval+3
  2082                           
  2083                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  2084  000F88  0100               	movlb	0	; () banked
  2085  000F8A  516E               	movf	sprintf@tmpval& (0+255),w,b
  2086  000F8C  0F30               	addlw	48
  2087  000F8E  C051  FFD9         	movff	sprintf@sp,fsr2l
  2088  000F92  C052  FFDA         	movff	sprintf@sp+1,fsr2h
  2089  000F96  6EDF               	movwf	indf2,c
  2090                           
  2091                           ; BSR set to: 0
  2092  000F98  4A51               	infsnz	sprintf@sp,f,c
  2093  000F9A  2A52               	incf	sprintf@sp+1,f,c
  2094                           
  2095                           ; BSR set to: 0
  2096                           ;doprnt.c: 1232: val %= dpowers[c];
  2097  000F9C  C068  F001         	movff	sprintf@val,___llmod@dividend
  2098  000FA0  C069  F002         	movff	sprintf@val+1,___llmod@dividend+1
  2099  000FA4  C06A  F003         	movff	sprintf@val+2,___llmod@dividend+2
  2100  000FA8  C06B  F004         	movff	sprintf@val+3,___llmod@dividend+3
  2101  000FAC  0100               	movlb	0	; () banked
  2102  000FAE  5178               	movf	sprintf@c& (0+255),w,b
  2103  000FB0  0D04               	mullw	4
  2104  000FB2  0E69               	movlw	low _dpowers
  2105  000FB4  24F3               	addwf	prodl,w,c
  2106  000FB6  6EF6               	movwf	tblptrl,c
  2107  000FB8  0E08               	movlw	high _dpowers
  2108  000FBA  20F4               	addwfc	prodh,w,c
  2109  000FBC  6EF7               	movwf	tblptrh,c
  2110  000FBE                     	if	0	;There are less than 3 active tblptr bytes
  2111  000FBE                     	endif
  2112  000FBE  0009               	tblrd		*+
  2113  000FC0  CFF5 F005          	movff	tablat,___llmod@divisor
  2114  000FC4  0009               	tblrd		*+
  2115  000FC6  CFF5 F006          	movff	tablat,___llmod@divisor+1
  2116  000FCA  0009               	tblrd		*+
  2117  000FCC  CFF5 F007          	movff	tablat,___llmod@divisor+2
  2118  000FD0  000A               	tblrd		*-
  2119  000FD2  CFF5 F008          	movff	tablat,___llmod@divisor+3
  2120  000FD6  EC36  F016         	call	___llmod	;wreg free
  2121  000FDA  C001  F068         	movff	?___llmod,sprintf@val
  2122  000FDE  C002  F069         	movff	?___llmod+1,sprintf@val+1
  2123  000FE2  C003  F06A         	movff	?___llmod+2,sprintf@val+2
  2124  000FE6  C004  F06B         	movff	?___llmod+3,sprintf@val+3
  2125  000FEA                     l3379:
  2126  000FEA  0100               	movlb	0	; () banked
  2127  000FEC  0778               	decf	sprintf@c& (0+255),f,b
  2128  000FEE  0100               	movlb	0	; () banked
  2129  000FF0  2978               	incf	sprintf@c& (0+255),w,b
  2130  000FF2  B4D8               	btfsc	status,2,c
  2131  000FF4  D00D               	goto	l3387
  2132  000FF6  D787               	goto	l3369
  2133  000FF8                     l3381:
  2134                           
  2135                           ; BSR set to: 0
  2136                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  2137  000FF8  C051  FFD9         	movff	sprintf@sp,fsr2l
  2138  000FFC  C052  FFDA         	movff	sprintf@sp+1,fsr2h
  2139  001000  0E30               	movlw	48
  2140  001002  6EDF               	movwf	indf2,c
  2141                           
  2142                           ; BSR set to: 0
  2143  001004  4A51               	infsnz	sprintf@sp,f,c
  2144  001006  2A52               	incf	sprintf@sp+1,f,c
  2145                           
  2146                           ; BSR set to: 0
  2147                           ;doprnt.c: 1237: prec--;
  2148  001008  0100               	movlb	0	; () banked
  2149  00100A  0772               	decf	sprintf@prec& (0+255),f,b
  2150  00100C  A0D8               	btfss	status,0,c
  2151  00100E  0773               	decf	(sprintf@prec+1)& (0+255),f,b
  2152  001010                     l3387:
  2153                           
  2154                           ; BSR set to: 0
  2155  001010  0100               	movlb	0	; () banked
  2156  001012  5172               	movf	sprintf@prec& (0+255),w,b
  2157  001014  0100               	movlb	0	; () banked
  2158  001016  1173               	iorwf	(sprintf@prec+1)& (0+255),w,b
  2159  001018  B4D8               	btfsc	status,2,c
  2160  00101A  D050               	goto	l3409
  2161  00101C  D7ED               	goto	l3381
  2162  00101E                     l3389:
  2163                           
  2164                           ; BSR set to: 0
  2165                           ;doprnt.c: 1246: }
  2166                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  2167  00101E  0100               	movlb	0	; () banked
  2168  001020  5172               	movf	sprintf@prec& (0+255),w,b
  2169  001022  0100               	movlb	0	; () banked
  2170  001024  1173               	iorwf	(sprintf@prec+1)& (0+255),w,b
  2171  001026  A4D8               	btfss	status,2,c
  2172  001028  D00D               	goto	l3395
  2173                           
  2174                           ; BSR set to: 0
  2175  00102A  0100               	movlb	0	; () banked
  2176  00102C  5168               	movf	sprintf@val& (0+255),w,b
  2177  00102E  0100               	movlb	0	; () banked
  2178  001030  1169               	iorwf	(sprintf@val+1)& (0+255),w,b
  2179  001032  0100               	movlb	0	; () banked
  2180  001034  116A               	iorwf	(sprintf@val+2)& (0+255),w,b
  2181  001036  0100               	movlb	0	; () banked
  2182  001038  116B               	iorwf	(sprintf@val+3)& (0+255),w,b
  2183  00103A  A4D8               	btfss	status,2,c
  2184  00103C  D003               	goto	l3395
  2185                           
  2186                           ; BSR set to: 0
  2187                           ;doprnt.c: 1291: prec++;
  2188  00103E  0100               	movlb	0	; () banked
  2189  001040  4B72               	infsnz	sprintf@prec& (0+255),f,b
  2190  001042  2B73               	incf	(sprintf@prec+1)& (0+255),f,b
  2191  001044                     l3395:
  2192                           
  2193                           ; BSR set to: 0
  2194                           ;doprnt.c: 1339: if(c < prec)
  2195  001044  0E80               	movlw	128
  2196  001046  0100               	movlb	0	; () banked
  2197  001048  BF78               	btfsc	sprintf@c& (0+255),7,b
  2198  00104A  0E7F               	movlw	127
  2199  00104C  6E59               	movwf	??_sprintf& (0+255),c
  2200  00104E  0100               	movlb	0	; () banked
  2201  001050  5172               	movf	sprintf@prec& (0+255),w,b
  2202  001052  0100               	movlb	0	; () banked
  2203  001054  5D78               	subwf	sprintf@c& (0+255),w,b
  2204  001056  0100               	movlb	0	; () banked
  2205  001058  5173               	movf	(sprintf@prec+1)& (0+255),w,b
  2206  00105A  0A80               	xorlw	128
  2207  00105C  5859               	subwfb	??_sprintf& (0+255),w,c
  2208  00105E  B0D8               	btfsc	status,0,c
  2209  001060  D003               	goto	l3399
  2210                           
  2211                           ; BSR set to: 0
  2212                           ;doprnt.c: 1340: c = prec;
  2213  001062  C072  F078         	movff	sprintf@prec,sprintf@c
  2214  001066  D016               	goto	l3403
  2215  001068                     l3399:
  2216                           
  2217                           ; BSR set to: 0
  2218                           ;doprnt.c: 1341: else if(prec < c)
  2219  001068  0100               	movlb	0	; () banked
  2220  00106A  5173               	movf	(sprintf@prec+1)& (0+255),w,b
  2221  00106C  0A80               	xorlw	128
  2222  00106E  6E59               	movwf	??_sprintf& (0+255),c
  2223  001070  0100               	movlb	0	; () banked
  2224  001072  5178               	movf	sprintf@c& (0+255),w,b
  2225  001074  0100               	movlb	0	; () banked
  2226  001076  5D72               	subwf	sprintf@prec& (0+255),w,b
  2227  001078  0E80               	movlw	128
  2228  00107A  0100               	movlb	0	; () banked
  2229  00107C  BF78               	btfsc	sprintf@c& (0+255),7,b
  2230  00107E  0E7F               	movlw	127
  2231  001080  5859               	subwfb	??_sprintf& (0+255),w,c
  2232  001082  B0D8               	btfsc	status,0,c
  2233  001084  D007               	goto	l3403
  2234                           
  2235                           ; BSR set to: 0
  2236                           ;doprnt.c: 1342: prec = c;
  2237  001086  0100               	movlb	0	; () banked
  2238  001088  5178               	movf	sprintf@c& (0+255),w,b
  2239  00108A  0100               	movlb	0	; () banked
  2240  00108C  6F72               	movwf	sprintf@prec& (0+255),b
  2241  00108E  6B73               	clrf	(sprintf@prec+1)& (0+255),b
  2242  001090  BF72               	btfsc	sprintf@prec& (0+255),7,b
  2243  001092  0773               	decf	(sprintf@prec+1)& (0+255),f,b
  2244  001094                     l3403:
  2245                           
  2246                           ; BSR set to: 0
  2247                           ;doprnt.c: 1422: {
  2248                           ;doprnt.c: 1438: if(flag & 0x03)
  2249  001094  0E03               	movlw	3
  2250  001096  0100               	movlb	0	; () banked
  2251  001098  1566               	andwf	sprintf@flag& (0+255),w,b
  2252  00109A  6E59               	movwf	??_sprintf& (0+255),c
  2253  00109C  0E00               	movlw	0
  2254  00109E  0100               	movlb	0	; () banked
  2255  0010A0  1567               	andwf	(sprintf@flag+1)& (0+255),w,b
  2256  0010A2  6E5A               	movwf	(??_sprintf+1)& (0+255),c
  2257  0010A4  5059               	movf	??_sprintf,w,c
  2258  0010A6  105A               	iorwf	??_sprintf+1,w,c
  2259  0010A8  B4D8               	btfsc	status,2,c
  2260  0010AA  D008               	goto	l3409
  2261                           
  2262                           ; BSR set to: 0
  2263                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  2264  0010AC  C051  FFD9         	movff	sprintf@sp,fsr2l
  2265  0010B0  C052  FFDA         	movff	sprintf@sp+1,fsr2h
  2266  0010B4  0E2D               	movlw	45
  2267  0010B6  6EDF               	movwf	indf2,c
  2268  0010B8                     l3407:
  2269                           
  2270                           ; BSR set to: 0
  2271  0010B8  4A51               	infsnz	sprintf@sp,f,c
  2272  0010BA  2A52               	incf	sprintf@sp+1,f,c
  2273  0010BC                     l3409:
  2274                           
  2275                           ; BSR set to: 0
  2276  0010BC  C053  FFF6         	movff	sprintf@f,tblptrl
  2277  0010C0  C054  FFF7         	movff	sprintf@f+1,tblptrh
  2278  0010C4  4A53               	infsnz	sprintf@f,f,c
  2279  0010C6  2A54               	incf	sprintf@f+1,f,c
  2280  0010C8                     	if	0	;tblptru may be non-zero
  2281  0010C8                     	endif
  2282  0010C8                     	if	0	;tblptru may be non-zero
  2283  0010C8                     	endif
  2284  0010C8  0008               	tblrd		*
  2285  0010CA  CFF5 F078          	movff	tablat,sprintf@c
  2286  0010CE  0100               	movlb	0	; () banked
  2287  0010D0  5178               	movf	sprintf@c& (0+255),w,b
  2288  0010D2  A4D8               	btfss	status,2,c
  2289  0010D4  D406               	goto	l3211
  2290  0010D6                     l3411:
  2291                           
  2292                           ; BSR set to: 0
  2293                           ;doprnt.c: 1538: *sp = 0;
  2294  0010D6  C051  FFD9         	movff	sprintf@sp,fsr2l
  2295  0010DA  C052  FFDA         	movff	sprintf@sp+1,fsr2h
  2296  0010DE  0E00               	movlw	0
  2297  0010E0  6EDF               	movwf	indf2,c
  2298  0010E2  0012               	return	
  2299  0010E4                     __end_of_sprintf:
  2300                           	opt stack 0
  2301                           tblptru	equ	0xFF8
  2302                           tblptrh	equ	0xFF7
  2303                           tblptrl	equ	0xFF6
  2304                           tablat	equ	0xFF5
  2305                           prodh	equ	0xFF4
  2306                           prodl	equ	0xFF3
  2307                           postinc0	equ	0xFEE
  2308                           wreg	equ	0xFE8
  2309                           indf2	equ	0xFDF
  2310                           postinc2	equ	0xFDE
  2311                           fsr2h	equ	0xFDA
  2312                           fsr2l	equ	0xFD9
  2313                           status	equ	0xFD8
  2314                           
  2315 ;; *************** function _scale *****************
  2316 ;; Defined at:
  2317 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\doprnt.c"
  2318 ;; Parameters:    Size  Location     Type
  2319 ;;  scl             1    wreg     char 
  2320 ;; Auto vars:     Size  Location     Type
  2321 ;;  scl             1   47[COMRAM] char 
  2322 ;; Return value:  Size  Location     Type
  2323 ;;                  4   39[COMRAM] char 
  2324 ;; Registers used:
  2325 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2326 ;; Tracked objects:
  2327 ;;		On entry : 0/0
  2328 ;;		On exit  : 0/0
  2329 ;;		Unchanged: 0/0
  2330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2331 ;;      Params:         4       0       0       0       0       0       0       0       0
  2332 ;;      Locals:         5       0       0       0       0       0       0       0       0
  2333 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2334 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2335 ;;Total ram usage:        9 bytes
  2336 ;; Hardware stack levels used:    1
  2337 ;; Hardware stack levels required when called:    1
  2338 ;; This function calls:
  2339 ;;		___awdiv
  2340 ;;		___awmod
  2341 ;;		___flmul
  2342 ;; This function is called by:
  2343 ;;		_sprintf
  2344 ;; This function uses a non-reentrant model
  2345 ;;
  2346                           
  2347                           	psect	text3
  2348  0010E4                     __ptext3:
  2349                           	opt stack 0
  2350  0010E4                     _scale:
  2351                           	opt stack 27
  2352                           
  2353                           ; BSR set to: 0
  2354                           ;incstack = 0
  2355                           ;scale@scl stored from wreg
  2356  0010E4  6E30               	movwf	scale@scl,c
  2357                           
  2358                           ;doprnt.c: 428: if(scl < 0) {
  2359  0010E6  AE30               	btfss	scale@scl,7,c
  2360  0010E8  D105               	goto	l2811
  2361                           
  2362                           ;doprnt.c: 429: scl = -scl;
  2363  0010EA  6C30               	negf	scale@scl,c
  2364                           
  2365                           ;doprnt.c: 430: if(scl>=110)
  2366  0010EC  5030               	movf	scale@scl,w,c
  2367  0010EE  0A80               	xorlw	128
  2368  0010F0  0F12               	addlw	-238
  2369  0010F2  A0D8               	btfss	status,0,c
  2370  0010F4  D098               	goto	l2801
  2371                           
  2372                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  2373  0010F6  0E00               	movlw	0
  2374  0010F8  6E0A               	movwf	___awdiv@divisor+1,c
  2375  0010FA  0E0A               	movlw	10
  2376  0010FC  6E09               	movwf	___awdiv@divisor,c
  2377  0010FE  0E00               	movlw	0
  2378  001100  6E04               	movwf	___awmod@divisor+1,c
  2379  001102  0E64               	movlw	100
  2380  001104  6E03               	movwf	___awmod@divisor,c
  2381  001106  5030               	movf	scale@scl,w,c
  2382  001108  6E01               	movwf	___awmod@dividend,c
  2383  00110A  6A02               	clrf	___awmod@dividend+1,c
  2384  00110C  BE01               	btfsc	___awmod@dividend,7,c
  2385  00110E  0602               	decf	___awmod@dividend+1,f,c
  2386  001110  ECC6  F015         	call	___awmod	;wreg free
  2387  001114  C001  F007         	movff	?___awmod,___awdiv@dividend
  2388  001118  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  2389  00111C  EC43  F015         	call	___awdiv	;wreg free
  2390  001120  90D8               	bcf	status,0,c
  2391  001122  3607               	rlcf	?___awdiv,f,c
  2392  001124  3608               	rlcf	?___awdiv+1,f,c
  2393  001126  90D8               	bcf	status,0,c
  2394  001128  3607               	rlcf	?___awdiv,f,c
  2395  00112A  3608               	rlcf	?___awdiv+1,f,c
  2396  00112C  0E24               	movlw	36
  2397  00112E  2607               	addwf	?___awdiv,f,c
  2398  001130  0E00               	movlw	0
  2399  001132  2208               	addwfc	?___awdiv+1,f,c
  2400  001134  0E01               	movlw	low __npowers_
  2401  001136  2407               	addwf	?___awdiv,w,c
  2402  001138  6EF6               	movwf	tblptrl,c
  2403  00113A  0E08               	movlw	high __npowers_
  2404  00113C  2008               	addwfc	?___awdiv+1,w,c
  2405  00113E  6EF7               	movwf	tblptrh,c
  2406  001140                     	if	0	;There are less than 3 active tblptr bytes
  2407  001140                     	endif
  2408  001140  0009               	tblrd		*+
  2409  001142  CFF5 F013          	movff	tablat,___flmul@a
  2410  001146  0009               	tblrd		*+
  2411  001148  CFF5 F014          	movff	tablat,___flmul@a+1
  2412  00114C  0009               	tblrd		*+
  2413  00114E  CFF5 F015          	movff	tablat,___flmul@a+2
  2414  001152  000A               	tblrd		*-
  2415  001154  CFF5 F016          	movff	tablat,___flmul@a+3
  2416  001158  0E00               	movlw	0
  2417  00115A  6E0A               	movwf	___awdiv@divisor+1,c
  2418  00115C  0E64               	movlw	100
  2419  00115E  6E09               	movwf	___awdiv@divisor,c
  2420  001160  5030               	movf	scale@scl,w,c
  2421  001162  6E07               	movwf	___awdiv@dividend,c
  2422  001164  6A08               	clrf	___awdiv@dividend+1,c
  2423  001166  BE07               	btfsc	___awdiv@dividend,7,c
  2424  001168  0608               	decf	___awdiv@dividend+1,f,c
  2425  00116A  EC43  F015         	call	___awdiv	;wreg free
  2426  00116E  90D8               	bcf	status,0,c
  2427  001170  3607               	rlcf	?___awdiv,f,c
  2428  001172  3608               	rlcf	?___awdiv+1,f,c
  2429  001174  90D8               	bcf	status,0,c
  2430  001176  3607               	rlcf	?___awdiv,f,c
  2431  001178  3608               	rlcf	?___awdiv+1,f,c
  2432  00117A  0E48               	movlw	72
  2433  00117C  2607               	addwf	?___awdiv,f,c
  2434  00117E  0E00               	movlw	0
  2435  001180  2208               	addwfc	?___awdiv+1,f,c
  2436  001182  0E01               	movlw	low __npowers_
  2437  001184  2407               	addwf	?___awdiv,w,c
  2438  001186  6EF6               	movwf	tblptrl,c
  2439  001188  0E08               	movlw	high __npowers_
  2440  00118A  2008               	addwfc	?___awdiv+1,w,c
  2441  00118C  6EF7               	movwf	tblptrh,c
  2442  00118E                     	if	0	;There are less than 3 active tblptr bytes
  2443  00118E                     	endif
  2444  00118E  0009               	tblrd		*+
  2445  001190  CFF5 F00F          	movff	tablat,___flmul@b
  2446  001194  0009               	tblrd		*+
  2447  001196  CFF5 F010          	movff	tablat,___flmul@b+1
  2448  00119A  0009               	tblrd		*+
  2449  00119C  CFF5 F011          	movff	tablat,___flmul@b+2
  2450  0011A0  000A               	tblrd		*-
  2451  0011A2  CFF5 F012          	movff	tablat,___flmul@b+3
  2452  0011A6  EC7E  F00A         	call	___flmul	;wreg free
  2453  0011AA  C00F  F02C         	movff	?___flmul,_scale$1108
  2454  0011AE  C010  F02D         	movff	?___flmul+1,_scale$1108+1
  2455  0011B2  C011  F02E         	movff	?___flmul+2,_scale$1108+2
  2456  0011B6  C012  F02F         	movff	?___flmul+3,_scale$1108+3
  2457                           
  2458                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  2459  0011BA  C02C  F00F         	movff	_scale$1108,___flmul@b
  2460  0011BE  C02D  F010         	movff	_scale$1108+1,___flmul@b+1
  2461  0011C2  C02E  F011         	movff	_scale$1108+2,___flmul@b+2
  2462  0011C6  C02F  F012         	movff	_scale$1108+3,___flmul@b+3
  2463  0011CA  0E00               	movlw	0
  2464  0011CC  6E04               	movwf	___awmod@divisor+1,c
  2465  0011CE  0E0A               	movlw	10
  2466  0011D0  6E03               	movwf	___awmod@divisor,c
  2467  0011D2  5030               	movf	scale@scl,w,c
  2468  0011D4  6E01               	movwf	___awmod@dividend,c
  2469  0011D6  6A02               	clrf	___awmod@dividend+1,c
  2470  0011D8  BE01               	btfsc	___awmod@dividend,7,c
  2471  0011DA  0602               	decf	___awmod@dividend+1,f,c
  2472  0011DC  ECC6  F015         	call	___awmod	;wreg free
  2473  0011E0  90D8               	bcf	status,0,c
  2474  0011E2  3601               	rlcf	?___awmod,f,c
  2475  0011E4  3602               	rlcf	?___awmod+1,f,c
  2476  0011E6  90D8               	bcf	status,0,c
  2477  0011E8  3601               	rlcf	?___awmod,f,c
  2478  0011EA  3602               	rlcf	?___awmod+1,f,c
  2479  0011EC  0E01               	movlw	low __npowers_
  2480  0011EE  2401               	addwf	?___awmod,w,c
  2481  0011F0  6EF6               	movwf	tblptrl,c
  2482  0011F2  0E08               	movlw	high __npowers_
  2483  0011F4  2002               	addwfc	?___awmod+1,w,c
  2484  0011F6  6EF7               	movwf	tblptrh,c
  2485  0011F8                     	if	0	;There are less than 3 active tblptr bytes
  2486  0011F8                     	endif
  2487  0011F8  0009               	tblrd		*+
  2488  0011FA  CFF5 F013          	movff	tablat,___flmul@a
  2489  0011FE  0009               	tblrd		*+
  2490  001200  CFF5 F014          	movff	tablat,___flmul@a+1
  2491  001204  0009               	tblrd		*+
  2492  001206  CFF5 F015          	movff	tablat,___flmul@a+2
  2493  00120A  000A               	tblrd		*-
  2494  00120C  CFF5 F016          	movff	tablat,___flmul@a+3
  2495  001210  EC7E  F00A         	call	___flmul	;wreg free
  2496  001214  C00F  F028         	movff	?___flmul,?_scale
  2497  001218  C010  F029         	movff	?___flmul+1,?_scale+1
  2498  00121C  C011  F02A         	movff	?___flmul+2,?_scale+2
  2499  001220  C012  F02B         	movff	?___flmul+3,?_scale+3
  2500  001224  0012               	return	
  2501  001226                     l2801:
  2502                           
  2503                           ;doprnt.c: 432: else if(scl > 10)
  2504  001226  5030               	movf	scale@scl,w,c
  2505  001228  0A80               	xorlw	128
  2506  00122A  0F75               	addlw	-139
  2507  00122C  A0D8               	btfss	status,0,c
  2508  00122E  D04D               	goto	l2807
  2509                           
  2510                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  2511  001230  0E00               	movlw	0
  2512  001232  6E0A               	movwf	___awdiv@divisor+1,c
  2513  001234  0E0A               	movlw	10
  2514  001236  6E09               	movwf	___awdiv@divisor,c
  2515  001238  5030               	movf	scale@scl,w,c
  2516  00123A  6E07               	movwf	___awdiv@dividend,c
  2517  00123C  6A08               	clrf	___awdiv@dividend+1,c
  2518  00123E  BE07               	btfsc	___awdiv@dividend,7,c
  2519  001240  0608               	decf	___awdiv@dividend+1,f,c
  2520  001242  EC43  F015         	call	___awdiv	;wreg free
  2521  001246  90D8               	bcf	status,0,c
  2522  001248  3607               	rlcf	?___awdiv,f,c
  2523  00124A  3608               	rlcf	?___awdiv+1,f,c
  2524  00124C  90D8               	bcf	status,0,c
  2525  00124E  3607               	rlcf	?___awdiv,f,c
  2526  001250  3608               	rlcf	?___awdiv+1,f,c
  2527  001252  0E24               	movlw	36
  2528  001254  2607               	addwf	?___awdiv,f,c
  2529  001256  0E00               	movlw	0
  2530  001258  2208               	addwfc	?___awdiv+1,f,c
  2531  00125A  0E01               	movlw	low __npowers_
  2532  00125C  2407               	addwf	?___awdiv,w,c
  2533  00125E  6EF6               	movwf	tblptrl,c
  2534  001260  0E08               	movlw	high __npowers_
  2535  001262  2008               	addwfc	?___awdiv+1,w,c
  2536  001264  6EF7               	movwf	tblptrh,c
  2537  001266                     	if	0	;There are less than 3 active tblptr bytes
  2538  001266                     	endif
  2539  001266  0009               	tblrd		*+
  2540  001268  CFF5 F00F          	movff	tablat,___flmul@b
  2541  00126C  0009               	tblrd		*+
  2542  00126E  CFF5 F010          	movff	tablat,___flmul@b+1
  2543  001272  0009               	tblrd		*+
  2544  001274  CFF5 F011          	movff	tablat,___flmul@b+2
  2545  001278  000A               	tblrd		*-
  2546  00127A  CFF5 F012          	movff	tablat,___flmul@b+3
  2547  00127E  0E00               	movlw	0
  2548  001280  6E04               	movwf	___awmod@divisor+1,c
  2549  001282  0E0A               	movlw	10
  2550  001284  6E03               	movwf	___awmod@divisor,c
  2551  001286  5030               	movf	scale@scl,w,c
  2552  001288  6E01               	movwf	___awmod@dividend,c
  2553  00128A  6A02               	clrf	___awmod@dividend+1,c
  2554  00128C  BE01               	btfsc	___awmod@dividend,7,c
  2555  00128E  0602               	decf	___awmod@dividend+1,f,c
  2556  001290  ECC6  F015         	call	___awmod	;wreg free
  2557  001294  90D8               	bcf	status,0,c
  2558  001296  3601               	rlcf	?___awmod,f,c
  2559  001298  3602               	rlcf	?___awmod+1,f,c
  2560  00129A  90D8               	bcf	status,0,c
  2561  00129C  3601               	rlcf	?___awmod,f,c
  2562  00129E  3602               	rlcf	?___awmod+1,f,c
  2563  0012A0  0E01               	movlw	low __npowers_
  2564  0012A2  2401               	addwf	?___awmod,w,c
  2565  0012A4  6EF6               	movwf	tblptrl,c
  2566  0012A6  0E08               	movlw	high __npowers_
  2567  0012A8  2002               	addwfc	?___awmod+1,w,c
  2568  0012AA  6EF7               	movwf	tblptrh,c
  2569  0012AC                     	if	0	;There are less than 3 active tblptr bytes
  2570  0012AC                     	endif
  2571  0012AC  0009               	tblrd		*+
  2572  0012AE  CFF5 F013          	movff	tablat,___flmul@a
  2573  0012B2  0009               	tblrd		*+
  2574  0012B4  CFF5 F014          	movff	tablat,___flmul@a+1
  2575  0012B8  0009               	tblrd		*+
  2576  0012BA  CFF5 F015          	movff	tablat,___flmul@a+2
  2577  0012BE  000A               	tblrd		*-
  2578  0012C0  CFF5 F016          	movff	tablat,___flmul@a+3
  2579  0012C4  EC7E  F00A         	call	___flmul	;wreg free
  2580  0012C8  D7A5               	goto	L3
  2581  0012CA                     l2807:
  2582                           
  2583                           ;doprnt.c: 434: return _npowers_[scl];
  2584  0012CA  5030               	movf	scale@scl,w,c
  2585  0012CC  0D04               	mullw	4
  2586  0012CE  0E01               	movlw	low __npowers_
  2587  0012D0  24F3               	addwf	prodl,w,c
  2588  0012D2  6EF6               	movwf	tblptrl,c
  2589  0012D4  0E08               	movlw	high __npowers_
  2590  0012D6  20F4               	addwfc	prodh,w,c
  2591  0012D8  6EF7               	movwf	tblptrh,c
  2592  0012DA                     	if	0	;There are less than 3 active tblptr bytes
  2593  0012DA                     	endif
  2594  0012DA  0009               	tblrd		*+
  2595  0012DC  CFF5 F028          	movff	tablat,?_scale
  2596  0012E0  0009               	tblrd		*+
  2597  0012E2  CFF5 F029          	movff	tablat,?_scale+1
  2598  0012E6  0009               	tblrd		*+
  2599  0012E8  CFF5 F02A          	movff	tablat,?_scale+2
  2600  0012EC  000A               	tblrd		*-
  2601  0012EE  CFF5 F02B          	movff	tablat,?_scale+3
  2602  0012F2  0012               	return	
  2603  0012F4                     l2811:
  2604                           
  2605                           ;doprnt.c: 435: }
  2606                           ;doprnt.c: 436: if(scl>=110)
  2607  0012F4  5030               	movf	scale@scl,w,c
  2608  0012F6  0A80               	xorlw	128
  2609  0012F8  0F12               	addlw	-238
  2610  0012FA  A0D8               	btfss	status,0,c
  2611  0012FC  D098               	goto	l2819
  2612                           
  2613                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  2614  0012FE  0E00               	movlw	0
  2615  001300  6E0A               	movwf	___awdiv@divisor+1,c
  2616  001302  0E0A               	movlw	10
  2617  001304  6E09               	movwf	___awdiv@divisor,c
  2618  001306  0E00               	movlw	0
  2619  001308  6E04               	movwf	___awmod@divisor+1,c
  2620  00130A  0E64               	movlw	100
  2621  00130C  6E03               	movwf	___awmod@divisor,c
  2622  00130E  5030               	movf	scale@scl,w,c
  2623  001310  6E01               	movwf	___awmod@dividend,c
  2624  001312  6A02               	clrf	___awmod@dividend+1,c
  2625  001314  BE01               	btfsc	___awmod@dividend,7,c
  2626  001316  0602               	decf	___awmod@dividend+1,f,c
  2627  001318  ECC6  F015         	call	___awmod	;wreg free
  2628  00131C  C001  F007         	movff	?___awmod,___awdiv@dividend
  2629  001320  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  2630  001324  EC43  F015         	call	___awdiv	;wreg free
  2631  001328  90D8               	bcf	status,0,c
  2632  00132A  3607               	rlcf	?___awdiv,f,c
  2633  00132C  3608               	rlcf	?___awdiv+1,f,c
  2634  00132E  90D8               	bcf	status,0,c
  2635  001330  3607               	rlcf	?___awdiv,f,c
  2636  001332  3608               	rlcf	?___awdiv+1,f,c
  2637  001334  0E24               	movlw	36
  2638  001336  2607               	addwf	?___awdiv,f,c
  2639  001338  0E00               	movlw	0
  2640  00133A  2208               	addwfc	?___awdiv+1,f,c
  2641  00133C  0E35               	movlw	low __powers_
  2642  00133E  2407               	addwf	?___awdiv,w,c
  2643  001340  6EF6               	movwf	tblptrl,c
  2644  001342  0E08               	movlw	high __powers_
  2645  001344  2008               	addwfc	?___awdiv+1,w,c
  2646  001346  6EF7               	movwf	tblptrh,c
  2647  001348                     	if	0	;There are less than 3 active tblptr bytes
  2648  001348                     	endif
  2649  001348  0009               	tblrd		*+
  2650  00134A  CFF5 F013          	movff	tablat,___flmul@a
  2651  00134E  0009               	tblrd		*+
  2652  001350  CFF5 F014          	movff	tablat,___flmul@a+1
  2653  001354  0009               	tblrd		*+
  2654  001356  CFF5 F015          	movff	tablat,___flmul@a+2
  2655  00135A  000A               	tblrd		*-
  2656  00135C  CFF5 F016          	movff	tablat,___flmul@a+3
  2657  001360  0E00               	movlw	0
  2658  001362  6E0A               	movwf	___awdiv@divisor+1,c
  2659  001364  0E64               	movlw	100
  2660  001366  6E09               	movwf	___awdiv@divisor,c
  2661  001368  5030               	movf	scale@scl,w,c
  2662  00136A  6E07               	movwf	___awdiv@dividend,c
  2663  00136C  6A08               	clrf	___awdiv@dividend+1,c
  2664  00136E  BE07               	btfsc	___awdiv@dividend,7,c
  2665  001370  0608               	decf	___awdiv@dividend+1,f,c
  2666  001372  EC43  F015         	call	___awdiv	;wreg free
  2667  001376  90D8               	bcf	status,0,c
  2668  001378  3607               	rlcf	?___awdiv,f,c
  2669  00137A  3608               	rlcf	?___awdiv+1,f,c
  2670  00137C  90D8               	bcf	status,0,c
  2671  00137E  3607               	rlcf	?___awdiv,f,c
  2672  001380  3608               	rlcf	?___awdiv+1,f,c
  2673  001382  0E48               	movlw	72
  2674  001384  2607               	addwf	?___awdiv,f,c
  2675  001386  0E00               	movlw	0
  2676  001388  2208               	addwfc	?___awdiv+1,f,c
  2677  00138A  0E35               	movlw	low __powers_
  2678  00138C  2407               	addwf	?___awdiv,w,c
  2679  00138E  6EF6               	movwf	tblptrl,c
  2680  001390  0E08               	movlw	high __powers_
  2681  001392  2008               	addwfc	?___awdiv+1,w,c
  2682  001394  6EF7               	movwf	tblptrh,c
  2683  001396                     	if	0	;There are less than 3 active tblptr bytes
  2684  001396                     	endif
  2685  001396  0009               	tblrd		*+
  2686  001398  CFF5 F00F          	movff	tablat,___flmul@b
  2687  00139C  0009               	tblrd		*+
  2688  00139E  CFF5 F010          	movff	tablat,___flmul@b+1
  2689  0013A2  0009               	tblrd		*+
  2690  0013A4  CFF5 F011          	movff	tablat,___flmul@b+2
  2691  0013A8  000A               	tblrd		*-
  2692  0013AA  CFF5 F012          	movff	tablat,___flmul@b+3
  2693  0013AE  EC7E  F00A         	call	___flmul	;wreg free
  2694  0013B2  C00F  F02C         	movff	?___flmul,_scale$1108
  2695  0013B6  C010  F02D         	movff	?___flmul+1,_scale$1108+1
  2696  0013BA  C011  F02E         	movff	?___flmul+2,_scale$1108+2
  2697  0013BE  C012  F02F         	movff	?___flmul+3,_scale$1108+3
  2698                           
  2699                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  2700  0013C2  C02C  F00F         	movff	_scale$1108,___flmul@b
  2701  0013C6  C02D  F010         	movff	_scale$1108+1,___flmul@b+1
  2702  0013CA  C02E  F011         	movff	_scale$1108+2,___flmul@b+2
  2703  0013CE  C02F  F012         	movff	_scale$1108+3,___flmul@b+3
  2704  0013D2  0E00               	movlw	0
  2705  0013D4  6E04               	movwf	___awmod@divisor+1,c
  2706  0013D6  0E0A               	movlw	10
  2707  0013D8  6E03               	movwf	___awmod@divisor,c
  2708  0013DA  5030               	movf	scale@scl,w,c
  2709  0013DC  6E01               	movwf	___awmod@dividend,c
  2710  0013DE  6A02               	clrf	___awmod@dividend+1,c
  2711  0013E0  BE01               	btfsc	___awmod@dividend,7,c
  2712  0013E2  0602               	decf	___awmod@dividend+1,f,c
  2713  0013E4  ECC6  F015         	call	___awmod	;wreg free
  2714  0013E8  90D8               	bcf	status,0,c
  2715  0013EA  3601               	rlcf	?___awmod,f,c
  2716  0013EC  3602               	rlcf	?___awmod+1,f,c
  2717  0013EE  90D8               	bcf	status,0,c
  2718  0013F0  3601               	rlcf	?___awmod,f,c
  2719  0013F2  3602               	rlcf	?___awmod+1,f,c
  2720  0013F4  0E35               	movlw	low __powers_
  2721  0013F6  2401               	addwf	?___awmod,w,c
  2722  0013F8  6EF6               	movwf	tblptrl,c
  2723  0013FA  0E08               	movlw	high __powers_
  2724  0013FC  2002               	addwfc	?___awmod+1,w,c
  2725  0013FE  6EF7               	movwf	tblptrh,c
  2726  001400                     	if	0	;There are less than 3 active tblptr bytes
  2727  001400                     	endif
  2728  001400  0009               	tblrd		*+
  2729  001402  CFF5 F013          	movff	tablat,___flmul@a
  2730  001406  0009               	tblrd		*+
  2731  001408  CFF5 F014          	movff	tablat,___flmul@a+1
  2732  00140C  0009               	tblrd		*+
  2733  00140E  CFF5 F015          	movff	tablat,___flmul@a+2
  2734  001412  000A               	tblrd		*-
  2735  001414  CFF5 F016          	movff	tablat,___flmul@a+3
  2736  001418  EC7E  F00A         	call	___flmul	;wreg free
  2737  00141C  C00F  F028         	movff	?___flmul,?_scale
  2738  001420  C010  F029         	movff	?___flmul+1,?_scale+1
  2739  001424  C011  F02A         	movff	?___flmul+2,?_scale+2
  2740  001428  C012  F02B         	movff	?___flmul+3,?_scale+3
  2741  00142C  0012               	return	
  2742  00142E                     l2819:
  2743                           
  2744                           ;doprnt.c: 438: else if(scl > 10)
  2745  00142E  5030               	movf	scale@scl,w,c
  2746  001430  0A80               	xorlw	128
  2747  001432  0F75               	addlw	-139
  2748  001434  A0D8               	btfss	status,0,c
  2749  001436  D04D               	goto	l2825
  2750                           
  2751                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  2752  001438  0E00               	movlw	0
  2753  00143A  6E0A               	movwf	___awdiv@divisor+1,c
  2754  00143C  0E0A               	movlw	10
  2755  00143E  6E09               	movwf	___awdiv@divisor,c
  2756  001440  5030               	movf	scale@scl,w,c
  2757  001442  6E07               	movwf	___awdiv@dividend,c
  2758  001444  6A08               	clrf	___awdiv@dividend+1,c
  2759  001446  BE07               	btfsc	___awdiv@dividend,7,c
  2760  001448  0608               	decf	___awdiv@dividend+1,f,c
  2761  00144A  EC43  F015         	call	___awdiv	;wreg free
  2762  00144E  90D8               	bcf	status,0,c
  2763  001450  3607               	rlcf	?___awdiv,f,c
  2764  001452  3608               	rlcf	?___awdiv+1,f,c
  2765  001454  90D8               	bcf	status,0,c
  2766  001456  3607               	rlcf	?___awdiv,f,c
  2767  001458  3608               	rlcf	?___awdiv+1,f,c
  2768  00145A  0E24               	movlw	36
  2769  00145C  2607               	addwf	?___awdiv,f,c
  2770  00145E  0E00               	movlw	0
  2771  001460  2208               	addwfc	?___awdiv+1,f,c
  2772  001462  0E35               	movlw	low __powers_
  2773  001464  2407               	addwf	?___awdiv,w,c
  2774  001466  6EF6               	movwf	tblptrl,c
  2775  001468  0E08               	movlw	high __powers_
  2776  00146A  2008               	addwfc	?___awdiv+1,w,c
  2777  00146C  6EF7               	movwf	tblptrh,c
  2778  00146E                     	if	0	;There are less than 3 active tblptr bytes
  2779  00146E                     	endif
  2780  00146E  0009               	tblrd		*+
  2781  001470  CFF5 F00F          	movff	tablat,___flmul@b
  2782  001474  0009               	tblrd		*+
  2783  001476  CFF5 F010          	movff	tablat,___flmul@b+1
  2784  00147A  0009               	tblrd		*+
  2785  00147C  CFF5 F011          	movff	tablat,___flmul@b+2
  2786  001480  000A               	tblrd		*-
  2787  001482  CFF5 F012          	movff	tablat,___flmul@b+3
  2788  001486  0E00               	movlw	0
  2789  001488  6E04               	movwf	___awmod@divisor+1,c
  2790  00148A  0E0A               	movlw	10
  2791  00148C  6E03               	movwf	___awmod@divisor,c
  2792  00148E  5030               	movf	scale@scl,w,c
  2793  001490  6E01               	movwf	___awmod@dividend,c
  2794  001492  6A02               	clrf	___awmod@dividend+1,c
  2795  001494  BE01               	btfsc	___awmod@dividend,7,c
  2796  001496  0602               	decf	___awmod@dividend+1,f,c
  2797  001498  ECC6  F015         	call	___awmod	;wreg free
  2798  00149C  90D8               	bcf	status,0,c
  2799  00149E  3601               	rlcf	?___awmod,f,c
  2800  0014A0  3602               	rlcf	?___awmod+1,f,c
  2801  0014A2  90D8               	bcf	status,0,c
  2802  0014A4  3601               	rlcf	?___awmod,f,c
  2803  0014A6  3602               	rlcf	?___awmod+1,f,c
  2804  0014A8  0E35               	movlw	low __powers_
  2805  0014AA  2401               	addwf	?___awmod,w,c
  2806  0014AC  6EF6               	movwf	tblptrl,c
  2807  0014AE  0E08               	movlw	high __powers_
  2808  0014B0  2002               	addwfc	?___awmod+1,w,c
  2809  0014B2  6EF7               	movwf	tblptrh,c
  2810  0014B4                     	if	0	;There are less than 3 active tblptr bytes
  2811  0014B4                     	endif
  2812  0014B4  0009               	tblrd		*+
  2813  0014B6  CFF5 F013          	movff	tablat,___flmul@a
  2814  0014BA  0009               	tblrd		*+
  2815  0014BC  CFF5 F014          	movff	tablat,___flmul@a+1
  2816  0014C0  0009               	tblrd		*+
  2817  0014C2  CFF5 F015          	movff	tablat,___flmul@a+2
  2818  0014C6  000A               	tblrd		*-
  2819  0014C8  CFF5 F016          	movff	tablat,___flmul@a+3
  2820  0014CC  EC7E  F00A         	call	___flmul	;wreg free
  2821  0014D0  D7A5               	goto	L4
  2822  0014D2                     l2825:
  2823                           
  2824                           ;doprnt.c: 440: return _powers_[scl];
  2825  0014D2  5030               	movf	scale@scl,w,c
  2826  0014D4  0D04               	mullw	4
  2827  0014D6  0E35               	movlw	low __powers_
  2828  0014D8  24F3               	addwf	prodl,w,c
  2829  0014DA  6EF6               	movwf	tblptrl,c
  2830  0014DC  0E08               	movlw	high __powers_
  2831  0014DE  20F4               	addwfc	prodh,w,c
  2832  0014E0  6EF7               	movwf	tblptrh,c
  2833  0014E2                     	if	0	;There are less than 3 active tblptr bytes
  2834  0014E2                     	endif
  2835  0014E2  0009               	tblrd		*+
  2836  0014E4  CFF5 F028          	movff	tablat,?_scale
  2837  0014E8  0009               	tblrd		*+
  2838  0014EA  CFF5 F029          	movff	tablat,?_scale+1
  2839  0014EE  0009               	tblrd		*+
  2840  0014F0  CFF5 F02A          	movff	tablat,?_scale+2
  2841  0014F4  000A               	tblrd		*-
  2842  0014F6  CFF5 F02B          	movff	tablat,?_scale+3
  2843  0014FA  0012               	return	
  2844  0014FC                     __end_of_scale:
  2845                           	opt stack 0
  2846                           tblptru	equ	0xFF8
  2847                           tblptrh	equ	0xFF7
  2848                           tblptrl	equ	0xFF6
  2849                           tablat	equ	0xFF5
  2850                           prodh	equ	0xFF4
  2851                           prodl	equ	0xFF3
  2852                           postinc0	equ	0xFEE
  2853                           wreg	equ	0xFE8
  2854                           indf2	equ	0xFDF
  2855                           postinc2	equ	0xFDE
  2856                           fsr2h	equ	0xFDA
  2857                           fsr2l	equ	0xFD9
  2858                           status	equ	0xFD8
  2859                           
  2860 ;; *************** function _isdigit *****************
  2861 ;; Defined at:
  2862 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\isdigit.c"
  2863 ;; Parameters:    Size  Location     Type
  2864 ;;  c               1    wreg     unsigned char 
  2865 ;; Auto vars:     Size  Location     Type
  2866 ;;  c               1    2[COMRAM] unsigned char 
  2867 ;; Return value:  Size  Location     Type
  2868 ;;		None               void
  2869 ;; Registers used:
  2870 ;;		wreg, status,2, status,0
  2871 ;; Tracked objects:
  2872 ;;		On entry : 0/0
  2873 ;;		On exit  : 0/0
  2874 ;;		Unchanged: 0/0
  2875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2876 ;;      Params:         0       0       0       0       0       0       0       0       0
  2877 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2878 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2879 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2880 ;;Total ram usage:        3 bytes
  2881 ;; Hardware stack levels used:    1
  2882 ;; This function calls:
  2883 ;;		Nothing
  2884 ;; This function is called by:
  2885 ;;		_sprintf
  2886 ;; This function uses a non-reentrant model
  2887 ;;
  2888                           
  2889                           	psect	text4
  2890  002F5A                     __ptext4:
  2891                           	opt stack 0
  2892  002F5A                     _isdigit:
  2893                           	opt stack 28
  2894                           
  2895                           ;incstack = 0
  2896                           ;isdigit@c stored from wreg
  2897  002F5A  6E03               	movwf	isdigit@c,c
  2898  002F5C  0E00               	movlw	0
  2899  002F5E  6E02               	movwf	_isdigit$733,c
  2900  002F60  0E3A               	movlw	58
  2901  002F62  6003               	cpfslt	isdigit@c,c
  2902  002F64  D005               	goto	l2837
  2903  002F66  0E2F               	movlw	47
  2904  002F68  6403               	cpfsgt	isdigit@c,c
  2905  002F6A  D002               	goto	l2837
  2906  002F6C  0E01               	movlw	1
  2907  002F6E  6E02               	movwf	_isdigit$733,c
  2908  002F70                     l2837:
  2909  002F70  C002  F001         	movff	_isdigit$733,??_isdigit
  2910  002F74  3001               	rrcf	??_isdigit,w,c
  2911  002F76  0012               	return	
  2912  002F78                     __end_of_isdigit:
  2913                           	opt stack 0
  2914                           tblptru	equ	0xFF8
  2915                           tblptrh	equ	0xFF7
  2916                           tblptrl	equ	0xFF6
  2917                           tablat	equ	0xFF5
  2918                           prodh	equ	0xFF4
  2919                           prodl	equ	0xFF3
  2920                           postinc0	equ	0xFEE
  2921                           wreg	equ	0xFE8
  2922                           indf2	equ	0xFDF
  2923                           postinc2	equ	0xFDE
  2924                           fsr2h	equ	0xFDA
  2925                           fsr2l	equ	0xFD9
  2926                           status	equ	0xFD8
  2927                           
  2928 ;; *************** function _fround *****************
  2929 ;; Defined at:
  2930 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\doprnt.c"
  2931 ;; Parameters:    Size  Location     Type
  2932 ;;  prec            1    wreg     unsigned char 
  2933 ;; Auto vars:     Size  Location     Type
  2934 ;;  prec            1   51[COMRAM] unsigned char 
  2935 ;; Return value:  Size  Location     Type
  2936 ;;                  4   39[COMRAM] unsigned char 
  2937 ;; Registers used:
  2938 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2939 ;; Tracked objects:
  2940 ;;		On entry : 0/0
  2941 ;;		On exit  : 0/0
  2942 ;;		Unchanged: 0/0
  2943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2944 ;;      Params:         4       0       0       0       0       0       0       0       0
  2945 ;;      Locals:         9       0       0       0       0       0       0       0       0
  2946 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2947 ;;      Totals:        13       0       0       0       0       0       0       0       0
  2948 ;;Total ram usage:       13 bytes
  2949 ;; Hardware stack levels used:    1
  2950 ;; Hardware stack levels required when called:    1
  2951 ;; This function calls:
  2952 ;;		___awdiv
  2953 ;;		___awmod
  2954 ;;		___flmul
  2955 ;; This function is called by:
  2956 ;;		_sprintf
  2957 ;; This function uses a non-reentrant model
  2958 ;;
  2959                           
  2960                           	psect	text5
  2961  001E3C                     __ptext5:
  2962                           	opt stack 0
  2963  001E3C                     _fround:
  2964                           	opt stack 27
  2965                           
  2966                           ;incstack = 0
  2967                           ;fround@prec stored from wreg
  2968  001E3C  6E34               	movwf	fround@prec,c
  2969                           
  2970                           ;doprnt.c: 413: if(prec>=110)
  2971  001E3E  0E6D               	movlw	109
  2972  001E40  6434               	cpfsgt	fround@prec,c
  2973  001E42  D0AC               	goto	l2779
  2974                           
  2975                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  2976  001E44  0E00               	movlw	0
  2977  001E46  6E0A               	movwf	___awdiv@divisor+1,c
  2978  001E48  0E0A               	movlw	10
  2979  001E4A  6E09               	movwf	___awdiv@divisor,c
  2980  001E4C  0E00               	movlw	0
  2981  001E4E  6E04               	movwf	___awmod@divisor+1,c
  2982  001E50  0E64               	movlw	100
  2983  001E52  6E03               	movwf	___awmod@divisor,c
  2984  001E54  C034  F001         	movff	fround@prec,___awmod@dividend
  2985  001E58  6A02               	clrf	___awmod@dividend+1,c
  2986  001E5A  ECC6  F015         	call	___awmod	;wreg free
  2987  001E5E  C001  F007         	movff	?___awmod,___awdiv@dividend
  2988  001E62  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  2989  001E66  EC43  F015         	call	___awdiv	;wreg free
  2990  001E6A  90D8               	bcf	status,0,c
  2991  001E6C  3607               	rlcf	?___awdiv,f,c
  2992  001E6E  3608               	rlcf	?___awdiv+1,f,c
  2993  001E70  90D8               	bcf	status,0,c
  2994  001E72  3607               	rlcf	?___awdiv,f,c
  2995  001E74  3608               	rlcf	?___awdiv+1,f,c
  2996  001E76  0E24               	movlw	36
  2997  001E78  2607               	addwf	?___awdiv,f,c
  2998  001E7A  0E00               	movlw	0
  2999  001E7C  2208               	addwfc	?___awdiv+1,f,c
  3000  001E7E  0E01               	movlw	low __npowers_
  3001  001E80  2407               	addwf	?___awdiv,w,c
  3002  001E82  6EF6               	movwf	tblptrl,c
  3003  001E84  0E08               	movlw	high __npowers_
  3004  001E86  2008               	addwfc	?___awdiv+1,w,c
  3005  001E88  6EF7               	movwf	tblptrh,c
  3006  001E8A                     	if	0	;There are less than 3 active tblptr bytes
  3007  001E8A                     	endif
  3008  001E8A  0009               	tblrd		*+
  3009  001E8C  CFF5 F013          	movff	tablat,___flmul@a
  3010  001E90  0009               	tblrd		*+
  3011  001E92  CFF5 F014          	movff	tablat,___flmul@a+1
  3012  001E96  0009               	tblrd		*+
  3013  001E98  CFF5 F015          	movff	tablat,___flmul@a+2
  3014  001E9C  000A               	tblrd		*-
  3015  001E9E  CFF5 F016          	movff	tablat,___flmul@a+3
  3016  001EA2  0E00               	movlw	0
  3017  001EA4  6E0A               	movwf	___awdiv@divisor+1,c
  3018  001EA6  0E64               	movlw	100
  3019  001EA8  6E09               	movwf	___awdiv@divisor,c
  3020  001EAA  C034  F007         	movff	fround@prec,___awdiv@dividend
  3021  001EAE  6A08               	clrf	___awdiv@dividend+1,c
  3022  001EB0  EC43  F015         	call	___awdiv	;wreg free
  3023  001EB4  90D8               	bcf	status,0,c
  3024  001EB6  3607               	rlcf	?___awdiv,f,c
  3025  001EB8  3608               	rlcf	?___awdiv+1,f,c
  3026  001EBA  90D8               	bcf	status,0,c
  3027  001EBC  3607               	rlcf	?___awdiv,f,c
  3028  001EBE  3608               	rlcf	?___awdiv+1,f,c
  3029  001EC0  0E48               	movlw	72
  3030  001EC2  2607               	addwf	?___awdiv,f,c
  3031  001EC4  0E00               	movlw	0
  3032  001EC6  2208               	addwfc	?___awdiv+1,f,c
  3033  001EC8  0E01               	movlw	low __npowers_
  3034  001ECA  2407               	addwf	?___awdiv,w,c
  3035  001ECC  6EF6               	movwf	tblptrl,c
  3036  001ECE  0E08               	movlw	high __npowers_
  3037  001ED0  2008               	addwfc	?___awdiv+1,w,c
  3038  001ED2  6EF7               	movwf	tblptrh,c
  3039  001ED4                     	if	0	;There are less than 3 active tblptr bytes
  3040  001ED4                     	endif
  3041  001ED4  0009               	tblrd		*+
  3042  001ED6  CFF5 F00F          	movff	tablat,___flmul@b
  3043  001EDA  0009               	tblrd		*+
  3044  001EDC  CFF5 F010          	movff	tablat,___flmul@b+1
  3045  001EE0  0009               	tblrd		*+
  3046  001EE2  CFF5 F011          	movff	tablat,___flmul@b+2
  3047  001EE6  000A               	tblrd		*-
  3048  001EE8  CFF5 F012          	movff	tablat,___flmul@b+3
  3049  001EEC  EC7E  F00A         	call	___flmul	;wreg free
  3050  001EF0  C00F  F030         	movff	?___flmul,_fround$1106
  3051  001EF4  C010  F031         	movff	?___flmul+1,_fround$1106+1
  3052  001EF8  C011  F032         	movff	?___flmul+2,_fround$1106+2
  3053  001EFC  C012  F033         	movff	?___flmul+3,_fround$1106+3
  3054                           
  3055                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  3056  001F00  0E00               	movlw	0
  3057  001F02  6E04               	movwf	___awmod@divisor+1,c
  3058  001F04  0E0A               	movlw	10
  3059  001F06  6E03               	movwf	___awmod@divisor,c
  3060  001F08  C034  F001         	movff	fround@prec,___awmod@dividend
  3061  001F0C  6A02               	clrf	___awmod@dividend+1,c
  3062  001F0E  ECC6  F015         	call	___awmod	;wreg free
  3063  001F12  90D8               	bcf	status,0,c
  3064  001F14  3601               	rlcf	?___awmod,f,c
  3065  001F16  3602               	rlcf	?___awmod+1,f,c
  3066  001F18  90D8               	bcf	status,0,c
  3067  001F1A  3601               	rlcf	?___awmod,f,c
  3068  001F1C  3602               	rlcf	?___awmod+1,f,c
  3069  001F1E  0E01               	movlw	low __npowers_
  3070  001F20  2401               	addwf	?___awmod,w,c
  3071  001F22  6EF6               	movwf	tblptrl,c
  3072  001F24  0E08               	movlw	high __npowers_
  3073  001F26  2002               	addwfc	?___awmod+1,w,c
  3074  001F28  6EF7               	movwf	tblptrh,c
  3075  001F2A                     	if	0	;There are less than 3 active tblptr bytes
  3076  001F2A                     	endif
  3077  001F2A  0009               	tblrd		*+
  3078  001F2C  CFF5 F013          	movff	tablat,___flmul@a
  3079  001F30  0009               	tblrd		*+
  3080  001F32  CFF5 F014          	movff	tablat,___flmul@a+1
  3081  001F36  0009               	tblrd		*+
  3082  001F38  CFF5 F015          	movff	tablat,___flmul@a+2
  3083  001F3C  000A               	tblrd		*-
  3084  001F3E  CFF5 F016          	movff	tablat,___flmul@a+3
  3085  001F42  C030  F00F         	movff	_fround$1106,___flmul@b
  3086  001F46  C031  F010         	movff	_fround$1106+1,___flmul@b+1
  3087  001F4A  C032  F011         	movff	_fround$1106+2,___flmul@b+2
  3088  001F4E  C033  F012         	movff	_fround$1106+3,___flmul@b+3
  3089  001F52  EC7E  F00A         	call	___flmul	;wreg free
  3090  001F56  C00F  F02C         	movff	?___flmul,_fround$1107
  3091  001F5A  C010  F02D         	movff	?___flmul+1,_fround$1107+1
  3092  001F5E  C011  F02E         	movff	?___flmul+2,_fround$1107+2
  3093  001F62  C012  F02F         	movff	?___flmul+3,_fround$1107+3
  3094                           
  3095                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  3096  001F66  C02C  F00F         	movff	_fround$1107,___flmul@b
  3097  001F6A  C02D  F010         	movff	_fround$1107+1,___flmul@b+1
  3098  001F6E  C02E  F011         	movff	_fround$1107+2,___flmul@b+2
  3099  001F72  C02F  F012         	movff	_fround$1107+3,___flmul@b+3
  3100  001F76  0E00               	movlw	0
  3101  001F78  6E13               	movwf	___flmul@a,c
  3102  001F7A  0E00               	movlw	0
  3103  001F7C  6E14               	movwf	___flmul@a+1,c
  3104  001F7E  0E00               	movlw	0
  3105  001F80  6E15               	movwf	___flmul@a+2,c
  3106  001F82  0E3F               	movlw	63
  3107  001F84  6E16               	movwf	___flmul@a+3,c
  3108  001F86  EC7E  F00A         	call	___flmul	;wreg free
  3109  001F8A  C00F  F028         	movff	?___flmul,?_fround
  3110  001F8E  C010  F029         	movff	?___flmul+1,?_fround+1
  3111  001F92  C011  F02A         	movff	?___flmul+2,?_fround+2
  3112  001F96  C012  F02B         	movff	?___flmul+3,?_fround+3
  3113  001F9A  0012               	return	
  3114  001F9C                     l2779:
  3115                           
  3116                           ;doprnt.c: 415: else if(prec > 10)
  3117  001F9C  0E0A               	movlw	10
  3118  001F9E  6434               	cpfsgt	fround@prec,c
  3119  001FA0  D063               	goto	l2787
  3120                           
  3121                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  3122  001FA2  0E00               	movlw	0
  3123  001FA4  6E04               	movwf	___awmod@divisor+1,c
  3124  001FA6  0E0A               	movlw	10
  3125  001FA8  6E03               	movwf	___awmod@divisor,c
  3126  001FAA  C034  F001         	movff	fround@prec,___awmod@dividend
  3127  001FAE  6A02               	clrf	___awmod@dividend+1,c
  3128  001FB0  ECC6  F015         	call	___awmod	;wreg free
  3129  001FB4  90D8               	bcf	status,0,c
  3130  001FB6  3601               	rlcf	?___awmod,f,c
  3131  001FB8  3602               	rlcf	?___awmod+1,f,c
  3132  001FBA  90D8               	bcf	status,0,c
  3133  001FBC  3601               	rlcf	?___awmod,f,c
  3134  001FBE  3602               	rlcf	?___awmod+1,f,c
  3135  001FC0  0E01               	movlw	low __npowers_
  3136  001FC2  2401               	addwf	?___awmod,w,c
  3137  001FC4  6EF6               	movwf	tblptrl,c
  3138  001FC6  0E08               	movlw	high __npowers_
  3139  001FC8  2002               	addwfc	?___awmod+1,w,c
  3140  001FCA  6EF7               	movwf	tblptrh,c
  3141  001FCC                     	if	0	;There are less than 3 active tblptr bytes
  3142  001FCC                     	endif
  3143  001FCC  0009               	tblrd		*+
  3144  001FCE  CFF5 F013          	movff	tablat,___flmul@a
  3145  001FD2  0009               	tblrd		*+
  3146  001FD4  CFF5 F014          	movff	tablat,___flmul@a+1
  3147  001FD8  0009               	tblrd		*+
  3148  001FDA  CFF5 F015          	movff	tablat,___flmul@a+2
  3149  001FDE  000A               	tblrd		*-
  3150  001FE0  CFF5 F016          	movff	tablat,___flmul@a+3
  3151  001FE4  0E00               	movlw	0
  3152  001FE6  6E0A               	movwf	___awdiv@divisor+1,c
  3153  001FE8  0E0A               	movlw	10
  3154  001FEA  6E09               	movwf	___awdiv@divisor,c
  3155  001FEC  C034  F007         	movff	fround@prec,___awdiv@dividend
  3156  001FF0  6A08               	clrf	___awdiv@dividend+1,c
  3157  001FF2  EC43  F015         	call	___awdiv	;wreg free
  3158  001FF6  90D8               	bcf	status,0,c
  3159  001FF8  3607               	rlcf	?___awdiv,f,c
  3160  001FFA  3608               	rlcf	?___awdiv+1,f,c
  3161  001FFC  90D8               	bcf	status,0,c
  3162  001FFE  3607               	rlcf	?___awdiv,f,c
  3163  002000  3608               	rlcf	?___awdiv+1,f,c
  3164  002002  0E24               	movlw	36
  3165  002004  2607               	addwf	?___awdiv,f,c
  3166  002006  0E00               	movlw	0
  3167  002008  2208               	addwfc	?___awdiv+1,f,c
  3168  00200A  0E01               	movlw	low __npowers_
  3169  00200C  2407               	addwf	?___awdiv,w,c
  3170  00200E  6EF6               	movwf	tblptrl,c
  3171  002010  0E08               	movlw	high __npowers_
  3172  002012  2008               	addwfc	?___awdiv+1,w,c
  3173  002014  6EF7               	movwf	tblptrh,c
  3174  002016                     	if	0	;There are less than 3 active tblptr bytes
  3175  002016                     	endif
  3176  002016  0009               	tblrd		*+
  3177  002018  CFF5 F00F          	movff	tablat,___flmul@b
  3178  00201C  0009               	tblrd		*+
  3179  00201E  CFF5 F010          	movff	tablat,___flmul@b+1
  3180  002022  0009               	tblrd		*+
  3181  002024  CFF5 F011          	movff	tablat,___flmul@b+2
  3182  002028  000A               	tblrd		*-
  3183  00202A  CFF5 F012          	movff	tablat,___flmul@b+3
  3184  00202E  EC7E  F00A         	call	___flmul	;wreg free
  3185  002032  C00F  F030         	movff	?___flmul,_fround$1106
  3186  002036  C010  F031         	movff	?___flmul+1,_fround$1106+1
  3187  00203A  C011  F032         	movff	?___flmul+2,_fround$1106+2
  3188  00203E  C012  F033         	movff	?___flmul+3,_fround$1106+3
  3189                           
  3190                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  3191  002042  C030  F00F         	movff	_fround$1106,___flmul@b
  3192  002046  C031  F010         	movff	_fround$1106+1,___flmul@b+1
  3193  00204A  C032  F011         	movff	_fround$1106+2,___flmul@b+2
  3194  00204E  C033  F012         	movff	_fround$1106+3,___flmul@b+3
  3195  002052  0E00               	movlw	0
  3196  002054  6E13               	movwf	___flmul@a,c
  3197  002056  0E00               	movlw	0
  3198  002058  6E14               	movwf	___flmul@a+1,c
  3199  00205A  0E00               	movlw	0
  3200  00205C  6E15               	movwf	___flmul@a+2,c
  3201  00205E  0E3F               	movlw	63
  3202  002060  6E16               	movwf	___flmul@a+3,c
  3203  002062  EC7E  F00A         	call	___flmul	;wreg free
  3204  002066  D791               	goto	L5
  3205  002068                     l2787:
  3206                           
  3207                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  3208  002068  5034               	movf	fround@prec,w,c
  3209  00206A  0D04               	mullw	4
  3210  00206C  0E01               	movlw	low __npowers_
  3211  00206E  24F3               	addwf	prodl,w,c
  3212  002070  6EF6               	movwf	tblptrl,c
  3213  002072  0E08               	movlw	high __npowers_
  3214  002074  20F4               	addwfc	prodh,w,c
  3215  002076  6EF7               	movwf	tblptrh,c
  3216  002078                     	if	0	;There are less than 3 active tblptr bytes
  3217  002078                     	endif
  3218  002078  0009               	tblrd		*+
  3219  00207A  CFF5 F00F          	movff	tablat,___flmul@b
  3220  00207E  0009               	tblrd		*+
  3221  002080  CFF5 F010          	movff	tablat,___flmul@b+1
  3222  002084  0009               	tblrd		*+
  3223  002086  CFF5 F011          	movff	tablat,___flmul@b+2
  3224  00208A  000A               	tblrd		*-
  3225  00208C  CFF5 F012          	movff	tablat,___flmul@b+3
  3226  002090  0E00               	movlw	0
  3227  002092  6E13               	movwf	___flmul@a,c
  3228  002094  0E00               	movlw	0
  3229  002096  6E14               	movwf	___flmul@a+1,c
  3230  002098  0E00               	movlw	0
  3231  00209A  6E15               	movwf	___flmul@a+2,c
  3232  00209C  0E3F               	movlw	63
  3233  00209E  6E16               	movwf	___flmul@a+3,c
  3234  0020A0  EC7E  F00A         	call	___flmul	;wreg free
  3235  0020A4  C00F  F028         	movff	?___flmul,?_fround
  3236  0020A8  C010  F029         	movff	?___flmul+1,?_fround+1
  3237  0020AC  C011  F02A         	movff	?___flmul+2,?_fround+2
  3238  0020B0  C012  F02B         	movff	?___flmul+3,?_fround+3
  3239  0020B4  0012               	return	
  3240  0020B6                     __end_of_fround:
  3241                           	opt stack 0
  3242                           tblptru	equ	0xFF8
  3243                           tblptrh	equ	0xFF7
  3244                           tblptrl	equ	0xFF6
  3245                           tablat	equ	0xFF5
  3246                           prodh	equ	0xFF4
  3247                           prodl	equ	0xFF3
  3248                           postinc0	equ	0xFEE
  3249                           wreg	equ	0xFE8
  3250                           indf2	equ	0xFDF
  3251                           postinc2	equ	0xFDE
  3252                           fsr2h	equ	0xFDA
  3253                           fsr2l	equ	0xFD9
  3254                           status	equ	0xFD8
  3255                           
  3256 ;; *************** function ___awmod *****************
  3257 ;; Defined at:
  3258 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\awmod.c"
  3259 ;; Parameters:    Size  Location     Type
  3260 ;;  dividend        2    0[COMRAM] int 
  3261 ;;  divisor         2    2[COMRAM] int 
  3262 ;; Auto vars:     Size  Location     Type
  3263 ;;  sign            1    5[COMRAM] unsigned char 
  3264 ;;  counter         1    4[COMRAM] unsigned char 
  3265 ;; Return value:  Size  Location     Type
  3266 ;;                  2    0[COMRAM] int 
  3267 ;; Registers used:
  3268 ;;		wreg, status,2, status,0
  3269 ;; Tracked objects:
  3270 ;;		On entry : 0/0
  3271 ;;		On exit  : 0/0
  3272 ;;		Unchanged: 0/0
  3273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3274 ;;      Params:         4       0       0       0       0       0       0       0       0
  3275 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3276 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3277 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3278 ;;Total ram usage:        6 bytes
  3279 ;; Hardware stack levels used:    1
  3280 ;; This function calls:
  3281 ;;		Nothing
  3282 ;; This function is called by:
  3283 ;;		_fround
  3284 ;;		_scale
  3285 ;; This function uses a non-reentrant model
  3286 ;;
  3287                           
  3288                           	psect	text6
  3289  002B8C                     __ptext6:
  3290                           	opt stack 0
  3291  002B8C                     ___awmod:
  3292                           	opt stack 27
  3293                           
  3294                           ;incstack = 0
  3295  002B8C  0E00               	movlw	0
  3296  002B8E  6E06               	movwf	___awmod@sign,c
  3297  002B90  AE02               	btfss	___awmod@dividend+1,7,c
  3298  002B92  D006               	goto	l2717
  3299  002B94  6C01               	negf	___awmod@dividend,c
  3300  002B96  1E02               	comf	___awmod@dividend+1,f,c
  3301  002B98  B0D8               	btfsc	status,0,c
  3302  002B9A  2A02               	incf	___awmod@dividend+1,f,c
  3303  002B9C  0E01               	movlw	1
  3304  002B9E  6E06               	movwf	___awmod@sign,c
  3305  002BA0                     l2717:
  3306  002BA0  AE04               	btfss	___awmod@divisor+1,7,c
  3307  002BA2  D004               	goto	l2721
  3308  002BA4  6C03               	negf	___awmod@divisor,c
  3309  002BA6  1E04               	comf	___awmod@divisor+1,f,c
  3310  002BA8  B0D8               	btfsc	status,0,c
  3311  002BAA  2A04               	incf	___awmod@divisor+1,f,c
  3312  002BAC                     l2721:
  3313  002BAC  5003               	movf	___awmod@divisor,w,c
  3314  002BAE  1004               	iorwf	___awmod@divisor+1,w,c
  3315  002BB0  B4D8               	btfsc	status,2,c
  3316  002BB2  D018               	goto	l2737
  3317  002BB4  0E01               	movlw	1
  3318  002BB6  6E05               	movwf	___awmod@counter,c
  3319  002BB8  D004               	goto	l2727
  3320  002BBA                     l2725:
  3321  002BBA  90D8               	bcf	status,0,c
  3322  002BBC  3603               	rlcf	___awmod@divisor,f,c
  3323  002BBE  3604               	rlcf	___awmod@divisor+1,f,c
  3324  002BC0  2A05               	incf	___awmod@counter,f,c
  3325  002BC2                     l2727:
  3326  002BC2  AE04               	btfss	___awmod@divisor+1,7,c
  3327  002BC4  D7FA               	goto	l2725
  3328  002BC6                     l2729:
  3329  002BC6  5003               	movf	___awmod@divisor,w,c
  3330  002BC8  5C01               	subwf	___awmod@dividend,w,c
  3331  002BCA  5004               	movf	___awmod@divisor+1,w,c
  3332  002BCC  5802               	subwfb	___awmod@dividend+1,w,c
  3333  002BCE  A0D8               	btfss	status,0,c
  3334  002BD0  D004               	goto	l2733
  3335  002BD2  5003               	movf	___awmod@divisor,w,c
  3336  002BD4  5E01               	subwf	___awmod@dividend,f,c
  3337  002BD6  5004               	movf	___awmod@divisor+1,w,c
  3338  002BD8  5A02               	subwfb	___awmod@dividend+1,f,c
  3339  002BDA                     l2733:
  3340  002BDA  90D8               	bcf	status,0,c
  3341  002BDC  3204               	rrcf	___awmod@divisor+1,f,c
  3342  002BDE  3203               	rrcf	___awmod@divisor,f,c
  3343  002BE0  2E05               	decfsz	___awmod@counter,f,c
  3344  002BE2  D7F1               	goto	l2729
  3345  002BE4                     l2737:
  3346  002BE4  5006               	movf	___awmod@sign,w,c
  3347  002BE6  B4D8               	btfsc	status,2,c
  3348  002BE8  D004               	goto	l2741
  3349  002BEA  6C01               	negf	___awmod@dividend,c
  3350  002BEC  1E02               	comf	___awmod@dividend+1,f,c
  3351  002BEE  B0D8               	btfsc	status,0,c
  3352  002BF0  2A02               	incf	___awmod@dividend+1,f,c
  3353  002BF2                     l2741:
  3354  002BF2  C001  F001         	movff	___awmod@dividend,?___awmod
  3355  002BF6  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  3356  002BFA  0012               	return	
  3357  002BFC                     __end_of___awmod:
  3358                           	opt stack 0
  3359                           tblptru	equ	0xFF8
  3360                           tblptrh	equ	0xFF7
  3361                           tblptrl	equ	0xFF6
  3362                           tablat	equ	0xFF5
  3363                           prodh	equ	0xFF4
  3364                           prodl	equ	0xFF3
  3365                           postinc0	equ	0xFEE
  3366                           wreg	equ	0xFE8
  3367                           indf2	equ	0xFDF
  3368                           postinc2	equ	0xFDE
  3369                           fsr2h	equ	0xFDA
  3370                           fsr2l	equ	0xFD9
  3371                           status	equ	0xFD8
  3372                           
  3373 ;; *************** function __tdiv_to_l_ *****************
  3374 ;; Defined at:
  3375 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\ftdivl.c"
  3376 ;; Parameters:    Size  Location     Type
  3377 ;;  f1              4    0[COMRAM] float 
  3378 ;;  f2              4    4[COMRAM] float 
  3379 ;; Auto vars:     Size  Location     Type
  3380 ;;  quot            4   11[COMRAM] unsigned long 
  3381 ;;  exp1            1   16[COMRAM] unsigned char 
  3382 ;;  cntr            1   15[COMRAM] unsigned char 
  3383 ;; Return value:  Size  Location     Type
  3384 ;;                  4    0[COMRAM] unsigned long 
  3385 ;; Registers used:
  3386 ;;		wreg, status,2, status,0
  3387 ;; Tracked objects:
  3388 ;;		On entry : 0/0
  3389 ;;		On exit  : 0/0
  3390 ;;		Unchanged: 0/0
  3391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3392 ;;      Params:         8       0       0       0       0       0       0       0       0
  3393 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3394 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3395 ;;      Totals:        17       0       0       0       0       0       0       0       0
  3396 ;;Total ram usage:       17 bytes
  3397 ;; Hardware stack levels used:    1
  3398 ;; This function calls:
  3399 ;;		Nothing
  3400 ;; This function is called by:
  3401 ;;		_sprintf
  3402 ;; This function uses a non-reentrant model
  3403 ;;
  3404                           
  3405                           	psect	text7
  3406  002384                     __ptext7:
  3407                           	opt stack 0
  3408  002384                     __tdiv_to_l_:
  3409                           	opt stack 28
  3410                           
  3411                           ;incstack = 0
  3412  002384  C003  F009         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  3413  002388  6A0A               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  3414  00238A  6A0B               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  3415  00238C  3402               	rlcf	__tdiv_to_l_@f1+1,w,c
  3416  00238E  3609               	rlcf	??__tdiv_to_l_& (0+255),f,c
  3417  002390  E301               	bnc	u2871
  3418  002392  800A               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  3419  002394                     u2871:
  3420  002394  5009               	movf	??__tdiv_to_l_,w,c
  3421  002396  6E11               	movwf	__tdiv_to_l_@exp1,c
  3422  002398  5011               	movf	__tdiv_to_l_@exp1,w,c
  3423  00239A  A4D8               	btfss	status,2,c
  3424  00239C  D009               	goto	l2847
  3425  00239E  0E00               	movlw	0
  3426  0023A0  6E01               	movwf	?__tdiv_to_l_,c
  3427  0023A2  0E00               	movlw	0
  3428  0023A4  6E02               	movwf	?__tdiv_to_l_+1,c
  3429  0023A6  0E00               	movlw	0
  3430  0023A8  6E03               	movwf	?__tdiv_to_l_+2,c
  3431  0023AA  0E00               	movlw	0
  3432  0023AC  6E04               	movwf	?__tdiv_to_l_+3,c
  3433  0023AE  0012               	return	
  3434  0023B0                     l2847:
  3435  0023B0  C007  F009         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  3436  0023B4  6A0A               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  3437  0023B6  6A0B               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  3438  0023B8  3406               	rlcf	__tdiv_to_l_@f2+1,w,c
  3439  0023BA  3609               	rlcf	??__tdiv_to_l_& (0+255),f,c
  3440  0023BC  E301               	bnc	u2891
  3441  0023BE  800A               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  3442  0023C0                     u2891:
  3443  0023C0  5009               	movf	??__tdiv_to_l_,w,c
  3444  0023C2  6E10               	movwf	__tdiv_to_l_@cntr,c
  3445  0023C4  5010               	movf	__tdiv_to_l_@cntr,w,c
  3446  0023C6  A4D8               	btfss	status,2,c
  3447  0023C8  D009               	goto	l2853
  3448  0023CA  0E00               	movlw	0
  3449  0023CC  6E01               	movwf	?__tdiv_to_l_,c
  3450  0023CE  0E00               	movlw	0
  3451  0023D0  6E02               	movwf	?__tdiv_to_l_+1,c
  3452  0023D2  0E00               	movlw	0
  3453  0023D4  6E03               	movwf	?__tdiv_to_l_+2,c
  3454  0023D6  0E00               	movlw	0
  3455  0023D8  6E04               	movwf	?__tdiv_to_l_+3,c
  3456  0023DA  0012               	return	
  3457  0023DC                     l2853:
  3458  0023DC  8E02               	bsf	__tdiv_to_l_@f1+1,7,c
  3459  0023DE  0EFF               	movlw	255
  3460  0023E0  1601               	andwf	__tdiv_to_l_@f1,f,c
  3461  0023E2  0EFF               	movlw	255
  3462  0023E4  1602               	andwf	__tdiv_to_l_@f1+1,f,c
  3463  0023E6  0E00               	movlw	0
  3464  0023E8  1603               	andwf	__tdiv_to_l_@f1+2,f,c
  3465  0023EA  8E06               	bsf	__tdiv_to_l_@f2+1,7,c
  3466  0023EC  0EFF               	movlw	255
  3467  0023EE  1605               	andwf	__tdiv_to_l_@f2,f,c
  3468  0023F0  0EFF               	movlw	255
  3469  0023F2  1606               	andwf	__tdiv_to_l_@f2+1,f,c
  3470  0023F4  0E00               	movlw	0
  3471  0023F6  1607               	andwf	__tdiv_to_l_@f2+2,f,c
  3472  0023F8  0E00               	movlw	0
  3473  0023FA  6E0C               	movwf	__tdiv_to_l_@quot,c
  3474  0023FC  0E00               	movlw	0
  3475  0023FE  6E0D               	movwf	__tdiv_to_l_@quot+1,c
  3476  002400  0E00               	movlw	0
  3477  002402  6E0E               	movwf	__tdiv_to_l_@quot+2,c
  3478  002404  0E00               	movlw	0
  3479  002406  6E0F               	movwf	__tdiv_to_l_@quot+3,c
  3480  002408  0E7F               	movlw	127
  3481  00240A  5E11               	subwf	__tdiv_to_l_@exp1,f,c
  3482  00240C  5010               	movf	__tdiv_to_l_@cntr,w,c
  3483  00240E  0F98               	addlw	152
  3484  002410  5E11               	subwf	__tdiv_to_l_@exp1,f,c
  3485  002412  0E18               	movlw	24
  3486  002414  6E10               	movwf	__tdiv_to_l_@cntr,c
  3487  002416                     l571:
  3488  002416  90D8               	bcf	status,0,c
  3489  002418  360C               	rlcf	__tdiv_to_l_@quot,f,c
  3490  00241A  360D               	rlcf	__tdiv_to_l_@quot+1,f,c
  3491  00241C  360E               	rlcf	__tdiv_to_l_@quot+2,f,c
  3492  00241E  360F               	rlcf	__tdiv_to_l_@quot+3,f,c
  3493  002420  5005               	movf	__tdiv_to_l_@f2,w,c
  3494  002422  5C01               	subwf	__tdiv_to_l_@f1,w,c
  3495  002424  5006               	movf	__tdiv_to_l_@f2+1,w,c
  3496  002426  5802               	subwfb	__tdiv_to_l_@f1+1,w,c
  3497  002428  5007               	movf	__tdiv_to_l_@f2+2,w,c
  3498  00242A  5803               	subwfb	__tdiv_to_l_@f1+2,w,c
  3499  00242C  A0D8               	btfss	status,0,c
  3500  00242E  D007               	goto	l572
  3501  002430  5005               	movf	__tdiv_to_l_@f2,w,c
  3502  002432  5E01               	subwf	__tdiv_to_l_@f1,f,c
  3503  002434  5006               	movf	__tdiv_to_l_@f2+1,w,c
  3504  002436  5A02               	subwfb	__tdiv_to_l_@f1+1,f,c
  3505  002438  5007               	movf	__tdiv_to_l_@f2+2,w,c
  3506  00243A  5A03               	subwfb	__tdiv_to_l_@f1+2,f,c
  3507  00243C  800C               	bsf	__tdiv_to_l_@quot,0,c
  3508  00243E                     l572:
  3509  00243E  90D8               	bcf	status,0,c
  3510  002440  3601               	rlcf	__tdiv_to_l_@f1,f,c
  3511  002442  3602               	rlcf	__tdiv_to_l_@f1+1,f,c
  3512  002444  3603               	rlcf	__tdiv_to_l_@f1+2,f,c
  3513  002446  2E10               	decfsz	__tdiv_to_l_@cntr,f,c
  3514  002448  D7E6               	goto	l571
  3515  00244A  AE11               	btfss	__tdiv_to_l_@exp1,7,c
  3516  00244C  D016               	goto	l2887
  3517  00244E  5011               	movf	__tdiv_to_l_@exp1,w,c
  3518  002450  0A80               	xorlw	128
  3519  002452  0F97               	addlw	151
  3520  002454  B0D8               	btfsc	status,0,c
  3521  002456  D009               	goto	l2883
  3522  002458  0E00               	movlw	0
  3523  00245A  6E01               	movwf	?__tdiv_to_l_,c
  3524  00245C  0E00               	movlw	0
  3525  00245E  6E02               	movwf	?__tdiv_to_l_+1,c
  3526  002460  0E00               	movlw	0
  3527  002462  6E03               	movwf	?__tdiv_to_l_+2,c
  3528  002464  0E00               	movlw	0
  3529  002466  6E04               	movwf	?__tdiv_to_l_+3,c
  3530  002468  0012               	return	
  3531  00246A                     l2883:
  3532  00246A  90D8               	bcf	status,0,c
  3533  00246C  320F               	rrcf	__tdiv_to_l_@quot+3,f,c
  3534  00246E  320E               	rrcf	__tdiv_to_l_@quot+2,f,c
  3535  002470  320D               	rrcf	__tdiv_to_l_@quot+1,f,c
  3536  002472  320C               	rrcf	__tdiv_to_l_@quot,f,c
  3537  002474  3E11               	incfsz	__tdiv_to_l_@exp1,f,c
  3538  002476  D7F9               	goto	l2883
  3539  002478  D015               	goto	l578
  3540  00247A                     l2887:
  3541  00247A  0E17               	movlw	23
  3542  00247C  6411               	cpfsgt	__tdiv_to_l_@exp1,c
  3543  00247E  D00F               	goto	l2895
  3544  002480  0E00               	movlw	0
  3545  002482  6E01               	movwf	?__tdiv_to_l_,c
  3546  002484  0E00               	movlw	0
  3547  002486  6E02               	movwf	?__tdiv_to_l_+1,c
  3548  002488  0E00               	movlw	0
  3549  00248A  6E03               	movwf	?__tdiv_to_l_+2,c
  3550  00248C  0E00               	movlw	0
  3551  00248E  6E04               	movwf	?__tdiv_to_l_+3,c
  3552  002490  0012               	return	
  3553  002492                     l2893:
  3554  002492  90D8               	bcf	status,0,c
  3555  002494  360C               	rlcf	__tdiv_to_l_@quot,f,c
  3556  002496  360D               	rlcf	__tdiv_to_l_@quot+1,f,c
  3557  002498  360E               	rlcf	__tdiv_to_l_@quot+2,f,c
  3558  00249A  360F               	rlcf	__tdiv_to_l_@quot+3,f,c
  3559  00249C  0611               	decf	__tdiv_to_l_@exp1,f,c
  3560  00249E                     l2895:
  3561  00249E  5011               	movf	__tdiv_to_l_@exp1,w,c
  3562  0024A0  A4D8               	btfss	status,2,c
  3563  0024A2  D7F7               	goto	l2893
  3564  0024A4                     l578:
  3565  0024A4  C00C  F001         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  3566  0024A8  C00D  F002         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  3567  0024AC  C00E  F003         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  3568  0024B0  C00F  F004         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  3569  0024B4  0012               	return		;funcret
  3570  0024B6                     __end_of__tdiv_to_l_:
  3571                           	opt stack 0
  3572                           tblptru	equ	0xFF8
  3573                           tblptrh	equ	0xFF7
  3574                           tblptrl	equ	0xFF6
  3575                           tablat	equ	0xFF5
  3576                           prodh	equ	0xFF4
  3577                           prodl	equ	0xFF3
  3578                           postinc0	equ	0xFEE
  3579                           wreg	equ	0xFE8
  3580                           indf2	equ	0xFDF
  3581                           postinc2	equ	0xFDE
  3582                           fsr2h	equ	0xFDA
  3583                           fsr2l	equ	0xFD9
  3584                           status	equ	0xFD8
  3585                           
  3586 ;; *************** function __div_to_l_ *****************
  3587 ;; Defined at:
  3588 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\fldivl.c"
  3589 ;; Parameters:    Size  Location     Type
  3590 ;;  f1              4    0[COMRAM] unsigned long 
  3591 ;;  f2              4    4[COMRAM] unsigned long 
  3592 ;; Auto vars:     Size  Location     Type
  3593 ;;  quot            4    8[COMRAM] unsigned long 
  3594 ;;  exp1            1   13[COMRAM] unsigned char 
  3595 ;;  cntr            1   12[COMRAM] unsigned char 
  3596 ;; Return value:  Size  Location     Type
  3597 ;;                  4    0[COMRAM] unsigned long 
  3598 ;; Registers used:
  3599 ;;		wreg, status,2, status,0
  3600 ;; Tracked objects:
  3601 ;;		On entry : 0/0
  3602 ;;		On exit  : 0/0
  3603 ;;		Unchanged: 0/0
  3604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3605 ;;      Params:         8       0       0       0       0       0       0       0       0
  3606 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3607 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3608 ;;      Totals:        14       0       0       0       0       0       0       0       0
  3609 ;;Total ram usage:       14 bytes
  3610 ;; Hardware stack levels used:    1
  3611 ;; This function calls:
  3612 ;;		Nothing
  3613 ;; This function is called by:
  3614 ;;		_sprintf
  3615 ;; This function uses a non-reentrant model
  3616 ;;
  3617                           
  3618                           	psect	text8
  3619  0024B6                     __ptext8:
  3620                           	opt stack 0
  3621  0024B6                     __div_to_l_:
  3622                           	opt stack 28
  3623                           
  3624                           ;incstack = 0
  3625  0024B6  3403               	rlcf	__div_to_l_@f1+2,w,c
  3626  0024B8  3404               	rlcf	__div_to_l_@f1+3,w,c
  3627  0024BA  6E0E               	movwf	__div_to_l_@exp1,c
  3628  0024BC  500E               	movf	__div_to_l_@exp1,w,c
  3629  0024BE  A4D8               	btfss	status,2,c
  3630  0024C0  D009               	goto	l2903
  3631  0024C2  0E00               	movlw	0
  3632  0024C4  6E01               	movwf	?__div_to_l_,c
  3633  0024C6  0E00               	movlw	0
  3634  0024C8  6E02               	movwf	?__div_to_l_+1,c
  3635  0024CA  0E00               	movlw	0
  3636  0024CC  6E03               	movwf	?__div_to_l_+2,c
  3637  0024CE  0E00               	movlw	0
  3638  0024D0  6E04               	movwf	?__div_to_l_+3,c
  3639  0024D2  0012               	return	
  3640  0024D4                     l2903:
  3641  0024D4  3407               	rlcf	__div_to_l_@f2+2,w,c
  3642  0024D6  3408               	rlcf	__div_to_l_@f2+3,w,c
  3643  0024D8  6E0D               	movwf	__div_to_l_@cntr,c
  3644  0024DA  500D               	movf	__div_to_l_@cntr,w,c
  3645  0024DC  A4D8               	btfss	status,2,c
  3646  0024DE  D009               	goto	l2909
  3647  0024E0  0E00               	movlw	0
  3648  0024E2  6E01               	movwf	?__div_to_l_,c
  3649  0024E4  0E00               	movlw	0
  3650  0024E6  6E02               	movwf	?__div_to_l_+1,c
  3651  0024E8  0E00               	movlw	0
  3652  0024EA  6E03               	movwf	?__div_to_l_+2,c
  3653  0024EC  0E00               	movlw	0
  3654  0024EE  6E04               	movwf	?__div_to_l_+3,c
  3655  0024F0  0012               	return	
  3656  0024F2                     l2909:
  3657  0024F2  8E03               	bsf	__div_to_l_@f1+2,7,c
  3658  0024F4  0EFF               	movlw	255
  3659  0024F6  1601               	andwf	__div_to_l_@f1,f,c
  3660  0024F8  0EFF               	movlw	255
  3661  0024FA  1602               	andwf	__div_to_l_@f1+1,f,c
  3662  0024FC  0EFF               	movlw	255
  3663  0024FE  1603               	andwf	__div_to_l_@f1+2,f,c
  3664  002500  0E00               	movlw	0
  3665  002502  1604               	andwf	__div_to_l_@f1+3,f,c
  3666  002504  8E07               	bsf	__div_to_l_@f2+2,7,c
  3667  002506  0EFF               	movlw	255
  3668  002508  1605               	andwf	__div_to_l_@f2,f,c
  3669  00250A  0EFF               	movlw	255
  3670  00250C  1606               	andwf	__div_to_l_@f2+1,f,c
  3671  00250E  0EFF               	movlw	255
  3672  002510  1607               	andwf	__div_to_l_@f2+2,f,c
  3673  002512  0E00               	movlw	0
  3674  002514  1608               	andwf	__div_to_l_@f2+3,f,c
  3675  002516  0E00               	movlw	0
  3676  002518  6E09               	movwf	__div_to_l_@quot,c
  3677  00251A  0E00               	movlw	0
  3678  00251C  6E0A               	movwf	__div_to_l_@quot+1,c
  3679  00251E  0E00               	movlw	0
  3680  002520  6E0B               	movwf	__div_to_l_@quot+2,c
  3681  002522  0E00               	movlw	0
  3682  002524  6E0C               	movwf	__div_to_l_@quot+3,c
  3683  002526  0E7F               	movlw	127
  3684  002528  5E0E               	subwf	__div_to_l_@exp1,f,c
  3685  00252A  500D               	movf	__div_to_l_@cntr,w,c
  3686  00252C  0FA0               	addlw	160
  3687  00252E  5E0E               	subwf	__div_to_l_@exp1,f,c
  3688  002530  0E20               	movlw	32
  3689  002532  6E0D               	movwf	__div_to_l_@cntr,c
  3690  002534                     l2923:
  3691  002534  90D8               	bcf	status,0,c
  3692  002536  3609               	rlcf	__div_to_l_@quot,f,c
  3693  002538  360A               	rlcf	__div_to_l_@quot+1,f,c
  3694  00253A  360B               	rlcf	__div_to_l_@quot+2,f,c
  3695  00253C  360C               	rlcf	__div_to_l_@quot+3,f,c
  3696  00253E  5005               	movf	__div_to_l_@f2,w,c
  3697  002540  5C01               	subwf	__div_to_l_@f1,w,c
  3698  002542  5006               	movf	__div_to_l_@f2+1,w,c
  3699  002544  5802               	subwfb	__div_to_l_@f1+1,w,c
  3700  002546  5007               	movf	__div_to_l_@f2+2,w,c
  3701  002548  5803               	subwfb	__div_to_l_@f1+2,w,c
  3702  00254A  5008               	movf	__div_to_l_@f2+3,w,c
  3703  00254C  5804               	subwfb	__div_to_l_@f1+3,w,c
  3704  00254E  A0D8               	btfss	status,0,c
  3705  002550  D009               	goto	l2931
  3706  002552  5005               	movf	__div_to_l_@f2,w,c
  3707  002554  5E01               	subwf	__div_to_l_@f1,f,c
  3708  002556  5006               	movf	__div_to_l_@f2+1,w,c
  3709  002558  5A02               	subwfb	__div_to_l_@f1+1,f,c
  3710  00255A  5007               	movf	__div_to_l_@f2+2,w,c
  3711  00255C  5A03               	subwfb	__div_to_l_@f1+2,f,c
  3712  00255E  5008               	movf	__div_to_l_@f2+3,w,c
  3713  002560  5A04               	subwfb	__div_to_l_@f1+3,f,c
  3714  002562  8009               	bsf	__div_to_l_@quot,0,c
  3715  002564                     l2931:
  3716  002564  90D8               	bcf	status,0,c
  3717  002566  3601               	rlcf	__div_to_l_@f1,f,c
  3718  002568  3602               	rlcf	__div_to_l_@f1+1,f,c
  3719  00256A  3603               	rlcf	__div_to_l_@f1+2,f,c
  3720  00256C  3604               	rlcf	__div_to_l_@f1+3,f,c
  3721  00256E  2E0D               	decfsz	__div_to_l_@cntr,f,c
  3722  002570  D7E1               	goto	l2923
  3723  002572  AE0E               	btfss	__div_to_l_@exp1,7,c
  3724  002574  D016               	goto	l2947
  3725  002576  500E               	movf	__div_to_l_@exp1,w,c
  3726  002578  0A80               	xorlw	128
  3727  00257A  0F9F               	addlw	159
  3728  00257C  B0D8               	btfsc	status,0,c
  3729  00257E  D009               	goto	l2943
  3730  002580  0E00               	movlw	0
  3731  002582  6E01               	movwf	?__div_to_l_,c
  3732  002584  0E00               	movlw	0
  3733  002586  6E02               	movwf	?__div_to_l_+1,c
  3734  002588  0E00               	movlw	0
  3735  00258A  6E03               	movwf	?__div_to_l_+2,c
  3736  00258C  0E00               	movlw	0
  3737  00258E  6E04               	movwf	?__div_to_l_+3,c
  3738  002590  0012               	return	
  3739  002592                     l2943:
  3740  002592  90D8               	bcf	status,0,c
  3741  002594  320C               	rrcf	__div_to_l_@quot+3,f,c
  3742  002596  320B               	rrcf	__div_to_l_@quot+2,f,c
  3743  002598  320A               	rrcf	__div_to_l_@quot+1,f,c
  3744  00259A  3209               	rrcf	__div_to_l_@quot,f,c
  3745  00259C  3E0E               	incfsz	__div_to_l_@exp1,f,c
  3746  00259E  D7F9               	goto	l2943
  3747  0025A0  D015               	goto	l474
  3748  0025A2                     l2947:
  3749  0025A2  0E1F               	movlw	31
  3750  0025A4  640E               	cpfsgt	__div_to_l_@exp1,c
  3751  0025A6  D00F               	goto	l2955
  3752  0025A8  0E00               	movlw	0
  3753  0025AA  6E01               	movwf	?__div_to_l_,c
  3754  0025AC  0E00               	movlw	0
  3755  0025AE  6E02               	movwf	?__div_to_l_+1,c
  3756  0025B0  0E00               	movlw	0
  3757  0025B2  6E03               	movwf	?__div_to_l_+2,c
  3758  0025B4  0E00               	movlw	0
  3759  0025B6  6E04               	movwf	?__div_to_l_+3,c
  3760  0025B8  0012               	return	
  3761  0025BA                     l2953:
  3762  0025BA  90D8               	bcf	status,0,c
  3763  0025BC  3609               	rlcf	__div_to_l_@quot,f,c
  3764  0025BE  360A               	rlcf	__div_to_l_@quot+1,f,c
  3765  0025C0  360B               	rlcf	__div_to_l_@quot+2,f,c
  3766  0025C2  360C               	rlcf	__div_to_l_@quot+3,f,c
  3767  0025C4  060E               	decf	__div_to_l_@exp1,f,c
  3768  0025C6                     l2955:
  3769  0025C6  500E               	movf	__div_to_l_@exp1,w,c
  3770  0025C8  A4D8               	btfss	status,2,c
  3771  0025CA  D7F7               	goto	l2953
  3772  0025CC                     l474:
  3773  0025CC  C009  F001         	movff	__div_to_l_@quot,?__div_to_l_
  3774  0025D0  C00A  F002         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  3775  0025D4  C00B  F003         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  3776  0025D8  C00C  F004         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  3777  0025DC  0012               	return		;funcret
  3778  0025DE                     __end_of__div_to_l_:
  3779                           	opt stack 0
  3780                           tblptru	equ	0xFF8
  3781                           tblptrh	equ	0xFF7
  3782                           tblptrl	equ	0xFF6
  3783                           tablat	equ	0xFF5
  3784                           prodh	equ	0xFF4
  3785                           prodl	equ	0xFF3
  3786                           postinc0	equ	0xFEE
  3787                           wreg	equ	0xFE8
  3788                           indf2	equ	0xFDF
  3789                           postinc2	equ	0xFDE
  3790                           fsr2h	equ	0xFDA
  3791                           fsr2l	equ	0xFD9
  3792                           status	equ	0xFD8
  3793                           
  3794 ;; *************** function ___llmod *****************
  3795 ;; Defined at:
  3796 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\llmod.c"
  3797 ;; Parameters:    Size  Location     Type
  3798 ;;  dividend        4    0[COMRAM] unsigned long 
  3799 ;;  divisor         4    4[COMRAM] unsigned long 
  3800 ;; Auto vars:     Size  Location     Type
  3801 ;;  counter         1    8[COMRAM] unsigned char 
  3802 ;; Return value:  Size  Location     Type
  3803 ;;                  4    0[COMRAM] unsigned long 
  3804 ;; Registers used:
  3805 ;;		wreg, status,2, status,0
  3806 ;; Tracked objects:
  3807 ;;		On entry : 0/0
  3808 ;;		On exit  : 0/0
  3809 ;;		Unchanged: 0/0
  3810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3811 ;;      Params:         8       0       0       0       0       0       0       0       0
  3812 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3813 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3814 ;;      Totals:         9       0       0       0       0       0       0       0       0
  3815 ;;Total ram usage:        9 bytes
  3816 ;; Hardware stack levels used:    1
  3817 ;; This function calls:
  3818 ;;		Nothing
  3819 ;; This function is called by:
  3820 ;;		_sprintf
  3821 ;; This function uses a non-reentrant model
  3822 ;;
  3823                           
  3824                           	psect	text9
  3825  002C6C                     __ptext9:
  3826                           	opt stack 0
  3827  002C6C                     ___llmod:
  3828                           	opt stack 28
  3829                           
  3830                           ;incstack = 0
  3831  002C6C  5005               	movf	___llmod@divisor,w,c
  3832  002C6E  1006               	iorwf	___llmod@divisor+1,w,c
  3833  002C70  1007               	iorwf	___llmod@divisor+2,w,c
  3834  002C72  1008               	iorwf	___llmod@divisor+3,w,c
  3835  002C74  B4D8               	btfsc	status,2,c
  3836  002C76  D024               	goto	l677
  3837  002C78  0E01               	movlw	1
  3838  002C7A  6E09               	movwf	___llmod@counter,c
  3839  002C7C  D006               	goto	l3065
  3840  002C7E                     l3063:
  3841  002C7E  90D8               	bcf	status,0,c
  3842  002C80  3605               	rlcf	___llmod@divisor,f,c
  3843  002C82  3606               	rlcf	___llmod@divisor+1,f,c
  3844  002C84  3607               	rlcf	___llmod@divisor+2,f,c
  3845  002C86  3608               	rlcf	___llmod@divisor+3,f,c
  3846  002C88  2A09               	incf	___llmod@counter,f,c
  3847  002C8A                     l3065:
  3848  002C8A  AE08               	btfss	___llmod@divisor+3,7,c
  3849  002C8C  D7F8               	goto	l3063
  3850  002C8E                     l3067:
  3851  002C8E  5005               	movf	___llmod@divisor,w,c
  3852  002C90  5C01               	subwf	___llmod@dividend,w,c
  3853  002C92  5006               	movf	___llmod@divisor+1,w,c
  3854  002C94  5802               	subwfb	___llmod@dividend+1,w,c
  3855  002C96  5007               	movf	___llmod@divisor+2,w,c
  3856  002C98  5803               	subwfb	___llmod@dividend+2,w,c
  3857  002C9A  5008               	movf	___llmod@divisor+3,w,c
  3858  002C9C  5804               	subwfb	___llmod@dividend+3,w,c
  3859  002C9E  A0D8               	btfss	status,0,c
  3860  002CA0  D008               	goto	l3071
  3861  002CA2  5005               	movf	___llmod@divisor,w,c
  3862  002CA4  5E01               	subwf	___llmod@dividend,f,c
  3863  002CA6  5006               	movf	___llmod@divisor+1,w,c
  3864  002CA8  5A02               	subwfb	___llmod@dividend+1,f,c
  3865  002CAA  5007               	movf	___llmod@divisor+2,w,c
  3866  002CAC  5A03               	subwfb	___llmod@dividend+2,f,c
  3867  002CAE  5008               	movf	___llmod@divisor+3,w,c
  3868  002CB0  5A04               	subwfb	___llmod@dividend+3,f,c
  3869  002CB2                     l3071:
  3870  002CB2  90D8               	bcf	status,0,c
  3871  002CB4  3208               	rrcf	___llmod@divisor+3,f,c
  3872  002CB6  3207               	rrcf	___llmod@divisor+2,f,c
  3873  002CB8  3206               	rrcf	___llmod@divisor+1,f,c
  3874  002CBA  3205               	rrcf	___llmod@divisor,f,c
  3875  002CBC  2E09               	decfsz	___llmod@counter,f,c
  3876  002CBE  D7E7               	goto	l3067
  3877  002CC0                     l677:
  3878  002CC0  C001  F001         	movff	___llmod@dividend,?___llmod
  3879  002CC4  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
  3880  002CC8  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
  3881  002CCC  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
  3882  002CD0  0012               	return		;funcret
  3883  002CD2                     __end_of___llmod:
  3884                           	opt stack 0
  3885                           tblptru	equ	0xFF8
  3886                           tblptrh	equ	0xFF7
  3887                           tblptrl	equ	0xFF6
  3888                           tablat	equ	0xFF5
  3889                           prodh	equ	0xFF4
  3890                           prodl	equ	0xFF3
  3891                           postinc0	equ	0xFEE
  3892                           wreg	equ	0xFE8
  3893                           indf2	equ	0xFDF
  3894                           postinc2	equ	0xFDE
  3895                           fsr2h	equ	0xFDA
  3896                           fsr2l	equ	0xFD9
  3897                           status	equ	0xFD8
  3898                           
  3899 ;; *************** function ___lldiv *****************
  3900 ;; Defined at:
  3901 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\lldiv.c"
  3902 ;; Parameters:    Size  Location     Type
  3903 ;;  dividend        4    0[COMRAM] unsigned long 
  3904 ;;  divisor         4    4[COMRAM] unsigned long 
  3905 ;; Auto vars:     Size  Location     Type
  3906 ;;  quotient        4    8[COMRAM] unsigned long 
  3907 ;;  counter         1   12[COMRAM] unsigned char 
  3908 ;; Return value:  Size  Location     Type
  3909 ;;                  4    0[COMRAM] unsigned long 
  3910 ;; Registers used:
  3911 ;;		wreg, status,2, status,0
  3912 ;; Tracked objects:
  3913 ;;		On entry : 0/0
  3914 ;;		On exit  : 0/0
  3915 ;;		Unchanged: 0/0
  3916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3917 ;;      Params:         8       0       0       0       0       0       0       0       0
  3918 ;;      Locals:         5       0       0       0       0       0       0       0       0
  3919 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3920 ;;      Totals:        13       0       0       0       0       0       0       0       0
  3921 ;;Total ram usage:       13 bytes
  3922 ;; Hardware stack levels used:    1
  3923 ;; This function calls:
  3924 ;;		Nothing
  3925 ;; This function is called by:
  3926 ;;		_sprintf
  3927 ;; This function uses a non-reentrant model
  3928 ;;
  3929                           
  3930                           	psect	text10
  3931  002B0A                     __ptext10:
  3932                           	opt stack 0
  3933  002B0A                     ___lldiv:
  3934                           	opt stack 28
  3935                           
  3936                           ;incstack = 0
  3937  002B0A  0E00               	movlw	0
  3938  002B0C  6E09               	movwf	___lldiv@quotient,c
  3939  002B0E  0E00               	movlw	0
  3940  002B10  6E0A               	movwf	___lldiv@quotient+1,c
  3941  002B12  0E00               	movlw	0
  3942  002B14  6E0B               	movwf	___lldiv@quotient+2,c
  3943  002B16  0E00               	movlw	0
  3944  002B18  6E0C               	movwf	___lldiv@quotient+3,c
  3945  002B1A  5005               	movf	___lldiv@divisor,w,c
  3946  002B1C  1006               	iorwf	___lldiv@divisor+1,w,c
  3947  002B1E  1007               	iorwf	___lldiv@divisor+2,w,c
  3948  002B20  1008               	iorwf	___lldiv@divisor+3,w,c
  3949  002B22  B4D8               	btfsc	status,2,c
  3950  002B24  D02A               	goto	l667
  3951  002B26  0E01               	movlw	1
  3952  002B28  6E0D               	movwf	___lldiv@counter,c
  3953  002B2A  D006               	goto	l3045
  3954  002B2C                     l3043:
  3955  002B2C  90D8               	bcf	status,0,c
  3956  002B2E  3605               	rlcf	___lldiv@divisor,f,c
  3957  002B30  3606               	rlcf	___lldiv@divisor+1,f,c
  3958  002B32  3607               	rlcf	___lldiv@divisor+2,f,c
  3959  002B34  3608               	rlcf	___lldiv@divisor+3,f,c
  3960  002B36  2A0D               	incf	___lldiv@counter,f,c
  3961  002B38                     l3045:
  3962  002B38  AE08               	btfss	___lldiv@divisor+3,7,c
  3963  002B3A  D7F8               	goto	l3043
  3964  002B3C                     l3047:
  3965  002B3C  90D8               	bcf	status,0,c
  3966  002B3E  3609               	rlcf	___lldiv@quotient,f,c
  3967  002B40  360A               	rlcf	___lldiv@quotient+1,f,c
  3968  002B42  360B               	rlcf	___lldiv@quotient+2,f,c
  3969  002B44  360C               	rlcf	___lldiv@quotient+3,f,c
  3970  002B46  5005               	movf	___lldiv@divisor,w,c
  3971  002B48  5C01               	subwf	___lldiv@dividend,w,c
  3972  002B4A  5006               	movf	___lldiv@divisor+1,w,c
  3973  002B4C  5802               	subwfb	___lldiv@dividend+1,w,c
  3974  002B4E  5007               	movf	___lldiv@divisor+2,w,c
  3975  002B50  5803               	subwfb	___lldiv@dividend+2,w,c
  3976  002B52  5008               	movf	___lldiv@divisor+3,w,c
  3977  002B54  5804               	subwfb	___lldiv@dividend+3,w,c
  3978  002B56  A0D8               	btfss	status,0,c
  3979  002B58  D009               	goto	l3055
  3980  002B5A  5005               	movf	___lldiv@divisor,w,c
  3981  002B5C  5E01               	subwf	___lldiv@dividend,f,c
  3982  002B5E  5006               	movf	___lldiv@divisor+1,w,c
  3983  002B60  5A02               	subwfb	___lldiv@dividend+1,f,c
  3984  002B62  5007               	movf	___lldiv@divisor+2,w,c
  3985  002B64  5A03               	subwfb	___lldiv@dividend+2,f,c
  3986  002B66  5008               	movf	___lldiv@divisor+3,w,c
  3987  002B68  5A04               	subwfb	___lldiv@dividend+3,f,c
  3988  002B6A  8009               	bsf	___lldiv@quotient,0,c
  3989  002B6C                     l3055:
  3990  002B6C  90D8               	bcf	status,0,c
  3991  002B6E  3208               	rrcf	___lldiv@divisor+3,f,c
  3992  002B70  3207               	rrcf	___lldiv@divisor+2,f,c
  3993  002B72  3206               	rrcf	___lldiv@divisor+1,f,c
  3994  002B74  3205               	rrcf	___lldiv@divisor,f,c
  3995  002B76  2E0D               	decfsz	___lldiv@counter,f,c
  3996  002B78  D7E1               	goto	l3047
  3997  002B7A                     l667:
  3998  002B7A  C009  F001         	movff	___lldiv@quotient,?___lldiv
  3999  002B7E  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  4000  002B82  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  4001  002B86  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  4002  002B8A  0012               	return		;funcret
  4003  002B8C                     __end_of___lldiv:
  4004                           	opt stack 0
  4005                           tblptru	equ	0xFF8
  4006                           tblptrh	equ	0xFF7
  4007                           tblptrl	equ	0xFF6
  4008                           tablat	equ	0xFF5
  4009                           prodh	equ	0xFF4
  4010                           prodl	equ	0xFF3
  4011                           postinc0	equ	0xFEE
  4012                           wreg	equ	0xFE8
  4013                           indf2	equ	0xFDF
  4014                           postinc2	equ	0xFDE
  4015                           fsr2h	equ	0xFDA
  4016                           fsr2l	equ	0xFD9
  4017                           status	equ	0xFD8
  4018                           
  4019 ;; *************** function ___fltol *****************
  4020 ;; Defined at:
  4021 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\fltol.c"
  4022 ;; Parameters:    Size  Location     Type
  4023 ;;  f1              4   48[COMRAM] unsigned long 
  4024 ;; Auto vars:     Size  Location     Type
  4025 ;;  exp1            1   57[COMRAM] unsigned char 
  4026 ;;  sign1           1   56[COMRAM] unsigned char 
  4027 ;; Return value:  Size  Location     Type
  4028 ;;                  4   48[COMRAM] long 
  4029 ;; Registers used:
  4030 ;;		wreg, status,2, status,0
  4031 ;; Tracked objects:
  4032 ;;		On entry : 0/0
  4033 ;;		On exit  : 0/0
  4034 ;;		Unchanged: 0/0
  4035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4036 ;;      Params:         4       0       0       0       0       0       0       0       0
  4037 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4038 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4039 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4040 ;;Total ram usage:       10 bytes
  4041 ;; Hardware stack levels used:    1
  4042 ;; This function calls:
  4043 ;;		Nothing
  4044 ;; This function is called by:
  4045 ;;		_sprintf
  4046 ;; This function uses a non-reentrant model
  4047 ;;
  4048                           
  4049                           	psect	text11
  4050  002818                     __ptext11:
  4051                           	opt stack 0
  4052  002818                     ___fltol:
  4053                           	opt stack 28
  4054                           
  4055                           ;incstack = 0
  4056  002818  3433               	rlcf	___fltol@f1+2,w,c
  4057  00281A  3434               	rlcf	___fltol@f1+3,w,c
  4058  00281C  6E3A               	movwf	___fltol@exp1,c
  4059  00281E  503A               	movf	___fltol@exp1,w,c
  4060  002820  A4D8               	btfss	status,2,c
  4061  002822  D009               	goto	l2999
  4062  002824  0E00               	movlw	0
  4063  002826  6E31               	movwf	?___fltol,c
  4064  002828  0E00               	movlw	0
  4065  00282A  6E32               	movwf	?___fltol+1,c
  4066  00282C  0E00               	movlw	0
  4067  00282E  6E33               	movwf	?___fltol+2,c
  4068  002830  0E00               	movlw	0
  4069  002832  6E34               	movwf	?___fltol+3,c
  4070  002834  0012               	return	
  4071  002836                     l2999:
  4072  002836  C031  F035         	movff	___fltol@f1,??___fltol
  4073  00283A  C032  F036         	movff	___fltol@f1+1,??___fltol+1
  4074  00283E  C033  F037         	movff	___fltol@f1+2,??___fltol+2
  4075  002842  C034  F038         	movff	___fltol@f1+3,??___fltol+3
  4076  002846  0E20               	movlw	32
  4077  002848  D005               	goto	u3100
  4078  00284A                     u3105:
  4079  00284A  90D8               	bcf	status,0,c
  4080  00284C  3238               	rrcf	??___fltol+3,f,c
  4081  00284E  3237               	rrcf	??___fltol+2,f,c
  4082  002850  3236               	rrcf	??___fltol+1,f,c
  4083  002852  3235               	rrcf	??___fltol,f,c
  4084  002854                     u3100:
  4085  002854  2EE8               	decfsz	wreg,f,c
  4086  002856  D7F9               	goto	u3105
  4087  002858  5035               	movf	??___fltol,w,c
  4088  00285A  6E39               	movwf	___fltol@sign1,c
  4089  00285C  8E33               	bsf	___fltol@f1+2,7,c
  4090  00285E  0EFF               	movlw	255
  4091  002860  1631               	andwf	___fltol@f1,f,c
  4092  002862  0EFF               	movlw	255
  4093  002864  1632               	andwf	___fltol@f1+1,f,c
  4094  002866  0EFF               	movlw	255
  4095  002868  1633               	andwf	___fltol@f1+2,f,c
  4096  00286A  0E00               	movlw	0
  4097  00286C  1634               	andwf	___fltol@f1+3,f,c
  4098  00286E  0E96               	movlw	150
  4099  002870  5E3A               	subwf	___fltol@exp1,f,c
  4100  002872  AE3A               	btfss	___fltol@exp1,7,c
  4101  002874  D016               	goto	l3019
  4102  002876  503A               	movf	___fltol@exp1,w,c
  4103  002878  0A80               	xorlw	128
  4104  00287A  0F97               	addlw	151
  4105  00287C  B0D8               	btfsc	status,0,c
  4106  00287E  D009               	goto	l3015
  4107  002880  0E00               	movlw	0
  4108  002882  6E31               	movwf	?___fltol,c
  4109  002884  0E00               	movlw	0
  4110  002886  6E32               	movwf	?___fltol+1,c
  4111  002888  0E00               	movlw	0
  4112  00288A  6E33               	movwf	?___fltol+2,c
  4113  00288C  0E00               	movlw	0
  4114  00288E  6E34               	movwf	?___fltol+3,c
  4115  002890  0012               	return	
  4116  002892                     l3015:
  4117  002892  90D8               	bcf	status,0,c
  4118  002894  3234               	rrcf	___fltol@f1+3,f,c
  4119  002896  3233               	rrcf	___fltol@f1+2,f,c
  4120  002898  3232               	rrcf	___fltol@f1+1,f,c
  4121  00289A  3231               	rrcf	___fltol@f1,f,c
  4122  00289C  3E3A               	incfsz	___fltol@exp1,f,c
  4123  00289E  D7F9               	goto	l3015
  4124  0028A0  D015               	goto	l3029
  4125  0028A2                     l3019:
  4126  0028A2  0E1F               	movlw	31
  4127  0028A4  643A               	cpfsgt	___fltol@exp1,c
  4128  0028A6  D00F               	goto	l3027
  4129  0028A8  0E00               	movlw	0
  4130  0028AA  6E31               	movwf	?___fltol,c
  4131  0028AC  0E00               	movlw	0
  4132  0028AE  6E32               	movwf	?___fltol+1,c
  4133  0028B0  0E00               	movlw	0
  4134  0028B2  6E33               	movwf	?___fltol+2,c
  4135  0028B4  0E00               	movlw	0
  4136  0028B6  6E34               	movwf	?___fltol+3,c
  4137  0028B8  0012               	return	
  4138  0028BA                     l3025:
  4139  0028BA  90D8               	bcf	status,0,c
  4140  0028BC  3631               	rlcf	___fltol@f1,f,c
  4141  0028BE  3632               	rlcf	___fltol@f1+1,f,c
  4142  0028C0  3633               	rlcf	___fltol@f1+2,f,c
  4143  0028C2  3634               	rlcf	___fltol@f1+3,f,c
  4144  0028C4  063A               	decf	___fltol@exp1,f,c
  4145  0028C6                     l3027:
  4146  0028C6  503A               	movf	___fltol@exp1,w,c
  4147  0028C8  A4D8               	btfss	status,2,c
  4148  0028CA  D7F7               	goto	l3025
  4149  0028CC                     l3029:
  4150  0028CC  5039               	movf	___fltol@sign1,w,c
  4151  0028CE  B4D8               	btfsc	status,2,c
  4152  0028D0  D008               	goto	l3033
  4153  0028D2  1E34               	comf	___fltol@f1+3,f,c
  4154  0028D4  1E33               	comf	___fltol@f1+2,f,c
  4155  0028D6  1E32               	comf	___fltol@f1+1,f,c
  4156  0028D8  6C31               	negf	___fltol@f1,c
  4157  0028DA  0E00               	movlw	0
  4158  0028DC  2232               	addwfc	___fltol@f1+1,f,c
  4159  0028DE  2233               	addwfc	___fltol@f1+2,f,c
  4160  0028E0  2234               	addwfc	___fltol@f1+3,f,c
  4161  0028E2                     l3033:
  4162  0028E2  C031  F031         	movff	___fltol@f1,?___fltol
  4163  0028E6  C032  F032         	movff	___fltol@f1+1,?___fltol+1
  4164  0028EA  C033  F033         	movff	___fltol@f1+2,?___fltol+2
  4165  0028EE  C034  F034         	movff	___fltol@f1+3,?___fltol+3
  4166  0028F2  0012               	return	
  4167  0028F4                     __end_of___fltol:
  4168                           	opt stack 0
  4169                           tblptru	equ	0xFF8
  4170                           tblptrh	equ	0xFF7
  4171                           tblptrl	equ	0xFF6
  4172                           tablat	equ	0xFF5
  4173                           prodh	equ	0xFF4
  4174                           prodl	equ	0xFF3
  4175                           postinc0	equ	0xFEE
  4176                           wreg	equ	0xFE8
  4177                           indf2	equ	0xFDF
  4178                           postinc2	equ	0xFDE
  4179                           fsr2h	equ	0xFDA
  4180                           fsr2l	equ	0xFD9
  4181                           status	equ	0xFD8
  4182                           
  4183 ;; *************** function ___flsub *****************
  4184 ;; Defined at:
  4185 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\sprcadd.c"
  4186 ;; Parameters:    Size  Location     Type
  4187 ;;  b               4   72[COMRAM] long 
  4188 ;;  a               4   76[COMRAM] long 
  4189 ;; Auto vars:     Size  Location     Type
  4190 ;;		None
  4191 ;; Return value:  Size  Location     Type
  4192 ;;                  4   72[COMRAM] long 
  4193 ;; Registers used:
  4194 ;;		wreg, status,2, status,0, cstack
  4195 ;; Tracked objects:
  4196 ;;		On entry : 0/0
  4197 ;;		On exit  : 0/0
  4198 ;;		Unchanged: 0/0
  4199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4200 ;;      Params:         8       0       0       0       0       0       0       0       0
  4201 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4202 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4203 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4204 ;;Total ram usage:        8 bytes
  4205 ;; Hardware stack levels used:    1
  4206 ;; Hardware stack levels required when called:    1
  4207 ;; This function calls:
  4208 ;;		___fladd
  4209 ;; This function is called by:
  4210 ;;		_sprintf
  4211 ;; This function uses a non-reentrant model
  4212 ;;
  4213                           
  4214                           	psect	text12
  4215  002DC2                     __ptext12:
  4216                           	opt stack 0
  4217  002DC2                     ___flsub:
  4218                           	opt stack 27
  4219                           
  4220                           ;incstack = 0
  4221  002DC2  0E00               	movlw	0
  4222  002DC4  1A4D               	xorwf	___flsub@a,f,c
  4223  002DC6  0E00               	movlw	0
  4224  002DC8  1A4E               	xorwf	___flsub@a+1,f,c
  4225  002DCA  0E00               	movlw	0
  4226  002DCC  1A4F               	xorwf	___flsub@a+2,f,c
  4227  002DCE  0E80               	movlw	128
  4228  002DD0  1A50               	xorwf	___flsub@a+3,f,c
  4229  002DD2  C049  F035         	movff	___flsub@b,___fladd@b
  4230  002DD6  C04A  F036         	movff	___flsub@b+1,___fladd@b+1
  4231  002DDA  C04B  F037         	movff	___flsub@b+2,___fladd@b+2
  4232  002DDE  C04C  F038         	movff	___flsub@b+3,___fladd@b+3
  4233  002DE2  C04D  F039         	movff	___flsub@a,___fladd@a
  4234  002DE6  C04E  F03A         	movff	___flsub@a+1,___fladd@a+1
  4235  002DEA  C04F  F03B         	movff	___flsub@a+2,___fladd@a+2
  4236  002DEE  C050  F03C         	movff	___flsub@a+3,___fladd@a+3
  4237  002DF2  EC26  F00C         	call	___fladd	;wreg free
  4238  002DF6  C035  F049         	movff	?___fladd,?___flsub
  4239  002DFA  C036  F04A         	movff	?___fladd+1,?___flsub+1
  4240  002DFE  C037  F04B         	movff	?___fladd+2,?___flsub+2
  4241  002E02  C038  F04C         	movff	?___fladd+3,?___flsub+3
  4242  002E06  0012               	return	
  4243  002E08                     __end_of___flsub:
  4244                           	opt stack 0
  4245                           tblptru	equ	0xFF8
  4246                           tblptrh	equ	0xFF7
  4247                           tblptrl	equ	0xFF6
  4248                           tablat	equ	0xFF5
  4249                           prodh	equ	0xFF4
  4250                           prodl	equ	0xFF3
  4251                           postinc0	equ	0xFEE
  4252                           wreg	equ	0xFE8
  4253                           indf2	equ	0xFDF
  4254                           postinc2	equ	0xFDE
  4255                           fsr2h	equ	0xFDA
  4256                           fsr2l	equ	0xFD9
  4257                           status	equ	0xFD8
  4258                           
  4259 ;; *************** function ___fladd *****************
  4260 ;; Defined at:
  4261 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\sprcadd.c"
  4262 ;; Parameters:    Size  Location     Type
  4263 ;;  b               4   52[COMRAM] long 
  4264 ;;  a               4   56[COMRAM] long 
  4265 ;; Auto vars:     Size  Location     Type
  4266 ;;  grs             1   71[COMRAM] unsigned char 
  4267 ;;  bexp            1   70[COMRAM] unsigned char 
  4268 ;;  aexp            1   69[COMRAM] unsigned char 
  4269 ;;  signs           1   68[COMRAM] unsigned char 
  4270 ;; Return value:  Size  Location     Type
  4271 ;;                  4   52[COMRAM] unsigned char 
  4272 ;; Registers used:
  4273 ;;		wreg, status,2, status,0
  4274 ;; Tracked objects:
  4275 ;;		On entry : 0/0
  4276 ;;		On exit  : 0/0
  4277 ;;		Unchanged: 0/0
  4278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4279 ;;      Params:         8       0       0       0       0       0       0       0       0
  4280 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4281 ;;      Temps:          8       0       0       0       0       0       0       0       0
  4282 ;;      Totals:        20       0       0       0       0       0       0       0       0
  4283 ;;Total ram usage:       20 bytes
  4284 ;; Hardware stack levels used:    1
  4285 ;; This function calls:
  4286 ;;		Nothing
  4287 ;; This function is called by:
  4288 ;;		_sprintf
  4289 ;;		___flsub
  4290 ;; This function uses a non-reentrant model
  4291 ;;
  4292                           
  4293                           	psect	text13
  4294  00184C                     __ptext13:
  4295                           	opt stack 0
  4296  00184C                     ___fladd:
  4297                           	opt stack 27
  4298                           
  4299                           ;incstack = 0
  4300  00184C  5038               	movf	___fladd@b+3,w,c
  4301  00184E  0B80               	andlw	128
  4302  001850  6E45               	movwf	___fladd@signs,c
  4303  001852  5038               	movf	___fladd@b+3,w,c
  4304  001854  2438               	addwf	___fladd@b+3,w,c
  4305  001856  6E47               	movwf	___fladd@bexp,c
  4306  001858  BE37               	btfsc	___fladd@b+2,7,c
  4307  00185A  8047               	bsf	___fladd@bexp,0,c
  4308  00185C  5047               	movf	___fladd@bexp,w,c
  4309  00185E  B4D8               	btfsc	status,2,c
  4310  001860  D00D               	goto	l2349
  4311  001862  2847               	incf	___fladd@bexp,w,c
  4312  001864  A4D8               	btfss	status,2,c
  4313  001866  D008               	goto	l2345
  4314  001868  0E00               	movlw	0
  4315  00186A  6E35               	movwf	___fladd@b,c
  4316  00186C  0E00               	movlw	0
  4317  00186E  6E36               	movwf	___fladd@b+1,c
  4318  001870  0E00               	movlw	0
  4319  001872  6E37               	movwf	___fladd@b+2,c
  4320  001874  0E00               	movlw	0
  4321  001876  6E38               	movwf	___fladd@b+3,c
  4322  001878                     l2345:
  4323  001878  8E37               	bsf	___fladd@b+2,7,c
  4324  00187A  D006               	goto	L6
  4325  00187C                     l2349:
  4326  00187C  0E00               	movlw	0
  4327  00187E  6E35               	movwf	___fladd@b,c
  4328  001880  0E00               	movlw	0
  4329  001882  6E36               	movwf	___fladd@b+1,c
  4330  001884  0E00               	movlw	0
  4331  001886  6E37               	movwf	___fladd@b+2,c
  4332  001888                     L6:
  4333  001888  0E00               	movlw	0
  4334  00188A  6E38               	movwf	___fladd@b+3,c
  4335  00188C  503C               	movf	___fladd@a+3,w,c
  4336  00188E  0B80               	andlw	128
  4337  001890  6E46               	movwf	___fladd@aexp,c
  4338  001892  5045               	movf	___fladd@signs,w,c
  4339  001894  1846               	xorwf	___fladd@aexp,w,c
  4340  001896  A4D8               	btfss	status,2,c
  4341  001898  8C45               	bsf	___fladd@signs,6,c
  4342  00189A  503C               	movf	___fladd@a+3,w,c
  4343  00189C  243C               	addwf	___fladd@a+3,w,c
  4344  00189E  6E46               	movwf	___fladd@aexp,c
  4345  0018A0  BE3B               	btfsc	___fladd@a+2,7,c
  4346  0018A2  8046               	bsf	___fladd@aexp,0,c
  4347  0018A4  5046               	movf	___fladd@aexp,w,c
  4348  0018A6  B4D8               	btfsc	status,2,c
  4349  0018A8  D00D               	goto	l2373
  4350  0018AA  2846               	incf	___fladd@aexp,w,c
  4351  0018AC  A4D8               	btfss	status,2,c
  4352  0018AE  D008               	goto	l2369
  4353  0018B0  0E00               	movlw	0
  4354  0018B2  6E39               	movwf	___fladd@a,c
  4355  0018B4  0E00               	movlw	0
  4356  0018B6  6E3A               	movwf	___fladd@a+1,c
  4357  0018B8  0E00               	movlw	0
  4358  0018BA  6E3B               	movwf	___fladd@a+2,c
  4359  0018BC  0E00               	movlw	0
  4360  0018BE  6E3C               	movwf	___fladd@a+3,c
  4361  0018C0                     l2369:
  4362  0018C0  8E3B               	bsf	___fladd@a+2,7,c
  4363  0018C2  D006               	goto	L7
  4364  0018C4                     l2373:
  4365  0018C4  0E00               	movlw	0
  4366  0018C6  6E39               	movwf	___fladd@a,c
  4367  0018C8  0E00               	movlw	0
  4368  0018CA  6E3A               	movwf	___fladd@a+1,c
  4369  0018CC  0E00               	movlw	0
  4370  0018CE  6E3B               	movwf	___fladd@a+2,c
  4371  0018D0                     L7:
  4372  0018D0  0E00               	movlw	0
  4373  0018D2  6E3C               	movwf	___fladd@a+3,c
  4374  0018D4  5047               	movf	___fladd@bexp,w,c
  4375  0018D6  5C46               	subwf	___fladd@aexp,w,c
  4376  0018D8  B0D8               	btfsc	status,0,c
  4377  0018DA  D022               	goto	l2411
  4378  0018DC  AC45               	btfss	___fladd@signs,6,c
  4379  0018DE  D002               	goto	l2381
  4380  0018E0  0E80               	movlw	128
  4381  0018E2  1A45               	xorwf	___fladd@signs,f,c
  4382  0018E4                     l2381:
  4383  0018E4  C047  F048         	movff	___fladd@bexp,___fladd@grs
  4384  0018E8  C046  F047         	movff	___fladd@aexp,___fladd@bexp
  4385  0018EC  C048  F046         	movff	___fladd@grs,___fladd@aexp
  4386  0018F0  C035  F048         	movff	___fladd@b,___fladd@grs
  4387  0018F4  C039  F035         	movff	___fladd@a,___fladd@b
  4388  0018F8  C048  F039         	movff	___fladd@grs,___fladd@a
  4389  0018FC  C036  F048         	movff	___fladd@b+1,___fladd@grs
  4390  001900  C03A  F036         	movff	___fladd@a+1,___fladd@b+1
  4391  001904  C048  F03A         	movff	___fladd@grs,___fladd@a+1
  4392  001908  C037  F048         	movff	___fladd@b+2,___fladd@grs
  4393  00190C  C03B  F037         	movff	___fladd@a+2,___fladd@b+2
  4394  001910  C048  F03B         	movff	___fladd@grs,___fladd@a+2
  4395  001914  C038  F048         	movff	___fladd@b+3,___fladd@grs
  4396  001918  C03C  F038         	movff	___fladd@a+3,___fladd@b+3
  4397  00191C  C048  F03C         	movff	___fladd@grs,___fladd@a+3
  4398  001920                     l2411:
  4399  001920  0E00               	movlw	0
  4400  001922  6E48               	movwf	___fladd@grs,c
  4401  001924  5047               	movf	___fladd@bexp,w,c
  4402  001926  6E3D               	movwf	??___fladd& (0+255),c
  4403  001928  6A3E               	clrf	(??___fladd+1)& (0+255),c
  4404  00192A  1E3D               	comf	??___fladd,f,c
  4405  00192C  1E3E               	comf	??___fladd+1,f,c
  4406  00192E  4A3D               	infsnz	??___fladd,f,c
  4407  001930  2A3E               	incf	??___fladd+1,f,c
  4408  001932  5046               	movf	___fladd@aexp,w,c
  4409  001934  6E3F               	movwf	(??___fladd+2)& (0+255),c
  4410  001936  6A40               	clrf	(??___fladd+3)& (0+255),c
  4411  001938  503D               	movf	??___fladd,w,c
  4412  00193A  263F               	addwf	??___fladd+2,f,c
  4413  00193C  503E               	movf	??___fladd+1,w,c
  4414  00193E  2240               	addwfc	??___fladd+3,f,c
  4415  001940  BE40               	btfsc	??___fladd+3,7,c
  4416  001942  D02C               	goto	l762
  4417  001944  5040               	movf	??___fladd+3,w,c
  4418  001946  E104               	bnz	u2170
  4419  001948  0E1A               	movlw	26
  4420  00194A  5C3F               	subwf	??___fladd+2,w,c
  4421  00194C  A0D8               	btfss	status,0,c
  4422  00194E  D026               	goto	l762
  4423  001950                     u2170:
  4424  001950  5035               	movf	___fladd@b,w,c
  4425  001952  1036               	iorwf	___fladd@b+1,w,c
  4426  001954  1037               	iorwf	___fladd@b+2,w,c
  4427  001956  1038               	iorwf	___fladd@b+3,w,c
  4428  001958  B4D8               	btfsc	status,2,c
  4429  00195A  D002               	goto	u2180
  4430  00195C  0E01               	movlw	1
  4431  00195E  D001               	goto	u2190
  4432  001960                     u2180:
  4433  001960  0E00               	movlw	0
  4434  001962                     u2190:
  4435  001962  6E48               	movwf	___fladd@grs,c
  4436  001964  0E00               	movlw	0
  4437  001966  6E35               	movwf	___fladd@b,c
  4438  001968  0E00               	movlw	0
  4439  00196A  6E36               	movwf	___fladd@b+1,c
  4440  00196C  0E00               	movlw	0
  4441  00196E  6E37               	movwf	___fladd@b+2,c
  4442  001970  0E00               	movlw	0
  4443  001972  6E38               	movwf	___fladd@b+3,c
  4444  001974  C046  F047         	movff	___fladd@aexp,___fladd@bexp
  4445  001978  D015               	goto	l761
  4446  00197A                     l763:
  4447  00197A  A048               	btfss	___fladd@grs,0,c
  4448  00197C  D005               	goto	l2423
  4449  00197E  90D8               	bcf	status,0,c
  4450  001980  3048               	rrcf	___fladd@grs,w,c
  4451  001982  0901               	iorlw	1
  4452  001984  6E48               	movwf	___fladd@grs,c
  4453  001986  D002               	goto	l2425
  4454  001988                     l2423:
  4455  001988  90D8               	bcf	status,0,c
  4456  00198A  3248               	rrcf	___fladd@grs,f,c
  4457  00198C                     l2425:
  4458  00198C  B035               	btfsc	___fladd@b,0,c
  4459  00198E  8E48               	bsf	___fladd@grs,7,c
  4460  001990  3438               	rlcf	___fladd@b+3,w,c
  4461  001992  3238               	rrcf	___fladd@b+3,f,c
  4462  001994  3237               	rrcf	___fladd@b+2,f,c
  4463  001996  3236               	rrcf	___fladd@b+1,f,c
  4464  001998  3235               	rrcf	___fladd@b,f,c
  4465  00199A  2A47               	incf	___fladd@bexp,f,c
  4466  00199C                     l762:
  4467  00199C  5046               	movf	___fladd@aexp,w,c
  4468  00199E  5C47               	subwf	___fladd@bexp,w,c
  4469  0019A0  A0D8               	btfss	status,0,c
  4470  0019A2  D7EB               	goto	l763
  4471  0019A4                     l761:
  4472  0019A4  BC45               	btfsc	___fladd@signs,6,c
  4473  0019A6  D029               	goto	l2457
  4474  0019A8  5047               	movf	___fladd@bexp,w,c
  4475  0019AA  A4D8               	btfss	status,2,c
  4476  0019AC  D009               	goto	l2439
  4477  0019AE  0E00               	movlw	0
  4478  0019B0  6E35               	movwf	?___fladd,c
  4479  0019B2  0E00               	movlw	0
  4480  0019B4  6E36               	movwf	?___fladd+1,c
  4481  0019B6  0E00               	movlw	0
  4482  0019B8  6E37               	movwf	?___fladd+2,c
  4483  0019BA  0E00               	movlw	0
  4484  0019BC  6E38               	movwf	?___fladd+3,c
  4485  0019BE  0012               	return	
  4486  0019C0                     l2439:
  4487  0019C0  5039               	movf	___fladd@a,w,c
  4488  0019C2  2635               	addwf	___fladd@b,f,c
  4489  0019C4  503A               	movf	___fladd@a+1,w,c
  4490  0019C6  2236               	addwfc	___fladd@b+1,f,c
  4491  0019C8  503B               	movf	___fladd@a+2,w,c
  4492  0019CA  2237               	addwfc	___fladd@b+2,f,c
  4493  0019CC  503C               	movf	___fladd@a+3,w,c
  4494  0019CE  2238               	addwfc	___fladd@b+3,f,c
  4495  0019D0  A038               	btfss	___fladd@b+3,0,c
  4496  0019D2  D083               	goto	l2493
  4497  0019D4  A048               	btfss	___fladd@grs,0,c
  4498  0019D6  D006               	goto	l2447
  4499  0019D8  90D8               	bcf	status,0,c
  4500  0019DA  3248               	rrcf	___fladd@grs,f,c
  4501  0019DC  5048               	movf	___fladd@grs,w,c
  4502  0019DE  0901               	iorlw	1
  4503  0019E0  6E48               	movwf	___fladd@grs,c
  4504  0019E2  D002               	goto	l2449
  4505  0019E4                     l2447:
  4506  0019E4  90D8               	bcf	status,0,c
  4507  0019E6  3248               	rrcf	___fladd@grs,f,c
  4508  0019E8                     l2449:
  4509  0019E8  B035               	btfsc	___fladd@b,0,c
  4510  0019EA  8E48               	bsf	___fladd@grs,7,c
  4511  0019EC  3438               	rlcf	___fladd@b+3,w,c
  4512  0019EE  3238               	rrcf	___fladd@b+3,f,c
  4513  0019F0  3237               	rrcf	___fladd@b+2,f,c
  4514  0019F2  3236               	rrcf	___fladd@b+1,f,c
  4515  0019F4  3235               	rrcf	___fladd@b,f,c
  4516  0019F6  2A47               	incf	___fladd@bexp,f,c
  4517  0019F8  D070               	goto	l2493
  4518  0019FA                     l2457:
  4519  0019FA  5039               	movf	___fladd@a,w,c
  4520  0019FC  5C35               	subwf	___fladd@b,w,c
  4521  0019FE  503A               	movf	___fladd@a+1,w,c
  4522  001A00  5836               	subwfb	___fladd@b+1,w,c
  4523  001A02  503B               	movf	___fladd@a+2,w,c
  4524  001A04  5837               	subwfb	___fladd@b+2,w,c
  4525  001A06  5038               	movf	___fladd@b+3,w,c
  4526  001A08  0A80               	xorlw	128
  4527  001A0A  6E3D               	movwf	??___fladd& (0+255),c
  4528  001A0C  503C               	movf	___fladd@a+3,w,c
  4529  001A0E  0A80               	xorlw	128
  4530  001A10  583D               	subwfb	??___fladd& (0+255),w,c
  4531  001A12  B0D8               	btfsc	status,0,c
  4532  001A14  D036               	goto	l2467
  4533  001A16  C035  F03D         	movff	___fladd@b,??___fladd
  4534  001A1A  C036  F03E         	movff	___fladd@b+1,??___fladd+1
  4535  001A1E  C037  F03F         	movff	___fladd@b+2,??___fladd+2
  4536  001A22  C038  F040         	movff	___fladd@b+3,??___fladd+3
  4537  001A26  1E3D               	comf	??___fladd,f,c
  4538  001A28  1E3E               	comf	??___fladd+1,f,c
  4539  001A2A  1E3F               	comf	??___fladd+2,f,c
  4540  001A2C  1E40               	comf	??___fladd+3,f,c
  4541  001A2E  2A3D               	incf	??___fladd,f,c
  4542  001A30  0E00               	movlw	0
  4543  001A32  223E               	addwfc	??___fladd+1,f,c
  4544  001A34  223F               	addwfc	??___fladd+2,f,c
  4545  001A36  2240               	addwfc	??___fladd+3,f,c
  4546  001A38  5039               	movf	___fladd@a,w,c
  4547  001A3A  243D               	addwf	??___fladd,w,c
  4548  001A3C  6E41               	movwf	(??___fladd+4)& (0+255),c
  4549  001A3E  503A               	movf	___fladd@a+1,w,c
  4550  001A40  203E               	addwfc	??___fladd+1,w,c
  4551  001A42  6E42               	movwf	(??___fladd+5)& (0+255),c
  4552  001A44  503B               	movf	___fladd@a+2,w,c
  4553  001A46  203F               	addwfc	??___fladd+2,w,c
  4554  001A48  6E43               	movwf	(??___fladd+6)& (0+255),c
  4555  001A4A  503C               	movf	___fladd@a+3,w,c
  4556  001A4C  2040               	addwfc	??___fladd+3,w,c
  4557  001A4E  6E44               	movwf	(??___fladd+7)& (0+255),c
  4558  001A50  0EFF               	movlw	255
  4559  001A52  2441               	addwf	??___fladd+4,w,c
  4560  001A54  6E35               	movwf	___fladd@b,c
  4561  001A56  0EFF               	movlw	255
  4562  001A58  2042               	addwfc	??___fladd+5,w,c
  4563  001A5A  6E36               	movwf	___fladd@b+1,c
  4564  001A5C  0EFF               	movlw	255
  4565  001A5E  2043               	addwfc	??___fladd+6,w,c
  4566  001A60  6E37               	movwf	___fladd@b+2,c
  4567  001A62  0EFF               	movlw	255
  4568  001A64  2044               	addwfc	??___fladd+7,w,c
  4569  001A66  6E38               	movwf	___fladd@b+3,c
  4570  001A68  0E80               	movlw	128
  4571  001A6A  1A45               	xorwf	___fladd@signs,f,c
  4572  001A6C  6C48               	negf	___fladd@grs,c
  4573  001A6E  5048               	movf	___fladd@grs,w,c
  4574  001A70  A4D8               	btfss	status,2,c
  4575  001A72  D00F               	goto	l778
  4576  001A74  0E01               	movlw	1
  4577  001A76  2635               	addwf	___fladd@b,f,c
  4578  001A78  0E00               	movlw	0
  4579  001A7A  2236               	addwfc	___fladd@b+1,f,c
  4580  001A7C  2237               	addwfc	___fladd@b+2,f,c
  4581  001A7E  2238               	addwfc	___fladd@b+3,f,c
  4582  001A80  D008               	goto	l778
  4583  001A82                     l2467:
  4584  001A82  5039               	movf	___fladd@a,w,c
  4585  001A84  5E35               	subwf	___fladd@b,f,c
  4586  001A86  503A               	movf	___fladd@a+1,w,c
  4587  001A88  5A36               	subwfb	___fladd@b+1,f,c
  4588  001A8A  503B               	movf	___fladd@a+2,w,c
  4589  001A8C  5A37               	subwfb	___fladd@b+2,f,c
  4590  001A8E  503C               	movf	___fladd@a+3,w,c
  4591  001A90  5A38               	subwfb	___fladd@b+3,f,c
  4592  001A92                     l778:
  4593  001A92  5035               	movf	___fladd@b,w,c
  4594  001A94  1036               	iorwf	___fladd@b+1,w,c
  4595  001A96  1037               	iorwf	___fladd@b+2,w,c
  4596  001A98  1038               	iorwf	___fladd@b+3,w,c
  4597  001A9A  A4D8               	btfss	status,2,c
  4598  001A9C  D01C               	goto	l2491
  4599  001A9E  5048               	movf	___fladd@grs,w,c
  4600  001AA0  A4D8               	btfss	status,2,c
  4601  001AA2  D019               	goto	l2491
  4602  001AA4  0E00               	movlw	0
  4603  001AA6  6E35               	movwf	?___fladd,c
  4604  001AA8  0E00               	movlw	0
  4605  001AAA  6E36               	movwf	?___fladd+1,c
  4606  001AAC  0E00               	movlw	0
  4607  001AAE  6E37               	movwf	?___fladd+2,c
  4608  001AB0  0E00               	movlw	0
  4609  001AB2  6E38               	movwf	?___fladd+3,c
  4610  001AB4  0012               	return	
  4611  001AB6                     l2475:
  4612  001AB6  90D8               	bcf	status,0,c
  4613  001AB8  3635               	rlcf	___fladd@b,f,c
  4614  001ABA  3636               	rlcf	___fladd@b+1,f,c
  4615  001ABC  3637               	rlcf	___fladd@b+2,f,c
  4616  001ABE  3638               	rlcf	___fladd@b+3,f,c
  4617  001AC0  BE48               	btfsc	___fladd@grs,7,c
  4618  001AC2  8035               	bsf	___fladd@b,0,c
  4619  001AC4  A048               	btfss	___fladd@grs,0,c
  4620  001AC6  D002               	goto	l2485
  4621  001AC8  80D8               	bsf	status,0,c
  4622  001ACA  D001               	goto	L8
  4623  001ACC                     l2485:
  4624  001ACC  90D8               	bcf	status,0,c
  4625  001ACE                     L8:
  4626  001ACE  3648               	rlcf	___fladd@grs,f,c
  4627  001AD0  5047               	movf	___fladd@bexp,w,c
  4628  001AD2  A4D8               	btfss	status,2,c
  4629  001AD4  0647               	decf	___fladd@bexp,f,c
  4630  001AD6                     l2491:
  4631  001AD6  AE37               	btfss	___fladd@b+2,7,c
  4632  001AD8  D7EE               	goto	l2475
  4633  001ADA                     l2493:
  4634  001ADA  0E00               	movlw	0
  4635  001ADC  6E46               	movwf	___fladd@aexp,c
  4636  001ADE  AE48               	btfss	___fladd@grs,7,c
  4637  001AE0  D00A               	goto	l787
  4638  001AE2  C048  F03D         	movff	___fladd@grs,??___fladd
  4639  001AE6  0E7F               	movlw	127
  4640  001AE8  163D               	andwf	??___fladd,f,c
  4641  001AEA  A4D8               	btfss	status,2,c
  4642  001AEC  D002               	goto	l2501
  4643  001AEE  A035               	btfss	___fladd@b,0,c
  4644  001AF0  D002               	goto	l787
  4645  001AF2                     l2501:
  4646  001AF2  0E01               	movlw	1
  4647  001AF4  6E46               	movwf	___fladd@aexp,c
  4648  001AF6                     l787:
  4649  001AF6  5046               	movf	___fladd@aexp,w,c
  4650  001AF8  B4D8               	btfsc	status,2,c
  4651  001AFA  D020               	goto	l2511
  4652  001AFC  0E01               	movlw	1
  4653  001AFE  2635               	addwf	___fladd@b,f,c
  4654  001B00  0E00               	movlw	0
  4655  001B02  2236               	addwfc	___fladd@b+1,f,c
  4656  001B04  2237               	addwfc	___fladd@b+2,f,c
  4657  001B06  2238               	addwfc	___fladd@b+3,f,c
  4658  001B08  A038               	btfss	___fladd@b+3,0,c
  4659  001B0A  D018               	goto	l2511
  4660  001B0C  C035  F03D         	movff	___fladd@b,??___fladd
  4661  001B10  C036  F03E         	movff	___fladd@b+1,??___fladd+1
  4662  001B14  C037  F03F         	movff	___fladd@b+2,??___fladd+2
  4663  001B18  C038  F040         	movff	___fladd@b+3,??___fladd+3
  4664  001B1C  3440               	rlcf	??___fladd+3,w,c
  4665  001B1E  3240               	rrcf	??___fladd+3,f,c
  4666  001B20  323F               	rrcf	??___fladd+2,f,c
  4667  001B22  323E               	rrcf	??___fladd+1,f,c
  4668  001B24  323D               	rrcf	??___fladd,f,c
  4669  001B26  C03D  F035         	movff	??___fladd,___fladd@b
  4670  001B2A  C03E  F036         	movff	??___fladd+1,___fladd@b+1
  4671  001B2E  C03F  F037         	movff	??___fladd+2,___fladd@b+2
  4672  001B32  C040  F038         	movff	??___fladd+3,___fladd@b+3
  4673  001B36  2847               	incf	___fladd@bexp,w,c
  4674  001B38  A4D8               	btfss	status,2,c
  4675  001B3A  2A47               	incf	___fladd@bexp,f,c
  4676  001B3C                     l2511:
  4677  001B3C  2847               	incf	___fladd@bexp,w,c
  4678  001B3E  B4D8               	btfsc	status,2,c
  4679  001B40  D003               	goto	l2515
  4680  001B42  5047               	movf	___fladd@bexp,w,c
  4681  001B44  A4D8               	btfss	status,2,c
  4682  001B46  D00D               	goto	l2519
  4683  001B48                     l2515:
  4684  001B48  0E00               	movlw	0
  4685  001B4A  6E35               	movwf	___fladd@b,c
  4686  001B4C  0E00               	movlw	0
  4687  001B4E  6E36               	movwf	___fladd@b+1,c
  4688  001B50  0E00               	movlw	0
  4689  001B52  6E37               	movwf	___fladd@b+2,c
  4690  001B54  0E00               	movlw	0
  4691  001B56  6E38               	movwf	___fladd@b+3,c
  4692  001B58  5047               	movf	___fladd@bexp,w,c
  4693  001B5A  A4D8               	btfss	status,2,c
  4694  001B5C  D002               	goto	l2519
  4695  001B5E  0E00               	movlw	0
  4696  001B60  6E45               	movwf	___fladd@signs,c
  4697  001B62                     l2519:
  4698  001B62  A047               	btfss	___fladd@bexp,0,c
  4699  001B64  D002               	goto	l2523
  4700  001B66  8E37               	bsf	___fladd@b+2,7,c
  4701  001B68  D001               	goto	l2525
  4702  001B6A                     l2523:
  4703  001B6A  9E37               	bcf	___fladd@b+2,7,c
  4704  001B6C                     l2525:
  4705  001B6C  90D8               	bcf	status,0,c
  4706  001B6E  3047               	rrcf	___fladd@bexp,w,c
  4707  001B70  6E38               	movwf	___fladd@b+3,c
  4708  001B72  BE45               	btfsc	___fladd@signs,7,c
  4709  001B74  8E38               	bsf	___fladd@b+3,7,c
  4710  001B76  C035  F035         	movff	___fladd@b,?___fladd
  4711  001B7A  C036  F036         	movff	___fladd@b+1,?___fladd+1
  4712  001B7E  C037  F037         	movff	___fladd@b+2,?___fladd+2
  4713  001B82  C038  F038         	movff	___fladd@b+3,?___fladd+3
  4714  001B86  0012               	return	
  4715  001B88                     __end_of___fladd:
  4716                           	opt stack 0
  4717                           tblptru	equ	0xFF8
  4718                           tblptrh	equ	0xFF7
  4719                           tblptrl	equ	0xFF6
  4720                           tablat	equ	0xFF5
  4721                           prodh	equ	0xFF4
  4722                           prodl	equ	0xFF3
  4723                           postinc0	equ	0xFEE
  4724                           wreg	equ	0xFE8
  4725                           indf2	equ	0xFDF
  4726                           postinc2	equ	0xFDE
  4727                           fsr2h	equ	0xFDA
  4728                           fsr2l	equ	0xFD9
  4729                           status	equ	0xFD8
  4730                           
  4731 ;; *************** function ___flneg *****************
  4732 ;; Defined at:
  4733 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\flneg.c"
  4734 ;; Parameters:    Size  Location     Type
  4735 ;;  f1              4    0[COMRAM] unsigned char 
  4736 ;; Auto vars:     Size  Location     Type
  4737 ;;		None
  4738 ;; Return value:  Size  Location     Type
  4739 ;;                  4    0[COMRAM] unsigned char 
  4740 ;; Registers used:
  4741 ;;		wreg, status,2, status,0
  4742 ;; Tracked objects:
  4743 ;;		On entry : 0/0
  4744 ;;		On exit  : 0/0
  4745 ;;		Unchanged: 0/0
  4746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4747 ;;      Params:         4       0       0       0       0       0       0       0       0
  4748 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4749 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4750 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4751 ;;Total ram usage:        4 bytes
  4752 ;; Hardware stack levels used:    1
  4753 ;; This function calls:
  4754 ;;		Nothing
  4755 ;; This function is called by:
  4756 ;;		_sprintf
  4757 ;; This function uses a non-reentrant model
  4758 ;;
  4759                           
  4760                           	psect	text14
  4761  002E6A                     __ptext14:
  4762                           	opt stack 0
  4763  002E6A                     ___flneg:
  4764                           	opt stack 28
  4765                           
  4766                           ;incstack = 0
  4767  002E6A  5001               	movf	___flneg@f1,w,c
  4768  002E6C  1002               	iorwf	___flneg@f1+1,w,c
  4769  002E6E  1003               	iorwf	___flneg@f1+2,w,c
  4770  002E70  1004               	iorwf	___flneg@f1+3,w,c
  4771  002E72  B4D8               	btfsc	status,2,c
  4772  002E74  D008               	goto	l2989
  4773  002E76  0E00               	movlw	0
  4774  002E78  1A01               	xorwf	___flneg@f1,f,c
  4775  002E7A  0E00               	movlw	0
  4776  002E7C  1A02               	xorwf	___flneg@f1+1,f,c
  4777  002E7E  0E00               	movlw	0
  4778  002E80  1A03               	xorwf	___flneg@f1+2,f,c
  4779  002E82  0E80               	movlw	128
  4780  002E84  1A04               	xorwf	___flneg@f1+3,f,c
  4781  002E86                     l2989:
  4782  002E86  C001  F001         	movff	___flneg@f1,?___flneg
  4783  002E8A  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  4784  002E8E  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  4785  002E92  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  4786  002E96  0012               	return	
  4787  002E98                     __end_of___flneg:
  4788                           	opt stack 0
  4789                           tblptru	equ	0xFF8
  4790                           tblptrh	equ	0xFF7
  4791                           tblptrl	equ	0xFF6
  4792                           tablat	equ	0xFF5
  4793                           prodh	equ	0xFF4
  4794                           prodl	equ	0xFF3
  4795                           postinc0	equ	0xFEE
  4796                           wreg	equ	0xFE8
  4797                           indf2	equ	0xFDF
  4798                           postinc2	equ	0xFDE
  4799                           fsr2h	equ	0xFDA
  4800                           fsr2l	equ	0xFD9
  4801                           status	equ	0xFD8
  4802                           
  4803 ;; *************** function ___flge *****************
  4804 ;; Defined at:
  4805 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\flge.c"
  4806 ;; Parameters:    Size  Location     Type
  4807 ;;  ff1             4    0[COMRAM] unsigned char 
  4808 ;;  ff2             4    4[COMRAM] unsigned char 
  4809 ;; Auto vars:     Size  Location     Type
  4810 ;;		None
  4811 ;; Return value:  Size  Location     Type
  4812 ;;		None               void
  4813 ;; Registers used:
  4814 ;;		wreg, status,2, status,0
  4815 ;; Tracked objects:
  4816 ;;		On entry : 0/0
  4817 ;;		On exit  : 0/0
  4818 ;;		Unchanged: 0/0
  4819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4820 ;;      Params:         8       0       0       0       0       0       0       0       0
  4821 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4822 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4823 ;;      Totals:        12       0       0       0       0       0       0       0       0
  4824 ;;Total ram usage:       12 bytes
  4825 ;; Hardware stack levels used:    1
  4826 ;; This function calls:
  4827 ;;		Nothing
  4828 ;; This function is called by:
  4829 ;;		_ricarica
  4830 ;;		_sprintf
  4831 ;; This function uses a non-reentrant model
  4832 ;;
  4833                           
  4834                           	psect	text15
  4835  0025DE                     __ptext15:
  4836                           	opt stack 0
  4837  0025DE                     ___flge:
  4838                           	opt stack 28
  4839                           
  4840                           ;incstack = 0
  4841  0025DE  0E00               	movlw	0
  4842  0025E0  1401               	andwf	___flge@ff1,w,c
  4843  0025E2  6E09               	movwf	??___flge& (0+255),c
  4844  0025E4  0E00               	movlw	0
  4845  0025E6  1402               	andwf	___flge@ff1+1,w,c
  4846  0025E8  6E0A               	movwf	(??___flge+1)& (0+255),c
  4847  0025EA  0E80               	movlw	128
  4848  0025EC  1403               	andwf	___flge@ff1+2,w,c
  4849  0025EE  6E0B               	movwf	(??___flge+2)& (0+255),c
  4850  0025F0  0E7F               	movlw	127
  4851  0025F2  1404               	andwf	___flge@ff1+3,w,c
  4852  0025F4  6E0C               	movwf	(??___flge+3)& (0+255),c
  4853  0025F6  5009               	movf	??___flge,w,c
  4854  0025F8  100A               	iorwf	??___flge+1,w,c
  4855  0025FA  100B               	iorwf	??___flge+2,w,c
  4856  0025FC  100C               	iorwf	??___flge+3,w,c
  4857  0025FE  A4D8               	btfss	status,2,c
  4858  002600  D008               	goto	l2967
  4859  002602  0E00               	movlw	0
  4860  002604  6E01               	movwf	___flge@ff1,c
  4861  002606  0E00               	movlw	0
  4862  002608  6E02               	movwf	___flge@ff1+1,c
  4863  00260A  0E00               	movlw	0
  4864  00260C  6E03               	movwf	___flge@ff1+2,c
  4865  00260E  0E00               	movlw	0
  4866  002610  6E04               	movwf	___flge@ff1+3,c
  4867  002612                     l2967:
  4868  002612  0E00               	movlw	0
  4869  002614  1405               	andwf	___flge@ff2,w,c
  4870  002616  6E09               	movwf	??___flge& (0+255),c
  4871  002618  0E00               	movlw	0
  4872  00261A  1406               	andwf	___flge@ff2+1,w,c
  4873  00261C  6E0A               	movwf	(??___flge+1)& (0+255),c
  4874  00261E  0E80               	movlw	128
  4875  002620  1407               	andwf	___flge@ff2+2,w,c
  4876  002622  6E0B               	movwf	(??___flge+2)& (0+255),c
  4877  002624  0E7F               	movlw	127
  4878  002626  1408               	andwf	___flge@ff2+3,w,c
  4879  002628  6E0C               	movwf	(??___flge+3)& (0+255),c
  4880  00262A  5009               	movf	??___flge,w,c
  4881  00262C  100A               	iorwf	??___flge+1,w,c
  4882  00262E  100B               	iorwf	??___flge+2,w,c
  4883  002630  100C               	iorwf	??___flge+3,w,c
  4884  002632  A4D8               	btfss	status,2,c
  4885  002634  D008               	goto	l2971
  4886  002636  0E00               	movlw	0
  4887  002638  6E05               	movwf	___flge@ff2,c
  4888  00263A  0E00               	movlw	0
  4889  00263C  6E06               	movwf	___flge@ff2+1,c
  4890  00263E  0E00               	movlw	0
  4891  002640  6E07               	movwf	___flge@ff2+2,c
  4892  002642  0E00               	movlw	0
  4893  002644  6E08               	movwf	___flge@ff2+3,c
  4894  002646                     l2971:
  4895  002646  AE04               	btfss	___flge@ff1+3,7,c
  4896  002648  D01D               	goto	l2975
  4897  00264A  C001  F009         	movff	___flge@ff1,??___flge
  4898  00264E  C002  F00A         	movff	___flge@ff1+1,??___flge+1
  4899  002652  C003  F00B         	movff	___flge@ff1+2,??___flge+2
  4900  002656  C004  F00C         	movff	___flge@ff1+3,??___flge+3
  4901  00265A  1E09               	comf	??___flge,f,c
  4902  00265C  1E0A               	comf	??___flge+1,f,c
  4903  00265E  1E0B               	comf	??___flge+2,f,c
  4904  002660  1E0C               	comf	??___flge+3,f,c
  4905  002662  2A09               	incf	??___flge,f,c
  4906  002664  0E00               	movlw	0
  4907  002666  220A               	addwfc	??___flge+1,f,c
  4908  002668  220B               	addwfc	??___flge+2,f,c
  4909  00266A  220C               	addwfc	??___flge+3,f,c
  4910  00266C  0E00               	movlw	0
  4911  00266E  2409               	addwf	??___flge,w,c
  4912  002670  6E01               	movwf	___flge@ff1,c
  4913  002672  0E00               	movlw	0
  4914  002674  200A               	addwfc	??___flge+1,w,c
  4915  002676  6E02               	movwf	___flge@ff1+1,c
  4916  002678  0E00               	movlw	0
  4917  00267A  200B               	addwfc	??___flge+2,w,c
  4918  00267C  6E03               	movwf	___flge@ff1+2,c
  4919  00267E  0E80               	movlw	128
  4920  002680  200C               	addwfc	??___flge+3,w,c
  4921  002682  6E04               	movwf	___flge@ff1+3,c
  4922  002684                     l2975:
  4923  002684  AE08               	btfss	___flge@ff2+3,7,c
  4924  002686  D01D               	goto	l484
  4925  002688  C005  F009         	movff	___flge@ff2,??___flge
  4926  00268C  C006  F00A         	movff	___flge@ff2+1,??___flge+1
  4927  002690  C007  F00B         	movff	___flge@ff2+2,??___flge+2
  4928  002694  C008  F00C         	movff	___flge@ff2+3,??___flge+3
  4929  002698  1E09               	comf	??___flge,f,c
  4930  00269A  1E0A               	comf	??___flge+1,f,c
  4931  00269C  1E0B               	comf	??___flge+2,f,c
  4932  00269E  1E0C               	comf	??___flge+3,f,c
  4933  0026A0  2A09               	incf	??___flge,f,c
  4934  0026A2  0E00               	movlw	0
  4935  0026A4  220A               	addwfc	??___flge+1,f,c
  4936  0026A6  220B               	addwfc	??___flge+2,f,c
  4937  0026A8  220C               	addwfc	??___flge+3,f,c
  4938  0026AA  0E00               	movlw	0
  4939  0026AC  2409               	addwf	??___flge,w,c
  4940  0026AE  6E05               	movwf	___flge@ff2,c
  4941  0026B0  0E00               	movlw	0
  4942  0026B2  200A               	addwfc	??___flge+1,w,c
  4943  0026B4  6E06               	movwf	___flge@ff2+1,c
  4944  0026B6  0E00               	movlw	0
  4945  0026B8  200B               	addwfc	??___flge+2,w,c
  4946  0026BA  6E07               	movwf	___flge@ff2+2,c
  4947  0026BC  0E80               	movlw	128
  4948  0026BE  200C               	addwfc	??___flge+3,w,c
  4949  0026C0  6E08               	movwf	___flge@ff2+3,c
  4950  0026C2                     l484:
  4951  0026C2  0E00               	movlw	0
  4952  0026C4  1A01               	xorwf	___flge@ff1,f,c
  4953  0026C6  0E00               	movlw	0
  4954  0026C8  1A02               	xorwf	___flge@ff1+1,f,c
  4955  0026CA  0E00               	movlw	0
  4956  0026CC  1A03               	xorwf	___flge@ff1+2,f,c
  4957  0026CE  0E80               	movlw	128
  4958  0026D0  1A04               	xorwf	___flge@ff1+3,f,c
  4959  0026D2  0E00               	movlw	0
  4960  0026D4  1A05               	xorwf	___flge@ff2,f,c
  4961  0026D6  0E00               	movlw	0
  4962  0026D8  1A06               	xorwf	___flge@ff2+1,f,c
  4963  0026DA  0E00               	movlw	0
  4964  0026DC  1A07               	xorwf	___flge@ff2+2,f,c
  4965  0026DE  0E80               	movlw	128
  4966  0026E0  1A08               	xorwf	___flge@ff2+3,f,c
  4967  0026E2  5005               	movf	___flge@ff2,w,c
  4968  0026E4  5C01               	subwf	___flge@ff1,w,c
  4969  0026E6  5006               	movf	___flge@ff2+1,w,c
  4970  0026E8  5802               	subwfb	___flge@ff1+1,w,c
  4971  0026EA  5007               	movf	___flge@ff2+2,w,c
  4972  0026EC  5803               	subwfb	___flge@ff1+2,w,c
  4973  0026EE  5008               	movf	___flge@ff2+3,w,c
  4974  0026F0  5804               	subwfb	___flge@ff1+3,w,c
  4975  0026F2  B0D8               	btfsc	status,0,c
  4976  0026F4  D002               	goto	l2981
  4977  0026F6  90D8               	bcf	status,0,c
  4978  0026F8  0012               	return	
  4979  0026FA                     l2981:
  4980  0026FA  80D8               	bsf	status,0,c
  4981  0026FC  0012               	return	
  4982  0026FE                     __end_of___flge:
  4983                           	opt stack 0
  4984                           tblptru	equ	0xFF8
  4985                           tblptrh	equ	0xFF7
  4986                           tblptrl	equ	0xFF6
  4987                           tablat	equ	0xFF5
  4988                           prodh	equ	0xFF4
  4989                           prodl	equ	0xFF3
  4990                           postinc0	equ	0xFEE
  4991                           wreg	equ	0xFE8
  4992                           indf2	equ	0xFDF
  4993                           postinc2	equ	0xFDE
  4994                           fsr2h	equ	0xFDA
  4995                           fsr2l	equ	0xFD9
  4996                           status	equ	0xFD8
  4997                           
  4998 ;; *************** function _read_adc *****************
  4999 ;; Defined at:
  5000 ;;		line 70 in file "tester.c"
  5001 ;; Parameters:    Size  Location     Type
  5002 ;;		None
  5003 ;; Auto vars:     Size  Location     Type
  5004 ;;  i               1   41[COMRAM] unsigned char 
  5005 ;; Return value:  Size  Location     Type
  5006 ;;                  1    wreg      void 
  5007 ;; Registers used:
  5008 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5009 ;; Tracked objects:
  5010 ;;		On entry : 0/0
  5011 ;;		On exit  : 0/0
  5012 ;;		Unchanged: 0/0
  5013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5014 ;;      Params:         0       0       0       0       0       0       0       0       0
  5015 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5016 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5017 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5018 ;;Total ram usage:        3 bytes
  5019 ;; Hardware stack levels used:    1
  5020 ;; Hardware stack levels required when called:    2
  5021 ;; This function calls:
  5022 ;;		___awdiv
  5023 ;;		___flmul
  5024 ;;		___wmul
  5025 ;;		___xxtofl
  5026 ;;		_delay_ms
  5027 ;; This function is called by:
  5028 ;;		_main
  5029 ;;		_ricarica
  5030 ;; This function uses a non-reentrant model
  5031 ;;
  5032                           
  5033                           	psect	text16
  5034  0020B6                     __ptext16:
  5035                           	opt stack 0
  5036  0020B6                     _read_adc:
  5037                           	opt stack 27
  5038                           
  5039                           ;tester.c: 71: for (char i = 0; i < 3; i++) {
  5040                           
  5041                           ;incstack = 0
  5042  0020B6  0E00               	movlw	0
  5043  0020B8  6E2A               	movwf	read_adc@i,c
  5044  0020BA                     l3189:
  5045  0020BA  0E02               	movlw	2
  5046  0020BC  642A               	cpfsgt	read_adc@i,c
  5047  0020BE  D001               	goto	l3193
  5048  0020C0  D044               	goto	l3207
  5049  0020C2                     l3193:
  5050                           
  5051                           ;tester.c: 72: ADCON0 = combinazioni[i];
  5052  0020C2  502A               	movf	read_adc@i,w,c
  5053  0020C4  0D01               	mullw	1
  5054  0020C6  0E93               	movlw	low _combinazioni
  5055  0020C8  24F3               	addwf	prodl,w,c
  5056  0020CA  6ED9               	movwf	fsr2l,c
  5057  0020CC  0E00               	movlw	high _combinazioni
  5058  0020CE  20F4               	addwfc	prodh,w,c
  5059  0020D0  6EDA               	movwf	fsr2h,c
  5060  0020D2  50DF               	movf	indf2,w,c
  5061  0020D4  6EC2               	movwf	4034,c	;volatile
  5062                           
  5063                           ;tester.c: 73: ADCON0bits.ADON = 1;
  5064  0020D6  80C2               	bsf	4034,0,c	;volatile
  5065                           
  5066                           ;tester.c: 74: ADCON0bits.GO = 1;
  5067  0020D8  82C2               	bsf	4034,1,c	;volatile
  5068  0020DA                     l165:
  5069  0020DA  B2C2               	btfsc	4034,1,c	;volatile
  5070  0020DC  D7FE               	goto	l165
  5071                           
  5072                           ;tester.c: 76: lettura [i] = ADRESH;
  5073  0020DE  50C4               	movf	4036,w,c	;volatile
  5074  0020E0  6E28               	movwf	??_read_adc& (0+255),c
  5075  0020E2  6A29               	clrf	(??_read_adc+1)& (0+255),c
  5076  0020E4  502A               	movf	read_adc@i,w,c
  5077  0020E6  0D02               	mullw	2
  5078  0020E8  0E5D               	movlw	low _lettura
  5079  0020EA  24F3               	addwf	prodl,w,c
  5080  0020EC  6ED9               	movwf	fsr2l,c
  5081  0020EE  0E00               	movlw	high _lettura
  5082  0020F0  20F4               	addwfc	prodh,w,c
  5083  0020F2  6EDA               	movwf	fsr2h,c
  5084  0020F4  C028  FFDE         	movff	??_read_adc,postinc2
  5085  0020F8  C029  FFDD         	movff	??_read_adc+1,postdec2
  5086                           
  5087                           ;tester.c: 77: lettura [i] = ((lettura[i] << 8) | ADRESL);
  5088  0020FC  502A               	movf	read_adc@i,w,c
  5089  0020FE  0D02               	mullw	2
  5090  002100  0E5D               	movlw	low _lettura
  5091  002102  24F3               	addwf	prodl,w,c
  5092  002104  6ED9               	movwf	fsr2l,c
  5093  002106  0E00               	movlw	high _lettura
  5094  002108  20F4               	addwfc	prodh,w,c
  5095  00210A  6EDA               	movwf	fsr2h,c
  5096  00210C  CFDE F028          	movff	postinc2,??_read_adc
  5097  002110  CFDD F029          	movff	postdec2,??_read_adc+1
  5098  002114  C028  F029         	movff	??_read_adc,??_read_adc+1
  5099  002118  6A28               	clrf	??_read_adc,c
  5100  00211A  50C3               	movf	4035,w,c	;volatile
  5101  00211C  1228               	iorwf	??_read_adc,f,c
  5102  00211E  0E00               	movlw	0
  5103  002120  1229               	iorwf	??_read_adc+1,f,c
  5104  002122  502A               	movf	read_adc@i,w,c
  5105  002124  0D02               	mullw	2
  5106  002126  0E5D               	movlw	low _lettura
  5107  002128  24F3               	addwf	prodl,w,c
  5108  00212A  6ED9               	movwf	fsr2l,c
  5109  00212C  0E00               	movlw	high _lettura
  5110  00212E  20F4               	addwfc	prodh,w,c
  5111  002130  6EDA               	movwf	fsr2h,c
  5112  002132  C028  FFDE         	movff	??_read_adc,postinc2
  5113  002136  C029  FFDD         	movff	??_read_adc+1,postdec2
  5114                           
  5115                           ;tester.c: 78: delay_ms(5);
  5116  00213A  0E00               	movlw	0
  5117  00213C  6E08               	movwf	delay_ms@value_ms+1,c
  5118  00213E  0E05               	movlw	5
  5119  002140  6E07               	movwf	delay_ms@value_ms,c
  5120  002142  EC04  F017         	call	_delay_ms	;wreg free
  5121  002146  2A2A               	incf	read_adc@i,f,c
  5122  002148  D7B8               	goto	l3189
  5123  00214A                     l3207:
  5124                           
  5125                           ;tester.c: 79: }
  5126                           ;tester.c: 80: current = ((lettura[1]-lettura[0])*5)/1024;
  5127  00214A  0E04               	movlw	4
  5128  00214C  6E0A               	movwf	___awdiv@divisor+1,c
  5129  00214E  0E00               	movlw	0
  5130  002150  6E09               	movwf	___awdiv@divisor,c
  5131  002152  C05D  F028         	movff	_lettura,??_read_adc
  5132  002156  C05E  F029         	movff	_lettura+1,??_read_adc+1
  5133  00215A  1E28               	comf	??_read_adc,f,c
  5134  00215C  1E29               	comf	??_read_adc+1,f,c
  5135  00215E  4A28               	infsnz	??_read_adc,f,c
  5136  002160  2A29               	incf	??_read_adc+1,f,c
  5137  002162  505F               	movf	_lettura+2,w,c
  5138  002164  2428               	addwf	??_read_adc,w,c
  5139  002166  6E01               	movwf	___wmul@multiplier,c
  5140  002168  5060               	movf	_lettura+3,w,c
  5141  00216A  2029               	addwfc	??_read_adc+1,w,c
  5142  00216C  6E02               	movwf	___wmul@multiplier+1,c
  5143  00216E  0E00               	movlw	0
  5144  002170  6E04               	movwf	___wmul@multiplicand+1,c
  5145  002172  0E05               	movlw	5
  5146  002174  6E03               	movwf	___wmul@multiplicand,c
  5147  002176  EC88  F017         	call	___wmul	;wreg free
  5148  00217A  C001  F007         	movff	?___wmul,___awdiv@dividend
  5149  00217E  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
  5150  002182  EC43  F015         	call	___awdiv	;wreg free
  5151  002186  C007  F00F         	movff	?___awdiv,___xxtofl@val
  5152  00218A  C008  F010         	movff	?___awdiv+1,___xxtofl@val+1
  5153  00218E  0E00               	movlw	0
  5154  002190  BE10               	btfsc	___xxtofl@val+1,7,c
  5155  002192  0EFF               	movlw	-1
  5156  002194  6E11               	movwf	___xxtofl@val+2,c
  5157  002196  6E12               	movwf	___xxtofl@val+3,c
  5158  002198  0E01               	movlw	1
  5159  00219A  EC1A  F011         	call	___xxtofl
  5160  00219E  C00F  F07F         	movff	?___xxtofl,_current
  5161  0021A2  C010  F080         	movff	?___xxtofl+1,_current+1
  5162  0021A6  C011  F081         	movff	?___xxtofl+2,_current+2
  5163  0021AA  C012  F082         	movff	?___xxtofl+3,_current+3
  5164                           
  5165                           ;tester.c: 81: voltage = (lettura[2]*5)/1024;
  5166  0021AE  0E04               	movlw	4
  5167  0021B0  6E0A               	movwf	___awdiv@divisor+1,c
  5168  0021B2  0E00               	movlw	0
  5169  0021B4  6E09               	movwf	___awdiv@divisor,c
  5170  0021B6  C061  F001         	movff	_lettura+4,___wmul@multiplier
  5171  0021BA  C062  F002         	movff	_lettura+5,___wmul@multiplier+1
  5172  0021BE  0E00               	movlw	0
  5173  0021C0  6E04               	movwf	___wmul@multiplicand+1,c
  5174  0021C2  0E05               	movlw	5
  5175  0021C4  6E03               	movwf	___wmul@multiplicand,c
  5176  0021C6  EC88  F017         	call	___wmul	;wreg free
  5177  0021CA  C001  F007         	movff	?___wmul,___awdiv@dividend
  5178  0021CE  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
  5179  0021D2  EC43  F015         	call	___awdiv	;wreg free
  5180  0021D6  C007  F00F         	movff	?___awdiv,___xxtofl@val
  5181  0021DA  C008  F010         	movff	?___awdiv+1,___xxtofl@val+1
  5182  0021DE  0E00               	movlw	0
  5183  0021E0  BE10               	btfsc	___xxtofl@val+1,7,c
  5184  0021E2  0EFF               	movlw	-1
  5185  0021E4  6E11               	movwf	___xxtofl@val+2,c
  5186  0021E6  6E12               	movwf	___xxtofl@val+3,c
  5187  0021E8  0E01               	movlw	1
  5188  0021EA  EC1A  F011         	call	___xxtofl
  5189  0021EE  C00F  F083         	movff	?___xxtofl,_voltage
  5190  0021F2  C010  F084         	movff	?___xxtofl+1,_voltage+1
  5191  0021F6  C011  F085         	movff	?___xxtofl+2,_voltage+2
  5192  0021FA  C012  F086         	movff	?___xxtofl+3,_voltage+3
  5193                           
  5194                           ;tester.c: 82: voltage = voltage * rapporto;
  5195  0021FE  C083  F00F         	movff	_voltage,___flmul@b
  5196  002202  C084  F010         	movff	_voltage+1,___flmul@b+1
  5197  002206  C085  F011         	movff	_voltage+2,___flmul@b+2
  5198  00220A  C086  F012         	movff	_voltage+3,___flmul@b+3
  5199  00220E  C08F  F013         	movff	_rapporto,___flmul@a
  5200  002212  C090  F014         	movff	_rapporto+1,___flmul@a+1
  5201  002216  C091  F015         	movff	_rapporto+2,___flmul@a+2
  5202  00221A  C092  F016         	movff	_rapporto+3,___flmul@a+3
  5203  00221E  EC7E  F00A         	call	___flmul	;wreg free
  5204  002222  C00F  F083         	movff	?___flmul,_voltage
  5205  002226  C010  F084         	movff	?___flmul+1,_voltage+1
  5206  00222A  C011  F085         	movff	?___flmul+2,_voltage+2
  5207  00222E  C012  F086         	movff	?___flmul+3,_voltage+3
  5208  002232  0012               	return		;funcret
  5209  002234                     __end_of_read_adc:
  5210                           	opt stack 0
  5211                           tblptru	equ	0xFF8
  5212                           tblptrh	equ	0xFF7
  5213                           tblptrl	equ	0xFF6
  5214                           tablat	equ	0xFF5
  5215                           prodh	equ	0xFF4
  5216                           prodl	equ	0xFF3
  5217                           postinc0	equ	0xFEE
  5218                           wreg	equ	0xFE8
  5219                           indf2	equ	0xFDF
  5220                           postinc2	equ	0xFDE
  5221                           postdec2	equ	0xFDD
  5222                           fsr2h	equ	0xFDA
  5223                           fsr2l	equ	0xFD9
  5224                           status	equ	0xFD8
  5225                           
  5226 ;; *************** function ___xxtofl *****************
  5227 ;; Defined at:
  5228 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\xxtofl.c"
  5229 ;; Parameters:    Size  Location     Type
  5230 ;;  sign            1    wreg     unsigned char 
  5231 ;;  val             4   14[COMRAM] long 
  5232 ;; Auto vars:     Size  Location     Type
  5233 ;;  sign            1   22[COMRAM] unsigned char 
  5234 ;;  arg             4   24[COMRAM] unsigned long 
  5235 ;;  exp             1   23[COMRAM] unsigned char 
  5236 ;; Return value:  Size  Location     Type
  5237 ;;                  4   14[COMRAM] unsigned char 
  5238 ;; Registers used:
  5239 ;;		wreg, status,2, status,0
  5240 ;; Tracked objects:
  5241 ;;		On entry : 0/0
  5242 ;;		On exit  : 0/0
  5243 ;;		Unchanged: 0/0
  5244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5245 ;;      Params:         4       0       0       0       0       0       0       0       0
  5246 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5247 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5248 ;;      Totals:        14       0       0       0       0       0       0       0       0
  5249 ;;Total ram usage:       14 bytes
  5250 ;; Hardware stack levels used:    1
  5251 ;; This function calls:
  5252 ;;		Nothing
  5253 ;; This function is called by:
  5254 ;;		_read_adc
  5255 ;;		_sprintf
  5256 ;; This function uses a non-reentrant model
  5257 ;;
  5258                           
  5259                           	psect	text17
  5260  002234                     __ptext17:
  5261                           	opt stack 0
  5262  002234                     ___xxtofl:
  5263                           	opt stack 28
  5264                           
  5265                           ;incstack = 0
  5266                           ;___xxtofl@sign stored from wreg
  5267  002234  6E17               	movwf	___xxtofl@sign,c
  5268  002236  5017               	movf	___xxtofl@sign,w,c
  5269  002238  A4D8               	btfss	status,2,c
  5270  00223A  AE12               	btfss	___xxtofl@val+3,7,c
  5271  00223C  D01A               	goto	l869
  5272  00223E  C00F  F013         	movff	___xxtofl@val,??___xxtofl
  5273  002242  C010  F014         	movff	___xxtofl@val+1,??___xxtofl+1
  5274  002246  C011  F015         	movff	___xxtofl@val+2,??___xxtofl+2
  5275  00224A  C012  F016         	movff	___xxtofl@val+3,??___xxtofl+3
  5276  00224E  1E13               	comf	??___xxtofl,f,c
  5277  002250  1E14               	comf	??___xxtofl+1,f,c
  5278  002252  1E15               	comf	??___xxtofl+2,f,c
  5279  002254  1E16               	comf	??___xxtofl+3,f,c
  5280  002256  2A13               	incf	??___xxtofl,f,c
  5281  002258  0E00               	movlw	0
  5282  00225A  2214               	addwfc	??___xxtofl+1,f,c
  5283  00225C  2215               	addwfc	??___xxtofl+2,f,c
  5284  00225E  2216               	addwfc	??___xxtofl+3,f,c
  5285  002260  C013  F019         	movff	??___xxtofl,___xxtofl@arg
  5286  002264  C014  F01A         	movff	??___xxtofl+1,___xxtofl@arg+1
  5287  002268  C015  F01B         	movff	??___xxtofl+2,___xxtofl@arg+2
  5288  00226C  C016  F01C         	movff	??___xxtofl+3,___xxtofl@arg+3
  5289  002270  D008               	goto	l3081
  5290  002272                     l869:
  5291  002272  C00F  F019         	movff	___xxtofl@val,___xxtofl@arg
  5292  002276  C010  F01A         	movff	___xxtofl@val+1,___xxtofl@arg+1
  5293  00227A  C011  F01B         	movff	___xxtofl@val+2,___xxtofl@arg+2
  5294  00227E  C012  F01C         	movff	___xxtofl@val+3,___xxtofl@arg+3
  5295  002282                     l3081:
  5296  002282  500F               	movf	___xxtofl@val,w,c
  5297  002284  1010               	iorwf	___xxtofl@val+1,w,c
  5298  002286  1011               	iorwf	___xxtofl@val+2,w,c
  5299  002288  1012               	iorwf	___xxtofl@val+3,w,c
  5300  00228A  A4D8               	btfss	status,2,c
  5301  00228C  D009               	goto	l3087
  5302  00228E  0E00               	movlw	0
  5303  002290  6E0F               	movwf	?___xxtofl,c
  5304  002292  0E00               	movlw	0
  5305  002294  6E10               	movwf	?___xxtofl+1,c
  5306  002296  0E00               	movlw	0
  5307  002298  6E11               	movwf	?___xxtofl+2,c
  5308  00229A  0E00               	movlw	0
  5309  00229C  6E12               	movwf	?___xxtofl+3,c
  5310  00229E  0012               	return	
  5311  0022A0                     l3087:
  5312  0022A0  0E96               	movlw	150
  5313  0022A2  6E18               	movwf	___xxtofl@exp,c
  5314  0022A4  D006               	goto	l3091
  5315  0022A6                     l3089:
  5316  0022A6  2A18               	incf	___xxtofl@exp,f,c
  5317  0022A8  90D8               	bcf	status,0,c
  5318  0022AA  321C               	rrcf	___xxtofl@arg+3,f,c
  5319  0022AC  321B               	rrcf	___xxtofl@arg+2,f,c
  5320  0022AE  321A               	rrcf	___xxtofl@arg+1,f,c
  5321  0022B0  3219               	rrcf	___xxtofl@arg,f,c
  5322  0022B2                     l3091:
  5323  0022B2  0E00               	movlw	0
  5324  0022B4  1419               	andwf	___xxtofl@arg,w,c
  5325  0022B6  6E13               	movwf	??___xxtofl& (0+255),c
  5326  0022B8  0E00               	movlw	0
  5327  0022BA  141A               	andwf	___xxtofl@arg+1,w,c
  5328  0022BC  6E14               	movwf	(??___xxtofl+1)& (0+255),c
  5329  0022BE  0E00               	movlw	0
  5330  0022C0  141B               	andwf	___xxtofl@arg+2,w,c
  5331  0022C2  6E15               	movwf	(??___xxtofl+2)& (0+255),c
  5332  0022C4  0EFE               	movlw	254
  5333  0022C6  141C               	andwf	___xxtofl@arg+3,w,c
  5334  0022C8  6E16               	movwf	(??___xxtofl+3)& (0+255),c
  5335  0022CA  5013               	movf	??___xxtofl,w,c
  5336  0022CC  1014               	iorwf	??___xxtofl+1,w,c
  5337  0022CE  1015               	iorwf	??___xxtofl+2,w,c
  5338  0022D0  1016               	iorwf	??___xxtofl+3,w,c
  5339  0022D2  B4D8               	btfsc	status,2,c
  5340  0022D4  D00D               	goto	l876
  5341  0022D6  D7E7               	goto	l3089
  5342  0022D8                     l3093:
  5343  0022D8  2A18               	incf	___xxtofl@exp,f,c
  5344  0022DA  0E01               	movlw	1
  5345  0022DC  2619               	addwf	___xxtofl@arg,f,c
  5346  0022DE  0E00               	movlw	0
  5347  0022E0  221A               	addwfc	___xxtofl@arg+1,f,c
  5348  0022E2  221B               	addwfc	___xxtofl@arg+2,f,c
  5349  0022E4  221C               	addwfc	___xxtofl@arg+3,f,c
  5350  0022E6  90D8               	bcf	status,0,c
  5351  0022E8  321C               	rrcf	___xxtofl@arg+3,f,c
  5352  0022EA  321B               	rrcf	___xxtofl@arg+2,f,c
  5353  0022EC  321A               	rrcf	___xxtofl@arg+1,f,c
  5354  0022EE  3219               	rrcf	___xxtofl@arg,f,c
  5355  0022F0                     l876:
  5356  0022F0  0E00               	movlw	0
  5357  0022F2  1419               	andwf	___xxtofl@arg,w,c
  5358  0022F4  6E13               	movwf	??___xxtofl& (0+255),c
  5359  0022F6  0E00               	movlw	0
  5360  0022F8  141A               	andwf	___xxtofl@arg+1,w,c
  5361  0022FA  6E14               	movwf	(??___xxtofl+1)& (0+255),c
  5362  0022FC  0E00               	movlw	0
  5363  0022FE  141B               	andwf	___xxtofl@arg+2,w,c
  5364  002300  6E15               	movwf	(??___xxtofl+2)& (0+255),c
  5365  002302  0EFF               	movlw	255
  5366  002304  141C               	andwf	___xxtofl@arg+3,w,c
  5367  002306  6E16               	movwf	(??___xxtofl+3)& (0+255),c
  5368  002308  5013               	movf	??___xxtofl,w,c
  5369  00230A  1014               	iorwf	??___xxtofl+1,w,c
  5370  00230C  1015               	iorwf	??___xxtofl+2,w,c
  5371  00230E  1016               	iorwf	??___xxtofl+3,w,c
  5372  002310  B4D8               	btfsc	status,2,c
  5373  002312  D007               	goto	l3101
  5374  002314  D7E1               	goto	l3093
  5375  002316                     l3099:
  5376  002316  0618               	decf	___xxtofl@exp,f,c
  5377  002318  90D8               	bcf	status,0,c
  5378  00231A  3619               	rlcf	___xxtofl@arg,f,c
  5379  00231C  361A               	rlcf	___xxtofl@arg+1,f,c
  5380  00231E  361B               	rlcf	___xxtofl@arg+2,f,c
  5381  002320  361C               	rlcf	___xxtofl@arg+3,f,c
  5382  002322                     l3101:
  5383  002322  BE1B               	btfsc	___xxtofl@arg+2,7,c
  5384  002324  D003               	goto	l883
  5385  002326  0E02               	movlw	2
  5386  002328  6018               	cpfslt	___xxtofl@exp,c
  5387  00232A  D7F5               	goto	l3099
  5388  00232C                     l883:
  5389  00232C  B018               	btfsc	___xxtofl@exp,0,c
  5390  00232E  D008               	goto	l884
  5391  002330  0EFF               	movlw	255
  5392  002332  1619               	andwf	___xxtofl@arg,f,c
  5393  002334  0EFF               	movlw	255
  5394  002336  161A               	andwf	___xxtofl@arg+1,f,c
  5395  002338  0E7F               	movlw	127
  5396  00233A  161B               	andwf	___xxtofl@arg+2,f,c
  5397  00233C  0EFF               	movlw	255
  5398  00233E  161C               	andwf	___xxtofl@arg+3,f,c
  5399  002340                     l884:
  5400  002340  90D8               	bcf	status,0,c
  5401  002342  3218               	rrcf	___xxtofl@exp,f,c
  5402  002344  C018  F013         	movff	___xxtofl@exp,??___xxtofl
  5403  002348  6A14               	clrf	(??___xxtofl+1)& (0+255),c
  5404  00234A  6A15               	clrf	(??___xxtofl+2)& (0+255),c
  5405  00234C  6A16               	clrf	(??___xxtofl+3)& (0+255),c
  5406  00234E  C013  F016         	movff	??___xxtofl,??___xxtofl+3
  5407  002352  6A15               	clrf	??___xxtofl+2,c
  5408  002354  6A14               	clrf	??___xxtofl+1,c
  5409  002356  6A13               	clrf	??___xxtofl,c
  5410  002358  5013               	movf	??___xxtofl,w,c
  5411  00235A  1219               	iorwf	___xxtofl@arg,f,c
  5412  00235C  5014               	movf	??___xxtofl+1,w,c
  5413  00235E  121A               	iorwf	___xxtofl@arg+1,f,c
  5414  002360  5015               	movf	??___xxtofl+2,w,c
  5415  002362  121B               	iorwf	___xxtofl@arg+2,f,c
  5416  002364  5016               	movf	??___xxtofl+3,w,c
  5417  002366  121C               	iorwf	___xxtofl@arg+3,f,c
  5418  002368  5017               	movf	___xxtofl@sign,w,c
  5419  00236A  A4D8               	btfss	status,2,c
  5420  00236C  AE12               	btfss	___xxtofl@val+3,7,c
  5421  00236E  D001               	goto	l3113
  5422  002370  8E1C               	bsf	___xxtofl@arg+3,7,c
  5423  002372                     l3113:
  5424  002372  C019  F00F         	movff	___xxtofl@arg,?___xxtofl
  5425  002376  C01A  F010         	movff	___xxtofl@arg+1,?___xxtofl+1
  5426  00237A  C01B  F011         	movff	___xxtofl@arg+2,?___xxtofl+2
  5427  00237E  C01C  F012         	movff	___xxtofl@arg+3,?___xxtofl+3
  5428  002382  0012               	return	
  5429  002384                     __end_of___xxtofl:
  5430                           	opt stack 0
  5431                           tblptru	equ	0xFF8
  5432                           tblptrh	equ	0xFF7
  5433                           tblptrl	equ	0xFF6
  5434                           tablat	equ	0xFF5
  5435                           prodh	equ	0xFF4
  5436                           prodl	equ	0xFF3
  5437                           postinc0	equ	0xFEE
  5438                           wreg	equ	0xFE8
  5439                           indf2	equ	0xFDF
  5440                           postinc2	equ	0xFDE
  5441                           postdec2	equ	0xFDD
  5442                           fsr2h	equ	0xFDA
  5443                           fsr2l	equ	0xFD9
  5444                           status	equ	0xFD8
  5445                           
  5446 ;; *************** function ___flmul *****************
  5447 ;; Defined at:
  5448 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\sprcmul.c"
  5449 ;; Parameters:    Size  Location     Type
  5450 ;;  b               4   14[COMRAM] unsigned char 
  5451 ;;  a               4   18[COMRAM] unsigned char 
  5452 ;; Auto vars:     Size  Location     Type
  5453 ;;  prod            4   33[COMRAM] struct .
  5454 ;;  grs             4   27[COMRAM] unsigned long 
  5455 ;;  temp            2   37[COMRAM] struct .
  5456 ;;  bexp            1   32[COMRAM] unsigned char 
  5457 ;;  aexp            1   31[COMRAM] unsigned char 
  5458 ;;  sign            1   26[COMRAM] unsigned char 
  5459 ;; Return value:  Size  Location     Type
  5460 ;;                  4   14[COMRAM] unsigned char 
  5461 ;; Registers used:
  5462 ;;		wreg, status,2, status,0, prodl, prodh
  5463 ;; Tracked objects:
  5464 ;;		On entry : 0/0
  5465 ;;		On exit  : 0/0
  5466 ;;		Unchanged: 0/0
  5467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5468 ;;      Params:         8       0       0       0       0       0       0       0       0
  5469 ;;      Locals:        13       0       0       0       0       0       0       0       0
  5470 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5471 ;;      Totals:        25       0       0       0       0       0       0       0       0
  5472 ;;Total ram usage:       25 bytes
  5473 ;; Hardware stack levels used:    1
  5474 ;; This function calls:
  5475 ;;		Nothing
  5476 ;; This function is called by:
  5477 ;;		_read_adc
  5478 ;;		_fround
  5479 ;;		_scale
  5480 ;;		_sprintf
  5481 ;; This function uses a non-reentrant model
  5482 ;;
  5483                           
  5484                           	psect	text18
  5485  0014FC                     __ptext18:
  5486                           	opt stack 0
  5487  0014FC                     ___flmul:
  5488                           	opt stack 27
  5489                           
  5490                           ;incstack = 0
  5491  0014FC  5012               	movf	___flmul@b+3,w,c
  5492  0014FE  0B80               	andlw	128
  5493  001500  6E1B               	movwf	___flmul@sign,c
  5494  001502  5012               	movf	___flmul@b+3,w,c
  5495  001504  2412               	addwf	___flmul@b+3,w,c
  5496  001506  6E21               	movwf	___flmul@bexp,c
  5497  001508  BE11               	btfsc	___flmul@b+2,7,c
  5498  00150A  8021               	bsf	___flmul@bexp,0,c
  5499  00150C  5021               	movf	___flmul@bexp,w,c
  5500  00150E  B4D8               	btfsc	status,2,c
  5501  001510  D00D               	goto	l2549
  5502  001512  2821               	incf	___flmul@bexp,w,c
  5503  001514  A4D8               	btfss	status,2,c
  5504  001516  D008               	goto	l2547
  5505  001518  0E00               	movlw	0
  5506  00151A  6E0F               	movwf	___flmul@b,c
  5507  00151C  0E00               	movlw	0
  5508  00151E  6E10               	movwf	___flmul@b+1,c
  5509  001520  0E00               	movlw	0
  5510  001522  6E11               	movwf	___flmul@b+2,c
  5511  001524  0E00               	movlw	0
  5512  001526  6E12               	movwf	___flmul@b+3,c
  5513  001528                     l2547:
  5514  001528  8E11               	bsf	___flmul@b+2,7,c
  5515  00152A  D008               	goto	l2551
  5516  00152C                     l2549:
  5517  00152C  0E00               	movlw	0
  5518  00152E  6E0F               	movwf	___flmul@b,c
  5519  001530  0E00               	movlw	0
  5520  001532  6E10               	movwf	___flmul@b+1,c
  5521  001534  0E00               	movlw	0
  5522  001536  6E11               	movwf	___flmul@b+2,c
  5523  001538  0E00               	movlw	0
  5524  00153A  6E12               	movwf	___flmul@b+3,c
  5525  00153C                     l2551:
  5526  00153C  5016               	movf	___flmul@a+3,w,c
  5527  00153E  0B80               	andlw	128
  5528  001540  1A1B               	xorwf	___flmul@sign,f,c
  5529  001542  5016               	movf	___flmul@a+3,w,c
  5530  001544  2416               	addwf	___flmul@a+3,w,c
  5531  001546  6E20               	movwf	___flmul@aexp,c
  5532  001548  BE15               	btfsc	___flmul@a+2,7,c
  5533  00154A  8020               	bsf	___flmul@aexp,0,c
  5534  00154C  5020               	movf	___flmul@aexp,w,c
  5535  00154E  B4D8               	btfsc	status,2,c
  5536  001550  D00D               	goto	l2567
  5537  001552  2820               	incf	___flmul@aexp,w,c
  5538  001554  A4D8               	btfss	status,2,c
  5539  001556  D008               	goto	l2565
  5540  001558  0E00               	movlw	0
  5541  00155A  6E13               	movwf	___flmul@a,c
  5542  00155C  0E00               	movlw	0
  5543  00155E  6E14               	movwf	___flmul@a+1,c
  5544  001560  0E00               	movlw	0
  5545  001562  6E15               	movwf	___flmul@a+2,c
  5546  001564  0E00               	movlw	0
  5547  001566  6E16               	movwf	___flmul@a+3,c
  5548  001568                     l2565:
  5549  001568  8E15               	bsf	___flmul@a+2,7,c
  5550  00156A  D008               	goto	l847
  5551  00156C                     l2567:
  5552  00156C  0E00               	movlw	0
  5553  00156E  6E13               	movwf	___flmul@a,c
  5554  001570  0E00               	movlw	0
  5555  001572  6E14               	movwf	___flmul@a+1,c
  5556  001574  0E00               	movlw	0
  5557  001576  6E15               	movwf	___flmul@a+2,c
  5558  001578  0E00               	movlw	0
  5559  00157A  6E16               	movwf	___flmul@a+3,c
  5560  00157C                     l847:
  5561  00157C  5020               	movf	___flmul@aexp,w,c
  5562  00157E  B4D8               	btfsc	status,2,c
  5563  001580  D003               	goto	l2571
  5564  001582  5021               	movf	___flmul@bexp,w,c
  5565  001584  A4D8               	btfss	status,2,c
  5566  001586  D009               	goto	l2575
  5567  001588                     l2571:
  5568  001588  0E00               	movlw	0
  5569  00158A  6E0F               	movwf	?___flmul,c
  5570  00158C  0E00               	movlw	0
  5571  00158E  6E10               	movwf	?___flmul+1,c
  5572  001590  0E00               	movlw	0
  5573  001592  6E11               	movwf	?___flmul+2,c
  5574  001594  0E00               	movlw	0
  5575  001596  6E12               	movwf	?___flmul+3,c
  5576  001598  0012               	return	
  5577  00159A                     l2575:
  5578  00159A  5015               	movf	___flmul@a+2,w,c
  5579  00159C  020F               	mulwf	___flmul@b,c
  5580  00159E  CFF3 F026          	movff	prodl,___flmul@temp
  5581  0015A2  CFF4 F027          	movff	prodh,___flmul@temp+1
  5582  0015A6  5026               	movf	___flmul@temp,w,c
  5583  0015A8  6E1C               	movwf	___flmul@grs,c
  5584  0015AA  6A1D               	clrf	___flmul@grs+1,c
  5585  0015AC  6A1E               	clrf	___flmul@grs+2,c
  5586  0015AE  6A1F               	clrf	___flmul@grs+3,c
  5587  0015B0  5027               	movf	___flmul@temp+1,w,c
  5588  0015B2  6E22               	movwf	___flmul@prod,c
  5589  0015B4  6A23               	clrf	___flmul@prod+1,c
  5590  0015B6  6A24               	clrf	___flmul@prod+2,c
  5591  0015B8  6A25               	clrf	___flmul@prod+3,c
  5592  0015BA  5014               	movf	___flmul@a+1,w,c
  5593  0015BC  0210               	mulwf	___flmul@b+1,c
  5594  0015BE  CFF3 F026          	movff	prodl,___flmul@temp
  5595  0015C2  CFF4 F027          	movff	prodh,___flmul@temp+1
  5596  0015C6  5026               	movf	___flmul@temp,w,c
  5597  0015C8  261C               	addwf	___flmul@grs,f,c
  5598  0015CA  0E00               	movlw	0
  5599  0015CC  221D               	addwfc	___flmul@grs+1,f,c
  5600  0015CE  221E               	addwfc	___flmul@grs+2,f,c
  5601  0015D0  221F               	addwfc	___flmul@grs+3,f,c
  5602  0015D2  5027               	movf	___flmul@temp+1,w,c
  5603  0015D4  2622               	addwf	___flmul@prod,f,c
  5604  0015D6  0E00               	movlw	0
  5605  0015D8  2223               	addwfc	___flmul@prod+1,f,c
  5606  0015DA  2224               	addwfc	___flmul@prod+2,f,c
  5607  0015DC  2225               	addwfc	___flmul@prod+3,f,c
  5608  0015DE  5013               	movf	___flmul@a,w,c
  5609  0015E0  0211               	mulwf	___flmul@b+2,c
  5610  0015E2  CFF3 F026          	movff	prodl,___flmul@temp
  5611  0015E6  CFF4 F027          	movff	prodh,___flmul@temp+1
  5612  0015EA  5026               	movf	___flmul@temp,w,c
  5613  0015EC  261C               	addwf	___flmul@grs,f,c
  5614  0015EE  0E00               	movlw	0
  5615  0015F0  221D               	addwfc	___flmul@grs+1,f,c
  5616  0015F2  221E               	addwfc	___flmul@grs+2,f,c
  5617  0015F4  221F               	addwfc	___flmul@grs+3,f,c
  5618  0015F6  5027               	movf	___flmul@temp+1,w,c
  5619  0015F8  2622               	addwf	___flmul@prod,f,c
  5620  0015FA  0E00               	movlw	0
  5621  0015FC  2223               	addwfc	___flmul@prod+1,f,c
  5622  0015FE  2224               	addwfc	___flmul@prod+2,f,c
  5623  001600  2225               	addwfc	___flmul@prod+3,f,c
  5624  001602  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5625  001606  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5626  00160A  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5627  00160E  6A1C               	clrf	___flmul@grs,c
  5628  001610  5013               	movf	___flmul@a,w,c
  5629  001612  0210               	mulwf	___flmul@b+1,c
  5630  001614  CFF3 F026          	movff	prodl,___flmul@temp
  5631  001618  CFF4 F027          	movff	prodh,___flmul@temp+1
  5632  00161C  5026               	movf	___flmul@temp,w,c
  5633  00161E  261C               	addwf	___flmul@grs,f,c
  5634  001620  5027               	movf	___flmul@temp+1,w,c
  5635  001622  221D               	addwfc	___flmul@grs+1,f,c
  5636  001624  0E00               	movlw	0
  5637  001626  221E               	addwfc	___flmul@grs+2,f,c
  5638  001628  0E00               	movlw	0
  5639  00162A  221F               	addwfc	___flmul@grs+3,f,c
  5640  00162C  5014               	movf	___flmul@a+1,w,c
  5641  00162E  020F               	mulwf	___flmul@b,c
  5642  001630  CFF3 F026          	movff	prodl,___flmul@temp
  5643  001634  CFF4 F027          	movff	prodh,___flmul@temp+1
  5644  001638  5026               	movf	___flmul@temp,w,c
  5645  00163A  261C               	addwf	___flmul@grs,f,c
  5646  00163C  5027               	movf	___flmul@temp+1,w,c
  5647  00163E  221D               	addwfc	___flmul@grs+1,f,c
  5648  001640  0E00               	movlw	0
  5649  001642  221E               	addwfc	___flmul@grs+2,f,c
  5650  001644  0E00               	movlw	0
  5651  001646  221F               	addwfc	___flmul@grs+3,f,c
  5652  001648  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5653  00164C  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5654  001650  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5655  001654  6A1C               	clrf	___flmul@grs,c
  5656  001656  5013               	movf	___flmul@a,w,c
  5657  001658  020F               	mulwf	___flmul@b,c
  5658  00165A  CFF3 F026          	movff	prodl,___flmul@temp
  5659  00165E  CFF4 F027          	movff	prodh,___flmul@temp+1
  5660  001662  5026               	movf	___flmul@temp,w,c
  5661  001664  261C               	addwf	___flmul@grs,f,c
  5662  001666  5027               	movf	___flmul@temp+1,w,c
  5663  001668  221D               	addwfc	___flmul@grs+1,f,c
  5664  00166A  0E00               	movlw	0
  5665  00166C  221E               	addwfc	___flmul@grs+2,f,c
  5666  00166E  0E00               	movlw	0
  5667  001670  221F               	addwfc	___flmul@grs+3,f,c
  5668  001672  5015               	movf	___flmul@a+2,w,c
  5669  001674  0210               	mulwf	___flmul@b+1,c
  5670  001676  CFF3 F026          	movff	prodl,___flmul@temp
  5671  00167A  CFF4 F027          	movff	prodh,___flmul@temp+1
  5672  00167E  5026               	movf	___flmul@temp,w,c
  5673  001680  2622               	addwf	___flmul@prod,f,c
  5674  001682  5027               	movf	___flmul@temp+1,w,c
  5675  001684  2223               	addwfc	___flmul@prod+1,f,c
  5676  001686  0E00               	movlw	0
  5677  001688  2224               	addwfc	___flmul@prod+2,f,c
  5678  00168A  0E00               	movlw	0
  5679  00168C  2225               	addwfc	___flmul@prod+3,f,c
  5680  00168E  5014               	movf	___flmul@a+1,w,c
  5681  001690  0211               	mulwf	___flmul@b+2,c
  5682  001692  CFF3 F026          	movff	prodl,___flmul@temp
  5683  001696  CFF4 F027          	movff	prodh,___flmul@temp+1
  5684  00169A  5026               	movf	___flmul@temp,w,c
  5685  00169C  2622               	addwf	___flmul@prod,f,c
  5686  00169E  5027               	movf	___flmul@temp+1,w,c
  5687  0016A0  2223               	addwfc	___flmul@prod+1,f,c
  5688  0016A2  0E00               	movlw	0
  5689  0016A4  2224               	addwfc	___flmul@prod+2,f,c
  5690  0016A6  0E00               	movlw	0
  5691  0016A8  2225               	addwfc	___flmul@prod+3,f,c
  5692  0016AA  5015               	movf	___flmul@a+2,w,c
  5693  0016AC  0211               	mulwf	___flmul@b+2,c
  5694  0016AE  CFF3 F026          	movff	prodl,___flmul@temp
  5695  0016B2  CFF4 F027          	movff	prodh,___flmul@temp+1
  5696  0016B6  5026               	movf	___flmul@temp,w,c
  5697  0016B8  6E17               	movwf	??___flmul& (0+255),c
  5698  0016BA  5027               	movf	___flmul@temp+1,w,c
  5699  0016BC  6E18               	movwf	(??___flmul+1)& (0+255),c
  5700  0016BE  6A19               	clrf	(??___flmul+2)& (0+255),c
  5701  0016C0  6A1A               	clrf	(??___flmul+3)& (0+255),c
  5702  0016C2  C019  F01A         	movff	??___flmul+2,??___flmul+3
  5703  0016C6  C018  F019         	movff	??___flmul+1,??___flmul+2
  5704  0016CA  C017  F018         	movff	??___flmul,??___flmul+1
  5705  0016CE  6A17               	clrf	??___flmul,c
  5706  0016D0  5017               	movf	??___flmul,w,c
  5707  0016D2  2622               	addwf	___flmul@prod,f,c
  5708  0016D4  5018               	movf	??___flmul+1,w,c
  5709  0016D6  2223               	addwfc	___flmul@prod+1,f,c
  5710  0016D8  5019               	movf	??___flmul+2,w,c
  5711  0016DA  2224               	addwfc	___flmul@prod+2,f,c
  5712  0016DC  501A               	movf	??___flmul+3,w,c
  5713  0016DE  2225               	addwfc	___flmul@prod+3,f,c
  5714  0016E0  C01C  F017         	movff	___flmul@grs,??___flmul
  5715  0016E4  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  5716  0016E8  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  5717  0016EC  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  5718  0016F0  0E19               	movlw	25
  5719  0016F2  D005               	goto	u2550
  5720  0016F4                     u2555:
  5721  0016F4  90D8               	bcf	status,0,c
  5722  0016F6  321A               	rrcf	??___flmul+3,f,c
  5723  0016F8  3219               	rrcf	??___flmul+2,f,c
  5724  0016FA  3218               	rrcf	??___flmul+1,f,c
  5725  0016FC  3217               	rrcf	??___flmul,f,c
  5726  0016FE                     u2550:
  5727  0016FE  2EE8               	decfsz	wreg,f,c
  5728  001700  D7F9               	goto	u2555
  5729  001702  5017               	movf	??___flmul,w,c
  5730  001704  2622               	addwf	___flmul@prod,f,c
  5731  001706  5018               	movf	??___flmul+1,w,c
  5732  001708  2223               	addwfc	___flmul@prod+1,f,c
  5733  00170A  5019               	movf	??___flmul+2,w,c
  5734  00170C  2224               	addwfc	___flmul@prod+2,f,c
  5735  00170E  501A               	movf	??___flmul+3,w,c
  5736  001710  2225               	addwfc	___flmul@prod+3,f,c
  5737  001712  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5738  001716  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5739  00171A  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5740  00171E  6A1C               	clrf	___flmul@grs,c
  5741  001720  5020               	movf	___flmul@aexp,w,c
  5742  001722  C021  F017         	movff	___flmul@bexp,??___flmul
  5743  001726  6A18               	clrf	(??___flmul+1)& (0+255),c
  5744  001728  2617               	addwf	??___flmul,f,c
  5745  00172A  0E00               	movlw	0
  5746  00172C  2218               	addwfc	??___flmul+1,f,c
  5747  00172E  0E82               	movlw	130
  5748  001730  2417               	addwf	??___flmul,w,c
  5749  001732  6E26               	movwf	___flmul@temp,c
  5750  001734  0EFF               	movlw	255
  5751  001736  2018               	addwfc	??___flmul+1,w,c
  5752  001738  6E27               	movwf	___flmul@temp+1,c
  5753  00173A  D00F               	goto	l2623
  5754  00173C                     l2617:
  5755  00173C  90D8               	bcf	status,0,c
  5756  00173E  3622               	rlcf	___flmul@prod,f,c
  5757  001740  3623               	rlcf	___flmul@prod+1,f,c
  5758  001742  3624               	rlcf	___flmul@prod+2,f,c
  5759  001744  3625               	rlcf	___flmul@prod+3,f,c
  5760  001746  BE1F               	btfsc	___flmul@grs+3,7,c
  5761  001748  8022               	bsf	___flmul@prod,0,c
  5762  00174A  90D8               	bcf	status,0,c
  5763  00174C  361C               	rlcf	___flmul@grs,f,c
  5764  00174E  361D               	rlcf	___flmul@grs+1,f,c
  5765  001750  361E               	rlcf	___flmul@grs+2,f,c
  5766  001752  361F               	rlcf	___flmul@grs+3,f,c
  5767  001754  0626               	decf	___flmul@temp,f,c
  5768  001756  A0D8               	btfss	status,0,c
  5769  001758  0627               	decf	___flmul@temp+1,f,c
  5770  00175A                     l2623:
  5771  00175A  AE24               	btfss	___flmul@prod+2,7,c
  5772  00175C  D7EF               	goto	l2617
  5773  00175E  0E00               	movlw	0
  5774  001760  6E20               	movwf	___flmul@aexp,c
  5775  001762  AE1F               	btfss	___flmul@grs+3,7,c
  5776  001764  D016               	goto	l856
  5777  001766  0EFF               	movlw	255
  5778  001768  141C               	andwf	___flmul@grs,w,c
  5779  00176A  6E17               	movwf	??___flmul& (0+255),c
  5780  00176C  0EFF               	movlw	255
  5781  00176E  141D               	andwf	___flmul@grs+1,w,c
  5782  001770  6E18               	movwf	(??___flmul+1)& (0+255),c
  5783  001772  0EFF               	movlw	255
  5784  001774  141E               	andwf	___flmul@grs+2,w,c
  5785  001776  6E19               	movwf	(??___flmul+2)& (0+255),c
  5786  001778  0E7F               	movlw	127
  5787  00177A  141F               	andwf	___flmul@grs+3,w,c
  5788  00177C  6E1A               	movwf	(??___flmul+3)& (0+255),c
  5789  00177E  5017               	movf	??___flmul,w,c
  5790  001780  1018               	iorwf	??___flmul+1,w,c
  5791  001782  1019               	iorwf	??___flmul+2,w,c
  5792  001784  101A               	iorwf	??___flmul+3,w,c
  5793  001786  A4D8               	btfss	status,2,c
  5794  001788  D002               	goto	l2633
  5795  00178A  A022               	btfss	___flmul@prod,0,c
  5796  00178C  D002               	goto	l856
  5797  00178E                     l2633:
  5798  00178E  0E01               	movlw	1
  5799  001790  6E20               	movwf	___flmul@aexp,c
  5800  001792                     l856:
  5801  001792  5020               	movf	___flmul@aexp,w,c
  5802  001794  B4D8               	btfsc	status,2,c
  5803  001796  D01F               	goto	l2643
  5804  001798  0E01               	movlw	1
  5805  00179A  2622               	addwf	___flmul@prod,f,c
  5806  00179C  0E00               	movlw	0
  5807  00179E  2223               	addwfc	___flmul@prod+1,f,c
  5808  0017A0  2224               	addwfc	___flmul@prod+2,f,c
  5809  0017A2  2225               	addwfc	___flmul@prod+3,f,c
  5810  0017A4  A025               	btfss	___flmul@prod+3,0,c
  5811  0017A6  D017               	goto	l2643
  5812  0017A8  C022  F017         	movff	___flmul@prod,??___flmul
  5813  0017AC  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  5814  0017B0  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  5815  0017B4  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  5816  0017B8  341A               	rlcf	??___flmul+3,w,c
  5817  0017BA  321A               	rrcf	??___flmul+3,f,c
  5818  0017BC  3219               	rrcf	??___flmul+2,f,c
  5819  0017BE  3218               	rrcf	??___flmul+1,f,c
  5820  0017C0  3217               	rrcf	??___flmul,f,c
  5821  0017C2  C017  F022         	movff	??___flmul,___flmul@prod
  5822  0017C6  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  5823  0017CA  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  5824  0017CE  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  5825  0017D2  4A26               	infsnz	___flmul@temp,f,c
  5826  0017D4  2A27               	incf	___flmul@temp+1,f,c
  5827  0017D6                     l2643:
  5828  0017D6  BE27               	btfsc	___flmul@temp+1,7,c
  5829  0017D8  D00D               	goto	l2647
  5830  0017DA  5027               	movf	___flmul@temp+1,w,c
  5831  0017DC  E103               	bnz	u2630
  5832  0017DE  2826               	incf	___flmul@temp,w,c
  5833  0017E0  A0D8               	btfss	status,0,c
  5834  0017E2  D008               	goto	l2647
  5835  0017E4                     u2630:
  5836  0017E4  0E00               	movlw	0
  5837  0017E6  6E22               	movwf	___flmul@prod,c
  5838  0017E8  0E00               	movlw	0
  5839  0017EA  6E23               	movwf	___flmul@prod+1,c
  5840  0017EC  0E80               	movlw	128
  5841  0017EE  6E24               	movwf	___flmul@prod+2,c
  5842  0017F0  0E7F               	movlw	127
  5843  0017F2  D020               	goto	L9
  5844  0017F4                     l2647:
  5845  0017F4  BE27               	btfsc	___flmul@temp+1,7,c
  5846  0017F6  D005               	goto	l2649
  5847  0017F8  5027               	movf	___flmul@temp+1,w,c
  5848  0017FA  E10E               	bnz	l864
  5849  0017FC  0426               	decf	___flmul@temp,w,c
  5850  0017FE  B0D8               	btfsc	status,0,c
  5851  001800  D00B               	goto	l864
  5852  001802                     l2649:
  5853  001802  0E00               	movlw	0
  5854  001804  6E22               	movwf	___flmul@prod,c
  5855  001806  0E00               	movlw	0
  5856  001808  6E23               	movwf	___flmul@prod+1,c
  5857  00180A  0E00               	movlw	0
  5858  00180C  6E24               	movwf	___flmul@prod+2,c
  5859  00180E  0E00               	movlw	0
  5860  001810  6E25               	movwf	___flmul@prod+3,c
  5861  001812  0E00               	movlw	0
  5862  001814  6E1B               	movwf	___flmul@sign,c
  5863  001816  D00F               	goto	l2659
  5864  001818                     l864:
  5865  001818  C026  F021         	movff	___flmul@temp,___flmul@bexp
  5866  00181C  0EFF               	movlw	255
  5867  00181E  1622               	andwf	___flmul@prod,f,c
  5868  001820  0EFF               	movlw	255
  5869  001822  1623               	andwf	___flmul@prod+1,f,c
  5870  001824  0E7F               	movlw	127
  5871  001826  1624               	andwf	___flmul@prod+2,f,c
  5872  001828  0E00               	movlw	0
  5873  00182A  1625               	andwf	___flmul@prod+3,f,c
  5874  00182C  B021               	btfsc	___flmul@bexp,0,c
  5875  00182E  8E24               	bsf	___flmul@prod+2,7,c
  5876  001830  90D8               	bcf	status,0,c
  5877  001832  3021               	rrcf	___flmul@bexp,w,c
  5878  001834                     L9:
  5879  001834  6E25               	movwf	___flmul@prod+3,c
  5880  001836                     l2659:
  5881  001836  501B               	movf	___flmul@sign,w,c
  5882  001838  1225               	iorwf	___flmul@prod+3,f,c
  5883  00183A  C022  F00F         	movff	___flmul@prod,?___flmul
  5884  00183E  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  5885  001842  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  5886  001846  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  5887  00184A  0012               	return	
  5888  00184C                     __end_of___flmul:
  5889                           	opt stack 0
  5890                           tblptru	equ	0xFF8
  5891                           tblptrh	equ	0xFF7
  5892                           tblptrl	equ	0xFF6
  5893                           tablat	equ	0xFF5
  5894                           prodh	equ	0xFF4
  5895                           prodl	equ	0xFF3
  5896                           postinc0	equ	0xFEE
  5897                           wreg	equ	0xFE8
  5898                           indf2	equ	0xFDF
  5899                           postinc2	equ	0xFDE
  5900                           postdec2	equ	0xFDD
  5901                           fsr2h	equ	0xFDA
  5902                           fsr2l	equ	0xFD9
  5903                           status	equ	0xFD8
  5904                           
  5905 ;; *************** function ___awdiv *****************
  5906 ;; Defined at:
  5907 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\awdiv.c"
  5908 ;; Parameters:    Size  Location     Type
  5909 ;;  dividend        2    6[COMRAM] int 
  5910 ;;  divisor         2    8[COMRAM] int 
  5911 ;; Auto vars:     Size  Location     Type
  5912 ;;  quotient        2   12[COMRAM] int 
  5913 ;;  sign            1   11[COMRAM] unsigned char 
  5914 ;;  counter         1   10[COMRAM] unsigned char 
  5915 ;; Return value:  Size  Location     Type
  5916 ;;                  2    6[COMRAM] int 
  5917 ;; Registers used:
  5918 ;;		wreg, status,2, status,0
  5919 ;; Tracked objects:
  5920 ;;		On entry : 0/0
  5921 ;;		On exit  : 0/0
  5922 ;;		Unchanged: 0/0
  5923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5924 ;;      Params:         4       0       0       0       0       0       0       0       0
  5925 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5926 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5927 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5928 ;;Total ram usage:        8 bytes
  5929 ;; Hardware stack levels used:    1
  5930 ;; This function calls:
  5931 ;;		Nothing
  5932 ;; This function is called by:
  5933 ;;		_read_adc
  5934 ;;		_fround
  5935 ;;		_scale
  5936 ;;		_sprintf
  5937 ;; This function uses a non-reentrant model
  5938 ;;
  5939                           
  5940                           	psect	text19
  5941  002A86                     __ptext19:
  5942                           	opt stack 0
  5943  002A86                     ___awdiv:
  5944                           	opt stack 27
  5945                           
  5946                           ;incstack = 0
  5947  002A86  0E00               	movlw	0
  5948  002A88  6E0C               	movwf	___awdiv@sign,c
  5949  002A8A  AE0A               	btfss	___awdiv@divisor+1,7,c
  5950  002A8C  D006               	goto	l2673
  5951  002A8E  6C09               	negf	___awdiv@divisor,c
  5952  002A90  1E0A               	comf	___awdiv@divisor+1,f,c
  5953  002A92  B0D8               	btfsc	status,0,c
  5954  002A94  2A0A               	incf	___awdiv@divisor+1,f,c
  5955  002A96  0E01               	movlw	1
  5956  002A98  6E0C               	movwf	___awdiv@sign,c
  5957  002A9A                     l2673:
  5958  002A9A  AE08               	btfss	___awdiv@dividend+1,7,c
  5959  002A9C  D006               	goto	l2679
  5960  002A9E  6C07               	negf	___awdiv@dividend,c
  5961  002AA0  1E08               	comf	___awdiv@dividend+1,f,c
  5962  002AA2  B0D8               	btfsc	status,0,c
  5963  002AA4  2A08               	incf	___awdiv@dividend+1,f,c
  5964  002AA6  0E01               	movlw	1
  5965  002AA8  1A0C               	xorwf	___awdiv@sign,f,c
  5966  002AAA                     l2679:
  5967  002AAA  0E00               	movlw	0
  5968  002AAC  6E0E               	movwf	___awdiv@quotient+1,c
  5969  002AAE  0E00               	movlw	0
  5970  002AB0  6E0D               	movwf	___awdiv@quotient,c
  5971  002AB2  5009               	movf	___awdiv@divisor,w,c
  5972  002AB4  100A               	iorwf	___awdiv@divisor+1,w,c
  5973  002AB6  B4D8               	btfsc	status,2,c
  5974  002AB8  D01C               	goto	l2701
  5975  002ABA  0E01               	movlw	1
  5976  002ABC  6E0B               	movwf	___awdiv@counter,c
  5977  002ABE  D004               	goto	l2687
  5978  002AC0                     l2685:
  5979  002AC0  90D8               	bcf	status,0,c
  5980  002AC2  3609               	rlcf	___awdiv@divisor,f,c
  5981  002AC4  360A               	rlcf	___awdiv@divisor+1,f,c
  5982  002AC6  2A0B               	incf	___awdiv@counter,f,c
  5983  002AC8                     l2687:
  5984  002AC8  AE0A               	btfss	___awdiv@divisor+1,7,c
  5985  002ACA  D7FA               	goto	l2685
  5986  002ACC                     l2689:
  5987  002ACC  90D8               	bcf	status,0,c
  5988  002ACE  360D               	rlcf	___awdiv@quotient,f,c
  5989  002AD0  360E               	rlcf	___awdiv@quotient+1,f,c
  5990  002AD2  5009               	movf	___awdiv@divisor,w,c
  5991  002AD4  5C07               	subwf	___awdiv@dividend,w,c
  5992  002AD6  500A               	movf	___awdiv@divisor+1,w,c
  5993  002AD8  5808               	subwfb	___awdiv@dividend+1,w,c
  5994  002ADA  A0D8               	btfss	status,0,c
  5995  002ADC  D005               	goto	l2697
  5996  002ADE  5009               	movf	___awdiv@divisor,w,c
  5997  002AE0  5E07               	subwf	___awdiv@dividend,f,c
  5998  002AE2  500A               	movf	___awdiv@divisor+1,w,c
  5999  002AE4  5A08               	subwfb	___awdiv@dividend+1,f,c
  6000  002AE6  800D               	bsf	___awdiv@quotient,0,c
  6001  002AE8                     l2697:
  6002  002AE8  90D8               	bcf	status,0,c
  6003  002AEA  320A               	rrcf	___awdiv@divisor+1,f,c
  6004  002AEC  3209               	rrcf	___awdiv@divisor,f,c
  6005  002AEE  2E0B               	decfsz	___awdiv@counter,f,c
  6006  002AF0  D7ED               	goto	l2689
  6007  002AF2                     l2701:
  6008  002AF2  500C               	movf	___awdiv@sign,w,c
  6009  002AF4  B4D8               	btfsc	status,2,c
  6010  002AF6  D004               	goto	l2705
  6011  002AF8  6C0D               	negf	___awdiv@quotient,c
  6012  002AFA  1E0E               	comf	___awdiv@quotient+1,f,c
  6013  002AFC  B0D8               	btfsc	status,0,c
  6014  002AFE  2A0E               	incf	___awdiv@quotient+1,f,c
  6015  002B00                     l2705:
  6016  002B00  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  6017  002B04  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  6018  002B08  0012               	return	
  6019  002B0A                     __end_of___awdiv:
  6020                           	opt stack 0
  6021                           tblptru	equ	0xFF8
  6022                           tblptrh	equ	0xFF7
  6023                           tblptrl	equ	0xFF6
  6024                           tablat	equ	0xFF5
  6025                           prodh	equ	0xFF4
  6026                           prodl	equ	0xFF3
  6027                           postinc0	equ	0xFEE
  6028                           wreg	equ	0xFE8
  6029                           indf2	equ	0xFDF
  6030                           postinc2	equ	0xFDE
  6031                           postdec2	equ	0xFDD
  6032                           fsr2h	equ	0xFDA
  6033                           fsr2l	equ	0xFD9
  6034                           status	equ	0xFD8
  6035                           
  6036 ;; *************** function _LCD_write_string *****************
  6037 ;; Defined at:
  6038 ;;		line 194 in file "../../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  6039 ;; Parameters:    Size  Location     Type
  6040 ;;  buffer          2   17[COMRAM] PTR unsigned char 
  6041 ;;		 -> str(8), LCD_write_integer@convertedInt(6), 
  6042 ;; Auto vars:     Size  Location     Type
  6043 ;;		None
  6044 ;; Return value:  Size  Location     Type
  6045 ;;                  1    wreg      void 
  6046 ;; Registers used:
  6047 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6048 ;; Tracked objects:
  6049 ;;		On entry : 0/0
  6050 ;;		On exit  : 0/0
  6051 ;;		Unchanged: 0/0
  6052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6053 ;;      Params:         2       0       0       0       0       0       0       0       0
  6054 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6055 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6056 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6057 ;;Total ram usage:        2 bytes
  6058 ;; Hardware stack levels used:    1
  6059 ;; Hardware stack levels required when called:    5
  6060 ;; This function calls:
  6061 ;;		_LCD_write_char
  6062 ;; This function is called by:
  6063 ;;		_ricarica
  6064 ;;		_LCD_write_integer
  6065 ;; This function uses a non-reentrant model
  6066 ;;
  6067                           
  6068                           	psect	text20
  6069  002F36                     __ptext20:
  6070                           	opt stack 0
  6071  002F36                     _LCD_write_string:
  6072                           	opt stack 24
  6073                           
  6074                           ;src\LCD_44780.c: 197: while(*buffer){
  6075                           
  6076                           ;incstack = 0
  6077  002F36  D009               	goto	l3143
  6078  002F38                     l3139:
  6079                           
  6080                           ;src\LCD_44780.c: 200: LCD_write_char(*buffer);
  6081  002F38  C012  FFD9         	movff	LCD_write_string@buffer,fsr2l
  6082  002F3C  C013  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
  6083  002F40  50DF               	movf	indf2,w,c
  6084  002F42  ECFE  F015         	call	_LCD_write_char
  6085                           
  6086                           ;src\LCD_44780.c: 202: buffer++;
  6087  002F46  4A12               	infsnz	LCD_write_string@buffer,f,c
  6088  002F48  2A13               	incf	LCD_write_string@buffer+1,f,c
  6089  002F4A                     l3143:
  6090  002F4A  C012  FFD9         	movff	LCD_write_string@buffer,fsr2l
  6091  002F4E  C013  FFDA         	movff	LCD_write_string@buffer+1,fsr2h
  6092  002F52  50DF               	movf	indf2,w,c
  6093  002F54  B4D8               	btfsc	status,2,c
  6094  002F56  0012               	return	
  6095  002F58  D7EF               	goto	l3139
  6096  002F5A                     __end_of_LCD_write_string:
  6097                           	opt stack 0
  6098                           tblptru	equ	0xFF8
  6099                           tblptrh	equ	0xFF7
  6100                           tblptrl	equ	0xFF6
  6101                           tablat	equ	0xFF5
  6102                           prodh	equ	0xFF4
  6103                           prodl	equ	0xFF3
  6104                           postinc0	equ	0xFEE
  6105                           wreg	equ	0xFE8
  6106                           indf2	equ	0xFDF
  6107                           postinc2	equ	0xFDE
  6108                           postdec2	equ	0xFDD
  6109                           fsr2h	equ	0xFDA
  6110                           fsr2l	equ	0xFD9
  6111                           status	equ	0xFD8
  6112                           
  6113 ;; *************** function _LCD_goto_line *****************
  6114 ;; Defined at:
  6115 ;;		line 111 in file "../../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  6116 ;; Parameters:    Size  Location     Type
  6117 ;;  line            1    wreg     unsigned char 
  6118 ;; Auto vars:     Size  Location     Type
  6119 ;;  line            1   12[COMRAM] unsigned char 
  6120 ;; Return value:  Size  Location     Type
  6121 ;;                  1    wreg      void 
  6122 ;; Registers used:
  6123 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6124 ;; Tracked objects:
  6125 ;;		On entry : 0/0
  6126 ;;		On exit  : 0/0
  6127 ;;		Unchanged: 0/0
  6128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6129 ;;      Params:         0       0       0       0       0       0       0       0       0
  6130 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6131 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6132 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6133 ;;Total ram usage:        1 bytes
  6134 ;; Hardware stack levels used:    1
  6135 ;; Hardware stack levels required when called:    4
  6136 ;; This function calls:
  6137 ;;		_LCD_send_command
  6138 ;; This function is called by:
  6139 ;;		_ricarica
  6140 ;;		_LCD_goto_xy
  6141 ;; This function uses a non-reentrant model
  6142 ;;
  6143                           
  6144                           	psect	text21
  6145  0029CE                     __ptext21:
  6146                           	opt stack 0
  6147  0029CE                     _LCD_goto_line:
  6148                           	opt stack 25
  6149                           
  6150                           ;incstack = 0
  6151                           ;LCD_goto_line@line stored from wreg
  6152  0029CE  6E0D               	movwf	LCD_goto_line@line,c
  6153                           
  6154                           ;src\LCD_44780.c: 113: switch(line) {
  6155  0029D0  D04C               	goto	l3127
  6156  0029D2                     l3119:
  6157  0029D2  0E00               	movlw	0
  6158  0029D4  6E09               	movwf	LCD_send_command@D2,c
  6159  0029D6  0E00               	movlw	0
  6160  0029D8  6E0A               	movwf	LCD_send_command@D1,c
  6161  0029DA  0E00               	movlw	0
  6162  0029DC  6E0B               	movwf	LCD_send_command@D0,c
  6163  0029DE  0E01               	movlw	1
  6164  0029E0  EC1D  F017         	call	_LCD_send_command
  6165                           
  6166                           ;src\LCD_44780.c: 116: LCD_send_command(0,0,0,0);
  6167  0029E4  0E00               	movlw	0
  6168  0029E6  6E09               	movwf	LCD_send_command@D2,c
  6169  0029E8  0E00               	movlw	0
  6170  0029EA  6E0A               	movwf	LCD_send_command@D1,c
  6171  0029EC  0E00               	movlw	0
  6172  0029EE  6E0B               	movwf	LCD_send_command@D0,c
  6173  0029F0  0E00               	movlw	0
  6174  0029F2  EC1D  F017         	call	_LCD_send_command
  6175                           
  6176                           ;src\LCD_44780.c: 117: break;
  6177  0029F6  0012               	return	
  6178  0029F8                     l3121:
  6179  0029F8  0E01               	movlw	1
  6180  0029FA  6E09               	movwf	LCD_send_command@D2,c
  6181  0029FC  0E00               	movlw	0
  6182  0029FE  6E0A               	movwf	LCD_send_command@D1,c
  6183  002A00  0E00               	movlw	0
  6184  002A02  6E0B               	movwf	LCD_send_command@D0,c
  6185  002A04  0E01               	movlw	1
  6186  002A06  EC1D  F017         	call	_LCD_send_command
  6187                           
  6188                           ;src\LCD_44780.c: 120: LCD_send_command(0,0,0,0);
  6189  002A0A  0E00               	movlw	0
  6190  002A0C  6E09               	movwf	LCD_send_command@D2,c
  6191  002A0E  0E00               	movlw	0
  6192  002A10  6E0A               	movwf	LCD_send_command@D1,c
  6193  002A12  0E00               	movlw	0
  6194  002A14  6E0B               	movwf	LCD_send_command@D0,c
  6195  002A16  0E00               	movlw	0
  6196  002A18  EC1D  F017         	call	_LCD_send_command
  6197                           
  6198                           ;src\LCD_44780.c: 121: break;
  6199  002A1C  0012               	return	
  6200  002A1E                     l3123:
  6201  002A1E  0E00               	movlw	0
  6202  002A20  6E09               	movwf	LCD_send_command@D2,c
  6203  002A22  0E00               	movlw	0
  6204  002A24  6E0A               	movwf	LCD_send_command@D1,c
  6205  002A26  0E01               	movlw	1
  6206  002A28  6E0B               	movwf	LCD_send_command@D0,c
  6207  002A2A  0E01               	movlw	1
  6208  002A2C  EC1D  F017         	call	_LCD_send_command
  6209                           
  6210                           ;src\LCD_44780.c: 124: LCD_send_command(0,1,0,0);
  6211  002A30  0E01               	movlw	1
  6212  002A32  6E09               	movwf	LCD_send_command@D2,c
  6213  002A34  0E00               	movlw	0
  6214  002A36  6E0A               	movwf	LCD_send_command@D1,c
  6215  002A38  0E00               	movlw	0
  6216  002A3A  6E0B               	movwf	LCD_send_command@D0,c
  6217  002A3C  0E00               	movlw	0
  6218  002A3E  EC1D  F017         	call	_LCD_send_command
  6219                           
  6220                           ;src\LCD_44780.c: 125: break;
  6221  002A42  0012               	return	
  6222  002A44                     l3125:
  6223  002A44  0E01               	movlw	1
  6224  002A46  6E09               	movwf	LCD_send_command@D2,c
  6225  002A48  0E00               	movlw	0
  6226  002A4A  6E0A               	movwf	LCD_send_command@D1,c
  6227  002A4C  0E01               	movlw	1
  6228  002A4E  6E0B               	movwf	LCD_send_command@D0,c
  6229  002A50  0E01               	movlw	1
  6230  002A52  EC1D  F017         	call	_LCD_send_command
  6231                           
  6232                           ;src\LCD_44780.c: 128: LCD_send_command(0,1,0,0);
  6233  002A56  0E01               	movlw	1
  6234  002A58  6E09               	movwf	LCD_send_command@D2,c
  6235  002A5A  0E00               	movlw	0
  6236  002A5C  6E0A               	movwf	LCD_send_command@D1,c
  6237  002A5E  0E00               	movlw	0
  6238  002A60  6E0B               	movwf	LCD_send_command@D0,c
  6239  002A62  0E00               	movlw	0
  6240  002A64  EC1D  F017         	call	_LCD_send_command
  6241                           
  6242                           ;src\LCD_44780.c: 129: }
  6243  002A68  0012               	return	
  6244  002A6A                     l3127:
  6245  002A6A  500D               	movf	LCD_goto_line@line,w,c
  6246                           
  6247                           ; Switch size 1, requested type "space"
  6248                           ; Number of cases is 4, Range of values is 1 to 4
  6249                           ; switch strategies available:
  6250                           ; Name         Instructions Cycles
  6251                           ; simple_byte           13     7 (average)
  6252                           ;	Chosen strategy is simple_byte
  6253  002A6C  0A01               	xorlw	1	; case 1
  6254  002A6E  B4D8               	btfsc	status,2,c
  6255  002A70  D7B0               	goto	l3119
  6256  002A72  0A03               	xorlw	3	; case 2
  6257  002A74  B4D8               	btfsc	status,2,c
  6258  002A76  D7C0               	goto	l3121
  6259  002A78  0A01               	xorlw	1	; case 3
  6260  002A7A  B4D8               	btfsc	status,2,c
  6261  002A7C  D7D0               	goto	l3123
  6262  002A7E  0A07               	xorlw	7	; case 4
  6263  002A80  A4D8               	btfss	status,2,c
  6264  002A82  0012               	return	
  6265  002A84  D7DF               	goto	l3125
  6266  002A86                     __end_of_LCD_goto_line:
  6267                           	opt stack 0
  6268                           tblptru	equ	0xFF8
  6269                           tblptrh	equ	0xFF7
  6270                           tblptrl	equ	0xFF6
  6271                           tablat	equ	0xFF5
  6272                           prodh	equ	0xFF4
  6273                           prodl	equ	0xFF3
  6274                           postinc0	equ	0xFEE
  6275                           wreg	equ	0xFE8
  6276                           indf2	equ	0xFDF
  6277                           postinc2	equ	0xFDE
  6278                           postdec2	equ	0xFDD
  6279                           fsr2h	equ	0xFDA
  6280                           fsr2l	equ	0xFD9
  6281                           status	equ	0xFD8
  6282                           
  6283 ;; *************** function _inizializzazione *****************
  6284 ;; Defined at:
  6285 ;;		line 85 in file "tester.c"
  6286 ;; Parameters:    Size  Location     Type
  6287 ;;		None
  6288 ;; Auto vars:     Size  Location     Type
  6289 ;;		None
  6290 ;; Return value:  Size  Location     Type
  6291 ;;                  1    wreg      void 
  6292 ;; Registers used:
  6293 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6294 ;; Tracked objects:
  6295 ;;		On entry : 0/0
  6296 ;;		On exit  : 0/0
  6297 ;;		Unchanged: 0/0
  6298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6299 ;;      Params:         0       0       0       0       0       0       0       0       0
  6300 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6301 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6302 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6303 ;;Total ram usage:        0 bytes
  6304 ;; Hardware stack levels used:    1
  6305 ;; Hardware stack levels required when called:    6
  6306 ;; This function calls:
  6307 ;;		_LCD_clear
  6308 ;;		_LCD_initialize
  6309 ;;		_LCD_write_message
  6310 ;;		_delay_ms
  6311 ;; This function is called by:
  6312 ;;		_main
  6313 ;; This function uses a non-reentrant model
  6314 ;;
  6315                           
  6316                           	psect	text22
  6317  002D2A                     __ptext22:
  6318                           	opt stack 0
  6319  002D2A                     _inizializzazione:
  6320                           	opt stack 24
  6321                           
  6322                           ;tester.c: 86: LATA = 0x00;
  6323                           
  6324                           ;incstack = 0
  6325  002D2A  0E00               	movlw	0
  6326  002D2C  6E89               	movwf	3977,c	;volatile
  6327                           
  6328                           ;tester.c: 87: TRISA = 0b11111011;
  6329  002D2E  0EFB               	movlw	251
  6330  002D30  6E92               	movwf	3986,c	;volatile
  6331                           
  6332                           ;tester.c: 89: LATB = 0x00;
  6333  002D32  0E00               	movlw	0
  6334  002D34  6E8A               	movwf	3978,c	;volatile
  6335                           
  6336                           ;tester.c: 90: TRISB = 0b00;
  6337  002D36  0E00               	movlw	0
  6338  002D38  6E93               	movwf	3987,c	;volatile
  6339                           
  6340                           ;tester.c: 92: LATC = 0x00;
  6341  002D3A  0E00               	movlw	0
  6342  002D3C  6E8B               	movwf	3979,c	;volatile
  6343                           
  6344                           ;tester.c: 93: TRISC = 0b11011111;
  6345  002D3E  0EDF               	movlw	223
  6346  002D40  6E94               	movwf	3988,c	;volatile
  6347                           
  6348                           ;tester.c: 95: LCD_initialize(16);
  6349  002D42  0E10               	movlw	16
  6350  002D44  EC7F  F013         	call	_LCD_initialize
  6351                           
  6352                           ;tester.c: 96: LCD_write_message("inizializzazione");
  6353  002D48  0EB3               	movlw	low STR_5
  6354  002D4A  6E12               	movwf	LCD_write_message@buffer,c
  6355  002D4C  0E08               	movlw	high STR_5
  6356  002D4E  6E13               	movwf	LCD_write_message@buffer+1,c
  6357  002D50  EC4C  F017         	call	_LCD_write_message	;wreg free
  6358                           
  6359                           ;tester.c: 97: delay_ms(1000);
  6360  002D54  0E03               	movlw	3
  6361  002D56  6E08               	movwf	delay_ms@value_ms+1,c
  6362  002D58  0EE8               	movlw	232
  6363  002D5A  6E07               	movwf	delay_ms@value_ms,c
  6364  002D5C  EC04  F017         	call	_delay_ms	;wreg free
  6365                           
  6366                           ;tester.c: 98: LCD_clear();
  6367  002D60  EC75  F017         	call	_LCD_clear	;wreg free
  6368                           
  6369                           ;tester.c: 100: ADCON0 = 0b00000000;
  6370  002D64  0E00               	movlw	0
  6371  002D66  6EC2               	movwf	4034,c	;volatile
  6372                           
  6373                           ;tester.c: 101: ADCON1 = 0b00001011;
  6374  002D68  0E0B               	movlw	11
  6375  002D6A  6EC1               	movwf	4033,c	;volatile
  6376                           
  6377                           ;tester.c: 102: ADCON2 = 0b10110010;
  6378  002D6C  0EB2               	movlw	178
  6379  002D6E  6EC0               	movwf	4032,c	;volatile
  6380                           
  6381                           ;tester.c: 103: ADCON0bits.CHS3 = 0;
  6382  002D70  9AC2               	bcf	4034,5,c	;volatile
  6383                           
  6384                           ;tester.c: 104: ADCON0bits.CHS2 = 0;
  6385  002D72  98C2               	bcf	4034,4,c	;volatile
  6386                           
  6387                           ;tester.c: 105: ADCON0bits.CHS1 = 0;
  6388  002D74  96C2               	bcf	4034,3,c	;volatile
  6389  002D76  0012               	return		;funcret
  6390  002D78                     __end_of_inizializzazione:
  6391                           	opt stack 0
  6392                           tblptru	equ	0xFF8
  6393                           tblptrh	equ	0xFF7
  6394                           tblptrl	equ	0xFF6
  6395                           tablat	equ	0xFF5
  6396                           prodh	equ	0xFF4
  6397                           prodl	equ	0xFF3
  6398                           postinc0	equ	0xFEE
  6399                           wreg	equ	0xFE8
  6400                           indf2	equ	0xFDF
  6401                           postinc2	equ	0xFDE
  6402                           postdec2	equ	0xFDD
  6403                           fsr2h	equ	0xFDA
  6404                           fsr2l	equ	0xFD9
  6405                           status	equ	0xFD8
  6406                           
  6407 ;; *************** function _LCD_write_message *****************
  6408 ;; Defined at:
  6409 ;;		line 178 in file "../../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  6410 ;; Parameters:    Size  Location     Type
  6411 ;;  buffer          2   17[COMRAM] PTR const unsigned char 
  6412 ;;		 -> STR_5(17), STR_2(17), STR_1(17), 
  6413 ;; Auto vars:     Size  Location     Type
  6414 ;;		None
  6415 ;; Return value:  Size  Location     Type
  6416 ;;                  1    wreg      void 
  6417 ;; Registers used:
  6418 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6419 ;; Tracked objects:
  6420 ;;		On entry : 0/0
  6421 ;;		On exit  : 0/0
  6422 ;;		Unchanged: 0/0
  6423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6424 ;;      Params:         2       0       0       0       0       0       0       0       0
  6425 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6426 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6427 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6428 ;;Total ram usage:        2 bytes
  6429 ;; Hardware stack levels used:    1
  6430 ;; Hardware stack levels required when called:    5
  6431 ;; This function calls:
  6432 ;;		_LCD_write_char
  6433 ;; This function is called by:
  6434 ;;		_ricarica
  6435 ;;		_inizializzazione
  6436 ;; This function uses a non-reentrant model
  6437 ;;
  6438                           
  6439                           	psect	text23
  6440  002E98                     __ptext23:
  6441                           	opt stack 0
  6442  002E98                     _LCD_write_message:
  6443                           	opt stack 24
  6444                           
  6445                           ;src\LCD_44780.c: 181: while(*buffer) {
  6446                           
  6447                           ;incstack = 0
  6448  002E98  D00A               	goto	l3135
  6449  002E9A                     l3131:
  6450                           
  6451                           ;src\LCD_44780.c: 184: LCD_write_char(*buffer);
  6452  002E9A  C012  FFF6         	movff	LCD_write_message@buffer,tblptrl
  6453  002E9E  C013  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
  6454  002EA2                     	if	0	;tblptru may be non-zero
  6455  002EA2                     	endif
  6456  002EA2                     	if	0	;tblptru may be non-zero
  6457  002EA2                     	endif
  6458  002EA2  0008               	tblrd		*
  6459  002EA4  50F5               	movf	tablat,w,c
  6460  002EA6  ECFE  F015         	call	_LCD_write_char
  6461                           
  6462                           ;src\LCD_44780.c: 186: buffer++;
  6463  002EAA  4A12               	infsnz	LCD_write_message@buffer,f,c
  6464  002EAC  2A13               	incf	LCD_write_message@buffer+1,f,c
  6465  002EAE                     l3135:
  6466  002EAE  C012  FFF6         	movff	LCD_write_message@buffer,tblptrl
  6467  002EB2  C013  FFF7         	movff	LCD_write_message@buffer+1,tblptrh
  6468  002EB6                     	if	0	;tblptru may be non-zero
  6469  002EB6                     	endif
  6470  002EB6                     	if	0	;tblptru may be non-zero
  6471  002EB6                     	endif
  6472  002EB6  0008               	tblrd		*
  6473  002EB8  50F5               	movf	tablat,w,c
  6474  002EBA  0900               	iorlw	0
  6475  002EBC  B4D8               	btfsc	status,2,c
  6476  002EBE  0012               	return	
  6477  002EC0  D7EC               	goto	l3131
  6478  002EC2                     __end_of_LCD_write_message:
  6479                           	opt stack 0
  6480                           tblptru	equ	0xFF8
  6481                           tblptrh	equ	0xFF7
  6482                           tblptrl	equ	0xFF6
  6483                           tablat	equ	0xFF5
  6484                           prodh	equ	0xFF4
  6485                           prodl	equ	0xFF3
  6486                           postinc0	equ	0xFEE
  6487                           wreg	equ	0xFE8
  6488                           indf2	equ	0xFDF
  6489                           postinc2	equ	0xFDE
  6490                           postdec2	equ	0xFDD
  6491                           fsr2h	equ	0xFDA
  6492                           fsr2l	equ	0xFD9
  6493                           status	equ	0xFD8
  6494                           
  6495 ;; *************** function _LCD_write_char *****************
  6496 ;; Defined at:
  6497 ;;		line 145 in file "../../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  6498 ;; Parameters:    Size  Location     Type
  6499 ;;  value           1    wreg     unsigned char 
  6500 ;; Auto vars:     Size  Location     Type
  6501 ;;  value           1   16[COMRAM] unsigned char 
  6502 ;;  D0              1   15[COMRAM] unsigned char 
  6503 ;;  D1              1   14[COMRAM] unsigned char 
  6504 ;;  D2              1   13[COMRAM] unsigned char 
  6505 ;;  D3              1   12[COMRAM] unsigned char 
  6506 ;; Return value:  Size  Location     Type
  6507 ;;                  1    wreg      void 
  6508 ;; Registers used:
  6509 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6510 ;; Tracked objects:
  6511 ;;		On entry : 0/0
  6512 ;;		On exit  : 0/0
  6513 ;;		Unchanged: 0/0
  6514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6515 ;;      Params:         0       0       0       0       0       0       0       0       0
  6516 ;;      Locals:         5       0       0       0       0       0       0       0       0
  6517 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6518 ;;      Totals:         5       0       0       0       0       0       0       0       0
  6519 ;;Total ram usage:        5 bytes
  6520 ;; Hardware stack levels used:    1
  6521 ;; Hardware stack levels required when called:    4
  6522 ;; This function calls:
  6523 ;;		_LCD_send_command
  6524 ;; This function is called by:
  6525 ;;		_LCD_write_message
  6526 ;;		_LCD_write_string
  6527 ;; This function uses a non-reentrant model
  6528 ;;
  6529                           
  6530                           	psect	text24
  6531  002BFC                     __ptext24:
  6532                           	opt stack 0
  6533  002BFC                     _LCD_write_char:
  6534                           	opt stack 24
  6535                           
  6536                           ;incstack = 0
  6537                           ;LCD_write_char@value stored from wreg
  6538  002BFC  6E11               	movwf	LCD_write_char@value,c
  6539                           
  6540                           ;src\LCD_44780.c: 147: unsigned char D3,D2,D1,D0;
  6541                           ;src\LCD_44780.c: 149: LATBbits.LATB2 = 1;
  6542  002BFE  848A               	bsf	3978,2,c	;volatile
  6543                           
  6544                           ;src\LCD_44780.c: 152: D3 = (value & 0b10000000) >> 7;
  6545  002C00  4411               	rlncf	LCD_write_char@value,w,c
  6546  002C02  0B01               	andlw	1
  6547  002C04  6E0D               	movwf	LCD_write_char@D3,c
  6548                           
  6549                           ;src\LCD_44780.c: 153: D2 = (value & 0b01000000) >> 6;
  6550  002C06  4411               	rlncf	LCD_write_char@value,w,c
  6551  002C08  46E8               	rlncf	wreg,f,c
  6552  002C0A  0B03               	andlw	3
  6553  002C0C  0B01               	andlw	1
  6554  002C0E  6E0E               	movwf	LCD_write_char@D2,c
  6555                           
  6556                           ;src\LCD_44780.c: 154: D1 = (value & 0b00100000) >> 5;
  6557  002C10  3811               	swapf	LCD_write_char@value,w,c
  6558  002C12  42E8               	rrncf	wreg,f,c
  6559  002C14  0B07               	andlw	7
  6560  002C16  0B01               	andlw	1
  6561  002C18  6E0F               	movwf	LCD_write_char@D1,c
  6562                           
  6563                           ;src\LCD_44780.c: 155: D0 = (value & 0b00010000) >> 4;
  6564  002C1A  3811               	swapf	LCD_write_char@value,w,c
  6565  002C1C  0B0F               	andlw	15
  6566  002C1E  0B01               	andlw	1
  6567  002C20  6E10               	movwf	LCD_write_char@D0,c
  6568                           
  6569                           ;src\LCD_44780.c: 157: LCD_send_command (D3,D2,D1,D0);
  6570  002C22  C00E  F009         	movff	LCD_write_char@D2,LCD_send_command@D2
  6571  002C26  C00F  F00A         	movff	LCD_write_char@D1,LCD_send_command@D1
  6572  002C2A  C010  F00B         	movff	LCD_write_char@D0,LCD_send_command@D0
  6573  002C2E  500D               	movf	LCD_write_char@D3,w,c
  6574  002C30  EC1D  F017         	call	_LCD_send_command
  6575                           
  6576                           ;src\LCD_44780.c: 160: D3 = (value & 0b00001000) >> 3;
  6577  002C34  3811               	swapf	LCD_write_char@value,w,c
  6578  002C36  46E8               	rlncf	wreg,f,c
  6579  002C38  0B1F               	andlw	31
  6580  002C3A  0B01               	andlw	1
  6581  002C3C  6E0D               	movwf	LCD_write_char@D3,c
  6582                           
  6583                           ;src\LCD_44780.c: 161: D2 = (value & 0b00000100) >> 2;
  6584  002C3E  4011               	rrncf	LCD_write_char@value,w,c
  6585  002C40  42E8               	rrncf	wreg,f,c
  6586  002C42  0B3F               	andlw	63
  6587  002C44  0B01               	andlw	1
  6588  002C46  6E0E               	movwf	LCD_write_char@D2,c
  6589                           
  6590                           ;src\LCD_44780.c: 162: D1 = (value & 0b00000010) >> 1;
  6591  002C48  90D8               	bcf	status,0,c
  6592  002C4A  3011               	rrcf	LCD_write_char@value,w,c
  6593  002C4C  0B01               	andlw	1
  6594  002C4E  6E0F               	movwf	LCD_write_char@D1,c
  6595                           
  6596                           ;src\LCD_44780.c: 163: D0 = (value & 0b00000001);
  6597  002C50  5011               	movf	LCD_write_char@value,w,c
  6598  002C52  0B01               	andlw	1
  6599  002C54  6E10               	movwf	LCD_write_char@D0,c
  6600                           
  6601                           ;src\LCD_44780.c: 165: LCD_send_command (D3,D2,D1,D0);
  6602  002C56  C00E  F009         	movff	LCD_write_char@D2,LCD_send_command@D2
  6603  002C5A  C00F  F00A         	movff	LCD_write_char@D1,LCD_send_command@D1
  6604  002C5E  C010  F00B         	movff	LCD_write_char@D0,LCD_send_command@D0
  6605  002C62  500D               	movf	LCD_write_char@D3,w,c
  6606  002C64  EC1D  F017         	call	_LCD_send_command
  6607                           
  6608                           ;src\LCD_44780.c: 167: LATBbits.LATB2 = 0;
  6609  002C68  948A               	bcf	3978,2,c	;volatile
  6610  002C6A  0012               	return		;funcret
  6611  002C6C                     __end_of_LCD_write_char:
  6612                           	opt stack 0
  6613                           tblptru	equ	0xFF8
  6614                           tblptrh	equ	0xFF7
  6615                           tblptrl	equ	0xFF6
  6616                           tablat	equ	0xFF5
  6617                           prodh	equ	0xFF4
  6618                           prodl	equ	0xFF3
  6619                           postinc0	equ	0xFEE
  6620                           wreg	equ	0xFE8
  6621                           indf2	equ	0xFDF
  6622                           postinc2	equ	0xFDE
  6623                           postdec2	equ	0xFDD
  6624                           fsr2h	equ	0xFDA
  6625                           fsr2l	equ	0xFD9
  6626                           status	equ	0xFD8
  6627                           
  6628 ;; *************** function _LCD_initialize *****************
  6629 ;; Defined at:
  6630 ;;		line 283 in file "../../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  6631 ;; Parameters:    Size  Location     Type
  6632 ;;  quartz_frequ    1    wreg     unsigned char 
  6633 ;; Auto vars:     Size  Location     Type
  6634 ;;  quartz_frequ    1   14[COMRAM] unsigned char 
  6635 ;; Return value:  Size  Location     Type
  6636 ;;                  1    wreg      void 
  6637 ;; Registers used:
  6638 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6639 ;; Tracked objects:
  6640 ;;		On entry : 0/0
  6641 ;;		On exit  : 0/0
  6642 ;;		Unchanged: 0/0
  6643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6644 ;;      Params:         0       0       0       0       0       0       0       0       0
  6645 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6646 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6647 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6648 ;;Total ram usage:        1 bytes
  6649 ;; Hardware stack levels used:    1
  6650 ;; Hardware stack levels required when called:    5
  6651 ;; This function calls:
  6652 ;;		_LCD_clear
  6653 ;;		_LCD_cursor
  6654 ;;		_LCD_send_command
  6655 ;;		_delay_ms
  6656 ;;		_delay_set_quartz
  6657 ;; This function is called by:
  6658 ;;		_inizializzazione
  6659 ;; This function uses a non-reentrant model
  6660 ;;
  6661                           
  6662                           	psect	text25
  6663  0026FE                     __ptext25:
  6664                           	opt stack 0
  6665  0026FE                     _LCD_initialize:
  6666                           	opt stack 24
  6667                           
  6668                           ;incstack = 0
  6669                           ;LCD_initialize@quartz_frequency stored from wreg
  6670  0026FE  6E0F               	movwf	LCD_initialize@quartz_frequency,c
  6671                           
  6672                           ;src\LCD_44780.c: 285: delay_set_quartz (quartz_frequency);
  6673  002700  500F               	movf	LCD_initialize@quartz_frequency,w,c
  6674  002702  ECCB  F017         	call	_delay_set_quartz
  6675                           
  6676                           ;src\LCD_44780.c: 287: LATBbits.LATB2 = 0x00;
  6677  002706  948A               	bcf	3978,2,c	;volatile
  6678                           
  6679                           ;src\LCD_44780.c: 288: LATBbits.LATB3 = 0x00;
  6680  002708  968A               	bcf	3978,3,c	;volatile
  6681                           
  6682                           ;src\LCD_44780.c: 289: LATBbits.LATB1 = 0x00;
  6683  00270A  928A               	bcf	3978,1,c	;volatile
  6684                           
  6685                           ;src\LCD_44780.c: 291: delay_ms (100);
  6686  00270C  0E00               	movlw	0
  6687  00270E  6E08               	movwf	delay_ms@value_ms+1,c
  6688  002710  0E64               	movlw	100
  6689  002712  6E07               	movwf	delay_ms@value_ms,c
  6690  002714  EC04  F017         	call	_delay_ms	;wreg free
  6691                           
  6692                           ;src\LCD_44780.c: 292: LCD_send_command (0,0,1,1);
  6693  002718  0E00               	movlw	0
  6694  00271A  6E09               	movwf	LCD_send_command@D2,c
  6695  00271C  0E01               	movlw	1
  6696  00271E  6E0A               	movwf	LCD_send_command@D1,c
  6697  002720  0E01               	movlw	1
  6698  002722  6E0B               	movwf	LCD_send_command@D0,c
  6699  002724  0E00               	movlw	0
  6700  002726  EC1D  F017         	call	_LCD_send_command
  6701                           
  6702                           ;src\LCD_44780.c: 293: delay_ms (100);
  6703  00272A  0E00               	movlw	0
  6704  00272C  6E08               	movwf	delay_ms@value_ms+1,c
  6705  00272E  0E64               	movlw	100
  6706  002730  6E07               	movwf	delay_ms@value_ms,c
  6707  002732  EC04  F017         	call	_delay_ms	;wreg free
  6708                           
  6709                           ;src\LCD_44780.c: 294: LCD_send_command (0,0,1,1);
  6710  002736  0E00               	movlw	0
  6711  002738  6E09               	movwf	LCD_send_command@D2,c
  6712  00273A  0E01               	movlw	1
  6713  00273C  6E0A               	movwf	LCD_send_command@D1,c
  6714  00273E  0E01               	movlw	1
  6715  002740  6E0B               	movwf	LCD_send_command@D0,c
  6716  002742  0E00               	movlw	0
  6717  002744  EC1D  F017         	call	_LCD_send_command
  6718                           
  6719                           ;src\LCD_44780.c: 295: delay_ms (10);
  6720  002748  0E00               	movlw	0
  6721  00274A  6E08               	movwf	delay_ms@value_ms+1,c
  6722  00274C  0E0A               	movlw	10
  6723  00274E  6E07               	movwf	delay_ms@value_ms,c
  6724  002750  EC04  F017         	call	_delay_ms	;wreg free
  6725                           
  6726                           ;src\LCD_44780.c: 296: LCD_send_command (0,0,1,1);
  6727  002754  0E00               	movlw	0
  6728  002756  6E09               	movwf	LCD_send_command@D2,c
  6729  002758  0E01               	movlw	1
  6730  00275A  6E0A               	movwf	LCD_send_command@D1,c
  6731  00275C  0E01               	movlw	1
  6732  00275E  6E0B               	movwf	LCD_send_command@D0,c
  6733  002760  0E00               	movlw	0
  6734  002762  EC1D  F017         	call	_LCD_send_command
  6735                           
  6736                           ;src\LCD_44780.c: 298: LCD_send_command (0,0,1,0);
  6737  002766  0E00               	movlw	0
  6738  002768  6E09               	movwf	LCD_send_command@D2,c
  6739  00276A  0E01               	movlw	1
  6740  00276C  6E0A               	movwf	LCD_send_command@D1,c
  6741  00276E  0E00               	movlw	0
  6742  002770  6E0B               	movwf	LCD_send_command@D0,c
  6743  002772  0E00               	movlw	0
  6744  002774  EC1D  F017         	call	_LCD_send_command
  6745                           
  6746                           ;src\LCD_44780.c: 300: LCD_send_command (0,0,1,0);
  6747  002778  0E00               	movlw	0
  6748  00277A  6E09               	movwf	LCD_send_command@D2,c
  6749  00277C  0E01               	movlw	1
  6750  00277E  6E0A               	movwf	LCD_send_command@D1,c
  6751  002780  0E00               	movlw	0
  6752  002782  6E0B               	movwf	LCD_send_command@D0,c
  6753  002784  0E00               	movlw	0
  6754  002786  EC1D  F017         	call	_LCD_send_command
  6755                           
  6756                           ;src\LCD_44780.c: 301: LCD_send_command (1,0,0,0);
  6757  00278A  0E00               	movlw	0
  6758  00278C  6E09               	movwf	LCD_send_command@D2,c
  6759  00278E  0E00               	movlw	0
  6760  002790  6E0A               	movwf	LCD_send_command@D1,c
  6761  002792  0E00               	movlw	0
  6762  002794  6E0B               	movwf	LCD_send_command@D0,c
  6763  002796  0E01               	movlw	1
  6764  002798  EC1D  F017         	call	_LCD_send_command
  6765                           
  6766                           ;src\LCD_44780.c: 303: LCD_send_command (0,0,0,0);
  6767  00279C  0E00               	movlw	0
  6768  00279E  6E09               	movwf	LCD_send_command@D2,c
  6769  0027A0  0E00               	movlw	0
  6770  0027A2  6E0A               	movwf	LCD_send_command@D1,c
  6771  0027A4  0E00               	movlw	0
  6772  0027A6  6E0B               	movwf	LCD_send_command@D0,c
  6773  0027A8  0E00               	movlw	0
  6774  0027AA  EC1D  F017         	call	_LCD_send_command
  6775                           
  6776                           ;src\LCD_44780.c: 304: LCD_send_command (1,0,0,0);
  6777  0027AE  0E00               	movlw	0
  6778  0027B0  6E09               	movwf	LCD_send_command@D2,c
  6779  0027B2  0E00               	movlw	0
  6780  0027B4  6E0A               	movwf	LCD_send_command@D1,c
  6781  0027B6  0E00               	movlw	0
  6782  0027B8  6E0B               	movwf	LCD_send_command@D0,c
  6783  0027BA  0E01               	movlw	1
  6784  0027BC  EC1D  F017         	call	_LCD_send_command
  6785                           
  6786                           ;src\LCD_44780.c: 306: LCD_send_command (0,0,0,0);
  6787  0027C0  0E00               	movlw	0
  6788  0027C2  6E09               	movwf	LCD_send_command@D2,c
  6789  0027C4  0E00               	movlw	0
  6790  0027C6  6E0A               	movwf	LCD_send_command@D1,c
  6791  0027C8  0E00               	movlw	0
  6792  0027CA  6E0B               	movwf	LCD_send_command@D0,c
  6793  0027CC  0E00               	movlw	0
  6794  0027CE  EC1D  F017         	call	_LCD_send_command
  6795                           
  6796                           ;src\LCD_44780.c: 307: LCD_send_command (0,0,0,1);
  6797  0027D2  0E00               	movlw	0
  6798  0027D4  6E09               	movwf	LCD_send_command@D2,c
  6799  0027D6  0E00               	movlw	0
  6800  0027D8  6E0A               	movwf	LCD_send_command@D1,c
  6801  0027DA  0E01               	movlw	1
  6802  0027DC  6E0B               	movwf	LCD_send_command@D0,c
  6803  0027DE  0E00               	movlw	0
  6804  0027E0  EC1D  F017         	call	_LCD_send_command
  6805                           
  6806                           ;src\LCD_44780.c: 309: LCD_send_command (0,0,0,0);
  6807  0027E4  0E00               	movlw	0
  6808  0027E6  6E09               	movwf	LCD_send_command@D2,c
  6809  0027E8  0E00               	movlw	0
  6810  0027EA  6E0A               	movwf	LCD_send_command@D1,c
  6811  0027EC  0E00               	movlw	0
  6812  0027EE  6E0B               	movwf	LCD_send_command@D0,c
  6813  0027F0  0E00               	movlw	0
  6814  0027F2  EC1D  F017         	call	_LCD_send_command
  6815                           
  6816                           ;src\LCD_44780.c: 310: LCD_send_command (0,1,1,0);
  6817  0027F6  0E01               	movlw	1
  6818  0027F8  6E09               	movwf	LCD_send_command@D2,c
  6819  0027FA  0E01               	movlw	1
  6820  0027FC  6E0A               	movwf	LCD_send_command@D1,c
  6821  0027FE  0E00               	movlw	0
  6822  002800  6E0B               	movwf	LCD_send_command@D0,c
  6823  002802  0E00               	movlw	0
  6824  002804  EC1D  F017         	call	_LCD_send_command
  6825                           
  6826                           ;src\LCD_44780.c: 312: LCD_clear ();
  6827  002808  EC75  F017         	call	_LCD_clear	;wreg free
  6828                           
  6829                           ;src\LCD_44780.c: 314: LCD_cursor (0,0);
  6830  00280C  0E00               	movlw	0
  6831  00280E  6E0D               	movwf	LCD_cursor@blinking,c
  6832  002810  0E00               	movlw	0
  6833  002812  EC61  F017         	call	_LCD_cursor
  6834  002816  0012               	return		;funcret
  6835  002818                     __end_of_LCD_initialize:
  6836                           	opt stack 0
  6837                           tblptru	equ	0xFF8
  6838                           tblptrh	equ	0xFF7
  6839                           tblptrl	equ	0xFF6
  6840                           tablat	equ	0xFF5
  6841                           prodh	equ	0xFF4
  6842                           prodl	equ	0xFF3
  6843                           postinc0	equ	0xFEE
  6844                           wreg	equ	0xFE8
  6845                           indf2	equ	0xFDF
  6846                           postinc2	equ	0xFDE
  6847                           postdec2	equ	0xFDD
  6848                           fsr2h	equ	0xFDA
  6849                           fsr2l	equ	0xFD9
  6850                           status	equ	0xFD8
  6851                           
  6852 ;; *************** function _delay_set_quartz *****************
  6853 ;; Defined at:
  6854 ;;		line 115 in file "../../LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
  6855 ;; Parameters:    Size  Location     Type
  6856 ;;  frequency       1    wreg     unsigned char 
  6857 ;; Auto vars:     Size  Location     Type
  6858 ;;  frequency       1    0[COMRAM] unsigned char 
  6859 ;; Return value:  Size  Location     Type
  6860 ;;                  1    wreg      void 
  6861 ;; Registers used:
  6862 ;;		wreg
  6863 ;; Tracked objects:
  6864 ;;		On entry : 0/0
  6865 ;;		On exit  : 0/0
  6866 ;;		Unchanged: 0/0
  6867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6868 ;;      Params:         0       0       0       0       0       0       0       0       0
  6869 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6870 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6871 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6872 ;;Total ram usage:        1 bytes
  6873 ;; Hardware stack levels used:    1
  6874 ;; This function calls:
  6875 ;;		Nothing
  6876 ;; This function is called by:
  6877 ;;		_LCD_initialize
  6878 ;; This function uses a non-reentrant model
  6879 ;;
  6880                           
  6881                           	psect	text26
  6882  002F96                     __ptext26:
  6883                           	opt stack 0
  6884  002F96                     _delay_set_quartz:
  6885                           	opt stack 28
  6886                           
  6887                           ;incstack = 0
  6888                           ;delay_set_quartz@frequency stored from wreg
  6889  002F96  6E01               	movwf	delay_set_quartz@frequency,c
  6890                           
  6891                           ;src\delay.c: 117: delay_quartz_frequency_value = frequency;
  6892  002F98  C001  F05F         	movff	delay_set_quartz@frequency,_delay_quartz_frequency_value	;volatile
  6893  002F9C  0012               	return		;funcret
  6894  002F9E                     __end_of_delay_set_quartz:
  6895                           	opt stack 0
  6896                           tblptru	equ	0xFF8
  6897                           tblptrh	equ	0xFF7
  6898                           tblptrl	equ	0xFF6
  6899                           tablat	equ	0xFF5
  6900                           prodh	equ	0xFF4
  6901                           prodl	equ	0xFF3
  6902                           postinc0	equ	0xFEE
  6903                           wreg	equ	0xFE8
  6904                           indf2	equ	0xFDF
  6905                           postinc2	equ	0xFDE
  6906                           postdec2	equ	0xFDD
  6907                           fsr2h	equ	0xFDA
  6908                           fsr2l	equ	0xFD9
  6909                           status	equ	0xFD8
  6910                           
  6911 ;; *************** function _LCD_cursor *****************
  6912 ;; Defined at:
  6913 ;;		line 266 in file "../../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  6914 ;; Parameters:    Size  Location     Type
  6915 ;;  active          1    wreg     unsigned char 
  6916 ;;  blinking        1   12[COMRAM] unsigned char 
  6917 ;; Auto vars:     Size  Location     Type
  6918 ;;  active          1   13[COMRAM] unsigned char 
  6919 ;; Return value:  Size  Location     Type
  6920 ;;                  1    wreg      void 
  6921 ;; Registers used:
  6922 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6923 ;; Tracked objects:
  6924 ;;		On entry : 0/0
  6925 ;;		On exit  : 0/0
  6926 ;;		Unchanged: 0/0
  6927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6928 ;;      Params:         1       0       0       0       0       0       0       0       0
  6929 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6930 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6931 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6932 ;;Total ram usage:        2 bytes
  6933 ;; Hardware stack levels used:    1
  6934 ;; Hardware stack levels required when called:    4
  6935 ;; This function calls:
  6936 ;;		_LCD_send_command
  6937 ;; This function is called by:
  6938 ;;		_LCD_initialize
  6939 ;; This function uses a non-reentrant model
  6940 ;;
  6941                           
  6942                           	psect	text27
  6943  002EC2                     __ptext27:
  6944                           	opt stack 0
  6945  002EC2                     _LCD_cursor:
  6946                           	opt stack 24
  6947                           
  6948                           ;incstack = 0
  6949                           ;LCD_cursor@active stored from wreg
  6950  002EC2  6E0E               	movwf	LCD_cursor@active,c
  6951                           
  6952                           ;src\LCD_44780.c: 268: LCD_send_command (0,0,0,0);
  6953  002EC4  0E00               	movlw	0
  6954  002EC6  6E09               	movwf	LCD_send_command@D2,c
  6955  002EC8  0E00               	movlw	0
  6956  002ECA  6E0A               	movwf	LCD_send_command@D1,c
  6957  002ECC  0E00               	movlw	0
  6958  002ECE  6E0B               	movwf	LCD_send_command@D0,c
  6959  002ED0  0E00               	movlw	0
  6960  002ED2  EC1D  F017         	call	_LCD_send_command
  6961                           
  6962                           ;src\LCD_44780.c: 269: LCD_send_command (1,1,active,blinking);
  6963  002ED6  0E01               	movlw	1
  6964  002ED8  6E09               	movwf	LCD_send_command@D2,c
  6965  002EDA  C00E  F00A         	movff	LCD_cursor@active,LCD_send_command@D1
  6966  002EDE  C00D  F00B         	movff	LCD_cursor@blinking,LCD_send_command@D0
  6967  002EE2  0E01               	movlw	1
  6968  002EE4  EC1D  F017         	call	_LCD_send_command
  6969  002EE8  0012               	return		;funcret
  6970  002EEA                     __end_of_LCD_cursor:
  6971                           	opt stack 0
  6972                           tblptru	equ	0xFF8
  6973                           tblptrh	equ	0xFF7
  6974                           tblptrl	equ	0xFF6
  6975                           tablat	equ	0xFF5
  6976                           prodh	equ	0xFF4
  6977                           prodl	equ	0xFF3
  6978                           postinc0	equ	0xFEE
  6979                           wreg	equ	0xFE8
  6980                           indf2	equ	0xFDF
  6981                           postinc2	equ	0xFDE
  6982                           postdec2	equ	0xFDD
  6983                           fsr2h	equ	0xFDA
  6984                           fsr2l	equ	0xFD9
  6985                           status	equ	0xFD8
  6986                           
  6987 ;; *************** function _LCD_clear *****************
  6988 ;; Defined at:
  6989 ;;		line 257 in file "../../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  6990 ;; Parameters:    Size  Location     Type
  6991 ;;		None
  6992 ;; Auto vars:     Size  Location     Type
  6993 ;;		None
  6994 ;; Return value:  Size  Location     Type
  6995 ;;                  1    wreg      void 
  6996 ;; Registers used:
  6997 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6998 ;; Tracked objects:
  6999 ;;		On entry : 0/0
  7000 ;;		On exit  : 0/0
  7001 ;;		Unchanged: 0/0
  7002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7003 ;;      Params:         0       0       0       0       0       0       0       0       0
  7004 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7005 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7006 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7007 ;;Total ram usage:        0 bytes
  7008 ;; Hardware stack levels used:    1
  7009 ;; Hardware stack levels required when called:    4
  7010 ;; This function calls:
  7011 ;;		_LCD_send_command
  7012 ;; This function is called by:
  7013 ;;		_LCD_initialize
  7014 ;;		_inizializzazione
  7015 ;; This function uses a non-reentrant model
  7016 ;;
  7017                           
  7018                           	psect	text28
  7019  002EEA                     __ptext28:
  7020                           	opt stack 0
  7021  002EEA                     _LCD_clear:
  7022                           	opt stack 24
  7023                           
  7024                           ;src\LCD_44780.c: 259: LCD_send_command (0,0,0,0);
  7025                           
  7026                           ;incstack = 0
  7027  002EEA  0E00               	movlw	0
  7028  002EEC  6E09               	movwf	LCD_send_command@D2,c
  7029  002EEE  0E00               	movlw	0
  7030  002EF0  6E0A               	movwf	LCD_send_command@D1,c
  7031  002EF2  0E00               	movlw	0
  7032  002EF4  6E0B               	movwf	LCD_send_command@D0,c
  7033  002EF6  0E00               	movlw	0
  7034  002EF8  EC1D  F017         	call	_LCD_send_command
  7035                           
  7036                           ;src\LCD_44780.c: 260: LCD_send_command (0,0,0,1);
  7037  002EFC  0E00               	movlw	0
  7038  002EFE  6E09               	movwf	LCD_send_command@D2,c
  7039  002F00  0E00               	movlw	0
  7040  002F02  6E0A               	movwf	LCD_send_command@D1,c
  7041  002F04  0E01               	movlw	1
  7042  002F06  6E0B               	movwf	LCD_send_command@D0,c
  7043  002F08  0E00               	movlw	0
  7044  002F0A  EC1D  F017         	call	_LCD_send_command
  7045  002F0E  0012               	return		;funcret
  7046  002F10                     __end_of_LCD_clear:
  7047                           	opt stack 0
  7048                           tblptru	equ	0xFF8
  7049                           tblptrh	equ	0xFF7
  7050                           tblptrl	equ	0xFF6
  7051                           tablat	equ	0xFF5
  7052                           prodh	equ	0xFF4
  7053                           prodl	equ	0xFF3
  7054                           postinc0	equ	0xFEE
  7055                           wreg	equ	0xFE8
  7056                           indf2	equ	0xFDF
  7057                           postinc2	equ	0xFDE
  7058                           postdec2	equ	0xFDD
  7059                           fsr2h	equ	0xFDA
  7060                           fsr2l	equ	0xFD9
  7061                           status	equ	0xFD8
  7062                           
  7063 ;; *************** function _LCD_send_command *****************
  7064 ;; Defined at:
  7065 ;;		line 61 in file "../../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  7066 ;; Parameters:    Size  Location     Type
  7067 ;;  D3              1    wreg     unsigned char 
  7068 ;;  D2              1    8[COMRAM] unsigned char 
  7069 ;;  D1              1    9[COMRAM] unsigned char 
  7070 ;;  D0              1   10[COMRAM] unsigned char 
  7071 ;; Auto vars:     Size  Location     Type
  7072 ;;  D3              1   11[COMRAM] unsigned char 
  7073 ;; Return value:  Size  Location     Type
  7074 ;;                  1    wreg      void 
  7075 ;; Registers used:
  7076 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7077 ;; Tracked objects:
  7078 ;;		On entry : 0/0
  7079 ;;		On exit  : 0/0
  7080 ;;		Unchanged: 0/0
  7081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7082 ;;      Params:         3       0       0       0       0       0       0       0       0
  7083 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7084 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7085 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7086 ;;Total ram usage:        4 bytes
  7087 ;; Hardware stack levels used:    1
  7088 ;; Hardware stack levels required when called:    3
  7089 ;; This function calls:
  7090 ;;		_LCD_enable_pulse
  7091 ;; This function is called by:
  7092 ;;		_LCD_goto_line
  7093 ;;		_LCD_write_char
  7094 ;;		_LCD_clear
  7095 ;;		_LCD_cursor
  7096 ;;		_LCD_initialize
  7097 ;;		_LCD_home
  7098 ;;		_LCD_shift
  7099 ;;		_LCD_shift_cursor
  7100 ;; This function uses a non-reentrant model
  7101 ;;
  7102                           
  7103                           	psect	text29
  7104  002E3A                     __ptext29:
  7105                           	opt stack 0
  7106  002E3A                     _LCD_send_command:
  7107                           	opt stack 24
  7108                           
  7109                           ;incstack = 0
  7110                           ;LCD_send_command@D3 stored from wreg
  7111  002E3A  6E0C               	movwf	LCD_send_command@D3,c
  7112                           
  7113                           ;src\LCD_44780.c: 63: LATBbits.LATB4 = D0;
  7114  002E3C  B00B               	btfsc	LCD_send_command@D0,0,c
  7115  002E3E  D002               	bra	u2045
  7116  002E40  988A               	bcf	3978,4,c	;volatile
  7117  002E42  D001               	bra	u2046
  7118  002E44                     u2045:
  7119  002E44  888A               	bsf	3978,4,c	;volatile
  7120  002E46                     u2046:
  7121                           
  7122                           ;src\LCD_44780.c: 64: LATBbits.LATB5 = D1;
  7123  002E46  B00A               	btfsc	LCD_send_command@D1,0,c
  7124  002E48  D002               	bra	u2055
  7125  002E4A  9A8A               	bcf	3978,5,c	;volatile
  7126  002E4C  D001               	bra	u2056
  7127  002E4E                     u2055:
  7128  002E4E  8A8A               	bsf	3978,5,c	;volatile
  7129  002E50                     u2056:
  7130                           
  7131                           ;src\LCD_44780.c: 65: LATBbits.LATB6 = D2;
  7132  002E50  B009               	btfsc	LCD_send_command@D2,0,c
  7133  002E52  D002               	bra	u2065
  7134  002E54  9C8A               	bcf	3978,6,c	;volatile
  7135  002E56  D001               	bra	u2066
  7136  002E58                     u2065:
  7137  002E58  8C8A               	bsf	3978,6,c	;volatile
  7138  002E5A                     u2066:
  7139                           
  7140                           ;src\LCD_44780.c: 66: LATBbits.LATB7 = D3;
  7141  002E5A  B00C               	btfsc	LCD_send_command@D3,0,c
  7142  002E5C  D002               	bra	u2075
  7143  002E5E  9E8A               	bcf	3978,7,c	;volatile
  7144  002E60  D001               	bra	u2076
  7145  002E62                     u2075:
  7146  002E62  8E8A               	bsf	3978,7,c	;volatile
  7147  002E64                     u2076:
  7148                           
  7149                           ;src\LCD_44780.c: 67: LCD_enable_pulse ();
  7150  002E64  ECBC  F017         	call	_LCD_enable_pulse	;wreg free
  7151  002E68  0012               	return		;funcret
  7152  002E6A                     __end_of_LCD_send_command:
  7153                           	opt stack 0
  7154                           tblptru	equ	0xFF8
  7155                           tblptrh	equ	0xFF7
  7156                           tblptrl	equ	0xFF6
  7157                           tablat	equ	0xFF5
  7158                           prodh	equ	0xFF4
  7159                           prodl	equ	0xFF3
  7160                           postinc0	equ	0xFEE
  7161                           wreg	equ	0xFE8
  7162                           indf2	equ	0xFDF
  7163                           postinc2	equ	0xFDE
  7164                           postdec2	equ	0xFDD
  7165                           fsr2h	equ	0xFDA
  7166                           fsr2l	equ	0xFD9
  7167                           status	equ	0xFD8
  7168                           
  7169 ;; *************** function _LCD_enable_pulse *****************
  7170 ;; Defined at:
  7171 ;;		line 49 in file "../../LaurTec_PIC_libraries_v_3.3.0/src\LCD_44780.c"
  7172 ;; Parameters:    Size  Location     Type
  7173 ;;		None
  7174 ;; Auto vars:     Size  Location     Type
  7175 ;;		None
  7176 ;; Return value:  Size  Location     Type
  7177 ;;                  1    wreg      void 
  7178 ;; Registers used:
  7179 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7180 ;; Tracked objects:
  7181 ;;		On entry : 0/0
  7182 ;;		On exit  : 0/0
  7183 ;;		Unchanged: 0/0
  7184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7185 ;;      Params:         0       0       0       0       0       0       0       0       0
  7186 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7187 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7188 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7189 ;;Total ram usage:        0 bytes
  7190 ;; Hardware stack levels used:    1
  7191 ;; Hardware stack levels required when called:    2
  7192 ;; This function calls:
  7193 ;;		_delay_ms
  7194 ;; This function is called by:
  7195 ;;		_LCD_send_command
  7196 ;; This function uses a non-reentrant model
  7197 ;;
  7198                           
  7199                           	psect	text30
  7200  002F78                     __ptext30:
  7201                           	opt stack 0
  7202  002F78                     _LCD_enable_pulse:
  7203                           	opt stack 24
  7204                           
  7205                           ;src\LCD_44780.c: 51: LATBbits.LATB3 = 1;
  7206                           
  7207                           ;incstack = 0
  7208  002F78  868A               	bsf	3978,3,c	;volatile
  7209                           
  7210                           ;src\LCD_44780.c: 52: delay_ms (1);
  7211  002F7A  0E00               	movlw	0
  7212  002F7C  6E08               	movwf	delay_ms@value_ms+1,c
  7213  002F7E  0E01               	movlw	1
  7214  002F80  6E07               	movwf	delay_ms@value_ms,c
  7215  002F82  EC04  F017         	call	_delay_ms	;wreg free
  7216                           
  7217                           ;src\LCD_44780.c: 53: LATBbits.LATB3 = 0;
  7218  002F86  968A               	bcf	3978,3,c	;volatile
  7219                           
  7220                           ;src\LCD_44780.c: 54: delay_ms (1);
  7221  002F88  0E00               	movlw	0
  7222  002F8A  6E08               	movwf	delay_ms@value_ms+1,c
  7223  002F8C  0E01               	movlw	1
  7224  002F8E  6E07               	movwf	delay_ms@value_ms,c
  7225  002F90  EC04  F017         	call	_delay_ms	;wreg free
  7226  002F94  0012               	return		;funcret
  7227  002F96                     __end_of_LCD_enable_pulse:
  7228                           	opt stack 0
  7229                           tblptru	equ	0xFF8
  7230                           tblptrh	equ	0xFF7
  7231                           tblptrl	equ	0xFF6
  7232                           tablat	equ	0xFF5
  7233                           prodh	equ	0xFF4
  7234                           prodl	equ	0xFF3
  7235                           postinc0	equ	0xFEE
  7236                           wreg	equ	0xFE8
  7237                           indf2	equ	0xFDF
  7238                           postinc2	equ	0xFDE
  7239                           postdec2	equ	0xFDD
  7240                           fsr2h	equ	0xFDA
  7241                           fsr2l	equ	0xFD9
  7242                           status	equ	0xFD8
  7243                           
  7244 ;; *************** function _delay_ms *****************
  7245 ;; Defined at:
  7246 ;;		line 61 in file "../../LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
  7247 ;; Parameters:    Size  Location     Type
  7248 ;;  value_ms        2    6[COMRAM] unsigned int 
  7249 ;; Auto vars:     Size  Location     Type
  7250 ;;		None
  7251 ;; Return value:  Size  Location     Type
  7252 ;;                  1    wreg      void 
  7253 ;; Registers used:
  7254 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7255 ;; Tracked objects:
  7256 ;;		On entry : 0/0
  7257 ;;		On exit  : 0/0
  7258 ;;		Unchanged: 0/0
  7259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7260 ;;      Params:         2       0       0       0       0       0       0       0       0
  7261 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7262 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7263 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7264 ;;Total ram usage:        2 bytes
  7265 ;; Hardware stack levels used:    1
  7266 ;; Hardware stack levels required when called:    1
  7267 ;; This function calls:
  7268 ;;		___wmul
  7269 ;; This function is called by:
  7270 ;;		_LCD_enable_pulse
  7271 ;;		_LCD_initialize
  7272 ;;		_read_adc
  7273 ;;		_inizializzazione
  7274 ;;		_delay_s
  7275 ;; This function uses a non-reentrant model
  7276 ;;
  7277                           
  7278                           	psect	text31
  7279  002E08                     __ptext31:
  7280                           	opt stack 0
  7281  002E08                     _delay_ms:
  7282                           	opt stack 27
  7283                           
  7284                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
  7285                           
  7286                           ;incstack = 0
  7287  002E08  C05F  F001         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
  7288  002E0C  6A02               	clrf	___wmul@multiplier+1,c
  7289  002E0E  C007  F003         	movff	delay_ms@value_ms,___wmul@multiplicand
  7290  002E12  C008  F004         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
  7291  002E16  EC88  F017         	call	___wmul	;wreg free
  7292  002E1A  C001  F05B         	movff	?___wmul,_clock_counter_reference	;volatile
  7293  002E1E  C002  F05C         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
  7294                           
  7295                           ;src\delay.c: 75: while (clock_counter_reference) {
  7296  002E22  D006               	goto	l126
  7297  002E24                     l2317:
  7298                           
  7299                           ;src\delay.c: 85: _delay(240);
  7300  002E24  0E50               	movlw	80
  7301  002E26                     u4147:
  7302  002E26  2EE8               	decfsz	wreg,f,c
  7303  002E28  D7FE               	goto	u4147
  7304                           
  7305                           ;src\delay.c: 88: clock_counter_reference--;
  7306  002E2A  065B               	decf	_clock_counter_reference,f,c	;volatile
  7307  002E2C  A0D8               	btfss	status,0,c
  7308  002E2E  065C               	decf	_clock_counter_reference+1,f,c	;volatile
  7309  002E30                     l126:
  7310  002E30  505B               	movf	_clock_counter_reference,w,c	;volatile
  7311  002E32  105C               	iorwf	_clock_counter_reference+1,w,c	;volatile
  7312  002E34  B4D8               	btfsc	status,2,c
  7313  002E36  0012               	return	
  7314  002E38  D7F5               	goto	l2317
  7315  002E3A                     __end_of_delay_ms:
  7316                           	opt stack 0
  7317                           tblptru	equ	0xFF8
  7318                           tblptrh	equ	0xFF7
  7319                           tblptrl	equ	0xFF6
  7320                           tablat	equ	0xFF5
  7321                           prodh	equ	0xFF4
  7322                           prodl	equ	0xFF3
  7323                           postinc0	equ	0xFEE
  7324                           wreg	equ	0xFE8
  7325                           indf2	equ	0xFDF
  7326                           postinc2	equ	0xFDE
  7327                           postdec2	equ	0xFDD
  7328                           fsr2h	equ	0xFDA
  7329                           fsr2l	equ	0xFD9
  7330                           status	equ	0xFD8
  7331                           
  7332 ;; *************** function ___wmul *****************
  7333 ;; Defined at:
  7334 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\Umul16.c"
  7335 ;; Parameters:    Size  Location     Type
  7336 ;;  multiplier      2    0[COMRAM] unsigned int 
  7337 ;;  multiplicand    2    2[COMRAM] unsigned int 
  7338 ;; Auto vars:     Size  Location     Type
  7339 ;;  product         2    4[COMRAM] unsigned int 
  7340 ;; Return value:  Size  Location     Type
  7341 ;;                  2    0[COMRAM] unsigned int 
  7342 ;; Registers used:
  7343 ;;		wreg, status,2, status,0, prodl, prodh
  7344 ;; Tracked objects:
  7345 ;;		On entry : 0/0
  7346 ;;		On exit  : 0/0
  7347 ;;		Unchanged: 0/0
  7348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7349 ;;      Params:         4       0       0       0       0       0       0       0       0
  7350 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7351 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7352 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7353 ;;Total ram usage:        6 bytes
  7354 ;; Hardware stack levels used:    1
  7355 ;; This function calls:
  7356 ;;		Nothing
  7357 ;; This function is called by:
  7358 ;;		_delay_ms
  7359 ;;		_read_adc
  7360 ;;		_sprintf
  7361 ;; This function uses a non-reentrant model
  7362 ;;
  7363                           
  7364                           	psect	text32
  7365  002F10                     __ptext32:
  7366                           	opt stack 0
  7367  002F10                     ___wmul:
  7368                           	opt stack 28
  7369                           
  7370                           ;incstack = 0
  7371  002F10  5001               	movf	___wmul@multiplier,w,c
  7372  002F12  0203               	mulwf	___wmul@multiplicand,c
  7373  002F14  CFF3 F005          	movff	prodl,___wmul@product
  7374  002F18  CFF4 F006          	movff	prodh,___wmul@product+1
  7375  002F1C  5001               	movf	___wmul@multiplier,w,c
  7376  002F1E  0204               	mulwf	___wmul@multiplicand+1,c
  7377  002F20  50F3               	movf	prodl,w,c
  7378  002F22  2606               	addwf	___wmul@product+1,f,c
  7379  002F24  5002               	movf	___wmul@multiplier+1,w,c
  7380  002F26  0203               	mulwf	___wmul@multiplicand,c
  7381  002F28  50F3               	movf	prodl,w,c
  7382  002F2A  2606               	addwf	___wmul@product+1,f,c
  7383  002F2C  C005  F001         	movff	___wmul@product,?___wmul
  7384  002F30  C006  F002         	movff	___wmul@product+1,?___wmul+1
  7385  002F34  0012               	return	
  7386  002F36                     __end_of___wmul:
  7387                           	opt stack 0
  7388                           tblptru	equ	0xFF8
  7389                           tblptrh	equ	0xFF7
  7390                           tblptrl	equ	0xFF6
  7391                           tablat	equ	0xFF5
  7392                           prodh	equ	0xFF4
  7393                           prodl	equ	0xFF3
  7394                           postinc0	equ	0xFEE
  7395                           wreg	equ	0xFE8
  7396                           indf2	equ	0xFDF
  7397                           postinc2	equ	0xFDE
  7398                           postdec2	equ	0xFDD
  7399                           fsr2h	equ	0xFDA
  7400                           fsr2l	equ	0xFD9
  7401                           status	equ	0xFD8
  7402                           
  7403 ;; *************** function ___fldiv *****************
  7404 ;; Defined at:
  7405 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\sprcdiv.c"
  7406 ;; Parameters:    Size  Location     Type
  7407 ;;  b               4    0[COMRAM] unsigned int 
  7408 ;;  a               4    4[COMRAM] unsigned int 
  7409 ;; Auto vars:     Size  Location     Type
  7410 ;;  grs             4   19[COMRAM] unsigned long 
  7411 ;;  rem             4   13[COMRAM] unsigned long 
  7412 ;;  new_exp         2   17[COMRAM] int 
  7413 ;;  aexp            1   24[COMRAM] unsigned char 
  7414 ;;  bexp            1   23[COMRAM] unsigned char 
  7415 ;;  sign            1   12[COMRAM] unsigned char 
  7416 ;; Return value:  Size  Location     Type
  7417 ;;                  4    0[COMRAM] unsigned char 
  7418 ;; Registers used:
  7419 ;;		wreg, status,2, status,0
  7420 ;; Tracked objects:
  7421 ;;		On entry : 0/0
  7422 ;;		On exit  : 0/0
  7423 ;;		Unchanged: 0/0
  7424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7425 ;;      Params:         8       0       0       0       0       0       0       0       0
  7426 ;;      Locals:        13       0       0       0       0       0       0       0       0
  7427 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7428 ;;      Totals:        25       0       0       0       0       0       0       0       0
  7429 ;;Total ram usage:       25 bytes
  7430 ;; Hardware stack levels used:    1
  7431 ;; This function calls:
  7432 ;;		Nothing
  7433 ;; This function is called by:
  7434 ;;		_main
  7435 ;; This function uses a non-reentrant model
  7436 ;;
  7437                           
  7438                           	psect	text33
  7439  001B88                     __ptext33:
  7440                           	opt stack 0
  7441  001B88                     ___fldiv:
  7442                           	opt stack 30
  7443                           
  7444                           ;incstack = 0
  7445  001B88  5004               	movf	___fldiv@b+3,w,c
  7446  001B8A  0B80               	andlw	128
  7447  001B8C  6E0D               	movwf	___fldiv@sign,c
  7448  001B8E  5004               	movf	___fldiv@b+3,w,c
  7449  001B90  2404               	addwf	___fldiv@b+3,w,c
  7450  001B92  6E18               	movwf	___fldiv@bexp,c
  7451  001B94  BE03               	btfsc	___fldiv@b+2,7,c
  7452  001B96  8018               	bsf	___fldiv@bexp,0,c
  7453  001B98  5018               	movf	___fldiv@bexp,w,c
  7454  001B9A  B4D8               	btfsc	status,2,c
  7455  001B9C  D00D               	goto	l3481
  7456  001B9E  2818               	incf	___fldiv@bexp,w,c
  7457  001BA0  A4D8               	btfss	status,2,c
  7458  001BA2  D008               	goto	l3477
  7459  001BA4  0E00               	movlw	0
  7460  001BA6  6E01               	movwf	___fldiv@b,c
  7461  001BA8  0E00               	movlw	0
  7462  001BAA  6E02               	movwf	___fldiv@b+1,c
  7463  001BAC  0E00               	movlw	0
  7464  001BAE  6E03               	movwf	___fldiv@b+2,c
  7465  001BB0  0E00               	movlw	0
  7466  001BB2  6E04               	movwf	___fldiv@b+3,c
  7467  001BB4                     l3477:
  7468  001BB4  8E03               	bsf	___fldiv@b+2,7,c
  7469  001BB6  D006               	goto	L10
  7470  001BB8                     l3481:
  7471  001BB8  0E00               	movlw	0
  7472  001BBA  6E01               	movwf	___fldiv@b,c
  7473  001BBC  0E00               	movlw	0
  7474  001BBE  6E02               	movwf	___fldiv@b+1,c
  7475  001BC0  0E00               	movlw	0
  7476  001BC2  6E03               	movwf	___fldiv@b+2,c
  7477  001BC4                     L10:
  7478  001BC4  0E00               	movlw	0
  7479  001BC6  6E04               	movwf	___fldiv@b+3,c
  7480  001BC8  5008               	movf	___fldiv@a+3,w,c
  7481  001BCA  0B80               	andlw	128
  7482  001BCC  1A0D               	xorwf	___fldiv@sign,f,c
  7483  001BCE  5008               	movf	___fldiv@a+3,w,c
  7484  001BD0  2408               	addwf	___fldiv@a+3,w,c
  7485  001BD2  6E19               	movwf	___fldiv@aexp,c
  7486  001BD4  BE07               	btfsc	___fldiv@a+2,7,c
  7487  001BD6  8019               	bsf	___fldiv@aexp,0,c
  7488  001BD8  5019               	movf	___fldiv@aexp,w,c
  7489  001BDA  B4D8               	btfsc	status,2,c
  7490  001BDC  D00D               	goto	l3501
  7491  001BDE  2819               	incf	___fldiv@aexp,w,c
  7492  001BE0  A4D8               	btfss	status,2,c
  7493  001BE2  D008               	goto	l3497
  7494  001BE4  0E00               	movlw	0
  7495  001BE6  6E05               	movwf	___fldiv@a,c
  7496  001BE8  0E00               	movlw	0
  7497  001BEA  6E06               	movwf	___fldiv@a+1,c
  7498  001BEC  0E00               	movlw	0
  7499  001BEE  6E07               	movwf	___fldiv@a+2,c
  7500  001BF0  0E00               	movlw	0
  7501  001BF2  6E08               	movwf	___fldiv@a+3,c
  7502  001BF4                     l3497:
  7503  001BF4  8E07               	bsf	___fldiv@a+2,7,c
  7504  001BF6  D006               	goto	L11
  7505  001BF8                     l3501:
  7506  001BF8  0E00               	movlw	0
  7507  001BFA  6E05               	movwf	___fldiv@a,c
  7508  001BFC  0E00               	movlw	0
  7509  001BFE  6E06               	movwf	___fldiv@a+1,c
  7510  001C00  0E00               	movlw	0
  7511  001C02  6E07               	movwf	___fldiv@a+2,c
  7512  001C04                     L11:
  7513  001C04  0E00               	movlw	0
  7514  001C06  6E08               	movwf	___fldiv@a+3,c
  7515  001C08  5005               	movf	___fldiv@a,w,c
  7516  001C0A  1006               	iorwf	___fldiv@a+1,w,c
  7517  001C0C  1007               	iorwf	___fldiv@a+2,w,c
  7518  001C0E  1008               	iorwf	___fldiv@a+3,w,c
  7519  001C10  A4D8               	btfss	status,2,c
  7520  001C12  D015               	goto	l3513
  7521  001C14  0E00               	movlw	0
  7522  001C16  6E01               	movwf	___fldiv@b,c
  7523  001C18  0E00               	movlw	0
  7524  001C1A  6E02               	movwf	___fldiv@b+1,c
  7525  001C1C  0E00               	movlw	0
  7526  001C1E  6E03               	movwf	___fldiv@b+2,c
  7527  001C20  0E00               	movlw	0
  7528  001C22  6E04               	movwf	___fldiv@b+3,c
  7529  001C24  0E80               	movlw	128
  7530  001C26  1203               	iorwf	___fldiv@b+2,f,c
  7531  001C28  0E7F               	movlw	127
  7532  001C2A  1204               	iorwf	___fldiv@b+3,f,c
  7533  001C2C  C001  F001         	movff	___fldiv@b,?___fldiv
  7534  001C30  C002  F002         	movff	___fldiv@b+1,?___fldiv+1
  7535  001C34  C003  F003         	movff	___fldiv@b+2,?___fldiv+2
  7536  001C38  C004  F004         	movff	___fldiv@b+3,?___fldiv+3
  7537  001C3C  0012               	return	
  7538  001C3E                     l3513:
  7539  001C3E  5018               	movf	___fldiv@bexp,w,c
  7540  001C40  A4D8               	btfss	status,2,c
  7541  001C42  D011               	goto	l3521
  7542  001C44  0E00               	movlw	0
  7543  001C46  6E01               	movwf	___fldiv@b,c
  7544  001C48  0E00               	movlw	0
  7545  001C4A  6E02               	movwf	___fldiv@b+1,c
  7546  001C4C  0E00               	movlw	0
  7547  001C4E  6E03               	movwf	___fldiv@b+2,c
  7548  001C50  0E00               	movlw	0
  7549  001C52  6E04               	movwf	___fldiv@b+3,c
  7550  001C54  C001  F001         	movff	___fldiv@b,?___fldiv
  7551  001C58  C002  F002         	movff	___fldiv@b+1,?___fldiv+1
  7552  001C5C  C003  F003         	movff	___fldiv@b+2,?___fldiv+2
  7553  001C60  C004  F004         	movff	___fldiv@b+3,?___fldiv+3
  7554  001C64  0012               	return	
  7555  001C66                     l3521:
  7556  001C66  5019               	movf	___fldiv@aexp,w,c
  7557  001C68  6E09               	movwf	??___fldiv& (0+255),c
  7558  001C6A  6A0A               	clrf	(??___fldiv+1)& (0+255),c
  7559  001C6C  1E09               	comf	??___fldiv,f,c
  7560  001C6E  1E0A               	comf	??___fldiv+1,f,c
  7561  001C70  4A09               	infsnz	??___fldiv,f,c
  7562  001C72  2A0A               	incf	??___fldiv+1,f,c
  7563  001C74  5018               	movf	___fldiv@bexp,w,c
  7564  001C76  6E0B               	movwf	(??___fldiv+2)& (0+255),c
  7565  001C78  6A0C               	clrf	(??___fldiv+3)& (0+255),c
  7566  001C7A  5009               	movf	??___fldiv,w,c
  7567  001C7C  260B               	addwf	??___fldiv+2,f,c
  7568  001C7E  500A               	movf	??___fldiv+1,w,c
  7569  001C80  220C               	addwfc	??___fldiv+3,f,c
  7570  001C82  0E7F               	movlw	127
  7571  001C84  240B               	addwf	??___fldiv+2,w,c
  7572  001C86  6E12               	movwf	___fldiv@new_exp,c
  7573  001C88  0E00               	movlw	0
  7574  001C8A  200C               	addwfc	??___fldiv+3,w,c
  7575  001C8C  6E13               	movwf	___fldiv@new_exp+1,c
  7576  001C8E  C001  F00E         	movff	___fldiv@b,___fldiv@rem
  7577  001C92  C002  F00F         	movff	___fldiv@b+1,___fldiv@rem+1
  7578  001C96  C003  F010         	movff	___fldiv@b+2,___fldiv@rem+2
  7579  001C9A  C004  F011         	movff	___fldiv@b+3,___fldiv@rem+3
  7580  001C9E  0E00               	movlw	0
  7581  001CA0  6E01               	movwf	___fldiv@b,c
  7582  001CA2  0E00               	movlw	0
  7583  001CA4  6E02               	movwf	___fldiv@b+1,c
  7584  001CA6  0E00               	movlw	0
  7585  001CA8  6E03               	movwf	___fldiv@b+2,c
  7586  001CAA  0E00               	movlw	0
  7587  001CAC  6E04               	movwf	___fldiv@b+3,c
  7588  001CAE  0E00               	movlw	0
  7589  001CB0  6E14               	movwf	___fldiv@grs,c
  7590  001CB2  0E00               	movlw	0
  7591  001CB4  6E15               	movwf	___fldiv@grs+1,c
  7592  001CB6  0E00               	movlw	0
  7593  001CB8  6E16               	movwf	___fldiv@grs+2,c
  7594  001CBA  0E00               	movlw	0
  7595  001CBC  6E17               	movwf	___fldiv@grs+3,c
  7596  001CBE  0E00               	movlw	0
  7597  001CC0  6E19               	movwf	___fldiv@aexp,c
  7598  001CC2  D028               	goto	l817
  7599  001CC4                     l3531:
  7600  001CC4  5019               	movf	___fldiv@aexp,w,c
  7601  001CC6  B4D8               	btfsc	status,2,c
  7602  001CC8  D011               	goto	l3539
  7603  001CCA  90D8               	bcf	status,0,c
  7604  001CCC  360E               	rlcf	___fldiv@rem,f,c
  7605  001CCE  360F               	rlcf	___fldiv@rem+1,f,c
  7606  001CD0  3610               	rlcf	___fldiv@rem+2,f,c
  7607  001CD2  3611               	rlcf	___fldiv@rem+3,f,c
  7608  001CD4  90D8               	bcf	status,0,c
  7609  001CD6  3601               	rlcf	___fldiv@b,f,c
  7610  001CD8  3602               	rlcf	___fldiv@b+1,f,c
  7611  001CDA  3603               	rlcf	___fldiv@b+2,f,c
  7612  001CDC  3604               	rlcf	___fldiv@b+3,f,c
  7613  001CDE  BE17               	btfsc	___fldiv@grs+3,7,c
  7614  001CE0  8001               	bsf	___fldiv@b,0,c
  7615  001CE2  90D8               	bcf	status,0,c
  7616  001CE4  3614               	rlcf	___fldiv@grs,f,c
  7617  001CE6  3615               	rlcf	___fldiv@grs+1,f,c
  7618  001CE8  3616               	rlcf	___fldiv@grs+2,f,c
  7619  001CEA  3617               	rlcf	___fldiv@grs+3,f,c
  7620  001CEC                     l3539:
  7621  001CEC  5005               	movf	___fldiv@a,w,c
  7622  001CEE  5C0E               	subwf	___fldiv@rem,w,c
  7623  001CF0  5006               	movf	___fldiv@a+1,w,c
  7624  001CF2  580F               	subwfb	___fldiv@rem+1,w,c
  7625  001CF4  5007               	movf	___fldiv@a+2,w,c
  7626  001CF6  5810               	subwfb	___fldiv@rem+2,w,c
  7627  001CF8  5008               	movf	___fldiv@a+3,w,c
  7628  001CFA  5811               	subwfb	___fldiv@rem+3,w,c
  7629  001CFC  A0D8               	btfss	status,0,c
  7630  001CFE  D009               	goto	l3545
  7631  001D00  8C17               	bsf	___fldiv@grs+3,6,c
  7632  001D02  5005               	movf	___fldiv@a,w,c
  7633  001D04  5E0E               	subwf	___fldiv@rem,f,c
  7634  001D06  5006               	movf	___fldiv@a+1,w,c
  7635  001D08  5A0F               	subwfb	___fldiv@rem+1,f,c
  7636  001D0A  5007               	movf	___fldiv@a+2,w,c
  7637  001D0C  5A10               	subwfb	___fldiv@rem+2,f,c
  7638  001D0E  5008               	movf	___fldiv@a+3,w,c
  7639  001D10  5A11               	subwfb	___fldiv@rem+3,f,c
  7640  001D12                     l3545:
  7641  001D12  2A19               	incf	___fldiv@aexp,f,c
  7642  001D14                     l817:
  7643  001D14  0E19               	movlw	25
  7644  001D16  6419               	cpfsgt	___fldiv@aexp,c
  7645  001D18  D7D5               	goto	l3531
  7646  001D1A  500E               	movf	___fldiv@rem,w,c
  7647  001D1C  100F               	iorwf	___fldiv@rem+1,w,c
  7648  001D1E  1010               	iorwf	___fldiv@rem+2,w,c
  7649  001D20  1011               	iorwf	___fldiv@rem+3,w,c
  7650  001D22  B4D8               	btfsc	status,2,c
  7651  001D24  D011               	goto	l3557
  7652  001D26  8014               	bsf	___fldiv@grs,0,c
  7653  001D28  D00F               	goto	l3557
  7654  001D2A                     l3551:
  7655  001D2A  90D8               	bcf	status,0,c
  7656  001D2C  3601               	rlcf	___fldiv@b,f,c
  7657  001D2E  3602               	rlcf	___fldiv@b+1,f,c
  7658  001D30  3603               	rlcf	___fldiv@b+2,f,c
  7659  001D32  3604               	rlcf	___fldiv@b+3,f,c
  7660  001D34  BE17               	btfsc	___fldiv@grs+3,7,c
  7661  001D36  8001               	bsf	___fldiv@b,0,c
  7662  001D38  90D8               	bcf	status,0,c
  7663  001D3A  3614               	rlcf	___fldiv@grs,f,c
  7664  001D3C  3615               	rlcf	___fldiv@grs+1,f,c
  7665  001D3E  3616               	rlcf	___fldiv@grs+2,f,c
  7666  001D40  3617               	rlcf	___fldiv@grs+3,f,c
  7667  001D42  0612               	decf	___fldiv@new_exp,f,c
  7668  001D44  A0D8               	btfss	status,0,c
  7669  001D46  0613               	decf	___fldiv@new_exp+1,f,c
  7670  001D48                     l3557:
  7671  001D48  AE03               	btfss	___fldiv@b+2,7,c
  7672  001D4A  D7EF               	goto	l3551
  7673  001D4C  0E00               	movlw	0
  7674  001D4E  6E19               	movwf	___fldiv@aexp,c
  7675  001D50  AE17               	btfss	___fldiv@grs+3,7,c
  7676  001D52  D016               	goto	l828
  7677  001D54  0EFF               	movlw	255
  7678  001D56  1414               	andwf	___fldiv@grs,w,c
  7679  001D58  6E09               	movwf	??___fldiv& (0+255),c
  7680  001D5A  0EFF               	movlw	255
  7681  001D5C  1415               	andwf	___fldiv@grs+1,w,c
  7682  001D5E  6E0A               	movwf	(??___fldiv+1)& (0+255),c
  7683  001D60  0EFF               	movlw	255
  7684  001D62  1416               	andwf	___fldiv@grs+2,w,c
  7685  001D64  6E0B               	movwf	(??___fldiv+2)& (0+255),c
  7686  001D66  0E7F               	movlw	127
  7687  001D68  1417               	andwf	___fldiv@grs+3,w,c
  7688  001D6A  6E0C               	movwf	(??___fldiv+3)& (0+255),c
  7689  001D6C  5009               	movf	??___fldiv,w,c
  7690  001D6E  100A               	iorwf	??___fldiv+1,w,c
  7691  001D70  100B               	iorwf	??___fldiv+2,w,c
  7692  001D72  100C               	iorwf	??___fldiv+3,w,c
  7693  001D74  A4D8               	btfss	status,2,c
  7694  001D76  D002               	goto	l3567
  7695  001D78  A001               	btfss	___fldiv@b,0,c
  7696  001D7A  D002               	goto	l828
  7697  001D7C                     l3567:
  7698  001D7C  0E01               	movlw	1
  7699  001D7E  6E19               	movwf	___fldiv@aexp,c
  7700  001D80                     l828:
  7701  001D80  5019               	movf	___fldiv@aexp,w,c
  7702  001D82  B4D8               	btfsc	status,2,c
  7703  001D84  D01F               	goto	l3577
  7704  001D86  0E01               	movlw	1
  7705  001D88  2601               	addwf	___fldiv@b,f,c
  7706  001D8A  0E00               	movlw	0
  7707  001D8C  2202               	addwfc	___fldiv@b+1,f,c
  7708  001D8E  2203               	addwfc	___fldiv@b+2,f,c
  7709  001D90  2204               	addwfc	___fldiv@b+3,f,c
  7710  001D92  A004               	btfss	___fldiv@b+3,0,c
  7711  001D94  D017               	goto	l3577
  7712  001D96  C001  F009         	movff	___fldiv@b,??___fldiv
  7713  001D9A  C002  F00A         	movff	___fldiv@b+1,??___fldiv+1
  7714  001D9E  C003  F00B         	movff	___fldiv@b+2,??___fldiv+2
  7715  001DA2  C004  F00C         	movff	___fldiv@b+3,??___fldiv+3
  7716  001DA6  340C               	rlcf	??___fldiv+3,w,c
  7717  001DA8  320C               	rrcf	??___fldiv+3,f,c
  7718  001DAA  320B               	rrcf	??___fldiv+2,f,c
  7719  001DAC  320A               	rrcf	??___fldiv+1,f,c
  7720  001DAE  3209               	rrcf	??___fldiv,f,c
  7721  001DB0  C009  F001         	movff	??___fldiv,___fldiv@b
  7722  001DB4  C00A  F002         	movff	??___fldiv+1,___fldiv@b+1
  7723  001DB8  C00B  F003         	movff	??___fldiv+2,___fldiv@b+2
  7724  001DBC  C00C  F004         	movff	??___fldiv+3,___fldiv@b+3
  7725  001DC0  4A12               	infsnz	___fldiv@new_exp,f,c
  7726  001DC2  2A13               	incf	___fldiv@new_exp+1,f,c
  7727  001DC4                     l3577:
  7728  001DC4  BE13               	btfsc	___fldiv@new_exp+1,7,c
  7729  001DC6  D010               	goto	l3581
  7730  001DC8  5013               	movf	___fldiv@new_exp+1,w,c
  7731  001DCA  E103               	bnz	u3920
  7732  001DCC  2812               	incf	___fldiv@new_exp,w,c
  7733  001DCE  A0D8               	btfss	status,0,c
  7734  001DD0  D00B               	goto	l3581
  7735  001DD2                     u3920:
  7736  001DD2  0E00               	movlw	0
  7737  001DD4  6E13               	movwf	___fldiv@new_exp+1,c
  7738  001DD6  6812               	setf	___fldiv@new_exp,c
  7739  001DD8  0E00               	movlw	0
  7740  001DDA  6E01               	movwf	___fldiv@b,c
  7741  001DDC  0E00               	movlw	0
  7742  001DDE  6E02               	movwf	___fldiv@b+1,c
  7743  001DE0  0E00               	movlw	0
  7744  001DE2  6E03               	movwf	___fldiv@b+2,c
  7745  001DE4  0E00               	movlw	0
  7746  001DE6  6E04               	movwf	___fldiv@b+3,c
  7747  001DE8                     l3581:
  7748  001DE8  BE13               	btfsc	___fldiv@new_exp+1,7,c
  7749  001DEA  D005               	goto	l3583
  7750  001DEC  5013               	movf	___fldiv@new_exp+1,w,c
  7751  001DEE  E111               	bnz	l3585
  7752  001DF0  0412               	decf	___fldiv@new_exp,w,c
  7753  001DF2  B0D8               	btfsc	status,0,c
  7754  001DF4  D00E               	goto	l3585
  7755  001DF6                     l3583:
  7756  001DF6  0E00               	movlw	0
  7757  001DF8  6E13               	movwf	___fldiv@new_exp+1,c
  7758  001DFA  0E00               	movlw	0
  7759  001DFC  6E12               	movwf	___fldiv@new_exp,c
  7760  001DFE  0E00               	movlw	0
  7761  001E00  6E01               	movwf	___fldiv@b,c
  7762  001E02  0E00               	movlw	0
  7763  001E04  6E02               	movwf	___fldiv@b+1,c
  7764  001E06  0E00               	movlw	0
  7765  001E08  6E03               	movwf	___fldiv@b+2,c
  7766  001E0A  0E00               	movlw	0
  7767  001E0C  6E04               	movwf	___fldiv@b+3,c
  7768  001E0E  0E00               	movlw	0
  7769  001E10  6E0D               	movwf	___fldiv@sign,c
  7770  001E12                     l3585:
  7771  001E12  C012  F018         	movff	___fldiv@new_exp,___fldiv@bexp
  7772  001E16  A018               	btfss	___fldiv@bexp,0,c
  7773  001E18  D002               	goto	l3591
  7774  001E1A  8E03               	bsf	___fldiv@b+2,7,c
  7775  001E1C  D001               	goto	l3593
  7776  001E1E                     l3591:
  7777  001E1E  9E03               	bcf	___fldiv@b+2,7,c
  7778  001E20                     l3593:
  7779  001E20  90D8               	bcf	status,0,c
  7780  001E22  3018               	rrcf	___fldiv@bexp,w,c
  7781  001E24  6E04               	movwf	___fldiv@b+3,c
  7782  001E26  500D               	movf	___fldiv@sign,w,c
  7783  001E28  1204               	iorwf	___fldiv@b+3,f,c
  7784  001E2A  C001  F001         	movff	___fldiv@b,?___fldiv
  7785  001E2E  C002  F002         	movff	___fldiv@b+1,?___fldiv+1
  7786  001E32  C003  F003         	movff	___fldiv@b+2,?___fldiv+2
  7787  001E36  C004  F004         	movff	___fldiv@b+3,?___fldiv+3
  7788  001E3A  0012               	return	
  7789  001E3C                     __end_of___fldiv:
  7790                           	opt stack 0
  7791                           tblptru	equ	0xFF8
  7792                           tblptrh	equ	0xFF7
  7793                           tblptrl	equ	0xFF6
  7794                           tablat	equ	0xFF5
  7795                           prodh	equ	0xFF4
  7796                           prodl	equ	0xFF3
  7797                           postinc0	equ	0xFEE
  7798                           wreg	equ	0xFE8
  7799                           indf2	equ	0xFDF
  7800                           postinc2	equ	0xFDE
  7801                           postdec2	equ	0xFDD
  7802                           fsr2h	equ	0xFDA
  7803                           fsr2l	equ	0xFD9
  7804                           status	equ	0xFD8
  7805                           tblptru	equ	0xFF8
  7806                           tblptrh	equ	0xFF7
  7807                           tblptrl	equ	0xFF6
  7808                           tablat	equ	0xFF5
  7809                           prodh	equ	0xFF4
  7810                           prodl	equ	0xFF3
  7811                           postinc0	equ	0xFEE
  7812                           wreg	equ	0xFE8
  7813                           indf2	equ	0xFDF
  7814                           postinc2	equ	0xFDE
  7815                           postdec2	equ	0xFDD
  7816                           fsr2h	equ	0xFDA
  7817                           fsr2l	equ	0xFD9
  7818                           status	equ	0xFD8
  7819                           
  7820                           	psect	rparam
  7821  0000                     tblptru	equ	0xFF8
  7822                           tblptrh	equ	0xFF7
  7823                           tblptrl	equ	0xFF6
  7824                           tablat	equ	0xFF5
  7825                           prodh	equ	0xFF4
  7826                           prodl	equ	0xFF3
  7827                           postinc0	equ	0xFEE
  7828                           wreg	equ	0xFE8
  7829                           indf2	equ	0xFDF
  7830                           postinc2	equ	0xFDE
  7831                           postdec2	equ	0xFDD
  7832                           fsr2h	equ	0xFDA
  7833                           fsr2l	equ	0xFD9
  7834                           status	equ	0xFD8


Data Sizes:
    Strings     66
    Constant    144
    Data        4
    BSS         24
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     90      95
    BANK0           160     25      54
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    sp__utoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(COMRAM[6]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_4(CODE[7]), STR_3(CODE[8]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 8
		 -> str(BANK0[8]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 6
		 -> LCD_write_integer@convertedInt(COMRAM[6]), 

    LCD_write_string@buffer	PTR unsigned char  size(2) Largest target is 8
		 -> str(BANK0[8]), LCD_write_integer@convertedInt(COMRAM[6]), 

    LCD_write_message@buffer	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_5(CODE[17]), STR_2(CODE[17]), STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    _ricarica->_sprintf
    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _read_adc->___flmul
    ___xxtofl->___awdiv
    ___flmul->___awdiv
    ___awdiv->___awmod
    ___awdiv->___wmul
    _LCD_write_string->_LCD_write_char
    _LCD_goto_line->_LCD_send_command
    _inizializzazione->_LCD_write_message
    _LCD_write_message->_LCD_write_char
    _LCD_write_char->_LCD_send_command
    _LCD_initialize->_LCD_cursor
    _LCD_cursor->_LCD_send_command
    _LCD_clear->_LCD_send_command
    _LCD_enable_pulse->_delay_ms
    _delay_ms->___wmul

Critical Paths under _main in BANK0

    _ricarica->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  114793
                            ___fldiv
                   _inizializzazione
                           _read_adc
                           _ricarica
 ---------------------------------------------------------------------------------
 (1) _ricarica                                             0     0      0   64144
                      _LCD_goto_line
                  _LCD_write_message
                   _LCD_write_string
                             ___flge
                           _read_adc
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             43    35      8   31307
                                             80 COMRAM    10     2      8
                                              0 BANK0     25    25      0
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               13     9      4    7261
                                             39 COMRAM     9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              17    13      4    7063
                                             39 COMRAM    13     9      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         17     9      8     431
                                              0 COMRAM    17     9      8
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          14     6      8     431
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     543
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     418
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     421
                                             48 COMRAM    10     6      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    2617
                                             72 COMRAM     8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    2342
                                             52 COMRAM    20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     109
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     822
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) _read_adc                                             3     3      0    8104
                                             39 COMRAM     3     3      0
                            ___awdiv
                            ___flmul
                             ___wmul
                           ___xxtofl
                           _delay_ms
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     514
                                             14 COMRAM    14    10      4
                            ___awdiv (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    3488
                                             14 COMRAM    25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1836
                                              6 COMRAM     8     4      4
                            ___awmod (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCD_write_string                                     2     0      2    8162
                                             17 COMRAM     2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (2) _LCD_goto_line                                        1     1      0    7587
                                             12 COMRAM     1     1      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (1) _inizializzazione                                     0     0      0   41240
                          _LCD_clear
                     _LCD_initialize
                  _LCD_write_message
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _LCD_write_message                                    2     0      2    8162
                                             17 COMRAM     2     0      2
                     _LCD_write_char
 ---------------------------------------------------------------------------------
 (3) _LCD_write_char                                       5     5      0    7925
                                             12 COMRAM     5     5      0
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (2) _LCD_initialize                                       1     1      0   24180
                                             14 COMRAM     1     1      0
                          _LCD_clear
                         _LCD_cursor
                   _LCD_send_command
                           _delay_ms
                   _delay_set_quartz
 ---------------------------------------------------------------------------------
 (3) _delay_set_quartz                                     1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _LCD_cursor                                           2     1      1    7673
                                             12 COMRAM     2     1      1
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (3) _LCD_clear                                            0     0      0    7565
                   _LCD_send_command
 ---------------------------------------------------------------------------------
 (4) _LCD_send_command                                     4     1      3    7565
                                              8 COMRAM     4     1      3
                   _LCD_enable_pulse
 ---------------------------------------------------------------------------------
 (5) _LCD_enable_pulse                                     0     0      0    1333
                           _delay_ms
 ---------------------------------------------------------------------------------
 (3) _delay_ms                                             2     0      2    1333
                                              6 COMRAM     2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     799
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             25    17      8    1305
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___fldiv
   _inizializzazione
     _LCD_clear
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_initialize
       _LCD_clear
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_cursor
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
       _delay_ms
         ___wmul
       _delay_set_quartz
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _delay_ms
       ___wmul
   _read_adc
     ___awdiv
       ___awmod (ARG)
       ___wmul (ARG)
     ___flmul
       ___awdiv (ARG)
         ___awmod (ARG)
         ___wmul (ARG)
       ___awmod (ARG)
     ___wmul
     ___xxtofl
       ___awdiv (ARG)
         ___awmod (ARG)
         ___wmul (ARG)
       ___wmul (ARG)
     _delay_ms
       ___wmul
   _ricarica
     _LCD_goto_line
       _LCD_send_command
         _LCD_enable_pulse
           _delay_ms
             ___wmul
     _LCD_write_message
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     _LCD_write_string
       _LCD_write_char
         _LCD_send_command
           _LCD_enable_pulse
             _delay_ms
               ___wmul
     ___flge
     _read_adc
       ___awdiv
         ___awmod (ARG)
         ___wmul (ARG)
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
         ___awmod (ARG)
       ___wmul
       ___xxtofl
         ___awdiv (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       _delay_ms
         ___wmul
     _sprintf
       ___awdiv
         ___awmod (ARG)
         ___wmul (ARG)
       ___fladd
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
             ___wmul (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
               ___wmul (ARG)
             ___awmod (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
         ___awmod (ARG)
       ___flneg
       ___flsub
         ___fladd
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
               ___wmul (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
                 ___wmul (ARG)
               ___awmod (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
       ___fltol
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
             ___wmul (ARG)
           ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
             ___wmul (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
               ___wmul (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
       ___wmul
       ___xxtofl
         ___awdiv (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
           ___wmul (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
             ___wmul (ARG)
           ___awmod (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
           ___wmul (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
             ___wmul (ARG)
           ___awmod (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     19      36       5       33.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5A      5F       1      100.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      95      20        0.0%
DATA                 0      0      95       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Sat Feb 27 22:53:03 2016

                  ___fldiv@aexp 0019                    ___fldiv@bexp 0018       __size_of_delay_set_quartz 0008  
                  ___fldiv@sign 000D                    ___awdiv@sign 000C                     __CFG_BOR$ON 000000  
           ___wmul@multiplicand 0003                     __CFG_BORV$3 000000                    __CFG_CP0$OFF 000000  
                  __CFG_CP1$OFF 000000                    __CFG_CP2$OFF 000000                    __CFG_CP3$OFF 000000  
                           l126 2E30                             l165 20DA                             l249 0E72  
                           l474 25CC                             l571 2416                             l484 26C2  
                           l572 243E                             l817 1D14                             l761 19A4  
                           l762 199C                             l578 24A4                             l763 197A  
                           l667 2B7A                             l828 1D80                             l677 2CC0  
                           l847 157C                             l864 1818                             l856 1792  
                           l778 1A92                             l883 232C                             l787 1AF6  
                           l884 2340                             l876 22F0                             l869 2272  
                  __CFG_CPB$OFF 000000                    __CFG_CPD$OFF 000000                     ?_LCD_cursor 000D  
                           _str 0087                    ___awmod@sign 0006                             prod 000FF3  
                           wreg 000FE8                    __CFG_FOSC$HS 000000                    ___flmul@aexp 0020  
                  ___flmul@bexp 0021                    ___flmul@sign 001B                    ___flmul@temp 0026  
                  ___flmul@prod 0022                    __CFG_LVP$OFF 000000          __size_of_LCD_goto_line 00B8  
                  ___fltol@exp1 003A                    __CFG_WDT$OFF 000000                            l3101 2322  
                          l3015 2892                            l3121 29F8                            l3113 2372  
                          l3033 28E2                            l3025 28BA                            l3131 2E9A  
                          l3123 2A1E                            l2411 1920                            l3027 28C6  
                          l3019 28A2                            l3043 2B2C                            l3211 08E2  
                          l2317 2E24                            l3125 2A44                            l2501 1AF2  
                          l3029 28CC                            l3045 2B38                            l3301 0C2E  
                          l3135 2EAE                            l3119 29D2                            l3127 2A6A  
                          l3143 2F4A                            l3207 214A                            l2511 1B3C  
                          l2423 1988                            l3055 2B6C                            l3047 2B3C  
                          l3071 2CB2                            l3063 2C7E                            l3311 0C98  
                          l3231 097A                            l3081 2282                            l2425 198C  
                          l2345 1878                            l3065 2C8A                            l3241 09B4  
                          l3225 092A                            l3217 08FA                            l3139 2F38  
                          l3091 22B2                            l2523 1B6A                            l2515 1B48  
                          l3067 2C8E                            l3403 1094                            l3315 0D10  
                          l3235 098A                            l3411 10D6                            l3501 1BF8  
                          l2701 2AF2                            l3093 22D8                            l2525 1B6C  
                          l2381 18E4                            l2373 18C4                            l2349 187C  
                          l3333 0D80                            l3317 0D16                            l3229 0964  
                          l2623 175A                            l2551 153C                            l3087 22A0  
                          l2519 1B62                            l2447 19E4                            l2439 19C0  
                          l3407 10B8                            l3351 0E40                            l3335 0D86  
                          l3343 0E1A                            l3247 09CE                            l3239 0990  
                          l3521 1C66                            l3513 1C3E                            l2705 2B00  
                          l2633 178E                            l2617 173C                            l3089 22A6  
                          l3193 20C2                            l2449 19E8                            l2457 19FA  
                          l2369 18C0                            l2721 2BAC                            l2801 1226  
                          l3353 0E54                            l3345 0E28                            l3329 0D5C  
                          l3281 0B20                            l3273 0AA0                            l3257 0A20  
                          l3409 10BC                            l3531 1CC4                            l2643 17D6  
                          l2571 1588                            l2547 1528                            l3099 2316  
                          l2475 1AB6                            l2491 1AD6                            l2467 1A82  
                          l2811 12F4                            l3291 0BB6                            l2565 1568  
                          l2549 152C                            l3189 20BA                            l2485 1ACC  
                          l2493 1ADA                            l2741 2BF2                            l2733 2BDA  
                          l2725 2BBA                            l2717 2BA0                            l3381 0FF8  
                          l3365 0EA4                            l3357 0E76                            l3285 0B4E  
                          l3453 2954                            l3551 1D2A                            l2647 17F4  
                          l2575 159A                            l2567 156C                            l2903 24D4  
                          l2727 2BC2                            l2807 12CA                            l3287 0B64  
                          l3545 1D12                            l3481 1BB8                            l2673 2A9A  
                          l2649 1802                            l2729 2BC6                            l2737 2BE4  
                          l2825 14D2                            l3369 0F06                            l3297 0C00  
                          l3289 0BA0                            l3539 1CEC                            l2659 1836  
                          l2931 2564                            l2923 2534                            l2819 142E  
                          l3395 1044                            l3387 1010                            l3379 0FEA  
                          l3581 1DE8                            l3557 1D48                            l3477 1BB4  
                          l2685 2AC0                            l2909 24F2                            l2853 23DC  
                          l2837 2F70                            l3389 101E                            l3591 1E1E  
                          l3583 1DF6                            l3567 1D7C                            l2687 2AC8  
                          l2679 2AAA                            l2943 2592                            l2847 23B0  
                          l3399 1068                            l3593 1E20                            l3585 1E12  
                          l3577 1DC4                            l3497 1BF4                            l2697 2AE8  
                          l2689 2ACC                            l2953 25BA                            l3673 2D20  
                          l2971 2646                            l2955 25C6                            l2947 25A2  
                          l2883 246A                            l2787 2068                            l2779 1F9C  
                          l2981 26FA                            l2893 2492                            l2975 2684  
                          l2967 2612                            l2895 249E                            l2887 247A  
                          l2989 2E86                            l2999 2836                            STR_1 08A2  
                          STR_2 0891                            STR_3 08C4                            STR_4 08CC  
                          STR_5 08B3                            u3100 2854                            u2045 2E44  
                          _LATA 000F89                            u2046 2E46                            _LATB 000F8A  
                          u2055 2E4E                            _LATC 000F8B                            u2056 2E50  
                          u2065 2E58                            u3105 284A                            u2066 2E5A  
                          u2170 1950                            u2075 2E62                            u2076 2E64  
                          u2180 1960                            u2190 1962                            u2630 17E4  
                          u2550 16FE                            u4147 2E26                            u2555 16F4  
                          u3590 0E6A                            u2871 2394                            u3920 1DD2  
                          u2891 23C0                            _main 2CD2       __size_of_LCD_send_command 0030  
                          fsr2h 000FDA                            indf2 000FDF                            fsr2l 000FD9  
                          prodh 000FF4                            prodl 000FF3                            start 0000  
                 __CFG_IESO$OFF 000000                 ___fldiv@new_exp 0012              __size_of_LCD_clear 0026  
                  _sprintf$1109 0060                   __CFG_MCLRE$ON 000000                    ___param_bank 000010  
      __end_of_LCD_enable_pulse 2F96         __size_of_LCD_initialize 011A                   __CFG_PLLDIV$1 000000  
                __CFG_CCP2MX$ON 000000                   ___fltol@sign1 0039                 __end_of___fladd 1B88  
                         ?_main 0001                 __end_of___fldiv 1E3C                 __end_of___awdiv 2B0A  
               __end_of___flneg 2E98                 __end_of___awmod 2BFC                 __end_of___flmul 184C  
               __end_of___flsub 2E08                 __end_of___fltol 28F4                 __end_of___lldiv 2B8C  
               ___awdiv@divisor 0009                 __end_of___llmod 2CD2                 ___awdiv@counter 000B  
                 __CFG_USBDIV$1 000000                           _TRISA 000F92                           _TRISB 000F93  
                         _TRISC 000F94                   __CFG_PWRT$OFF 000000                   __CFG_WRT0$OFF 000000  
                 __CFG_WRT1$OFF 000000                   __CFG_WRT2$OFF 000000                   __CFG_WRT3$OFF 000000  
                __CFG_EBTR0$OFF 000000                  __CFG_FCMEN$OFF 000000                  __CFG_EBTR1$OFF 000000  
                __CFG_EBTR2$OFF 000000                  __CFG_EBTR3$OFF 000000                   __CFG_WRTB$OFF 000000  
                 __CFG_WRTC$OFF 000000                   __CFG_WRTD$OFF 000000                  __CFG_EBTRB$OFF 000000  
               __end_of_dpowers 0891                           _scale 10E4                 __end_of_isdigit 2F78  
                         tablat 000FF5                           status 000FD8                 __end_of_sprintf 10E4  
              _inizializzazione 2D2A                  __CFG_PBADEN$ON 000000             __size_of_LCD_cursor 0028  
               __initialization 2D78                    __end_of_main 2D2A                   _LCD_goto_line 29CE  
             ?_LCD_write_string 0012                          ??_main 005B                   __activetblptr 000002  
            ??_LCD_write_string 0014            __size_of__tdiv_to_l_ 0132               __end_of_LCD_clear 2F10  
        LCD_write_string@buffer 0012                          _ADCON0 000FC2                          _ADCON1 000FC1  
                        _ADCON2 000FC0                ___llmod@dividend 0001                          ?_scale 0028  
                        _ADRESH 000FC4                          _ADRESL 000FC3                ___awdiv@dividend 0007  
              __end_of___xxtofl 2384                __end_of_delay_ms 2E3A                  __CFG_XINST$OFF 000000  
              __end_of__powers_ 0869                  ?_LCD_goto_line 0001                          ___flge 25DE  
                     ??___fladd 003D                _delay_set_quartz 2F96                          ___wmul 2F10  
                     ??___fldiv 0009                       ??___awdiv 000B                       ??___flneg 0005  
                __CFG_STVREN$ON 000000                       ??___awmod 0005                       ??___flmul 0017  
                     ??___flsub 0051                       ??___fltol 0035                       ??___lldiv 0009  
                     ??___llmod 0009         __size_of_LCD_write_char 0070                __end_of_read_adc 2234  
                        _fround 1E3C  LCD_initialize@quartz_frequency 000F                          clear_0 2D7E  
              ___awdiv@quotient 000D                 ___awmod@divisor 0003                 ___awmod@counter 0005  
              __end_of_ricarica 29CE                    __pdataCOMRAM 005F                       ??_isdigit 0001  
                  __mediumconst 0000                          tblptrh 000FF7                          tblptrl 000FF6  
                        tblptru 000FF8                       ??_sprintf 0059                      ___flge@ff1 0001  
                    ___flge@ff2 0005                    ___xxtofl@arg 0019                    ___xxtofl@exp 0018  
                  ___xxtofl@val 000F                      __accesstop 0060         __end_of__initialization 2DB8  
                    ___flneg@f1 0001                _LCD_send_command 2E3A                   ___rparam_used 000001  
                    ___fltol@f1 0031          LCD_write_integer@F3929 0079                  __pcstackCOMRAM 0001  
                  __pidataBANK0 2F9E                   __end_of_scale 14FC                  _LCD_initialize 26FE  
             _LCD_write_message 2E98              ?_LCD_write_message 0012                      __div_to_l_ 24B6  
                  ??_LCD_cursor 000E                 __div_to_l_@exp1 000E             ??_LCD_write_message 0014  
               __div_to_l_@cntr 000D                         ??_scale 002C                 __div_to_l_@quot 0009  
                    __pbssBANK0 0079                      __pnvCOMRAM 005B                   __div_to_l_@f1 0001  
                 __div_to_l_@f2 0005                 ??_LCD_goto_line 000D              __end_of_LCD_cursor 2EEA  
        __end_of_LCD_initialize 2818                         ?___flge 0001                         ?___wmul 0001  
     __end_of_LCD_write_message 2EC2               ?_LCD_enable_pulse 0001                         ?_fround 0028  
            ??_LCD_enable_pulse 0009        __end_of_inizializzazione 2D78                       ?___xxtofl 000F  
              LCD_cursor@active 000E                       ?_delay_ms 0007                 __CFG_VREGEN$OFF 000000  
                     ?_read_adc 0001                       ?_ricarica 0001               __end_of__npowers_ 0835  
                       __Hparam 0000                      _scale$1108 002C                         __Lparam 0000  
              delay_ms@value_ms 0007                 ?_LCD_initialize 0001                 __size_of___flge 0120  
                       ___fladd 184C                         ___fldiv 1B88                         ___awdiv 2A86  
                       ___flneg 2E6A                         ___awmod 2B8C                         ___flmul 14FC  
                       ___flsub 2DC2                         ___fltol 2818                         ___lldiv 2B0A  
               __size_of___wmul 0026                  _LCD_write_char 2BFC                         ___llmod 2C6C  
                  __psmallconst 0800                         __pcinit 2D78                 __size_of_fround 027A  
                       __ramtop 0800             LCD_write_char@value 0011                         __ptext0 2CD2  
                       __ptext1 28F4                         __ptext2 08D4                         __ptext3 10E4  
                       __ptext4 2F5A                         __ptext5 1E3C                         __ptext6 2B8C  
                       __ptext7 2384                         __ptext8 24B6                         __ptext9 2C6C  
                   ?__div_to_l_ 0001                LCD_write_char@D0 0010                LCD_write_char@D1 000F  
              LCD_write_char@D2 000E                LCD_write_char@D3 000D                         _dpowers 0869  
                       _current 007F                         _isdigit 2F5A                      ??___xxtofl 0013  
              ___awmod@dividend 0001                         _lettura 005D                      ??_delay_ms 0009  
      __end_of_delay_set_quartz 2F9E                         _sprintf 08D4                         _voltage 0083  
                     _LCD_clear 2EEA            end_of_initialization 2DB8       __size_of_LCD_write_string 0024  
                  _combinazioni 0093                   __Lmediumconst 0000                      ??_read_adc 0028  
                    ??_ricarica 005B                 ___lldiv@divisor 0005              LCD_cursor@blinking 000D  
               ___lldiv@counter 000D          __end_of_LCD_write_char 2C6C                         postdec2 000FDD  
                       postinc0 000FEE                         postinc2 000FDE      __size_of_LCD_write_message 002A  
                __tdiv_to_l_@f1 0001                  __tdiv_to_l_@f2 0005                   ??__tdiv_to_l_ 0009  
                     _PORTCbits 000F82        __end_of_LCD_send_command 2E6A                     ___fladd@grs 0048  
                 ___xxtofl@sign 0017                     ___fldiv@grs 0014                     ___fldiv@rem 000E  
                    ?_LCD_clear 0001         _clock_counter_reference 005B                     ___flmul@grs 001C  
           __size_of__div_to_l_ 0128                 ?_LCD_write_char 0001                  __end_of___flge 26FE  
                __end_of___wmul 2F36                   __pidataCOMRAM 2FA1                  __end_of_fround 20B6  
           start_initialization 2D78             __end_of__tdiv_to_l_ 24B6                 ___llmod@divisor 0005  
               ___llmod@counter 0009                        ??___flge 0009                        ??___wmul 0005  
                   __pdataBANK0 0093                __CFG_LPT1OSC$OFF 000000                        ??_fround 002C  
                 sprintf@tmpval 006E                       ___fladd@a 0039                       ___fladd@b 0035  
                    fround@prec 0034                       ___fldiv@a 0005                       ___fldiv@b 0001  
             ?_inizializzazione 0001                       ___flmul@a 0013                       ___flmul@b 000F  
                   __pbssCOMRAM 005D                       ___flsub@a 004D                       ___flsub@b 0049  
                 __pcstackBANK0 0060              ??_inizializzazione 0014               __size_of___xxtofl 0150  
     __size_of_LCD_enable_pulse 001E               __size_of_delay_ms 0032                     ??_LCD_clear 000D  
       LCD_write_message@buffer 0012                _LCD_write_string 2F36                     sprintf@flag 0066  
                   sprintf@fval 0074                     sprintf@prec 0072                ??_LCD_initialize 000F  
                     __pnvBANK0 008F       delay_set_quartz@frequency 0001               __size_of_read_adc 017E  
            LCD_send_command@D0 000B              LCD_send_command@D1 000A              LCD_send_command@D2 0009  
            LCD_send_command@D3 000C           __end_of_LCD_goto_line 2A86               __size_of_ricarica 00DA  
                      ?___fladd 0035                        ?___fldiv 0001                        ?___awdiv 0007  
                      ?___flneg 0001                        ?___awmod 0001                        ?___flmul 000F  
                      ?___flsub 0049                        ?___fltol 0031                        ?___lldiv 0001  
                      ?___llmod 0001                       __npowers_ 0801                     __tdiv_to_l_ 2384  
                  ??__div_to_l_ 0009                     __smallconst 0800                        ?_isdigit 0001  
                      ?_sprintf 0051                  __size_of_scale 0418               ?_delay_set_quartz 0001  
            ??_delay_set_quartz 0001                  ___wmul@product 0005                        _LATBbits 000F8A  
                      _LATCbits 000F8B    _delay_quartz_frequency_value 005F              __end_of__div_to_l_ 25DE  
              __CFG_WDTPS$32768 000000                      _ADCON0bits 000FC2               ___wmul@multiplier 0001  
             ?_LCD_send_command 0009              ??_LCD_send_command 000C                ??_LCD_write_char 000D  
             LCD_goto_line@line 000D                        __Hrparam 0000                        __Lrparam 0000  
                     read_adc@i 002A                __size_of___fladd 033C                __size_of___fldiv 02B4  
              __size_of___awdiv 0084                __size_of___flneg 002E                __size_of___awmod 0070  
              __size_of___flmul 0350                __size_of___flsub 0046                __size_of___fltol 00DC  
              __size_of___lldiv 0082                __size_of___llmod 0066                     _fround$1106 0030  
                   _fround$1107 002C                     _isdigit$733 0002                      sprintf@exp 006C  
                    sprintf@val 0068                        ___xxtofl 2234                __size_of_isdigit 001E  
                      _delay_ms 2E08                _LCD_enable_pulse 2F78                        __ptext10 2B0A  
                      __ptext11 2818                        __ptext20 2F36                        __ptext12 2DC2  
                      __ptext21 29CE                        __ptext13 184C                        __ptext30 2F78  
                      __ptext22 2D2A                        __ptext14 2E6A                        __ptext31 2E08  
                      __ptext23 2E98                        __ptext15 25DE                        __ptext32 2F10  
                      __ptext24 2BFC                        __ptext16 20B6                        __ptext33 1B88  
                      __ptext25 26FE                        __ptext17 2234                        __ptext26 2F96  
                      __ptext18 14FC                        __ptext27 2EC2                        __ptext19 2A86  
                      __ptext28 2EEA                        __ptext29 2E3A                        __powers_ 0835  
              __size_of_sprintf 0810                        _read_adc 20B6                   __size_of_main 0058  
                      _ricarica 28F4                        _rapporto 008F        __end_of_LCD_write_string 2F5A  
         __CFG_CPUDIV$OSC1_PLL2 000000                      _LCD_cursor 2EC2                        isdigit@c 0003  
                      scale@scl 0030                       sprintf@ap 0064                __tdiv_to_l_@exp1 0011  
                     sprintf@sp 0051                __tdiv_to_l_@cntr 0010                __tdiv_to_l_@quot 000C  
              ___lldiv@dividend 0001       __size_of_inizializzazione 004E                    ?__tdiv_to_l_ 0001  
                      sprintf@c 0078                        sprintf@f 0053                ___lldiv@quotient 0009  
                 ___fladd@signs 0045                    ___fladd@aexp 0046                    ___fladd@bexp 0047  
